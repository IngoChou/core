var ByteArray = require("awayjs-core/lib/utils/ByteArray");

/**
*
*/
var ByteArrayTest = (function () {
    function ByteArrayTest() {
        var b1 = new ByteArray();
        b1.writeByte(0xFF);
        b1.writeByte(0xEE);
        b1.writeByte(0xDD);
        b1.writeByte(0xCC);
        b1.writeByte(0xBB);
        b1.writeByte(0xAA);

        var b2 = new ByteArray();
        b2.writeByte(0x00);
        b2.writeByte(0x00);
        b2.writeByte(0x00);
        b2.writeByte(0x00);
        b2.writeByte(0x00);
        b2.writeByte(0x00);

        b2.position = 0;
        b1.position = 0;

        b1.readBytes(b2, 2, 2);

        console.log('b1.position', b1.position);
        console.log('b2.length', b2.length, 'b2.position', b2.position);

        while (b2.getBytesAvailable()) {
            console.log(b2.readByte().toString(16));
        }
    }
    return ByteArrayTest;
})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzL0J5dGVBcnJheVRlc3QudHMiXSwibmFtZXMiOlsiQnl0ZUFycmF5VGVzdCIsIkJ5dGVBcnJheVRlc3QuY29uc3RydWN0b3IiXSwibWFwcGluZ3MiOiJBQUFBLDBEQUFnRTs7QUFFaEU7O0VBRUc7QUFDSDtJQUVDQTtRQUVDQyxJQUFJQSxFQUFFQSxHQUFhQSxJQUFJQSxTQUFTQSxDQUFDQSxDQUFDQTtRQUNsQ0EsRUFBRUEsQ0FBQ0EsU0FBU0EsQ0FBRUEsSUFBSUEsQ0FBRUE7UUFDcEJBLEVBQUVBLENBQUNBLFNBQVNBLENBQUVBLElBQUlBLENBQUVBO1FBQ3BCQSxFQUFFQSxDQUFDQSxTQUFTQSxDQUFFQSxJQUFJQSxDQUFFQTtRQUNwQkEsRUFBRUEsQ0FBQ0EsU0FBU0EsQ0FBRUEsSUFBSUEsQ0FBRUE7UUFDcEJBLEVBQUVBLENBQUNBLFNBQVNBLENBQUVBLElBQUlBLENBQUVBO1FBQ3BCQSxFQUFFQSxDQUFDQSxTQUFTQSxDQUFFQSxJQUFJQSxDQUFFQTs7UUFFcEJBLElBQUlBLEVBQUVBLEdBQWFBLElBQUlBLFNBQVNBLENBQUNBLENBQUNBO1FBQ2xDQSxFQUFFQSxDQUFDQSxTQUFTQSxDQUFFQSxJQUFJQSxDQUFFQTtRQUNwQkEsRUFBRUEsQ0FBQ0EsU0FBU0EsQ0FBRUEsSUFBSUEsQ0FBRUE7UUFDcEJBLEVBQUVBLENBQUNBLFNBQVNBLENBQUVBLElBQUlBLENBQUVBO1FBQ3BCQSxFQUFFQSxDQUFDQSxTQUFTQSxDQUFFQSxJQUFJQSxDQUFFQTtRQUNwQkEsRUFBRUEsQ0FBQ0EsU0FBU0EsQ0FBRUEsSUFBSUEsQ0FBRUE7UUFDcEJBLEVBQUVBLENBQUNBLFNBQVNBLENBQUVBLElBQUlBLENBQUVBOztRQUVwQkEsRUFBRUEsQ0FBQ0EsUUFBUUEsR0FBR0EsQ0FBQ0E7UUFDZkEsRUFBRUEsQ0FBQ0EsUUFBUUEsR0FBR0EsQ0FBQ0E7O1FBRWZBLEVBQUVBLENBQUNBLFNBQVNBLENBQUVBLEVBQUVBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUVBOztRQUV4QkEsT0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBRUEsYUFBYUEsRUFBR0EsRUFBRUEsQ0FBQ0EsUUFBUUEsQ0FBRUE7UUFDMUNBLE9BQU9BLENBQUNBLEdBQUdBLENBQUVBLFdBQVdBLEVBQUdBLEVBQUVBLENBQUNBLE1BQU1BLEVBQUdBLGFBQWFBLEVBQUdBLEVBQUVBLENBQUNBLFFBQVFBLENBQUVBOztRQUVwRUEsT0FBUUEsRUFBRUEsQ0FBQ0EsaUJBQWlCQSxDQUFDQSxDQUFDQSxDQUM5QkE7WUFDQ0EsT0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBRUEsRUFBRUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsUUFBUUEsQ0FBRUEsRUFBRUEsQ0FBRUEsQ0FBRUE7U0FDM0NBO0lBQ0ZBLENBQUNBO0lBQ0ZELHFCQUFDQTtBQUFEQSxDQUFDQSxJQUFBO0FBQUEiLCJmaWxlIjoidXRpbHMvQnl0ZUFycmF5VGVzdC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcm9iYmF0ZW1hbi9XZWJzdG9ybVByb2plY3RzL2F3YXlqcy1jb3JlLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCeXRlQXJyYXlcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvdXRpbHMvQnl0ZUFycmF5XCIpO1xuXG4vKipcbiAqIFxuICovXG5jbGFzcyBCeXRlQXJyYXlUZXN0XG57XG5cdGNvbnN0cnVjdG9yKClcblx0e1xuXHRcdHZhciBiMTpCeXRlQXJyYXkgPSBuZXcgQnl0ZUFycmF5KCk7XG5cdFx0YjEud3JpdGVCeXRlKCAweEZGICk7XG5cdFx0YjEud3JpdGVCeXRlKCAweEVFICk7XG5cdFx0YjEud3JpdGVCeXRlKCAweEREICk7XG5cdFx0YjEud3JpdGVCeXRlKCAweENDICk7XG5cdFx0YjEud3JpdGVCeXRlKCAweEJCICk7XG5cdFx0YjEud3JpdGVCeXRlKCAweEFBICk7XG5cblx0XHR2YXIgYjI6Qnl0ZUFycmF5ID0gbmV3IEJ5dGVBcnJheSgpO1xuXHRcdGIyLndyaXRlQnl0ZSggMHgwMCApO1xuXHRcdGIyLndyaXRlQnl0ZSggMHgwMCApO1xuXHRcdGIyLndyaXRlQnl0ZSggMHgwMCApO1xuXHRcdGIyLndyaXRlQnl0ZSggMHgwMCApO1xuXHRcdGIyLndyaXRlQnl0ZSggMHgwMCApO1xuXHRcdGIyLndyaXRlQnl0ZSggMHgwMCApO1xuXG5cdFx0YjIucG9zaXRpb24gPSAwO1xuXHRcdGIxLnBvc2l0aW9uID0gMDtcblxuXHRcdGIxLnJlYWRCeXRlcyggYjIsIDIsIDIgKTtcblxuXHRcdGNvbnNvbGUubG9nKCAnYjEucG9zaXRpb24nICwgYjEucG9zaXRpb24gKTtcblx0XHRjb25zb2xlLmxvZyggJ2IyLmxlbmd0aCcgLCBiMi5sZW5ndGggLCAnYjIucG9zaXRpb24nICwgYjIucG9zaXRpb24gKTtcblxuXHRcdHdoaWxlICggYjIuZ2V0Qnl0ZXNBdmFpbGFibGUoKSApXG5cdFx0e1xuXHRcdFx0Y29uc29sZS5sb2coIGIyLnJlYWRCeXRlKCkudG9TdHJpbmcoIDE2ICkgKTtcblx0XHR9XG5cdH1cbn0iXX0=