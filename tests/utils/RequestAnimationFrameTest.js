var RequestAnimationFrame = require("awayjs-core/lib/utils/RequestAnimationFrame");
var RequestAnimationFrameTest = (function () {
    function RequestAnimationFrameTest() {
        var _this = this;
        this.requestAnimationFrameTimer = new RequestAnimationFrame(this.tick, this);
        this.requestAnimationFrameTimer.start();
        document.onmousedown = function (event) { return _this.onMouseDown(event); };
    }
    RequestAnimationFrameTest.prototype.onMouseDown = function (event) {
        console.log('mouseDown');
        if (this.requestAnimationFrameTimer.active)
            this.requestAnimationFrameTimer.stop();
        else
            this.requestAnimationFrameTimer.start();
    };
    RequestAnimationFrameTest.prototype.tick = function (dt) {
        console.log('tick');
    };
    return RequestAnimationFrameTest;
})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzL1JlcXVlc3RBbmltYXRpb25GcmFtZVRlc3QudHMiXSwibmFtZXMiOlsiUmVxdWVzdEFuaW1hdGlvbkZyYW1lVGVzdCIsIlJlcXVlc3RBbmltYXRpb25GcmFtZVRlc3QuY29uc3RydWN0b3IiLCJSZXF1ZXN0QW5pbWF0aW9uRnJhbWVUZXN0Lm9uTW91c2VEb3duIiwiUmVxdWVzdEFuaW1hdGlvbkZyYW1lVGVzdC50aWNrIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFPLHFCQUFxQixXQUFXLDZDQUE2QyxDQUFDLENBQUM7QUFFdEYsSUFBTSx5QkFBeUI7SUFJOUJBLFNBSktBLHlCQUF5QkE7UUFBL0JDLGlCQTBCQ0E7UUFwQkNBLElBQUlBLENBQUNBLDBCQUEwQkEsR0FBR0EsSUFBSUEscUJBQXFCQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxFQUFFQSxJQUFJQSxDQUFDQSxDQUFDQTtRQUM3RUEsSUFBSUEsQ0FBQ0EsMEJBQTBCQSxDQUFDQSxLQUFLQSxFQUFFQSxDQUFBQTtRQUV2Q0EsUUFBUUEsQ0FBQ0EsV0FBV0EsR0FBR0EsVUFBQ0EsS0FBV0EsSUFBS0EsT0FBQUEsS0FBSUEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsRUFBdkJBLENBQXVCQSxDQUFDQTtJQUNqRUEsQ0FBQ0E7SUFFT0QsK0NBQVdBLEdBQW5CQSxVQUFvQkEsS0FBV0E7UUFFOUJFLE9BQU9BLENBQUNBLEdBQUdBLENBQUNBLFdBQVdBLENBQUNBLENBQUNBO1FBRXpCQSxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSwwQkFBMEJBLENBQUNBLE1BQU1BLENBQUNBO1lBQzFDQSxJQUFJQSxDQUFDQSwwQkFBMEJBLENBQUNBLElBQUlBLEVBQUVBLENBQUNBO1FBQ3hDQSxJQUFJQTtZQUNIQSxJQUFJQSxDQUFDQSwwQkFBMEJBLENBQUNBLEtBQUtBLEVBQUVBLENBQUNBO0lBQzFDQSxDQUFDQTtJQUVPRix3Q0FBSUEsR0FBWkEsVUFBYUEsRUFBU0E7UUFFckJHLE9BQU9BLENBQUNBLEdBQUdBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBO0lBQ3JCQSxDQUFDQTtJQUNGSCxnQ0FBQ0E7QUFBREEsQ0ExQkEsQUEwQkNBLElBQUEiLCJmaWxlIjoidXRpbHMvUmVxdWVzdEFuaW1hdGlvbkZyYW1lVGVzdC5qcyIsInNvdXJjZVJvb3QiOiIuL3Rlc3RzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlcXVlc3RBbmltYXRpb25GcmFtZVx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL3V0aWxzL1JlcXVlc3RBbmltYXRpb25GcmFtZVwiKTtcblxuY2xhc3MgUmVxdWVzdEFuaW1hdGlvbkZyYW1lVGVzdFxue1xuXHRwcml2YXRlIHJlcXVlc3RBbmltYXRpb25GcmFtZVRpbWVyOlJlcXVlc3RBbmltYXRpb25GcmFtZTtcblxuXHRjb25zdHJ1Y3RvcigpXG5cdHtcblx0XHR0aGlzLnJlcXVlc3RBbmltYXRpb25GcmFtZVRpbWVyID0gbmV3IFJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnRpY2ssIHRoaXMpO1xuXHRcdHRoaXMucmVxdWVzdEFuaW1hdGlvbkZyYW1lVGltZXIuc3RhcnQoKVxuXG5cdFx0ZG9jdW1lbnQub25tb3VzZWRvd24gPSAoZXZlbnQ6RXZlbnQpID0+IHRoaXMub25Nb3VzZURvd24oZXZlbnQpO1xuXHR9XG5cblx0cHJpdmF0ZSBvbk1vdXNlRG93bihldmVudDpFdmVudClcblx0e1xuXHRcdGNvbnNvbGUubG9nKCdtb3VzZURvd24nKTtcblxuXHRcdGlmICh0aGlzLnJlcXVlc3RBbmltYXRpb25GcmFtZVRpbWVyLmFjdGl2ZSlcblx0XHRcdHRoaXMucmVxdWVzdEFuaW1hdGlvbkZyYW1lVGltZXIuc3RvcCgpO1xuXHRcdGVsc2Vcblx0XHRcdHRoaXMucmVxdWVzdEFuaW1hdGlvbkZyYW1lVGltZXIuc3RhcnQoKTtcblx0fVxuXG5cdHByaXZhdGUgdGljayhkdDpudW1iZXIpXG5cdHtcblx0XHRjb25zb2xlLmxvZygndGljaycpO1xuXHR9XG59Il19