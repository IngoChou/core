var TimerEvent = require("awayjs-core/lib/events/TimerEvent");
var getTimer = require("awayjs-core/lib/utils/getTimer");
var Timer = require("awayjs-core/lib/utils/Timer");
/**
 *
 */
var TimerTest = (function () {
    function TimerTest() {
        var _this = this;
        this.oneSecondTimer = new Timer(1000);
        this.oneSecondTimer.addEventListener(TimerEvent.TIMER, function (event) { return _this.onSecTimerEvent(event); });
        this.oneSecondTimer.start();
        this.repeatTenTimes = new Timer(100, 10);
        this.repeatTenTimes.addEventListener(TimerEvent.TIMER, function (event) { return _this.repeatTenTimesEvent(event); });
        this.repeatTenTimes.addEventListener(TimerEvent.TIMER_COMPLETE, function (event) { return _this.repeatTenTimesComplete(event); });
        this.repeatTenTimes.start();
    }
    TimerTest.prototype.repeatTenTimesEvent = function (event) {
        var t = event.target;
        console.log('repeatTenTimesEvent', t.currentCount);
    };
    TimerTest.prototype.repeatTenTimesComplete = function (event) {
        var t = event.target;
        console.log('repeatTenTimesComplete', t.currentCount);
    };
    TimerTest.prototype.onSecTimerEvent = function (event) {
        console.log('onSecTimerEvent, tick');
        console.log('getTimer() : ', getTimer());
    };
    return TimerTest;
})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzL3RpbWVydGVzdC50cyJdLCJuYW1lcyI6WyJUaW1lclRlc3QiLCJUaW1lclRlc3QuY29uc3RydWN0b3IiLCJUaW1lclRlc3QucmVwZWF0VGVuVGltZXNFdmVudCIsIlRpbWVyVGVzdC5yZXBlYXRUZW5UaW1lc0NvbXBsZXRlIiwiVGltZXJUZXN0Lm9uU2VjVGltZXJFdmVudCJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBTyxVQUFVLFdBQWMsbUNBQW1DLENBQUMsQ0FBQztBQUNwRSxJQUFPLFFBQVEsV0FBZSxnQ0FBZ0MsQ0FBQyxDQUFDO0FBQ2hFLElBQU8sS0FBSyxXQUFlLDZCQUE2QixDQUFDLENBQUM7QUFFMUQsQUFHQTs7R0FERztJQUNHLFNBQVM7SUFLZEEsU0FMS0EsU0FBU0E7UUFBZkMsaUJBa0NDQTtRQTNCQ0EsSUFBSUEsQ0FBQ0EsY0FBY0EsR0FBR0EsSUFBSUEsS0FBS0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7UUFDdENBLElBQUlBLENBQUNBLGNBQWNBLENBQUNBLGdCQUFnQkEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsS0FBS0EsRUFBRUEsVUFBQ0EsS0FBZ0JBLElBQUtBLE9BQUFBLEtBQUlBLENBQUNBLGVBQWVBLENBQUNBLEtBQUtBLENBQUNBLEVBQTNCQSxDQUEyQkEsQ0FBQ0EsQ0FBQ0E7UUFDMUdBLElBQUlBLENBQUNBLGNBQWNBLENBQUNBLEtBQUtBLEVBQUVBLENBQUNBO1FBRTVCQSxJQUFJQSxDQUFDQSxjQUFjQSxHQUFHQSxJQUFJQSxLQUFLQSxDQUFDQSxHQUFHQSxFQUFFQSxFQUFFQSxDQUFDQSxDQUFDQTtRQUN6Q0EsSUFBSUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxVQUFVQSxDQUFDQSxLQUFLQSxFQUFFQSxVQUFDQSxLQUFnQkEsSUFBS0EsT0FBQUEsS0FBSUEsQ0FBQ0EsbUJBQW1CQSxDQUFDQSxLQUFLQSxDQUFDQSxFQUEvQkEsQ0FBK0JBLENBQUNBLENBQUNBO1FBQzlHQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxnQkFBZ0JBLENBQUNBLFVBQVVBLENBQUNBLGNBQWNBLEVBQUVBLFVBQUNBLEtBQWdCQSxJQUFLQSxPQUFBQSxLQUFJQSxDQUFDQSxzQkFBc0JBLENBQUNBLEtBQUtBLENBQUNBLEVBQWxDQSxDQUFrQ0EsQ0FBQ0EsQ0FBQ0E7UUFDMUhBLElBQUlBLENBQUNBLGNBQWNBLENBQUNBLEtBQUtBLEVBQUVBLENBQUNBO0lBQzdCQSxDQUFDQTtJQUVPRCx1Q0FBbUJBLEdBQTNCQSxVQUE0QkEsS0FBZ0JBO1FBRTNDRSxJQUFJQSxDQUFDQSxHQUFpQkEsS0FBS0EsQ0FBQ0EsTUFBTUEsQ0FBQ0E7UUFDbkNBLE9BQU9BLENBQUNBLEdBQUdBLENBQUNBLHFCQUFxQkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsWUFBWUEsQ0FBQ0EsQ0FBQ0E7SUFDcERBLENBQUNBO0lBRU9GLDBDQUFzQkEsR0FBOUJBLFVBQStCQSxLQUFnQkE7UUFFOUNHLElBQUlBLENBQUNBLEdBQWlCQSxLQUFLQSxDQUFDQSxNQUFNQSxDQUFDQTtRQUNuQ0EsT0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBQ0Esd0JBQXdCQSxFQUFFQSxDQUFDQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFDQTtJQUN2REEsQ0FBQ0E7SUFFT0gsbUNBQWVBLEdBQXZCQSxVQUF3QkEsS0FBZ0JBO1FBRXZDSSxPQUFPQSxDQUFDQSxHQUFHQSxDQUFDQSx1QkFBdUJBLENBQUNBLENBQUNBO1FBQ3JDQSxPQUFPQSxDQUFDQSxHQUFHQSxDQUFDQSxlQUFlQSxFQUFFQSxRQUFRQSxFQUFFQSxDQUFDQSxDQUFDQTtJQUMxQ0EsQ0FBQ0E7SUFDRkosZ0JBQUNBO0FBQURBLENBbENBLEFBa0NDQSxJQUFBIiwiZmlsZSI6InV0aWxzL1RpbWVyVGVzdC5qcyIsInNvdXJjZVJvb3QiOiIuL3Rlc3RzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRpbWVyRXZlbnRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9ldmVudHMvVGltZXJFdmVudFwiKTtcbmltcG9ydCBnZXRUaW1lclx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvdXRpbHMvZ2V0VGltZXJcIik7XG5pbXBvcnQgVGltZXJcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL3V0aWxzL1RpbWVyXCIpO1xuXG4vKipcbiAqIFxuICovXG5jbGFzcyBUaW1lclRlc3Rcbntcblx0cHJpdmF0ZSBvbmVTZWNvbmRUaW1lcjpUaW1lcjtcblx0cHJpdmF0ZSByZXBlYXRUZW5UaW1lczpUaW1lcjtcblxuXHRjb25zdHJ1Y3RvcigpXG5cdHtcblx0XHR0aGlzLm9uZVNlY29uZFRpbWVyID0gbmV3IFRpbWVyKDEwMDApO1xuXHRcdHRoaXMub25lU2Vjb25kVGltZXIuYWRkRXZlbnRMaXN0ZW5lcihUaW1lckV2ZW50LlRJTUVSLCAoZXZlbnQ6VGltZXJFdmVudCkgPT4gdGhpcy5vblNlY1RpbWVyRXZlbnQoZXZlbnQpKTtcblx0XHR0aGlzLm9uZVNlY29uZFRpbWVyLnN0YXJ0KCk7XG5cblx0XHR0aGlzLnJlcGVhdFRlblRpbWVzID0gbmV3IFRpbWVyKDEwMCwgMTApO1xuXHRcdHRoaXMucmVwZWF0VGVuVGltZXMuYWRkRXZlbnRMaXN0ZW5lcihUaW1lckV2ZW50LlRJTUVSLCAoZXZlbnQ6VGltZXJFdmVudCkgPT4gdGhpcy5yZXBlYXRUZW5UaW1lc0V2ZW50KGV2ZW50KSk7XG5cdFx0dGhpcy5yZXBlYXRUZW5UaW1lcy5hZGRFdmVudExpc3RlbmVyKFRpbWVyRXZlbnQuVElNRVJfQ09NUExFVEUsIChldmVudDpUaW1lckV2ZW50KSA9PiB0aGlzLnJlcGVhdFRlblRpbWVzQ29tcGxldGUoZXZlbnQpKTtcblx0XHR0aGlzLnJlcGVhdFRlblRpbWVzLnN0YXJ0KCk7XG5cdH1cblxuXHRwcml2YXRlIHJlcGVhdFRlblRpbWVzRXZlbnQoZXZlbnQ6VGltZXJFdmVudCk6dm9pZFxuXHR7XG5cdFx0dmFyIHQ6VGltZXIgPSA8VGltZXI+IGV2ZW50LnRhcmdldDtcblx0XHRjb25zb2xlLmxvZygncmVwZWF0VGVuVGltZXNFdmVudCcsIHQuY3VycmVudENvdW50KTtcblx0fVxuXG5cdHByaXZhdGUgcmVwZWF0VGVuVGltZXNDb21wbGV0ZShldmVudDpUaW1lckV2ZW50KTp2b2lkXG5cdHtcblx0XHR2YXIgdDpUaW1lciA9IDxUaW1lcj4gZXZlbnQudGFyZ2V0O1xuXHRcdGNvbnNvbGUubG9nKCdyZXBlYXRUZW5UaW1lc0NvbXBsZXRlJywgdC5jdXJyZW50Q291bnQpO1xuXHR9XG5cblx0cHJpdmF0ZSBvblNlY1RpbWVyRXZlbnQoZXZlbnQ6VGltZXJFdmVudCk6dm9pZFxuXHR7XG5cdFx0Y29uc29sZS5sb2coJ29uU2VjVGltZXJFdmVudCwgdGljaycpO1xuXHRcdGNvbnNvbGUubG9nKCdnZXRUaW1lcigpIDogJywgZ2V0VGltZXIoKSk7XG5cdH1cbn0iXX0=