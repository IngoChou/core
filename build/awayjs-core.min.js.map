{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "awayjs-core.js",
    "../index.ts",
    "lib/lib/attributes/AttributesBuffer.ts",
    "lib/lib/attributes/AttributesView.ts",
    "lib/lib/attributes/Byte4Attributes.ts",
    "lib/lib/attributes/Float1Attributes.ts",
    "lib/lib/attributes/Float2Attributes.ts",
    "lib/lib/attributes/Float3Attributes.ts",
    "lib/lib/attributes/Float4Attributes.ts",
    "lib/lib/attributes/Short2Attributes.ts",
    "lib/lib/attributes/Short3Attributes.ts",
    "lib/attributes.ts",
    "lib/lib/audio/WaveAudio.ts",
    "lib/audio.ts",
    "lib/lib/errors/AbstractMethodError.ts",
    "lib/lib/errors/ArgumentError.ts",
    "lib/lib/errors/DocumentError.ts",
    "lib/lib/errors/ErrorBase.ts",
    "lib/lib/errors/PartialImplementationError.ts",
    "lib/lib/errors/RangeError.ts",
    "lib/errors.ts",
    "lib/lib/events/AssetEvent.ts",
    "lib/lib/events/EventBase.ts",
    "lib/lib/events/EventDispatcher.ts",
    "lib/lib/events/LoaderEvent.ts",
    "lib/lib/events/ParserEvent.ts",
    "lib/lib/events/ProjectionEvent.ts",
    "lib/lib/events/TimerEvent.ts",
    "lib/lib/events/URLLoaderEvent.ts",
    "lib/events.ts",
    "lib/lib/geom/Box.ts",
    "lib/lib/geom/ColorTransform.ts",
    "lib/lib/geom/MathConsts.ts",
    "lib/lib/geom/Matrix3DUtils.ts",
    "lib/lib/geom/Matrix3D.ts",
    "lib/lib/geom/Matrix.ts",
    "lib/lib/geom/Orientation3D.ts",
    "lib/lib/geom/Plane3D.ts",
    "lib/lib/geom/PlaneClassification.ts",
    "lib/lib/geom/Point.ts",
    "lib/lib/geom/PoissonLookup.ts",
    "lib/lib/geom/Quaternion.ts",
    "lib/lib/geom/Rectangle.ts",
    "lib/lib/geom/Sphere.ts",
    "lib/lib/geom/Vector3D.ts",
    "lib/geom.ts",
    "lib/lib/image/BitmapImage2D.ts",
    "lib/lib/image/BitmapImageChannel.ts",
    "lib/lib/image/BitmapImageCube.ts",
    "lib/lib/image/BlendMode.ts",
    "lib/lib/image/CPUCanvas.ts",
    "lib/lib/image/CPURenderingContext2D.ts",
    "lib/lib/image/Image2D.ts",
    "lib/lib/image/ImageBase.ts",
    "lib/lib/image/ImageCube.ts",
    "lib/lib/image/ImageData.ts",
    "lib/lib/image/Sampler2D.ts",
    "lib/lib/image/SamplerBase.ts",
    "lib/lib/image/SamplerCube.ts",
    "lib/lib/image/SpecularImage2D.ts",
    "lib/image.ts",
    "lib/lib/library/AbstractionBase.ts",
    "lib/lib/library/AssetBase.ts",
    "lib/lib/library/AssetLibraryBundle.ts",
    "lib/lib/library/AssetLibraryIterator.ts",
    "lib/lib/library/AssetLibrary.ts",
    "lib/lib/library/ConflictPrecedence.ts",
    "lib/lib/library/ConflictStrategyBase.ts",
    "lib/lib/library/ConflictStrategy.ts",
    "lib/lib/library/ErrorConflictStrategy.ts",
    "lib/lib/library/IDUtil.ts",
    "lib/lib/library/IgnoreConflictStrategy.ts",
    "lib/lib/library/LoaderContext.ts",
    "lib/lib/library/LoaderInfo.ts",
    "lib/lib/library/Loader.ts",
    "lib/lib/library/NumSuffixConflictStrategy.ts",
    "lib/library.ts",
    "lib/lib/managers/AudioChannel.ts",
    "lib/lib/managers/AudioManager.ts",
    "lib/lib/managers/EventAudioChannel.ts",
    "lib/lib/managers/StreamingAudioChannel.ts",
    "lib/lib/managers/WebAudioChannel.ts",
    "lib/managers.ts",
    "lib/lib/net/CrossDomainPolicy.ts",
    "lib/lib/net/URLLoaderDataFormat.ts",
    "lib/lib/net/URLLoader.ts",
    "lib/lib/net/URLRequestMethod.ts",
    "lib/lib/net/URLRequest.ts",
    "lib/lib/net/URLVariables.ts",
    "lib/net.ts",
    "lib/lib/parsers/Image2DParser.ts",
    "lib/lib/parsers/ImageCubeParser.ts",
    "lib/lib/parsers/ParserBase.ts",
    "lib/lib/parsers/ParserDataFormat.ts",
    "lib/lib/parsers/ParserUtils.ts",
    "lib/lib/parsers/ResourceDependency.ts",
    "lib/lib/parsers/TextureAtlasParser.ts",
    "lib/lib/parsers/WaveAudioParser.ts",
    "lib/parsers.ts",
    "lib/lib/projections/CoordinateSystem.ts",
    "lib/lib/projections/FreeMatrixProjection.ts",
    "lib/lib/projections/ObliqueNearPlaneProjection.ts",
    "lib/lib/projections/OrthographicOffCenterProjection.ts",
    "lib/lib/projections/OrthographicProjection.ts",
    "lib/lib/projections/PerspectiveProjection.ts",
    "lib/lib/projections/ProjectionBase.ts",
    "lib/projections.ts",
    "lib/lib/ui/Keyboard.ts",
    "lib/ui.ts",
    "lib/lib/utils/BitmapImageUtils.ts",
    "lib/lib/utils/ByteArrayBase.ts",
    "lib/lib/utils/ByteArrayBuffer.ts",
    "lib/lib/utils/ByteArray.ts",
    "lib/lib/utils/CSS.ts",
    "lib/lib/utils/ColorUtils.ts",
    "lib/lib/utils/Debug.ts",
    "lib/lib/utils/Extensions.ts",
    "lib/lib/utils/ImageUtils.ts",
    "lib/lib/utils/MipmapGenerator.ts",
    "lib/lib/utils/RequestAnimationFrame.ts",
    "lib/lib/utils/Timer.ts",
    "lib/lib/utils/XmlUtils.ts",
    "lib/lib/utils/getTimer.ts",
    "lib/utils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    1,
    "module",
    "attributes",
    "audio",
    "errors",
    "events",
    "geom",
    "image",
    "library",
    "managers",
    "net",
    "parsers",
    "projections",
    "ui",
    "utils",
    "Loader",
    "enableParser",
    "Image2DParser",
    "ImageCubeParser",
    "TextureAtlasParser",
    "WaveAudioParser",
    "./lib/attributes",
    "./lib/audio",
    "./lib/errors",
    "./lib/events",
    "./lib/geom",
    "./lib/image",
    "./lib/library",
    "./lib/managers",
    "./lib/net",
    "./lib/parsers",
    "./lib/projections",
    "./lib/ui",
    "./lib/utils",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "Object",
    "create",
    "AssetBase_1",
    "AttributesBuffer",
    "_super",
    "stride",
    "count",
    "_count",
    "_stride",
    "_newStride",
    "_viewVOs",
    "Array",
    "_buffer",
    "ArrayBuffer",
    "_bufferView",
    "Uint8Array",
    "byteLength",
    "defineProperty",
    "get",
    "assetType",
    "enumerable",
    "configurable",
    "_lengthDirty",
    "_updateLength",
    "set",
    "value",
    "resize",
    "_contentDirty",
    "buffer",
    "invalidate",
    "clear",
    "clone",
    "attributesBuffer",
    "bufferView",
    "len",
    "view",
    "_internalClone",
    "getView",
    "index",
    "_setAttributes",
    "viewIndex",
    "arrayBufferView",
    "offset",
    "array",
    "viewVO",
    "vLength",
    "vOffset",
    "vCount",
    "subarray",
    "_addView",
    "ViewVO",
    "push",
    "_index",
    "_removeView",
    "splice",
    "dispose",
    "_getOffset",
    "j",
    "newLength",
    "newBuffer",
    "newView",
    "vOldOffset",
    "oldOffset",
    "Math",
    "min",
    "AssetBase",
    "size",
    "dimensions",
    "../library/AssetBase",
    "awayjs-core/lib/attributes/AttributesView",
    "AttributesBuffer_1",
    "AttributesView",
    "arrayClass",
    "attributesBufferCount",
    "unsigned",
    "_arrayClass",
    "_size",
    "BYTES_PER_ELEMENT",
    "_dimensions",
    "_attributesBuffer",
    "_unsigned",
    "values",
    "_cloneCache",
    "cloneCache",
    "../attributes/AttributesBuffer",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "AttributesView_1",
    "Byte4Attributes",
    "attributesBufferLength",
    "Int8Array",
    "../attributes/AttributesView",
    "awayjs-core/lib/attributes/Float1Attributes",
    "Float1Attributes",
    "Float32Array",
    "awayjs-core/lib/attributes/Float2Attributes",
    "Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "Float3Attributes",
    "awayjs-core/lib/attributes/Float4Attributes",
    "Float4Attributes",
    "awayjs-core/lib/attributes/Short2Attributes",
    "Short2Attributes",
    "Uint16Array",
    "Int16Array",
    "awayjs-core/lib/attributes/Short3Attributes",
    "Short3Attributes",
    "awayjs-core/lib/attributes",
    "Byte4Attributes_1",
    "Float1Attributes_1",
    "Float2Attributes_1",
    "Float3Attributes_1",
    "Float4Attributes_1",
    "Short2Attributes_1",
    "Short3Attributes_1",
    "./attributes/AttributesBuffer",
    "./attributes/AttributesView",
    "./attributes/Byte4Attributes",
    "./attributes/Float1Attributes",
    "./attributes/Float2Attributes",
    "./attributes/Float3Attributes",
    "./attributes/Float4Attributes",
    "./attributes/Short2Attributes",
    "./attributes/Short3Attributes",
    "awayjs-core/lib/audio/WaveAudio",
    "AudioManager_1",
    "WaveAudio",
    "_volume",
    "_audioChannel",
    "volume",
    "currentTime",
    "duration",
    "stop",
    "play",
    "loop",
    "AudioManager",
    "getChannel",
    "id",
    "newInstance",
    "name",
    "../managers/AudioManager",
    "awayjs-core/lib/audio",
    "WaveAudio_1",
    "./audio/WaveAudio",
    "awayjs-core/lib/errors/AbstractMethodError",
    "ErrorBase_1",
    "AbstractMethodError",
    "message",
    "ErrorBase",
    "../errors/ErrorBase",
    "awayjs-core/lib/errors/ArgumentError",
    "ArgumentError",
    "awayjs-core/lib/errors/DocumentError",
    "DocumentError",
    "DOCUMENT_DOES_NOT_EXIST",
    "awayjs-core/lib/errors/ErrorBase",
    "_name",
    "_errorID",
    "_messsage",
    "awayjs-core/lib/errors/PartialImplementationError",
    "PartialImplementationError",
    "dependency",
    "awayjs-core/lib/errors/RangeError",
    "RangeError",
    "awayjs-core/lib/errors",
    "AbstractMethodError_1",
    "ArgumentError_1",
    "DocumentError_1",
    "PartialImplementationError_1",
    "RangeError_1",
    "./errors/AbstractMethodError",
    "./errors/ArgumentError",
    "./errors/DocumentError",
    "./errors/ErrorBase",
    "./errors/PartialImplementationError",
    "./errors/RangeError",
    "awayjs-core/lib/events/AssetEvent",
    "EventBase_1",
    "AssetEvent",
    "type",
    "asset",
    "prevName",
    "_asset",
    "_prevName",
    "INVALIDATE",
    "DISPOSE",
    "CLEAR",
    "RENAME",
    "ENTER_FRAME",
    "EXIT_FRAME",
    "ASSET_CONFLICT_RESOLVED",
    "ASSET_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "EventBase",
    "../events/EventBase",
    "awayjs-core/lib/events/EventBase",
    "undefined",
    "target",
    "awayjs-core/lib/events/EventDispatcher",
    "EventDispatcher",
    "listenerObjects",
    "addEventListener",
    "listener",
    "ListenerObject",
    "removeEventListener",
    "numListeners",
    "dispatchEvent",
    "event",
    "hasEventListener",
    "getEventListenerIndex",
    "listeners",
    "default",
    "awayjs-core/lib/events/IEventDispatcher",
    "awayjs-core/lib/events/LoaderEvent",
    "LoaderEvent",
    "url",
    "content",
    "assets",
    "_url",
    "_content",
    "_assets",
    "LOAD_COMPLETE",
    "awayjs-core/lib/events/ParserEvent",
    "ParserEvent",
    "_message",
    "PARSE_COMPLETE",
    "PARSE_ERROR",
    "READY_FOR_DEPENDENCIES",
    "awayjs-core/lib/events/ProjectionEvent",
    "ProjectionEvent",
    "projection",
    "_projection",
    "MATRIX_CHANGED",
    "awayjs-core/lib/events/TimerEvent",
    "TimerEvent",
    "TIMER",
    "TIMER_COMPLETE",
    "awayjs-core/lib/events/URLLoaderEvent",
    "URLLoaderEvent",
    "urlLoader",
    "_urlLoader",
    "HTTP_STATUS",
    "LOAD_ERROR",
    "LOAD_PROGRESS",
    "LOAD_START",
    "awayjs-core/lib/events",
    "AssetEvent_1",
    "EventDispatcher_1",
    "LoaderEvent_1",
    "ParserEvent_1",
    "ProjectionEvent_1",
    "TimerEvent_1",
    "URLLoaderEvent_1",
    "./events/AssetEvent",
    "./events/EventBase",
    "./events/EventDispatcher",
    "./events/LoaderEvent",
    "./events/ParserEvent",
    "./events/ProjectionEvent",
    "./events/TimerEvent",
    "./events/URLLoaderEvent",
    "awayjs-core/lib/geom/Box",
    "Vector3D_1",
    "Box",
    "x",
    "y",
    "z",
    "width",
    "height",
    "depth",
    "val",
    "_bottomRightBack",
    "Vector3D",
    "_topLeftFront",
    "contains",
    "containsPoint",
    "position",
    "containsBox",
    "box",
    "copyFrom",
    "sourceBox",
    "equals",
    "toCompare",
    "inflate",
    "dx",
    "dy",
    "dz",
    "inflatePoint",
    "delta",
    "intersection",
    "toIntersect",
    "intersects",
    "rayIntersection",
    "direction",
    "targetNormal",
    "halfExtentsX",
    "halfExtentsY",
    "halfExtentsZ",
    "centerX",
    "centerY",
    "centerZ",
    "px",
    "py",
    "pz",
    "vx",
    "vy",
    "vz",
    "ix",
    "iy",
    "iz",
    "rayEntryDistance",
    "closestPointToPoint",
    "point",
    "isEmpty",
    "offsetPosition",
    "setEmpty",
    "setBoundIdentity",
    "Number",
    "MAX_VALUE",
    "setTo",
    "xa",
    "ya",
    "za",
    "widtha",
    "heighta",
    "deptha",
    "toString",
    "union",
    "toUnion",
    "../geom/Vector3D",
    "awayjs-core/lib/geom/ColorTransform",
    "ColorUtils_1",
    "ColorTransform",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "rawData",
    "copyRawDataFrom",
    "argb",
    "ColorUtils",
    "float32ColorToARGB",
    "vector",
    "c",
    "source",
    "copyTo",
    "destination",
    "prepend",
    "ct",
    "_isRenderable",
    "../utils/ColorUtils",
    "awayjs-core/lib/geom/MathConsts",
    "MathConsts",
    "RADIANS_TO_DEGREES",
    "PI",
    "DEGREES_TO_RADIANS",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "Matrix3D_1",
    "Matrix3DUtils",
    "quaternion2matrix",
    "quarternion",
    "m",
    "w",
    "xx",
    "xy",
    "xz",
    "xw",
    "yy",
    "yz",
    "yw",
    "zz",
    "zw",
    "raw",
    "RAW_DATA_CONTAINER",
    "Matrix3D",
    "getForward",
    "v",
    "copyColumnTo",
    "normalize",
    "getUp",
    "getRight",
    "compare",
    "m1",
    "m2",
    "r1",
    "r2",
    "copyRawDataTo",
    "lookAt",
    "matrix",
    "pos",
    "dir",
    "up",
    "dirN",
    "upN",
    "lftN",
    "crossProduct",
    "dotProduct",
    "reflection",
    "plane",
    "ab2",
    "ac2",
    "bc2",
    "transformVector",
    "result",
    "g",
    "k",
    "h",
    "deltaTransformVector",
    "getTranslation",
    "transform",
    "deltaTransformVectors",
    "vin",
    "vout",
    "outIndex",
    "CALCULATION_MATRIX",
    "../geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3D",
    "Box_1",
    "MathConsts_1",
    "Orientation3D_1",
    "_position",
    "_positionDirty",
    "identity",
    "append",
    "lhs",
    "lrd",
    "m111",
    "m112",
    "m113",
    "m114",
    "m121",
    "m122",
    "m123",
    "m124",
    "m131",
    "m132",
    "m133",
    "m134",
    "m141",
    "m142",
    "m143",
    "m144",
    "m211",
    "m212",
    "m213",
    "m214",
    "m221",
    "m222",
    "m223",
    "m224",
    "m231",
    "m232",
    "m233",
    "m234",
    "m241",
    "m242",
    "m243",
    "m244",
    "appendRotation",
    "degrees",
    "axis",
    "getAxisRotation",
    "appendSkew",
    "xSkew",
    "ySkew",
    "zSkew",
    "tempRawData",
    "tempMatrix",
    "appendScale",
    "xScale",
    "yScale",
    "zScale",
    "appendTranslation",
    "copyColumnFrom",
    "column",
    "vector3D",
    "sourceRaw",
    "targetRaw",
    "transpose",
    "copyRowFrom",
    "row",
    "copyRowTo",
    "decompose",
    "orientationStyle",
    "q",
    "_components",
    "colX",
    "colY",
    "colZ",
    "scale",
    "skew",
    "scaleBy",
    "combine",
    "rot",
    "Orientation3D",
    "AXIS_ANGLE",
    "acos",
    "sqrt",
    "QUATERNION",
    "tr",
    "EULER_ANGLES",
    "asin",
    "atan2",
    "interpolate",
    "thisMat",
    "toMat",
    "percent",
    "interpolateTo",
    "invert",
    "determinant",
    "invertable",
    "abs",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "m41",
    "m42",
    "m43",
    "m44",
    "rhs",
    "prependRotation",
    "prependScale",
    "prependTranslation",
    "recompose",
    "components",
    "sin",
    "cos",
    "rotation",
    "angle",
    "transformBox",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "transformVectors",
    "rad",
    "tmp1",
    "tmp2",
    "invalidatePosition",
    "toFixed",
    "decimalPlace",
    "magnitude",
    "pow",
    "round",
    "../errors/ArgumentError",
    "../geom/Box",
    "../geom/MathConsts",
    "../geom/Orientation3D",
    "awayjs-core/lib/geom/Matrix",
    "Point_1",
    "Matrix",
    "tx",
    "ty",
    "concat",
    "a1",
    "c1",
    "tx1",
    "sourceMatrix",
    "createBox",
    "scaleX",
    "scaleY",
    "createGradientBox",
    "deltaTransformPoint",
    "Point",
    "norm",
    "multiply",
    "rotate",
    "sx",
    "sy",
    "transformPoint",
    "translate",
    "../geom/Point",
    "awayjs-core/lib/geom/Orientation3D",
    "awayjs-core/lib/geom/Plane3D",
    "PlaneClassification_1",
    "Plane3D",
    "_iAlignment",
    "ALIGN_XY_AXIS",
    "ALIGN_YZ_AXIS",
    "ALIGN_XZ_AXIS",
    "ALIGN_ANY",
    "fromPoints",
    "p0",
    "p1",
    "p2",
    "d1x",
    "d1y",
    "d1z",
    "d2x",
    "d2y",
    "d2z",
    "fromNormalAndPoint",
    "normal",
    "distance",
    "classifyPoint",
    "epsilon",
    "PlaneClassification",
    "FRONT",
    "BACK",
    "INTERSECT",
    "../geom/PlaneClassification",
    "awayjs-core/lib/geom/PlaneClassification",
    "IN",
    "OUT",
    "awayjs-core/lib/geom/Point",
    "add",
    "sourcePoint",
    "thickness",
    "invLength",
    "subtract",
    "pt1",
    "pt2",
    "polar",
    "awayjs-core/lib/geom/PoissonLookup",
    "PoissonLookup",
    "initDistributions",
    "_distributions",
    "getDistribution",
    "awayjs-core/lib/geom/Quaternion",
    "Matrix3DUtils_1",
    "Quaternion",
    "qa",
    "qb",
    "w1",
    "x1",
    "y1",
    "z1",
    "w2",
    "x2",
    "y2",
    "z2",
    "multiplyVector",
    "fromAxisAngle",
    "sin_a",
    "cos_a",
    "slerp",
    "dot",
    "s1",
    "s2",
    "lerp",
    "fromEulerAngles",
    "ax",
    "ay",
    "az",
    "halfX",
    "halfY",
    "halfZ",
    "cosX",
    "sinX",
    "cosY",
    "sinY",
    "cosZ",
    "sinZ",
    "toEulerAngles",
    "mag",
    "toMatrix3D",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "ww",
    "fromMatrix",
    "toRawData",
    "exclude4thRow",
    "rotatePoint",
    "../geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Rectangle",
    "Rectangle",
    "_bottomRight",
    "_topLeft",
    "containsRect",
    "rect",
    "sourceRect",
    "offsetPoint",
    "awayjs-core/lib/geom/Sphere",
    "Sphere",
    "radius",
    "det",
    "sqrtDet",
    "awayjs-core/lib/geom/Vector3D",
    "lengthSquared",
    "angleBetween",
    "ascl",
    "bscl",
    "src",
    "decrementBy",
    "allFour",
    "incrementBy",
    "nearEquals",
    "tolerance",
    "negate",
    "project",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "awayjs-core/lib/geom",
    "ColorTransform_1",
    "Matrix_1",
    "Plane3D_1",
    "PoissonLookup_1",
    "Quaternion_1",
    "Rectangle_1",
    "Sphere_1",
    "./geom/Box",
    "./geom/ColorTransform",
    "./geom/MathConsts",
    "./geom/Matrix",
    "./geom/Matrix3D",
    "./geom/Matrix3DUtils",
    "./geom/Orientation3D",
    "./geom/Plane3D",
    "./geom/PlaneClassification",
    "./geom/Point",
    "./geom/PoissonLookup",
    "./geom/Quaternion",
    "./geom/Rectangle",
    "./geom/Sphere",
    "./geom/Vector3D",
    "awayjs-core/lib/image/BitmapImage2D",
    "Image2D_1",
    "BitmapImageUtils_1",
    "CPUCanvas_1",
    "BitmapImage2D",
    "transparent",
    "fillColor",
    "powerOfTwo",
    "_locked",
    "_transparent",
    "document",
    "_imageCanvas",
    "createElement",
    "CPUCanvas",
    "_context",
    "getContext",
    "fillRect",
    "_rect",
    "_imageDataDirty",
    "draw",
    "colorTransform",
    "_imageData",
    "getImageData",
    "data",
    "putImageData",
    "copyChannel",
    "sourceBitmap",
    "destPoint",
    "sourceChannel",
    "destChannel",
    "imageData",
    "sourceData",
    "destData",
    "sourceOffset",
    "log",
    "destOffset",
    "sourceIndex",
    "destIndex",
    "copyPixels",
    "destRect",
    "getCanvas",
    "BitmapImageUtils",
    "_copyPixels",
    "blendMode",
    "clipRect",
    "smoothing",
    "_draw",
    "color",
    "_fillRect",
    "getPixel",
    "pixelData",
    "getPixel32",
    "getPixelData",
    "imagePixel",
    "setPixelData",
    "lock",
    "setArray",
    "inputArray",
    "setPixel",
    "setPixel32",
    "setPixels",
    "input",
    "unlock",
    "_setSize",
    "Image2D",
    "../image/CPUCanvas",
    "../image/Image2D",
    "../utils/BitmapImageUtils",
    "awayjs-core/lib/image/BitmapImageChannel",
    "BitmapImageChannel",
    "ALPHA",
    "BLUE",
    "GREEN",
    "RED",
    "awayjs-core/lib/image/BitmapImageCube",
    "BitmapImage2D_1",
    "ImageCube_1",
    "BitmapImageCube",
    "side",
    "inputByteArray",
    "readUnsignedInt",
    "posX",
    "negX",
    "posY",
    "negY",
    "posZ",
    "negZ",
    "ImageCube",
    "../geom/Rectangle",
    "../image/BitmapImage2D",
    "../image/ImageCube",
    "awayjs-core/lib/image/BlendMode",
    "BlendMode",
    "ADD",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "NORMAL",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "SUBTRACT",
    "awayjs-core/lib/image/CPUCanvas",
    "CPURenderingContext2D_1",
    "ImageData_1",
    "reset",
    "contextId",
    "args",
    "_i",
    "arguments",
    "CPURenderingContext2D",
    "ImageData",
    "../image/CPURenderingContext2D",
    "../image/ImageData",
    "awayjs-core/lib/image/CPURenderingContext2D",
    "cpuCanvas",
    "point2",
    "restore",
    "setTransform",
    "save",
    "arc",
    "startAngle",
    "endAngle",
    "anticlockwise",
    "measureText",
    "text",
    "isPointInPath",
    "fillRule",
    "quadraticCurveTo",
    "cpx",
    "cpy",
    "imagedata",
    "dirtyX",
    "dirtyY",
    "dirtyWidth",
    "dirtyHeight",
    "fillText",
    "maxWidth",
    "createRadialGradient",
    "x0",
    "y0",
    "r0",
    "ellipse",
    "radiusX",
    "radiusY",
    "lineTo",
    "getLineDash",
    "fill",
    "createImageData",
    "imageDataOrSw",
    "sh",
    "createPattern",
    "repetition",
    "closePath",
    "clip",
    "clearRect",
    "moveTo",
    "sw",
    "applyPixel32",
    "floor",
    "copyPixel32",
    "fromX",
    "fromY",
    "fromIndex",
    "fillStyle",
    "parsedFillStyle",
    "colorStrings",
    "substring",
    "lastIndexOf",
    "split",
    "parsedA",
    "parseFloat",
    "parsedR",
    "parseInt",
    "parsedG",
    "parsedB",
    "bezierCurveTo",
    "cp1x",
    "cp1y",
    "cp2x",
    "cp2y",
    "drawImage",
    "offsetX",
    "offsetY",
    "canvasOffsetX",
    "canvasOffsetY",
    "canvasImageWidth",
    "canvasImageHeight",
    "indexOf",
    "bitmap",
    "drawBitmap",
    "htmlImage",
    "htmlCanvas",
    "htmlContext",
    "htmlImageData",
    "resultBitmap",
    "passBitmap",
    "canvas",
    "canvasImageData",
    "sampleBilinear",
    "sampleBox",
    "sample",
    "stroke",
    "strokeRect",
    "setLineDash",
    "segments",
    "strokeText",
    "beginPath",
    "arcTo",
    "createLinearGradient",
    "texture",
    "texelSizeX",
    "texelSizeY",
    "color00",
    "color10",
    "color01",
    "color11",
    "interColor0",
    "interpolateColor",
    "interColor1",
    "area",
    "xsize",
    "ysize",
    "toY",
    "ceil",
    "max",
    "toX",
    "../geom/Matrix",
    "awayjs-core/lib/image/IImageCanvas",
    "awayjs-core/lib/image/Image2D",
    "ImageBase_1",
    "ImageUtils_1",
    "_powerOfTwo",
    "_testDimensions",
    "ImageUtils",
    "isDimensionValid",
    "ImageBase",
    "../image/ImageBase",
    "../utils/ImageUtils",
    "awayjs-core/lib/image/ImageBase",
    "_pFormat",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-core/lib/image/ImageData",
    "awayjs-core/lib/image/Sampler2D",
    "SamplerBase_1",
    "Sampler2D",
    "repeat",
    "smooth",
    "mipmap",
    "_repeat",
    "_updateRect",
    "_imageRect",
    "_frameRect",
    "SamplerBase",
    "../image/SamplerBase",
    "awayjs-core/lib/image/SamplerBase",
    "_smooth",
    "_mipmap",
    "awayjs-core/lib/image/SamplerCube",
    "SamplerCube",
    "awayjs-core/lib/image/SpecularImage2D",
    "BitmapImageChannel_1",
    "SpecularImage2D",
    "specularSource",
    "glossSource",
    "_specularSource",
    "_glossSource",
    "_output",
    "_testSize",
    "origin",
    "../image/BitmapImageChannel",
    "awayjs-core/lib/image",
    "BitmapImageCube_1",
    "BlendMode_1",
    "Sampler2D_1",
    "SamplerCube_1",
    "SpecularImage2D_1",
    "./image/BitmapImage2D",
    "./image/BitmapImageChannel",
    "./image/BitmapImageCube",
    "./image/BlendMode",
    "./image/CPUCanvas",
    "./image/CPURenderingContext2D",
    "./image/Image2D",
    "./image/ImageBase",
    "./image/ImageCube",
    "./image/ImageData",
    "./image/Sampler2D",
    "./image/SamplerBase",
    "./image/SamplerCube",
    "./image/SpecularImage2D",
    "awayjs-core/lib/library/AbstractionBase",
    "AbstractionBase",
    "pool",
    "_this",
    "_invalid",
    "_pool",
    "_onClearDelegate",
    "onClear",
    "_onInvalidateDelegate",
    "onInvalidate",
    "clearAbstraction",
    "../events/AssetEvent",
    "../events/EventDispatcher",
    "awayjs-core/lib/library/AssetBase",
    "_id",
    "ID_COUNT",
    "_originalName",
    "updateFullPath",
    "prev",
    "_namespace",
    "_full_path",
    "assetPathEquals",
    "ns",
    "isAsset",
    "assetClass",
    "resetAssetPath",
    "overrideOriginal",
    "DEFAULT_NAMESPACE",
    "../errors/AbstractMethodError",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "AssetLibraryIterator_1",
    "Loader_1",
    "ConflictPrecedence_1",
    "ConflictStrategy_1",
    "AssetLibraryBundle",
    "_loaderSessionsGarbage",
    "_assetDictionary",
    "_loaderSessions",
    "conflictStrategy",
    "ConflictStrategy",
    "IGNORE",
    "conflictPrecedence",
    "ConflictPrecedence",
    "FAVOR_NEW",
    "_onAssetRenameDelegate",
    "onAssetRename",
    "_onAssetConflictResolvedDelegate",
    "onAssetConflictResolved",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "getInstance",
    "key",
    "_iInstances",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "_strategy",
    "_strategyPreference",
    "createIterator",
    "assetTypeFilter",
    "namespaceFilter",
    "filterFunc",
    "AssetLibraryIterator",
    "load",
    "req",
    "context",
    "parser",
    "getLoader",
    "loadData",
    "loader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "disposeLoader",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "getAsset",
    "_assetDictDirty",
    "rehashAssetDict",
    "getAllAssets",
    "addAsset",
    "old",
    "assetNamespace",
    "resolveConflict",
    "removeAsset",
    "idx",
    "removeAssetFromDict",
    "removeAssetByName",
    "removeAllAssets",
    "removeNamespaceAssets",
    "old_assets",
    "autoRemoveEmptyNamespace",
    "empty",
    "stopAllLoaders",
    "killloaderSession",
    "pop",
    "clearTimeout",
    "dict",
    "../events/LoaderEvent",
    "../events/ParserEvent",
    "../events/URLLoaderEvent",
    "../library/AssetLibraryIterator",
    "../library/ConflictPrecedence",
    "../library/ConflictStrategy",
    "../library/Loader",
    "awayjs-core/lib/library/AssetLibraryIterator",
    "filter",
    "_idx",
    "_filtered",
    "next",
    "setIndex",
    "awayjs-core/lib/library/AssetLibrary",
    "AssetLibraryBundle_1",
    "AssetLibrary",
    "getBundle",
    "stopLoad",
    "../library/AssetLibraryBundle",
    "awayjs-core/lib/library/ConflictPrecedence",
    "FAVOR_OLD",
    "awayjs-core/lib/library/ConflictStrategyBase",
    "ConflictStrategyBase",
    "changedAsset",
    "oldAsset",
    "assetsDictionary",
    "precedence",
    "_pUpdateNames",
    "nonConflictingName",
    "newAsset",
    "loser_prev_name",
    "winner",
    "loser",
    "awayjs-core/lib/library/ConflictStrategy",
    "ErrorConflictStrategy_1",
    "IgnoreConflictStrategy_1",
    "NumSuffixConflictStrategy_1",
    "include",
    "APPEND_NUM_SUFFIX",
    "NumSuffixConflictStrategy",
    "IgnoreConflictStrategy",
    "THROW_ERROR",
    "ErrorConflictStrategy",
    "../library/ErrorConflictStrategy",
    "../library/IgnoreConflictStrategy",
    "../library/NumSuffixConflictStrategy",
    "awayjs-core/lib/library/ErrorConflictStrategy",
    "ConflictStrategyBase_1",
    "assetFullPath",
    "../library/ConflictStrategyBase",
    "awayjs-core/lib/library/IAbstractionPool",
    "awayjs-core/lib/library/IAssetClass",
    "awayjs-core/lib/library/IAsset",
    "awayjs-core/lib/library/IDUtil",
    "IDUtil",
    "createUID",
    "uid",
    "ALPHA_CHAR_CODES",
    "random",
    "time",
    "Date",
    "getTime",
    "timeString",
    "toUpperCase",
    "substr",
    "charCodeAt",
    "String",
    "fromCharCode",
    "apply",
    "awayjs-core/lib/library/IgnoreConflictStrategy",
    "awayjs-core/lib/library/LoaderContext",
    "LoaderContext",
    "includeDependencies",
    "dependencyBaseUrl",
    "_includeDependencies",
    "_dependencyBaseUrl",
    "_embeddedDataByUrl",
    "_remappedUrls",
    "_materialMode",
    "UNDEFINED",
    "materialMode",
    "_overrideAbsPath",
    "_overrideFullUrls",
    "mapUrl",
    "originalUrl",
    "newUrl",
    "mapUrlToData",
    "_iHasDataForUrl",
    "_iGetDataForUrl",
    "_iHasMappingForUrl",
    "_iGetRemappedUrl",
    "SINGLEPASS_MATERIALS",
    "MULTIPASS_MATERIALS",
    "awayjs-core/lib/library/LoaderInfo",
    "LoaderInfo",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_contentType",
    "_loader",
    "awayjs-core/lib/library/Loader",
    "URLLoader_1",
    "URLLoaderDataFormat_1",
    "ResourceDependency_1",
    "_stack",
    "_errorHandlers",
    "_parseErrorHandlers",
    "_onReadyForDependenciesDelegate",
    "onReadyForDependencies",
    "_onParseCompleteDelegate",
    "onParseComplete",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_parsers",
    "_baseDependency",
    "_loaderInfo",
    "_uri",
    "replace",
    "ResourceDependency",
    "retrieveDependency",
    "retrieveNext",
    "_currentDependency",
    "dependencies",
    "parsingPaused",
    "_iResumeParsing",
    "_iSuccess",
    "resolve",
    "_iLoader",
    "URLLoader",
    "addEventListeners",
    "request",
    "Function",
    "_iSetData",
    "retrieveAsRawData",
    "parseDependency",
    "resolveDependencyUrl",
    "dataFormat",
    "URLLoaderDataFormat",
    "BINARY",
    "_iSetParser",
    "getParserFromSuffix",
    "joinUrl",
    "base",
    "end",
    "charAt",
    "scheme_re",
    "RegExp",
    "overrideAbsolutePaths",
    "test",
    "overrideFullURLs",
    "noscheme_url",
    "retrieveParserDependencies",
    "parserDependancies",
    "resolveParserDependencies",
    "handled",
    "isDependency",
    "removeEventListeners",
    "resolveFailure",
    "suppresAssetEvents",
    "resolveName",
    "handler",
    "getParserFromData",
    "supportsData",
    "_iFileName",
    "parseAsync",
    "fileExtension",
    "toLowerCase",
    "supportsType",
    "../net/URLLoader",
    "../net/URLLoaderDataFormat",
    "../parsers/ResourceDependency",
    "awayjs-core/lib/library/NumSuffixConflictStrategy",
    "separator",
    "_separator",
    "_next_suffix",
    "orig",
    "new_name",
    "suffix",
    "isNaN",
    "awayjs-core/lib/library",
    "AbstractionBase_1",
    "AssetLibrary_1",
    "IDUtil_1",
    "LoaderContext_1",
    "LoaderInfo_1",
    "./library/AbstractionBase",
    "./library/AssetBase",
    "./library/AssetLibrary",
    "./library/AssetLibraryBundle",
    "./library/AssetLibraryIterator",
    "./library/ConflictPrecedence",
    "./library/ConflictStrategy",
    "./library/ConflictStrategyBase",
    "./library/ErrorConflictStrategy",
    "./library/IDUtil",
    "./library/IgnoreConflictStrategy",
    "./library/Loader",
    "./library/LoaderContext",
    "./library/LoaderInfo",
    "./library/NumSuffixConflictStrategy",
    "awayjs-core/lib/managers/AudioChannel",
    "AudioChannel",
    "_isPlaying",
    "_isLooping",
    "_audioCtx",
    "window",
    "_gainNode",
    "createGain",
    "connect",
    "_audio",
    "Audio",
    "onended",
    "_onEnded",
    "createMediaElementSource",
    "gain",
    "isPlaying",
    "isLooping",
    "isDecoding",
    "pause",
    "maxChannels",
    "_channels",
    "awayjs-core/lib/managers/AudioManager",
    "StreamingAudioChannel_1",
    "WebAudioChannel_1",
    "setExternalSoundInterface",
    "new_obj",
    "startSound",
    "console",
    "stopSound",
    "_externalSoundInterface",
    "getExternalSoundInterface",
    "channelClass",
    "StreamingAudioChannel",
    "WebAudioChannel",
    "channel",
    "../managers/StreamingAudioChannel",
    "../managers/WebAudioChannel",
    "awayjs-core/lib/managers/EventAudioChannel",
    "ParserUtils_1",
    "EventAudioChannel",
    "_startTime",
    "ontimeupdate",
    "_onTimeUpdate",
    "_duration",
    "_base64Cache",
    "ParserUtils",
    "arrayBufferToBase64",
    "../parsers/ParserUtils",
    "awayjs-core/lib/managers/IAudioChannelClass",
    "awayjs-core/lib/managers/IAudioChannel",
    "awayjs-core/lib/managers/StreamingAudioChannel",
    "_sourceOpenDelegate",
    "_sourceOpen",
    "_updateEndDelegate",
    "_updateEnd",
    "_updateSource",
    "_sourceDirty",
    "_offset",
    "_isQueuing",
    "_isOpening",
    "_queueBuffer",
    "_mediaSource",
    "activeSourceBuffers",
    "_sourceBuffer",
    "addSourceBuffer",
    "timestampOffset",
    "appendBuffer",
    "endOfStream",
    "_disposeSource",
    "MediaSource",
    "_urlString",
    "URL",
    "createObjectURL",
    "remove",
    "removeSourceBuffer",
    "revokeObjectURL",
    "awayjs-core/lib/managers/WebAudioChannel",
    "_isDecoding",
    "_onEndedDelegate",
    "_currentTime",
    "_decodeCache",
    "_onDecodeComplete",
    "_errorCache",
    "decodeAudioData",
    "_onError",
    "_source",
    "createBufferSource",
    "start",
    "error",
    "disconnect",
    "awayjs-core/lib/managers",
    "./managers/AudioManager",
    "./managers/StreamingAudioChannel",
    "./managers/WebAudioChannel",
    "awayjs-core/lib/net/CrossDomainPolicy",
    "CrossDomainPolicy",
    "ANONYMOUS",
    "USE_CREDENTIALS",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "TEXT",
    "VARIABLES",
    "BLOB",
    "ARRAY_BUFFER",
    "awayjs-core/lib/net/URLLoader",
    "URLRequestMethod_1",
    "URLVariables_1",
    "_dataFormat",
    "_loadError",
    "_request",
    "_data",
    "format",
    "initXHR",
    "method",
    "URLRequestMethod",
    "POST",
    "postRequest",
    "getRequest",
    "isSupported",
    "close",
    "_XHR",
    "abort",
    "disposeXHR",
    "setResponseType",
    "xhr",
    "responseType",
    "open",
    "async",
    "send",
    "handleXmlHttpRequestException",
    "URLVariables",
    "urlVars",
    "formData",
    "XMLHttpRequest",
    "onloadstart",
    "onLoadStart",
    "onprogress",
    "onProgress",
    "onabort",
    "onAbort",
    "onerror",
    "onload",
    "ontimeout",
    "onTimeOut",
    "onloadend",
    "onLoadEnd",
    "onreadystatechange",
    "onReadyStateChange",
    "decodeURLVariables",
    "join",
    "tokens",
    "re",
    "exec",
    "decodeURIComponent",
    "readyState",
    "_status",
    "status",
    "_loadErrorEvent",
    "_statusEvent",
    "total",
    "loaded",
    "_progressEvent",
    "_loadStartEvent",
    "responseText",
    "response",
    "_loadCompleteEvent",
    "../net/URLRequestMethod",
    "../net/URLVariables",
    "awayjs-core/lib/net/URLRequestMethod",
    "GET",
    "awayjs-core/lib/net/URLRequest",
    "URLRequest",
    "awayjs-core/lib/net/URLVariables",
    "_variables",
    "decode",
    "obj",
    "fd",
    "FormData",
    "awayjs-core/lib/net",
    "CrossDomainPolicy_1",
    "URLRequest_1",
    "./net/CrossDomainPolicy",
    "./net/URLLoader",
    "./net/URLLoaderDataFormat",
    "./net/URLRequest",
    "./net/URLRequestMethod",
    "./net/URLVariables",
    "awayjs-core/lib/parsers/Image2DParser",
    "ParserBase_1",
    "ByteArray_1",
    "extension",
    "HTMLImageElement",
    "ByteArray",
    "ba",
    "readUnsignedShort",
    "readShort",
    "readUTFBytes",
    "readByte",
    "_pProceedParsing",
    "sizeError",
    "_loadingImage",
    "ParserBase",
    "MORE_TO_PARSE",
    "_htmlImageElement",
    "imageToBitmapImage2D",
    "_pFinalizeAsset",
    "htmlImageElement",
    "byteArrayToImage",
    "complete",
    "arrayBufferToImage",
    "Blob",
    "blobToImage",
    "_pContent",
    "PARSING_DONE",
    "../parsers/ParserBase",
    "../utils/ByteArray",
    "awayjs-core/lib/parsers/ImageCubeParser",
    "JSON",
    "parse",
    "_iResolveDependency",
    "resourceDependency",
    "_iResolveDependencyFailure",
    "_imgDependencyDictionary",
    "_getBitmapImage2D",
    "json",
    "rec",
    "_pDieWithError",
    "_pAddDependency",
    "_validateCubeData",
    "_pPauseAndRetrieveDependencies",
    "../image/BitmapImageCube",
    "../net/URLRequest",
    "awayjs-core/lib/parsers/ParserBase",
    "Timer_1",
    "getTimer_1",
    "_dependencies",
    "_pOnIntervalDelegate",
    "_pOnInterval",
    "isBitmapImage2DValid",
    "bitmapImage2D",
    "isValid",
    "isImage2DValid",
    "_parsingFailure",
    "_parsingPaused",
    "_parsingComplete",
    "newMaterialMode",
    "frameLimit",
    "_pStartParsing",
    "_iResolveDependencyName",
    "_timer",
    "_isParsing",
    "type_event",
    "type_name",
    "suppressErrorEvents",
    "sub_id",
    "_pPauseParsing",
    "_pHasTime",
    "getTimer",
    "_lastFrameTime",
    "_frameLimit",
    "_pFinishParsing",
    "Timer",
    "_pGetTextData",
    "_pGetByteData",
    "toByteArray",
    "_pGetData",
    "../events/TimerEvent",
    "../utils/Timer",
    "../utils/getTimer",
    "awayjs-core/lib/parsers/ParserDataFormat",
    "ParserDataFormat",
    "PLAIN_TEXT",
    "IMAGE",
    "awayjs-core/lib/parsers/ParserUtils",
    "mimeType",
    "byteStr",
    "bytes",
    "base64Image",
    "btoa",
    "arrayBufferToAudio",
    "fileType",
    "str",
    "img",
    "Image",
    "arraybytes",
    "byteArrayToAudio",
    "filetype",
    "URLObj",
    "blobToAudio",
    "bitmapData",
    "setArrayBuffer",
    "getBytesAvailable",
    "awayjs-core/lib/parsers/ResourceDependency",
    "parentParser",
    "suppressAssetEvents",
    "_sub_id",
    "_parser",
    "_parentParser",
    "_retrieveAsRawData",
    "_suppressAssetEvents",
    "awayjs-core/lib/parsers/TextureAtlasParser",
    "XmlUtils_1",
    "_parseState",
    "TextureAtlasParserState",
    "PARSE_SUBTEXTURES",
    "nodes",
    "PARSE_XML",
    "_doc",
    "XmlUtils",
    "getChildrenWithTag",
    "strToXml",
    "_imagePath",
    "readAttributeValue",
    "_subTextureNodes",
    "PARSE_IMAGE",
    "sampler",
    "element",
    "imageRect",
    "frameRect",
    "../image/Sampler2D",
    "../utils/XmlUtils",
    "awayjs-core/lib/parsers/WaveAudioParser",
    "parseFileType",
    "byte_1",
    "readUnsignedByte",
    "byte_2",
    "byte_3",
    "../audio/WaveAudio",
    "awayjs-core/lib/parsers",
    "Image2DParser_1",
    "ImageCubeParser_1",
    "ParserDataFormat_1",
    "TextureAtlasParser_1",
    "WaveAudioParser_1",
    "./parsers/Image2DParser",
    "./parsers/ImageCubeParser",
    "./parsers/ParserBase",
    "./parsers/ParserDataFormat",
    "./parsers/ParserUtils",
    "./parsers/ResourceDependency",
    "./parsers/TextureAtlasParser",
    "./parsers/WaveAudioParser",
    "awayjs-core/lib/projections/CoordinateSystem",
    "CoordinateSystem",
    "LEFT_HANDED",
    "RIGHT_HANDED",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "PerspectiveProjection_1",
    "ProjectionBase_1",
    "FreeMatrixProjection",
    "_pMatrix",
    "PerspectiveProjection",
    "_pNear",
    "_pFar",
    "_pAspectRatio",
    "pInvalidateMatrix",
    "pUpdateMatrix",
    "_pMatrixInvalid",
    "ProjectionBase",
    "../projections/PerspectiveProjection",
    "../projections/ProjectionBase",
    "awayjs-core/lib/projections/IProjection",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection",
    "ObliqueNearPlaneProjection",
    "baseProjection",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_baseProjection",
    "frustumCorners",
    "near",
    "far",
    "_iAspectRatio",
    "_plane",
    "cx",
    "cy",
    "cz",
    "cw",
    "signX",
    "signY",
    "inverse",
    "../events/ProjectionEvent",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "OrthographicOffCenterProjection",
    "_minX",
    "_maxX",
    "_minY",
    "_maxY",
    "unproject",
    "nX",
    "nY",
    "sZ",
    "unprojectionMatrix",
    "_pFrustumCorners",
    "awayjs-core/lib/projections/OrthographicProjection",
    "OrthographicProjection",
    "projectionHeight",
    "_projectionHeight",
    "_yMax",
    "_xMax",
    "left",
    "right",
    "top",
    "bottom",
    "_pScissorRect",
    "_pViewPort",
    "xWidth",
    "yHgt",
    "center",
    "middle",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "CoordinateSystem_1",
    "fieldOfView",
    "coordinateSystem",
    "_fieldOfView",
    "_focalLength",
    "_hFieldOfView",
    "_hFocalLength",
    "_preserveAspectRatio",
    "_preserveFocalLength",
    "tan",
    "_pCoordinateSystem",
    "atan",
    "tanMinX",
    "_pOriginX",
    "tanMaxX",
    "tanMinY",
    "_pOriginY",
    "tanMaxY",
    "../projections/CoordinateSystem",
    "awayjs-core/lib/projections/ProjectionBase",
    "_unprojectionInvalid",
    "point3d",
    "_unprojection",
    "_iUpdateScissorRect",
    "_iUpdateViewport",
    "awayjs-core/lib/projections",
    "FreeMatrixProjection_1",
    "ObliqueNearPlaneProjection_1",
    "OrthographicOffCenterProjection_1",
    "OrthographicProjection_1",
    "./projections/CoordinateSystem",
    "./projections/FreeMatrixProjection",
    "./projections/ObliqueNearPlaneProjection",
    "./projections/OrthographicOffCenterProjection",
    "./projections/OrthographicProjection",
    "./projections/PerspectiveProjection",
    "./projections/ProjectionBase",
    "awayjs-core/lib/ui/Keyboard",
    "Keyboard",
    "A",
    "ALTERNATE",
    "AUDIO",
    "B",
    "BACKQUOTE",
    "BACKSLASH",
    "BACKSPACE",
    "C",
    "CAPS_LOCK",
    "CHANNEL_DOWN",
    "CHANNEL_UP",
    "COMMA",
    "COMMAND",
    "CONTROL",
    "D",
    "DELETE",
    "DOWN",
    "DVR",
    "E",
    "END",
    "ENTER",
    "EQUAL",
    "ESCAPE",
    "EXIT",
    "F",
    "F1",
    "F10",
    "F11",
    "F12",
    "F13",
    "F14",
    "F15",
    "F2",
    "F3",
    "F4",
    "F5",
    "F6",
    "F7",
    "F8",
    "F9",
    "FAST_FORWARD",
    "G",
    "GUIDE",
    "H",
    "HELP",
    "HOME",
    "I",
    "INFO",
    "INPUT",
    "INSERT",
    "J",
    "K",
    "KEYNAME_BEGIN",
    "KEYNAME_BREAK",
    "KEYNAME_CLEARDISPLAY",
    "KEYNAME_CLEARLINE",
    "KEYNAME_DELETE",
    "KEYNAME_DELETECHAR",
    "KEYNAME_DELETELINE",
    "KEYNAME_DOWNARROW",
    "KEYNAME_END",
    "KEYNAME_EXECUTE",
    "KEYNAME_F1",
    "KEYNAME_F10",
    "KEYNAME_F11",
    "KEYNAME_F12",
    "KEYNAME_F13",
    "KEYNAME_F14",
    "KEYNAME_F15",
    "KEYNAME_F16",
    "KEYNAME_F17",
    "KEYNAME_F18",
    "KEYNAME_F19",
    "KEYNAME_F2",
    "KEYNAME_F20",
    "KEYNAME_F21",
    "KEYNAME_F22",
    "KEYNAME_F23",
    "KEYNAME_F24",
    "KEYNAME_F25",
    "KEYNAME_F26",
    "KEYNAME_F27",
    "KEYNAME_F28",
    "KEYNAME_F29",
    "KEYNAME_F3",
    "KEYNAME_F30",
    "KEYNAME_F31",
    "KEYNAME_F32",
    "KEYNAME_F33",
    "KEYNAME_F34",
    "KEYNAME_F35",
    "KEYNAME_F4",
    "KEYNAME_F5",
    "KEYNAME_F6",
    "KEYNAME_F7",
    "KEYNAME_F8",
    "KEYNAME_F9",
    "KEYNAME_FIND",
    "KEYNAME_HELP",
    "KEYNAME_HOME",
    "KEYNAME_INSERT",
    "KEYNAME_INSERTCHAR",
    "KEYNAME_INSERTLINE",
    "KEYNAME_LEFTARROW",
    "KEYNAME_MENU",
    "KEYNAME_MODESWITCH",
    "KEYNAME_NEXT",
    "KEYNAME_PAGEDOWN",
    "KEYNAME_PAGEUP",
    "KEYNAME_PAUSE",
    "KEYNAME_PREV",
    "KEYNAME_PRINT",
    "KEYNAME_PRINTSCREEN",
    "KEYNAME_REDO",
    "KEYNAME_RESET",
    "KEYNAME_RIGHTARROW",
    "KEYNAME_SCROLLLOCK",
    "KEYNAME_SELECT",
    "KEYNAME_STOP",
    "KEYNAME_SYSREQ",
    "KEYNAME_SYSTEM",
    "KEYNAME_UNDO",
    "KEYNAME_UPARROW",
    "KEYNAME_USER",
    "L",
    "LAST",
    "LEFT",
    "LEFTBRACKET",
    "LIVE",
    "M",
    "MASTER_SHELL",
    "MENU",
    "MINUS",
    "N",
    "NEXT",
    "NUMBER_0",
    "NUMBER_1",
    "NUMBER_2",
    "NUMBER_3",
    "NUMBER_4",
    "NUMBER_5",
    "NUMBER_6",
    "NUMBER_7",
    "NUMBER_8",
    "NUMBER_9",
    "NUMPAD",
    "NUMPAD_0",
    "NUMPAD_1",
    "NUMPAD_2",
    "NUMPAD_3",
    "NUMPAD_4",
    "NUMPAD_5",
    "NUMPAD_6",
    "NUMPAD_7",
    "NUMPAD_8",
    "NUMPAD_9",
    "NUMPAD_ADD",
    "NUMPAD_DECIMAL",
    "NUMPAD_DIVIDE",
    "NUMPAD_ENTER",
    "NUMPAD_MULTIPLY",
    "NUMPAD_SUBTRACT",
    "O",
    "P",
    "PAGE_DOWN",
    "PAGE_UP",
    "PAUSE",
    "PERIOD",
    "PLAY",
    "PREVIOUS",
    "Q",
    "QUOTE",
    "R",
    "RECORD",
    "REWIND",
    "RIGHT",
    "RIGHTBRACKET",
    "S",
    "SEARCH",
    "SEMICOLON",
    "SETUP",
    "SHIFT",
    "SKIP_BACKWARD",
    "SKIP_FORWARD",
    "SLASH",
    "SPACE",
    "STOP",
    "SUBTITLE",
    "T",
    "TAB",
    "U",
    "UP",
    "V",
    "VOD",
    "W",
    "X",
    "Y",
    "YELLOW",
    "Z",
    "awayjs-core/lib/ui",
    "Keyboard_1",
    "./ui/Keyboard",
    "awayjs-core/lib/utils/BitmapImageUtils",
    "bmpd",
    "awayjs-core/lib/utils/ByteArrayBase",
    "ByteArrayBase",
    "_mode",
    "writeByte",
    "writeUnsignedByte",
    "writeUnsignedShort",
    "writeUnsignedInt",
    "writeFloat",
    "toFloatBits",
    "readFloat",
    "fromFloatBits",
    "compareEqual",
    "other",
    "co0",
    "c0",
    "writeBase64String",
    "dumpToConsole",
    "oldpos",
    "nstep",
    "asHexString",
    "digits",
    "lut",
    "readBase64String",
    "internalGetBase64String",
    "getUnsignedByteFunc",
    "self",
    "b0",
    "b1",
    "b2",
    "enc1",
    "enc2",
    "enc3",
    "enc4",
    "base64Key",
    "Base64Key",
    "awayjs-core/lib/utils/ByteArrayBuffer",
    "ByteArrayBase_1",
    "ByteArrayBuffer",
    "bi",
    "sign",
    "exponent",
    "mantissa",
    "../utils/ByteArrayBase",
    "awayjs-core/lib/utils/ByteArray",
    "maxlength",
    "unalignedarraybytestemp",
    "ensureWriteableSpace",
    "ensureSpace",
    "aBuffer",
    "inInt8AView",
    "localInt8View",
    "newmaxlength",
    "newarraybuffer",
    "newview",
    "readBytes",
    "byteView",
    "localByteView",
    "view2",
    "view3",
    "DataView",
    "getUint8",
    "c2",
    "c3",
    "readInt",
    "int",
    "getInt32",
    "short",
    "getInt16",
    "readDouble",
    "double",
    "getFloat64",
    "pa",
    "Uint32Array",
    "awayjs-core/lib/utils/CSS",
    "CSS",
    "setElementSize",
    "style",
    "setElementWidth",
    "setElementHeight",
    "setElementX",
    "setElementY",
    "getElementVisibility",
    "visibility",
    "setElementVisibility",
    "visible",
    "setElementAlpha",
    "alpha",
    "HTMLCanvasElement",
    "globalAlpha",
    "setElementPosition",
    "absolute",
    "awayjs-core/lib/utils/ColorUtils",
    "float32Color",
    "ARGBtoFloat32",
    "componentToHex",
    "hex",
    "RGBToHexString",
    "ARGBToHexString",
    "awayjs-core/lib/utils/Debug",
    "Debug",
    "breakpoint",
    "throwPIROnKeyWordOnly",
    "enable",
    "keyword",
    "throwPIR",
    "clss",
    "fnc",
    "msg",
    "logPIR",
    "THROW_ERRORS",
    "LOG_PI_ERRORS",
    "ENABLE_LOG",
    "../errors/PartialImplementationError",
    "awayjs-core/lib/utils/Extensions",
    "Extensions",
    "SIMD",
    "Boolean",
    "awayjs-core/lib/utils/IArrayBufferViewClass",
    "awayjs-core/lib/utils/ImageUtils",
    "image2D",
    "isHTMLImageElementValid",
    "MAX_SIZE",
    "isPowerOfTwo",
    "getBestPowerOf2",
    "awayjs-core/lib/utils/MipmapGenerator",
    "MipmapGenerator",
    "_generateMipMaps",
    "output",
    "_getMipmapHolder",
    "_matrix",
    "bitmapImage",
    "downsampleImage",
    "mipMapHolder",
    "newW",
    "newH",
    "_freeMipMapHolder",
    "_mipMaps",
    "_mipMapUses",
    "holderWidth",
    "holderHeight",
    "destBitmap",
    "BoxFilter",
    "xkernel",
    "PolyphaseKernel",
    "ykernel",
    "tempBitmap",
    "iscale",
    "kernelLength",
    "kernelWidth",
    "kernelWindowSize",
    "sumR",
    "sumG",
    "sumB",
    "sumA",
    "windowSize",
    "colorR",
    "colorG",
    "colorB",
    "colorA",
    "valueAt",
    "srcLength",
    "dstLength",
    "samples",
    "sum",
    "isamples",
    "evaluate",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "RequestAnimationFrame",
    "callback",
    "callbackContext",
    "_active",
    "_argsArray",
    "_getTimer",
    "setCallback",
    "_rafUpdateFunction",
    "_tick",
    "_dt",
    "_callback",
    "_callbackContext",
    "_prevTime",
    "requestAnimationFrame",
    "awayjs-core/lib/utils/Timer",
    "delay",
    "repeatCount",
    "_repeatCount",
    "_currentCount",
    "_running",
    "_delay",
    "clearInterval",
    "_iid",
    "setInterval",
    "tick",
    "awayjs-core/lib/utils/XmlUtils",
    "node",
    "tag",
    "fragment",
    "createDocumentFragment",
    "num",
    "childNodes",
    "child",
    "nodeName",
    "appendChild",
    "filterListByParam",
    "paramName",
    "paramValue",
    "getNamedItem",
    "DOMParser",
    "parseFromString",
    "nodeToString",
    "XMLSerializer",
    "serializeToString",
    "attrName",
    "attrs",
    "attribute",
    "writeAttributeValue",
    "attrValue",
    "createAttribute",
    "setNamedItem",
    "hasAttribute",
    "awayjs-core/lib/utils/getTimer",
    "now",
    "awayjs-core/lib/utils",
    "ByteArrayBuffer_1",
    "CSS_1",
    "Debug_1",
    "Extensions_1",
    "MipmapGenerator_1",
    "RequestAnimationFrame_1",
    "./utils/BitmapImageUtils",
    "./utils/ByteArray",
    "./utils/ByteArrayBase",
    "./utils/ByteArrayBuffer",
    "./utils/CSS",
    "./utils/ColorUtils",
    "./utils/Debug",
    "./utils/Extensions",
    "./utils/ImageUtils",
    "./utils/MipmapGenerator",
    "./utils/RequestAnimationFrame",
    "./utils/Timer",
    "./utils/XmlUtils",
    "./utils/getTimer"
  ],
  "mappings": "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",
  "file": "awayjs-core.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\r\nvar attributes = require(\"./lib/attributes\");\r\nexports.attributes = attributes;\r\nvar audio = require(\"./lib/audio\");\r\nexports.audio = audio;\r\nvar errors = require(\"./lib/errors\");\r\nexports.errors = errors;\r\nvar events = require(\"./lib/events\");\r\nexports.events = events;\r\nvar geom = require(\"./lib/geom\");\r\nexports.geom = geom;\r\nvar image = require(\"./lib/image\");\r\nexports.image = image;\r\nvar library = require(\"./lib/library\");\r\nexports.library = library;\r\nvar managers = require(\"./lib/managers\");\r\nexports.managers = managers;\r\nvar net = require(\"./lib/net\");\r\nexports.net = net;\r\nvar parsers = require(\"./lib/parsers\");\r\nexports.parsers = parsers;\r\nvar projections = require(\"./lib/projections\");\r\nexports.projections = projections;\r\nvar ui = require(\"./lib/ui\");\r\nexports.ui = ui;\r\nvar utils = require(\"./lib/utils\");\r\nexports.utils = utils;\r\nlibrary.Loader.enableParser(parsers.Image2DParser);\r\nlibrary.Loader.enableParser(parsers.ImageCubeParser);\r\nlibrary.Loader.enableParser(parsers.TextureAtlasParser);\r\nlibrary.Loader.enableParser(parsers.WaveAudioParser);\r\n},{\"./lib/attributes\":\"awayjs-core/lib/attributes\",\"./lib/audio\":\"awayjs-core/lib/audio\",\"./lib/errors\":\"awayjs-core/lib/errors\",\"./lib/events\":\"awayjs-core/lib/events\",\"./lib/geom\":\"awayjs-core/lib/geom\",\"./lib/image\":\"awayjs-core/lib/image\",\"./lib/library\":\"awayjs-core/lib/library\",\"./lib/managers\":\"awayjs-core/lib/managers\",\"./lib/net\":\"awayjs-core/lib/net\",\"./lib/parsers\":\"awayjs-core/lib/parsers\",\"./lib/projections\":\"awayjs-core/lib/projections\",\"./lib/ui\":\"awayjs-core/lib/ui\",\"./lib/utils\":\"awayjs-core/lib/utils\"}],\"awayjs-core/lib/attributes/AttributesBuffer\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetBase_1 = require(\"../library/AssetBase\");\r\nvar AttributesBuffer = (function (_super) {\r\n    __extends(AttributesBuffer, _super);\r\n    /**\r\n     *\r\n     */\r\n    function AttributesBuffer(stride, count) {\r\n        if (stride === void 0) { stride = 0; }\r\n        if (count === void 0) { count = 0; }\r\n        _super.call(this);\r\n        this._count = 0;\r\n        this._stride = 0;\r\n        this._newStride = 0;\r\n        this._viewVOs = new Array();\r\n        this._stride = this._newStride = stride;\r\n        this._count = count;\r\n        this._buffer = new ArrayBuffer(this._stride * this._count);\r\n        this._bufferView = new Uint8Array(this._buffer, 0, this._buffer.byteLength);\r\n    }\r\n    Object.defineProperty(AttributesBuffer.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return AttributesBuffer.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AttributesBuffer.prototype, \"stride\", {\r\n        get: function () {\r\n            if (this._lengthDirty)\r\n                this._updateLength();\r\n            return this._stride;\r\n        },\r\n        set: function (value) {\r\n            if (this._newStride == value)\r\n                return;\r\n            this._newStride = value;\r\n            this.resize();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AttributesBuffer.prototype, \"count\", {\r\n        get: function () {\r\n            return this._count;\r\n        },\r\n        set: function (value) {\r\n            if (this._count == value)\r\n                return;\r\n            this._count = value;\r\n            this.resize();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AttributesBuffer.prototype, \"buffer\", {\r\n        get: function () {\r\n            if (this._lengthDirty)\r\n                this._updateLength();\r\n            this._contentDirty = false;\r\n            return this._buffer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AttributesBuffer.prototype, \"bufferView\", {\r\n        get: function () {\r\n            if (this._lengthDirty)\r\n                this._updateLength();\r\n            this._contentDirty = false;\r\n            return this._bufferView;\r\n        },\r\n        set: function (value) {\r\n            this._bufferView = value;\r\n            this._buffer = this._bufferView.buffer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AttributesBuffer.prototype, \"length\", {\r\n        get: function () {\r\n            return this._count * this.stride;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     */\r\n    AttributesBuffer.prototype.invalidate = function () {\r\n        if (this._contentDirty)\r\n            return;\r\n        _super.prototype.invalidate.call(this);\r\n        this._contentDirty = true;\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    AttributesBuffer.prototype.resize = function () {\r\n        if (this._lengthDirty)\r\n            return;\r\n        this.clear();\r\n        this._lengthDirty = true;\r\n        //dispose buffer if stride is 0\r\n        if (!this._newStride) {\r\n            this._buffer = null;\r\n            this._bufferView = null;\r\n        }\r\n    };\r\n    AttributesBuffer.prototype.clone = function () {\r\n        var attributesBuffer = new AttributesBuffer(this._stride, this._count);\r\n        attributesBuffer.bufferView.set(this.bufferView);\r\n        var len = this._viewVOs.length;\r\n        for (var i = 0; i < len; i++)\r\n            this._viewVOs[i].view._internalClone(attributesBuffer);\r\n        return attributesBuffer;\r\n    };\r\n    AttributesBuffer.prototype.getView = function (index) {\r\n        if (index < this._viewVOs.length)\r\n            return this._viewVOs[index].view;\r\n        return null;\r\n    };\r\n    AttributesBuffer.prototype._setAttributes = function (viewIndex, arrayBufferView, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        var array = (arrayBufferView instanceof Uint8Array) ? arrayBufferView : new Uint8Array(arrayBufferView.buffer);\r\n        var viewVO = this._viewVOs[viewIndex];\r\n        var vLength = viewVO.length;\r\n        var vOffset = viewVO.offset;\r\n        var vCount = array.length / vLength;\r\n        //make sure there is enough space in the buffer\r\n        if (this.count < vCount + offset)\r\n            this.count = vCount + offset;\r\n        if (this._lengthDirty)\r\n            this._updateLength();\r\n        //fast path for separate buffers\r\n        if (this._viewVOs.length == 1) {\r\n            this._bufferView.set(array);\r\n        }\r\n        else {\r\n            for (var i = 0; i < vCount; i++)\r\n                this._bufferView.set(array.subarray(i * vLength, (i + 1) * vLength), (i + offset) * this._stride + vOffset);\r\n        }\r\n        this.invalidate();\r\n    };\r\n    AttributesBuffer.prototype._addView = function (view) {\r\n        var viewVO = new ViewVO(view);\r\n        var len = this._viewVOs.length;\r\n        viewVO.offset = len ? this._viewVOs[len - 1].offset + this._viewVOs[len - 1].length : 0;\r\n        this._viewVOs.push(viewVO);\r\n        if (this._newStride < viewVO.offset + viewVO.length) {\r\n            this._newStride = viewVO.offset + viewVO.length;\r\n            this.resize();\r\n        }\r\n        view._index = len;\r\n    };\r\n    AttributesBuffer.prototype._removeView = function (view) {\r\n        var viewIndex = view._index;\r\n        var viewVO = this._viewVOs.splice(viewIndex, 1)[0];\r\n        var len = this._viewVOs.length;\r\n        viewVO.dispose();\r\n        for (var i = viewIndex; i < len; i++) {\r\n            viewVO = this._viewVOs[i];\r\n            viewVO.offset = i ? this._viewVOs[i - 1].offset + this._viewVOs[i - 1].length : 0;\r\n            viewVO.view._index = i;\r\n        }\r\n        this._newStride = viewVO.offset + viewVO.length;\r\n        this.resize();\r\n    };\r\n    AttributesBuffer.prototype._getOffset = function (viewIndex) {\r\n        return this._viewVOs[viewIndex].offset;\r\n    };\r\n    AttributesBuffer.prototype._updateLength = function () {\r\n        this._lengthDirty = false;\r\n        var i;\r\n        var j;\r\n        var len = this._viewVOs.length;\r\n        var newLength = this._newStride * this._count;\r\n        if (!this._buffer || this._buffer.byteLength != newLength) {\r\n            var newBuffer = new ArrayBuffer(newLength);\r\n            var newView = new Uint8Array(newBuffer, 0, newBuffer.byteLength);\r\n            var viewVO;\r\n            var vLength;\r\n            var vOffset;\r\n            var vOldOffset;\r\n            if (this._stride != this._newStride) {\r\n                for (i = 0; i < len; i++) {\r\n                    viewVO = this._viewVOs[i];\r\n                    vLength = viewVO.length;\r\n                    vOffset = viewVO.offset;\r\n                    vOldOffset = viewVO.oldOffset;\r\n                    for (j = 0; j < this._count; j++)\r\n                        if (vOldOffset != null)\r\n                            newView.set(new Uint8Array(this._buffer, j * this._stride + vOldOffset, vLength), j * this._newStride + vOffset);\r\n                    viewVO.oldOffset = viewVO.offset;\r\n                }\r\n                this._stride = this._newStride;\r\n            }\r\n            else {\r\n                newView.set(new Uint8Array(this._buffer, 0, Math.min(newLength, this._buffer.byteLength))); //TODO: bypass quantisation of bytearray on instantiation\r\n            }\r\n            this._buffer = newBuffer;\r\n            this._bufferView = newView;\r\n        }\r\n    };\r\n    AttributesBuffer.assetType = \"[assets AttributesBuffer]\";\r\n    return AttributesBuffer;\r\n}(AssetBase_1.AssetBase));\r\nexports.AttributesBuffer = AttributesBuffer;\r\nvar ViewVO = (function () {\r\n    function ViewVO(view) {\r\n        this.view = view;\r\n        this.length = view.size * view.dimensions;\r\n    }\r\n    ViewVO.prototype.dispose = function () {\r\n        this.view = null;\r\n    };\r\n    ViewVO.prototype.clone = function () {\r\n        return new ViewVO(this.view);\r\n    };\r\n    return ViewVO;\r\n}());\r\n},{\"../library/AssetBase\":\"awayjs-core/lib/library/AssetBase\"}],\"awayjs-core/lib/attributes/AttributesView\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AttributesBuffer_1 = require(\"../attributes/AttributesBuffer\");\r\nvar AssetBase_1 = require(\"../library/AssetBase\");\r\nvar AttributesView = (function (_super) {\r\n    __extends(AttributesView, _super);\r\n    function AttributesView(arrayClass, dimensions, attributesBufferCount, unsigned) {\r\n        if (attributesBufferCount === void 0) { attributesBufferCount = 0; }\r\n        if (unsigned === void 0) { unsigned = false; }\r\n        _super.call(this);\r\n        this._arrayClass = arrayClass;\r\n        this._size = arrayClass.BYTES_PER_ELEMENT;\r\n        this._dimensions = dimensions;\r\n        this._attributesBuffer = (attributesBufferCount instanceof AttributesBuffer_1.AttributesBuffer) ? attributesBufferCount : new AttributesBuffer_1.AttributesBuffer(this._dimensions * this._size, attributesBufferCount);\r\n        this._attributesBuffer._addView(this);\r\n        this._unsigned = unsigned;\r\n    }\r\n    Object.defineProperty(AttributesView.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return AttributesView.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AttributesView.prototype, \"attributesBuffer\", {\r\n        get: function () {\r\n            return this._attributesBuffer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AttributesView.prototype, \"size\", {\r\n        /**\r\n         *\r\n         * @returns {number}\r\n         */\r\n        get: function () {\r\n            return this._size;\r\n        },\r\n        set: function (value) {\r\n            if (this._size == value)\r\n                return;\r\n            this._size = value;\r\n            this._attributesBuffer._removeView(this);\r\n            this._attributesBuffer._addView(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AttributesView.prototype, \"dimensions\", {\r\n        /**\r\n         *\r\n         * @returns {number}\r\n         */\r\n        get: function () {\r\n            return this._dimensions;\r\n        },\r\n        set: function (value) {\r\n            if (this._dimensions == value)\r\n                return;\r\n            this._dimensions = value;\r\n            //reset view\r\n            this._attributesBuffer._removeView(this);\r\n            this._attributesBuffer._addView(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AttributesView.prototype, \"unsigned\", {\r\n        get: function () {\r\n            return this._unsigned;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AttributesView.prototype, \"count\", {\r\n        get: function () {\r\n            return this._attributesBuffer.count;\r\n        },\r\n        set: function (value) {\r\n            this._attributesBuffer.count = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AttributesView.prototype, \"offset\", {\r\n        get: function () {\r\n            return this._attributesBuffer._getOffset(this._index);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AttributesView.prototype, \"length\", {\r\n        get: function () {\r\n            return this._attributesBuffer.count * this._dimensions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AttributesView.prototype, \"stride\", {\r\n        get: function () {\r\n            return this._attributesBuffer.stride / this._size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AttributesView.prototype.set = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        this._attributesBuffer._setAttributes(this._index, (values instanceof Array) ? new (this._arrayClass)(values) : values, offset);\r\n    };\r\n    AttributesView.prototype.get = function (count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        return new (this._arrayClass)(this._attributesBuffer.buffer, offset * this._attributesBuffer.stride + this.offset, count * this.stride - this.offset / this.size);\r\n    };\r\n    AttributesView.prototype._internalClone = function (attributesBuffer) {\r\n        return (this._cloneCache = new AttributesView(this._arrayClass, this._dimensions, attributesBuffer, this._unsigned));\r\n    };\r\n    AttributesView.prototype.clone = function (attributesBuffer) {\r\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\r\n        if (attributesBuffer)\r\n            this._internalClone(attributesBuffer);\r\n        if (!this._cloneCache)\r\n            this._attributesBuffer.clone();\r\n        var cloneCache = this._cloneCache;\r\n        this._cloneCache = null;\r\n        return cloneCache;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AttributesView.prototype.dispose = function () {\r\n        if (!this._attributesBuffer)\r\n            return;\r\n        this._attributesBuffer._removeView(this);\r\n        this._attributesBuffer = null;\r\n    };\r\n    AttributesView.assetType = \"[attributes AttributesView]\";\r\n    return AttributesView;\r\n}(AssetBase_1.AssetBase));\r\nexports.AttributesView = AttributesView;\r\n},{\"../attributes/AttributesBuffer\":\"awayjs-core/lib/attributes/AttributesBuffer\",\"../library/AssetBase\":\"awayjs-core/lib/library/AssetBase\"}],\"awayjs-core/lib/attributes/Byte4Attributes\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\r\nvar Byte4Attributes = (function (_super) {\r\n    __extends(Byte4Attributes, _super);\r\n    function Byte4Attributes(attributesBufferLength, unsigned) {\r\n        if (unsigned === void 0) { unsigned = true; }\r\n        _super.call(this, unsigned ? Uint8Array : Int8Array, 4, attributesBufferLength, unsigned);\r\n    }\r\n    Object.defineProperty(Byte4Attributes.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return Byte4Attributes.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Byte4Attributes.prototype.set = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        _super.prototype.set.call(this, values, offset);\r\n    };\r\n    Byte4Attributes.prototype.get = function (count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        return _super.prototype.get.call(this, count, offset);\r\n    };\r\n    Byte4Attributes.prototype._internalClone = function (attributesBuffer) {\r\n        return (this._cloneCache = new Byte4Attributes(attributesBuffer, this._arrayClass == Uint8Array));\r\n    };\r\n    Byte4Attributes.prototype.clone = function (attributesBuffer) {\r\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\r\n        return _super.prototype.clone.call(this, attributesBuffer);\r\n    };\r\n    Byte4Attributes.assetType = \"[attributes Byte4Attributes]\";\r\n    return Byte4Attributes;\r\n}(AttributesView_1.AttributesView));\r\nexports.Byte4Attributes = Byte4Attributes;\r\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Float1Attributes\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\r\nvar Float1Attributes = (function (_super) {\r\n    __extends(Float1Attributes, _super);\r\n    function Float1Attributes(attributesBufferLength) {\r\n        _super.call(this, Float32Array, 1, attributesBufferLength);\r\n    }\r\n    Object.defineProperty(Float1Attributes.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return Float1Attributes.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Float1Attributes.prototype.set = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        _super.prototype.set.call(this, values, offset);\r\n    };\r\n    Float1Attributes.prototype.get = function (count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        return _super.prototype.get.call(this, count, offset);\r\n    };\r\n    Float1Attributes.prototype._internalClone = function (attributesBuffer) {\r\n        return (this._cloneCache = new Float1Attributes(attributesBuffer));\r\n    };\r\n    Float1Attributes.prototype.clone = function (attributesBuffer) {\r\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\r\n        return _super.prototype.clone.call(this, attributesBuffer);\r\n    };\r\n    Float1Attributes.assetType = \"[attributes Float1Attributes]\";\r\n    return Float1Attributes;\r\n}(AttributesView_1.AttributesView));\r\nexports.Float1Attributes = Float1Attributes;\r\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Float2Attributes\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\r\nvar Float2Attributes = (function (_super) {\r\n    __extends(Float2Attributes, _super);\r\n    function Float2Attributes(attributesBufferLength) {\r\n        _super.call(this, Float32Array, 2, attributesBufferLength);\r\n    }\r\n    Object.defineProperty(Float2Attributes.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return Float2Attributes.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Float2Attributes.prototype.set = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        _super.prototype.set.call(this, values, offset);\r\n    };\r\n    Float2Attributes.prototype.get = function (count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        return _super.prototype.get.call(this, count, offset);\r\n    };\r\n    Float2Attributes.prototype._internalClone = function (attributesBuffer) {\r\n        return (this._cloneCache = new Float2Attributes(attributesBuffer));\r\n    };\r\n    Float2Attributes.prototype.clone = function (attributesBuffer) {\r\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\r\n        return _super.prototype.clone.call(this, attributesBuffer);\r\n    };\r\n    Float2Attributes.assetType = \"[attributes Float2Attributes]\";\r\n    return Float2Attributes;\r\n}(AttributesView_1.AttributesView));\r\nexports.Float2Attributes = Float2Attributes;\r\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Float3Attributes\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\r\nvar Float3Attributes = (function (_super) {\r\n    __extends(Float3Attributes, _super);\r\n    function Float3Attributes(attributesBufferLength) {\r\n        _super.call(this, Float32Array, 3, attributesBufferLength);\r\n    }\r\n    Object.defineProperty(Float3Attributes.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return Float3Attributes.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Float3Attributes.prototype.set = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        _super.prototype.set.call(this, values, offset);\r\n    };\r\n    Float3Attributes.prototype.get = function (count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        return _super.prototype.get.call(this, count, offset);\r\n    };\r\n    Float3Attributes.prototype._internalClone = function (attributesBuffer) {\r\n        return (this._cloneCache = new Float3Attributes(attributesBuffer));\r\n    };\r\n    Float3Attributes.prototype.clone = function (attributesBuffer) {\r\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\r\n        return _super.prototype.clone.call(this, attributesBuffer);\r\n    };\r\n    Float3Attributes.assetType = \"[attributes Float3Attributes]\";\r\n    return Float3Attributes;\r\n}(AttributesView_1.AttributesView));\r\nexports.Float3Attributes = Float3Attributes;\r\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Float4Attributes\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\r\nvar Float4Attributes = (function (_super) {\r\n    __extends(Float4Attributes, _super);\r\n    function Float4Attributes(attributesBufferLength) {\r\n        _super.call(this, Float32Array, 4, attributesBufferLength);\r\n    }\r\n    Object.defineProperty(Float4Attributes.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return Float4Attributes.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Float4Attributes.prototype.set = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        _super.prototype.set.call(this, values, offset);\r\n    };\r\n    Float4Attributes.prototype.get = function (count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        return _super.prototype.get.call(this, count, offset);\r\n    };\r\n    Float4Attributes.prototype._internalClone = function (attributesBuffer) {\r\n        return (this._cloneCache = new Float4Attributes(attributesBuffer));\r\n    };\r\n    Float4Attributes.prototype.clone = function (attributesBuffer) {\r\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\r\n        return _super.prototype.clone.call(this, attributesBuffer);\r\n    };\r\n    Float4Attributes.assetType = \"[attributes Float4Attributes]\";\r\n    return Float4Attributes;\r\n}(AttributesView_1.AttributesView));\r\nexports.Float4Attributes = Float4Attributes;\r\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Short2Attributes\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\r\nvar Short2Attributes = (function (_super) {\r\n    __extends(Short2Attributes, _super);\r\n    function Short2Attributes(attributesBufferLength, unsigned) {\r\n        if (unsigned === void 0) { unsigned = true; }\r\n        _super.call(this, unsigned ? Uint16Array : Int16Array, 2, attributesBufferLength, unsigned);\r\n    }\r\n    Object.defineProperty(Short2Attributes.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return Short2Attributes.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Short2Attributes.prototype.set = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        _super.prototype.set.call(this, values, offset);\r\n    };\r\n    Short2Attributes.prototype.get = function (count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        return _super.prototype.get.call(this, count, offset);\r\n    };\r\n    Short2Attributes.prototype._internalClone = function (attributesBuffer) {\r\n        return (this._cloneCache = new Short2Attributes(attributesBuffer, this._arrayClass == Uint16Array));\r\n    };\r\n    Short2Attributes.prototype.clone = function (attributesBuffer) {\r\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\r\n        return _super.prototype.clone.call(this, attributesBuffer);\r\n    };\r\n    Short2Attributes.assetType = \"[attributes Short2Attributes]\";\r\n    return Short2Attributes;\r\n}(AttributesView_1.AttributesView));\r\nexports.Short2Attributes = Short2Attributes;\r\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Short3Attributes\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\r\nvar Short3Attributes = (function (_super) {\r\n    __extends(Short3Attributes, _super);\r\n    function Short3Attributes(attributesBufferLength, unsigned) {\r\n        if (unsigned === void 0) { unsigned = true; }\r\n        _super.call(this, unsigned ? Uint16Array : Int16Array, 3, attributesBufferLength, unsigned);\r\n    }\r\n    Object.defineProperty(Short3Attributes.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return Short3Attributes.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Short3Attributes.prototype.set = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        _super.prototype.set.call(this, values, offset);\r\n    };\r\n    Short3Attributes.prototype.get = function (count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        return _super.prototype.get.call(this, count, offset);\r\n    };\r\n    Short3Attributes.prototype._internalClone = function (attributesBuffer) {\r\n        return (this._cloneCache = new Short3Attributes(attributesBuffer, this._arrayClass == Uint16Array));\r\n    };\r\n    Short3Attributes.prototype.clone = function (attributesBuffer) {\r\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\r\n        return _super.prototype.clone.call(this, attributesBuffer);\r\n    };\r\n    Short3Attributes.assetType = \"[attributes Short3Attributes]\";\r\n    return Short3Attributes;\r\n}(AttributesView_1.AttributesView));\r\nexports.Short3Attributes = Short3Attributes;\r\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes\":[function(require,module,exports){\n\"use strict\";\r\nvar AttributesView_1 = require(\"./attributes/AttributesView\");\r\nexports.AttributesView = AttributesView_1.AttributesView;\r\nvar AttributesBuffer_1 = require(\"./attributes/AttributesBuffer\");\r\nexports.AttributesBuffer = AttributesBuffer_1.AttributesBuffer;\r\nvar Byte4Attributes_1 = require(\"./attributes/Byte4Attributes\");\r\nexports.Byte4Attributes = Byte4Attributes_1.Byte4Attributes;\r\nvar Float1Attributes_1 = require(\"./attributes/Float1Attributes\");\r\nexports.Float1Attributes = Float1Attributes_1.Float1Attributes;\r\nvar Float2Attributes_1 = require(\"./attributes/Float2Attributes\");\r\nexports.Float2Attributes = Float2Attributes_1.Float2Attributes;\r\nvar Float3Attributes_1 = require(\"./attributes/Float3Attributes\");\r\nexports.Float3Attributes = Float3Attributes_1.Float3Attributes;\r\nvar Float4Attributes_1 = require(\"./attributes/Float4Attributes\");\r\nexports.Float4Attributes = Float4Attributes_1.Float4Attributes;\r\nvar Short2Attributes_1 = require(\"./attributes/Short2Attributes\");\r\nexports.Short2Attributes = Short2Attributes_1.Short2Attributes;\r\nvar Short3Attributes_1 = require(\"./attributes/Short3Attributes\");\r\nexports.Short3Attributes = Short3Attributes_1.Short3Attributes;\r\n},{\"./attributes/AttributesBuffer\":\"awayjs-core/lib/attributes/AttributesBuffer\",\"./attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\",\"./attributes/Byte4Attributes\":\"awayjs-core/lib/attributes/Byte4Attributes\",\"./attributes/Float1Attributes\":\"awayjs-core/lib/attributes/Float1Attributes\",\"./attributes/Float2Attributes\":\"awayjs-core/lib/attributes/Float2Attributes\",\"./attributes/Float3Attributes\":\"awayjs-core/lib/attributes/Float3Attributes\",\"./attributes/Float4Attributes\":\"awayjs-core/lib/attributes/Float4Attributes\",\"./attributes/Short2Attributes\":\"awayjs-core/lib/attributes/Short2Attributes\",\"./attributes/Short3Attributes\":\"awayjs-core/lib/attributes/Short3Attributes\"}],\"awayjs-core/lib/audio/WaveAudio\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AudioManager_1 = require(\"../managers/AudioManager\");\r\nvar AssetBase_1 = require(\"../library/AssetBase\");\r\n// TODO: Audio should probably be an interface containing play/stop/seek functionality\r\nvar WaveAudio = (function (_super) {\r\n    __extends(WaveAudio, _super);\r\n    /**\r\n     *\r\n     */\r\n    function WaveAudio(buffer) {\r\n        _super.call(this);\r\n        this._volume = 1;\r\n        this._buffer = buffer;\r\n    }\r\n    Object.defineProperty(WaveAudio.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return WaveAudio.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WaveAudio.prototype, \"volume\", {\r\n        get: function () {\r\n            return this._volume;\r\n        },\r\n        set: function (value) {\r\n            if (this._volume == value)\r\n                return;\r\n            this._volume = value;\r\n            if (this._audioChannel)\r\n                this._audioChannel.volume = this._volume;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WaveAudio.prototype, \"currentTime\", {\r\n        get: function () {\r\n            if (this._audioChannel)\r\n                return this._audioChannel.currentTime;\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WaveAudio.prototype, \"duration\", {\r\n        get: function () {\r\n            if (this._audioChannel)\r\n                return this._audioChannel.duration;\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WaveAudio.prototype.dispose = function () {\r\n        this.stop();\r\n    };\r\n    WaveAudio.prototype.play = function (offset, loop) {\r\n        if (loop === void 0) { loop = false; }\r\n        this._audioChannel = AudioManager_1.AudioManager.getChannel(this._buffer.byteLength);\r\n        if (this._audioChannel) {\r\n            this._audioChannel.volume = this._volume;\r\n            this._audioChannel.play(this._buffer, offset, loop, this.id);\r\n        }\r\n    };\r\n    WaveAudio.prototype.stop = function () {\r\n        if (this._audioChannel)\r\n            this._audioChannel.stop();\r\n        delete this._audioChannel;\r\n        this._audioChannel = null;\r\n    };\r\n    WaveAudio.prototype.clone = function () {\r\n        var newInstance = new WaveAudio(this._buffer);\r\n        newInstance.name = this.name;\r\n        return newInstance;\r\n    };\r\n    WaveAudio.assetType = \"[asset WaveAudio]\";\r\n    return WaveAudio;\r\n}(AssetBase_1.AssetBase));\r\nexports.WaveAudio = WaveAudio;\r\n},{\"../library/AssetBase\":\"awayjs-core/lib/library/AssetBase\",\"../managers/AudioManager\":\"awayjs-core/lib/managers/AudioManager\"}],\"awayjs-core/lib/audio\":[function(require,module,exports){\n\"use strict\";\r\nvar WaveAudio_1 = require(\"./audio/WaveAudio\");\r\nexports.WaveAudio = WaveAudio_1.WaveAudio;\r\n},{\"./audio/WaveAudio\":\"awayjs-core/lib/audio/WaveAudio\"}],\"awayjs-core/lib/errors/AbstractMethodError\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nvar AbstractMethodError = (function (_super) {\r\n    __extends(AbstractMethodError, _super);\r\n    /**\r\n     * Create a new AbstractMethodError.\r\n     * @param message An optional message to override the default error message.\r\n     * @param id The id of the error.\r\n     */\r\n    function AbstractMethodError(message, id) {\r\n        if (message === void 0) { message = null; }\r\n        if (id === void 0) { id = 0; }\r\n        _super.call(this, message || \"An abstract method was called! Either an instance of an abstract export class was created, or an abstract method was not overridden by the subclass.\", id);\r\n    }\r\n    return AbstractMethodError;\r\n}(ErrorBase_1.ErrorBase));\r\nexports.AbstractMethodError = AbstractMethodError;\r\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors/ArgumentError\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nvar ArgumentError = (function (_super) {\r\n    __extends(ArgumentError, _super);\r\n    /**\r\n     * Create a new ArgumentError.\r\n     *\r\n     * @param message An optional message to override the default error message.\r\n     * @param id The id of the error.\r\n     */\r\n    function ArgumentError(message, id) {\r\n        if (message === void 0) { message = null; }\r\n        if (id === void 0) { id = 0; }\r\n        _super.call(this, message || \"ArgumentError\", id);\r\n    }\r\n    return ArgumentError;\r\n}(ErrorBase_1.ErrorBase));\r\nexports.ArgumentError = ArgumentError;\r\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors/DocumentError\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\r\nvar DocumentError = (function (_super) {\r\n    __extends(DocumentError, _super);\r\n    function DocumentError(message, id) {\r\n        if (message === void 0) { message = \"DocumentError\"; }\r\n        if (id === void 0) { id = 0; }\r\n        _super.call(this, message, id);\r\n    }\r\n    DocumentError.DOCUMENT_DOES_NOT_EXIST = \"documentDoesNotExist\";\r\n    return DocumentError;\r\n}(ErrorBase_1.ErrorBase));\r\nexports.DocumentError = DocumentError;\r\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors/ErrorBase\":[function(require,module,exports){\n\"use strict\";\r\nvar ErrorBase = (function () {\r\n    function ErrorBase(message, id, _name) {\r\n        if (message === void 0) { message = ''; }\r\n        if (id === void 0) { id = 0; }\r\n        if (_name === void 0) { _name = ''; }\r\n        this._errorID = 0; //Contains the reference number associated with the specific error message.\r\n        this._messsage = ''; //Contains the message associated with the Error object.\r\n        this._name = ''; // Contains the name of the Error object.\r\n        this._messsage = message;\r\n        this._name = name;\r\n        this._errorID = id;\r\n    }\r\n    Object.defineProperty(ErrorBase.prototype, \"message\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return this._messsage;\r\n        },\r\n        /**\r\n         *\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this._messsage = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorBase.prototype, \"name\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return this._name;\r\n        },\r\n        /**\r\n         *\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this._name = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ErrorBase.prototype, \"errorID\", {\r\n        /**\r\n         *\r\n         * @returns {number}\r\n         */\r\n        get: function () {\r\n            return this._errorID;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ErrorBase;\r\n}());\r\nexports.ErrorBase = ErrorBase;\r\n},{}],\"awayjs-core/lib/errors/PartialImplementationError\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nvar PartialImplementationError = (function (_super) {\r\n    __extends(PartialImplementationError, _super);\r\n    /**\r\n     * Create a new AbstractMethodError.\r\n     * @param message An optional message to override the default error message.\r\n     * @param id The id of the error.\r\n     */\r\n    function PartialImplementationError(dependency, id) {\r\n        if (dependency === void 0) { dependency = ''; }\r\n        if (id === void 0) { id = 0; }\r\n        _super.call(this, \"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\r\n    }\r\n    return PartialImplementationError;\r\n}(ErrorBase_1.ErrorBase));\r\nexports.PartialImplementationError = PartialImplementationError;\r\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors/RangeError\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\r\n/**\r\n * RangeError is thrown when an index is accessed out of range of the number of\r\n * available indices on an Array.\r\n */\r\nvar RangeError = (function (_super) {\r\n    __extends(RangeError, _super);\r\n    /**\r\n     * Create a new RangeError.\r\n     *\r\n     * @param message An optional message to override the default error message.\r\n     * @param id The id of the error.\r\n     */\r\n    function RangeError(message, id) {\r\n        if (message === void 0) { message = null; }\r\n        if (id === void 0) { id = 0; }\r\n        _super.call(this, message || \"RangeError\", id);\r\n    }\r\n    return RangeError;\r\n}(ErrorBase_1.ErrorBase));\r\nexports.RangeError = RangeError;\r\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors\":[function(require,module,exports){\n\"use strict\";\r\nvar AbstractMethodError_1 = require(\"./errors/AbstractMethodError\");\r\nexports.AbstractMethodError = AbstractMethodError_1.AbstractMethodError;\r\nvar ArgumentError_1 = require(\"./errors/ArgumentError\");\r\nexports.ArgumentError = ArgumentError_1.ArgumentError;\r\nvar DocumentError_1 = require(\"./errors/DocumentError\");\r\nexports.DocumentError = DocumentError_1.DocumentError;\r\nvar ErrorBase_1 = require(\"./errors/ErrorBase\");\r\nexports.ErrorBase = ErrorBase_1.ErrorBase;\r\nvar PartialImplementationError_1 = require(\"./errors/PartialImplementationError\");\r\nexports.PartialImplementationError = PartialImplementationError_1.PartialImplementationError;\r\nvar RangeError_1 = require(\"./errors/RangeError\");\r\nexports.RangeError = RangeError_1.RangeError;\r\n},{\"./errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"./errors/ArgumentError\":\"awayjs-core/lib/errors/ArgumentError\",\"./errors/DocumentError\":\"awayjs-core/lib/errors/DocumentError\",\"./errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\",\"./errors/PartialImplementationError\":\"awayjs-core/lib/errors/PartialImplementationError\",\"./errors/RangeError\":\"awayjs-core/lib/errors/RangeError\"}],\"awayjs-core/lib/events/AssetEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"../events/EventBase\");\r\n/**\r\n * @export class away.events.AssetEvent\r\n */\r\nvar AssetEvent = (function (_super) {\r\n    __extends(AssetEvent, _super);\r\n    /**\r\n     *\r\n     */\r\n    function AssetEvent(type, asset, prevName) {\r\n        if (prevName === void 0) { prevName = null; }\r\n        _super.call(this, type);\r\n        this._asset = asset;\r\n        this._prevName = prevName || this._asset.name;\r\n    }\r\n    Object.defineProperty(AssetEvent.prototype, \"asset\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._asset;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AssetEvent.prototype, \"prevName\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._prevName;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     */\r\n    AssetEvent.prototype.clone = function () {\r\n        return new AssetEvent(this.type, this._asset, this._prevName);\r\n    };\r\n    /**\r\n     * Dispatched when the content of an asset is invalidated\r\n     */\r\n    AssetEvent.INVALIDATE = \"invalidate\";\r\n    /**\r\n     * Dispatched when an asset is diposed\r\n     */\r\n    AssetEvent.DISPOSE = \"dispose\";\r\n    /**\r\n     * Dispatched when an asset is cleared\r\n     */\r\n    AssetEvent.CLEAR = \"clear\";\r\n    /**\r\n     *\r\n     */\r\n    AssetEvent.RENAME = 'rename';\r\n    /**\r\n     *\r\n     */\r\n    AssetEvent.ENTER_FRAME = 'enterFrame';\r\n    /**\r\n     *\r\n     */\r\n    AssetEvent.EXIT_FRAME = 'exitFrame';\r\n    /**\r\n     *\r\n     */\r\n    AssetEvent.ASSET_CONFLICT_RESOLVED = 'assetConflictResolved';\r\n    /**\r\n     * Dispatched when the loading of an asset and all of its dependencies is complete.\r\n     */\r\n    AssetEvent.ASSET_COMPLETE = \"assetComplete\";\r\n    /**\r\n     *\r\n     */\r\n    AssetEvent.TEXTURE_SIZE_ERROR = 'textureSizeError';\r\n    return AssetEvent;\r\n}(EventBase_1.EventBase));\r\nexports.AssetEvent = AssetEvent;\r\n},{\"../events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/EventBase\":[function(require,module,exports){\n\"use strict\";\r\nvar EventBase = (function () {\r\n    function EventBase(type) {\r\n        /**\r\n         * Type of event\r\n         * @property type\r\n         * @type String\r\n         */\r\n        this.type = undefined;\r\n        /**\r\n         * Reference to target object\r\n         * @property target\r\n         * @type Object\r\n         */\r\n        this.target = undefined;\r\n        this.type = type;\r\n    }\r\n    /**\r\n     * Clones the current event.\r\n     * @return An exact duplicate of the current event.\r\n     */\r\n    EventBase.prototype.clone = function () {\r\n        return new EventBase(this.type);\r\n    };\r\n    return EventBase;\r\n}());\r\nexports.EventBase = EventBase;\r\n},{}],\"awayjs-core/lib/events/EventDispatcher\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * Base export class for dispatching events\r\n*\r\n* @export class away.events.EventDispatcher\r\n*\r\n*/\r\nvar EventDispatcher = (function () {\r\n    function EventDispatcher(target) {\r\n        if (target === void 0) { target = null; }\r\n        this.listenerObjects = new Array();\r\n        this.target = target || this;\r\n    }\r\n    /**\r\n     * Add an event listener\r\n     * @method addEventListener\r\n     * @param {String} Name of event to add a listener for\r\n     * @param {Function} Callback function\r\n     */\r\n    EventDispatcher.prototype.addEventListener = function (type, listener) {\r\n        var l = this.listenerObjects[type];\r\n        if (l === undefined)\r\n            l = this.listenerObjects[type] = new ListenerObject();\r\n        l.addEventListener(listener);\r\n    };\r\n    /**\r\n     * Remove an event listener\r\n     * @method removeEventListener\r\n     * @param {String} Name of event to remove a listener for\r\n     * @param {Function} Callback function\r\n     */\r\n    EventDispatcher.prototype.removeEventListener = function (type, listener) {\r\n        var l = this.listenerObjects[type];\r\n        if (l) {\r\n            l.removeEventListener(listener);\r\n            if (l.numListeners == 0)\r\n                delete this.listenerObjects[type];\r\n        }\r\n    };\r\n    /**\r\n     * Dispatch an event\r\n     * @method dispatchEvent\r\n     * @param {Event} Event to dispatch\r\n     */\r\n    EventDispatcher.prototype.dispatchEvent = function (event) {\r\n        var l = this.listenerObjects[event.type];\r\n        if (l) {\r\n            event.target = this.target;\r\n            l.dispatchEvent(event);\r\n        }\r\n    };\r\n    /**\r\n     * check if an object has an event listener assigned to it\r\n     * @method hasListener\r\n     * @param {String} Name of event to remove a listener for\r\n     * @param {Function} Callback function\r\n     */\r\n    EventDispatcher.prototype.hasEventListener = function (type, listener) {\r\n        if (this.listenerObjects[type] === undefined)\r\n            return false;\r\n        if (listener != null)\r\n            return this.listenerObjects[type].getEventListenerIndex(listener) !== -1;\r\n        return this.listenerObjects[type].numListeners > 0;\r\n    };\r\n    return EventDispatcher;\r\n}());\r\nexports.EventDispatcher = EventDispatcher;\r\nvar ListenerObject = (function () {\r\n    function ListenerObject() {\r\n        this.index = 0;\r\n        this.listeners = new Array();\r\n        this.numListeners = 0;\r\n    }\r\n    ListenerObject.prototype.addEventListener = function (listener) {\r\n        //check if listener already added\r\n        if (this.getEventListenerIndex(listener) !== -1)\r\n            return;\r\n        this.listeners.push(listener);\r\n        this.numListeners++;\r\n    };\r\n    ListenerObject.prototype.removeEventListener = function (listener) {\r\n        //check if listener exists\r\n        var index = this.getEventListenerIndex(listener);\r\n        if (index === -1)\r\n            return;\r\n        this.listeners.splice(index, 1);\r\n        if (index <= this.index)\r\n            this.index--;\r\n        this.numListeners--;\r\n    };\r\n    ListenerObject.prototype.dispatchEvent = function (event) {\r\n        var len = this.numListeners;\r\n        for (this.index = 0; this.index < len && this.index < this.numListeners; this.index++)\r\n            this.listeners[this.index](event);\r\n    };\r\n    /**\r\n     * get Event Listener Index in array. Returns -1 if no listener is added\r\n     * @method getEventListenerIndex\r\n     * @param {String} Name of event to remove a listener for\r\n     * @param {Function} Callback function\r\n     */\r\n    ListenerObject.prototype.getEventListenerIndex = function (listener) {\r\n        for (var index = 0; index < this.numListeners; index++)\r\n            if (listener == this.listeners[index])\r\n                return index;\r\n        return -1;\r\n    };\r\n    return ListenerObject;\r\n}());\r\nexports.ListenerObject = ListenerObject;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = EventDispatcher;\r\n},{}],\"awayjs-core/lib/events/IEventDispatcher\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-core/lib/events/LoaderEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"../events/EventBase\");\r\nvar LoaderEvent = (function (_super) {\r\n    __extends(LoaderEvent, _super);\r\n    /**\r\n     * Create a new LoaderEvent object.\r\n     *\r\n     * @param type The event type.\r\n     * @param url The url of the loaded resource.\r\n     * @param assets The assets of the loaded resource.\r\n     */\r\n    function LoaderEvent(type, url, content, assets) {\r\n        if (url === void 0) { url = null; }\r\n        if (content === void 0) { content = null; }\r\n        if (assets === void 0) { assets = null; }\r\n        _super.call(this, type);\r\n        this._url = url;\r\n        this._content = content;\r\n        this._assets = assets;\r\n    }\r\n    Object.defineProperty(LoaderEvent.prototype, \"content\", {\r\n        /**\r\n         * The content returned if the resource has been loaded inside a <code>Loader</code> object.\r\n         */\r\n        get: function () {\r\n            return this._content;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LoaderEvent.prototype, \"url\", {\r\n        /**\r\n         * The url of the loaded resource.\r\n         */\r\n        get: function () {\r\n            return this._url;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LoaderEvent.prototype, \"assets\", {\r\n        /**\r\n         * The error string on loadError.\r\n         */\r\n        get: function () {\r\n            return this._assets;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clones the current event.\r\n     * @return An exact duplicate of the current event.\r\n     */\r\n    LoaderEvent.prototype.clone = function () {\r\n        return new LoaderEvent(this.type, this._url, this._content, this._assets);\r\n    };\r\n    /**\r\n     * Dispatched when the loading of a session and all of its dependencies is complete.\r\n     */\r\n    LoaderEvent.LOAD_COMPLETE = \"loadComplete\";\r\n    return LoaderEvent;\r\n}(EventBase_1.EventBase));\r\nexports.LoaderEvent = LoaderEvent;\r\n},{\"../events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/ParserEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"../events/EventBase\");\r\nvar ParserEvent = (function (_super) {\r\n    __extends(ParserEvent, _super);\r\n    function ParserEvent(type, message) {\r\n        if (message === void 0) { message = ''; }\r\n        _super.call(this, type);\r\n        this._message = message;\r\n    }\r\n    Object.defineProperty(ParserEvent.prototype, \"message\", {\r\n        /**\r\n         * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\r\n         */\r\n        get: function () {\r\n            return this._message;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ParserEvent.prototype.clone = function () {\r\n        return new ParserEvent(this.type, this._message);\r\n    };\r\n    /**\r\n     * Dispatched when parsing of an asset completed.\r\n     */\r\n    ParserEvent.PARSE_COMPLETE = 'parseComplete';\r\n    /**\r\n     * Dispatched when an error occurs while parsing the data (e.g. because it's\r\n     * incorrectly formatted.)\r\n     */\r\n    ParserEvent.PARSE_ERROR = 'parseError';\r\n    /**\r\n     * Dispatched when a parser is ready to have dependencies retrieved and resolved.\r\n     * This is an internal event that should rarely (if ever) be listened for by\r\n     * external classes.\r\n     */\r\n    ParserEvent.READY_FOR_DEPENDENCIES = 'readyForDependencies';\r\n    return ParserEvent;\r\n}(EventBase_1.EventBase));\r\nexports.ParserEvent = ParserEvent;\r\n},{\"../events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/ProjectionEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"../events/EventBase\");\r\nvar ProjectionEvent = (function (_super) {\r\n    __extends(ProjectionEvent, _super);\r\n    function ProjectionEvent(type, projection) {\r\n        _super.call(this, type);\r\n        this._projection = projection;\r\n    }\r\n    Object.defineProperty(ProjectionEvent.prototype, \"projection\", {\r\n        get: function () {\r\n            return this._projection;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ProjectionEvent.MATRIX_CHANGED = \"matrixChanged\";\r\n    return ProjectionEvent;\r\n}(EventBase_1.EventBase));\r\nexports.ProjectionEvent = ProjectionEvent;\r\n},{\"../events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/TimerEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"../events/EventBase\");\r\nvar TimerEvent = (function (_super) {\r\n    __extends(TimerEvent, _super);\r\n    function TimerEvent(type) {\r\n        _super.call(this, type);\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    TimerEvent.TIMER = \"timer\";\r\n    /**\r\n     *\r\n     */\r\n    TimerEvent.TIMER_COMPLETE = \"timerComplete\";\r\n    return TimerEvent;\r\n}(EventBase_1.EventBase));\r\nexports.TimerEvent = TimerEvent;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = TimerEvent;\r\n},{\"../events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/URLLoaderEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"../events/EventBase\");\r\nvar URLLoaderEvent = (function (_super) {\r\n    __extends(URLLoaderEvent, _super);\r\n    function URLLoaderEvent(type, urlLoader) {\r\n        _super.call(this, type);\r\n        this._urlLoader = urlLoader;\r\n    }\r\n    Object.defineProperty(URLLoaderEvent.prototype, \"urlLoader\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._urlLoader;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     */\r\n    URLLoaderEvent.prototype.clone = function () {\r\n        return new URLLoaderEvent(this.type, this._urlLoader);\r\n    };\r\n    URLLoaderEvent.HTTP_STATUS = \"httpStatus\";\r\n    URLLoaderEvent.LOAD_ERROR = \"loadError\";\r\n    URLLoaderEvent.LOAD_PROGRESS = \"loadProgress\";\r\n    URLLoaderEvent.LOAD_START = \"loadStart\";\r\n    URLLoaderEvent.LOAD_COMPLETE = \"loadComplete\";\r\n    return URLLoaderEvent;\r\n}(EventBase_1.EventBase));\r\nexports.URLLoaderEvent = URLLoaderEvent;\r\n},{\"../events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events\":[function(require,module,exports){\n\"use strict\";\r\nvar AssetEvent_1 = require(\"./events/AssetEvent\");\r\nexports.AssetEvent = AssetEvent_1.AssetEvent;\r\nvar EventBase_1 = require(\"./events/EventBase\");\r\nexports.EventBase = EventBase_1.EventBase;\r\nvar EventDispatcher_1 = require(\"./events/EventDispatcher\");\r\nexports.EventDispatcher = EventDispatcher_1.EventDispatcher;\r\nvar LoaderEvent_1 = require(\"./events/LoaderEvent\");\r\nexports.LoaderEvent = LoaderEvent_1.LoaderEvent;\r\nvar ParserEvent_1 = require(\"./events/ParserEvent\");\r\nexports.ParserEvent = ParserEvent_1.ParserEvent;\r\nvar ProjectionEvent_1 = require(\"./events/ProjectionEvent\");\r\nexports.ProjectionEvent = ProjectionEvent_1.ProjectionEvent;\r\nvar TimerEvent_1 = require(\"./events/TimerEvent\");\r\nexports.TimerEvent = TimerEvent_1.TimerEvent;\r\nvar URLLoaderEvent_1 = require(\"./events/URLLoaderEvent\");\r\nexports.URLLoaderEvent = URLLoaderEvent_1.URLLoaderEvent;\r\n},{\"./events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"./events/EventBase\":\"awayjs-core/lib/events/EventBase\",\"./events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"./events/LoaderEvent\":\"awayjs-core/lib/events/LoaderEvent\",\"./events/ParserEvent\":\"awayjs-core/lib/events/ParserEvent\",\"./events/ProjectionEvent\":\"awayjs-core/lib/events/ProjectionEvent\",\"./events/TimerEvent\":\"awayjs-core/lib/events/TimerEvent\",\"./events/URLLoaderEvent\":\"awayjs-core/lib/events/URLLoaderEvent\"}],\"awayjs-core/lib/geom/Box\":[function(require,module,exports){\n\"use strict\";\r\nvar Vector3D_1 = require(\"../geom/Vector3D\");\r\n/**\r\n * A Box object is an area defined by its position, as indicated by its\r\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\r\n * height and depth.\r\n *\r\n *\r\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n * <code>height</code> <code>depth</code> properties of the Box export class are\r\n * independent of each other; changing the value of one property has no effect\r\n * on the others. However, the <code>right</code>, <code>bottom</code> and\r\n * <code>back</code> properties are integrally related to those six\r\n * properties. For example, if you change the value of the <code>right</code>\r\n * property, the value of the <code>width</code> property changes; if you\r\n * change the <code>bottom</code> property, the value of the\r\n * <code>height</code> property changes. </p>\r\n *\r\n * <p>The following methods and properties use Box objects:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Box()</code> constructor to create a\r\n * Box object.</p>\r\n *\r\n * <p><b>Note:</b> The Box export class does not define a cubic Shape\r\n * display object.\r\n */\r\nvar Box = (function () {\r\n    /**\r\n     * Creates a new Box object with the top-left-front corner specified by the\r\n     * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\r\n     * specified <code>width</code>, <code>height</code> and <code>depth</code>\r\n     * parameters. If you call this public without parameters, a box with\r\n     * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n     * <code>height</code> and <code>depth</code> properties set to 0 is created.\r\n     *\r\n     * @param x      The <i>x</i> coordinate of the top-left-front corner of the\r\n     *               box.\r\n     * @param y      The <i>y</i> coordinate of the top-left-front corner of the\r\n     *               box.\r\n     * @param z      The <i>z</i> coordinate of the top-left-front corner of the\r\n     *               box.\r\n     * @param width  The width of the box, in pixels.\r\n     * @param height The height of the box, in pixels.\r\n     * @param depth The depth of the box, in pixels.\r\n     */\r\n    function Box(x, y, z, width, height, depth) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        if (z === void 0) { z = 0; }\r\n        if (width === void 0) { width = 0; }\r\n        if (height === void 0) { height = 0; }\r\n        if (depth === void 0) { depth = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.depth = depth;\r\n    }\r\n    Object.defineProperty(Box.prototype, \"back\", {\r\n        /**\r\n         * The sum of the <code>z</code> and <code>height</code> properties.\r\n         */\r\n        get: function () {\r\n            return this.z + this.depth;\r\n        },\r\n        set: function (val) {\r\n            this.depth = val - this.z;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"bottom\", {\r\n        /**\r\n         * The sum of the <code>y</code> and <code>height</code> properties.\r\n         */\r\n        get: function () {\r\n            return this.y + this.height;\r\n        },\r\n        set: function (val) {\r\n            this.height = val - this.y;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"bottomRightBack\", {\r\n        /**\r\n         * The location of the Box object's bottom-right corner, determined by the\r\n         * values of the <code>right</code> and <code>bottom</code> properties.\r\n         */\r\n        get: function () {\r\n            if (this._bottomRightBack == null)\r\n                this._bottomRightBack = new Vector3D_1.Vector3D();\r\n            this._bottomRightBack.x = this.x + this.width;\r\n            this._bottomRightBack.y = this.y + this.height;\r\n            this._bottomRightBack.z = this.z + this.depth;\r\n            return this._bottomRightBack;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"front\", {\r\n        /**\r\n         * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\r\n         * the <code>front</code> property of a Box object has no effect on the\r\n         * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\r\n         * properties. However it does affect the <code>depth</code> property,\r\n         * whereas changing the <code>z</code> value does <i>not</i> affect the\r\n         * <code>depth</code> property.\r\n         *\r\n         * <p>The value of the <code>left</code> property is equal to the value of\r\n         * the <code>x</code> property.</p>\r\n         */\r\n        get: function () {\r\n            return this.z;\r\n        },\r\n        set: function (val) {\r\n            this.depth += this.z - val;\r\n            this.z = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"left\", {\r\n        /**\r\n         * The <i>x</i> coordinate of the top-left corner of the box. Changing the\r\n         * <code>left</code> property of a Box object has no effect on the\r\n         * <code>y</code> and <code>height</code> properties. However it does affect\r\n         * the <code>width</code> property, whereas changing the <code>x</code> value\r\n         * does <i>not</i> affect the <code>width</code> property.\r\n         *\r\n         * <p>The value of the <code>left</code> property is equal to the value of\r\n         * the <code>x</code> property.</p>\r\n         */\r\n        get: function () {\r\n            return this.x;\r\n        },\r\n        set: function (val) {\r\n            this.width += this.x - val;\r\n            this.x = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"right\", {\r\n        /**\r\n         * The sum of the <code>x</code> and <code>width</code> properties.\r\n         */\r\n        get: function () {\r\n            return this.x + this.width;\r\n        },\r\n        set: function (val) {\r\n            this.width = val - this.x;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"size\", {\r\n        /**\r\n         * The size of the Box object, expressed as a Vector3D object with the\r\n         * values of the <code>width</code>, <code>height</code> and\r\n         * <code>depth</code> properties.\r\n         */\r\n        get: function () {\r\n            if (this._size == null)\r\n                this._size = new Vector3D_1.Vector3D();\r\n            this._size.x = this.width;\r\n            this._size.y = this.height;\r\n            this._size.z = this.depth;\r\n            return this._size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"top\", {\r\n        /**\r\n         * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\r\n         * the <code>top</code> property of a Box object has no effect on the\r\n         * <code>x</code> and <code>width</code> properties. However it does affect\r\n         * the <code>height</code> property, whereas changing the <code>y</code>\r\n         * value does <i>not</i> affect the <code>height</code> property.\r\n         *\r\n         * <p>The value of the <code>top</code> property is equal to the value of the\r\n         * <code>y</code> property.</p>\r\n         */\r\n        get: function () {\r\n            return this.y;\r\n        },\r\n        set: function (val) {\r\n            this.height += (this.y - val);\r\n            this.y = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"topLeftFront\", {\r\n        /**\r\n         * The location of the Box object's top-left-front corner, determined by the\r\n         * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\r\n         */\r\n        get: function () {\r\n            if (this._topLeftFront == null)\r\n                this._topLeftFront = new Vector3D_1.Vector3D();\r\n            this._topLeftFront.x = this.x;\r\n            this._topLeftFront.y = this.y;\r\n            this._topLeftFront.z = this.z;\r\n            return this._topLeftFront;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new Box object with the same values for the <code>x</code>,\r\n     * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\r\n     * and <code>depth</code> properties as the original Box object.\r\n     *\r\n     * @return A new Box object with the same values for the <code>x</code>,\r\n     *         <code>y</code>, <code>z</code>, <code>width</code>,\r\n     *         <code>height</code> and <code>depth</code> properties as the\r\n     *         original Box object.\r\n     */\r\n    Box.prototype.clone = function () {\r\n        return new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\r\n    };\r\n    /**\r\n     * Determines whether the specified position is contained within the cubic\r\n     * region defined by this Box object.\r\n     *\r\n     * @param x The <i>x</i> coordinate(horizontal component) of the position.\r\n     * @param y The <i>y</i> coordinate(vertical component) of the position.\r\n     * @param z The <i>z</i> coordinate(longitudinal component) of the position.\r\n     * @return A value of <code>true</code> if the Box object contains the\r\n     *         specified position; otherwise <code>false</code>.\r\n     */\r\n    Box.prototype.contains = function (x, y, z) {\r\n        return (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\r\n    };\r\n    /**\r\n     * Determines whether the specified position is contained within the cubic\r\n     * region defined by this Box object. This method is similar to the\r\n     * <code>Box.contains()</code> method, except that it takes a Vector3D\r\n     * object as a parameter.\r\n     *\r\n     * @param position The position, as represented by its <i>x</i>, <i>y</i> and\r\n     *                 <i>z</i> coordinates.\r\n     * @return A value of <code>true</code> if the Box object contains the\r\n     *         specified position; otherwise <code>false</code>.\r\n     */\r\n    Box.prototype.containsPoint = function (position) {\r\n        return (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\r\n    };\r\n    /**\r\n     * Determines whether the Box object specified by the <code>box</code>\r\n     * parameter is contained within this Box object. A Box object is said to\r\n     * contain another if the second Box object falls entirely within the\r\n     * boundaries of the first.\r\n     *\r\n     * @param box The Box object being checked.\r\n     * @return A value of <code>true</code> if the Box object that you specify\r\n     *         is contained by this Box object; otherwise <code>false</code>.\r\n     */\r\n    Box.prototype.containsBox = function (box) {\r\n        return (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth);\r\n    };\r\n    /**\r\n     * Copies all of box data from the source Box object into the calling\r\n     * Box object.\r\n     *\r\n     * @param sourceBox The Box object from which to copy the data.\r\n     */\r\n    Box.prototype.copyFrom = function (sourceBox) {\r\n        this.x = sourceBox.x;\r\n        this.y = sourceBox.y;\r\n        this.z = sourceBox.z;\r\n        this.width = sourceBox.width;\r\n        this.height = sourceBox.height;\r\n        this.depth = sourceBox.depth;\r\n    };\r\n    /**\r\n     * Determines whether the object specified in the <code>toCompare</code>\r\n     * parameter is equal to this Box object. This method compares the\r\n     * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n     * <code>height</code> and <code>depth</code> properties of an object against\r\n     * the same properties of this Box object.\r\n     *\r\n     * @param toCompare The box to compare to this Box object.\r\n     * @return A value of <code>true</code> if the object has exactly the same\r\n     *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\r\n     *         <code>width</code>, <code>height</code> and <code>depth</code>\r\n     *         properties as this Box object; otherwise <code>false</code>.\r\n     */\r\n    Box.prototype.equals = function (toCompare) {\r\n        return (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth);\r\n    };\r\n    /**\r\n     * Increases the size of the Box object by the specified amounts, in\r\n     * pixels. The center point of the Box object stays the same, and its\r\n     * size increases to the left and right by the <code>dx</code> value, to\r\n     * the top and the bottom by the <code>dy</code> value, and to\r\n     * the front and the back by the <code>dz</code> value.\r\n     *\r\n     * @param dx The value to be added to the left and the right of the Box\r\n     *           object. The following equation is used to calculate the new\r\n     *           width and position of the box:\r\n     * @param dy The value to be added to the top and the bottom of the Box\r\n     *           object. The following equation is used to calculate the new\r\n     *           height and position of the box:\r\n     * @param dz The value to be added to the front and the back of the Box\r\n     *           object. The following equation is used to calculate the new\r\n     *           depth and position of the box:\r\n     */\r\n    Box.prototype.inflate = function (dx, dy, dz) {\r\n        this.x -= dx / 2;\r\n        this.y -= dy / 2;\r\n        this.z -= dz / 2;\r\n        this.width += dx / 2;\r\n        this.height += dy / 2;\r\n        this.depth += dz / 2;\r\n    };\r\n    /**\r\n     * Increases the size of the Box object. This method is similar to the\r\n     * <code>Box.inflate()</code> method except it takes a Vector3D object as\r\n     * a parameter.\r\n     *\r\n     * <p>The following two code examples give the same result:</p>\r\n     *\r\n     * @param delta The <code>x</code> property of this Vector3D object is used to\r\n     *              increase the horizontal dimension of the Box object.\r\n     *              The <code>y</code> property is used to increase the vertical\r\n     *              dimension of the Box object.\r\n     *              The <code>z</code> property is used to increase the\r\n     *              longitudinal dimension of the Box object.\r\n     */\r\n    Box.prototype.inflatePoint = function (delta) {\r\n        this.x -= delta.x / 2;\r\n        this.y -= delta.y / 2;\r\n        this.z -= delta.z / 2;\r\n        this.width += delta.x / 2;\r\n        this.height += delta.y / 2;\r\n        this.depth += delta.z / 2;\r\n    };\r\n    /**\r\n     * If the Box object specified in the <code>toIntersect</code> parameter\r\n     * intersects with this Box object, returns the area of intersection\r\n     * as a Box object. If the boxes do not intersect, this method returns an\r\n     * empty Box object with its properties set to 0.\r\n     *\r\n     * @param toIntersect The Box object to compare against to see if it\r\n     *                    intersects with this Box object.\r\n     * @return A Box object that equals the area of intersection. If the\r\n     *         boxes do not intersect, this method returns an empty Box\r\n     *         object; that is, a box with its <code>x</code>, <code>y</code>,\r\n     *         <code>z</code>, <code>width</code>,  <code>height</code>, and\r\n     *         <code>depth</code> properties set to 0.\r\n     */\r\n    Box.prototype.intersection = function (toIntersect) {\r\n        if (this.intersects(toIntersect)) {\r\n            var i = new Box();\r\n            if (this.x > toIntersect.x) {\r\n                i.x = this.x;\r\n                i.width = toIntersect.x - this.x + toIntersect.width;\r\n                if (i.width > this.width)\r\n                    i.width = this.width;\r\n            }\r\n            else {\r\n                i.x = toIntersect.x;\r\n                i.width = this.x - toIntersect.x + this.width;\r\n                if (i.width > toIntersect.width)\r\n                    i.width = toIntersect.width;\r\n            }\r\n            if (this.y > toIntersect.y) {\r\n                i.y = this.y;\r\n                i.height = toIntersect.y - this.y + toIntersect.height;\r\n                if (i.height > this.height)\r\n                    i.height = this.height;\r\n            }\r\n            else {\r\n                i.y = toIntersect.y;\r\n                i.height = this.y - toIntersect.y + this.height;\r\n                if (i.height > toIntersect.height)\r\n                    i.height = toIntersect.height;\r\n            }\r\n            if (this.z > toIntersect.z) {\r\n                i.z = this.z;\r\n                i.depth = toIntersect.z - this.z + toIntersect.depth;\r\n                if (i.depth > this.depth)\r\n                    i.depth = this.depth;\r\n            }\r\n            else {\r\n                i.z = toIntersect.z;\r\n                i.depth = this.z - toIntersect.z + this.depth;\r\n                if (i.depth > toIntersect.depth)\r\n                    i.depth = toIntersect.depth;\r\n            }\r\n            return i;\r\n        }\r\n        return new Box();\r\n    };\r\n    /**\r\n     * Determines whether the object specified in the <code>toIntersect</code>\r\n     * parameter intersects with this Box object. This method checks the\r\n     * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n     * <code>height</code>, and <code>depth</code> properties of the specified\r\n     * Box object to see if it intersects with this Box object.\r\n     *\r\n     * @param toIntersect The Box object to compare against this Box object.\r\n     * @return A value of <code>true</code> if the specified object intersects\r\n     *         with this Box object; otherwise <code>false</code>.\r\n     */\r\n    Box.prototype.intersects = function (toIntersect) {\r\n        return (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\r\n    };\r\n    Box.prototype.rayIntersection = function (position, direction, targetNormal) {\r\n        if (this.containsPoint(position))\r\n            return 0;\r\n        var halfExtentsX = this.width / 2;\r\n        var halfExtentsY = this.height / 2;\r\n        var halfExtentsZ = this.depth / 2;\r\n        var centerX = this.x + halfExtentsX;\r\n        var centerY = this.y + halfExtentsY;\r\n        var centerZ = this.z + halfExtentsZ;\r\n        var px = position.x - centerX;\r\n        var py = position.y - centerY;\r\n        var pz = position.z - centerZ;\r\n        var vx = direction.x;\r\n        var vy = direction.y;\r\n        var vz = direction.z;\r\n        var ix;\r\n        var iy;\r\n        var iz;\r\n        var rayEntryDistance;\r\n        // ray-plane tests\r\n        var intersects;\r\n        if (vx < 0) {\r\n            rayEntryDistance = (halfExtentsX - px) / vx;\r\n            if (rayEntryDistance > 0) {\r\n                iy = py + rayEntryDistance * vy;\r\n                iz = pz + rayEntryDistance * vz;\r\n                if (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n                    targetNormal.x = 1;\r\n                    targetNormal.y = 0;\r\n                    targetNormal.z = 0;\r\n                    intersects = true;\r\n                }\r\n            }\r\n        }\r\n        if (!intersects && vx > 0) {\r\n            rayEntryDistance = (-halfExtentsX - px) / vx;\r\n            if (rayEntryDistance > 0) {\r\n                iy = py + rayEntryDistance * vy;\r\n                iz = pz + rayEntryDistance * vz;\r\n                if (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n                    targetNormal.x = -1;\r\n                    targetNormal.y = 0;\r\n                    targetNormal.z = 0;\r\n                    intersects = true;\r\n                }\r\n            }\r\n        }\r\n        if (!intersects && vy < 0) {\r\n            rayEntryDistance = (halfExtentsY - py) / vy;\r\n            if (rayEntryDistance > 0) {\r\n                ix = px + rayEntryDistance * vx;\r\n                iz = pz + rayEntryDistance * vz;\r\n                if (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n                    targetNormal.x = 0;\r\n                    targetNormal.y = 1;\r\n                    targetNormal.z = 0;\r\n                    intersects = true;\r\n                }\r\n            }\r\n        }\r\n        if (!intersects && vy > 0) {\r\n            rayEntryDistance = (-halfExtentsY - py) / vy;\r\n            if (rayEntryDistance > 0) {\r\n                ix = px + rayEntryDistance * vx;\r\n                iz = pz + rayEntryDistance * vz;\r\n                if (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n                    targetNormal.x = 0;\r\n                    targetNormal.y = -1;\r\n                    targetNormal.z = 0;\r\n                    intersects = true;\r\n                }\r\n            }\r\n        }\r\n        if (!intersects && vz < 0) {\r\n            rayEntryDistance = (halfExtentsZ - pz) / vz;\r\n            if (rayEntryDistance > 0) {\r\n                ix = px + rayEntryDistance * vx;\r\n                iy = py + rayEntryDistance * vy;\r\n                if (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\r\n                    targetNormal.x = 0;\r\n                    targetNormal.y = 0;\r\n                    targetNormal.z = 1;\r\n                    intersects = true;\r\n                }\r\n            }\r\n        }\r\n        if (!intersects && vz > 0) {\r\n            rayEntryDistance = (-halfExtentsZ - pz) / vz;\r\n            if (rayEntryDistance > 0) {\r\n                ix = px + rayEntryDistance * vx;\r\n                iy = py + rayEntryDistance * vy;\r\n                if (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\r\n                    targetNormal.x = 0;\r\n                    targetNormal.y = 0;\r\n                    targetNormal.z = -1;\r\n                    intersects = true;\r\n                }\r\n            }\r\n        }\r\n        return intersects ? rayEntryDistance : -1;\r\n    };\r\n    /**\r\n     * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\r\n     *\r\n     * @param point The point for which to find the closest point on the Box\r\n     * @param target An optional Vector3D to store the result to prevent creating a new object.\r\n     * @return\r\n     */\r\n    Box.prototype.closestPointToPoint = function (point, target) {\r\n        if (target === void 0) { target = null; }\r\n        var p;\r\n        if (target == null)\r\n            target = new Vector3D_1.Vector3D();\r\n        p = point.x;\r\n        if (p < this.x)\r\n            p = this.x;\r\n        if (p > this.x + this.width)\r\n            p = this.x + this.width;\r\n        target.x = p;\r\n        p = point.y;\r\n        if (p < this.y + this.height)\r\n            p = this.y + this.height;\r\n        if (p > this.y)\r\n            p = this.y;\r\n        target.y = p;\r\n        p = point.z;\r\n        if (p < this.z)\r\n            p = this.z;\r\n        if (p > this.z + this.depth)\r\n            p = this.z + this.depth;\r\n        target.z = p;\r\n        return target;\r\n    };\r\n    /**\r\n     * Determines whether or not this Box object is empty.\r\n     *\r\n     * @return A value of <code>true</code> if the Box object's width, height or\r\n     *         depth is less than or equal to 0; otherwise <code>false</code>.\r\n     */\r\n    Box.prototype.isEmpty = function () {\r\n        return (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\r\n    };\r\n    /**\r\n     * Adjusts the location of the Box object, as determined by its\r\n     * top-left-front corner, by the specified amounts.\r\n     *\r\n     * @param dx Moves the <i>x</i> value of the Box object by this amount.\r\n     * @param dy Moves the <i>y</i> value of the Box object by this amount.\r\n     * @param dz Moves the <i>z</i> value of the Box object by this amount.\r\n     */\r\n    Box.prototype.offset = function (dx, dy, dz) {\r\n        this.x += dx;\r\n        this.y += dy;\r\n        this.z += dz;\r\n    };\r\n    /**\r\n     * Adjusts the location of the Box object using a Vector3D object as a\r\n     * parameter. This method is similar to the <code>Box.offset()</code>\r\n     * method, except that it takes a Vector3D object as a parameter.\r\n     *\r\n     * @param position A Vector3D object to use to offset this Box object.\r\n     */\r\n    Box.prototype.offsetPosition = function (position) {\r\n        this.x += position.x;\r\n        this.y += position.y;\r\n        this.z += position.z;\r\n    };\r\n    /**\r\n     * Sets all of the Box object's properties to 0. A Box object is empty if its\r\n     * width, height or depth is less than or equal to 0.\r\n     *\r\n     * <p> This method sets the values of the <code>x</code>, <code>y</code>,\r\n     * <code>z</code>, <code>width</code>, <code>height</code>, and\r\n     * <code>depth</code> properties to 0.</p>\r\n     *\r\n     */\r\n    Box.prototype.setEmpty = function () {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.depth = 0;\r\n    };\r\n    Box.prototype.setBoundIdentity = function () {\r\n        this.x = Number.MAX_VALUE / 2;\r\n        this.y = Number.MAX_VALUE / 2;\r\n        this.z = Number.MAX_VALUE / 2;\r\n        this.width = -Number.MAX_VALUE;\r\n        this.height = -Number.MAX_VALUE;\r\n        this.depth = -Number.MAX_VALUE;\r\n    };\r\n    /**\r\n     * Sets the members of Box to the specified values\r\n     *\r\n     * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\r\n     *                box.\r\n     * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\r\n     *                box.\r\n     * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\r\n     *                box.\r\n     * @param widtha  The width of the box, in pixels.\r\n     * @param heighta The height of the box, in pixels.\r\n     * @param deptha  The depth of the box, in pixels.\r\n     */\r\n    Box.prototype.setTo = function (xa, ya, za, widtha, heighta, deptha) {\r\n        this.x = xa;\r\n        this.y = ya;\r\n        this.z = za;\r\n        this.width = widtha;\r\n        this.height = heighta;\r\n        this.depth = deptha;\r\n    };\r\n    /**\r\n     * Builds and returns a string that lists the horizontal, vertical and\r\n     * longitudinal positions and the width, height and depth of the Box object.\r\n     *\r\n     * @return A string listing the value of each of the following properties of\r\n     *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\r\n     *         <code>width</code>, <code>height</code>, and <code>depth</code>.\r\n     */\r\n    Box.prototype.toString = function () {\r\n        return \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\r\n    };\r\n    /**\r\n     * Adds two boxes together to create a new Box object, by filling\r\n     * in the horizontal, vertical and longitudinal space between the two boxes.\r\n     *\r\n     * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\r\n     * <code>0</code> as the height, width or depth value, such as: <code>var\r\n     * box2:Box = new Box(300,300,300,50,50,0);</code></p>\r\n     *\r\n     * @param toUnion A Box object to add to this Box object.\r\n     * @return A new Box object that is the union of the two boxes.\r\n     */\r\n    Box.prototype.union = function (toUnion, target) {\r\n        if (target === void 0) { target = null; }\r\n        var width;\r\n        var height;\r\n        var depth;\r\n        if (target == null)\r\n            target = new Box();\r\n        if (this.x < toUnion.x) {\r\n            width = toUnion.x - this.x + toUnion.width;\r\n            target.x = this.x;\r\n            target.width = (width < this.width) ? this.width : width;\r\n        }\r\n        else {\r\n            width = this.x - toUnion.x + this.width;\r\n            target.x = toUnion.x;\r\n            target.width = (width < toUnion.width) ? toUnion.width : width;\r\n        }\r\n        if (this.y < toUnion.y) {\r\n            height = toUnion.y - this.y + toUnion.height;\r\n            target.y = this.y;\r\n            target.height = (height < this.height) ? this.height : height;\r\n        }\r\n        else {\r\n            height = this.y - toUnion.y + this.height;\r\n            target.y = toUnion.y;\r\n            target.height = (height < toUnion.height) ? toUnion.height : height;\r\n        }\r\n        if (this.z < toUnion.z) {\r\n            depth = toUnion.z - this.z + toUnion.depth;\r\n            target.z = this.z;\r\n            target.depth = (depth < this.depth) ? this.depth : depth;\r\n        }\r\n        else {\r\n            depth = this.z - toUnion.z + this.depth;\r\n            target.z = toUnion.z;\r\n            target.depth = (depth < toUnion.depth) ? toUnion.depth : depth;\r\n        }\r\n        return target;\r\n    };\r\n    return Box;\r\n}());\r\nexports.Box = Box;\r\n},{\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/geom/ColorTransform\":[function(require,module,exports){\n\"use strict\";\r\nvar ColorUtils_1 = require(\"../utils/ColorUtils\");\r\n/**\r\n * The ColorTransform export class lets you adjust the color values in a display\r\n * object. The color adjustment or <i>color transformation</i> can be applied\r\n * to all four channels: red, green, blue, and alpha transparency.\r\n *\r\n * <p>When a ColorTransform object is applied to a display object, a new value\r\n * for each color channel is calculated like this:</p>\r\n *\r\n * <ul>\r\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\r\n * <code>redOffset</code></li>\r\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\r\n * <code>greenOffset</code></li>\r\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\r\n * <code>blueOffset</code></li>\r\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\r\n * <code>alphaOffset</code></li>\r\n * </ul>\r\n *\r\n * <p>If any of the color channel values is greater than 255 after the\r\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\r\n *\r\n * <p>You can use ColorTransform objects in the following ways:</p>\r\n *\r\n * <ul>\r\n *   <li>In the <code>colorTransform</code> parameter of the\r\n * <code>colorTransform()</code> method of the BitmapData class</li>\r\n *   <li>As the <code>colorTransform</code> property of a Transform object\r\n * (which can be used as the <code>transform</code> property of a display\r\n * object)</li>\r\n * </ul>\r\n *\r\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\r\n * a ColorTransform object before you can call the methods of the\r\n * ColorTransform object.</p>\r\n *\r\n * <p>Color transformations do not apply to the background color of a movie\r\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\r\n * that are attached to the movie clip.</p>\r\n */\r\nvar ColorTransform = (function () {\r\n    function ColorTransform(redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset) {\r\n        if (redMultiplier === void 0) { redMultiplier = 1; }\r\n        if (greenMultiplier === void 0) { greenMultiplier = 1; }\r\n        if (blueMultiplier === void 0) { blueMultiplier = 1; }\r\n        if (alphaMultiplier === void 0) { alphaMultiplier = 1; }\r\n        if (redOffset === void 0) { redOffset = 0; }\r\n        if (greenOffset === void 0) { greenOffset = 0; }\r\n        if (blueOffset === void 0) { blueOffset = 0; }\r\n        if (alphaOffset === void 0) { alphaOffset = 0; }\r\n        this.rawData = new Float32Array(8);\r\n        if (redMultiplier instanceof Float32Array) {\r\n            this.copyRawDataFrom(redMultiplier);\r\n        }\r\n        else {\r\n            this.redMultiplier = Number(redMultiplier);\r\n            this.greenMultiplier = greenMultiplier;\r\n            this.blueMultiplier = blueMultiplier;\r\n            this.alphaMultiplier = alphaMultiplier;\r\n            this.redOffset = redOffset;\r\n            this.greenOffset = greenOffset;\r\n            this.blueOffset = blueOffset;\r\n            this.alphaOffset = alphaOffset;\r\n        }\r\n    }\r\n    Object.defineProperty(ColorTransform.prototype, \"alphaMultiplier\", {\r\n        /**\r\n         * A decimal value that is multiplied with the alpha transparency channel\r\n         * value.\r\n         *\r\n         * <p>If you set the alpha transparency value of a display object directly by\r\n         * using the <code>alpha</code> property of the DisplayObject instance, it\r\n         * affects the value of the <code>alphaMultiplier</code> property of that\r\n         * display object's <code>transform.colorTransform</code> property.</p>\r\n         */\r\n        get: function () {\r\n            return this.rawData[3];\r\n        },\r\n        set: function (value) {\r\n            this.rawData[3] = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColorTransform.prototype, \"alphaOffset\", {\r\n        /**\r\n         * A number from -255 to 255 that is added to the alpha transparency channel\r\n         * value after it has been multiplied by the <code>alphaMultiplier</code>\r\n         * value.\r\n         */\r\n        get: function () {\r\n            return this.rawData[7] * 0xFF;\r\n        },\r\n        set: function (value) {\r\n            this.rawData[7] = value / 0xFF;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColorTransform.prototype, \"blueMultiplier\", {\r\n        /**\r\n         * A decimal value that is multiplied with the blue channel value.\r\n         */\r\n        get: function () {\r\n            return this.rawData[2];\r\n        },\r\n        set: function (value) {\r\n            this.rawData[2] = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColorTransform.prototype, \"blueOffset\", {\r\n        /**\r\n         * A number from -255 to 255 that is added to the blue channel value after it\r\n         * has been multiplied by the <code>blueMultiplier</code> value.\r\n         */\r\n        get: function () {\r\n            return this.rawData[6] * 0xFF;\r\n        },\r\n        set: function (value) {\r\n            this.rawData[6] = value / 0xFF;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColorTransform.prototype, \"greenMultiplier\", {\r\n        /**\r\n         * A decimal value that is multiplied with the green channel value.\r\n         */\r\n        get: function () {\r\n            return this.rawData[1];\r\n        },\r\n        set: function (value) {\r\n            this.rawData[1] = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColorTransform.prototype, \"greenOffset\", {\r\n        /**\r\n         * A number from -255 to 255 that is added to the green channel value after\r\n         * it has been multiplied by the <code>greenMultiplier</code> value.\r\n         */\r\n        get: function () {\r\n            return this.rawData[5] * 0xFF;\r\n        },\r\n        set: function (value) {\r\n            this.rawData[5] = value / 0xFF;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColorTransform.prototype, \"redMultiplier\", {\r\n        /**\r\n         * A decimal value that is multiplied with the red channel value.\r\n         */\r\n        get: function () {\r\n            return this.rawData[0];\r\n        },\r\n        set: function (value) {\r\n            this.rawData[0] = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColorTransform.prototype, \"redOffset\", {\r\n        /**\r\n         * A number from -255 to 255 that is added to the red channel value after it\r\n         * has been multiplied by the <code>redMultiplier</code> value.\r\n         */\r\n        get: function () {\r\n            return this.rawData[4] * 0xFF;\r\n        },\r\n        set: function (value) {\r\n            this.rawData[4] = value / 0xFF;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColorTransform.prototype, \"color\", {\r\n        /**\r\n         * The RGB color value for a ColorTransform object.\r\n         *\r\n         * <p>When you set this property, it changes the three color offset values\r\n         * (<code>redOffset</code>, <code>greenOffset</code>, and\r\n         * <code>blueOffset</code>) accordingly, and it sets the three color\r\n         * multiplier values(<code>redMultiplier</code>,\r\n         * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\r\n         * alpha transparency multiplier and offset values do not change.</p>\r\n         *\r\n         * <p>When you pass a value for this property, use the format\r\n         * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\r\n         * hexadecimal digits that specify the offset of each color component. The 0x\r\n         * tells the ActionScript compiler that the number is a hexadecimal\r\n         * value.</p>\r\n         */\r\n        get: function () {\r\n            return ((this.rawData[0] << 16) | (this.rawData[1] << 8) | this.rawData[2]);\r\n        },\r\n        set: function (value) {\r\n            var argb = ColorUtils_1.ColorUtils.float32ColorToARGB(value);\r\n            this.rawData[4] = argb[1]; //(value >> 16) & 0xFF;\r\n            this.rawData[5] = argb[2]; //(value >> 8) & 0xFF;\r\n            this.rawData[6] = argb[3]; //value & 0xFF;\r\n            this.rawData[0] = 0;\r\n            this.rawData[1] = 0;\r\n            this.rawData[2] = 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ColorTransform.prototype.copyRawDataFrom = function (vector, index) {\r\n        if (index === void 0) { index = 0; }\r\n        for (var c = 0; c < 8; c++)\r\n            this.rawData[c] = vector[c + index];\r\n    };\r\n    ColorTransform.prototype.clear = function () {\r\n        this.rawData[0] = 1;\r\n        this.rawData[1] = 1;\r\n        this.rawData[2] = 1;\r\n        this.rawData[3] = 1;\r\n        this.rawData[4] = 0;\r\n        this.rawData[5] = 0;\r\n        this.rawData[6] = 0;\r\n        this.rawData[7] = 0;\r\n    };\r\n    ColorTransform.prototype.clone = function () {\r\n        return new ColorTransform(this.rawData);\r\n    };\r\n    ColorTransform.prototype.copyFrom = function (source) {\r\n        for (var c = 0; c < 8; c++)\r\n            this.rawData[c] = source.rawData[c];\r\n    };\r\n    ColorTransform.prototype.copyTo = function (destination) {\r\n        destination.copyFrom(this);\r\n    };\r\n    ColorTransform.prototype.prepend = function (ct) {\r\n        this.rawData[4] += ct.rawData[4] * this.rawData[0];\r\n        this.rawData[5] += ct.rawData[5] * this.rawData[1];\r\n        this.rawData[6] += ct.rawData[6] * this.rawData[2];\r\n        this.rawData[7] += ct.rawData[7] * this.rawData[3];\r\n        this.redMultiplier *= ct.redMultiplier;\r\n        this.greenMultiplier *= ct.greenMultiplier;\r\n        this.blueMultiplier *= ct.blueMultiplier;\r\n        this.alphaMultiplier *= ct.alphaMultiplier;\r\n    };\r\n    ColorTransform.prototype._isRenderable = function () {\r\n        return this.rawData[3] != 0 || this.rawData[7] > 0;\r\n    };\r\n    return ColorTransform;\r\n}());\r\nexports.ColorTransform = ColorTransform;\r\n},{\"../utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\"}],\"awayjs-core/lib/geom/MathConsts\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n* MathConsts provides some commonly used mathematical constants\r\n*/\r\nvar MathConsts = (function () {\r\n    function MathConsts() {\r\n    }\r\n    /**\r\n     * The amount to multiply with when converting radians to degrees.\r\n     */\r\n    MathConsts.RADIANS_TO_DEGREES = 180 / Math.PI;\r\n    /**\r\n     * The amount to multiply with when converting degrees to radians.\r\n     */\r\n    MathConsts.DEGREES_TO_RADIANS = Math.PI / 180;\r\n    return MathConsts;\r\n}());\r\nexports.MathConsts = MathConsts;\r\n},{}],\"awayjs-core/lib/geom/Matrix3DUtils\":[function(require,module,exports){\n\"use strict\";\r\nvar Matrix3D_1 = require(\"../geom/Matrix3D\");\r\nvar Vector3D_1 = require(\"../geom/Vector3D\");\r\n/**\r\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\r\n */\r\nvar Matrix3DUtils = (function () {\r\n    function Matrix3DUtils() {\r\n    }\r\n    /**\r\n     * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\r\n     *\r\n     * @param    quarternion    The quarterion object to convert.\r\n     */\r\n    Matrix3DUtils.quaternion2matrix = function (quarternion, m) {\r\n        if (m === void 0) { m = null; }\r\n        var x = quarternion.x;\r\n        var y = quarternion.y;\r\n        var z = quarternion.z;\r\n        var w = quarternion.w;\r\n        var xx = x * x;\r\n        var xy = x * y;\r\n        var xz = x * z;\r\n        var xw = x * w;\r\n        var yy = y * y;\r\n        var yz = y * z;\r\n        var yw = y * w;\r\n        var zz = z * z;\r\n        var zw = z * w;\r\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        raw[0] = 1 - 2 * (yy + zz);\r\n        raw[1] = 2 * (xy + zw);\r\n        raw[2] = 2 * (xz - yw);\r\n        raw[4] = 2 * (xy - zw);\r\n        raw[5] = 1 - 2 * (xx + zz);\r\n        raw[6] = 2 * (yz + xw);\r\n        raw[8] = 2 * (xz + yw);\r\n        raw[9] = 2 * (yz - xw);\r\n        raw[10] = 1 - 2 * (xx + yy);\r\n        raw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\r\n        raw[15] = 1;\r\n        if (m) {\r\n            m.copyRawDataFrom(raw);\r\n            return m;\r\n        }\r\n        else\r\n            return new Matrix3D_1.Matrix3D(raw);\r\n    };\r\n    /**\r\n     * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\r\n     * @param    m        The Matrix3D object to use to get the forward vector\r\n     * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n     * @return            The forward vector\r\n     */\r\n    Matrix3DUtils.getForward = function (m, v) {\r\n        if (v === void 0) { v = null; }\r\n        if (v === null)\r\n            v = new Vector3D_1.Vector3D(0.0, 0.0, 0.0);\r\n        m.copyColumnTo(2, v);\r\n        v.normalize();\r\n        return v;\r\n    };\r\n    /**\r\n     * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\r\n     * @param    m        The Matrix3D object to use to get the up vector\r\n     * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n     * @return            The up vector\r\n     */\r\n    Matrix3DUtils.getUp = function (m, v) {\r\n        if (v === void 0) { v = null; }\r\n        if (v === null)\r\n            v = new Vector3D_1.Vector3D(0.0, 0.0, 0.0);\r\n        m.copyColumnTo(1, v);\r\n        v.normalize();\r\n        return v;\r\n    };\r\n    /**\r\n     * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\r\n     * @param    m        The Matrix3D object to use to get the right vector\r\n     * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n     * @return            The right vector\r\n     */\r\n    Matrix3DUtils.getRight = function (m, v) {\r\n        if (v === void 0) { v = null; }\r\n        //v ||= new Vector3D(0.0, 0.0, 0.0);\r\n        if (v === null) {\r\n            v = new Vector3D_1.Vector3D(0.0, 0.0, 0.0);\r\n        }\r\n        m.copyColumnTo(0, v);\r\n        v.normalize();\r\n        return v;\r\n    };\r\n    /**\r\n     * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\r\n     */\r\n    Matrix3DUtils.compare = function (m1, m2) {\r\n        var r1 = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        var r2 = m2.rawData;\r\n        m1.copyRawDataTo(r1);\r\n        for (var i = 0; i < 16; ++i) {\r\n            if (r1[i] != r2[i])\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n    Matrix3DUtils.lookAt = function (matrix, pos, dir, up) {\r\n        var dirN;\r\n        var upN;\r\n        var lftN;\r\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        lftN = dir.crossProduct(up);\r\n        lftN.normalize();\r\n        upN = lftN.crossProduct(dir);\r\n        upN.normalize();\r\n        dirN = dir.clone();\r\n        dirN.normalize();\r\n        raw[0] = lftN.x;\r\n        raw[1] = upN.x;\r\n        raw[2] = -dirN.x;\r\n        raw[3] = 0.0;\r\n        raw[4] = lftN.y;\r\n        raw[5] = upN.y;\r\n        raw[6] = -dirN.y;\r\n        raw[7] = 0.0;\r\n        raw[8] = lftN.z;\r\n        raw[9] = upN.z;\r\n        raw[10] = -dirN.z;\r\n        raw[11] = 0.0;\r\n        raw[12] = -lftN.dotProduct(pos);\r\n        raw[13] = -upN.dotProduct(pos);\r\n        raw[14] = dirN.dotProduct(pos);\r\n        raw[15] = 1.0;\r\n        matrix.copyRawDataFrom(raw);\r\n    };\r\n    Matrix3DUtils.reflection = function (plane, target) {\r\n        if (target === void 0) { target = null; }\r\n        if (target === null)\r\n            target = new Matrix3D_1.Matrix3D();\r\n        var a = plane.a, b = plane.b, c = plane.c, d = plane.d;\r\n        var rawData = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        var ab2 = -2 * a * b;\r\n        var ac2 = -2 * a * c;\r\n        var bc2 = -2 * b * c;\r\n        // reflection matrix\r\n        rawData[0] = 1 - 2 * a * a;\r\n        rawData[4] = ab2;\r\n        rawData[8] = ac2;\r\n        rawData[12] = -2 * a * d;\r\n        rawData[1] = ab2;\r\n        rawData[5] = 1 - 2 * b * b;\r\n        rawData[9] = bc2;\r\n        rawData[13] = -2 * b * d;\r\n        rawData[2] = ac2;\r\n        rawData[6] = bc2;\r\n        rawData[10] = 1 - 2 * c * c;\r\n        rawData[14] = -2 * c * d;\r\n        rawData[3] = 0;\r\n        rawData[7] = 0;\r\n        rawData[11] = 0;\r\n        rawData[15] = 1;\r\n        target.copyRawDataFrom(rawData);\r\n        return target;\r\n    };\r\n    Matrix3DUtils.transformVector = function (matrix, vector, result) {\r\n        if (result === void 0) { result = null; }\r\n        if (!result)\r\n            result = new Vector3D_1.Vector3D();\r\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        matrix.copyRawDataTo(raw);\r\n        var a = raw[0];\r\n        var e = raw[1];\r\n        var i = raw[2];\r\n        var m = raw[3];\r\n        var b = raw[4];\r\n        var f = raw[5];\r\n        var j = raw[6];\r\n        var n = raw[7];\r\n        var c = raw[8];\r\n        var g = raw[9];\r\n        var k = raw[10];\r\n        var o = raw[11];\r\n        var d = raw[12];\r\n        var h = raw[13];\r\n        var l = raw[14];\r\n        var p = raw[15];\r\n        var x = vector.x;\r\n        var y = vector.y;\r\n        var z = vector.z;\r\n        result.x = a * x + b * y + c * z + d;\r\n        result.y = e * x + f * y + g * z + h;\r\n        result.z = i * x + j * y + k * z + l;\r\n        result.w = m * x + n * y + o * z + p;\r\n        return result;\r\n    };\r\n    Matrix3DUtils.deltaTransformVector = function (matrix, vector, result) {\r\n        if (result === void 0) { result = null; }\r\n        if (!result)\r\n            result = new Vector3D_1.Vector3D();\r\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        matrix.copyRawDataTo(raw);\r\n        var a = raw[0];\r\n        var e = raw[1];\r\n        var i = raw[2];\r\n        var m = raw[3];\r\n        var b = raw[4];\r\n        var f = raw[5];\r\n        var j = raw[6];\r\n        var n = raw[7];\r\n        var c = raw[8];\r\n        var g = raw[9];\r\n        var k = raw[10];\r\n        var o = raw[11];\r\n        var x = vector.x;\r\n        var y = vector.y;\r\n        var z = vector.z;\r\n        result.x = a * x + b * y + c * z;\r\n        result.y = e * x + f * y + g * z;\r\n        result.z = i * x + j * y + k * z;\r\n        result.w = m * x + n * y + o * z;\r\n        return result;\r\n    };\r\n    Matrix3DUtils.getTranslation = function (transform, result) {\r\n        if (result === void 0) { result = null; }\r\n        if (!result)\r\n            result = new Vector3D_1.Vector3D();\r\n        transform.copyColumnTo(3, result);\r\n        return result;\r\n    };\r\n    Matrix3DUtils.deltaTransformVectors = function (matrix, vin, vout) {\r\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        matrix.copyRawDataTo(raw);\r\n        var a = raw[0];\r\n        var e = raw[1];\r\n        var i = raw[2];\r\n        var m = raw[3];\r\n        var b = raw[4];\r\n        var f = raw[5];\r\n        var j = raw[6];\r\n        var n = raw[7];\r\n        var c = raw[8];\r\n        var g = raw[9];\r\n        var k = raw[10];\r\n        var o = raw[11];\r\n        var outIndex = 0;\r\n        var length = vin.length;\r\n        for (var index = 0; index < length; index += 3) {\r\n            var x = vin[index];\r\n            var y = vin[index + 1];\r\n            var z = vin[index + 2];\r\n            vout[outIndex++] = a * x + b * y + c * z;\r\n            vout[outIndex++] = e * x + f * y + g * z;\r\n            vout[outIndex++] = i * x + j * y + k * z;\r\n        }\r\n    };\r\n    /**\r\n     * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\r\n     */\r\n    Matrix3DUtils.RAW_DATA_CONTAINER = new Float32Array(16);\r\n    //public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\r\n    Matrix3DUtils.CALCULATION_MATRIX = new Matrix3D_1.Matrix3D();\r\n    return Matrix3DUtils;\r\n}());\r\nexports.Matrix3DUtils = Matrix3DUtils;\r\n},{\"../geom/Matrix3D\":\"awayjs-core/lib/geom/Matrix3D\",\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/geom/Matrix3D\":[function(require,module,exports){\n\"use strict\";\r\nvar Box_1 = require(\"../geom/Box\");\r\nvar MathConsts_1 = require(\"../geom/MathConsts\");\r\nvar Orientation3D_1 = require(\"../geom/Orientation3D\");\r\nvar Vector3D_1 = require(\"../geom/Vector3D\");\r\nvar ArgumentError_1 = require(\"../errors/ArgumentError\");\r\nvar Matrix3D = (function () {\r\n    /**\r\n     * Creates a Matrix3D object.\r\n     */\r\n    function Matrix3D(v) {\r\n        if (v === void 0) { v = null; }\r\n        /**\r\n         * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\r\n         *\r\n         * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\r\n         * object must be invertible. If a non-invertible matrix is needed, create a subexport class of the Matrix3D object.</p>\r\n         */\r\n        this.rawData = new Float32Array(16);\r\n        this._position = new Vector3D_1.Vector3D();\r\n        this._positionDirty = true;\r\n        if (v != null && v.length == 16) {\r\n            this.copyRawDataFrom(v);\r\n        }\r\n        else {\r\n            this.identity();\r\n        }\r\n    }\r\n    /**\r\n     * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\r\n     */\r\n    Matrix3D.prototype.append = function (lhs) {\r\n        var lrd = lhs.rawData;\r\n        var m111 = this.rawData[0];\r\n        var m112 = this.rawData[1];\r\n        var m113 = this.rawData[2];\r\n        var m114 = this.rawData[3];\r\n        var m121 = this.rawData[4];\r\n        var m122 = this.rawData[5];\r\n        var m123 = this.rawData[6];\r\n        var m124 = this.rawData[7];\r\n        var m131 = this.rawData[8];\r\n        var m132 = this.rawData[9];\r\n        var m133 = this.rawData[10];\r\n        var m134 = this.rawData[11];\r\n        var m141 = this.rawData[12];\r\n        var m142 = this.rawData[13];\r\n        var m143 = this.rawData[14];\r\n        var m144 = this.rawData[15];\r\n        var m211 = lrd[0];\r\n        var m212 = lrd[1];\r\n        var m213 = lrd[2];\r\n        var m214 = lrd[3];\r\n        var m221 = lrd[4];\r\n        var m222 = lrd[5];\r\n        var m223 = lrd[6];\r\n        var m224 = lrd[7];\r\n        var m231 = lrd[8];\r\n        var m232 = lrd[9];\r\n        var m233 = lrd[10];\r\n        var m234 = lrd[11];\r\n        var m241 = lrd[12];\r\n        var m242 = lrd[13];\r\n        var m243 = lrd[14];\r\n        var m244 = lrd[15];\r\n        this.rawData[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;\r\n        this.rawData[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;\r\n        this.rawData[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;\r\n        this.rawData[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;\r\n        this.rawData[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;\r\n        this.rawData[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;\r\n        this.rawData[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;\r\n        this.rawData[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;\r\n        this.rawData[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;\r\n        this.rawData[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;\r\n        this.rawData[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;\r\n        this.rawData[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;\r\n        this.rawData[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;\r\n        this.rawData[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;\r\n        this.rawData[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;\r\n        this.rawData[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;\r\n        this._positionDirty = true;\r\n    };\r\n    /**\r\n     * Appends an incremental rotation to a Matrix3D object.\r\n     */\r\n    Matrix3D.prototype.appendRotation = function (degrees, axis) {\r\n        this.append(Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees));\r\n    };\r\n    /**\r\n     * Appends an incremental skew change along the x, y, and z axes to a Matrix3D object.\r\n     */\r\n    Matrix3D.prototype.appendSkew = function (xSkew, ySkew, zSkew) {\r\n        if (xSkew == 0 && ySkew == 0 && zSkew == 0)\r\n            return;\r\n        var raw = Matrix3D.tempRawData;\r\n        raw[0] = 1;\r\n        raw[1] = 0;\r\n        raw[2] = 0;\r\n        raw[3] = 0;\r\n        raw[4] = xSkew;\r\n        raw[5] = 1;\r\n        raw[6] = 0;\r\n        raw[7] = 0;\r\n        raw[8] = ySkew;\r\n        raw[9] = zSkew;\r\n        raw[10] = 1;\r\n        raw[11] = 0;\r\n        raw[12] = 0;\r\n        raw[13] = 0;\r\n        raw[14] = 0;\r\n        raw[15] = 1;\r\n        this.append(Matrix3D.tempMatrix);\r\n    };\r\n    /**\r\n     * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\r\n     */\r\n    Matrix3D.prototype.appendScale = function (xScale, yScale, zScale) {\r\n        if (xScale == 1 && yScale == 1 && zScale == 1)\r\n            return;\r\n        var raw = Matrix3D.tempRawData;\r\n        raw[0] = xScale;\r\n        raw[1] = 0;\r\n        raw[2] = 0;\r\n        raw[3] = 0;\r\n        raw[4] = 0;\r\n        raw[5] = yScale;\r\n        raw[6] = 0;\r\n        raw[7] = 0;\r\n        raw[8] = 0;\r\n        raw[9] = 0;\r\n        raw[10] = zScale;\r\n        raw[11] = 0;\r\n        raw[12] = 0;\r\n        raw[13] = 0;\r\n        raw[14] = 0;\r\n        raw[15] = 1;\r\n        this.append(Matrix3D.tempMatrix);\r\n    };\r\n    /**\r\n     * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\r\n     */\r\n    Matrix3D.prototype.appendTranslation = function (x, y, z) {\r\n        this.rawData[12] += x;\r\n        this.rawData[13] += y;\r\n        this.rawData[14] += z;\r\n        this._positionDirty = true;\r\n    };\r\n    /**\r\n     * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\r\n     */\r\n    Matrix3D.prototype.clone = function () {\r\n        return new Matrix3D(this.rawData);\r\n    };\r\n    /**\r\n     * Copies a Vector3D object into specific column of the calling Matrix3D object.\r\n     */\r\n    Matrix3D.prototype.copyColumnFrom = function (column, vector3D) {\r\n        switch (column) {\r\n            case 0:\r\n                this.rawData[0] = vector3D.x;\r\n                this.rawData[1] = vector3D.y;\r\n                this.rawData[2] = vector3D.z;\r\n                this.rawData[3] = vector3D.w;\r\n                break;\r\n            case 1:\r\n                this.rawData[4] = vector3D.x;\r\n                this.rawData[5] = vector3D.y;\r\n                this.rawData[6] = vector3D.z;\r\n                this.rawData[7] = vector3D.w;\r\n                break;\r\n            case 2:\r\n                this.rawData[8] = vector3D.x;\r\n                this.rawData[9] = vector3D.y;\r\n                this.rawData[10] = vector3D.z;\r\n                this.rawData[11] = vector3D.w;\r\n                break;\r\n            case 3:\r\n                this.rawData[12] = vector3D.x;\r\n                this.rawData[13] = vector3D.y;\r\n                this.rawData[14] = vector3D.z;\r\n                this.rawData[15] = vector3D.w;\r\n                break;\r\n            default:\r\n                throw new ArgumentError_1.ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\r\n        }\r\n    };\r\n    /**\r\n     * Copies specific column of the calling Matrix3D object into the Vector3D object.\r\n     */\r\n    Matrix3D.prototype.copyColumnTo = function (column, vector3D) {\r\n        switch (column) {\r\n            case 0:\r\n                vector3D.x = this.rawData[0];\r\n                vector3D.y = this.rawData[1];\r\n                vector3D.z = this.rawData[2];\r\n                vector3D.w = this.rawData[3];\r\n                break;\r\n            case 1:\r\n                vector3D.x = this.rawData[4];\r\n                vector3D.y = this.rawData[5];\r\n                vector3D.z = this.rawData[6];\r\n                vector3D.w = this.rawData[7];\r\n                break;\r\n            case 2:\r\n                vector3D.x = this.rawData[8];\r\n                vector3D.y = this.rawData[9];\r\n                vector3D.z = this.rawData[10];\r\n                vector3D.w = this.rawData[11];\r\n                break;\r\n            case 3:\r\n                vector3D.x = this.rawData[12];\r\n                vector3D.y = this.rawData[13];\r\n                vector3D.z = this.rawData[14];\r\n                vector3D.w = this.rawData[15];\r\n                break;\r\n            default:\r\n                throw new ArgumentError_1.ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\r\n        }\r\n    };\r\n    /**\r\n     * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\r\n     */\r\n    Matrix3D.prototype.copyFrom = function (source) {\r\n        var sourceRaw = source.rawData;\r\n        var len = sourceRaw.length;\r\n        for (var c = 0; c < len; c++)\r\n            this.rawData[c] = sourceRaw[c];\r\n    };\r\n    /**\r\n     * Copies this Matrix3D object into a destination Matrix3D object.\r\n     */\r\n    Matrix3D.prototype.copyTo = function (target) {\r\n        var targetRaw = target.rawData;\r\n        var len = this.rawData.length;\r\n        for (var c = 0; c < len; c++)\r\n            targetRaw[c] = this.rawData[c];\r\n    };\r\n    Matrix3D.prototype.copyRawDataFrom = function (vector, index, transpose) {\r\n        if (index === void 0) { index = 0; }\r\n        if (transpose === void 0) { transpose = false; }\r\n        if (transpose)\r\n            this.transpose();\r\n        var len = vector.length - index;\r\n        for (var c = 0; c < len; c++)\r\n            this.rawData[c] = vector[c + index];\r\n        if (transpose)\r\n            this.transpose();\r\n    };\r\n    Matrix3D.prototype.copyRawDataTo = function (vector, index, transpose) {\r\n        if (index === void 0) { index = 0; }\r\n        if (transpose === void 0) { transpose = false; }\r\n        if (transpose)\r\n            this.transpose();\r\n        var len = this.rawData.length;\r\n        for (var c = 0; c < len; c++)\r\n            vector[c + index] = this.rawData[c];\r\n        if (transpose)\r\n            this.transpose();\r\n    };\r\n    /**\r\n     * Copies a Vector3D object into specific row of the calling Matrix3D object.\r\n     */\r\n    Matrix3D.prototype.copyRowFrom = function (row, vector3D) {\r\n        switch (row) {\r\n            case 0:\r\n                this.rawData[0] = vector3D.x;\r\n                this.rawData[4] = vector3D.y;\r\n                this.rawData[8] = vector3D.z;\r\n                this.rawData[12] = vector3D.w;\r\n                break;\r\n            case 1:\r\n                this.rawData[1] = vector3D.x;\r\n                this.rawData[5] = vector3D.y;\r\n                this.rawData[9] = vector3D.z;\r\n                this.rawData[13] = vector3D.w;\r\n                break;\r\n            case 2:\r\n                this.rawData[2] = vector3D.x;\r\n                this.rawData[6] = vector3D.y;\r\n                this.rawData[10] = vector3D.z;\r\n                this.rawData[14] = vector3D.w;\r\n                break;\r\n            case 3:\r\n                this.rawData[3] = vector3D.x;\r\n                this.rawData[7] = vector3D.y;\r\n                this.rawData[11] = vector3D.z;\r\n                this.rawData[15] = vector3D.w;\r\n                break;\r\n            default:\r\n                throw new ArgumentError_1.ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\r\n        }\r\n    };\r\n    /**\r\n     * Copies specific row of the calling Matrix3D object into the Vector3D object.\r\n     */\r\n    Matrix3D.prototype.copyRowTo = function (row, vector3D) {\r\n        switch (row) {\r\n            case 0:\r\n                vector3D.x = this.rawData[0];\r\n                vector3D.y = this.rawData[4];\r\n                vector3D.z = this.rawData[8];\r\n                vector3D.w = this.rawData[12];\r\n                break;\r\n            case 1:\r\n                vector3D.x = this.rawData[1];\r\n                vector3D.y = this.rawData[5];\r\n                vector3D.z = this.rawData[9];\r\n                vector3D.w = this.rawData[13];\r\n                break;\r\n            case 2:\r\n                vector3D.x = this.rawData[2];\r\n                vector3D.y = this.rawData[6];\r\n                vector3D.z = this.rawData[10];\r\n                vector3D.w = this.rawData[14];\r\n                break;\r\n            case 3:\r\n                vector3D.x = this.rawData[3];\r\n                vector3D.y = this.rawData[7];\r\n                vector3D.z = this.rawData[11];\r\n                vector3D.w = this.rawData[15];\r\n                break;\r\n            default:\r\n                throw new ArgumentError_1.ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\r\n     */\r\n    Matrix3D.prototype.decompose = function (orientationStyle) {\r\n        if (orientationStyle === void 0) { orientationStyle = \"eulerAngles\"; }\r\n        var q;\r\n        if (this._components == null)\r\n            this._components = [null, new Vector3D_1.Vector3D(), new Vector3D_1.Vector3D(), new Vector3D_1.Vector3D()];\r\n        var colX = new Vector3D_1.Vector3D(this.rawData[0], this.rawData[1], this.rawData[2]);\r\n        var colY = new Vector3D_1.Vector3D(this.rawData[4], this.rawData[5], this.rawData[6]);\r\n        var colZ = new Vector3D_1.Vector3D(this.rawData[8], this.rawData[9], this.rawData[10]);\r\n        var scale = this._components[3];\r\n        var skew = this._components[2];\r\n        //compute X scale factor and normalise colX\r\n        scale.x = colX.length;\r\n        colX.scaleBy(1 / scale.x);\r\n        //compute XY shear factor and make colY orthogonal to colX\r\n        skew.x = colX.dotProduct(colY);\r\n        colY = Vector3D_1.Vector3D.combine(colY, colX, 1, -skew.x);\r\n        //compute Y scale factor and normalise colY\r\n        scale.y = colY.length;\r\n        colY.scaleBy(1 / scale.y);\r\n        skew.x /= scale.y;\r\n        //compute XZ and YZ shears and make colZ orthogonal to colX and colY\r\n        skew.y = colX.dotProduct(colZ);\r\n        colZ = Vector3D_1.Vector3D.combine(colZ, colX, 1, -skew.y);\r\n        skew.z = colY.dotProduct(colZ);\r\n        colZ = Vector3D_1.Vector3D.combine(colZ, colY, 1, -skew.z);\r\n        //compute Z scale and normalise colZ\r\n        scale.z = colZ.length;\r\n        colZ.scaleBy(1 / scale.z);\r\n        skew.y /= scale.z;\r\n        skew.z /= scale.z;\r\n        //at this point, the matrix (in cols) is orthonormal\r\n        //check for a coordinate system flip. If the determinant is -1, negate the z scaling factor\r\n        if (colX.dotProduct(colY.crossProduct(colZ)) < 0) {\r\n            scale.z = -scale.z;\r\n            colZ.x = -colZ.x;\r\n            colZ.y = -colZ.y;\r\n            colZ.z = -colZ.z;\r\n        }\r\n        var rot = this._components[1];\r\n        switch (orientationStyle) {\r\n            case Orientation3D_1.Orientation3D.AXIS_ANGLE:\r\n                rot.w = Math.acos((colX.x + colY.y + colZ.z - 1) / 2);\r\n                var len = Math.sqrt((colY.z - colZ.y) * (colY.z - colZ.y) + (colZ.x - colX.z) * (colZ.x - colX.z) + (colX.y - colY.x) * (colX.y - colY.x));\r\n                rot.x = (colY.z - colZ.y) / len;\r\n                rot.y = (colZ.x - colX.z) / len;\r\n                rot.z = (colX.y - colY.x) / len;\r\n                break;\r\n            case Orientation3D_1.Orientation3D.QUATERNION:\r\n                var tr = colX.x + colY.y + colZ.z;\r\n                if (tr > 0) {\r\n                    rot.w = Math.sqrt(1 + tr) / 2;\r\n                    rot.x = (colY.z - colZ.y) / (4 * rot.w);\r\n                    rot.y = (colZ.x - colX.z) / (4 * rot.w);\r\n                    rot.z = (colX.y - colY.x) / (4 * rot.w);\r\n                }\r\n                else if ((colX.x > colY.y) && (colX.x > colZ.z)) {\r\n                    rot.x = Math.sqrt(1 + colX.x - colY.y - colZ.z) / 2;\r\n                    rot.w = (colY.z - colZ.y) / (4 * rot.x);\r\n                    rot.y = (colX.y + colY.x) / (4 * rot.x);\r\n                    rot.z = (colZ.x + colX.z) / (4 * rot.x);\r\n                }\r\n                else if (colY.y > colZ.z) {\r\n                    rot.y = Math.sqrt(1 + colY.y - colX.x - colZ.z) / 2;\r\n                    rot.x = (colX.y + colY.x) / (4 * rot.y);\r\n                    rot.w = (colZ.x - colX.z) / (4 * rot.y);\r\n                    rot.z = (colY.z + colZ.y) / (4 * rot.y);\r\n                }\r\n                else {\r\n                    rot.z = Math.sqrt(1 + colZ.z - colX.x - colY.y) / 2;\r\n                    rot.x = (colZ.x + colX.z) / (4 * rot.z);\r\n                    rot.y = (colY.z + colZ.y) / (4 * rot.z);\r\n                    rot.w = (colX.y - colY.x) / (4 * rot.z);\r\n                }\r\n                break;\r\n            case Orientation3D_1.Orientation3D.EULER_ANGLES:\r\n                rot.y = Math.asin(-colX.z);\r\n                //var cos:number = Math.cos(rot.y);\r\n                if (colX.z != 1 && colX.z != -1) {\r\n                    rot.x = Math.atan2(colY.z, colZ.z);\r\n                    rot.z = Math.atan2(colX.y, colX.x);\r\n                }\r\n                else {\r\n                    rot.z = 0;\r\n                    rot.x = Math.atan2(colY.x, colY.y);\r\n                }\r\n                break;\r\n        }\r\n        this._components[0] = this.position;\r\n        return this._components;\r\n    };\r\n    /**\r\n     * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\r\n     * coordinate to another.\r\n     */\r\n    Matrix3D.prototype.deltaTransformVector = function (v, t) {\r\n        if (t === void 0) { t = null; }\r\n        var x = v.x;\r\n        var y = v.y;\r\n        var z = v.z;\r\n        if (!t)\r\n            t = new Vector3D_1.Vector3D();\r\n        t.x = x * this.rawData[0] + y * this.rawData[4] + z * this.rawData[8];\r\n        t.y = x * this.rawData[1] + y * this.rawData[5] + z * this.rawData[9];\r\n        t.z = x * this.rawData[2] + y * this.rawData[6] + z * this.rawData[10];\r\n        t.w = x * this.rawData[3] + y * this.rawData[7] + z * this.rawData[11];\r\n        return t;\r\n    };\r\n    /**\r\n     * Converts the current matrix to an identity or unit matrix.\r\n     */\r\n    Matrix3D.prototype.identity = function () {\r\n        this.rawData[0] = 1;\r\n        this.rawData[1] = 0;\r\n        this.rawData[2] = 0;\r\n        this.rawData[3] = 0;\r\n        this.rawData[4] = 0;\r\n        this.rawData[5] = 1;\r\n        this.rawData[6] = 0;\r\n        this.rawData[7] = 0;\r\n        this.rawData[8] = 0;\r\n        this.rawData[9] = 0;\r\n        this.rawData[10] = 1;\r\n        this.rawData[11] = 0;\r\n        this.rawData[12] = 0;\r\n        this.rawData[13] = 0;\r\n        this.rawData[14] = 0;\r\n        this.rawData[15] = 1;\r\n        this._positionDirty = true;\r\n    };\r\n    /**\r\n     * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\r\n     */\r\n    Matrix3D.interpolate = function (thisMat, toMat, percent) {\r\n        var m = new Matrix3D();\r\n        for (var i = 0; i < 16; ++i)\r\n            m.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i]) * percent;\r\n        return m;\r\n    };\r\n    /**\r\n     * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\r\n     */\r\n    Matrix3D.prototype.interpolateTo = function (toMat, percent) {\r\n        for (var i = 0; i < 16; ++i)\r\n            this.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i]) * percent;\r\n    };\r\n    /**\r\n     * Inverts the current matrix.\r\n     */\r\n    Matrix3D.prototype.invert = function () {\r\n        var d = this.determinant;\r\n        var invertable = Math.abs(d) > 0.00000000001;\r\n        if (invertable) {\r\n            d = 1 / d;\r\n            var m11 = this.rawData[0];\r\n            var m12 = this.rawData[1];\r\n            var m13 = this.rawData[2];\r\n            var m14 = this.rawData[3];\r\n            var m21 = this.rawData[4];\r\n            var m22 = this.rawData[5];\r\n            var m23 = this.rawData[6];\r\n            var m24 = this.rawData[7];\r\n            var m31 = this.rawData[8];\r\n            var m32 = this.rawData[9];\r\n            var m33 = this.rawData[10];\r\n            var m34 = this.rawData[11];\r\n            var m41 = this.rawData[12];\r\n            var m42 = this.rawData[13];\r\n            var m43 = this.rawData[14];\r\n            var m44 = this.rawData[15];\r\n            this.rawData[0] = d * (m22 * (m33 * m44 - m43 * m34) - m32 * (m23 * m44 - m43 * m24) + m42 * (m23 * m34 - m33 * m24));\r\n            this.rawData[1] = -d * (m12 * (m33 * m44 - m43 * m34) - m32 * (m13 * m44 - m43 * m14) + m42 * (m13 * m34 - m33 * m14));\r\n            this.rawData[2] = d * (m12 * (m23 * m44 - m43 * m24) - m22 * (m13 * m44 - m43 * m14) + m42 * (m13 * m24 - m23 * m14));\r\n            this.rawData[3] = -d * (m12 * (m23 * m34 - m33 * m24) - m22 * (m13 * m34 - m33 * m14) + m32 * (m13 * m24 - m23 * m14));\r\n            this.rawData[4] = -d * (m21 * (m33 * m44 - m43 * m34) - m31 * (m23 * m44 - m43 * m24) + m41 * (m23 * m34 - m33 * m24));\r\n            this.rawData[5] = d * (m11 * (m33 * m44 - m43 * m34) - m31 * (m13 * m44 - m43 * m14) + m41 * (m13 * m34 - m33 * m14));\r\n            this.rawData[6] = -d * (m11 * (m23 * m44 - m43 * m24) - m21 * (m13 * m44 - m43 * m14) + m41 * (m13 * m24 - m23 * m14));\r\n            this.rawData[7] = d * (m11 * (m23 * m34 - m33 * m24) - m21 * (m13 * m34 - m33 * m14) + m31 * (m13 * m24 - m23 * m14));\r\n            this.rawData[8] = d * (m21 * (m32 * m44 - m42 * m34) - m31 * (m22 * m44 - m42 * m24) + m41 * (m22 * m34 - m32 * m24));\r\n            this.rawData[9] = -d * (m11 * (m32 * m44 - m42 * m34) - m31 * (m12 * m44 - m42 * m14) + m41 * (m12 * m34 - m32 * m14));\r\n            this.rawData[10] = d * (m11 * (m22 * m44 - m42 * m24) - m21 * (m12 * m44 - m42 * m14) + m41 * (m12 * m24 - m22 * m14));\r\n            this.rawData[11] = -d * (m11 * (m22 * m34 - m32 * m24) - m21 * (m12 * m34 - m32 * m14) + m31 * (m12 * m24 - m22 * m14));\r\n            this.rawData[12] = -d * (m21 * (m32 * m43 - m42 * m33) - m31 * (m22 * m43 - m42 * m23) + m41 * (m22 * m33 - m32 * m23));\r\n            this.rawData[13] = d * (m11 * (m32 * m43 - m42 * m33) - m31 * (m12 * m43 - m42 * m13) + m41 * (m12 * m33 - m32 * m13));\r\n            this.rawData[14] = -d * (m11 * (m22 * m43 - m42 * m23) - m21 * (m12 * m43 - m42 * m13) + m41 * (m12 * m23 - m22 * m13));\r\n            this.rawData[15] = d * (m11 * (m22 * m33 - m32 * m23) - m21 * (m12 * m33 - m32 * m13) + m31 * (m12 * m23 - m22 * m13));\r\n        }\r\n        this._positionDirty = true;\r\n        return invertable;\r\n    };\r\n    /* TODO implement pointAt\r\n     public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\r\n     {\r\n     }\r\n     */\r\n    /**\r\n     * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\r\n     */\r\n    Matrix3D.prototype.prepend = function (rhs) {\r\n        var m111 = rhs.rawData[0];\r\n        var m112 = rhs.rawData[1];\r\n        var m113 = rhs.rawData[2];\r\n        var m114 = rhs.rawData[3];\r\n        var m121 = rhs.rawData[4];\r\n        var m122 = rhs.rawData[5];\r\n        var m123 = rhs.rawData[6];\r\n        var m124 = rhs.rawData[7];\r\n        var m131 = rhs.rawData[8];\r\n        var m132 = rhs.rawData[9];\r\n        var m133 = rhs.rawData[10];\r\n        var m134 = rhs.rawData[11];\r\n        var m141 = rhs.rawData[12];\r\n        var m142 = rhs.rawData[13];\r\n        var m143 = rhs.rawData[14];\r\n        var m144 = rhs.rawData[15];\r\n        var m211 = this.rawData[0];\r\n        var m212 = this.rawData[1];\r\n        var m213 = this.rawData[2];\r\n        var m214 = this.rawData[3];\r\n        var m221 = this.rawData[4];\r\n        var m222 = this.rawData[5];\r\n        var m223 = this.rawData[6];\r\n        var m224 = this.rawData[7];\r\n        var m231 = this.rawData[8];\r\n        var m232 = this.rawData[9];\r\n        var m233 = this.rawData[10];\r\n        var m234 = this.rawData[11];\r\n        var m241 = this.rawData[12];\r\n        var m242 = this.rawData[13];\r\n        var m243 = this.rawData[14];\r\n        var m244 = this.rawData[15];\r\n        this.rawData[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;\r\n        this.rawData[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;\r\n        this.rawData[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;\r\n        this.rawData[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;\r\n        this.rawData[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;\r\n        this.rawData[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;\r\n        this.rawData[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;\r\n        this.rawData[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;\r\n        this.rawData[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;\r\n        this.rawData[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;\r\n        this.rawData[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;\r\n        this.rawData[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;\r\n        this.rawData[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;\r\n        this.rawData[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;\r\n        this.rawData[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;\r\n        this.rawData[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;\r\n        this._positionDirty = true;\r\n    };\r\n    /**\r\n     * Prepends an incremental rotation to a Matrix3D object.\r\n     */\r\n    Matrix3D.prototype.prependRotation = function (degrees, axis) {\r\n        var m = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\r\n        /*\r\n         if ( pivot != null )\r\n         {\r\n         var p:Vector3D = pivot;\r\n         m.appendTranslation( p.x, p.y, p.z );\r\n         }\r\n         */\r\n        this.prepend(m);\r\n    };\r\n    /**\r\n     * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\r\n     */\r\n    Matrix3D.prototype.prependScale = function (xScale, yScale, zScale) {\r\n        if (xScale == 1 && yScale == 1 && zScale == 1)\r\n            return;\r\n        var raw = Matrix3D.tempRawData;\r\n        raw[0] = xScale;\r\n        raw[1] = 0;\r\n        raw[2] = 0;\r\n        raw[3] = 0;\r\n        raw[4] = 0;\r\n        raw[5] = yScale;\r\n        raw[6] = 0;\r\n        raw[7] = 0;\r\n        raw[8] = 0;\r\n        raw[9] = 0;\r\n        raw[10] = zScale;\r\n        raw[11] = 0;\r\n        raw[12] = 0;\r\n        raw[13] = 0;\r\n        raw[14] = 0;\r\n        raw[15] = 1;\r\n        this.prepend(Matrix3D.tempMatrix);\r\n    };\r\n    /**\r\n     * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\r\n     */\r\n    Matrix3D.prototype.prependTranslation = function (x, y, z) {\r\n        var raw = Matrix3D.tempRawData;\r\n        raw[0] = 1;\r\n        raw[1] = 0;\r\n        raw[2] = 0;\r\n        raw[3] = 0;\r\n        raw[4] = 0;\r\n        raw[5] = 1;\r\n        raw[6] = 0;\r\n        raw[7] = 0;\r\n        raw[8] = 0;\r\n        raw[9] = 0;\r\n        raw[10] = 1;\r\n        raw[11] = 0;\r\n        raw[12] = x;\r\n        raw[13] = y;\r\n        raw[14] = z;\r\n        raw[15] = 1;\r\n        this.prepend(Matrix3D.tempMatrix);\r\n    };\r\n    // TODO orientationStyle\r\n    /**\r\n     * Sets the transformation matrix's translation, rotation, and scale settings.\r\n     */\r\n    Matrix3D.prototype.recompose = function (components) {\r\n        var pos = components[0] || this.position;\r\n        this.identity();\r\n        var scale = components[3];\r\n        if (scale && (scale.x != 1 || scale.y != 1 || scale.z != 1))\r\n            this.appendScale(scale.x, scale.y, scale.z);\r\n        var skew = components[2];\r\n        if (skew && (skew.x != 0 || skew.y != 0 || skew.z != 0))\r\n            this.appendSkew(skew.x, skew.y, skew.z);\r\n        var sin;\r\n        var cos;\r\n        var raw = Matrix3D.tempRawData;\r\n        raw[12] = 0;\r\n        raw[13] = 0;\r\n        raw[14] = 0;\r\n        raw[15] = 0;\r\n        var rotation = components[1];\r\n        if (rotation) {\r\n            var angle = -rotation.x;\r\n            if (angle != 0) {\r\n                sin = Math.sin(angle);\r\n                cos = Math.cos(angle);\r\n                raw[0] = 1;\r\n                raw[1] = 0;\r\n                raw[2] = 0;\r\n                raw[3] = 0;\r\n                raw[4] = 0;\r\n                raw[5] = cos;\r\n                raw[6] = -sin;\r\n                raw[7] = 0;\r\n                raw[8] = 0;\r\n                raw[9] = sin;\r\n                raw[10] = cos;\r\n                raw[11] = 0;\r\n                this.append(Matrix3D.tempMatrix);\r\n            }\r\n            angle = -rotation.y;\r\n            if (angle != 0) {\r\n                sin = Math.sin(angle);\r\n                cos = Math.cos(angle);\r\n                raw[0] = cos;\r\n                raw[1] = 0;\r\n                raw[2] = sin;\r\n                raw[3] = 0;\r\n                raw[4] = 0;\r\n                raw[5] = 1;\r\n                raw[6] = 0;\r\n                raw[7] = 0;\r\n                raw[8] = -sin;\r\n                raw[9] = 0;\r\n                raw[10] = cos;\r\n                raw[11] = 0;\r\n                this.append(Matrix3D.tempMatrix);\r\n            }\r\n            angle = -rotation.z;\r\n            if (angle != 0) {\r\n                sin = Math.sin(angle);\r\n                cos = Math.cos(angle);\r\n                raw[0] = cos;\r\n                raw[1] = -sin;\r\n                raw[2] = 0;\r\n                raw[3] = 0;\r\n                raw[4] = sin;\r\n                raw[5] = cos;\r\n                raw[6] = 0;\r\n                raw[7] = 0;\r\n                raw[8] = 0;\r\n                raw[9] = 0;\r\n                raw[10] = 1;\r\n                raw[11] = 0;\r\n                this.append(Matrix3D.tempMatrix);\r\n            }\r\n        }\r\n        this.rawData[12] = pos.x;\r\n        this.rawData[13] = pos.y;\r\n        this.rawData[14] = pos.z;\r\n        if (components[0])\r\n            this._positionDirty = true;\r\n        this.rawData[15] = 1;\r\n        return true;\r\n    };\r\n    Matrix3D.prototype.transformVector = function (v, t) {\r\n        if (t === void 0) { t = null; }\r\n        if (v == null)\r\n            return t || new Vector3D_1.Vector3D();\r\n        var x = v.x;\r\n        var y = v.y;\r\n        var z = v.z;\r\n        if (!t)\r\n            t = new Vector3D_1.Vector3D();\r\n        t.x = x * this.rawData[0] + y * this.rawData[4] + z * this.rawData[8] + this.rawData[12];\r\n        t.y = x * this.rawData[1] + y * this.rawData[5] + z * this.rawData[9] + this.rawData[13];\r\n        t.z = x * this.rawData[2] + y * this.rawData[6] + z * this.rawData[10] + this.rawData[14];\r\n        t.w = x * this.rawData[3] + y * this.rawData[7] + z * this.rawData[11] + this.rawData[15];\r\n        return t;\r\n    };\r\n    Matrix3D.prototype.transformBox = function (b, t) {\r\n        if (t === void 0) { t = null; }\r\n        if (b == null)\r\n            return t || new Box_1.Box();\r\n        var minX, minY, minZ;\r\n        var maxX, maxY, maxZ;\r\n        maxX = b.width + (minX = b.x);\r\n        maxY = b.height + (minY = b.y);\r\n        maxZ = b.depth + (minZ = b.z);\r\n        if (!t)\r\n            t = new Box_1.Box();\r\n        //TODO: take account of shear\r\n        t.width = maxX * this.rawData[0] + maxY * this.rawData[4] + maxZ * this.rawData[8] + this.rawData[12] - (t.x = minX * this.rawData[0] + minY * this.rawData[4] + minZ * this.rawData[8] + this.rawData[12]);\r\n        t.height = maxX * this.rawData[1] + maxY * this.rawData[5] + maxZ * this.rawData[9] + this.rawData[13] - (t.y = minX * this.rawData[1] + minY * this.rawData[5] + minZ * this.rawData[9] + this.rawData[13]);\r\n        t.depth = maxX * this.rawData[2] + maxY * this.rawData[6] + maxZ * this.rawData[10] + this.rawData[14] - (t.z = minX * this.rawData[2] + minY * this.rawData[6] + minZ * this.rawData[10] + this.rawData[14]);\r\n        return t;\r\n    };\r\n    /**\r\n     * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\r\n     */\r\n    Matrix3D.prototype.transformVectors = function (vin, vout) {\r\n        var i = 0;\r\n        var x = 0, y = 0, z = 0;\r\n        while (i + 3 <= vin.length) {\r\n            x = vin[i];\r\n            y = vin[i + 1];\r\n            z = vin[i + 2];\r\n            vout[i] = x * this.rawData[0] + y * this.rawData[4] + z * this.rawData[8] + this.rawData[12];\r\n            vout[i + 1] = x * this.rawData[1] + y * this.rawData[5] + z * this.rawData[9] + this.rawData[13];\r\n            vout[i + 2] = x * this.rawData[2] + y * this.rawData[6] + z * this.rawData[10] + this.rawData[14];\r\n            i += 3;\r\n        }\r\n    };\r\n    /**\r\n     * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\r\n     */\r\n    Matrix3D.prototype.transpose = function () {\r\n        var raw = Matrix3D.tempRawData;\r\n        this.copyRawDataTo(raw);\r\n        this.rawData[1] = raw[4];\r\n        this.rawData[2] = raw[8];\r\n        this.rawData[3] = raw[12];\r\n        this.rawData[4] = raw[1];\r\n        this.rawData[6] = raw[9];\r\n        this.rawData[7] = raw[13];\r\n        this.rawData[8] = raw[2];\r\n        this.rawData[9] = raw[6];\r\n        this.rawData[11] = raw[14];\r\n        this.rawData[12] = raw[3];\r\n        this.rawData[13] = raw[7];\r\n        this.rawData[14] = raw[11];\r\n        this._positionDirty = true;\r\n    };\r\n    Matrix3D.getAxisRotation = function (x, y, z, degrees) {\r\n        // internal export class use by rotations which have been tested\r\n        var m = new Matrix3D();\r\n        var rad = degrees * MathConsts_1.MathConsts.DEGREES_TO_RADIANS;\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        var t = 1 - c;\r\n        var tmp1, tmp2;\r\n        m.rawData[0] = c + x * x * t;\r\n        m.rawData[5] = c + y * y * t;\r\n        m.rawData[10] = c + z * z * t;\r\n        tmp1 = x * y * t;\r\n        tmp2 = z * s;\r\n        m.rawData[1] = tmp1 + tmp2;\r\n        m.rawData[4] = tmp1 - tmp2;\r\n        tmp1 = x * z * t;\r\n        tmp2 = y * s;\r\n        m.rawData[8] = tmp1 + tmp2;\r\n        m.rawData[2] = tmp1 - tmp2;\r\n        tmp1 = y * z * t;\r\n        tmp2 = x * s;\r\n        m.rawData[9] = tmp1 - tmp2;\r\n        m.rawData[6] = tmp1 + tmp2;\r\n        return m;\r\n    };\r\n    Object.defineProperty(Matrix3D.prototype, \"determinant\", {\r\n        /**\r\n         * [read-only] A Number that determines whether a matrix is invertible.\r\n         */\r\n        get: function () {\r\n            return ((this.rawData[0] * this.rawData[5] - this.rawData[4] * this.rawData[1]) * (this.rawData[10] * this.rawData[15] - this.rawData[14] * this.rawData[11]) - (this.rawData[0] * this.rawData[9] - this.rawData[8] * this.rawData[1]) * (this.rawData[6] * this.rawData[15] - this.rawData[14] * this.rawData[7]) + (this.rawData[0] * this.rawData[13] - this.rawData[12] * this.rawData[1]) * (this.rawData[6] * this.rawData[11] - this.rawData[10] * this.rawData[7]) + (this.rawData[4] * this.rawData[9] - this.rawData[8] * this.rawData[5]) * (this.rawData[2] * this.rawData[15] - this.rawData[14] * this.rawData[3]) - (this.rawData[4] * this.rawData[13] - this.rawData[12] * this.rawData[5]) * (this.rawData[2] * this.rawData[11] - this.rawData[10] * this.rawData[3]) + (this.rawData[8] * this.rawData[13] - this.rawData[12] * this.rawData[9]) * (this.rawData[2] * this.rawData[7] - this.rawData[6] * this.rawData[3]));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Matrix3D.prototype, \"position\", {\r\n        /**\r\n         * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\r\n         * transformation's frame of reference.\r\n         */\r\n        get: function () {\r\n            if (this._positionDirty) {\r\n                this._positionDirty = false;\r\n                this._position.x = this.rawData[12];\r\n                this._position.y = this.rawData[13];\r\n                this._position.z = this.rawData[14];\r\n            }\r\n            return this._position;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Matrix3D.prototype.invalidatePosition = function () {\r\n        this._positionDirty = true;\r\n    };\r\n    Matrix3D.prototype.toFixed = function (decimalPlace) {\r\n        var magnitude = Math.pow(10, decimalPlace);\r\n        return \"matrix3d(\" + Math.round(this.rawData[0] * magnitude) / magnitude + \",\" + Math.round(this.rawData[1] * magnitude) / magnitude + \",\" + Math.round(this.rawData[2] * magnitude) / magnitude + \",\" + Math.round(this.rawData[3] * magnitude) / magnitude + \",\" + Math.round(this.rawData[4] * magnitude) / magnitude + \",\" + Math.round(this.rawData[5] * magnitude) / magnitude + \",\" + Math.round(this.rawData[6] * magnitude) / magnitude + \",\" + Math.round(this.rawData[7] * magnitude) / magnitude + \",\" + Math.round(this.rawData[8] * magnitude) / magnitude + \",\" + Math.round(this.rawData[9] * magnitude) / magnitude + \",\" + Math.round(this.rawData[10] * magnitude) / magnitude + \",\" + Math.round(this.rawData[11] * magnitude) / magnitude + \",\" + Math.round(this.rawData[12] * magnitude) / magnitude + \",\" + Math.round(this.rawData[13] * magnitude) / magnitude + \",\" + Math.round(this.rawData[14] * magnitude) / magnitude + \",\" + Math.round(this.rawData[15] * magnitude) / magnitude + \")\";\r\n    };\r\n    Matrix3D.prototype.toString = function () {\r\n        return \"matrix3d(\" + Math.round(this.rawData[0] * 1000) / 1000 + \",\" + Math.round(this.rawData[1] * 1000) / 1000 + \",\" + Math.round(this.rawData[2] * 1000) / 1000 + \",\" + Math.round(this.rawData[3] * 1000) / 1000 + \",\" + Math.round(this.rawData[4] * 1000) / 1000 + \",\" + Math.round(this.rawData[5] * 1000) / 1000 + \",\" + Math.round(this.rawData[6] * 1000) / 1000 + \",\" + Math.round(this.rawData[7] * 1000) / 1000 + \",\" + Math.round(this.rawData[8] * 1000) / 1000 + \",\" + Math.round(this.rawData[9] * 1000) / 1000 + \",\" + Math.round(this.rawData[10] * 1000) / 1000 + \",\" + Math.round(this.rawData[11] * 1000) / 1000 + \",\" + Math.round(this.rawData[12] * 1000) / 1000 + \",\" + Math.round(this.rawData[13] * 1000) / 1000 + \",\" + Math.round(this.rawData[14] * 1000) / 1000 + \",\" + Math.round(this.rawData[15] * 1000) / 1000 + \")\";\r\n    };\r\n    Matrix3D.tempMatrix = new Matrix3D();\r\n    Matrix3D.tempRawData = Matrix3D.tempMatrix.rawData;\r\n    return Matrix3D;\r\n}());\r\nexports.Matrix3D = Matrix3D;\r\n},{\"../errors/ArgumentError\":\"awayjs-core/lib/errors/ArgumentError\",\"../geom/Box\":\"awayjs-core/lib/geom/Box\",\"../geom/MathConsts\":\"awayjs-core/lib/geom/MathConsts\",\"../geom/Orientation3D\":\"awayjs-core/lib/geom/Orientation3D\",\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/geom/Matrix\":[function(require,module,exports){\n\"use strict\";\r\nvar Point_1 = require(\"../geom/Point\");\r\nvar ArgumentError_1 = require(\"../errors/ArgumentError\");\r\n/**\r\n * The Matrix export class represents a transformation matrix that determines how to\r\n * map points from one coordinate space to another. You can perform various\r\n * graphical transformations on a display object by setting the properties of\r\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\r\n * property of a Transform object, and then applying that Transform object as\r\n * the <code>transform</code> property of the display object. These\r\n * transformation functions include translation(<i>x</i> and <i>y</i>\r\n * repositioning), rotation, scaling, and skewing.\r\n *\r\n * <p>Together these types of transformations are known as <i>affine\r\n * transformations</i>. Affine transformations preserve the straightness of\r\n * lines while transforming, so that parallel lines stay parallel.</p>\r\n *\r\n * <p>To apply a transformation matrix to a display object, you create a\r\n * Transform object, set its <code>matrix</code> property to the\r\n * transformation matrix, and then set the <code>transform</code> property of\r\n * the display object to the Transform object. Matrix objects are also used as\r\n * parameters of some methods, such as the following:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\r\n *   <li>The <code>beginBitmapFill()</code> method,\r\n * <code>beginGradientFill()</code> method, or\r\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\r\n * </ul>\r\n *\r\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\r\n * contents:</p>\r\n *\r\n * <p>In traditional transformation matrixes, the <code>u</code>,\r\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\r\n * The Matrix export class can only operate in two-dimensional space, so it always\r\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\r\n * and that the property value <code>w</code> is 1.0. The effective values of\r\n * the matrix are as follows:</p>\r\n *\r\n * <p>You can get and set the values of all six of the other properties in a\r\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\r\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\r\n *\r\n * <p>The Matrix export class supports the four major types of transformations:\r\n * translation, scaling, rotation, and skewing. You can set three of these\r\n * transformations by using specialized methods, as described in the following\r\n * table: </p>\r\n *\r\n * <p>Each transformation function alters the current matrix properties so\r\n * that you can effectively combine multiple transformations. To do this, you\r\n * call more than one transformation function before applying the matrix to\r\n * its display object target(by using the <code>transform</code> property of\r\n * that display object).</p>\r\n *\r\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\r\n * before you can call the methods of the Matrix object.</p>\r\n */\r\nvar Matrix = (function () {\r\n    function Matrix(a, b, c, d, tx, ty) {\r\n        if (a === void 0) { a = 1; }\r\n        if (b === void 0) { b = 0; }\r\n        if (c === void 0) { c = 0; }\r\n        if (d === void 0) { d = 1; }\r\n        if (tx === void 0) { tx = 0; }\r\n        if (ty === void 0) { ty = 0; }\r\n        this.rawData = new Float32Array(6);\r\n        if (a instanceof Float32Array) {\r\n            this.copyRawDataFrom(a);\r\n        }\r\n        else {\r\n            this.a = Number(a);\r\n            this.b = b;\r\n            this.c = c;\r\n            this.d = d;\r\n            this.tx = tx;\r\n            this.ty = ty;\r\n        }\r\n    }\r\n    Object.defineProperty(Matrix.prototype, \"a\", {\r\n        /**\r\n         * The value that affects the positioning of pixels along the <i>x</i> axis\r\n         * when scaling or rotating an image.\r\n         */\r\n        get: function () {\r\n            return this.rawData[0];\r\n        },\r\n        set: function (value) {\r\n            this.rawData[0] = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Matrix.prototype, \"b\", {\r\n        /**\r\n         * The value that affects the positioning of pixels along the <i>y</i> axis\r\n         * when rotating or skewing an image.\r\n         */\r\n        get: function () {\r\n            return this.rawData[2];\r\n        },\r\n        set: function (value) {\r\n            this.rawData[2] = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Matrix.prototype, \"c\", {\r\n        /**\r\n         * The value that affects the positioning of pixels along the <i>x</i> axis\r\n         * when rotating or skewing an image.\r\n         */\r\n        get: function () {\r\n            return this.rawData[1];\r\n        },\r\n        set: function (value) {\r\n            this.rawData[1] = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Matrix.prototype, \"d\", {\r\n        /**\r\n         * The value that affects the positioning of pixels along the <i>y</i> axis\r\n         * when scaling or rotating an image.\r\n         */\r\n        get: function () {\r\n            return this.rawData[3];\r\n        },\r\n        set: function (value) {\r\n            this.rawData[3] = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Matrix.prototype, \"tx\", {\r\n        /**\r\n         * The distance by which to translate each point along the <i>x</i> axis.\r\n         */\r\n        get: function () {\r\n            return this.rawData[4];\r\n        },\r\n        set: function (value) {\r\n            this.rawData[4] = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Matrix.prototype, \"ty\", {\r\n        /**\r\n         * The distance by which to translate each point along the <i>y</i> axis.\r\n         */\r\n        get: function () {\r\n            return this.rawData[5];\r\n        },\r\n        set: function (value) {\r\n            this.rawData[5] = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Matrix.prototype.copyRawDataFrom = function (vector, index) {\r\n        if (index === void 0) { index = 0; }\r\n        for (var c = 0; c < 6; c++)\r\n            this.rawData[c] = vector[c + index];\r\n    };\r\n    /**\r\n     * Returns a new Matrix object that is a clone of this matrix, with an exact\r\n     * copy of the contained object.\r\n     *\r\n     * @return A Matrix object.\r\n     */\r\n    Matrix.prototype.clone = function () {\r\n        return new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\r\n    };\r\n    /**\r\n     * Concatenates a matrix with the current matrix, effectively combining the\r\n     * geometric effects of the two. In mathematical terms, concatenating two\r\n     * matrixes is the same as combining them using matrix multiplication.\r\n     *\r\n     * <p>For example, if matrix <code>m1</code> scales an object by a factor of\r\n     * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\r\n     * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\r\n     * transforms <code>m1</code> into a matrix that scales an object by a factor\r\n     * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\r\n     *\r\n     * <p>This method replaces the source matrix with the concatenated matrix. If\r\n     * you want to concatenate two matrixes without altering either of the two\r\n     * source matrixes, first copy the source matrix by using the\r\n     * <code>clone()</code> method, as shown in the Class Examples section.</p>\r\n     *\r\n     * @param matrix The matrix to be concatenated to the source matrix.\r\n     */\r\n    Matrix.prototype.concat = function (matrix) {\r\n        var a1 = this.a * matrix.a + this.b * matrix.c;\r\n        this.b = this.a * matrix.b + this.b * matrix.d;\r\n        this.a = a1;\r\n        var c1 = this.c * matrix.a + this.d * matrix.c;\r\n        this.d = this.c * matrix.b + this.d * matrix.d;\r\n        this.c = c1;\r\n        var tx1 = this.tx * matrix.a + this.ty * matrix.c + matrix.tx;\r\n        this.ty = this.tx * matrix.b + this.ty * matrix.d + matrix.ty;\r\n        this.tx = tx1;\r\n    };\r\n    /**\r\n     * Copies a Vector3D object into specific column of the calling Matrix3D\r\n     * object.\r\n     *\r\n     * @param column   The column from which to copy the data from.\r\n     * @param vector3D The Vector3D object from which to copy the data.\r\n     */\r\n    Matrix.prototype.copyColumnFrom = function (column, vector3D) {\r\n        if (column > 2) {\r\n            throw \"Column \" + column + \" out of bounds (2)\";\r\n        }\r\n        else if (column == 0) {\r\n            this.a = vector3D.x;\r\n            this.c = vector3D.y;\r\n        }\r\n        else if (column == 1) {\r\n            this.b = vector3D.x;\r\n            this.d = vector3D.y;\r\n        }\r\n        else {\r\n            this.tx = vector3D.x;\r\n            this.ty = vector3D.y;\r\n        }\r\n    };\r\n    /**\r\n     * Copies specific column of the calling Matrix object into the Vector3D\r\n     * object. The w element of the Vector3D object will not be changed.\r\n     *\r\n     * @param column   The column from which to copy the data from.\r\n     * @param vector3D The Vector3D object from which to copy the data.\r\n     */\r\n    Matrix.prototype.copyColumnTo = function (column, vector3D) {\r\n        if (column > 2) {\r\n            throw new ArgumentError_1.ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\r\n        }\r\n        else if (column == 0) {\r\n            vector3D.x = this.a;\r\n            vector3D.y = this.c;\r\n            vector3D.z = 0;\r\n        }\r\n        else if (column == 1) {\r\n            vector3D.x = this.b;\r\n            vector3D.y = this.d;\r\n            vector3D.z = 0;\r\n        }\r\n        else {\r\n            vector3D.x = this.tx;\r\n            vector3D.y = this.ty;\r\n            vector3D.z = 1;\r\n        }\r\n    };\r\n    /**\r\n     * Copies all of the matrix data from the source Point object into the\r\n     * calling Matrix object.\r\n     *\r\n     * @param sourceMatrix The Matrix object from which to copy the data.\r\n     */\r\n    Matrix.prototype.copyFrom = function (sourceMatrix) {\r\n        this.a = sourceMatrix.a;\r\n        this.b = sourceMatrix.b;\r\n        this.c = sourceMatrix.c;\r\n        this.d = sourceMatrix.d;\r\n        this.tx = sourceMatrix.tx;\r\n        this.ty = sourceMatrix.ty;\r\n    };\r\n    /**\r\n     * Copies a Vector3D object into specific row of the calling Matrix object.\r\n     *\r\n     * @param row      The row from which to copy the data from.\r\n     * @param vector3D The Vector3D object from which to copy the data.\r\n     */\r\n    Matrix.prototype.copyRowFrom = function (row, vector3D) {\r\n        if (row > 2) {\r\n            throw new ArgumentError_1.ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\r\n        }\r\n        else if (row == 0) {\r\n            this.a = vector3D.x;\r\n            this.c = vector3D.y;\r\n        }\r\n        else if (row == 1) {\r\n            this.b = vector3D.x;\r\n            this.d = vector3D.y;\r\n        }\r\n        else {\r\n            this.tx = vector3D.x;\r\n            this.ty = vector3D.y;\r\n        }\r\n    };\r\n    /**\r\n     * Copies specific row of the calling Matrix object into the Vector3D object.\r\n     * The w element of the Vector3D object will not be changed.\r\n     *\r\n     * @param row      The row from which to copy the data from.\r\n     * @param vector3D The Vector3D object from which to copy the data.\r\n     */\r\n    Matrix.prototype.copyRowTo = function (row, vector3D) {\r\n        if (row > 2) {\r\n            throw new ArgumentError_1.ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\r\n        }\r\n        else if (row == 0) {\r\n            vector3D.x = this.a;\r\n            vector3D.y = this.b;\r\n            vector3D.z = this.tx;\r\n        }\r\n        else if (row == 1) {\r\n            vector3D.x = this.c;\r\n            vector3D.y = this.d;\r\n            vector3D.z = this.ty;\r\n        }\r\n        else {\r\n            vector3D.setTo(0, 0, 1);\r\n        }\r\n    };\r\n    /**\r\n     * Includes parameters for scaling, rotation, and translation. When applied\r\n     * to a matrix it sets the matrix's values based on those parameters.\r\n     *\r\n     * <p>Using the <code>createBox()</code> method lets you obtain the same\r\n     * matrix as you would if you applied the <code>identity()</code>,\r\n     * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\r\n     * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\r\n     * 100, 100)</code> has the same effect as the following:</p>\r\n     *\r\n     * @param scaleX   The factor by which to scale horizontally.\r\n     * @param scaleY   The factor by which scale vertically.\r\n     * @param rotation The amount to rotate, in radians.\r\n     * @param tx       The number of pixels to translate(move) to the right\r\n     *                 along the <i>x</i> axis.\r\n     * @param ty       The number of pixels to translate(move) down along the\r\n     *                 <i>y</i> axis.\r\n     */\r\n    Matrix.prototype.createBox = function (scaleX, scaleY, rotation, tx, ty) {\r\n        if (rotation === void 0) { rotation = 0; }\r\n        if (tx === void 0) { tx = 0; }\r\n        if (ty === void 0) { ty = 0; }\r\n        this.a = scaleX;\r\n        this.d = scaleY;\r\n        this.b = rotation;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n    };\r\n    /**\r\n     * Creates the specific style of matrix expected by the\r\n     * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\r\n     * methods of the Graphics class. Width and height are scaled to a\r\n     * <code>scaleX</code>/<code>scaleY</code> pair and the\r\n     * <code>tx</code>/<code>ty</code> values are offset by half the width and\r\n     * height.\r\n     *\r\n     * <p>For example, consider a gradient with the following\r\n     * characteristics:</p>\r\n     *\r\n     * <ul>\r\n     *   <li><code>GradientType.LINEAR</code></li>\r\n     *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\r\n     * 255]</code></li>\r\n     *   <li><code>SpreadMethod.PAD</code></li>\r\n     *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\r\n     * </ul>\r\n     *\r\n     * <p>The following illustrations show gradients in which the matrix was\r\n     * defined using the <code>createGradientBox()</code> method with different\r\n     * parameter settings:</p>\r\n     *\r\n     * @param width    The width of the gradient box.\r\n     * @param height   The height of the gradient box.\r\n     * @param rotation The amount to rotate, in radians.\r\n     * @param tx       The distance, in pixels, to translate to the right along\r\n     *                 the <i>x</i> axis. This value is offset by half of the\r\n     *                 <code>width</code> parameter.\r\n     * @param ty       The distance, in pixels, to translate down along the\r\n     *                 <i>y</i> axis. This value is offset by half of the\r\n     *                 <code>height</code> parameter.\r\n     */\r\n    Matrix.prototype.createGradientBox = function (width, height, rotation, tx, ty) {\r\n        if (rotation === void 0) { rotation = 0; }\r\n        if (tx === void 0) { tx = 0; }\r\n        if (ty === void 0) { ty = 0; }\r\n        this.a = width / 1638.4;\r\n        this.d = height / 1638.4;\r\n        if (rotation != 0.0) {\r\n            var cos = Math.cos(rotation);\r\n            var sin = Math.sin(rotation);\r\n            this.b = sin * this.d;\r\n            this.c = -sin * this.a;\r\n            this.a *= cos;\r\n            this.d *= cos;\r\n        }\r\n        else {\r\n            this.b = this.c = 0;\r\n        }\r\n        this.tx = tx + width / 2;\r\n        this.ty = ty + height / 2;\r\n    };\r\n    /**\r\n     * Given a point in the pretransform coordinate space, returns the\r\n     * coordinates of that point after the transformation occurs. Unlike the\r\n     * standard transformation applied using the <code>transformPoint()</code>\r\n     * method, the <code>deltaTransformPoint()</code> method's transformation\r\n     * does not consider the translation parameters <code>tx</code> and\r\n     * <code>ty</code>.\r\n     *\r\n     * @param point The point for which you want to get the result of the matrix\r\n     *              transformation.\r\n     * @return The point resulting from applying the matrix transformation.\r\n     */\r\n    Matrix.prototype.deltaTransformPoint = function (point) {\r\n        return new Point_1.Point(point.x * this.a + point.y * this.c, point.x * this.b + point.y * this.d);\r\n    };\r\n    /**\r\n     * Sets each matrix property to a value that causes a null transformation. An\r\n     * object transformed by applying an identity matrix will be identical to the\r\n     * original.\r\n     *\r\n     * <p>After calling the <code>identity()</code> method, the resulting matrix\r\n     * has the following properties: <code>a</code>=1, <code>b</code>=0,\r\n     * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\r\n     * <code>ty</code>=0.</p>\r\n     *\r\n     * <p>In matrix notation, the identity matrix looks like this:</p>\r\n     *\r\n     */\r\n    Matrix.prototype.identity = function () {\r\n        this.a = 1;\r\n        this.b = 0;\r\n        this.c = 0;\r\n        this.d = 1;\r\n        this.tx = 0;\r\n        this.ty = 0;\r\n    };\r\n    /**\r\n     * Performs the opposite transformation of the original matrix. You can apply\r\n     * an inverted matrix to an object to undo the transformation performed when\r\n     * applying the original matrix.\r\n     */\r\n    Matrix.prototype.invert = function () {\r\n        var norm = this.a * this.d - this.b * this.c;\r\n        if (norm == 0) {\r\n            this.a = this.b = this.c = this.d = 0;\r\n            this.tx = -this.tx;\r\n            this.ty = -this.ty;\r\n        }\r\n        else {\r\n            norm = 1.0 / norm;\r\n            var a1 = this.d * norm;\r\n            this.d = this.a * norm;\r\n            this.a = a1;\r\n            this.b *= -norm;\r\n            this.c *= -norm;\r\n            var tx1 = -this.a * this.tx - this.c * this.ty;\r\n            this.ty = -this.b * this.tx - this.d * this.ty;\r\n            this.tx = tx1;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new Matrix object that is a clone of this matrix, with an exact\r\n     * copy of the contained object.\r\n     *\r\n     * @param matrix The matrix for which you want to get the result of the matrix\r\n     *               transformation.\r\n     * @return A Matrix object.\r\n     */\r\n    Matrix.prototype.multiply = function (matrix) {\r\n        var result = new Matrix();\r\n        result.a = this.a * matrix.a + this.b * matrix.c;\r\n        result.b = this.a * matrix.b + this.b * matrix.d;\r\n        result.c = this.c * matrix.a + this.d * matrix.c;\r\n        result.d = this.c * matrix.b + this.d * matrix.d;\r\n        result.tx = this.tx * matrix.a + this.ty * matrix.c + matrix.tx;\r\n        result.ty = this.tx * matrix.b + this.ty * matrix.d + matrix.ty;\r\n        return result;\r\n    };\r\n    /**\r\n     * Applies a rotation transformation to the Matrix object.\r\n     *\r\n     * <p>The <code>rotate()</code> method alters the <code>a</code>,\r\n     * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\r\n     * Matrix object. In matrix notation, this is the same as concatenating the\r\n     * current matrix with the following:</p>\r\n     *\r\n     * @param angle The rotation angle in radians.\r\n     */\r\n    Matrix.prototype.rotate = function (angle) {\r\n        var cos = Math.cos(angle);\r\n        var sin = Math.sin(angle);\r\n        var a1 = this.a * cos - this.b * sin;\r\n        this.b = this.a * sin + this.b * cos;\r\n        this.a = a1;\r\n        var c1 = this.c * cos - this.d * sin;\r\n        this.d = this.c * sin + this.d * cos;\r\n        this.c = c1;\r\n        var tx1 = this.tx * cos - this.ty * sin;\r\n        this.ty = this.tx * sin + this.ty * cos;\r\n        this.tx = tx1;\r\n    };\r\n    /**\r\n     * Applies a scaling transformation to the matrix. The <i>x</i> axis is\r\n     * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\r\n     * <code>sy</code>.\r\n     *\r\n     * <p>The <code>scale()</code> method alters the <code>a</code> and\r\n     * <code>d</code> properties of the Matrix object. In matrix notation, this\r\n     * is the same as concatenating the current matrix with the following\r\n     * matrix:</p>\r\n     *\r\n     * @param sx A multiplier used to scale the object along the <i>x</i> axis.\r\n     * @param sy A multiplier used to scale the object along the <i>y</i> axis.\r\n     */\r\n    Matrix.prototype.scale = function (sx, sy) {\r\n        this.a *= sx;\r\n        this.b *= sy;\r\n        this.c *= sx;\r\n        this.d *= sy;\r\n        this.tx *= sx;\r\n        this.ty *= sy;\r\n    };\r\n    /**\r\n     * Sets the members of Matrix to the specified values.\r\n     *\r\n     * @param a  The value that affects the positioning of pixels along the\r\n     *           <i>x</i> axis when scaling or rotating an image.\r\n     * @param b  The value that affects the positioning of pixels along the\r\n     *           <i>y</i> axis when rotating or skewing an image.\r\n     * @param c  The value that affects the positioning of pixels along the\r\n     *           <i>x</i> axis when rotating or skewing an image.\r\n     * @param d  The value that affects the positioning of pixels along the\r\n     *           <i>y</i> axis when scaling or rotating an image..\r\n     * @param tx The distance by which to translate each point along the <i>x</i>\r\n     *           axis.\r\n     * @param ty The distance by which to translate each point along the <i>y</i>\r\n     *           axis.\r\n     */\r\n    Matrix.prototype.setTo = function (a, b, c, d, tx, ty) {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n    };\r\n    /**\r\n     * Returns a text value listing the properties of the Matrix object.\r\n     *\r\n     * @return A string containing the values of the properties of the Matrix\r\n     *         object: <code>a</code>, <code>b</code>, <code>c</code>,\r\n     *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\r\n     */\r\n    Matrix.prototype.toString = function () {\r\n        return \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\r\n    };\r\n    /**\r\n     * Returns the result of applying the geometric transformation represented by\r\n     * the Matrix object to the specified point.\r\n     *\r\n     * @param point The point for which you want to get the result of the Matrix\r\n     *              transformation.\r\n     * @return The point resulting from applying the Matrix transformation.\r\n     */\r\n    Matrix.prototype.transformPoint = function (point) {\r\n        return new Point_1.Point(point.x * this.a + point.y * this.c + this.tx, point.x * this.b + point.y * this.d + this.ty);\r\n    };\r\n    /**\r\n     * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\r\n     * by the <code>dx</code> and <code>dy</code> parameters.\r\n     *\r\n     * @param dx The amount of movement along the <i>x</i> axis to the right, in\r\n     *           pixels.\r\n     * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\r\n     */\r\n    Matrix.prototype.translate = function (dx, dy) {\r\n        this.tx += dx;\r\n        this.ty += dy;\r\n    };\r\n    return Matrix;\r\n}());\r\nexports.Matrix = Matrix;\r\n},{\"../errors/ArgumentError\":\"awayjs-core/lib/errors/ArgumentError\",\"../geom/Point\":\"awayjs-core/lib/geom/Point\"}],\"awayjs-core/lib/geom/Orientation3D\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * A Quaternion object which can be used to represent rotations.\r\n */\r\nvar Orientation3D = (function () {\r\n    function Orientation3D() {\r\n    }\r\n    /**\r\n     * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\r\n     * @type {string}\r\n     */\r\n    Orientation3D.AXIS_ANGLE = \"axisAngle\";\r\n    /**\r\n     * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\r\n     * @type {string}\r\n     */\r\n    Orientation3D.EULER_ANGLES = \"eulerAngles\";\r\n    /**\r\n     * The quaternion orientation uses complex numbers.\r\n     * @type {string}\r\n     */\r\n    Orientation3D.QUATERNION = \"quaternion\";\r\n    return Orientation3D;\r\n}());\r\nexports.Orientation3D = Orientation3D;\r\n},{}],\"awayjs-core/lib/geom/Plane3D\":[function(require,module,exports){\n\"use strict\";\r\nvar PlaneClassification_1 = require(\"../geom/PlaneClassification\");\r\nvar Plane3D = (function () {\r\n    /**\r\n     * Create a Plane3D with ABCD coefficients\r\n     */\r\n    function Plane3D(a, b, c, d) {\r\n        if (a === void 0) { a = 0; }\r\n        if (b === void 0) { b = 0; }\r\n        if (c === void 0) { c = 0; }\r\n        if (d === void 0) { d = 0; }\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        if (a == 0 && b == 0) {\r\n            this._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n        }\r\n        else if (b == 0 && c == 0) {\r\n            this._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n        }\r\n        else if (a == 0 && c == 0) {\r\n            this._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n        }\r\n        else {\r\n            this._iAlignment = Plane3D.ALIGN_ANY;\r\n        }\r\n    }\r\n    /**\r\n     * Fills this Plane3D with the coefficients from 3 points in 3d space.\r\n     * @param p0 Vector3D\r\n     * @param p1 Vector3D\r\n     * @param p2 Vector3D\r\n     */\r\n    Plane3D.prototype.fromPoints = function (p0, p1, p2) {\r\n        var d1x = p1.x - p0.x;\r\n        var d1y = p1.y - p0.y;\r\n        var d1z = p1.z - p0.z;\r\n        var d2x = p2.x - p0.x;\r\n        var d2y = p2.y - p0.y;\r\n        var d2z = p2.z - p0.z;\r\n        this.a = d1y * d2z - d1z * d2y;\r\n        this.b = d1z * d2x - d1x * d2z;\r\n        this.c = d1x * d2y - d1y * d2x;\r\n        this.d = this.a * p0.x + this.b * p0.y + this.c * p0.z;\r\n        // not using epsilon, since a plane is infinite and a small incorrection can grow very large\r\n        if (this.a == 0 && this.b == 0) {\r\n            this._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n        }\r\n        else if (this.b == 0 && this.c == 0) {\r\n            this._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n        }\r\n        else if (this.a == 0 && this.c == 0) {\r\n            this._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n        }\r\n        else {\r\n            this._iAlignment = Plane3D.ALIGN_ANY;\r\n        }\r\n    };\r\n    /**\r\n     * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\r\n     * @param normal Vector3D\r\n     * @param point  Vector3D\r\n     */\r\n    Plane3D.prototype.fromNormalAndPoint = function (normal, point) {\r\n        this.a = normal.x;\r\n        this.b = normal.y;\r\n        this.c = normal.z;\r\n        this.d = this.a * point.x + this.b * point.y + this.c * point.z;\r\n        if (this.a == 0 && this.b == 0) {\r\n            this._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n        }\r\n        else if (this.b == 0 && this.c == 0) {\r\n            this._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n        }\r\n        else if (this.a == 0 && this.c == 0) {\r\n            this._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n        }\r\n        else {\r\n            this._iAlignment = Plane3D.ALIGN_ANY;\r\n        }\r\n    };\r\n    /**\r\n     * Normalize this Plane3D\r\n     * @return Plane3D This Plane3D.\r\n     */\r\n    Plane3D.prototype.normalize = function () {\r\n        var len = 1 / Math.sqrt(this.a * this.a + this.b * this.b + this.c * this.c);\r\n        this.a *= len;\r\n        this.b *= len;\r\n        this.c *= len;\r\n        this.d *= len;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns the signed distance between this Plane3D and the point p.\r\n     * @param p Vector3D\r\n     * @returns Number\r\n     */\r\n    Plane3D.prototype.distance = function (p) {\r\n        if (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\r\n            return this.a * p.x - this.d;\r\n        }\r\n        else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\r\n            return this.b * p.y - this.d;\r\n        }\r\n        else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\r\n            return this.c * p.z - this.d;\r\n        }\r\n        else {\r\n            return this.a * p.x + this.b * p.y + this.c * p.z - this.d;\r\n        }\r\n    };\r\n    /**\r\n     * Classify a point against this Plane3D. (in front, back or intersecting)\r\n     * @param p Vector3D\r\n     * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\r\n     */\r\n    Plane3D.prototype.classifyPoint = function (p, epsilon) {\r\n        if (epsilon === void 0) { epsilon = 0.01; }\r\n        // check NaN\r\n        if (this.d != this.d)\r\n            return PlaneClassification_1.PlaneClassification.FRONT;\r\n        var len;\r\n        if (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\r\n            len = this.a * p.x - this.d;\r\n        else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\r\n            len = this.b * p.y - this.d;\r\n        else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\r\n            len = this.c * p.z - this.d;\r\n        else\r\n            len = this.a * p.x + this.b * p.y + this.c * p.z - this.d;\r\n        if (len < -epsilon)\r\n            return PlaneClassification_1.PlaneClassification.BACK;\r\n        else if (len > epsilon)\r\n            return PlaneClassification_1.PlaneClassification.FRONT;\r\n        else\r\n            return PlaneClassification_1.PlaneClassification.INTERSECT;\r\n    };\r\n    Plane3D.prototype.toString = function () {\r\n        return \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\r\n    };\r\n    // indicates the alignment of the plane\r\n    Plane3D.ALIGN_ANY = 0;\r\n    Plane3D.ALIGN_XY_AXIS = 1;\r\n    Plane3D.ALIGN_YZ_AXIS = 2;\r\n    Plane3D.ALIGN_XZ_AXIS = 3;\r\n    return Plane3D;\r\n}());\r\nexports.Plane3D = Plane3D;\r\n},{\"../geom/PlaneClassification\":\"awayjs-core/lib/geom/PlaneClassification\"}],\"awayjs-core/lib/geom/PlaneClassification\":[function(require,module,exports){\n\"use strict\";\r\nvar PlaneClassification = (function () {\r\n    function PlaneClassification() {\r\n    }\r\n    // \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\r\n    PlaneClassification.BACK = 0;\r\n    PlaneClassification.FRONT = 1;\r\n    PlaneClassification.IN = 0;\r\n    PlaneClassification.OUT = 1;\r\n    PlaneClassification.INTERSECT = 2;\r\n    return PlaneClassification;\r\n}());\r\nexports.PlaneClassification = PlaneClassification;\r\n},{}],\"awayjs-core/lib/geom/Point\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The Point object represents a location in a two-dimensional coordinate\r\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\r\n * represents the vertical axis.\r\n *\r\n * <p>The following code creates a point at(0,0):</p>\r\n *\r\n * <p>Methods and properties of the following classes use Point objects:</p>\r\n *\r\n * <ul>\r\n *   <li>BitmapData</li>\r\n *   <li>DisplayObject</li>\r\n *   <li>DisplayObjectContainer</li>\r\n *   <li>DisplacementMapFilter</li>\r\n *   <li>NativeWindow</li>\r\n *   <li>Matrix</li>\r\n *   <li>Rectangle</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Point()</code> constructor to create a Point\r\n * object.</p>\r\n */\r\nvar Point = (function () {\r\n    /**\r\n     * Creates a new point. If you pass no parameters to this method, a point is\r\n     * created at(0,0).\r\n     *\r\n     * @param x The horizontal coordinate.\r\n     * @param y The vertical coordinate.\r\n     */\r\n    function Point(x, y) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    Object.defineProperty(Point.prototype, \"length\", {\r\n        /**\r\n         * The length of the line segment from(0,0) to this point.\r\n         */\r\n        get: function () {\r\n            return Math.sqrt(this.x * this.x + this.y * this.y);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds the coordinates of another point to the coordinates of this point to\r\n     * create a new point.\r\n     *\r\n     * @param v The point to be added.\r\n     * @return The new point.\r\n     */\r\n    Point.prototype.add = function (v) {\r\n        return new Point(this.x + v.x, this.y + v.y);\r\n    };\r\n    /**\r\n     * Creates a copy of this Point object.\r\n     *\r\n     * @return The new Point object.\r\n     */\r\n    Point.prototype.clone = function () {\r\n        return new Point(this.x, this.y);\r\n    };\r\n    Point.prototype.copyFrom = function (sourcePoint) {\r\n    };\r\n    /**\r\n     * Determines whether two points are equal. Two points are equal if they have\r\n     * the same <i>x</i> and <i>y</i> values.\r\n     *\r\n     * @param toCompare The point to be compared.\r\n     * @return A value of <code>true</code> if the object is equal to this Point\r\n     *         object; <code>false</code> if it is not equal.\r\n     */\r\n    Point.prototype.equals = function (toCompare) {\r\n        return (this.x == toCompare.x && this.y == toCompare.y);\r\n    };\r\n    /**\r\n     * Scales the line segment between(0,0) and the current point to a set\r\n     * length.\r\n     *\r\n     * @param thickness The scaling value. For example, if the current point is\r\n     *                 (0,5), and you normalize it to 1, the point returned is\r\n     *                  at(0,1).\r\n     */\r\n    Point.prototype.normalize = function (thickness) {\r\n        if (thickness === void 0) { thickness = 1; }\r\n        if (this.length != 0) {\r\n            var invLength = thickness / this.length;\r\n            this.x *= invLength;\r\n            this.y *= invLength;\r\n            return;\r\n        }\r\n        throw \"Cannot divide by zero length.\";\r\n    };\r\n    /**\r\n     * Offsets the Point object by the specified amount. The value of\r\n     * <code>dx</code> is added to the original value of <i>x</i> to create the\r\n     * new <i>x</i> value. The value of <code>dy</code> is added to the original\r\n     * value of <i>y</i> to create the new <i>y</i> value.\r\n     *\r\n     * @param dx The amount by which to offset the horizontal coordinate,\r\n     *           <i>x</i>.\r\n     * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\r\n     */\r\n    Point.prototype.offset = function (dx, dy) {\r\n        this.x += dx;\r\n        this.y += dy;\r\n    };\r\n    Point.prototype.setTo = function (xa, ya) {\r\n        this.x = xa;\r\n        this.y = ya;\r\n    };\r\n    /**\r\n     * Subtracts the coordinates of another point from the coordinates of this\r\n     * point to create a new point.\r\n     *\r\n     * @param v The point to be subtracted.\r\n     * @return The new point.\r\n     */\r\n    Point.prototype.subtract = function (v) {\r\n        return new Point(this.x - v.x, this.y - v.y);\r\n    };\r\n    /**\r\n     * Returns a string that contains the values of the <i>x</i> and <i>y</i>\r\n     * coordinates. The string has the form <code>\"(x=<i>x</i>,\r\n     * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\r\n     * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\r\n     *\r\n     * @return The string representation of the coordinates.\r\n     */\r\n    Point.prototype.toString = function () {\r\n        return \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\r\n    };\r\n    /**\r\n     * Returns the distance between <code>pt1</code> and <code>pt2</code>.\r\n     *\r\n     * @param pt1 The first point.\r\n     * @param pt2 The second point.\r\n     * @return The distance between the first and second points.\r\n     */\r\n    Point.distance = function (pt1, pt2) {\r\n        var dx = pt2.x - pt1.x;\r\n        var dy = pt2.y - pt1.y;\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    };\r\n    /**\r\n     * Determines a point between two specified points. The parameter\r\n     * <code>f</code> determines where the new interpolated point is located\r\n     * relative to the two end points specified by parameters <code>pt1</code>\r\n     * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\r\n     * is to <code>1.0</code>, the closer the interpolated point is to the first\r\n     * point(parameter <code>pt1</code>). The closer the value of the parameter\r\n     * <code>f</code> is to 0, the closer the interpolated point is to the second\r\n     * point(parameter <code>pt2</code>).\r\n     *\r\n     * @param pt1 The first point.\r\n     * @param pt2 The second point.\r\n     * @param f   The level of interpolation between the two points. Indicates\r\n     *            where the new point will be, along the line between\r\n     *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\r\n     *            <code>pt1</code> is returned; if <code>f</code>=0,\r\n     *            <code>pt2</code> is returned.\r\n     * @return The new, interpolated point.\r\n     */\r\n    Point.interpolate = function (pt1, pt2, f) {\r\n        return new Point(pt2.x + (pt1.x - pt2.x) * f, pt2.y + (pt1.y - pt2.y) * f);\r\n    };\r\n    /**\r\n     * Converts a pair of polar coordinates to a Cartesian point coordinate.\r\n     *\r\n     * @param len   The length coordinate of the polar pair.\r\n     * @param angle The angle, in radians, of the polar pair.\r\n     * @return The Cartesian point.\r\n     */\r\n    Point.polar = function (len, angle) {\r\n        return new Point(len * Math.cos(angle), len * Math.sin(angle));\r\n    };\r\n    return Point;\r\n}());\r\nexports.Point = Point;\r\n},{}],\"awayjs-core/lib/geom/PoissonLookup\":[function(require,module,exports){\n\"use strict\";\r\nvar PoissonLookup = (function () {\r\n    function PoissonLookup() {\r\n    }\r\n    PoissonLookup.initDistributions = function () {\r\n        // precalculated for best control\r\n        this._distributions = new Array();\r\n        this._distributions[0] = new Array(0.3082841, 0.4320919);\r\n        this._distributions[1] = new Array(0.3082841, 0.4320919, -0.2274942, -0.6640266);\r\n        this._distributions[2] = new Array(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\r\n        this._distributions[3] = new Array(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\r\n        this._distributions[4] = new Array(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\r\n        this._distributions[5] = new Array(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\r\n        this._distributions[6] = new Array(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\r\n        this._distributions[7] = new Array(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\r\n        this._distributions[8] = new Array(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\r\n        this._distributions[9] = new Array(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\r\n        this._distributions[10] = new Array(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\r\n        this._distributions[11] = new Array(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\r\n        this._distributions[12] = new Array(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\r\n        this._distributions[13] = new Array(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\r\n        this._distributions[14] = new Array(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\r\n        this._distributions[15] = new Array(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\r\n        this._distributions[16] = new Array(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\r\n        this._distributions[17] = new Array(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\r\n        this._distributions[18] = new Array(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\r\n        this._distributions[19] = new Array(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\r\n        this._distributions[20] = new Array(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\r\n        this._distributions[21] = new Array(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\r\n        this._distributions[22] = new Array(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\r\n        this._distributions[23] = new Array(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\r\n        this._distributions[24] = new Array(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\r\n        this._distributions[25] = new Array(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\r\n        this._distributions[26] = new Array(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\r\n        this._distributions[27] = new Array(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\r\n        this._distributions[28] = new Array(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\r\n        this._distributions[29] = new Array(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\r\n        this._distributions[30] = new Array(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\r\n        this._distributions[31] = new Array(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\r\n    };\r\n    PoissonLookup.getDistribution = function (n /*int*/) {\r\n        if (!this._distributions)\r\n            this.initDistributions();\r\n        if (n < 2 || n > 32)\r\n            return null;\r\n        return this._distributions[n - 1];\r\n    };\r\n    return PoissonLookup;\r\n}());\r\nexports.PoissonLookup = PoissonLookup;\r\n},{}],\"awayjs-core/lib/geom/Quaternion\":[function(require,module,exports){\n\"use strict\";\r\nvar Matrix3DUtils_1 = require(\"../geom/Matrix3DUtils\");\r\nvar Orientation3D_1 = require(\"../geom/Orientation3D\");\r\nvar Matrix3D_1 = require(\"../geom/Matrix3D\");\r\nvar Vector3D_1 = require(\"../geom/Vector3D\");\r\n/**\r\n * A Quaternion object which can be used to represent rotations.\r\n */\r\nvar Quaternion = (function () {\r\n    /**\r\n     * Creates a new Quaternion object.\r\n     * @param x The x value of the quaternion.\r\n     * @param y The y value of the quaternion.\r\n     * @param z The z value of the quaternion.\r\n     * @param w The w value of the quaternion.\r\n     */\r\n    function Quaternion(x, y, z, w) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        if (z === void 0) { z = 0; }\r\n        if (w === void 0) { w = 1; }\r\n        /**\r\n         * The x value of the quaternion.\r\n         */\r\n        this.x = 0;\r\n        /**\r\n         * The y value of the quaternion.\r\n         */\r\n        this.y = 0;\r\n        /**\r\n         * The z value of the quaternion.\r\n         */\r\n        this.z = 0;\r\n        /**\r\n         * The w value of the quaternion.\r\n         */\r\n        this.w = 1;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n    Object.defineProperty(Quaternion.prototype, \"magnitude\", {\r\n        /**\r\n         * Returns the magnitude of the quaternion object.\r\n         */\r\n        get: function () {\r\n            return Math.sqrt(this.w * this.w + this.x * this.x + this.y * this.y + this.z * this.z);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Fills the quaternion object with the result from a multiplication of two quaternion objects.\r\n     *\r\n     * @param    qa    The first quaternion in the multiplication.\r\n     * @param    qb    The second quaternion in the multiplication.\r\n     */\r\n    Quaternion.prototype.multiply = function (qa, qb) {\r\n        var w1 = qa.w, x1 = qa.x, y1 = qa.y, z1 = qa.z;\r\n        var w2 = qb.w, x2 = qb.x, y2 = qb.y, z2 = qb.z;\r\n        this.w = w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2;\r\n        this.x = w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2;\r\n        this.y = w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2;\r\n        this.z = w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2;\r\n    };\r\n    Quaternion.prototype.multiplyVector = function (vector, target) {\r\n        if (target === void 0) { target = null; }\r\n        //target ||= new Quaternion();\r\n        if (target === null) {\r\n            target = new Quaternion();\r\n        }\r\n        var x2 = vector.x;\r\n        var y2 = vector.y;\r\n        var z2 = vector.z;\r\n        target.w = -this.x * x2 - this.y * y2 - this.z * z2;\r\n        target.x = this.w * x2 + this.y * z2 - this.z * y2;\r\n        target.y = this.w * y2 - this.x * z2 + this.z * x2;\r\n        target.z = this.w * z2 + this.x * y2 - this.y * x2;\r\n        return target;\r\n    };\r\n    /**\r\n     * Fills the quaternion object with values representing the given rotation around a vector.\r\n     *\r\n     * @param    axis    The axis around which to rotate\r\n     * @param    angle    The angle in radians of the rotation.\r\n     */\r\n    Quaternion.prototype.fromAxisAngle = function (axis, angle) {\r\n        var sin_a = Math.sin(angle / 2);\r\n        var cos_a = Math.cos(angle / 2);\r\n        this.x = axis.x * sin_a;\r\n        this.y = axis.y * sin_a;\r\n        this.z = axis.z * sin_a;\r\n        this.w = cos_a;\r\n        this.normalize();\r\n    };\r\n    /**\r\n     * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\r\n     * @param qa The first quaternion to interpolate.\r\n     * @param qb The second quaternion to interpolate.\r\n     * @param t The interpolation weight, a value between 0 and 1.\r\n     */\r\n    Quaternion.prototype.slerp = function (qa, qb, t) {\r\n        var w1 = qa.w, x1 = qa.x, y1 = qa.y, z1 = qa.z;\r\n        var w2 = qb.w, x2 = qb.x, y2 = qb.y, z2 = qb.z;\r\n        var dot = w1 * w2 + x1 * x2 + y1 * y2 + z1 * z2;\r\n        // shortest direction\r\n        if (dot < 0) {\r\n            dot = -dot;\r\n            w2 = -w2;\r\n            x2 = -x2;\r\n            y2 = -y2;\r\n            z2 = -z2;\r\n        }\r\n        if (dot < 0.95) {\r\n            // interpolate angle linearly\r\n            var angle = Math.acos(dot);\r\n            var s = 1 / Math.sin(angle);\r\n            var s1 = Math.sin(angle * (1 - t)) * s;\r\n            var s2 = Math.sin(angle * t) * s;\r\n            this.w = w1 * s1 + w2 * s2;\r\n            this.x = x1 * s1 + x2 * s2;\r\n            this.y = y1 * s1 + y2 * s2;\r\n            this.z = z1 * s1 + z2 * s2;\r\n        }\r\n        else {\r\n            // nearly identical angle, interpolate linearly\r\n            this.w = w1 + t * (w2 - w1);\r\n            this.x = x1 + t * (x2 - x1);\r\n            this.y = y1 + t * (y2 - y1);\r\n            this.z = z1 + t * (z2 - z1);\r\n            var len = 1.0 / Math.sqrt(this.w * this.w + this.x * this.x + this.y * this.y + this.z * this.z);\r\n            this.w *= len;\r\n            this.x *= len;\r\n            this.y *= len;\r\n            this.z *= len;\r\n        }\r\n    };\r\n    /**\r\n     * Linearly interpolates between two quaternions.\r\n     * @param qa The first quaternion to interpolate.\r\n     * @param qb The second quaternion to interpolate.\r\n     * @param t The interpolation weight, a value between 0 and 1.\r\n     */\r\n    Quaternion.prototype.lerp = function (qa, qb, t) {\r\n        var w1 = qa.w, x1 = qa.x, y1 = qa.y, z1 = qa.z;\r\n        var w2 = qb.w, x2 = qb.x, y2 = qb.y, z2 = qb.z;\r\n        var len;\r\n        // shortest direction\r\n        if (w1 * w2 + x1 * x2 + y1 * y2 + z1 * z2 < 0) {\r\n            w2 = -w2;\r\n            x2 = -x2;\r\n            y2 = -y2;\r\n            z2 = -z2;\r\n        }\r\n        this.w = w1 + t * (w2 - w1);\r\n        this.x = x1 + t * (x2 - x1);\r\n        this.y = y1 + t * (y2 - y1);\r\n        this.z = z1 + t * (z2 - z1);\r\n        len = 1.0 / Math.sqrt(this.w * this.w + this.x * this.x + this.y * this.y + this.z * this.z);\r\n        this.w *= len;\r\n        this.x *= len;\r\n        this.y *= len;\r\n        this.z *= len;\r\n    };\r\n    /**\r\n     * Fills the quaternion object with values representing the given euler rotation.\r\n     *\r\n     * @param    ax        The angle in radians of the rotation around the ax axis.\r\n     * @param    ay        The angle in radians of the rotation around the ay axis.\r\n     * @param    az        The angle in radians of the rotation around the az axis.\r\n     */\r\n    Quaternion.prototype.fromEulerAngles = function (ax, ay, az) {\r\n        var halfX = ax * .5, halfY = ay * .5, halfZ = az * .5;\r\n        var cosX = Math.cos(halfX), sinX = Math.sin(halfX);\r\n        var cosY = Math.cos(halfY), sinY = Math.sin(halfY);\r\n        var cosZ = Math.cos(halfZ), sinZ = Math.sin(halfZ);\r\n        this.w = cosX * cosY * cosZ + sinX * sinY * sinZ;\r\n        this.x = sinX * cosY * cosZ - cosX * sinY * sinZ;\r\n        this.y = cosX * sinY * cosZ + sinX * cosY * sinZ;\r\n        this.z = cosX * cosY * sinZ - sinX * sinY * cosZ;\r\n    };\r\n    /**\r\n     * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\r\n     * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\r\n     * @return The Vector3D containing the Euler angles.\r\n     */\r\n    Quaternion.prototype.toEulerAngles = function (target) {\r\n        if (target === void 0) { target = null; }\r\n        //target ||= new Vector3D();\r\n        if (target === null) {\r\n            target = new Vector3D_1.Vector3D();\r\n        }\r\n        target.x = Math.atan2(2 * (this.w * this.x + this.y * this.z), 1 - 2 * (this.x * this.x + this.y * this.y));\r\n        target.y = Math.asin(2 * (this.w * this.y - this.z * this.x));\r\n        target.z = Math.atan2(2 * (this.w * this.z + this.x * this.y), 1 - 2 * (this.y * this.y + this.z * this.z));\r\n        return target;\r\n    };\r\n    /**\r\n     * Normalises the quaternion object.\r\n     */\r\n    Quaternion.prototype.normalize = function (val) {\r\n        if (val === void 0) { val = 1; }\r\n        var mag = val / Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n        this.x *= mag;\r\n        this.y *= mag;\r\n        this.z *= mag;\r\n        this.w *= mag;\r\n    };\r\n    /**\r\n     * Used to trace the values of a quaternion.\r\n     *\r\n     * @return A string representation of the quaternion object.\r\n     */\r\n    Quaternion.prototype.toString = function () {\r\n        return \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\r\n    };\r\n    /**\r\n     * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\r\n     * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\r\n     * @return A Matrix3D object representing an equivalent rotation.\r\n     */\r\n    Quaternion.prototype.toMatrix3D = function (target) {\r\n        if (target === void 0) { target = null; }\r\n        var rawData = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        var xy2 = 2.0 * this.x * this.y, xz2 = 2.0 * this.x * this.z, xw2 = 2.0 * this.x * this.w;\r\n        var yz2 = 2.0 * this.y * this.z, yw2 = 2.0 * this.y * this.w, zw2 = 2.0 * this.z * this.w;\r\n        var xx = this.x * this.x, yy = this.y * this.y, zz = this.z * this.z, ww = this.w * this.w;\r\n        rawData[0] = xx - yy - zz + ww;\r\n        rawData[4] = xy2 - zw2;\r\n        rawData[8] = xz2 + yw2;\r\n        rawData[12] = 0;\r\n        rawData[1] = xy2 + zw2;\r\n        rawData[5] = -xx + yy - zz + ww;\r\n        rawData[9] = yz2 - xw2;\r\n        rawData[13] = 0;\r\n        rawData[2] = xz2 - yw2;\r\n        rawData[6] = yz2 + xw2;\r\n        rawData[10] = -xx - yy + zz + ww;\r\n        rawData[14] = 0;\r\n        rawData[3] = 0.0;\r\n        rawData[7] = 0.0;\r\n        rawData[11] = 0;\r\n        rawData[15] = 1;\r\n        if (!target)\r\n            return new Matrix3D_1.Matrix3D(rawData);\r\n        else\r\n            target.copyRawDataFrom(rawData);\r\n        return target;\r\n    };\r\n    /**\r\n     * Extracts a quaternion rotation matrix out of a given Matrix3D object.\r\n     * @param matrix The Matrix3D out of which the rotation will be extracted.\r\n     */\r\n    Quaternion.prototype.fromMatrix = function (matrix) {\r\n        var v = matrix.decompose(Orientation3D_1.Orientation3D.QUATERNION)[1];\r\n        this.x = v.x;\r\n        this.y = v.y;\r\n        this.z = v.z;\r\n        this.w = v.w;\r\n    };\r\n    /**\r\n     * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\r\n     * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\r\n     * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\r\n     */\r\n    Quaternion.prototype.toRawData = function (target, exclude4thRow) {\r\n        if (exclude4thRow === void 0) { exclude4thRow = false; }\r\n        var xy2 = 2.0 * this.x * this.y, xz2 = 2.0 * this.x * this.z, xw2 = 2.0 * this.x * this.w;\r\n        var yz2 = 2.0 * this.y * this.z, yw2 = 2.0 * this.y * this.w, zw2 = 2.0 * this.z * this.w;\r\n        var xx = this.x * this.x, yy = this.y * this.y, zz = this.z * this.z, ww = this.w * this.w;\r\n        target[0] = xx - yy - zz + ww;\r\n        target[1] = xy2 - zw2;\r\n        target[2] = xz2 + yw2;\r\n        target[4] = xy2 + zw2;\r\n        target[5] = -xx + yy - zz + ww;\r\n        target[6] = yz2 - xw2;\r\n        target[8] = xz2 - yw2;\r\n        target[9] = yz2 + xw2;\r\n        target[10] = -xx - yy + zz + ww;\r\n        target[3] = target[7] = target[11] = 0;\r\n        if (!exclude4thRow) {\r\n            target[12] = target[13] = target[14] = 0;\r\n            target[15] = 1;\r\n        }\r\n    };\r\n    /**\r\n     * Clones the quaternion.\r\n     * @return An exact duplicate of the current Quaternion.\r\n     */\r\n    Quaternion.prototype.clone = function () {\r\n        return new Quaternion(this.x, this.y, this.z, this.w);\r\n    };\r\n    /**\r\n     * Rotates a point.\r\n     * @param vector The Vector3D object to be rotated.\r\n     * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\r\n     * @return A Vector3D object containing the rotated point.\r\n     */\r\n    Quaternion.prototype.rotatePoint = function (vector, target) {\r\n        if (target === void 0) { target = null; }\r\n        var x1, y1, z1, w1;\r\n        var x2 = vector.x, y2 = vector.y, z2 = vector.z;\r\n        //target ||= new Vector3D();\r\n        if (target === null) {\r\n            target = new Vector3D_1.Vector3D();\r\n        }\r\n        // p*q'\r\n        w1 = -this.x * x2 - this.y * y2 - this.z * z2;\r\n        x1 = this.w * x2 + this.y * z2 - this.z * y2;\r\n        y1 = this.w * y2 - this.x * z2 + this.z * x2;\r\n        z1 = this.w * z2 + this.x * y2 - this.y * x2;\r\n        target.x = -w1 * this.x + x1 * this.w - y1 * this.z + z1 * this.y;\r\n        target.y = -w1 * this.y + x1 * this.z + y1 * this.w - z1 * this.x;\r\n        target.z = -w1 * this.z - x1 * this.y + y1 * this.x + z1 * this.w;\r\n        return target;\r\n    };\r\n    /**\r\n     * Copies the data from a quaternion into this instance.\r\n     * @param q The quaternion to copy from.\r\n     */\r\n    Quaternion.prototype.copyFrom = function (q) {\r\n        this.x = q.x;\r\n        this.y = q.y;\r\n        this.z = q.z;\r\n        this.w = q.w;\r\n    };\r\n    return Quaternion;\r\n}());\r\nexports.Quaternion = Quaternion;\r\n},{\"../geom/Matrix3D\":\"awayjs-core/lib/geom/Matrix3D\",\"../geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"../geom/Orientation3D\":\"awayjs-core/lib/geom/Orientation3D\",\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/geom/Rectangle\":[function(require,module,exports){\n\"use strict\";\r\nvar Point_1 = require(\"../geom/Point\");\r\n/**\r\n * A Rectangle object is an area defined by its position, as indicated by its\r\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\r\n *\r\n *\r\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\r\n * <code>height</code> properties of the Rectangle export class are independent of\r\n * each other; changing the value of one property has no effect on the others.\r\n * However, the <code>right</code> and <code>bottom</code> properties are\r\n * integrally related to those four properties. For example, if you change the\r\n * value of the <code>right</code> property, the value of the\r\n * <code>width</code> property changes; if you change the <code>bottom</code>\r\n * property, the value of the <code>height</code> property changes. </p>\r\n *\r\n * <p>The following methods and properties use Rectangle objects:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\r\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\r\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\r\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\r\n * <code>merge()</code>, <code>paletteMap()</code>,\r\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\r\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\r\n * BitmapData class</li>\r\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\r\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\r\n * DisplayObject class</li>\r\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\r\n * class</li>\r\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\r\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\r\n * method of the Sprite class</li>\r\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\r\n * method of the PrintJob class</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\r\n * Rectangle object.</p>\r\n *\r\n * <p><b>Note:</b> The Rectangle export class does not define a rectangular Shape\r\n * display object. To draw a rectangular Shape object onscreen, use the\r\n * <code>drawRect()</code> method of the Graphics class.</p>\r\n */\r\nvar Rectangle = (function () {\r\n    /**\r\n     * Creates a new Rectangle object with the top-left corner specified by the\r\n     * <code>x</code> and <code>y</code> parameters and with the specified\r\n     * <code>width</code> and <code>height</code> parameters. If you call this\r\n     * public without parameters, a rectangle with <code>x</code>,\r\n     * <code>y</code>, <code>width</code>, and <code>height</code> properties set\r\n     * to 0 is created.\r\n     *\r\n     * @param x      The <i>x</i> coordinate of the top-left corner of the\r\n     *               rectangle.\r\n     * @param y      The <i>y</i> coordinate of the top-left corner of the\r\n     *               rectangle.\r\n     * @param width  The width of the rectangle, in pixels.\r\n     * @param height The height of the rectangle, in pixels.\r\n     */\r\n    function Rectangle(x, y, width, height) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        if (width === void 0) { width = 0; }\r\n        if (height === void 0) { height = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    Object.defineProperty(Rectangle.prototype, \"bottom\", {\r\n        /**\r\n         * The sum of the <code>y</code> and <code>height</code> properties.\r\n         */\r\n        get: function () {\r\n            return this.y + this.height;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Rectangle.prototype, \"bottomRight\", {\r\n        /**\r\n         * The location of the Rectangle object's bottom-right corner, determined by\r\n         * the values of the <code>right</code> and <code>bottom</code> properties.\r\n         */\r\n        get: function () {\r\n            if (this._bottomRight == null)\r\n                this._bottomRight = new Point_1.Point();\r\n            this._bottomRight.x = this.x + this.width;\r\n            this._bottomRight.y = this.y + this.height;\r\n            return this._bottomRight;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Rectangle.prototype, \"left\", {\r\n        /**\r\n         * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\r\n         * the <code>left</code> property of a Rectangle object has no effect on the\r\n         * <code>y</code> and <code>height</code> properties. However it does affect\r\n         * the <code>width</code> property, whereas changing the <code>x</code> value\r\n         * does <i>not</i> affect the <code>width</code> property.\r\n         *\r\n         * <p>The value of the <code>left</code> property is equal to the value of\r\n         * the <code>x</code> property.</p>\r\n         */\r\n        get: function () {\r\n            return this.x;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Rectangle.prototype, \"right\", {\r\n        /**\r\n         * The sum of the <code>x</code> and <code>width</code> properties.\r\n         */\r\n        get: function () {\r\n            return this.x + this.width;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Rectangle.prototype, \"size\", {\r\n        /**\r\n         * The size of the Rectangle object, expressed as a Point object with the\r\n         * values of the <code>width</code> and <code>height</code> properties.\r\n         */\r\n        get: function () {\r\n            if (this._size == null)\r\n                this._size = new Point_1.Point();\r\n            this._size.x = this.width;\r\n            this._size.y = this.height;\r\n            return this._size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Rectangle.prototype, \"top\", {\r\n        /**\r\n         * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\r\n         * the <code>top</code> property of a Rectangle object has no effect on the\r\n         * <code>x</code> and <code>width</code> properties. However it does affect\r\n         * the <code>height</code> property, whereas changing the <code>y</code>\r\n         * value does <i>not</i> affect the <code>height</code> property.\r\n         *\r\n         * <p>The value of the <code>top</code> property is equal to the value of the\r\n         * <code>y</code> property.</p>\r\n         */\r\n        get: function () {\r\n            return this.y;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\r\n        /**\r\n         * The location of the Rectangle object's top-left corner, determined by the\r\n         * <i>x</i> and <i>y</i> coordinates of the point.\r\n         */\r\n        get: function () {\r\n            if (this._topLeft == null)\r\n                this._topLeft = new Point_1.Point();\r\n            this._topLeft.x = this.x;\r\n            this._topLeft.y = this.y;\r\n            return this._topLeft;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new Rectangle object with the same values for the\r\n     * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n     * <code>height</code> properties as the original Rectangle object.\r\n     *\r\n     * @return A new Rectangle object with the same values for the\r\n     *         <code>x</code>, <code>y</code>, <code>width</code>, and\r\n     *         <code>height</code> properties as the original Rectangle object.\r\n     */\r\n    Rectangle.prototype.clone = function () {\r\n        return new Rectangle(this.x, this.y, this.width, this.height);\r\n    };\r\n    /**\r\n     * Determines whether the specified point is contained within the rectangular\r\n     * region defined by this Rectangle object.\r\n     *\r\n     * @param x The <i>x</i> coordinate(horizontal position) of the point.\r\n     * @param y The <i>y</i> coordinate(vertical position) of the point.\r\n     * @return A value of <code>true</code> if the Rectangle object contains the\r\n     *         specified point; otherwise <code>false</code>.\r\n     */\r\n    Rectangle.prototype.contains = function (x, y) {\r\n        return (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\r\n    };\r\n    /**\r\n     * Determines whether the specified point is contained within the rectangular\r\n     * region defined by this Rectangle object. This method is similar to the\r\n     * <code>Rectangle.contains()</code> method, except that it takes a Point\r\n     * object as a parameter.\r\n     *\r\n     * @param point The point, as represented by its <i>x</i> and <i>y</i>\r\n     *              coordinates.\r\n     * @return A value of <code>true</code> if the Rectangle object contains the\r\n     *         specified point; otherwise <code>false</code>.\r\n     */\r\n    Rectangle.prototype.containsPoint = function (point) {\r\n        return (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\r\n    };\r\n    /**\r\n     * Determines whether the Rectangle object specified by the <code>rect</code>\r\n     * parameter is contained within this Rectangle object. A Rectangle object is\r\n     * said to contain another if the second Rectangle object falls entirely\r\n     * within the boundaries of the first.\r\n     *\r\n     * @param rect The Rectangle object being checked.\r\n     * @return A value of <code>true</code> if the Rectangle object that you\r\n     *         specify is contained by this Rectangle object; otherwise\r\n     *         <code>false</code>.\r\n     */\r\n    Rectangle.prototype.containsRect = function (rect) {\r\n        return (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height);\r\n    };\r\n    /**\r\n     * Copies all of rectangle data from the source Rectangle object into the\r\n     * calling Rectangle object.\r\n     *\r\n     * @param sourceRect The Rectangle object from which to copy the data.\r\n     */\r\n    Rectangle.prototype.copyFrom = function (sourceRect) {\r\n    };\r\n    /**\r\n     * Determines whether the object specified in the <code>toCompare</code>\r\n     * parameter is equal to this Rectangle object. This method compares the\r\n     * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n     * <code>height</code> properties of an object against the same properties of\r\n     * this Rectangle object.\r\n     *\r\n     * @param toCompare The rectangle to compare to this Rectangle object.\r\n     * @return A value of <code>true</code> if the object has exactly the same\r\n     *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\r\n     *         and <code>height</code> properties as this Rectangle object;\r\n     *         otherwise <code>false</code>.\r\n     */\r\n    Rectangle.prototype.equals = function (toCompare) {\r\n        return (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height);\r\n    };\r\n    /**\r\n     * Increases the size of the Rectangle object by the specified amounts, in\r\n     * pixels. The center point of the Rectangle object stays the same, and its\r\n     * size increases to the left and right by the <code>dx</code> value, and to\r\n     * the top and the bottom by the <code>dy</code> value.\r\n     *\r\n     * @param dx The value to be added to the left and the right of the Rectangle\r\n     *           object. The following equation is used to calculate the new\r\n     *           width and position of the rectangle:\r\n     * @param dy The value to be added to the top and the bottom of the\r\n     *           Rectangle. The following equation is used to calculate the new\r\n     *           height and position of the rectangle:\r\n     */\r\n    Rectangle.prototype.inflate = function (dx, dy) {\r\n        this.x -= dx / 2;\r\n        this.y -= dy / 2;\r\n        this.width += dx / 2;\r\n        this.height += dy / 2;\r\n    };\r\n    /**\r\n     * Increases the size of the Rectangle object. This method is similar to the\r\n     * <code>Rectangle.inflate()</code> method except it takes a Point object as\r\n     * a parameter.\r\n     *\r\n     * <p>The following two code examples give the same result:</p>\r\n     *\r\n     * @param point The <code>x</code> property of this Point object is used to\r\n     *              increase the horizontal dimension of the Rectangle object.\r\n     *              The <code>y</code> property is used to increase the vertical\r\n     *              dimension of the Rectangle object.\r\n     */\r\n    Rectangle.prototype.inflatePoint = function (point) {\r\n        this.x -= point.x / 2;\r\n        this.y -= point.y / 2;\r\n        this.width += point.x / 2;\r\n        this.height += point.y / 2;\r\n    };\r\n    /**\r\n     * If the Rectangle object specified in the <code>toIntersect</code>\r\n     * parameter intersects with this Rectangle object, returns the area of\r\n     * intersection as a Rectangle object. If the rectangles do not intersect,\r\n     * this method returns an empty Rectangle object with its properties set to\r\n     * 0.\r\n     *\r\n     * @param toIntersect The Rectangle object to compare against to see if it\r\n     *                    intersects with this Rectangle object.\r\n     * @return A Rectangle object that equals the area of intersection. If the\r\n     *         rectangles do not intersect, this method returns an empty\r\n     *         Rectangle object; that is, a rectangle with its <code>x</code>,\r\n     *         <code>y</code>, <code>width</code>, and <code>height</code>\r\n     *         properties set to 0.\r\n     */\r\n    Rectangle.prototype.intersection = function (toIntersect) {\r\n        if (this.intersects(toIntersect)) {\r\n            var i = new Rectangle();\r\n            if (this.x > toIntersect.x) {\r\n                i.x = this.x;\r\n                i.width = toIntersect.x - this.x + toIntersect.width;\r\n                if (i.width > this.width)\r\n                    i.width = this.width;\r\n            }\r\n            else {\r\n                i.x = toIntersect.x;\r\n                i.width = this.x - toIntersect.x + this.width;\r\n                if (i.width > toIntersect.width)\r\n                    i.width = toIntersect.width;\r\n            }\r\n            if (this.y > toIntersect.y) {\r\n                i.y = this.y;\r\n                i.height = toIntersect.y - this.y + toIntersect.height;\r\n                if (i.height > this.height)\r\n                    i.height = this.height;\r\n            }\r\n            else {\r\n                i.y = toIntersect.y;\r\n                i.height = this.y - toIntersect.y + this.height;\r\n                if (i.height > toIntersect.height)\r\n                    i.height = toIntersect.height;\r\n            }\r\n            return i;\r\n        }\r\n        return new Rectangle();\r\n    };\r\n    /**\r\n     * Determines whether the object specified in the <code>toIntersect</code>\r\n     * parameter intersects with this Rectangle object. This method checks the\r\n     * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n     * <code>height</code> properties of the specified Rectangle object to see if\r\n     * it intersects with this Rectangle object.\r\n     *\r\n     * @param toIntersect The Rectangle object to compare against this Rectangle\r\n     *                    object.\r\n     * @return A value of <code>true</code> if the specified object intersects\r\n     *         with this Rectangle object; otherwise <code>false</code>.\r\n     */\r\n    Rectangle.prototype.intersects = function (toIntersect) {\r\n        return (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\r\n    };\r\n    /**\r\n     * Determines whether or not this Rectangle object is empty.\r\n     *\r\n     * @return A value of <code>true</code> if the Rectangle object's width or\r\n     *         height is less than or equal to 0; otherwise <code>false</code>.\r\n     */\r\n    Rectangle.prototype.isEmpty = function () {\r\n        return (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\r\n    };\r\n    /**\r\n     * Adjusts the location of the Rectangle object, as determined by its\r\n     * top-left corner, by the specified amounts.\r\n     *\r\n     * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\r\n     * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\r\n     */\r\n    Rectangle.prototype.offset = function (dx, dy) {\r\n        this.x += dx;\r\n        this.y += dy;\r\n    };\r\n    /**\r\n     * Adjusts the location of the Rectangle object using a Point object as a\r\n     * parameter. This method is similar to the <code>Rectangle.offset()</code>\r\n     * method, except that it takes a Point object as a parameter.\r\n     *\r\n     * @param point A Point object to use to offset this Rectangle object.\r\n     */\r\n    Rectangle.prototype.offsetPoint = function (point) {\r\n        this.x += point.x;\r\n        this.y += point.y;\r\n    };\r\n    /**\r\n     * Sets all of the Rectangle object's properties to 0. A Rectangle object is\r\n     * empty if its width or height is less than or equal to 0.\r\n     *\r\n     * <p> This method sets the values of the <code>x</code>, <code>y</code>,\r\n     * <code>width</code>, and <code>height</code> properties to 0.</p>\r\n     *\r\n     */\r\n    Rectangle.prototype.setEmpty = function () {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.width = 0;\r\n        this.height = 0;\r\n    };\r\n    /**\r\n     * Sets the members of Rectangle to the specified values\r\n     *\r\n     * @param xa      The <i>x</i> coordinate of the top-left corner of the\r\n     *                rectangle.\r\n     * @param ya      The <i>y</i> coordinate of the top-left corner of the\r\n     *                rectangle.\r\n     * @param widtha  The width of the rectangle, in pixels.\r\n     * @param heighta The height of the rectangle, in pixels.\r\n     */\r\n    Rectangle.prototype.setTo = function (xa, ya, widtha, heighta) {\r\n        this.x = xa;\r\n        this.y = ya;\r\n        this.width = widtha;\r\n        this.height = heighta;\r\n    };\r\n    /**\r\n     * Builds and returns a string that lists the horizontal and vertical\r\n     * positions and the width and height of the Rectangle object.\r\n     *\r\n     * @return A string listing the value of each of the following properties of\r\n     *         the Rectangle object: <code>x</code>, <code>y</code>,\r\n     *         <code>width</code>, and <code>height</code>.\r\n     */\r\n    Rectangle.prototype.toString = function () {\r\n        return \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\r\n    };\r\n    /**\r\n     * Adds two rectangles together to create a new Rectangle object, by filling\r\n     * in the horizontal and vertical space between the two rectangles.\r\n     *\r\n     * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\r\n     * <code>0</code> as the height or width value, such as: <code>var\r\n     * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\r\n     *\r\n     * @param toUnion A Rectangle object to add to this Rectangle object.\r\n     * @return A new Rectangle object that is the union of the two rectangles.\r\n     */\r\n    Rectangle.prototype.union = function (toUnion) {\r\n        var u = new Rectangle();\r\n        if (this.x < toUnion.x) {\r\n            u.x = this.x;\r\n            u.width = toUnion.x - this.x + toUnion.width;\r\n            if (u.width < this.width)\r\n                u.width = this.width;\r\n        }\r\n        else {\r\n            u.x = toUnion.x;\r\n            u.width = this.x - toUnion.x + this.width;\r\n            if (u.width < toUnion.width)\r\n                u.width = toUnion.width;\r\n        }\r\n        if (this.y < toUnion.y) {\r\n            u.y = this.y;\r\n            u.height = toUnion.y - this.y + toUnion.height;\r\n            if (u.height < this.height)\r\n                u.height = this.height;\r\n        }\r\n        else {\r\n            u.y = toUnion.y;\r\n            u.height = this.y - toUnion.y + this.height;\r\n            if (u.height < toUnion.height)\r\n                u.height = toUnion.height;\r\n        }\r\n        return u;\r\n    };\r\n    return Rectangle;\r\n}());\r\nexports.Rectangle = Rectangle;\r\n},{\"../geom/Point\":\"awayjs-core/lib/geom/Point\"}],\"awayjs-core/lib/geom/Sphere\":[function(require,module,exports){\n\"use strict\";\r\nvar Sphere = (function () {\r\n    /**\r\n     * Create a Sphere with ABCD coefficients\r\n     */\r\n    function Sphere(x, y, z, radius) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        if (z === void 0) { z = 0; }\r\n        if (radius === void 0) { radius = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.radius = radius;\r\n    }\r\n    Sphere.prototype.rayIntersection = function (position, direction, targetNormal) {\r\n        if (this.containsPoint(position))\r\n            return 0;\r\n        var px = position.x - this.x, py = position.y - this.y, pz = position.z - this.z;\r\n        var vx = direction.x, vy = direction.y, vz = direction.z;\r\n        var rayEntryDistance;\r\n        var a = vx * vx + vy * vy + vz * vz;\r\n        var b = 2 * (px * vx + py * vy + pz * vz);\r\n        var c = px * px + py * py + pz * pz - this.radius * this.radius;\r\n        var det = b * b - 4 * a * c;\r\n        if (det >= 0) {\r\n            var sqrtDet = Math.sqrt(det);\r\n            rayEntryDistance = (-b - sqrtDet) / (2 * a);\r\n            if (rayEntryDistance >= 0) {\r\n                targetNormal.x = px + rayEntryDistance * vx;\r\n                targetNormal.y = py + rayEntryDistance * vy;\r\n                targetNormal.z = pz + rayEntryDistance * vz;\r\n                targetNormal.normalize();\r\n                return rayEntryDistance;\r\n            }\r\n        }\r\n        // ray misses sphere\r\n        return -1;\r\n    };\r\n    Sphere.prototype.containsPoint = function (position) {\r\n        var px = position.x - this.x;\r\n        var py = position.y - this.y;\r\n        var pz = position.z - this.z;\r\n        var distance = Math.sqrt(px * px + py * py + pz * pz);\r\n        return distance <= this.radius;\r\n    };\r\n    Sphere.prototype.toString = function () {\r\n        return \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\r\n    };\r\n    return Sphere;\r\n}());\r\nexports.Sphere = Sphere;\r\n},{}],\"awayjs-core/lib/geom/Vector3D\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The Vector3D export class represents a point or a location in the three-dimensional\r\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\r\n * space, the x property represents the horizontal axis and the y property\r\n * represents the vertical axis. In three-dimensional space, the z property\r\n * represents depth. The value of the x property increases as the object moves\r\n * to the right. The value of the y property increases as the object moves\r\n * down. The z property increases as the object moves farther from the point\r\n * of view. Using perspective projection and scaling, the object is seen to be\r\n * bigger when near and smaller when farther away from the screen. As in a\r\n * right-handed three-dimensional coordinate system, the positive z-axis points\r\n * away from the viewer and the value of the z property increases as the object\r\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\r\n * space is the upper-left corner of the stage.\r\n *\r\n * <p>The Vector3D export class can also represent a direction, an arrow pointing from\r\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\r\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\r\n *\r\n * <p>Quaternion notation introduces a fourth element, the w property, which\r\n * provides additional orientation information. For example, the w property can\r\n * define an angle of rotation of a Vector3D object. The combination of the\r\n * angle of rotation and the coordinates x, y, and z can determine the display\r\n * object's orientation. Here is a representation of Vector3D elements in\r\n * matrix notation:</p>\r\n */\r\nvar Vector3D = (function () {\r\n    /**\r\n     * Creates an instance of a Vector3D object. If you do not specify a\r\n     * parameter for the constructor, a Vector3D object is created with\r\n     * the elements (0,0,0,0).\r\n     *\r\n     * @param x The first element, such as the x coordinate.\r\n     * @param y The second element, such as the y coordinate.\r\n     * @param z The third element, such as the z coordinate.\r\n     * @param w An optional element for additional data such as the angle\r\n     *          of rotation.\r\n     */\r\n    function Vector3D(x, y, z, w) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        if (z === void 0) { z = 0; }\r\n        if (w === void 0) { w = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n    Object.defineProperty(Vector3D.prototype, \"length\", {\r\n        /**\r\n         * The length, magnitude, of the current Vector3D object from the\r\n         * origin (0,0,0) to the object's x, y, and z coordinates. The w\r\n         * property is ignored. A unit vector has a length or magnitude of\r\n         * one.\r\n         */\r\n        get: function () {\r\n            return Math.sqrt(this.lengthSquared);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector3D.prototype, \"lengthSquared\", {\r\n        /**\r\n         * The square of the length of the current Vector3D object, calculated\r\n         * using the x, y, and z properties. The w property is ignored. Use the\r\n         * <code>lengthSquared()</code> method whenever possible instead of the\r\n         * slower <code>Math.sqrt()</code> method call of the\r\n         * <code>Vector3D.length()</code> method.\r\n         */\r\n        get: function () {\r\n            return this.x * this.x + this.y * this.y + this.z * this.z;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds the value of the x, y, and z elements of the current Vector3D\r\n     * object to the values of the x, y, and z elements of another Vector3D\r\n     * object. The <code>add()</code> method does not change the current\r\n     * Vector3D object. Instead, it returns a new Vector3D object with\r\n     * the new values.\r\n     *\r\n     * <p>The result of adding two vectors together is a resultant vector.\r\n     * One way to visualize the result is by drawing a vector from the\r\n     * origin or tail of the first vector to the end or head of the second\r\n     * vector. The resultant vector is the distance between the origin\r\n     * point of the first vector and the end point of the second vector.\r\n     * </p>\r\n     */\r\n    Vector3D.prototype.add = function (a) {\r\n        return new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w);\r\n    };\r\n    /**\r\n     * Returns the angle in radians between two vectors. The returned angle\r\n     * is the smallest radian the first Vector3D object rotates until it\r\n     * aligns with the second Vector3D object.\r\n     *\r\n     * <p>The <code>angleBetween()</code> method is a static method. You\r\n     * can use it directly as a method of the Vector3D class.</p>\r\n     *\r\n     * <p>To convert a degree to a radian, you can use the following\r\n     * formula:</p>\r\n     *\r\n     * <p><code>radian = Math.PI/180 * degree</code></p>\r\n     *\r\n     * @param a The first Vector3D object.\r\n     * @param b The second Vector3D object.\r\n     * @returns The angle between two Vector3D objects.\r\n     */\r\n    Vector3D.angleBetween = function (a, b) {\r\n        return Math.acos(a.dotProduct(b) / (a.length * b.length));\r\n    };\r\n    /**\r\n     * Returns a new Vector3D object that is an exact copy of the current\r\n     * Vector3D object.\r\n     *\r\n     * @returns A new Vector3D object that is a copy of the current\r\n     * Vector3D object.\r\n     */\r\n    Vector3D.prototype.clone = function () {\r\n        return new Vector3D(this.x, this.y, this.z, this.w);\r\n    };\r\n    Vector3D.combine = function (a, b, ascl, bscl) {\r\n        return new Vector3D(a.x * ascl + b.x * bscl, a.y * ascl + b.y * bscl, a.z * ascl + b.z * bscl);\r\n    };\r\n    /**\r\n     * Copies all of vector data from the source Vector3D object into the\r\n     * calling Vector3D object.\r\n     *\r\n     * @param src The Vector3D object from which to copy the data.\r\n     */\r\n    Vector3D.prototype.copyFrom = function (src) {\r\n        this.x = src.x;\r\n        this.y = src.y;\r\n        this.z = src.z;\r\n        this.w = src.w;\r\n    };\r\n    /**\r\n     * Returns a new Vector3D object that is perpendicular (at a right\r\n     * angle) to the current Vector3D and another Vector3D object. If the\r\n     * returned Vector3D object's coordinates are (0,0,0), then the two\r\n     * Vector3D objects are parallel to each other.\r\n     *\r\n     * <p>You can use the normalized cross product of two vertices of a\r\n     * polygon surface with the normalized vector of the camera or eye\r\n     * viewpoint to get a dot product. The value of the dot product can\r\n     * identify whether a surface of a three-dimensional object is hidden\r\n     * from the viewpoint.</p>\r\n     *\r\n     * @param a A second Vector3D object.\r\n     * @returns A new Vector3D object that is perpendicular to the current\r\n     *          Vector3D object and the Vector3D object specified as the\r\n     *          parameter.\r\n     */\r\n    Vector3D.prototype.crossProduct = function (a, t) {\r\n        if (t === void 0) { t = null; }\r\n        if (t == null)\r\n            t = new Vector3D();\r\n        t.x = this.y * a.z - this.z * a.y;\r\n        t.y = this.z * a.x - this.x * a.z;\r\n        t.z = this.x * a.y - this.y * a.x;\r\n        return t;\r\n    };\r\n    /**\r\n     * Decrements the value of the x, y, and z elements of the current\r\n     * Vector3D object by the values of the x, y, and z elements of\r\n     * specified Vector3D object. Unlike the\r\n     * <code>Vector3D.subtract()</code> method, the\r\n     * <code>decrementBy()</code> method changes the current Vector3D\r\n     * object and does not return a new Vector3D object.\r\n     *\r\n     * @param a The Vector3D object containing the values to subtract from\r\n     *          the current Vector3D object.\r\n     */\r\n    Vector3D.prototype.decrementBy = function (a) {\r\n        this.x -= a.x;\r\n        this.y -= a.y;\r\n        this.z -= a.z;\r\n    };\r\n    /**\r\n     * Returns the distance between two Vector3D objects. The\r\n     * <code>distance()</code> method is a static method. You can use it\r\n     * directly as a method of the Vector3D export class to get the Euclidean\r\n     * distance between two three-dimensional points.\r\n     *\r\n     * @param pt1 A Vector3D object as the first three-dimensional point.\r\n     * @param pt2 A Vector3D object as the second three-dimensional point.\r\n     * @returns The distance between two Vector3D objects.\r\n     */\r\n    Vector3D.distance = function (pt1, pt2) {\r\n        var x = (pt1.x - pt2.x);\r\n        var y = (pt1.y - pt2.y);\r\n        var z = (pt1.z - pt2.z);\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    };\r\n    /**\r\n     * If the current Vector3D object and the one specified as the\r\n     * parameter are unit vertices, this method returns the cosine of the\r\n     * angle between the two vertices. Unit vertices are vertices that\r\n     * point to the same direction but their length is one. They remove the\r\n     * length of the vector as a factor in the result. You can use the\r\n     * <code>normalize()</code> method to convert a vector to a unit\r\n     * vector.\r\n     *\r\n     * <p>The <code>dotProduct()</code> method finds the angle between two\r\n     * vertices. It is also used in backface culling or lighting\r\n     * calculations. Backface culling is a procedure for determining which\r\n     * surfaces are hidden from the viewpoint. You can use the normalized\r\n     * vertices from the camera, or eye, viewpoint and the cross product of\r\n     * the vertices of a polygon surface to get the dot product. If the dot\r\n     * product is less than zero, then the surface is facing the camera or\r\n     * the viewer. If the two unit vertices are perpendicular to each\r\n     * other, they are orthogonal and the dot product is zero. If the two\r\n     * vertices are parallel to each other, the dot product is one.</p>\r\n     *\r\n     * @param a The second Vector3D object.\r\n     * @returns A scalar which is the dot product of the current Vector3D\r\n     *          object and the specified Vector3D object.\r\n     *\r\n     * @see away.geom.Vector3D#crossProduct()\r\n     * @see away.geom.Vector3D#normalize()\r\n     */\r\n    Vector3D.prototype.dotProduct = function (a) {\r\n        return this.x * a.x + this.y * a.y + this.z * a.z;\r\n    };\r\n    /**\r\n     * Determines whether two Vector3D objects are equal by comparing the\r\n     * x, y, and z elements of the current Vector3D object with a\r\n     * specified Vector3D object. If the values of these elements are the\r\n     * same, the two Vector3D objects are equal. If the second optional\r\n     * parameter is set to true, all four elements of the Vector3D objects,\r\n     * including the w property, are compared.\r\n     */\r\n    /**\r\n     *\r\n     * @param toCompare The Vector3D object to be compared with the current\r\n     *                  Vector3D object.\r\n     * @param allFour   An optional parameter that specifies whether the w\r\n     *                  property of the Vector3D objects is used in the\r\n     *                  comparison.\r\n     * @returns A value of true if the specified Vector3D object is equal\r\n     *          to the current Vector3D object; false if it is not equal.\r\n     */\r\n    Vector3D.prototype.equals = function (toCompare, allFour) {\r\n        if (allFour === void 0) { allFour = false; }\r\n        return (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w));\r\n    };\r\n    /**\r\n     * Increments the value of the x, y, and z elements of the current\r\n     * Vector3D object by the values of the x, y, and z elements of a\r\n     * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\r\n     * method, the <code>incrementBy()</code> method changes the current\r\n     * Vector3D object and does not return a new Vector3D object.\r\n     *\r\n     * @param a The Vector3D object to be added to the current Vector3D\r\n     *          object.\r\n     */\r\n    Vector3D.prototype.incrementBy = function (a) {\r\n        this.x += a.x;\r\n        this.y += a.y;\r\n        this.z += a.z;\r\n    };\r\n    /**\r\n     * Compares the elements of the current Vector3D object with the\r\n     * elements of a specified Vector3D object to determine whether they\r\n     * are nearly equal. The two Vector3D objects are nearly equal if the\r\n     * value of all the elements of the two vertices are equal, or the\r\n     * result of the comparison is within the tolerance range. The\r\n     * difference between two elements must be less than the number\r\n     * specified as the tolerance parameter. If the third optional\r\n     * parameter is set to <code>true</code>, all four elements of the\r\n     * Vector3D objects, including the <code>w</code> property, are\r\n     * compared. Otherwise, only the x, y, and z elements are included in\r\n     * the comparison.\r\n     */\r\n    /**\r\n     *\r\n     * @param toCompare The Vector3D object to be compared with the current\r\n     *                  Vector3D object.\r\n     * @param tolerance A number determining the tolerance factor. If the\r\n     *                  difference between the values of the Vector3D\r\n     *                  element specified in the toCompare parameter and\r\n     *                  the current Vector3D element is less than the\r\n     *                  tolerance number, the two values are considered\r\n     *                  nearly equal.\r\n     * @param allFour   An optional parameter that specifies whether the w\r\n     *                  property of the Vector3D objects is used in the\r\n     *                  comparison.\r\n     * @returns A value of true if the specified Vector3D object is nearly\r\n     *          equal to the current Vector3D object; false if it is not\r\n     *          equal.\r\n     *\r\n     * @see away.geom.Vector3D#equals()\r\n     */\r\n    Vector3D.prototype.nearEquals = function (toCompare, tolerance, allFour) {\r\n        if (allFour === void 0) { allFour = true; }\r\n        return ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\r\n    };\r\n    /**\r\n     * Sets the current Vector3D object to its inverse. The inverse object\r\n     * is also considered the opposite of the original object. The value of\r\n     * the x, y, and z properties of the current Vector3D object is changed\r\n     * to -x, -y, and -z.\r\n     */\r\n    Vector3D.prototype.negate = function () {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        this.z = -this.z;\r\n    };\r\n    /**\r\n     * Converts a Vector3D object to a unit vector by dividing the first\r\n     * three elements (x, y, z) by the length of the vector. Unit vertices\r\n     * are vertices that have a direction but their length is one. They\r\n     * simplify vector calculations by removing length as a factor.\r\n     */\r\n    /**\r\n     * Scales the line segment between(0,0) and the current point to a set\r\n     * length.\r\n     *\r\n     * @param thickness The scaling value. For example, if the current\r\n     *                  Vector3D object is (0,3,4), and you normalize it to\r\n     *                  1, the point returned is at(0,0.6,0.8).\r\n     */\r\n    Vector3D.prototype.normalize = function (thickness) {\r\n        if (thickness === void 0) { thickness = 1; }\r\n        if (this.length != 0) {\r\n            var invLength = thickness / this.length;\r\n            this.x *= invLength;\r\n            this.y *= invLength;\r\n            this.z *= invLength;\r\n            return;\r\n        }\r\n    };\r\n    /**\r\n     * Divides the value of the <code>x</code>, <code>y</code>, and\r\n     * <code>z</code> properties of the current Vector3D object by the\r\n     * value of its <code>w</code> property.\r\n     *\r\n     * <p>If the current Vector3D object is the result of multiplying a\r\n     * Vector3D object by a projection Matrix3D object, the w property can\r\n     * hold the transform value. The <code>project()</code> method then can\r\n     * complete the projection by dividing the elements by the\r\n     * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\r\n     * property to create a projection Matrix3D object.</p>\r\n     */\r\n    Vector3D.prototype.project = function () {\r\n        this.x /= this.w;\r\n        this.y /= this.w;\r\n        this.z /= this.w;\r\n    };\r\n    /**\r\n     * Scales the current Vector3D object by a scalar, a magnitude. The\r\n     * Vector3D object's x, y, and z elements are multiplied by the scalar\r\n     * number specified in the parameter. For example, if the vector is\r\n     * scaled by ten, the result is a vector that is ten times longer. The\r\n     * scalar can also change the direction of the vector. Multiplying the\r\n     * vector by a negative number reverses its direction.\r\n     *\r\n     * @param s A multiplier (scalar) used to scale a Vector3D object.\r\n\r\n     */\r\n    Vector3D.prototype.scaleBy = function (s) {\r\n        this.x *= s;\r\n        this.y *= s;\r\n        this.z *= s;\r\n    };\r\n    /**\r\n     * Sets the members of Vector3D to the specified values\r\n     *\r\n     * @param xa The first element, such as the x coordinate.\r\n     * @param ya The second element, such as the y coordinate.\r\n     * @param za The third element, such as the z coordinate.\r\n     */\r\n    Vector3D.prototype.setTo = function (xa, ya, za) {\r\n        this.x = xa;\r\n        this.y = ya;\r\n        this.z = za;\r\n    };\r\n    /**\r\n     * Subtracts the value of the x, y, and z elements of the current\r\n     * Vector3D object from the values of the x, y, and z elements of\r\n     * another Vector3D object. The <code>subtract()</code> method does not\r\n     * change the current Vector3D object. Instead, this method returns a\r\n     * new Vector3D object with the new values.\r\n     *\r\n     * @param a The Vector3D object to be subtracted from the current\r\n     *          Vector3D object.\r\n     * @returns A new Vector3D object that is the difference between the\r\n     *          current Vector3D and the specified Vector3D object.\r\n     *\r\n     * @see away.geom.Vector3D#decrementBy()\r\n     */\r\n    Vector3D.prototype.subtract = function (a) {\r\n        return new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\r\n    };\r\n    /**\r\n     * Returns a string representation of the current Vector3D object. The\r\n     * string contains the values of the x, y, and z properties.\r\n     */\r\n    Vector3D.prototype.toString = function () {\r\n        return \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\r\n    };\r\n    /**\r\n     * The x axis defined as a Vector3D object with coordinates (1,0,0).\r\n     */\r\n    Vector3D.X_AXIS = new Vector3D(1, 0, 0);\r\n    /**\r\n     * The y axis defined as a Vector3D object with coordinates (0,1,0).\r\n     */\r\n    Vector3D.Y_AXIS = new Vector3D(0, 1, 0);\r\n    /**\r\n     * The z axis defined as a Vector3D object with coordinates (0,0,1).\r\n     */\r\n    Vector3D.Z_AXIS = new Vector3D(0, 0, 1);\r\n    return Vector3D;\r\n}());\r\nexports.Vector3D = Vector3D;\r\n},{}],\"awayjs-core/lib/geom\":[function(require,module,exports){\n\"use strict\";\r\nvar Box_1 = require(\"./geom/Box\");\r\nexports.Box = Box_1.Box;\r\nvar ColorTransform_1 = require(\"./geom/ColorTransform\");\r\nexports.ColorTransform = ColorTransform_1.ColorTransform;\r\nvar MathConsts_1 = require(\"./geom/MathConsts\");\r\nexports.MathConsts = MathConsts_1.MathConsts;\r\nvar Matrix_1 = require(\"./geom/Matrix\");\r\nexports.Matrix = Matrix_1.Matrix;\r\nvar Matrix3D_1 = require(\"./geom/Matrix3D\");\r\nexports.Matrix3D = Matrix3D_1.Matrix3D;\r\nvar Matrix3DUtils_1 = require(\"./geom/Matrix3DUtils\");\r\nexports.Matrix3DUtils = Matrix3DUtils_1.Matrix3DUtils;\r\nvar Orientation3D_1 = require(\"./geom/Orientation3D\");\r\nexports.Orientation3D = Orientation3D_1.Orientation3D;\r\nvar Plane3D_1 = require(\"./geom/Plane3D\");\r\nexports.Plane3D = Plane3D_1.Plane3D;\r\nvar PlaneClassification_1 = require(\"./geom/PlaneClassification\");\r\nexports.PlaneClassification = PlaneClassification_1.PlaneClassification;\r\nvar Point_1 = require(\"./geom/Point\");\r\nexports.Point = Point_1.Point;\r\nvar PoissonLookup_1 = require(\"./geom/PoissonLookup\");\r\nexports.PoissonLookup = PoissonLookup_1.PoissonLookup;\r\nvar Quaternion_1 = require(\"./geom/Quaternion\");\r\nexports.Quaternion = Quaternion_1.Quaternion;\r\nvar Rectangle_1 = require(\"./geom/Rectangle\");\r\nexports.Rectangle = Rectangle_1.Rectangle;\r\nvar Sphere_1 = require(\"./geom/Sphere\");\r\nexports.Sphere = Sphere_1.Sphere;\r\nvar Vector3D_1 = require(\"./geom/Vector3D\");\r\nexports.Vector3D = Vector3D_1.Vector3D;\r\n},{\"./geom/Box\":\"awayjs-core/lib/geom/Box\",\"./geom/ColorTransform\":\"awayjs-core/lib/geom/ColorTransform\",\"./geom/MathConsts\":\"awayjs-core/lib/geom/MathConsts\",\"./geom/Matrix\":\"awayjs-core/lib/geom/Matrix\",\"./geom/Matrix3D\":\"awayjs-core/lib/geom/Matrix3D\",\"./geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"./geom/Orientation3D\":\"awayjs-core/lib/geom/Orientation3D\",\"./geom/Plane3D\":\"awayjs-core/lib/geom/Plane3D\",\"./geom/PlaneClassification\":\"awayjs-core/lib/geom/PlaneClassification\",\"./geom/Point\":\"awayjs-core/lib/geom/Point\",\"./geom/PoissonLookup\":\"awayjs-core/lib/geom/PoissonLookup\",\"./geom/Quaternion\":\"awayjs-core/lib/geom/Quaternion\",\"./geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"./geom/Sphere\":\"awayjs-core/lib/geom/Sphere\",\"./geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/image/BitmapImage2D\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Image2D_1 = require(\"../image/Image2D\");\r\nvar ColorUtils_1 = require(\"../utils/ColorUtils\");\r\nvar BitmapImageUtils_1 = require(\"../utils/BitmapImageUtils\");\r\nvar CPUCanvas_1 = require(\"../image/CPUCanvas\");\r\n/**\r\n * The BitmapImage2D export class lets you work with the data(pixels) of a Bitmap\r\n * object. You can use the methods of the BitmapImage2D export class to create\r\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\r\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\r\n * image that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes.\r\n *\r\n * <p>This export class lets you separate bitmap rendering operations from the\r\n * internal display updating routines of flash. By manipulating a\r\n * BitmapImage2D object directly, you can create complex images without incurring\r\n * the per-frame overhead of constantly redrawing the content from vector\r\n * data.</p>\r\n *\r\n * <p>The methods of the BitmapImage2D export class support effects that are not\r\n * available through the filters available to non-bitmap display objects.</p>\r\n *\r\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\r\n * represent either a fully opaque bitmap or a transparent bitmap that\r\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\r\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\r\n * of a single pixel in the bitmap.</p>\r\n *\r\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\r\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\r\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\r\n * represents the alpha channel value, followed by red, green, and blue.)</p>\r\n *\r\n * <p>The four channels(alpha, red, green, and blue) are represented as\r\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\r\n * method or the <code>DisplacementMapFilter.componentX</code> and\r\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\r\n * are represented by the following constants in the BitmapImage2DChannel\r\n * class:</p>\r\n *\r\n * <ul>\r\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n * </ul>\r\n *\r\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\r\n * <code>bitmapData</code> property of the Bitmap object.</p>\r\n *\r\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\r\n * <code>Graphics.beginBitmapFill()</code> method.</p>\r\n *\r\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\r\n * using the <code>flash.display.Tilesheet</code> class.</p>\r\n *\r\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\r\n * is 8,191 pixels in width or height, and the total number of pixels cannot\r\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\r\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\r\n * is 2,880 pixels in height and 2,880 in width.</p>\r\n */\r\nvar BitmapImage2D = (function (_super) {\r\n    __extends(BitmapImage2D, _super);\r\n    /**\r\n     * Creates a BitmapImage2D object with a specified width and height. If you\r\n     * specify a value for the <code>fillColor</code> parameter, every pixel in\r\n     * the bitmap is set to that color.\r\n     *\r\n     * <p>By default, the bitmap is created as transparent, unless you pass\r\n     * the value <code>false</code> for the transparent parameter. After you\r\n     * create an opaque bitmap, you cannot change it to a transparent bitmap.\r\n     * Every pixel in an opaque bitmap uses only 24 bits of color channel\r\n     * information. If you define the bitmap as transparent, every pixel uses 32\r\n     * bits of color channel information, including an alpha transparency\r\n     * channel.</p>\r\n     *\r\n     * @param width       The width of the bitmap image in pixels.\r\n     * @param height      The height of the bitmap image in pixels.\r\n     * @param transparent Specifies whether the bitmap image supports per-pixel\r\n     *                    transparency. The default value is <code>true</code>\r\n     *                    (transparent). To create a fully transparent bitmap,\r\n     *                    set the value of the <code>transparent</code>\r\n     *                    parameter to <code>true</code> and the value of the\r\n     *                    <code>fillColor</code> parameter to 0x00000000(or to\r\n     *                    0). Setting the <code>transparent</code> property to\r\n     *                    <code>false</code> can result in minor improvements\r\n     *                    in rendering performance.\r\n     * @param fillColor   A 32-bit ARGB color value that you use to fill the\r\n     *                    bitmap image area. The default value is\r\n     *                    0xFFFFFFFF(solid white).\r\n     */\r\n    function BitmapImage2D(width, height, transparent, fillColor, powerOfTwo) {\r\n        if (transparent === void 0) { transparent = true; }\r\n        if (fillColor === void 0) { fillColor = null; }\r\n        if (powerOfTwo === void 0) { powerOfTwo = true; }\r\n        _super.call(this, width, height, powerOfTwo);\r\n        this._locked = false;\r\n        this._transparent = transparent;\r\n        if (document) {\r\n            this._imageCanvas = document.createElement(\"canvas\");\r\n        }\r\n        else {\r\n            this._imageCanvas = new CPUCanvas_1.CPUCanvas();\r\n        }\r\n        this._imageCanvas.width = width;\r\n        this._imageCanvas.height = height;\r\n        this._context = this._imageCanvas.getContext(\"2d\");\r\n        if (fillColor != null)\r\n            this.fillRect(this._rect, fillColor);\r\n    }\r\n    Object.defineProperty(BitmapImage2D.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return BitmapImage2D.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BitmapImage2D.prototype, \"transparent\", {\r\n        /**\r\n         * Defines whether the bitmap image supports per-pixel transparency. You can\r\n         * set this value only when you construct a BitmapImage2D object by passing in\r\n         * <code>true</code> for the <code>transparent</code> parameter of the\r\n         * constructor. Then, after you create a BitmapImage2D object, you can check\r\n         * whether it supports per-pixel transparency by determining if the value of\r\n         * the <code>transparent</code> property is <code>true</code>.\r\n         */\r\n        get: function () {\r\n            return this._transparent;\r\n        },\r\n        set: function (value) {\r\n            this._transparent = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BitmapImage2D.prototype.invalidate = function () {\r\n        if (!this._imageDataDirty) {\r\n            this._imageDataDirty = true;\r\n            _super.prototype.invalidate.call(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new BitmapImage2D object that is a clone of the original instance\r\n     * with an exact copy of the contained bitmap.\r\n     *\r\n     * @return A new BitmapImage2D object that is identical to the original.\r\n     */\r\n    BitmapImage2D.prototype.clone = function () {\r\n        var t = new BitmapImage2D(this.width, this.height, this.transparent, null, this.powerOfTwo);\r\n        t.draw(this);\r\n        return t;\r\n    };\r\n    /**\r\n     * Adjusts the color values in a specified area of a bitmap image by using a\r\n     * <code>ColorTransform</code> object. If the rectangle matches the\r\n     * boundaries of the bitmap image, this method transforms the color values of\r\n     * the entire image.\r\n     *\r\n     * @param rect           A Rectangle object that defines the area of the\r\n     *                       image in which the ColorTransform object is applied.\r\n     * @param colorTransform A ColorTransform object that describes the color\r\n     *                       transformation values to apply.\r\n     */\r\n    BitmapImage2D.prototype.colorTransform = function (rect, colorTransform) {\r\n        if (!this._imageData)\r\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n        var data = this._imageData.data;\r\n        var i, j, index;\r\n        for (i = 0; i < rect.width; ++i) {\r\n            for (j = 0; j < rect.height; ++j) {\r\n                index = (i + rect.x + (j + rect.y) * this.width) * 4;\r\n                data[index] = data[index] * colorTransform.redMultiplier + colorTransform.redOffset;\r\n                data[index + 1] = data[index + 1] * colorTransform.greenMultiplier + colorTransform.greenOffset;\r\n                data[index + 2] = data[index + 2] * colorTransform.blueMultiplier + colorTransform.blueOffset;\r\n                data[index + 3] = data[index + 3] * colorTransform.alphaMultiplier + colorTransform.alphaOffset;\r\n            }\r\n        }\r\n        if (!this._locked)\r\n            this._context.putImageData(this._imageData, 0, 0);\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Transfers data from one channel of another BitmapImage2D object or the\r\n     * current BitmapImage2D object into a channel of the current BitmapImage2D object.\r\n     * All of the data in the other channels in the destination BitmapImage2D object\r\n     * are preserved.\r\n     *\r\n     * <p>The source channel value and destination channel value can be one of\r\n     * following values: </p>\r\n     *\r\n     * <ul>\r\n     *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n     *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n     *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n     *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n     * </ul>\r\n     *\r\n     * @param sourceBitmapImage2D The input bitmap image to use. The source image\r\n     *                         can be a different BitmapImage2D object or it can\r\n     *                         refer to the current BitmapImage2D object.\r\n     * @param sourceRect       The source Rectangle object. To copy only channel\r\n     *                         data from a smaller area within the bitmap,\r\n     *                         specify a source rectangle that is smaller than\r\n     *                         the overall size of the BitmapImage2D object.\r\n     * @param destPoint        The destination Point object that represents the\r\n     *                         upper-left corner of the rectangular area where\r\n     *                         the new channel data is placed. To copy only\r\n     *                         channel data from one area to a different area in\r\n     *                         the destination image, specify a point other than\r\n     *                        (0,0).\r\n     * @param sourceChannel    The source channel. Use a value from the\r\n     *                         BitmapImage2DChannel class\r\n     *                        (<code>BitmapImage2DChannel.RED</code>,\r\n     *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n     *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n     *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n     * @param destChannel      The destination channel. Use a value from the\r\n     *                         BitmapImage2DChannel class\r\n     *                        (<code>BitmapImage2DChannel.RED</code>,\r\n     *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n     *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n     *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n     * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\r\n     */\r\n    BitmapImage2D.prototype.copyChannel = function (sourceBitmap, sourceRect, destPoint, sourceChannel, destChannel) {\r\n        var imageData = sourceBitmap.getImageData();\r\n        if (!this._imageData)\r\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n        var sourceData = sourceBitmap.getImageData().data;\r\n        var destData = this._imageData.data;\r\n        var sourceOffset = Math.round(Math.log(sourceChannel) / Math.log(2));\r\n        var destOffset = Math.round(Math.log(destChannel) / Math.log(2));\r\n        var i, j, sourceIndex, destIndex;\r\n        for (i = 0; i < sourceRect.width; ++i) {\r\n            for (j = 0; j < sourceRect.height; ++j) {\r\n                sourceIndex = (i + sourceRect.x + (j + sourceRect.y) * sourceBitmap.width) * 4;\r\n                destIndex = (i + destPoint.x + (j + destPoint.y) * this.width) * 4;\r\n                destData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\r\n            }\r\n        }\r\n        if (!this._locked)\r\n            this._context.putImageData(this._imageData, 0, 0);\r\n        this.invalidate();\r\n    };\r\n    BitmapImage2D.prototype.copyPixels = function (source, sourceRect, destRect) {\r\n        if (source instanceof BitmapImage2D)\r\n            source = source.getCanvas();\r\n        if (this._locked && this._imageData)\r\n            this._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n        BitmapImageUtils_1.BitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\r\n        this._imageData = null;\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Frees memory that is used to store the BitmapImage2D object.\r\n     *\r\n     * <p>When the <code>dispose()</code> method is called on an image, the width\r\n     * and height of the image are set to 0. All subsequent calls to methods or\r\n     * properties of this BitmapImage2D instance fail, and an exception is thrown.\r\n     * </p>\r\n     *\r\n     * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\r\n     * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\r\n     * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\r\n     * object is no longer usable and an exception may be thrown if\r\n     * you call functions on the BitmapImage2D object. However,\r\n     * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\r\n     * object(approximately 128 bytes); the memory occupied by the actual\r\n     * BitmapImage2D object is released at the time the BitmapImage2D object is\r\n     * collected by the garbage collector.</p>\r\n     *\r\n     */\r\n    BitmapImage2D.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        this._context = null;\r\n        this._imageCanvas = null;\r\n        this._imageData = null;\r\n        this._rect = null;\r\n        this._transparent = null;\r\n        this._locked = null;\r\n    };\r\n    BitmapImage2D.prototype.draw = function (source, matrix, colorTransform, blendMode, clipRect, smoothing) {\r\n        if (source instanceof BitmapImage2D && source.getCanvas())\r\n            source = source.getCanvas();\r\n        if (this._locked && this._imageData)\r\n            this._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n        BitmapImageUtils_1.BitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n        this._imageData = null;\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Fills a rectangular area of pixels with a specified ARGB color.\r\n     *\r\n     * @param rect  The rectangular area to fill.\r\n     * @param color The ARGB color value that fills the area. ARGB colors are\r\n     *              often specified in hexadecimal format; for example,\r\n     *              0xFF336699.\r\n     * @throws TypeError The rect is null.\r\n     */\r\n    BitmapImage2D.prototype.fillRect = function (rect, color) {\r\n        if (this._locked && this._imageData)\r\n            this._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n        BitmapImageUtils_1.BitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\r\n        this._imageData = null;\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Returns an integer that represents an RGB pixel value from a BitmapImage2D\r\n     * object at a specific point(<i>x</i>, <i>y</i>). The\r\n     * <code>getPixel()</code> method returns an unmultiplied pixel value. No\r\n     * alpha information is returned.\r\n     *\r\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n     * values. A premultiplied image pixel has the red, green, and blue color\r\n     * channel values already multiplied by the alpha data. For example, if the\r\n     * alpha value is 0, the values for the RGB channels are also 0, independent\r\n     * of their unmultiplied values. This loss of data can cause some problems\r\n     * when you perform operations. All BitmapImage2D methods take and return\r\n     * unmultiplied values. The internal pixel representation is converted from\r\n     * premultiplied to unmultiplied before it is returned as a value. During a\r\n     * set operation, the pixel value is premultiplied before the raw image pixel\r\n     * is set.</p>\r\n     *\r\n     * @param x The <i>x</i> position of the pixel.\r\n     * @param y The <i>y</i> position of the pixel.\r\n     * @return A number that represents an RGB pixel value. If the(<i>x</i>,\r\n     *         <i>y</i>) coordinates are outside the bounds of the image, the\r\n     *         method returns 0.\r\n     */\r\n    BitmapImage2D.prototype.getPixel = function (x, y) {\r\n        var r;\r\n        var g;\r\n        var b;\r\n        var a;\r\n        if (!this._locked) {\r\n            var pixelData = this._context.getImageData(x, y, 1, 1);\r\n            r = pixelData.data[0];\r\n            g = pixelData.data[1];\r\n            b = pixelData.data[2];\r\n            a = pixelData.data[3];\r\n        }\r\n        else {\r\n            if (!this._imageData)\r\n                this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n            var index = (x + y * this._imageData.width) * 4;\r\n            r = this._imageData.data[index + 0];\r\n            g = this._imageData.data[index + 1];\r\n            b = this._imageData.data[index + 2];\r\n            a = this._imageData.data[index + 3];\r\n        }\r\n        //returns black if fully transparent\r\n        if (!a)\r\n            return 0x0;\r\n        return (r << 16) | (g << 8) | b;\r\n    };\r\n    /**\r\n     * Returns an ARGB color value that contains alpha channel data and RGB data.\r\n     * This method is similar to the <code>getPixel()</code> method, which\r\n     * returns an RGB color without alpha channel data.\r\n     *\r\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n     * values. A premultiplied image pixel has the red, green, and blue color\r\n     * channel values already multiplied by the alpha data. For example, if the\r\n     * alpha value is 0, the values for the RGB channels are also 0, independent\r\n     * of their unmultiplied values. This loss of data can cause some problems\r\n     * when you perform operations. All BitmapImage2D methods take and return\r\n     * unmultiplied values. The internal pixel representation is converted from\r\n     * premultiplied to unmultiplied before it is returned as a value. During a\r\n     * set operation, the pixel value is premultiplied before the raw image pixel\r\n     * is set.</p>\r\n     *\r\n     * @param x The <i>x</i> position of the pixel.\r\n     * @param y The <i>y</i> position of the pixel.\r\n     * @return A number representing an ARGB pixel value. If the(<i>x</i>,\r\n     *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\r\n     *         returned.\r\n     */\r\n    BitmapImage2D.prototype.getPixel32 = function (x, y) {\r\n        var r;\r\n        var g;\r\n        var b;\r\n        var a;\r\n        if (!this._locked) {\r\n            var pixelData = this._context.getImageData(x, y, 1, 1);\r\n            r = pixelData.data[0];\r\n            g = pixelData.data[1];\r\n            b = pixelData.data[2];\r\n            a = pixelData.data[3];\r\n        }\r\n        else {\r\n            if (!this._imageData)\r\n                this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n            var index = (x + y * this._imageData.width) * 4;\r\n            r = this._imageData.data[index + 0];\r\n            g = this._imageData.data[index + 1];\r\n            b = this._imageData.data[index + 2];\r\n            a = this._imageData.data[index + 3];\r\n        }\r\n        return (a << 24) | (r << 16) | (g << 8) | b;\r\n    };\r\n    BitmapImage2D.prototype.getPixelData = function (x, y, imagePixel) {\r\n        if (!this._imageData)\r\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n        var index = (x + y * this._imageData.width) * 4;\r\n        imagePixel[0] = this._imageData.data[index + 0];\r\n        imagePixel[1] = this._imageData.data[index + 1];\r\n        imagePixel[2] = this._imageData.data[index + 2];\r\n        imagePixel[3] = this._imageData.data[index + 3];\r\n    };\r\n    BitmapImage2D.prototype.setPixelData = function (x, y, imagePixel) {\r\n        if (!this._imageData)\r\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n        var index = (x + y * this._imageData.width) * 4;\r\n        this._imageData.data[index + 0] = imagePixel[0];\r\n        this._imageData.data[index + 1] = imagePixel[1];\r\n        this._imageData.data[index + 2] = imagePixel[2];\r\n        this._imageData.data[index + 3] = imagePixel[3];\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Locks an image so that any objects that reference the BitmapImage2D object,\r\n     * such as Bitmap objects, are not updated when this BitmapImage2D object\r\n     * changes. To improve performance, use this method along with the\r\n     * <code>unlock()</code> method before and after numerous calls to the\r\n     * <code>setPixel()</code> or <code>setPixel32()</code> method.\r\n     *\r\n     */\r\n    BitmapImage2D.prototype.lock = function () {\r\n        if (this._locked)\r\n            return;\r\n        this._locked = true;\r\n    };\r\n    /**\r\n     * Converts an Array into a rectangular region of pixel data. For each pixel,\r\n     * an Array element is read and written into the BitmapImage2D pixel. The data\r\n     * in the Array is expected to be 32-bit ARGB pixel values.\r\n     *\r\n     * @param rect        Specifies the rectangular region of the BitmapImage2D\r\n     *                    object.\r\n     * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\r\n     *                    values to be used in the rectangular region.\r\n     * @throws RangeError The vector array is not large enough to read all the\r\n     *                    pixel data.\r\n     */\r\n    BitmapImage2D.prototype.setArray = function (rect, inputArray) {\r\n        if (!this._imageData)\r\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n        var i, j, index, argb;\r\n        for (i = 0; i < rect.width; ++i) {\r\n            for (j = 0; j < rect.height; ++j) {\r\n                argb = ColorUtils_1.ColorUtils.float32ColorToARGB(inputArray[i + j * rect.width]);\r\n                index = (i + rect.x + (j + rect.y) * this._imageData.width) * 4;\r\n                this._imageData.data[index + 0] = argb[1];\r\n                this._imageData.data[index + 1] = argb[2];\r\n                this._imageData.data[index + 2] = argb[3];\r\n                this._imageData.data[index + 3] = argb[0];\r\n            }\r\n        }\r\n        if (!this._locked)\r\n            this._context.putImageData(this._imageData, 0, 0);\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Sets a single pixel of a BitmapImage2D object. The current alpha channel\r\n     * value of the image pixel is preserved during this operation. The value of\r\n     * the RGB color parameter is treated as an unmultiplied color value.\r\n     *\r\n     * <p><b>Note:</b> To increase performance, when you use the\r\n     * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n     * call the <code>lock()</code> method before you call the\r\n     * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n     * the <code>unlock()</code> method when you have made all pixel changes.\r\n     * This process prevents objects that reference this BitmapImage2D instance from\r\n     * updating until you finish making the pixel changes.</p>\r\n     *\r\n     * @param x     The <i>x</i> position of the pixel whose value changes.\r\n     * @param y     The <i>y</i> position of the pixel whose value changes.\r\n     * @param color The resulting RGB color for the pixel.\r\n     */\r\n    BitmapImage2D.prototype.setPixel = function (x, y, color) {\r\n        var argb = ColorUtils_1.ColorUtils.float32ColorToARGB(color);\r\n        if (!this._imageData)\r\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n        var index = (x + y * this._imageData.width) * 4;\r\n        this._imageData.data[index + 0] = argb[1];\r\n        this._imageData.data[index + 1] = argb[2];\r\n        this._imageData.data[index + 2] = argb[3];\r\n        this._imageData.data[index + 3] = 0xFF;\r\n        if (!this._locked)\r\n            this._context.putImageData(this._imageData, 0, 0);\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Sets the color and alpha transparency values of a single pixel of a\r\n     * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\r\n     * method; the main difference is that the <code>setPixel32()</code> method\r\n     * takes an ARGB color value that contains alpha channel information.\r\n     *\r\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n     * values. A premultiplied image pixel has the red, green, and blue color\r\n     * channel values already multiplied by the alpha data. For example, if the\r\n     * alpha value is 0, the values for the RGB channels are also 0, independent\r\n     * of their unmultiplied values. This loss of data can cause some problems\r\n     * when you perform operations. All BitmapImage2D methods take and return\r\n     * unmultiplied values. The internal pixel representation is converted from\r\n     * premultiplied to unmultiplied before it is returned as a value. During a\r\n     * set operation, the pixel value is premultiplied before the raw image pixel\r\n     * is set.</p>\r\n     *\r\n     * <p><b>Note:</b> To increase performance, when you use the\r\n     * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n     * call the <code>lock()</code> method before you call the\r\n     * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n     * the <code>unlock()</code> method when you have made all pixel changes.\r\n     * This process prevents objects that reference this BitmapImage2D instance from\r\n     * updating until you finish making the pixel changes.</p>\r\n     *\r\n     * @param x     The <i>x</i> position of the pixel whose value changes.\r\n     * @param y     The <i>y</i> position of the pixel whose value changes.\r\n     * @param color The resulting ARGB color for the pixel. If the bitmap is\r\n     *              opaque(not transparent), the alpha transparency portion of\r\n     *              this color value is ignored.\r\n     */\r\n    BitmapImage2D.prototype.setPixel32 = function (x, y, color) {\r\n        var argb = ColorUtils_1.ColorUtils.float32ColorToARGB(color);\r\n        if (!this._imageData)\r\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n        var index = (x + y * this._imageData.width) * 4;\r\n        this._imageData.data[index + 0] = argb[1];\r\n        this._imageData.data[index + 1] = argb[2];\r\n        this._imageData.data[index + 2] = argb[3];\r\n        this._imageData.data[index + 3] = argb[0];\r\n        if (!this._locked)\r\n            this._context.putImageData(this._imageData, 0, 0);\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Converts a byte array into a rectangular region of pixel data. For each\r\n     * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\r\n     * the return value is written into the pixel. If the byte array ends before\r\n     * the full rectangle is written, the function returns. The data in the byte\r\n     * array is expected to be 32-bit ARGB pixel values. No seeking is performed\r\n     * on the byte array before or after the pixels are read.\r\n     *\r\n     * @param rect           Specifies the rectangular region of the BitmapImage2D\r\n     *                       object.\r\n     * @param inputByteArray A ByteArray object that consists of 32-bit\r\n     *                       unmultiplied pixel values to be used in the\r\n     *                       rectangular region.\r\n     * @throws EOFError  The <code>inputByteArray</code> object does not include\r\n     *                   enough data to fill the area of the <code>rect</code>\r\n     *                   rectangle. The method fills as many pixels as possible\r\n     *                   before throwing the exception.\r\n     * @throws TypeError The rect or inputByteArray are null.\r\n     */\r\n    BitmapImage2D.prototype.setPixels = function (rect, input) {\r\n        if (!this._imageData)\r\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n        var i;\r\n        var w = this._imageData.width;\r\n        for (i = 0; i < rect.height; ++i)\r\n            this._imageData.data.set(input.subarray(i * w * 4, (i + 1) * w * 4), (rect.x + (i + rect.y) * w) * 4);\r\n        if (!this._locked)\r\n            this._context.putImageData(this._imageData, 0, 0);\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Unlocks an image so that any objects that reference the BitmapImage2D object,\r\n     * such as Bitmap objects, are updated when this BitmapImage2D object changes.\r\n     * To improve performance, use this method along with the <code>lock()</code>\r\n     * method before and after numerous calls to the <code>setPixel()</code> or\r\n     * <code>setPixel32()</code> method.\r\n     *\r\n     * @param changeRect The area of the BitmapImage2D object that has changed. If\r\n     *                   you do not specify a value for this parameter, the\r\n     *                   entire area of the BitmapImage2D object is considered\r\n     *                   changed.\r\n     */\r\n    BitmapImage2D.prototype.unlock = function () {\r\n        if (!this._locked)\r\n            return;\r\n        this._locked = false;\r\n        if (this._imageData)\r\n            this._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n    };\r\n    /**\r\n     *\r\n     * @returns {ImageData}\r\n     */\r\n    BitmapImage2D.prototype.getImageData = function () {\r\n        if (!this._imageData)\r\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n        return this._imageData;\r\n    };\r\n    /**\r\n     *\r\n     * @returns {HTMLCanvasElement}\r\n     */\r\n    BitmapImage2D.prototype.getCanvas = function () {\r\n        return this._imageCanvas;\r\n    };\r\n    /**\r\n     *\r\n     * @param width\r\n     * @param height\r\n     * @private\r\n     */\r\n    BitmapImage2D.prototype._setSize = function (width, height) {\r\n        if (this._locked)\r\n            this._context.putImageData(this._imageData, 0, 0);\r\n        if (this._imageCanvas) {\r\n            this._imageCanvas.width = width;\r\n            this._imageCanvas.height = height;\r\n        }\r\n        _super.prototype._setSize.call(this, width, height);\r\n        if (this._locked)\r\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n    };\r\n    BitmapImage2D.assetType = \"[image BitmapImage2D]\";\r\n    return BitmapImage2D;\r\n}(Image2D_1.Image2D));\r\nexports.BitmapImage2D = BitmapImage2D;\r\n},{\"../image/CPUCanvas\":\"awayjs-core/lib/image/CPUCanvas\",\"../image/Image2D\":\"awayjs-core/lib/image/Image2D\",\"../utils/BitmapImageUtils\":\"awayjs-core/lib/utils/BitmapImageUtils\",\"../utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\"}],\"awayjs-core/lib/image/BitmapImageChannel\":[function(require,module,exports){\n\"use strict\";\r\nvar BitmapImageChannel = (function () {\r\n    function BitmapImageChannel() {\r\n    }\r\n    BitmapImageChannel.ALPHA = 8;\r\n    BitmapImageChannel.BLUE = 4;\r\n    BitmapImageChannel.GREEN = 2;\r\n    BitmapImageChannel.RED = 1;\r\n    return BitmapImageChannel;\r\n}());\r\nexports.BitmapImageChannel = BitmapImageChannel;\r\n},{}],\"awayjs-core/lib/image/BitmapImageCube\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar BitmapImage2D_1 = require(\"../image/BitmapImage2D\");\r\nvar ImageCube_1 = require(\"../image/ImageCube\");\r\nvar Rectangle_1 = require(\"../geom/Rectangle\");\r\nvar ColorUtils_1 = require(\"../utils/ColorUtils\");\r\nvar BitmapImageUtils_1 = require(\"../utils/BitmapImageUtils\");\r\n/**\r\n * The BitmapImage2D export class lets you work with the data(pixels) of a Bitmap\r\n * object. You can use the methods of the BitmapImage2D export class to create\r\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\r\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\r\n * image that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes.\r\n *\r\n * <p>This export class lets you separate bitmap rendering operations from the\r\n * internal display updating routines of flash. By manipulating a\r\n * BitmapImage2D object directly, you can create complex images without incurring\r\n * the per-frame overhead of constantly redrawing the content from vector\r\n * data.</p>\r\n *\r\n * <p>The methods of the BitmapImage2D export class support effects that are not\r\n * available through the filters available to non-bitmap display objects.</p>\r\n *\r\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\r\n * represent either a fully opaque bitmap or a transparent bitmap that\r\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\r\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\r\n * of a single pixel in the bitmap.</p>\r\n *\r\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\r\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\r\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\r\n * represents the alpha channel value, followed by red, green, and blue.)</p>\r\n *\r\n * <p>The four channels(alpha, red, green, and blue) are represented as\r\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\r\n * method or the <code>DisplacementMapFilter.componentX</code> and\r\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\r\n * are represented by the following constants in the BitmapImage2DChannel\r\n * class:</p>\r\n *\r\n * <ul>\r\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n * </ul>\r\n *\r\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\r\n * <code>bitmapData</code> property of the Bitmap object.</p>\r\n *\r\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\r\n * <code>Graphics.beginBitmapFill()</code> method.</p>\r\n *\r\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\r\n * using the <code>flash.display.Tilesheet</code> class.</p>\r\n *\r\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\r\n * is 8,191 pixels in width or height, and the total number of pixels cannot\r\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\r\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\r\n * is 2,880 pixels in height and 2,880 in width.</p>\r\n */\r\nvar BitmapImageCube = (function (_super) {\r\n    __extends(BitmapImageCube, _super);\r\n    /**\r\n     * Creates a BitmapImage2D object with a specified width and height. If you\r\n     * specify a value for the <code>fillColor</code> parameter, every pixel in\r\n     * the bitmap is set to that color.\r\n     *\r\n     * <p>By default, the bitmap is created as transparent, unless you pass\r\n     * the value <code>false</code> for the transparent parameter. After you\r\n     * create an opaque bitmap, you cannot change it to a transparent bitmap.\r\n     * Every pixel in an opaque bitmap uses only 24 bits of color channel\r\n     * information. If you define the bitmap as transparent, every pixel uses 32\r\n     * bits of color channel information, including an alpha transparency\r\n     * channel.</p>\r\n     *\r\n     * @param width       The width of the bitmap image in pixels.\r\n     * @param height      The height of the bitmap image in pixels.\r\n     * @param transparent Specifies whether the bitmap image supports per-pixel\r\n     *                    transparency. The default value is <code>true</code>\r\n     *                    (transparent). To create a fully transparent bitmap,\r\n     *                    set the value of the <code>transparent</code>\r\n     *                    parameter to <code>true</code> and the value of the\r\n     *                    <code>fillColor</code> parameter to 0x00000000(or to\r\n     *                    0). Setting the <code>transparent</code> property to\r\n     *                    <code>false</code> can result in minor improvements\r\n     *                    in rendering performance.\r\n     * @param fillColor   A 32-bit ARGB color value that you use to fill the\r\n     *                    bitmap image area. The default value is\r\n     *                    0xFFFFFFFF(solid white).\r\n     */\r\n    function BitmapImageCube(size, transparent, fillColor) {\r\n        if (transparent === void 0) { transparent = true; }\r\n        if (fillColor === void 0) { fillColor = null; }\r\n        _super.call(this, size);\r\n        this._imageCanvas = new Array(6);\r\n        this._context = new Array(6);\r\n        this._imageData = new Array(6);\r\n        this._locked = false;\r\n        this._transparent = transparent;\r\n        for (var i = 0; i < 6; i++) {\r\n            this._imageCanvas[i] = document.createElement(\"canvas\");\r\n            this._imageCanvas[i].width = size;\r\n            this._imageCanvas[i].height = size;\r\n            this._context[i] = this._imageCanvas[i].getContext(\"2d\");\r\n            if (fillColor != null)\r\n                this.fillRect(i, new Rectangle_1.Rectangle(0, 0, size, size), fillColor);\r\n        }\r\n    }\r\n    Object.defineProperty(BitmapImageCube.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return BitmapImageCube.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BitmapImageCube.prototype, \"transparent\", {\r\n        /**\r\n         * Defines whether the bitmap image supports per-pixel transparency. You can\r\n         * set this value only when you construct a BitmapImage2D object by passing in\r\n         * <code>true</code> for the <code>transparent</code> parameter of the\r\n         * constructor. Then, after you create a BitmapImage2D object, you can check\r\n         * whether it supports per-pixel transparency by determining if the value of\r\n         * the <code>transparent</code> property is <code>true</code>.\r\n         */\r\n        get: function () {\r\n            return this._transparent;\r\n        },\r\n        set: function (value) {\r\n            this._transparent = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new BitmapImage2D object that is a clone of the original instance\r\n     * with an exact copy of the contained bitmap.\r\n     *\r\n     * @return A new BitmapImage2D object that is identical to the original.\r\n     */\r\n    BitmapImageCube.prototype.clone = function () {\r\n        var t = new BitmapImageCube(this._size, this.transparent);\r\n        for (var i = 0; i < 6; i++) {\r\n            t.draw(i, this.getCanvas(i));\r\n        }\r\n        return t;\r\n    };\r\n    /**\r\n     * Adjusts the color values in a specified area of a bitmap image by using a\r\n     * <code>ColorTransform</code> object. If the rectangle matches the\r\n     * boundaries of the bitmap image, this method transforms the color values of\r\n     * the entire image.\r\n     *\r\n     * @param rect           A Rectangle object that defines the area of the\r\n     *                       image in which the ColorTransform object is applied.\r\n     * @param colorTransform A ColorTransform object that describes the color\r\n     *                       transformation values to apply.\r\n     */\r\n    BitmapImageCube.prototype.colorTransform = function (side, rect, colorTransform) {\r\n        if (!this._locked)\r\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n        var data = this._imageData[side].data;\r\n        var i, j, index;\r\n        for (i = 0; i < rect.width; ++i) {\r\n            for (j = 0; j < rect.height; ++j) {\r\n                index = (i + rect.x + (j + rect.y) * this._size) * 4;\r\n                data[index] = data[index] * colorTransform.redMultiplier + colorTransform.redOffset;\r\n                data[index + 1] = data[index + 1] * colorTransform.greenMultiplier + colorTransform.greenOffset;\r\n                data[index + 2] = data[index + 2] * colorTransform.blueMultiplier + colorTransform.blueOffset;\r\n                data[index + 3] = data[index + 3] * colorTransform.alphaMultiplier + colorTransform.alphaOffset;\r\n            }\r\n        }\r\n        if (!this._locked) {\r\n            this._context[side].putImageData(this._imageData[side], 0, 0);\r\n            this._imageData[side] = null;\r\n        }\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Transfers data from one channel of another BitmapImage2D object or the\r\n     * current BitmapImage2D object into a channel of the current BitmapImage2D object.\r\n     * All of the data in the other channels in the destination BitmapImage2D object\r\n     * are preserved.\r\n     *\r\n     * <p>The source channel value and destination channel value can be one of\r\n     * following values: </p>\r\n     *\r\n     * <ul>\r\n     *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n     *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n     *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n     *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n     * </ul>\r\n     *\r\n     * @param sourceBitmapImage2D The input bitmap image to use. The source image\r\n     *                         can be a different BitmapImage2D object or it can\r\n     *                         refer to the current BitmapImage2D object.\r\n     * @param sourceRect       The source Rectangle object. To copy only channel\r\n     *                         data from a smaller area within the bitmap,\r\n     *                         specify a source rectangle that is smaller than\r\n     *                         the overall size of the BitmapImage2D object.\r\n     * @param destPoint        The destination Point object that represents the\r\n     *                         upper-left corner of the rectangular area where\r\n     *                         the new channel data is placed. To copy only\r\n     *                         channel data from one area to a different area in\r\n     *                         the destination image, specify a point other than\r\n     *                        (0,0).\r\n     * @param sourceChannel    The source channel. Use a value from the\r\n     *                         BitmapImage2DChannel class\r\n     *                        (<code>BitmapImage2DChannel.RED</code>,\r\n     *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n     *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n     *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n     * @param destChannel      The destination channel. Use a value from the\r\n     *                         BitmapImage2DChannel class\r\n     *                        (<code>BitmapImage2DChannel.RED</code>,\r\n     *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n     *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n     *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n     * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\r\n     */\r\n    BitmapImageCube.prototype.copyChannel = function (side, sourceBitmap, sourceRect, destPoint, sourceChannel, destChannel) {\r\n        var imageData = sourceBitmap.getImageData();\r\n        if (!this._locked)\r\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n        var sourceData = sourceBitmap.getImageData().data;\r\n        var destData = this._imageData[side].data;\r\n        var sourceOffset = Math.round(Math.log(sourceChannel) / Math.log(2));\r\n        var destOffset = Math.round(Math.log(destChannel) / Math.log(2));\r\n        var i, j, sourceIndex, destIndex;\r\n        for (i = 0; i < sourceRect.width; ++i) {\r\n            for (j = 0; j < sourceRect.height; ++j) {\r\n                sourceIndex = (i + sourceRect.x + (j + sourceRect.y) * sourceBitmap.width) * 4;\r\n                destIndex = (i + destPoint.x + (j + destPoint.y) * this._size) * 4;\r\n                destData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\r\n            }\r\n        }\r\n        if (!this._locked) {\r\n            this._context[side].putImageData(this._imageData[side], 0, 0);\r\n            this._imageData[side] = null;\r\n        }\r\n        this.invalidate();\r\n    };\r\n    BitmapImageCube.prototype.copyPixels = function (side, source, sourceRect, destRect) {\r\n        if (source instanceof BitmapImage2D_1.BitmapImage2D)\r\n            source = source.getCanvas();\r\n        if (this._locked) {\r\n            // If canvas is locked:\r\n            //\r\n            //      1) copy image data back to canvas\r\n            //      2) draw object\r\n            //      3) read _imageData back out\r\n            this._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\r\n            BitmapImageUtils_1.BitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\r\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n        }\r\n        else {\r\n            BitmapImageUtils_1.BitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\r\n        }\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Frees memory that is used to store the BitmapImage2D object.\r\n     *\r\n     * <p>When the <code>dispose()</code> method is called on an image, the width\r\n     * and height of the image are set to 0. All subsequent calls to methods or\r\n     * properties of this BitmapImage2D instance fail, and an exception is thrown.\r\n     * </p>\r\n     *\r\n     * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\r\n     * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\r\n     * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\r\n     * object is no longer usable and an exception may be thrown if\r\n     * you call functions on the BitmapImage2D object. However,\r\n     * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\r\n     * object(approximately 128 bytes); the memory occupied by the actual\r\n     * BitmapImage2D object is released at the time the BitmapImage2D object is\r\n     * collected by the garbage collector.</p>\r\n     *\r\n     */\r\n    BitmapImageCube.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        for (var i = 0; i < 6; i++) {\r\n            this._context[i] = null;\r\n            this._imageCanvas[i] = null;\r\n            this._imageData[i] = null;\r\n        }\r\n        this._transparent = null;\r\n        this._locked = null;\r\n    };\r\n    BitmapImageCube.prototype.draw = function (side, source, matrix, colorTransform, blendMode, clipRect, smoothing) {\r\n        if (source instanceof BitmapImage2D_1.BitmapImage2D)\r\n            source = source.getCanvas();\r\n        if (this._locked) {\r\n            // If canvas is locked:\r\n            //\r\n            //      1) copy image data back to canvas\r\n            //      2) draw object\r\n            //      3) read _imageData back out\r\n            this._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\r\n            BitmapImageUtils_1.BitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n        }\r\n        else {\r\n            BitmapImageUtils_1.BitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n        }\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Fills a rectangular area of pixels with a specified ARGB color.\r\n     *\r\n     * @param rect  The rectangular area to fill.\r\n     * @param color The ARGB color value that fills the area. ARGB colors are\r\n     *              often specified in hexadecimal format; for example,\r\n     *              0xFF336699.\r\n     * @throws TypeError The rect is null.\r\n     */\r\n    BitmapImageCube.prototype.fillRect = function (side, rect, color) {\r\n        if (this._locked) {\r\n            // If canvas is locked:\r\n            //\r\n            //      1) copy image data back to canvas\r\n            //      2) apply fill\r\n            //      3) read _imageData back out\r\n            if (this._imageData[side])\r\n                this._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\r\n            BitmapImageUtils_1.BitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\r\n            if (this._imageData[side])\r\n                this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n        }\r\n        else {\r\n            BitmapImageUtils_1.BitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\r\n        }\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Returns an integer that represents an RGB pixel value from a BitmapImage2D\r\n     * object at a specific point(<i>x</i>, <i>y</i>). The\r\n     * <code>getPixel()</code> method returns an unmultiplied pixel value. No\r\n     * alpha information is returned.\r\n     *\r\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n     * values. A premultiplied image pixel has the red, green, and blue color\r\n     * channel values already multiplied by the alpha data. For example, if the\r\n     * alpha value is 0, the values for the RGB channels are also 0, independent\r\n     * of their unmultiplied values. This loss of data can cause some problems\r\n     * when you perform operations. All BitmapImage2D methods take and return\r\n     * unmultiplied values. The internal pixel representation is converted from\r\n     * premultiplied to unmultiplied before it is returned as a value. During a\r\n     * set operation, the pixel value is premultiplied before the raw image pixel\r\n     * is set.</p>\r\n     *\r\n     * @param x The <i>x</i> position of the pixel.\r\n     * @param y The <i>y</i> position of the pixel.\r\n     * @return A number that represents an RGB pixel value. If the(<i>x</i>,\r\n     *         <i>y</i>) coordinates are outside the bounds of the image, the\r\n     *         method returns 0.\r\n     */\r\n    BitmapImageCube.prototype.getPixel = function (side, x, y) {\r\n        var r;\r\n        var g;\r\n        var b;\r\n        var a;\r\n        if (!this._locked) {\r\n            var pixelData = this._context[side].getImageData(x, y, 1, 1);\r\n            r = pixelData.data[0];\r\n            g = pixelData.data[1];\r\n            b = pixelData.data[2];\r\n            a = pixelData.data[3];\r\n        }\r\n        else {\r\n            var index = (x + y * this._size) * 4;\r\n            r = this._imageData[side].data[index + 0];\r\n            g = this._imageData[side].data[index + 1];\r\n            b = this._imageData[side].data[index + 2];\r\n            a = this._imageData[side].data[index + 3];\r\n        }\r\n        //returns black if fully transparent\r\n        if (!a)\r\n            return 0x0;\r\n        return (r << 16) | (g << 8) | b;\r\n    };\r\n    /**\r\n     * Returns an ARGB color value that contains alpha channel data and RGB data.\r\n     * This method is similar to the <code>getPixel()</code> method, which\r\n     * returns an RGB color without alpha channel data.\r\n     *\r\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n     * values. A premultiplied image pixel has the red, green, and blue color\r\n     * channel values already multiplied by the alpha data. For example, if the\r\n     * alpha value is 0, the values for the RGB channels are also 0, independent\r\n     * of their unmultiplied values. This loss of data can cause some problems\r\n     * when you perform operations. All BitmapImage2D methods take and return\r\n     * unmultiplied values. The internal pixel representation is converted from\r\n     * premultiplied to unmultiplied before it is returned as a value. During a\r\n     * set operation, the pixel value is premultiplied before the raw image pixel\r\n     * is set.</p>\r\n     *\r\n     * @param x The <i>x</i> position of the pixel.\r\n     * @param y The <i>y</i> position of the pixel.\r\n     * @return A number representing an ARGB pixel value. If the(<i>x</i>,\r\n     *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\r\n     *         returned.\r\n     */\r\n    BitmapImageCube.prototype.getPixel32 = function (side, x, y) {\r\n        var r;\r\n        var g;\r\n        var b;\r\n        var a;\r\n        if (!this._locked) {\r\n            var pixelData = this._context[side].getImageData(x, y, 1, 1);\r\n            r = pixelData.data[0];\r\n            g = pixelData.data[1];\r\n            b = pixelData.data[2];\r\n            a = pixelData.data[3];\r\n        }\r\n        else {\r\n            var index = (x + y * this._size) * 4;\r\n            r = this._imageData[side].data[index + 0];\r\n            g = this._imageData[side].data[index + 1];\r\n            b = this._imageData[side].data[index + 2];\r\n            a = this._imageData[side].data[index + 3];\r\n        }\r\n        return (a << 24) | (r << 16) | (g << 8) | b;\r\n    };\r\n    /**\r\n     * Locks an image so that any objects that reference the BitmapImage2D object,\r\n     * such as Bitmap objects, are not updated when this BitmapImage2D object\r\n     * changes. To improve performance, use this method along with the\r\n     * <code>unlock()</code> method before and after numerous calls to the\r\n     * <code>setPixel()</code> or <code>setPixel32()</code> method.\r\n     *\r\n     */\r\n    BitmapImageCube.prototype.lock = function () {\r\n        if (this._locked)\r\n            return;\r\n        this._locked = true;\r\n        for (var i = 0; i < 6; i++)\r\n            this._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\r\n    };\r\n    /**\r\n     * Converts an Array into a rectangular region of pixel data. For each pixel,\r\n     * an Array element is read and written into the BitmapImage2D pixel. The data\r\n     * in the Array is expected to be 32-bit ARGB pixel values.\r\n     *\r\n     * @param rect        Specifies the rectangular region of the BitmapImage2D\r\n     *                    object.\r\n     * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\r\n     *                    values to be used in the rectangular region.\r\n     * @throws RangeError The vector array is not large enough to read all the\r\n     *                    pixel data.\r\n     */\r\n    BitmapImageCube.prototype.setArray = function (side, rect, inputArray) {\r\n        if (!this._locked)\r\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n        var i, j, index, argb;\r\n        for (i = 0; i < rect.width; ++i) {\r\n            for (j = 0; j < rect.height; ++j) {\r\n                argb = ColorUtils_1.ColorUtils.float32ColorToARGB(inputArray[i + j * rect.width]);\r\n                index = (i + rect.x + (j + rect.y) * this._size) * 4;\r\n                this._imageData[side].data[index + 0] = argb[1];\r\n                this._imageData[side].data[index + 1] = argb[2];\r\n                this._imageData[side].data[index + 2] = argb[3];\r\n                this._imageData[side].data[index + 3] = argb[0];\r\n            }\r\n        }\r\n        if (!this._locked) {\r\n            this._context[side].putImageData(this._imageData[side], 0, 0);\r\n            this._imageData[side] = null;\r\n        }\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Sets a single pixel of a BitmapImage2D object. The current alpha channel\r\n     * value of the image pixel is preserved during this operation. The value of\r\n     * the RGB color parameter is treated as an unmultiplied color value.\r\n     *\r\n     * <p><b>Note:</b> To increase performance, when you use the\r\n     * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n     * call the <code>lock()</code> method before you call the\r\n     * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n     * the <code>unlock()</code> method when you have made all pixel changes.\r\n     * This process prevents objects that reference this BitmapImage2D instance from\r\n     * updating until you finish making the pixel changes.</p>\r\n     *\r\n     * @param x     The <i>x</i> position of the pixel whose value changes.\r\n     * @param y     The <i>y</i> position of the pixel whose value changes.\r\n     * @param color The resulting RGB color for the pixel.\r\n     */\r\n    BitmapImageCube.prototype.setPixel = function (side, x, y, color) {\r\n        var argb = ColorUtils_1.ColorUtils.float32ColorToARGB(color);\r\n        if (!this._locked)\r\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n        var index = (x + y * this._size) * 4;\r\n        this._imageData[side].data[index + 0] = argb[1];\r\n        this._imageData[side].data[index + 1] = argb[2];\r\n        this._imageData[side].data[index + 2] = argb[3];\r\n        this._imageData[side].data[index + 3] = 255;\r\n        if (!this._locked) {\r\n            this._context[side].putImageData(this._imageData[side], 0, 0);\r\n            this._imageData = null;\r\n        }\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Sets the color and alpha transparency values of a single pixel of a\r\n     * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\r\n     * method; the main difference is that the <code>setPixel32()</code> method\r\n     * takes an ARGB color value that contains alpha channel information.\r\n     *\r\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n     * values. A premultiplied image pixel has the red, green, and blue color\r\n     * channel values already multiplied by the alpha data. For example, if the\r\n     * alpha value is 0, the values for the RGB channels are also 0, independent\r\n     * of their unmultiplied values. This loss of data can cause some problems\r\n     * when you perform operations. All BitmapImage2D methods take and return\r\n     * unmultiplied values. The internal pixel representation is converted from\r\n     * premultiplied to unmultiplied before it is returned as a value. During a\r\n     * set operation, the pixel value is premultiplied before the raw image pixel\r\n     * is set.</p>\r\n     *\r\n     * <p><b>Note:</b> To increase performance, when you use the\r\n     * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n     * call the <code>lock()</code> method before you call the\r\n     * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n     * the <code>unlock()</code> method when you have made all pixel changes.\r\n     * This process prevents objects that reference this BitmapImage2D instance from\r\n     * updating until you finish making the pixel changes.</p>\r\n     *\r\n     * @param x     The <i>x</i> position of the pixel whose value changes.\r\n     * @param y     The <i>y</i> position of the pixel whose value changes.\r\n     * @param color The resulting ARGB color for the pixel. If the bitmap is\r\n     *              opaque(not transparent), the alpha transparency portion of\r\n     *              this color value is ignored.\r\n     */\r\n    BitmapImageCube.prototype.setPixel32 = function (side, x, y, color) {\r\n        var argb = ColorUtils_1.ColorUtils.float32ColorToARGB(color);\r\n        if (!this._locked)\r\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n        var index = (x + y * this._size) * 4;\r\n        this._imageData[side].data[index + 0] = argb[1];\r\n        this._imageData[side].data[index + 1] = argb[2];\r\n        this._imageData[side].data[index + 2] = argb[3];\r\n        this._imageData[side].data[index + 3] = argb[0];\r\n        if (!this._locked) {\r\n            this._context[side].putImageData(this._imageData[side], 0, 0);\r\n            this._imageData[side] = null;\r\n        }\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Converts a byte array into a rectangular region of pixel data. For each\r\n     * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\r\n     * the return value is written into the pixel. If the byte array ends before\r\n     * the full rectangle is written, the function returns. The data in the byte\r\n     * array is expected to be 32-bit ARGB pixel values. No seeking is performed\r\n     * on the byte array before or after the pixels are read.\r\n     *\r\n     * @param rect           Specifies the rectangular region of the BitmapImage2D\r\n     *                       object.\r\n     * @param inputByteArray A ByteArray object that consists of 32-bit\r\n     *                       unmultiplied pixel values to be used in the\r\n     *                       rectangular region.\r\n     * @throws EOFError  The <code>inputByteArray</code> object does not include\r\n     *                   enough data to fill the area of the <code>rect</code>\r\n     *                   rectangle. The method fills as many pixels as possible\r\n     *                   before throwing the exception.\r\n     * @throws TypeError The rect or inputByteArray are null.\r\n     */\r\n    BitmapImageCube.prototype.setPixels = function (side, rect, inputByteArray) {\r\n        if (!this._locked)\r\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n        inputByteArray.position = 0;\r\n        var i, j, index;\r\n        for (i = 0; i < rect.width; ++i) {\r\n            for (j = 0; j < rect.height; ++j) {\r\n                index = (i + rect.x + (j + rect.y) * this._size) * 4;\r\n                this._imageData[side].data[index + 0] = inputByteArray.readUnsignedInt();\r\n                this._imageData[side].data[index + 1] = inputByteArray.readUnsignedInt();\r\n                this._imageData[side].data[index + 2] = inputByteArray.readUnsignedInt();\r\n                this._imageData[side].data[index + 3] = inputByteArray.readUnsignedInt();\r\n            }\r\n        }\r\n        if (!this._locked) {\r\n            this._context[side].putImageData(this._imageData[side], 0, 0);\r\n            this._imageData[side] = null;\r\n        }\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Unlocks an image so that any objects that reference the BitmapImage2D object,\r\n     * such as Bitmap objects, are updated when this BitmapImage2D object changes.\r\n     * To improve performance, use this method along with the <code>lock()</code>\r\n     * method before and after numerous calls to the <code>setPixel()</code> or\r\n     * <code>setPixel32()</code> method.\r\n     *\r\n     * @param changeRect The area of the BitmapImage2D object that has changed. If\r\n     *                   you do not specify a value for this parameter, the\r\n     *                   entire area of the BitmapImage2D object is considered\r\n     *                   changed.\r\n     */\r\n    BitmapImageCube.prototype.unlock = function () {\r\n        if (!this._locked)\r\n            return;\r\n        this._locked = false;\r\n        for (var i = 0; i < 6; i++) {\r\n            this._context[i].putImageData(this._imageData[i], 0, 0); // at coords 0,0\r\n            this._imageData[i] = null;\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @returns {ImageData}\r\n     */\r\n    BitmapImageCube.prototype.getImageData = function (side) {\r\n        if (!this._locked)\r\n            return this._context[side].getImageData(0, 0, this._size, this._size);\r\n        return this._imageData[side];\r\n    };\r\n    /**\r\n     *\r\n     * @returns {HTMLCanvasElement}\r\n     */\r\n    BitmapImageCube.prototype.getCanvas = function (side) {\r\n        return this._imageCanvas[side];\r\n    };\r\n    /**\r\n     *\r\n     * @param width\r\n     * @param height\r\n     * @private\r\n     */\r\n    BitmapImageCube.prototype._setSize = function (size) {\r\n        _super.prototype._setSize.call(this, size);\r\n        for (var i = 0; i < 6; i++) {\r\n            if (this._locked)\r\n                this._context[i].putImageData(this._imageData[i], 0, 0);\r\n            this._imageCanvas[i].width = size;\r\n            this._imageCanvas[i].height = size;\r\n            if (this._locked)\r\n                this._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\r\n        }\r\n    };\r\n    BitmapImageCube.assetType = \"[image BitmapImageCube]\";\r\n    BitmapImageCube.posX = 0;\r\n    BitmapImageCube.negX = 1;\r\n    BitmapImageCube.posY = 2;\r\n    BitmapImageCube.negY = 3;\r\n    BitmapImageCube.posZ = 4;\r\n    BitmapImageCube.negZ = 5;\r\n    return BitmapImageCube;\r\n}(ImageCube_1.ImageCube));\r\nexports.BitmapImageCube = BitmapImageCube;\r\n},{\"../geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"../image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\",\"../image/ImageCube\":\"awayjs-core/lib/image/ImageCube\",\"../utils/BitmapImageUtils\":\"awayjs-core/lib/utils/BitmapImageUtils\",\"../utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\"}],\"awayjs-core/lib/image/BlendMode\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * A export class that provides constant values for visual blend mode effects. These\r\n * constants are used in the following:\r\n * <ul>\r\n *   <li> The <code>blendMode</code> property of the\r\n * flash.display.DisplayObject class.</li>\r\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\r\n * method of the flash.display.BitmapData class</li>\r\n * </ul>\r\n */\r\nvar BlendMode = (function () {\r\n    function BlendMode() {\r\n    }\r\n    /**\r\n     * Adds the values of the constituent colors of the display object to the\r\n     * colors of its background, applying a ceiling of 0xFF. This setting is\r\n     * commonly used for animating a lightening dissolve between two objects.\r\n     *\r\n     * <p>For example, if the display object has a pixel with an RGB value of\r\n     * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\r\n     * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\r\n     * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\r\n     */\r\n    BlendMode.ADD = \"add\";\r\n    /**\r\n     * Applies the alpha value of each pixel of the display object to the\r\n     * background. This requires the <code>blendMode</code> property of the\r\n     * parent display object be set to\r\n     * <code>away.base.BlendMode.LAYER</code>.\r\n     *\r\n     * <p>Not supported under GPU rendering.</p>\r\n     */\r\n    BlendMode.ALPHA = \"alpha\";\r\n    /**\r\n     * Selects the darker of the constituent colors of the display object and the\r\n     * colors of the background(the colors with the smaller values). This\r\n     * setting is commonly used for superimposing type.\r\n     *\r\n     * <p>For example, if the display object has a pixel with an RGB value of\r\n     * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n     * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\r\n     * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\r\n     *\r\n     * <p>Not supported under GPU rendering.</p>\r\n     */\r\n    BlendMode.DARKEN = \"darken\";\r\n    /**\r\n     * Compares the constituent colors of the display object with the colors of\r\n     * its background, and subtracts the darker of the values of the two\r\n     * constituent colors from the lighter value. This setting is commonly used\r\n     * for more vibrant colors.\r\n     *\r\n     * <p>For example, if the display object has a pixel with an RGB value of\r\n     * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n     * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\r\n     * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\r\n     */\r\n    BlendMode.DIFFERENCE = \"difference\";\r\n    /**\r\n     * Erases the background based on the alpha value of the display object. This\r\n     * process requires that the <code>blendMode</code> property of the parent\r\n     * display object be set to <code>flash.display.BlendMode.LAYER</code>.\r\n     *\r\n     * <p>Not supported under GPU rendering.</p>\r\n     */\r\n    BlendMode.ERASE = \"erase\";\r\n    /**\r\n     * Adjusts the color of each pixel based on the darkness of the display\r\n     * object. If the display object is lighter than 50% gray, the display object\r\n     * and background colors are screened, which results in a lighter color. If\r\n     * the display object is darker than 50% gray, the colors are multiplied,\r\n     * which results in a darker color. This setting is commonly used for shading\r\n     * effects.\r\n     *\r\n     * <p>Not supported under GPU rendering.</p>\r\n     */\r\n    BlendMode.HARDLIGHT = \"hardlight\";\r\n    /**\r\n     * Inverts the background.\r\n     */\r\n    BlendMode.INVERT = \"invert\";\r\n    /**\r\n     * Forces the creation of a transparency group for the display object. This\r\n     * means that the display object is precomposed in a temporary buffer before\r\n     * it is processed further. The precomposition is done automatically if the\r\n     * display object is precached by means of bitmap caching or if the display\r\n     * object is a display object container that has at least one child object\r\n     * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\r\n     *\r\n     * <p>Not supported under GPU rendering.</p>\r\n     */\r\n    BlendMode.LAYER = \"layer\";\r\n    /**\r\n     * Selects the lighter of the constituent colors of the display object and\r\n     * the colors of the background(the colors with the larger values). This\r\n     * setting is commonly used for superimposing type.\r\n     *\r\n     * <p>For example, if the display object has a pixel with an RGB value of\r\n     * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n     * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\r\n     * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\r\n     *\r\n     * <p>Not supported under GPU rendering.</p>\r\n     */\r\n    BlendMode.LIGHTEN = \"lighten\";\r\n    /**\r\n     * Multiplies the values of the display object constituent colors by the\r\n     * constituent colors of the background color, and normalizes by dividing by\r\n     * 0xFF, resulting in darker colors. This setting is commonly used for\r\n     * shadows and depth effects.\r\n     *\r\n     * <p>For example, if a constituent color(such as red) of one pixel in the\r\n     * display object and the corresponding color of the pixel in the background\r\n     * both have the value 0x88, the multiplied result is 0x4840. Dividing by\r\n     * 0xFF yields a value of 0x48 for that constituent color, which is a darker\r\n     * shade than the color of the display object or the color of the\r\n     * background.</p>\r\n     */\r\n    BlendMode.MULTIPLY = \"multiply\";\r\n    /**\r\n     * The display object appears in front of the background. Pixel values of the\r\n     * display object override the pixel values of the background. Where the\r\n     * display object is transparent, the background is visible.\r\n     */\r\n    BlendMode.NORMAL = \"normal\";\r\n    /**\r\n     * Adjusts the color of each pixel based on the darkness of the background.\r\n     * If the background is lighter than 50% gray, the display object and\r\n     * background colors are screened, which results in a lighter color. If the\r\n     * background is darker than 50% gray, the colors are multiplied, which\r\n     * results in a darker color. This setting is commonly used for shading\r\n     * effects.\r\n     *\r\n     * <p>Not supported under GPU rendering.</p>\r\n     */\r\n    BlendMode.OVERLAY = \"overlay\";\r\n    /**\r\n     * Multiplies the complement(inverse) of the display object color by the\r\n     * complement of the background color, resulting in a bleaching effect. This\r\n     * setting is commonly used for highlights or to remove black areas of the\r\n     * display object.\r\n     */\r\n    BlendMode.SCREEN = \"screen\";\r\n    /**\r\n     * Uses a shader to define the blend between objects.\r\n     *\r\n     * <p>Setting the <code>blendShader</code> property to a Shader instance\r\n     * automatically sets the display object's <code>blendMode</code> property to\r\n     * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\r\n     * set to <code>BlendMode.SHADER</code> without first setting the\r\n     * <code>blendShader</code> property, the <code>blendMode</code> property is\r\n     * set to <code>BlendMode.NORMAL</code> instead. If the\r\n     * <code>blendShader</code> property is set(which sets the\r\n     * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\r\n     * later the value of the <code>blendMode</code> property is changed, the\r\n     * blend mode can be reset to use the blend shader simply by setting the\r\n     * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\r\n     * <code>blendShader</code> property does not need to be set again except to\r\n     * change the shader that's used to define the blend mode.</p>\r\n     *\r\n     * <p>Not supported under GPU rendering.</p>\r\n     */\r\n    BlendMode.SHADER = \"shader\";\r\n    /**\r\n     * Subtracts the values of the constituent colors in the display object from\r\n     * the values of the background color, applying a floor of 0. This setting is\r\n     * commonly used for animating a darkening dissolve between two objects.\r\n     *\r\n     * <p>For example, if the display object has a pixel with an RGB value of\r\n     * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\r\n     * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\r\n     * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\r\n     */\r\n    BlendMode.SUBTRACT = \"subtract\";\r\n    return BlendMode;\r\n}());\r\nexports.BlendMode = BlendMode;\r\n},{}],\"awayjs-core/lib/image/CPUCanvas\":[function(require,module,exports){\n\"use strict\";\r\nvar CPURenderingContext2D_1 = require(\"../image/CPURenderingContext2D\");\r\nvar ImageData_1 = require(\"../image/ImageData\");\r\nvar CPUCanvas = (function () {\r\n    function CPUCanvas() {\r\n        this.width = 1;\r\n        this.height = 1;\r\n        this.reset();\r\n    }\r\n    CPUCanvas.prototype.getContext = function (contextId) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        return new CPURenderingContext2D_1.CPURenderingContext2D(this);\r\n    };\r\n    CPUCanvas.prototype.reset = function () {\r\n        if (!this.imageData) {\r\n            this.imageData = new ImageData_1.ImageData(this.width, this.height);\r\n        }\r\n        else {\r\n            this.imageData.width = this.width;\r\n            this.imageData.height = this.height;\r\n            if (this.imageData.data) {\r\n                //this.imageData.data.length = 0;\r\n                this.imageData.data = null;\r\n            }\r\n            this.imageData.data = new Uint8Array(this.width * this.height * 4);\r\n        }\r\n        for (var i = 0; i < this.width * this.height * 4; i += 4) {\r\n            this.imageData.data[i] = 255;\r\n            this.imageData.data[i + 1] = 255;\r\n            this.imageData.data[i + 2] = 255;\r\n            this.imageData.data[i + 3] = 255;\r\n        }\r\n    };\r\n    CPUCanvas.prototype.getImageData = function () {\r\n        if (this.imageData.width != this.width || this.imageData.height != this.height) {\r\n            this.reset();\r\n        }\r\n        return this.imageData;\r\n    };\r\n    return CPUCanvas;\r\n}());\r\nexports.CPUCanvas = CPUCanvas;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = CPUCanvas;\r\n},{\"../image/CPURenderingContext2D\":\"awayjs-core/lib/image/CPURenderingContext2D\",\"../image/ImageData\":\"awayjs-core/lib/image/ImageData\"}],\"awayjs-core/lib/image/CPURenderingContext2D\":[function(require,module,exports){\n\"use strict\";\r\nvar BitmapImage2D_1 = require(\"../image/BitmapImage2D\");\r\nvar Matrix_1 = require(\"../geom/Matrix\");\r\nvar Point_1 = require(\"../geom/Point\");\r\n//TODO: implement all methods\r\nvar CPURenderingContext2D = (function () {\r\n    function CPURenderingContext2D(cpuCanvas) {\r\n        this.point = new Point_1.Point();\r\n        this.point2 = new Point_1.Point();\r\n        this.cpuCanvas = cpuCanvas;\r\n    }\r\n    CPURenderingContext2D.prototype.restore = function () {\r\n        this.matrix = null;\r\n    };\r\n    CPURenderingContext2D.prototype.setTransform = function (m11, m12, m21, m22, dx, dy) {\r\n        this.matrix = new Matrix_1.Matrix(m11, m12, m21, m22, dx, dy);\r\n    };\r\n    CPURenderingContext2D.prototype.save = function () {\r\n    };\r\n    CPURenderingContext2D.prototype.arc = function (x, y, radius, startAngle, endAngle, anticlockwise) {\r\n    };\r\n    CPURenderingContext2D.prototype.measureText = function (text) {\r\n        return undefined;\r\n    };\r\n    CPURenderingContext2D.prototype.isPointInPath = function (x, y, fillRule) {\r\n        return undefined;\r\n    };\r\n    CPURenderingContext2D.prototype.quadraticCurveTo = function (cpx, cpy, x, y) {\r\n    };\r\n    CPURenderingContext2D.prototype.putImageData = function (imagedata, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\r\n    };\r\n    CPURenderingContext2D.prototype.rotate = function (angle) {\r\n    };\r\n    CPURenderingContext2D.prototype.fillText = function (text, x, y, maxWidth) {\r\n    };\r\n    CPURenderingContext2D.prototype.translate = function (x, y) {\r\n    };\r\n    CPURenderingContext2D.prototype.scale = function (x, y) {\r\n    };\r\n    CPURenderingContext2D.prototype.createRadialGradient = function (x0, y0, r0, x1, y1, r1) {\r\n        return undefined;\r\n    };\r\n    CPURenderingContext2D.prototype.ellipse = function (x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\r\n    };\r\n    CPURenderingContext2D.prototype.lineTo = function (x, y) {\r\n    };\r\n    CPURenderingContext2D.prototype.getLineDash = function () {\r\n        return undefined;\r\n    };\r\n    CPURenderingContext2D.prototype.fill = function (fillRule) {\r\n    };\r\n    CPURenderingContext2D.prototype.createImageData = function (imageDataOrSw, sh) {\r\n        return undefined;\r\n    };\r\n    CPURenderingContext2D.prototype.createPattern = function (image, repetition) {\r\n        return undefined;\r\n    };\r\n    CPURenderingContext2D.prototype.closePath = function () {\r\n    };\r\n    CPURenderingContext2D.prototype.rect = function (x, y, w, h) {\r\n    };\r\n    CPURenderingContext2D.prototype.clip = function (fillRule) {\r\n    };\r\n    CPURenderingContext2D.prototype.clearRect = function (x, y, w, h) {\r\n        var imageData = this.cpuCanvas.getImageData();\r\n        for (var i = x; i < x + w; i++) {\r\n            for (var j = y; j < y + h; j++) {\r\n                var index = (i + j * imageData.width) * 4;\r\n                imageData.data[index] = 0;\r\n                imageData.data[index + 1] = 0;\r\n                imageData.data[index + 2] = 0;\r\n                imageData.data[index + 3] = 0;\r\n            }\r\n        }\r\n    };\r\n    CPURenderingContext2D.prototype.moveTo = function (x, y) {\r\n    };\r\n    CPURenderingContext2D.prototype.getImageData = function (sx, sy, sw, sh) {\r\n        //var result:ImageData = new ImageData(sw, sh);\r\n        //var i:number = 0;\r\n        //\r\n        //for (i = 0; i < sw * sh * 4; i += 4) {\r\n        //    result.data[i] = 255;\r\n        //    result.data[i + 1] = 255;\r\n        //    result.data[i + 2] = 255;\r\n        //    result.data[i + 3] = 255;\r\n        //}\r\n        //\r\n        //var imageData:ImageData = this.cpuCanvas.getImageData();\r\n        //for (i = sx; i < sx + sw; i++) {\r\n        //    for (var j:number = sy; j < sy + sh; j++) {\r\n        //        this.copyPixel32(result, i - sx, i - sy, imageData, i, j);\r\n        //    }\r\n        //}\r\n        return this.cpuCanvas.getImageData();\r\n    };\r\n    CPURenderingContext2D.prototype.applyPixel32 = function (target, x, y, color) {\r\n        //todo: blending support\r\n        x = Math.floor(x);\r\n        y = Math.floor(y);\r\n        if (x < 0 || x >= target.width || y >= target.height || y < 0)\r\n            return;\r\n        var index = (x + y * target.width) * 4;\r\n        //var alpha:number = color[3] / 255;\r\n        target.data[index] += color[0];\r\n        target.data[index + 1] += color[1];\r\n        target.data[index + 2] += color[2];\r\n        target.data[index + 3] += color[3];\r\n        //target.data[index] = color[0];\r\n        //target.data[index + 1] = color[1];\r\n        //target.data[index + 2] = color[2];\r\n        //target.data[index + 3] = color[3];\r\n        target.data[index] = target.data[index] & 0xFF;\r\n        target.data[index + 1] = target.data[index + 1] & 0xFF;\r\n        target.data[index + 2] = target.data[index + 2] & 0xFF;\r\n        target.data[index + 3] = target.data[index + 3] & 0xFF;\r\n    };\r\n    CPURenderingContext2D.prototype.copyPixel32 = function (target, x, y, source, fromX, fromY) {\r\n        x = Math.floor(x);\r\n        y = Math.floor(y);\r\n        fromX = Math.floor(fromX);\r\n        fromY = Math.floor(fromY);\r\n        if (x < 0 || x >= target.width || y >= target.height || y < 0)\r\n            return;\r\n        if (fromX < 0 || fromX >= source.width || fromY >= source.height || fromY < 0)\r\n            return;\r\n        var index = (x + y * target.width) * 4;\r\n        var fromIndex = (fromX + fromY * source.width) * 4;\r\n        target.data[index] = source.data[fromIndex];\r\n        target.data[index + 1] = source.data[fromIndex + 1];\r\n        target.data[index + 2] = source.data[fromIndex + 2];\r\n        target.data[index + 3] = source.data[fromIndex + 3];\r\n    };\r\n    CPURenderingContext2D.prototype.fillRect = function (x, y, w, h) {\r\n        if (this.fillStyle) {\r\n            if (this.parsedFillStyle != this.fillStyle) {\r\n                var colorStrings = this.fillStyle.substring(5, this.fillStyle.lastIndexOf(\")\")).split(\",\");\r\n                this.parsedA = parseFloat(colorStrings[3]) * 255;\r\n                this.parsedR = parseInt(colorStrings[0]);\r\n                this.parsedG = parseInt(colorStrings[1]);\r\n                this.parsedB = parseInt(colorStrings[2]);\r\n                this.parsedFillStyle = this.fillStyle;\r\n            }\r\n            var imageData = this.cpuCanvas.getImageData();\r\n            for (var i = x; i < x + w; i++) {\r\n                for (var j = y; j < y + h; j++) {\r\n                    var index = (i + j * imageData.width) * 4;\r\n                    imageData.data[index] = this.parsedR;\r\n                    imageData.data[index + 1] = this.parsedG;\r\n                    imageData.data[index + 2] = this.parsedB;\r\n                    imageData.data[index + 3] = this.parsedA;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CPURenderingContext2D.prototype.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\r\n    };\r\n    CPURenderingContext2D.prototype.drawImage = function (image, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight) {\r\n        var b = image;\r\n        if (image.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\r\n            var bitmap = b;\r\n            bitmap.lock();\r\n            this.drawBitmap(bitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\r\n            bitmap.unlock();\r\n        }\r\n        else if (image.constructor.toString().indexOf(\"HTMLImage\") > -1) {\r\n            var htmlImage = image;\r\n            var htmlCanvas = document.createElement(\"canvas\");\r\n            htmlCanvas.width = htmlImage.width;\r\n            htmlCanvas.height = htmlImage.height;\r\n            var htmlContext = htmlCanvas.getContext(\"2d\");\r\n            htmlContext.drawImage(htmlImage, 0, 0);\r\n            var htmlImageData = htmlContext.getImageData(0, 0, htmlImage.width, htmlImage.height);\r\n            var resultBitmap = new BitmapImage2D_1.BitmapImage2D(htmlImage.width, htmlImage.height, true, 0, false);\r\n            resultBitmap.getImageData().data = htmlImageData.data;\r\n            var passBitmap = resultBitmap;\r\n            this.drawImage(passBitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\r\n        }\r\n        else if (image.constructor.toString().indexOf(\"CPUCanvas\") > -1) {\r\n            //\r\n            var canvas = b;\r\n            this.drawBitmap(canvas, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\r\n        }\r\n    };\r\n    CPURenderingContext2D.prototype.drawBitmap = function (bitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight) {\r\n        if (!width || width == 0) {\r\n            width = bitmap.width;\r\n            height = bitmap.height;\r\n        }\r\n        if (!canvasOffsetX || canvasOffsetX == 0) {\r\n            canvasOffsetX = 0;\r\n            canvasOffsetY = 0;\r\n        }\r\n        if (!canvasImageWidth || canvasImageWidth == 0 || this.matrix) {\r\n            canvasImageWidth = width;\r\n            canvasImageHeight = height;\r\n        }\r\n        //console.log(\"CPURenderingContext2D:drawBitmap(width: \" + width + \" height: \" + height + \" canvasImageWidth: \" + canvasImageWidth + \" canvasImageHeight: \" + canvasImageHeight);\r\n        var sourceData = bitmap.getImageData();\r\n        var canvasImageData = this.cpuCanvas.getImageData();\r\n        if (this.matrix || (canvasImageWidth != width || canvasImageHeight != height)) {\r\n            var matrix = this.matrix;\r\n            if (!matrix) {\r\n                matrix = new Matrix_1.Matrix();\r\n                matrix.scale(canvasImageWidth / width, canvasImageHeight / height);\r\n            }\r\n            var scaleX = Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b);\r\n            var scaleY = Math.sqrt(matrix.c * matrix.c + matrix.d * matrix.d);\r\n            canvasImageWidth = width * scaleX;\r\n            canvasImageHeight = height * scaleY;\r\n            matrix.tx += canvasOffsetX;\r\n            matrix.ty += canvasOffsetY;\r\n            canvasOffsetX = Math.floor(matrix.tx);\r\n            canvasOffsetY = Math.floor(matrix.ty);\r\n            matrix.invert();\r\n            if (scaleX >= 1 || scaleY >= 1) {\r\n                var p = new Point_1.Point();\r\n                for (var i = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\r\n                    for (var j = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\r\n                        p.x = i;\r\n                        p.y = j;\r\n                        p = matrix.transformPoint(p);\r\n                        var color = CPURenderingContext2D.sampleBilinear(p.x, p.y, sourceData);\r\n                        this.applyPixel32(canvasImageData, i, j, color);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                //decimate\r\n                var p1 = this.point;\r\n                var p2 = this.point2;\r\n                for (var i = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\r\n                    for (var j = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\r\n                        p1.x = i;\r\n                        p1.y = j;\r\n                        p1 = matrix.transformPoint(p1);\r\n                        p2.x = i + 1;\r\n                        p2.y = j + 1;\r\n                        p2 = matrix.transformPoint(p2);\r\n                        var color = CPURenderingContext2D.sampleBox(p1.x + offsetX, p1.y + offsetY, p2.x + offsetX, p2.y + offsetY, sourceData);\r\n                        this.applyPixel32(canvasImageData, i, j, color);\r\n                    }\r\n                }\r\n            }\r\n            matrix.invert();\r\n        }\r\n        else {\r\n            for (var i = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\r\n                for (var j = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\r\n                    var color = CPURenderingContext2D.sample(i - canvasOffsetX + offsetX, j - canvasOffsetY + offsetY, sourceData);\r\n                    this.applyPixel32(canvasImageData, i, j, color);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CPURenderingContext2D.prototype.transform = function (m11, m12, m21, m22, dx, dy) {\r\n    };\r\n    CPURenderingContext2D.prototype.stroke = function () {\r\n    };\r\n    CPURenderingContext2D.prototype.strokeRect = function (x, y, w, h) {\r\n    };\r\n    CPURenderingContext2D.prototype.setLineDash = function (segments) {\r\n    };\r\n    CPURenderingContext2D.prototype.strokeText = function (text, x, y, maxWidth) {\r\n    };\r\n    CPURenderingContext2D.prototype.beginPath = function () {\r\n    };\r\n    CPURenderingContext2D.prototype.arcTo = function (x1, y1, x2, y2, radius) {\r\n    };\r\n    CPURenderingContext2D.prototype.createLinearGradient = function (x0, y0, x1, y1) {\r\n        return undefined;\r\n    };\r\n    CPURenderingContext2D.sampleBilinear = function (u, v, texture, texelSizeX, texelSizeY) {\r\n        if (texelSizeX === void 0) { texelSizeX = 1; }\r\n        if (texelSizeY === void 0) { texelSizeY = 1; }\r\n        var color00 = CPURenderingContext2D.sample(u, v, texture);\r\n        var color10 = CPURenderingContext2D.sample(u + texelSizeX, v, texture);\r\n        var color01 = CPURenderingContext2D.sample(u, v + texelSizeY, texture);\r\n        var color11 = CPURenderingContext2D.sample(u + texelSizeX, v + texelSizeY, texture);\r\n        var a = u;\r\n        a = a - Math.floor(a);\r\n        var interColor0 = CPURenderingContext2D.interpolateColor(color00, color10, a);\r\n        var interColor1 = CPURenderingContext2D.interpolateColor(color01, color11, a);\r\n        var b = v;\r\n        b = b - Math.floor(b);\r\n        return CPURenderingContext2D.interpolateColor(interColor0, interColor1, b);\r\n    };\r\n    CPURenderingContext2D.sample = function (u, v, imageData) {\r\n        u = Math.floor(u);\r\n        v = Math.floor(v);\r\n        var result = [0, 0, 0, 0];\r\n        if (u < 0 || u >= imageData.width || v < 0 || v >= imageData.height) {\r\n            return result;\r\n        }\r\n        var index = (u + v * imageData.width) * 4;\r\n        result[0] = imageData.data[index];\r\n        result[1] = imageData.data[index + 1];\r\n        result[2] = imageData.data[index + 2];\r\n        result[3] = imageData.data[index + 3];\r\n        return result;\r\n    };\r\n    CPURenderingContext2D.sampleBox = function (x0, y0, x1, y1, texture) {\r\n        var area = 0; // -- total area accumulated in pixels\r\n        var result = [0, 0, 0, 0];\r\n        var x;\r\n        var y;\r\n        var xsize;\r\n        var ysize;\r\n        var fromY = Math.floor(y0);\r\n        var toY = Math.ceil(y1);\r\n        fromY = Math.max(Math.min(fromY, texture.height - 1), 0);\r\n        toY = Math.max(Math.min(toY, texture.height - 1), 0);\r\n        for (y = fromY; y < toY; y++) {\r\n            ysize = 1;\r\n            if (y < y0) {\r\n                ysize = ysize * (1.0 - (y0 - y));\r\n            }\r\n            if (y > y1) {\r\n                ysize = ysize * (1.0 - (y - y1));\r\n            }\r\n            var fromX = Math.floor(x0);\r\n            var toX = Math.ceil(x1);\r\n            fromX = Math.max(Math.min(fromX, texture.width - 1), 0);\r\n            toX = Math.max(Math.min(toX, texture.width - 1), 0);\r\n            for (x = fromX; x < toX; x++) {\r\n                xsize = ysize;\r\n                var color = CPURenderingContext2D.sample(x, y, texture);\r\n                if (x < x0) {\r\n                    xsize = xsize * (1.0 - (x0 - x));\r\n                }\r\n                if (x > x1) {\r\n                    xsize = xsize * (1.0 - (x - x1));\r\n                }\r\n                result[0] += color[0] * xsize;\r\n                result[1] += color[1] * xsize;\r\n                result[2] += color[2] * xsize;\r\n                result[3] += color[3] * xsize;\r\n                area = area + xsize;\r\n            }\r\n        }\r\n        result[0] /= area;\r\n        result[1] /= area;\r\n        result[2] /= area;\r\n        result[3] /= area;\r\n        result[0] = result[0] & 0xFF;\r\n        result[1] = result[1] & 0xFF;\r\n        result[2] = result[2] & 0xFF;\r\n        result[3] = result[3] & 0xFF;\r\n        return result;\r\n    };\r\n    CPURenderingContext2D.interpolateColor = function (source, target, a) {\r\n        var result = [];\r\n        result[0] = source[0] + (target[0] - source[0]) * a;\r\n        result[1] = source[1] + (target[1] - source[1]) * a;\r\n        result[2] = source[2] + (target[2] - source[2]) * a;\r\n        result[3] = source[3] + (target[3] - source[3]) * a;\r\n        return result;\r\n    };\r\n    return CPURenderingContext2D;\r\n}());\r\nexports.CPURenderingContext2D = CPURenderingContext2D;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = CPURenderingContext2D;\r\n},{\"../geom/Matrix\":\"awayjs-core/lib/geom/Matrix\",\"../geom/Point\":\"awayjs-core/lib/geom/Point\",\"../image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\"}],\"awayjs-core/lib/image/IImageCanvas\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-core/lib/image/Image2D\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ImageBase_1 = require(\"../image/ImageBase\");\r\nvar Rectangle_1 = require(\"../geom/Rectangle\");\r\nvar ImageUtils_1 = require(\"../utils/ImageUtils\");\r\nvar Image2D = (function (_super) {\r\n    __extends(Image2D, _super);\r\n    /**\r\n     *\r\n     */\r\n    function Image2D(width, height, powerOfTwo) {\r\n        if (powerOfTwo === void 0) { powerOfTwo = true; }\r\n        _super.call(this);\r\n        this._powerOfTwo = true;\r\n        this._rect = new Rectangle_1.Rectangle(0, 0, width, height);\r\n        this._powerOfTwo = powerOfTwo;\r\n        this._testDimensions();\r\n    }\r\n    Object.defineProperty(Image2D.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return Image2D.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Image2D.prototype, \"height\", {\r\n        /**\r\n         * The height of the image in pixels.\r\n         */\r\n        get: function () {\r\n            return this._rect.height;\r\n        },\r\n        set: function (value) {\r\n            if (this._rect.height == value)\r\n                return;\r\n            this._setSize(this._rect.width, value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Image2D.prototype, \"rect\", {\r\n        /**\r\n         * The rectangle that defines the size and location of the bitmap image. The\r\n         * top and left of the rectangle are 0; the width and height are equal to the\r\n         * width and height in pixels of the BitmapData object.\r\n         */\r\n        get: function () {\r\n            return this._rect;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Image2D.prototype, \"width\", {\r\n        /**\r\n         * The width of the bitmap image in pixels.\r\n         */\r\n        get: function () {\r\n            return this._rect.width;\r\n        },\r\n        set: function (value) {\r\n            if (this._rect.width == value)\r\n                return;\r\n            this._setSize(value, this._rect.height);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param width\r\n     * @param height\r\n     * @private\r\n     */\r\n    Image2D.prototype._setSize = function (width, height) {\r\n        if (this._rect.width != width || this._rect.height != height)\r\n            this.clear();\r\n        this._rect.width = width;\r\n        this._rect.height = height;\r\n        this._testDimensions();\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Image2D.prototype._testDimensions = function () {\r\n        if (this._powerOfTwo && (!ImageUtils_1.ImageUtils.isDimensionValid(this._rect.width) || !ImageUtils_1.ImageUtils.isDimensionValid(this._rect.height)))\r\n            throw new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\r\n    };\r\n    Object.defineProperty(Image2D.prototype, \"powerOfTwo\", {\r\n        /**\r\n         * Enable POT texture size validation\r\n         * @returns {boolean}\r\n         */\r\n        get: function () {\r\n            return this._powerOfTwo;\r\n        },\r\n        set: function (value) {\r\n            if (this._powerOfTwo == value)\r\n                return;\r\n            this._powerOfTwo = value;\r\n            this._testDimensions();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Image2D.assetType = \"[image Image2D]\";\r\n    return Image2D;\r\n}(ImageBase_1.ImageBase));\r\nexports.Image2D = Image2D;\r\n},{\"../geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"../image/ImageBase\":\"awayjs-core/lib/image/ImageBase\",\"../utils/ImageUtils\":\"awayjs-core/lib/utils/ImageUtils\"}],\"awayjs-core/lib/image/ImageBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetBase_1 = require(\"../library/AssetBase\");\r\nvar ImageBase = (function (_super) {\r\n    __extends(ImageBase, _super);\r\n    /**\r\n     *\r\n     */\r\n    function ImageBase() {\r\n        _super.call(this);\r\n        this._pFormat = \"bgra\";\r\n    }\r\n    Object.defineProperty(ImageBase.prototype, \"format\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return this._pFormat;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ImageBase;\r\n}(AssetBase_1.AssetBase));\r\nexports.ImageBase = ImageBase;\r\n},{\"../library/AssetBase\":\"awayjs-core/lib/library/AssetBase\"}],\"awayjs-core/lib/image/ImageCube\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ImageBase_1 = require(\"../image/ImageBase\");\r\nvar ImageUtils_1 = require(\"../utils/ImageUtils\");\r\nvar ImageCube = (function (_super) {\r\n    __extends(ImageCube, _super);\r\n    /**\r\n     *\r\n     */\r\n    function ImageCube(size) {\r\n        _super.call(this);\r\n        this._size = size;\r\n        this._testDimensions();\r\n    }\r\n    Object.defineProperty(ImageCube.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return ImageCube.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ImageCube.prototype, \"size\", {\r\n        /**\r\n         * The size of the cube bitmap in pixels.\r\n         */\r\n        get: function () {\r\n            return this._size;\r\n        },\r\n        set: function (value) {\r\n            if (this._size == value)\r\n                return;\r\n            this._setSize(this._size);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param width\r\n     * @param height\r\n     * @private\r\n     */\r\n    ImageCube.prototype._setSize = function (size) {\r\n        if (this._size != size)\r\n            this.clear();\r\n        this._size = size;\r\n        this._testDimensions();\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    ImageCube.prototype._testDimensions = function () {\r\n        if (!ImageUtils_1.ImageUtils.isDimensionValid(this._size))\r\n            throw new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\r\n    };\r\n    ImageCube.assetType = \"[image ImageCube]\";\r\n    return ImageCube;\r\n}(ImageBase_1.ImageBase));\r\nexports.ImageCube = ImageCube;\r\n},{\"../image/ImageBase\":\"awayjs-core/lib/image/ImageBase\",\"../utils/ImageUtils\":\"awayjs-core/lib/utils/ImageUtils\"}],\"awayjs-core/lib/image/ImageData\":[function(require,module,exports){\n\"use strict\";\r\nvar ImageData = (function () {\r\n    function ImageData(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.data = new Uint8Array(width * height * 4);\r\n    }\r\n    return ImageData;\r\n}());\r\nexports.ImageData = ImageData;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = ImageData;\r\n},{}],\"awayjs-core/lib/image/Sampler2D\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar SamplerBase_1 = require(\"../image/SamplerBase\");\r\n/**\r\n * The Sampler2D export class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Sampler2D()</code> constructor.\r\n *\r\n * <p>The <code>Sampler2D()</code> constructor allows you to create a Sampler2D\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Sampler2D object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Sampler2D object can share its Image2D reference among several Sampler2D\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Sampler2D objects that reference the same Image2D object,\r\n * multiple texture objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each texture\r\n * object instance.</p>\r\n\r\n */\r\nvar Sampler2D = (function (_super) {\r\n    __extends(Sampler2D, _super);\r\n    /**\r\n     *\r\n     * @param image2D\r\n     * @param smoothing\r\n     */\r\n    function Sampler2D(repeat, smooth, mipmap) {\r\n        if (repeat === void 0) { repeat = false; }\r\n        if (smooth === void 0) { smooth = false; }\r\n        if (mipmap === void 0) { mipmap = false; }\r\n        _super.call(this, smooth, mipmap);\r\n        this._repeat = repeat;\r\n        this._updateRect();\r\n    }\r\n    Object.defineProperty(Sampler2D.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return Sampler2D.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sampler2D.prototype, \"repeat\", {\r\n        /**\r\n         * Controls whether or not the Sampler2D object is snapped to the nearest pixel.\r\n         * This value is ignored in the native and HTML5 targets.\r\n         * The PixelSnapping export class includes possible values:\r\n         * <ul>\r\n         *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n         *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n         * the nearest pixel, independent of transformation.</li>\r\n         *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n         * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n         * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n         * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n         * When targeting Flash Player, this value allows the image to be drawn as fast\r\n         * as possible using the internal vector renderer.</li>\r\n         * </ul>\r\n         */\r\n        //var pixelSnapping:PixelSnapping;\r\n        /**\r\n         * Controls whether or not the bitmap is smoothed when scaled. If\r\n         * <code>true</code>, the bitmap is smoothed when scaled. If\r\n         * <code>false</code>, the bitmap is not smoothed when scaled.\r\n         */\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._repeat;\r\n        },\r\n        set: function (value) {\r\n            if (this._repeat == value)\r\n                return;\r\n            this._repeat = value;\r\n            //TODO: update dependencies\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sampler2D.prototype, \"imageRect\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._imageRect;\r\n        },\r\n        set: function (value) {\r\n            if (this._imageRect == value)\r\n                return;\r\n            this._imageRect = value;\r\n            this._updateRect();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sampler2D.prototype, \"frameRect\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._frameRect;\r\n        },\r\n        set: function (value) {\r\n            if (this._frameRect == value)\r\n                return;\r\n            this._frameRect = value;\r\n            this._updateRect();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Sampler2D.prototype._updateRect = function () {\r\n    };\r\n    Sampler2D.assetType = \"[asset Sampler2D]\";\r\n    return Sampler2D;\r\n}(SamplerBase_1.SamplerBase));\r\nexports.Sampler2D = Sampler2D;\r\n},{\"../image/SamplerBase\":\"awayjs-core/lib/image/SamplerBase\"}],\"awayjs-core/lib/image/SamplerBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetBase_1 = require(\"../library/AssetBase\");\r\n/**\r\n *\r\n */\r\nvar SamplerBase = (function (_super) {\r\n    __extends(SamplerBase, _super);\r\n    /**\r\n     *\r\n     */\r\n    function SamplerBase(smooth, mipmap) {\r\n        if (smooth === void 0) { smooth = false; }\r\n        if (mipmap === void 0) { mipmap = false; }\r\n        _super.call(this);\r\n        this._smooth = smooth;\r\n        this._mipmap = mipmap;\r\n    }\r\n    Object.defineProperty(SamplerBase.prototype, \"smooth\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._smooth;\r\n        },\r\n        set: function (value) {\r\n            if (this._smooth == value)\r\n                return;\r\n            this._smooth = value;\r\n            //TODO: update dependencies\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SamplerBase.prototype, \"mipmap\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._mipmap;\r\n        },\r\n        set: function (value) {\r\n            if (this._mipmap == value)\r\n                return;\r\n            this._mipmap = value;\r\n            //TODO: update dependencies\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SamplerBase;\r\n}(AssetBase_1.AssetBase));\r\nexports.SamplerBase = SamplerBase;\r\n},{\"../library/AssetBase\":\"awayjs-core/lib/library/AssetBase\"}],\"awayjs-core/lib/image/SamplerCube\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar SamplerBase_1 = require(\"../image/SamplerBase\");\r\n/**\r\n * The Bitmap export class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Bitmap()</code> constructor.\r\n *\r\n * <p>The <code>Bitmap()</code> constructor allows you to create a Bitmap\r\n * object that contains a reference to a BitmapData object. After you create a\r\n * Bitmap object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Bitmap object can share its BitmapData reference among several Bitmap\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Bitmap objects that reference the same BitmapData object,\r\n * multiple texture objects can use the same complex BitmapData object without\r\n * incurring the memory overhead of a BitmapData object for each texture\r\n * object instance.</p>\r\n\r\n */\r\nvar SamplerCube = (function (_super) {\r\n    __extends(SamplerCube, _super);\r\n    /**\r\n     *\r\n     * @param bitmapData\r\n     * @param smoothing\r\n     */\r\n    function SamplerCube(smooth, mipmap) {\r\n        if (smooth === void 0) { smooth = false; }\r\n        if (mipmap === void 0) { mipmap = false; }\r\n        _super.call(this, smooth, mipmap);\r\n    }\r\n    Object.defineProperty(SamplerCube.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return SamplerCube.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SamplerCube.assetType = \"[asset SamplerCube]\";\r\n    return SamplerCube;\r\n}(SamplerBase_1.SamplerBase));\r\nexports.SamplerCube = SamplerCube;\r\n},{\"../image/SamplerBase\":\"awayjs-core/lib/image/SamplerBase\"}],\"awayjs-core/lib/image/SpecularImage2D\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar BitmapImage2D_1 = require(\"../image/BitmapImage2D\");\r\nvar BitmapImageChannel_1 = require(\"../image/BitmapImageChannel\");\r\nvar Image2D_1 = require(\"../image/Image2D\");\r\nvar Point_1 = require(\"../geom/Point\");\r\n/**\r\n *\r\n */\r\nvar SpecularImage2D = (function (_super) {\r\n    __extends(SpecularImage2D, _super);\r\n    /**\r\n     *\r\n     */\r\n    function SpecularImage2D(specularSource, glossSource) {\r\n        if (specularSource === void 0) { specularSource = null; }\r\n        if (glossSource === void 0) { glossSource = null; }\r\n        _super.call(this, 1, 1);\r\n        this._specularSource = specularSource;\r\n        this._glossSource = glossSource;\r\n        this._output = new BitmapImage2D_1.BitmapImage2D(1, 1, false, 0xffffff);\r\n        this._testSize();\r\n    }\r\n    Object.defineProperty(SpecularImage2D.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return SpecularImage2D.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SpecularImage2D.prototype, \"specularSource\", {\r\n        get: function () {\r\n            return this._specularSource;\r\n        },\r\n        set: function (value) {\r\n            if (this._specularSource == value)\r\n                return;\r\n            this._specularSource = value;\r\n            this.invalidate();\r\n            this._testSize();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SpecularImage2D.prototype, \"glossSource\", {\r\n        get: function () {\r\n            return this._glossSource;\r\n        },\r\n        set: function (value) {\r\n            if (this._glossSource == value)\r\n                return;\r\n            this._glossSource = value;\r\n            this.invalidate();\r\n            this._testSize();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new SpecularImage2D object that is a clone of the original instance\r\n     * with an exact copy of the contained bitmap.\r\n     *\r\n     * @return A new SpecularImage2D object that is identical to the original.\r\n     */\r\n    SpecularImage2D.prototype.clone = function () {\r\n        return new SpecularImage2D(this._specularSource, this._glossSource);\r\n    };\r\n    /**\r\n     * Frees memory that is used to store the SpecularImage2D object.\r\n     *\r\n     * <p>When the <code>dispose()</code> method is called on an image, the width\r\n     * and height of the image are set to 0. All subsequent calls to methods or\r\n     * properties of this SpecularImage2D instance fail, and an exception is thrown.\r\n     * </p>\r\n     *\r\n     * <p><code>SpecularImage2D.dispose()</code> releases the memory occupied by the\r\n     * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\r\n     * memory). After using <code>SpecularImage2D.dispose()</code>, the SpecularImage2D\r\n     * object is no longer usable and an exception may be thrown if\r\n     * you call functions on the SpecularImage2D object. However,\r\n     * <code>SpecularImage2D.dispose()</code> does not garbage collect the SpecularImage2D\r\n     * object(approximately 128 bytes); the memory occupied by the actual\r\n     * SpecularImage2D object is released at the time the SpecularImage2D object is\r\n     * collected by the garbage collector.</p>\r\n     *\r\n     */\r\n    SpecularImage2D.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        this._rect = null;\r\n        this._output.dispose();\r\n    };\r\n    /**\r\n     *\r\n     * @returns {ImageData}\r\n     */\r\n    SpecularImage2D.prototype.getImageData = function () {\r\n        var origin = new Point_1.Point();\r\n        this._output.fillRect(this._rect, 0xffffff);\r\n        if (this._glossSource)\r\n            this._output.copyChannel(this._glossSource, this._rect, origin, BitmapImageChannel_1.BitmapImageChannel.GREEN, BitmapImageChannel_1.BitmapImageChannel.GREEN);\r\n        if (this._specularSource)\r\n            this._output.copyChannel(this._specularSource, this._rect, origin, BitmapImageChannel_1.BitmapImageChannel.RED, BitmapImageChannel_1.BitmapImageChannel.RED);\r\n        return this._output.getImageData();\r\n    };\r\n    /**\r\n     *\r\n     * @returns {HTMLCanvasElement}\r\n     */\r\n    SpecularImage2D.prototype.getCanvas = function () {\r\n        return this._output.getCanvas();\r\n    };\r\n    /**\r\n     *\r\n     * @param width\r\n     * @param height\r\n     * @private\r\n     */\r\n    SpecularImage2D.prototype._setSize = function (width, height) {\r\n        _super.prototype._setSize.call(this, width, height);\r\n        this._output._setSize(width, height);\r\n    };\r\n    SpecularImage2D.prototype._testSize = function () {\r\n        var w, h;\r\n        if (this._specularSource) {\r\n            w = this._specularSource.width;\r\n            h = this._specularSource.height;\r\n        }\r\n        else if (this._glossSource) {\r\n            w = this._glossSource.width;\r\n            h = this._glossSource.height;\r\n        }\r\n        else {\r\n            w = 1;\r\n            h = 1;\r\n        }\r\n        if (w != this._output.width && h != this._output.height) {\r\n            this._output.dispose();\r\n            this._output = new BitmapImage2D_1.BitmapImage2D(w, h, false, 0xffffff);\r\n        }\r\n        this._setSize(w, h);\r\n    };\r\n    SpecularImage2D.assetType = \"[asset SpecularImage2D]\";\r\n    return SpecularImage2D;\r\n}(Image2D_1.Image2D));\r\nexports.SpecularImage2D = SpecularImage2D;\r\n},{\"../geom/Point\":\"awayjs-core/lib/geom/Point\",\"../image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\",\"../image/BitmapImageChannel\":\"awayjs-core/lib/image/BitmapImageChannel\",\"../image/Image2D\":\"awayjs-core/lib/image/Image2D\"}],\"awayjs-core/lib/image\":[function(require,module,exports){\n\"use strict\";\r\nvar BitmapImage2D_1 = require(\"./image/BitmapImage2D\");\r\nexports.BitmapImage2D = BitmapImage2D_1.BitmapImage2D;\r\nvar BitmapImageChannel_1 = require(\"./image/BitmapImageChannel\");\r\nexports.BitmapImageChannel = BitmapImageChannel_1.BitmapImageChannel;\r\nvar BitmapImageCube_1 = require(\"./image/BitmapImageCube\");\r\nexports.BitmapImageCube = BitmapImageCube_1.BitmapImageCube;\r\nvar BlendMode_1 = require(\"./image/BlendMode\");\r\nexports.BlendMode = BlendMode_1.BlendMode;\r\nvar CPUCanvas_1 = require(\"./image/CPUCanvas\");\r\nexports.CPUCanvas = CPUCanvas_1.CPUCanvas;\r\nvar CPURenderingContext2D_1 = require(\"./image/CPURenderingContext2D\");\r\nexports.CPURenderingContext2D = CPURenderingContext2D_1.CPURenderingContext2D;\r\nvar Image2D_1 = require(\"./image/Image2D\");\r\nexports.Image2D = Image2D_1.Image2D;\r\nvar ImageBase_1 = require(\"./image/ImageBase\");\r\nexports.ImageBase = ImageBase_1.ImageBase;\r\nvar ImageCube_1 = require(\"./image/ImageCube\");\r\nexports.ImageCube = ImageCube_1.ImageCube;\r\nvar ImageData_1 = require(\"./image/ImageData\");\r\nexports.ImageData = ImageData_1.ImageData;\r\nvar Sampler2D_1 = require(\"./image/Sampler2D\");\r\nexports.Sampler2D = Sampler2D_1.Sampler2D;\r\nvar SamplerBase_1 = require(\"./image/SamplerBase\");\r\nexports.SamplerBase = SamplerBase_1.SamplerBase;\r\nvar SamplerCube_1 = require(\"./image/SamplerCube\");\r\nexports.SamplerCube = SamplerCube_1.SamplerCube;\r\nvar SpecularImage2D_1 = require(\"./image/SpecularImage2D\");\r\nexports.SpecularImage2D = SpecularImage2D_1.SpecularImage2D;\r\n},{\"./image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\",\"./image/BitmapImageChannel\":\"awayjs-core/lib/image/BitmapImageChannel\",\"./image/BitmapImageCube\":\"awayjs-core/lib/image/BitmapImageCube\",\"./image/BlendMode\":\"awayjs-core/lib/image/BlendMode\",\"./image/CPUCanvas\":\"awayjs-core/lib/image/CPUCanvas\",\"./image/CPURenderingContext2D\":\"awayjs-core/lib/image/CPURenderingContext2D\",\"./image/Image2D\":\"awayjs-core/lib/image/Image2D\",\"./image/ImageBase\":\"awayjs-core/lib/image/ImageBase\",\"./image/ImageCube\":\"awayjs-core/lib/image/ImageCube\",\"./image/ImageData\":\"awayjs-core/lib/image/ImageData\",\"./image/Sampler2D\":\"awayjs-core/lib/image/Sampler2D\",\"./image/SamplerBase\":\"awayjs-core/lib/image/SamplerBase\",\"./image/SamplerCube\":\"awayjs-core/lib/image/SamplerCube\",\"./image/SpecularImage2D\":\"awayjs-core/lib/image/SpecularImage2D\"}],\"awayjs-core/lib/library/AbstractionBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetEvent_1 = require(\"../events/AssetEvent\");\r\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\r\n/**\r\n *\r\n * @export class away.pool.AbstractionBase\r\n */\r\nvar AbstractionBase = (function (_super) {\r\n    __extends(AbstractionBase, _super);\r\n    function AbstractionBase(asset, pool) {\r\n        var _this = this;\r\n        _super.call(this);\r\n        this._invalid = true;\r\n        this._asset = asset;\r\n        this._pool = pool;\r\n        this._onClearDelegate = function (event) { return _this.onClear(event); };\r\n        this._onInvalidateDelegate = function (event) { return _this.onInvalidate(event); };\r\n        this._asset.addEventListener(AssetEvent_1.AssetEvent.CLEAR, this._onClearDelegate);\r\n        this._asset.addEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onInvalidateDelegate);\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    AbstractionBase.prototype.onClear = function (event) {\r\n        this._asset.removeEventListener(AssetEvent_1.AssetEvent.CLEAR, this._onClearDelegate);\r\n        this._asset.removeEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onInvalidateDelegate);\r\n        this._pool.clearAbstraction(this._asset);\r\n        this._pool = null;\r\n        this._asset = null;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    AbstractionBase.prototype.onInvalidate = function (event) {\r\n        this._invalid = true;\r\n    };\r\n    return AbstractionBase;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.AbstractionBase = AbstractionBase;\r\n},{\"../events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\"}],\"awayjs-core/lib/library/AssetBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AbstractMethodError_1 = require(\"../errors/AbstractMethodError\");\r\nvar AssetEvent_1 = require(\"../events/AssetEvent\");\r\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\r\nvar AssetBase = (function (_super) {\r\n    __extends(AssetBase, _super);\r\n    function AssetBase(name) {\r\n        if (name === void 0) { name = null; }\r\n        _super.call(this);\r\n        this._id = AssetBase.ID_COUNT++;\r\n        if (name == null)\r\n            name = 'null';\r\n        this._name = name;\r\n        this._originalName = name;\r\n        this.updateFullPath();\r\n    }\r\n    Object.defineProperty(AssetBase.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            throw new AbstractMethodError_1.AbstractMethodError();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AssetBase.prototype, \"originalName\", {\r\n        /**\r\n         * The original name used for this asset in the resource (e.g. file) in which\r\n         * it was found. This may not be the same as <code>name</code>, which may\r\n         * have changed due to of a name conflict.\r\n         */\r\n        get: function () {\r\n            return this._originalName;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AssetBase.prototype, \"id\", {\r\n        /**\r\n         * A unique id for the asset, used to identify assets in an associative array\r\n         */\r\n        get: function () {\r\n            return this._id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AssetBase.prototype, \"name\", {\r\n        get: function () {\r\n            return this._name;\r\n        },\r\n        set: function (val) {\r\n            var prev;\r\n            prev = this._name;\r\n            this._name = val;\r\n            if (this._name == null)\r\n                this._name = 'null';\r\n            this.updateFullPath();\r\n            this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.RENAME, this, prev));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     */\r\n    AssetBase.prototype.invalidate = function () {\r\n        this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.INVALIDATE, this));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AssetBase.prototype.dispose = function () {\r\n        this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.DISPOSE, this));\r\n    };\r\n    AssetBase.prototype.clear = function () {\r\n        this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.CLEAR, this));\r\n    };\r\n    Object.defineProperty(AssetBase.prototype, \"assetNamespace\", {\r\n        get: function () {\r\n            return this._namespace;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AssetBase.prototype, \"assetFullPath\", {\r\n        get: function () {\r\n            return this._full_path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AssetBase.prototype.assetPathEquals = function (name, ns) {\r\n        return (this._name == name && (!ns || this._namespace == ns));\r\n    };\r\n    AssetBase.prototype.isAsset = function (assetClass) {\r\n        return this.assetType == assetClass.assetType;\r\n    };\r\n    AssetBase.prototype.resetAssetPath = function (name, ns, overrideOriginal) {\r\n        if (ns === void 0) { ns = null; }\r\n        if (overrideOriginal === void 0) { overrideOriginal = true; }\r\n        this._name = name ? name : 'null';\r\n        this._namespace = ns ? ns : AssetBase.DEFAULT_NAMESPACE;\r\n        if (overrideOriginal)\r\n            this._originalName = this._name;\r\n        this.updateFullPath();\r\n    };\r\n    AssetBase.prototype.updateFullPath = function () {\r\n        this._full_path = [this._namespace, this._name];\r\n    };\r\n    AssetBase.ID_COUNT = 0;\r\n    AssetBase.DEFAULT_NAMESPACE = 'default';\r\n    return AssetBase;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.AssetBase = AssetBase;\r\n},{\"../errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"../events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\"}],\"awayjs-core/lib/library/AssetLibraryBundle\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetLibraryIterator_1 = require(\"../library/AssetLibraryIterator\");\r\nvar Loader_1 = require(\"../library/Loader\");\r\nvar ConflictPrecedence_1 = require(\"../library/ConflictPrecedence\");\r\nvar ConflictStrategy_1 = require(\"../library/ConflictStrategy\");\r\nvar AssetBase_1 = require(\"../library/AssetBase\");\r\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\r\nvar AssetEvent_1 = require(\"../events/AssetEvent\");\r\nvar URLLoaderEvent_1 = require(\"../events/URLLoaderEvent\");\r\nvar LoaderEvent_1 = require(\"../events/LoaderEvent\");\r\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\r\nvar ParserEvent_1 = require(\"../events/ParserEvent\");\r\n/**\r\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\r\n * Its purpose is to create a container for 3D data management, both before and after parsing.\r\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\r\n */\r\nvar AssetLibraryBundle = (function (_super) {\r\n    __extends(AssetLibraryBundle, _super);\r\n    /**\r\n     * Creates a new <code>AssetLibraryBundle</code> object.\r\n     *\r\n     * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\r\n     */\r\n    function AssetLibraryBundle() {\r\n        var _this = this;\r\n        _super.call(this);\r\n        this._loaderSessionsGarbage = new Array();\r\n        this._assets = new Array(); //new Vector.<IAsset>;\r\n        this._assetDictionary = new Object();\r\n        this._loaderSessions = new Array();\r\n        this.conflictStrategy = ConflictStrategy_1.ConflictStrategy.IGNORE.create();\r\n        this.conflictPrecedence = ConflictPrecedence_1.ConflictPrecedence.FAVOR_NEW;\r\n        this._onAssetRenameDelegate = function (event) { return _this.onAssetRename(event); };\r\n        this._onAssetConflictResolvedDelegate = function (event) { return _this.onAssetConflictResolved(event); };\r\n        this._onResourceCompleteDelegate = function (event) { return _this.onResourceComplete(event); };\r\n        this._onTextureSizeErrorDelegate = function (event) { return _this.onTextureSizeError(event); };\r\n        this._onAssetCompleteDelegate = function (event) { return _this.onAssetComplete(event); };\r\n        this._onLoadErrorDelegate = function (event) { return _this.onLoadError(event); };\r\n        this._onParseErrorDelegate = function (event) { return _this.onParseError(event); };\r\n    }\r\n    /**\r\n     * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\r\n     * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\r\n     * pass a string key to this method to define which bundle should be returned. This is\r\n     * referred to as using the AssetLibrary as a multiton.\r\n     *\r\n     * @param key Defines which multiton instance should be returned.\r\n     * @return An instance of the asset library\r\n     */\r\n    AssetLibraryBundle.getInstance = function (key) {\r\n        if (key === void 0) { key = 'default'; }\r\n        if (!key)\r\n            key = 'default';\r\n        if (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\r\n            AssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\r\n        return AssetLibraryBundle._iInstances[key];\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    AssetLibraryBundle.prototype.enableParser = function (parserClass) {\r\n        Loader_1.Loader.enableParser(parserClass);\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    AssetLibraryBundle.prototype.enableParsers = function (parserClasses) {\r\n        Loader_1.Loader.enableParsers(parserClasses);\r\n    };\r\n    Object.defineProperty(AssetLibraryBundle.prototype, \"conflictStrategy\", {\r\n        /**\r\n         * Defines which strategy should be used for resolving naming conflicts, when two library\r\n         * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\r\n         * is used which means that a numeric suffix is appended to one of the assets. The\r\n         * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\r\n         * be renamed.\r\n         *\r\n         * @see naming.ConflictStrategy\r\n         * @see AssetLibrary.conflictPrecedence\r\n         */\r\n        get: function () {\r\n            return this._strategy;\r\n        },\r\n        set: function (val) {\r\n            if (!val)\r\n                throw new ErrorBase_1.ErrorBase('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\r\n            this._strategy = val.create();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AssetLibraryBundle.prototype, \"conflictPrecedence\", {\r\n        /**\r\n         * Defines which asset should have precedence when resolving a naming conflict between\r\n         * two assets of which one has just been renamed by the user or by a parser. By default\r\n         * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\r\n         * asset will keep it's new name while the older asset gets renamed to not conflict.\r\n         *\r\n         * This property is ignored for conflict strategies that do not actually rename an\r\n         * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\r\n         *\r\n         * @see away.library.ConflictPrecedence\r\n         * @see away.library.ConflictStrategy\r\n         */\r\n        get: function () {\r\n            return this._strategyPreference;\r\n        },\r\n        set: function (val) {\r\n            this._strategyPreference = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Create an AssetLibraryIterator instance that can be used to iterate over the assets\r\n     * in this asset library instance. The iterator can filter assets on asset type and/or\r\n     * namespace. A \"null\" filter value means no filter of that type is used.\r\n     *\r\n     * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\r\n     * null to not filter on asset type.\r\n     * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\r\n     * @param filterFunc Callback function to use when deciding whether an asset should be\r\n     * included in the iteration or not. This needs to be a function that takes a single\r\n     * parameter of type IAsset and returns a boolean where true means it should be included.\r\n     *\r\n     * @see away.library.AssetType\r\n     */\r\n    AssetLibraryBundle.prototype.createIterator = function (assetTypeFilter, namespaceFilter, filterFunc) {\r\n        if (assetTypeFilter === void 0) { assetTypeFilter = null; }\r\n        if (namespaceFilter === void 0) { namespaceFilter = null; }\r\n        if (filterFunc === void 0) { filterFunc = null; }\r\n        return new AssetLibraryIterator_1.AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\r\n    };\r\n    /**\r\n     * Loads a file and (optionally) all of its dependencies.\r\n     *\r\n     * @param req The URLRequest object containing the URL of the file to be loaded.\r\n     * @param context An optional context object providing additional parameters for loading\r\n     * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n     * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\r\n     * @return A handle to the retrieved resource.\r\n     */\r\n    AssetLibraryBundle.prototype.load = function (req, context, ns, parser) {\r\n        if (context === void 0) { context = null; }\r\n        if (ns === void 0) { ns = null; }\r\n        if (parser === void 0) { parser = null; }\r\n        this.getLoader().load(req, context, ns, parser);\r\n    };\r\n    /**\r\n     * Loads a resource from existing data in memory.\r\n     *\r\n     * @param data The data object containing all resource information.\r\n     * @param context An optional context object providing additional parameters for loading\r\n     * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n     * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\r\n     * @return A handle to the retrieved resource.\r\n     */\r\n    AssetLibraryBundle.prototype.loadData = function (data, context, ns, parser) {\r\n        if (context === void 0) { context = null; }\r\n        if (ns === void 0) { ns = null; }\r\n        if (parser === void 0) { parser = null; }\r\n        this.getLoader().loadData(data, '', context, ns, parser);\r\n    };\r\n    AssetLibraryBundle.prototype.getLoader = function () {\r\n        var loader = new Loader_1.Loader();\r\n        this._loaderSessions.push(loader);\r\n        loader.addEventListener(LoaderEvent_1.LoaderEvent.LOAD_COMPLETE, this._onResourceCompleteDelegate);\r\n        loader.addEventListener(AssetEvent_1.AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n        loader.addEventListener(AssetEvent_1.AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n        // Error are handled separately (see documentation for addErrorHandler)\r\n        loader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n        loader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n        return loader;\r\n    };\r\n    AssetLibraryBundle.prototype.disposeLoader = function (loader) {\r\n        var _this = this;\r\n        var index = this._loaderSessions.indexOf(loader);\r\n        this._loaderSessions.splice(index, 1);\r\n        // Add loader to a garbage array - for a collection sweep and kill\r\n        this._loaderSessionsGarbage.push(loader);\r\n        this._gcTimeoutIID = setTimeout(function () { _this.loaderSessionGC(); }, 100);\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    AssetLibraryBundle.prototype.getAsset = function (name, ns) {\r\n        if (ns === void 0) { ns = null; }\r\n        if (this._assetDictDirty)\r\n            this.rehashAssetDict();\r\n        if (ns == null)\r\n            ns = AssetBase_1.AssetBase.DEFAULT_NAMESPACE;\r\n        if (!this._assetDictionary.hasOwnProperty(ns))\r\n            return null;\r\n        return this._assetDictionary[ns][name];\r\n    };\r\n    AssetLibraryBundle.prototype.getAllAssets = function () {\r\n        return this._assets;\r\n    };\r\n    /**\r\n     * Adds an asset to the asset library, first making sure that it's name is unique\r\n     * using the method defined by the <code>conflictStrategy</code> and\r\n     * <code>conflictPrecedence</code> properties.\r\n     */\r\n    AssetLibraryBundle.prototype.addAsset = function (asset) {\r\n        var ns;\r\n        var old;\r\n        // Bail if asset has already been added.\r\n        if (this._assets.indexOf(asset) >= 0)\r\n            return;\r\n        old = this.getAsset(asset.name, asset.assetNamespace);\r\n        ns = asset.assetNamespace || AssetBase_1.AssetBase.DEFAULT_NAMESPACE;\r\n        if (old != null)\r\n            this._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\r\n        //create unique-id (for now this is used in AwayBuilder only\r\n        //asset.id = IDUtil.createUID();\r\n        // Add it\r\n        this._assets.push(asset);\r\n        if (!this._assetDictionary.hasOwnProperty(ns))\r\n            this._assetDictionary[ns] = new Object();\r\n        this._assetDictionary[ns][asset.name] = asset;\r\n        asset.addEventListener(AssetEvent_1.AssetEvent.RENAME, this._onAssetRenameDelegate);\r\n        asset.addEventListener(AssetEvent_1.AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\r\n    };\r\n    /**\r\n     * Removes an asset from the library, and optionally disposes that asset by calling\r\n     * it's disposeAsset() method (which for most assets is implemented as a default\r\n     * version of that type's dispose() method.\r\n     *\r\n     * @param asset The asset which should be removed from this library.\r\n     * @param dispose Defines whether the assets should also be disposed.\r\n     */\r\n    AssetLibraryBundle.prototype.removeAsset = function (asset, dispose) {\r\n        if (dispose === void 0) { dispose = true; }\r\n        var idx;\r\n        this.removeAssetFromDict(asset);\r\n        asset.removeEventListener(AssetEvent_1.AssetEvent.RENAME, this._onAssetRenameDelegate);\r\n        asset.removeEventListener(AssetEvent_1.AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\r\n        idx = this._assets.indexOf(asset);\r\n        if (idx >= 0)\r\n            this._assets.splice(idx, 1);\r\n        if (dispose)\r\n            asset.dispose();\r\n    };\r\n    /**\r\n     * Removes an asset which is specified using name and namespace.\r\n     *\r\n     * @param name The name of the asset to be removed.\r\n     * @param ns The namespace to which the desired asset belongs.\r\n     * @param dispose Defines whether the assets should also be disposed.\r\n     *\r\n     * @see away.library.AssetLibrary.removeAsset()\r\n     */\r\n    AssetLibraryBundle.prototype.removeAssetByName = function (name, ns, dispose) {\r\n        if (ns === void 0) { ns = null; }\r\n        if (dispose === void 0) { dispose = true; }\r\n        var asset = this.getAsset(name, ns);\r\n        if (asset)\r\n            this.removeAsset(asset, dispose);\r\n        return asset;\r\n    };\r\n    /**\r\n     * Removes all assets from the asset library, optionally disposing them as they\r\n     * are removed.\r\n     *\r\n     * @param dispose Defines whether the assets should also be disposed.\r\n     */\r\n    AssetLibraryBundle.prototype.removeAllAssets = function (dispose) {\r\n        if (dispose === void 0) { dispose = true; }\r\n        if (dispose) {\r\n            var asset;\r\n            var len = this._assets.length;\r\n            for (var c = 0; c < len; c++) {\r\n                asset = this._assets[c];\r\n                asset.dispose();\r\n            }\r\n        }\r\n        this._assets.length = 0;\r\n        this.rehashAssetDict();\r\n    };\r\n    /**\r\n     * Removes all assets belonging to a particular namespace (null for default)\r\n     * from the asset library, and optionall disposes them by calling their\r\n     * disposeAsset() method.\r\n     *\r\n     * @param ns The namespace from which all assets should be removed.\r\n     * @param dispose Defines whether the assets should also be disposed.\r\n     *\r\n     * @see away.library.AssetLibrary.removeAsset()\r\n     */\r\n    AssetLibraryBundle.prototype.removeNamespaceAssets = function (ns, dispose) {\r\n        if (ns === void 0) { ns = null; }\r\n        if (dispose === void 0) { dispose = true; }\r\n        var idx = 0;\r\n        var asset;\r\n        var old_assets;\r\n        // Empty the assets vector after having stored a copy of it.\r\n        // The copy will be filled with all assets which weren't removed.\r\n        old_assets = this._assets.concat();\r\n        this._assets.length = 0;\r\n        if (ns == null)\r\n            ns = AssetBase_1.AssetBase.DEFAULT_NAMESPACE;\r\n        var len = old_assets.length;\r\n        for (var d = 0; d < len; d++) {\r\n            asset = old_assets[d];\r\n            // Remove from dict if in the supplied namespace. If not,\r\n            // transfer over to the new vector.\r\n            if (asset.assetNamespace == ns) {\r\n                if (dispose)\r\n                    asset.dispose();\r\n                // Remove asset from dictionary, but don't try to auto-remove\r\n                // the namespace, which will trigger an unnecessarily expensive\r\n                // test that is not needed since we know that the namespace\r\n                // will be empty when loop finishes.\r\n                this.removeAssetFromDict(asset, false);\r\n            }\r\n            else {\r\n                this._assets[idx++] = asset;\r\n            }\r\n        }\r\n        /*\r\n         for each (asset in old_assets) {\r\n         // Remove from dict if in the supplied namespace. If not,\r\n         // transfer over to the new vector.\r\n         if (asset.assetNamespace == ns) {\r\n         if (dispose)\r\n         asset.dispose();\r\n\r\n         // Remove asset from dictionary, but don't try to auto-remove\r\n         // the namespace, which will trigger an unnecessarily expensive\r\n         // test that is not needed since we know that the namespace\r\n         // will be empty when loop finishes.\r\n         removeAssetFromDict(asset, false);\r\n         } else\r\n         _assets[idx++] = asset;\r\n\r\n         }\r\n         */\r\n        // Remove empty namespace\r\n        if (this._assetDictionary.hasOwnProperty(ns))\r\n            delete this._assetDictionary[ns];\r\n    };\r\n    AssetLibraryBundle.prototype.removeAssetFromDict = function (asset, autoRemoveEmptyNamespace) {\r\n        if (autoRemoveEmptyNamespace === void 0) { autoRemoveEmptyNamespace = true; }\r\n        if (this._assetDictDirty)\r\n            this.rehashAssetDict();\r\n        if (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\r\n            if (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\r\n                delete this._assetDictionary[asset.assetNamespace][asset.name];\r\n            if (autoRemoveEmptyNamespace) {\r\n                var key;\r\n                var empty = true;\r\n                for (key in this._assetDictionary[asset.assetNamespace]) {\r\n                    empty = false;\r\n                    break;\r\n                }\r\n                if (empty)\r\n                    delete this._assetDictionary[asset.assetNamespace];\r\n            }\r\n        }\r\n    };\r\n    AssetLibraryBundle.prototype.stopAllLoaders = function () {\r\n        var len = this._loaderSessions.length;\r\n        for (var i = 0; i < len; i++)\r\n            this.killloaderSession(this._loaderSessions[i]);\r\n        this._loaderSessions = new Array();\r\n    };\r\n    AssetLibraryBundle.prototype.rehashAssetDict = function () {\r\n        var asset;\r\n        this._assetDictionary = {};\r\n        var len = this._assets.length;\r\n        for (var c = 0; c < len; c++) {\r\n            asset = this._assets[c];\r\n            if (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\r\n                this._assetDictionary[asset.assetNamespace] = {};\r\n            this._assetDictionary[asset.assetNamespace][asset.name] = asset;\r\n        }\r\n        this._assetDictDirty = false;\r\n    };\r\n    /**\r\n     * Called when a an error occurs during loading.\r\n     */\r\n    AssetLibraryBundle.prototype.onLoadError = function (event) {\r\n        if (this.hasEventListener(URLLoaderEvent_1.URLLoaderEvent.LOAD_ERROR)) {\r\n            this.dispatchEvent(event);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Called when a an error occurs during parsing.\r\n     */\r\n    AssetLibraryBundle.prototype.onParseError = function (event) {\r\n        if (this.hasEventListener(ParserEvent_1.ParserEvent.PARSE_ERROR)) {\r\n            this.dispatchEvent(event);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    AssetLibraryBundle.prototype.onAssetComplete = function (event) {\r\n        // Only add asset to library the first time.\r\n        if (event.type == AssetEvent_1.AssetEvent.ASSET_COMPLETE)\r\n            this.addAsset(event.asset);\r\n        this.dispatchEvent(event);\r\n    };\r\n    AssetLibraryBundle.prototype.onTextureSizeError = function (event) {\r\n        this.dispatchEvent(event);\r\n    };\r\n    /**\r\n     * Called when the resource and all of its dependencies was retrieved.\r\n     */\r\n    AssetLibraryBundle.prototype.onResourceComplete = function (event) {\r\n        var loader = event.target;\r\n        this.dispatchEvent(event);\r\n        this.disposeLoader(loader);\r\n    };\r\n    AssetLibraryBundle.prototype.loaderSessionGC = function () {\r\n        var loader;\r\n        while (this._loaderSessionsGarbage.length > 0) {\r\n            loader = this._loaderSessionsGarbage.pop();\r\n            this.killloaderSession(loader);\r\n        }\r\n        clearTimeout(this._gcTimeoutIID);\r\n        this._gcTimeoutIID = null;\r\n    };\r\n    AssetLibraryBundle.prototype.killloaderSession = function (loader) {\r\n        loader.removeEventListener(LoaderEvent_1.LoaderEvent.LOAD_COMPLETE, this._onResourceCompleteDelegate);\r\n        loader.removeEventListener(AssetEvent_1.AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n        loader.removeEventListener(AssetEvent_1.AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n        loader.stop();\r\n    };\r\n    AssetLibraryBundle.prototype.onAssetRename = function (event) {\r\n        var asset = event.target; // TODO: was ev.currentTarget - watch this var\r\n        var old = this.getAsset(asset.assetNamespace, asset.name);\r\n        if (old != null) {\r\n            this._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\r\n        }\r\n        else {\r\n            var dict = this._assetDictionary[event.asset.assetNamespace];\r\n            if (dict == null)\r\n                return;\r\n            dict[event.prevName] = null;\r\n            dict[event.asset.name] = event.asset;\r\n        }\r\n    };\r\n    AssetLibraryBundle.prototype.onAssetConflictResolved = function (event) {\r\n        this.dispatchEvent(event.clone());\r\n    };\r\n    AssetLibraryBundle._iInstances = new Object();\r\n    return AssetLibraryBundle;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.AssetLibraryBundle = AssetLibraryBundle;\r\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\",\"../events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"../events/LoaderEvent\":\"awayjs-core/lib/events/LoaderEvent\",\"../events/ParserEvent\":\"awayjs-core/lib/events/ParserEvent\",\"../events/URLLoaderEvent\":\"awayjs-core/lib/events/URLLoaderEvent\",\"../library/AssetBase\":\"awayjs-core/lib/library/AssetBase\",\"../library/AssetLibraryIterator\":\"awayjs-core/lib/library/AssetLibraryIterator\",\"../library/ConflictPrecedence\":\"awayjs-core/lib/library/ConflictPrecedence\",\"../library/ConflictStrategy\":\"awayjs-core/lib/library/ConflictStrategy\",\"../library/Loader\":\"awayjs-core/lib/library/Loader\"}],\"awayjs-core/lib/library/AssetLibraryIterator\":[function(require,module,exports){\n\"use strict\";\r\nvar AssetLibraryIterator = (function () {\r\n    function AssetLibraryIterator(assets, assetTypeFilter, namespaceFilter, filterFunc) {\r\n        this._assets = assets;\r\n        this.filter(assetTypeFilter, namespaceFilter, filterFunc);\r\n    }\r\n    Object.defineProperty(AssetLibraryIterator.prototype, \"currentAsset\", {\r\n        get: function () {\r\n            // Return current, or null if no current\r\n            return (this._idx < this._filtered.length) ? this._filtered[this._idx] : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AssetLibraryIterator.prototype, \"numAssets\", {\r\n        get: function () {\r\n            return this._filtered.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AssetLibraryIterator.prototype.next = function () {\r\n        var next = null;\r\n        if (this._idx < this._filtered.length)\r\n            next = this._filtered[this._idx];\r\n        this._idx++;\r\n        return next;\r\n    };\r\n    AssetLibraryIterator.prototype.reset = function () {\r\n        this._idx = 0;\r\n    };\r\n    AssetLibraryIterator.prototype.setIndex = function (index) {\r\n        this._idx = index;\r\n    };\r\n    AssetLibraryIterator.prototype.filter = function (assetTypeFilter, namespaceFilter, filterFunc) {\r\n        if (assetTypeFilter || namespaceFilter) {\r\n            var idx;\r\n            var asset;\r\n            idx = 0;\r\n            this._filtered = new Array(); //new Vector.<IAsset>;\r\n            var l = this._assets.length;\r\n            for (var c = 0; c < l; c++) {\r\n                asset = this._assets[c];\r\n                // Skip this assets if filtering on type and this is wrong type\r\n                if (assetTypeFilter && asset.assetType != assetTypeFilter)\r\n                    continue;\r\n                // Skip this asset if filtering on namespace and this is wrong namespace\r\n                if (namespaceFilter && asset.assetNamespace != namespaceFilter)\r\n                    continue;\r\n                // Skip this asset if a filter func has been provided and it returns false\r\n                if (filterFunc != null && !filterFunc(asset))\r\n                    continue;\r\n                this._filtered[idx++] = asset;\r\n            }\r\n        }\r\n        else {\r\n            this._filtered = this._assets;\r\n        }\r\n    };\r\n    return AssetLibraryIterator;\r\n}());\r\nexports.AssetLibraryIterator = AssetLibraryIterator;\r\n},{}],\"awayjs-core/lib/library/AssetLibrary\":[function(require,module,exports){\n\"use strict\";\r\nvar AssetLibraryBundle_1 = require(\"../library/AssetLibraryBundle\");\r\nvar Loader_1 = require(\"../library/Loader\");\r\n/**\r\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\r\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\r\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\r\n */\r\nvar AssetLibrary = (function () {\r\n    /**\r\n     * Creates a new <code>AssetLibrary</code> object.\r\n     *\r\n     */\r\n    function AssetLibrary() {\r\n    }\r\n    //*/\r\n    /**\r\n     * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\r\n     * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\r\n     * pass a string key to this method to define which bundle should be returned. This is\r\n     * referred to as using the AssetLibraryBundle as a multiton.\r\n     *\r\n     * @param key Defines which multiton instance should be returned.\r\n     * @return An instance of the asset library\r\n     */\r\n    AssetLibrary.getBundle = function (key) {\r\n        if (key === void 0) { key = 'default'; }\r\n        return AssetLibraryBundle_1.AssetLibraryBundle.getInstance(key);\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    AssetLibrary.enableParser = function (parserClass) {\r\n        Loader_1.Loader.enableParser(parserClass);\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    AssetLibrary.enableParsers = function (parserClasses) {\r\n        Loader_1.Loader.enableParsers(parserClasses);\r\n    };\r\n    Object.defineProperty(AssetLibrary, \"conflictStrategy\", {\r\n        /**\r\n         * Short-hand for conflictStrategy property on default asset library bundle.\r\n         *\r\n         * @see AssetLibraryBundle.conflictStrategy\r\n         */\r\n        get: function () {\r\n            return AssetLibrary.getBundle().conflictStrategy;\r\n        },\r\n        set: function (val) {\r\n            AssetLibrary.getBundle().conflictStrategy = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AssetLibrary, \"conflictPrecedence\", {\r\n        /**\r\n         * Short-hand for conflictPrecedence property on default asset library bundle.\r\n         *\r\n         * @see AssetLibraryBundle.conflictPrecedence\r\n         */\r\n        get: function () {\r\n            return AssetLibrary.getBundle().conflictPrecedence;\r\n        },\r\n        set: function (val) {\r\n            AssetLibrary.getBundle().conflictPrecedence = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Short-hand for createIterator() method on default asset library bundle.\r\n     *\r\n     * @see AssetLibraryBundle.createIterator()\r\n     */\r\n    AssetLibrary.createIterator = function (assetTypeFilter, namespaceFilter, filterFunc) {\r\n        if (assetTypeFilter === void 0) { assetTypeFilter = null; }\r\n        if (namespaceFilter === void 0) { namespaceFilter = null; }\r\n        if (filterFunc === void 0) { filterFunc = null; }\r\n        return AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\r\n    };\r\n    /**\r\n     * Short-hand for load() method on default asset library bundle.\r\n     *\r\n     * @see AssetLibraryBundle.load()\r\n     */\r\n    AssetLibrary.load = function (req, context, ns, parser) {\r\n        if (context === void 0) { context = null; }\r\n        if (ns === void 0) { ns = null; }\r\n        if (parser === void 0) { parser = null; }\r\n        AssetLibrary.getBundle().load(req, context, ns, parser);\r\n    };\r\n    /**\r\n     * Short-hand for loadData() method on default asset library bundle.\r\n     *\r\n     * @see AssetLibraryBundle.loadData()\r\n     */\r\n    AssetLibrary.loadData = function (data, context, ns, parser) {\r\n        if (context === void 0) { context = null; }\r\n        if (ns === void 0) { ns = null; }\r\n        if (parser === void 0) { parser = null; }\r\n        AssetLibrary.getBundle().loadData(data, context, ns, parser);\r\n    };\r\n    AssetLibrary.stopLoad = function () {\r\n        AssetLibrary.getBundle().stopAllLoaders();\r\n    };\r\n    AssetLibrary.getLoader = function () {\r\n        return AssetLibrary.getBundle().getLoader();\r\n    };\r\n    /**\r\n     * Short-hand for getAsset() method on default asset library bundle.\r\n     *\r\n     * @see AssetLibraryBundle.getAsset()\r\n     */\r\n    AssetLibrary.getAsset = function (name, ns) {\r\n        if (ns === void 0) { ns = null; }\r\n        return AssetLibrary.getBundle().getAsset(name, ns);\r\n    };\r\n    /**\r\n     * Short-hand for getAsset() method on default asset library bundle.\r\n     *\r\n     * @see AssetLibraryBundle.getAsset()\r\n     */\r\n    AssetLibrary.getAllAssets = function () {\r\n        return AssetLibrary.getBundle().getAllAssets();\r\n    };\r\n    /**\r\n     * Short-hand for addEventListener() method on default asset library bundle.\r\n     */\r\n    AssetLibrary.addEventListener = function (type, listener) {\r\n        AssetLibrary.getBundle().addEventListener(type, listener);\r\n    };\r\n    /**\r\n     * Short-hand for removeEventListener() method on default asset library bundle.\r\n     */\r\n    AssetLibrary.removeEventListener = function (type, listener) {\r\n        AssetLibrary.getBundle().removeEventListener(type, listener);\r\n    };\r\n    /**\r\n     * Short-hand for hasEventListener() method on default asset library bundle.\r\n\r\n     public static hasEventListener(type:string):boolean\r\n     {\r\n        return AssetLibrary.getBundle().hasEventListener(type);\r\n    }\r\n\r\n     public static willTrigger(type:string):boolean\r\n     {\r\n        return getBundle().willTrigger(type);\r\n    }\r\n     */\r\n    /**\r\n     * Short-hand for addAsset() method on default asset library bundle.\r\n     *\r\n     * @see AssetLibraryBundle.addAsset()\r\n     */\r\n    AssetLibrary.addAsset = function (asset) {\r\n        AssetLibrary.getBundle().addAsset(asset);\r\n    };\r\n    /**\r\n     * Short-hand for removeAsset() method on default asset library bundle.\r\n     *\r\n     * @param asset The asset which should be removed from the library.\r\n     * @param dispose Defines whether the assets should also be disposed.\r\n     *\r\n     * @see AssetLibraryBundle.removeAsset()\r\n     */\r\n    AssetLibrary.removeAsset = function (asset, dispose) {\r\n        if (dispose === void 0) { dispose = true; }\r\n        AssetLibrary.getBundle().removeAsset(asset, dispose);\r\n    };\r\n    /**\r\n     * Short-hand for removeAssetByName() method on default asset library bundle.\r\n     *\r\n     * @param name The name of the asset to be removed.\r\n     * @param ns The namespace to which the desired asset belongs.\r\n     * @param dispose Defines whether the assets should also be disposed.\r\n     *\r\n     * @see AssetLibraryBundle.removeAssetByName()\r\n     */\r\n    AssetLibrary.removeAssetByName = function (name, ns, dispose) {\r\n        if (ns === void 0) { ns = null; }\r\n        if (dispose === void 0) { dispose = true; }\r\n        return AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\r\n    };\r\n    /**\r\n     * Short-hand for removeAllAssets() method on default asset library bundle.\r\n     *\r\n     * @param dispose Defines whether the assets should also be disposed.\r\n     *\r\n     * @see AssetLibraryBundle.removeAllAssets()\r\n     */\r\n    AssetLibrary.removeAllAssets = function (dispose) {\r\n        if (dispose === void 0) { dispose = true; }\r\n        AssetLibrary.getBundle().removeAllAssets(dispose);\r\n    };\r\n    /**\r\n     * Short-hand for removeNamespaceAssets() method on default asset library bundle.\r\n     *\r\n     * @see AssetLibraryBundle.removeNamespaceAssets()\r\n     */\r\n    AssetLibrary.removeNamespaceAssets = function (ns, dispose) {\r\n        if (ns === void 0) { ns = null; }\r\n        if (dispose === void 0) { dispose = true; }\r\n        AssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\r\n    };\r\n    return AssetLibrary;\r\n}());\r\nexports.AssetLibrary = AssetLibrary;\r\n},{\"../library/AssetLibraryBundle\":\"awayjs-core/lib/library/AssetLibraryBundle\",\"../library/Loader\":\"awayjs-core/lib/library/Loader\"}],\"awayjs-core/lib/library/ConflictPrecedence\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * Enumaration export class for precedence when resolving naming conflicts in the library.\r\n *\r\n * @see away.library.AssetLibrary.conflictPrecedence\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.naming.ConflictStrategy\r\n */\r\nvar ConflictPrecedence = (function () {\r\n    function ConflictPrecedence() {\r\n    }\r\n    /**\r\n     * Signals that in a conflict, the previous owner of the conflicting name\r\n     * should be favored (and keep it's name) and that the newly renamed asset\r\n     * is reverted to a non-conflicting name.\r\n     */\r\n    ConflictPrecedence.FAVOR_OLD = 'favorOld';\r\n    /**\r\n     * Signales that in a conflict, the newly renamed asset is favored (and keeps\r\n     * it's newly defined name) and that the previous owner of that name gets\r\n     * renamed to a non-conflicting name.\r\n     */\r\n    ConflictPrecedence.FAVOR_NEW = 'favorNew';\r\n    return ConflictPrecedence;\r\n}());\r\nexports.ConflictPrecedence = ConflictPrecedence;\r\n},{}],\"awayjs-core/lib/library/ConflictStrategyBase\":[function(require,module,exports){\n\"use strict\";\r\nvar ConflictPrecedence_1 = require(\"../library/ConflictPrecedence\");\r\nvar AbstractMethodError_1 = require(\"../errors/AbstractMethodError\");\r\nvar AssetEvent_1 = require(\"../events/AssetEvent\");\r\n/**\r\n * Abstract base export class for naming conflict resolution classes. Extend this to create a\r\n * strategy export class which the asset library can use to resolve asset naming conflicts, or\r\n * use one of the bundled concrete strategy classes:\r\n *\r\n * <ul>\r\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\r\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\r\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\r\n * </ul>\r\n *\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.ConflictStrategy\r\n * @see away.library.IgnoreConflictStrategy\r\n * @see away.library.ErrorConflictStrategy\r\n * @see away.library.NumSuffixConflictStrategy\r\n */\r\nvar ConflictStrategyBase = (function () {\r\n    function ConflictStrategyBase() {\r\n    }\r\n    /**\r\n     * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\r\n     * classes.\r\n     */\r\n    ConflictStrategyBase.prototype.resolveConflict = function (changedAsset, oldAsset, assetsDictionary, precedence) {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    /**\r\n     * Create instance of this conflict strategy. Used internally by the AssetLibrary to\r\n     * make sure the same strategy instance is not used in all AssetLibrary instances, which\r\n     * would break any state caching that happens inside the strategy class.\r\n     */\r\n    ConflictStrategyBase.prototype.create = function () {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    /**\r\n     * Provided as a convenience method for all conflict strategy classes, as a way to finalize\r\n     * the conflict resolution by applying the new names and dispatching the correct events.\r\n     */\r\n    ConflictStrategyBase.prototype._pUpdateNames = function (ns, nonConflictingName, oldAsset, newAsset, assetsDictionary, precedence) {\r\n        var loser_prev_name;\r\n        var winner;\r\n        var loser;\r\n        winner = (precedence === ConflictPrecedence_1.ConflictPrecedence.FAVOR_NEW) ? newAsset : oldAsset;\r\n        loser = (precedence === ConflictPrecedence_1.ConflictPrecedence.FAVOR_NEW) ? oldAsset : newAsset;\r\n        loser_prev_name = loser.name;\r\n        assetsDictionary[winner.name] = winner;\r\n        assetsDictionary[nonConflictingName] = loser;\r\n        loser.resetAssetPath(nonConflictingName, ns, false);\r\n        loser.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\r\n    };\r\n    return ConflictStrategyBase;\r\n}());\r\nexports.ConflictStrategyBase = ConflictStrategyBase;\r\n},{\"../errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"../events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"../library/ConflictPrecedence\":\"awayjs-core/lib/library/ConflictPrecedence\"}],\"awayjs-core/lib/library/ConflictStrategy\":[function(require,module,exports){\n\"use strict\";\r\nvar ErrorConflictStrategy_1 = require(\"../library/ErrorConflictStrategy\");\r\nvar IgnoreConflictStrategy_1 = require(\"../library/IgnoreConflictStrategy\");\r\nvar NumSuffixConflictStrategy_1 = require(\"../library/NumSuffixConflictStrategy\");\r\n/**\r\n * Enumeration export class for bundled conflict strategies. Set one of these values (or an\r\n * instance of a self-defined sub-export class of ConflictStrategyBase) to the conflictStrategy\r\n * property on an AssetLibrary to define how that library resolves naming conflicts.\r\n *\r\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\r\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\r\n *\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.naming.ConflictStrategyBase\r\n */\r\nvar ConflictStrategy = (function () {\r\n    function ConflictStrategy(include) {\r\n        //TODO: find out why typescript d.ts files do not include this class\r\n    }\r\n    /**\r\n     * Specifies that in case of a naming conflict, one of the assets will be renamed and\r\n     * a numeric suffix appended to the base name.\r\n     */\r\n    ConflictStrategy.APPEND_NUM_SUFFIX = new NumSuffixConflictStrategy_1.NumSuffixConflictStrategy();\r\n    /**\r\n     * Specifies that naming conflicts should be ignored. This is not recommended in most\r\n     * cases, unless it can be 100% guaranteed that the application does not cause naming\r\n     * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\r\n     */\r\n    ConflictStrategy.IGNORE = new IgnoreConflictStrategy_1.IgnoreConflictStrategy();\r\n    /**\r\n     * Specifies that an error should be thrown if a naming conflict is discovered. Use this\r\n     * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\r\n     * to have the library automatically rename assets to avoid such conflicts.\r\n     */\r\n    ConflictStrategy.THROW_ERROR = new ErrorConflictStrategy_1.ErrorConflictStrategy();\r\n    return ConflictStrategy;\r\n}());\r\nexports.ConflictStrategy = ConflictStrategy;\r\n},{\"../library/ErrorConflictStrategy\":\"awayjs-core/lib/library/ErrorConflictStrategy\",\"../library/IgnoreConflictStrategy\":\"awayjs-core/lib/library/IgnoreConflictStrategy\",\"../library/NumSuffixConflictStrategy\":\"awayjs-core/lib/library/NumSuffixConflictStrategy\"}],\"awayjs-core/lib/library/ErrorConflictStrategy\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ConflictStrategyBase_1 = require(\"../library/ConflictStrategyBase\");\r\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\r\nvar ErrorConflictStrategy = (function (_super) {\r\n    __extends(ErrorConflictStrategy, _super);\r\n    function ErrorConflictStrategy() {\r\n        _super.call(this);\r\n    }\r\n    ErrorConflictStrategy.prototype.resolveConflict = function (changedAsset, oldAsset, assetsDictionary, precedence) {\r\n        throw new ErrorBase_1.ErrorBase('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\r\n    };\r\n    ErrorConflictStrategy.prototype.create = function () {\r\n        return new ErrorConflictStrategy();\r\n    };\r\n    return ErrorConflictStrategy;\r\n}(ConflictStrategyBase_1.ConflictStrategyBase));\r\nexports.ErrorConflictStrategy = ErrorConflictStrategy;\r\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\",\"../library/ConflictStrategyBase\":\"awayjs-core/lib/library/ConflictStrategyBase\"}],\"awayjs-core/lib/library/IAbstractionPool\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-core/lib/library/IAssetClass\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-core/lib/library/IAsset\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-core/lib/library/IDUtil\":[function(require,module,exports){\n\"use strict\";\r\nvar IDUtil = (function () {\r\n    function IDUtil() {\r\n    }\r\n    /**\r\n     *  Generates a UID (unique identifier) based on ActionScript's\r\n     *  pseudo-random number generator and the current time.\r\n     *\r\n     *  <p>The UID has the form\r\n     *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\r\n     *  where X is a hexadecimal digit (0-9, A-F).</p>\r\n     *\r\n     *  <p>This UID will not be truly globally unique; but it is the best\r\n     *  we can do without player support for UID generation.</p>\r\n     *\r\n     *  @return The newly-generated UID.\r\n     *\r\n     *  @langversion 3.0\r\n     *  @playerversion Flash 9\r\n     *  @playerversion AIR 1.1\r\n     *  @productversion Flex 3\r\n     */\r\n    IDUtil.createUID = function () {\r\n        var uid = new Array(36);\r\n        var index = 0;\r\n        var i;\r\n        var j;\r\n        for (i = 0; i < 8; i++)\r\n            uid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random() * 16)];\r\n        for (i = 0; i < 3; i++) {\r\n            uid[index++] = 45; // charCode for \"-\"\r\n            for (j = 0; j < 4; j++)\r\n                uid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random() * 16)];\r\n        }\r\n        uid[index++] = 45; // charCode for \"-\"\r\n        var time = new Date().getTime();\r\n        // Note: time is the number of milliseconds since 1970,\r\n        // which is currently more than one trillion.\r\n        // We use the low 8 hex digits of this number in the UID.\r\n        // Just in case the system clock has been reset to\r\n        // Jan 1-4, 1970 (in which case this number could have only\r\n        // 1-7 hex digits), we pad on the left with 7 zeros\r\n        // before taking the low digits.\r\n        var timeString = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\r\n        for (i = 0; i < 8; i++)\r\n            uid[index++] = timeString.charCodeAt(i);\r\n        for (i = 0; i < 4; i++)\r\n            uid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random() * 16)];\r\n        return String.fromCharCode.apply(null, uid);\r\n    };\r\n    /**\r\n     *  @private\r\n     *  Char codes for 0123456789ABCDEF\r\n     */\r\n    IDUtil.ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\r\n    return IDUtil;\r\n}());\r\nexports.IDUtil = IDUtil;\r\n},{}],\"awayjs-core/lib/library/IgnoreConflictStrategy\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ConflictStrategyBase_1 = require(\"../library/ConflictStrategyBase\");\r\nvar IgnoreConflictStrategy = (function (_super) {\r\n    __extends(IgnoreConflictStrategy, _super);\r\n    function IgnoreConflictStrategy() {\r\n        _super.call(this);\r\n    }\r\n    IgnoreConflictStrategy.prototype.resolveConflict = function (changedAsset, oldAsset, assetsDictionary, precedence) {\r\n        // Do nothing, ignore the fact that there is a conflict.\r\n        return;\r\n    };\r\n    IgnoreConflictStrategy.prototype.create = function () {\r\n        return new IgnoreConflictStrategy();\r\n    };\r\n    return IgnoreConflictStrategy;\r\n}(ConflictStrategyBase_1.ConflictStrategyBase));\r\nexports.IgnoreConflictStrategy = IgnoreConflictStrategy;\r\n},{\"../library/ConflictStrategyBase\":\"awayjs-core/lib/library/ConflictStrategyBase\"}],\"awayjs-core/lib/library/LoaderContext\":[function(require,module,exports){\n\"use strict\";\r\nvar LoaderContext = (function () {\r\n    /**\r\n     * LoaderContext provides configuration for the Loader load() and parse() operations.\r\n     * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\r\n     * embedded data.\r\n     *\r\n     * @see away.loading.Loader\r\n     */\r\n    function LoaderContext(includeDependencies, dependencyBaseUrl) {\r\n        if (includeDependencies === void 0) { includeDependencies = true; }\r\n        if (dependencyBaseUrl === void 0) { dependencyBaseUrl = null; }\r\n        this._includeDependencies = includeDependencies;\r\n        this._dependencyBaseUrl = dependencyBaseUrl || '';\r\n        this._embeddedDataByUrl = {};\r\n        this._remappedUrls = {};\r\n        this._materialMode = LoaderContext.UNDEFINED;\r\n    }\r\n    Object.defineProperty(LoaderContext.prototype, \"includeDependencies\", {\r\n        /**\r\n         * Defines whether dependencies (all files except the one at the URL given to the load() or\r\n         * parseData() operations) should be automatically loaded. Defaults to true.\r\n         */\r\n        get: function () {\r\n            return this._includeDependencies;\r\n        },\r\n        set: function (val) {\r\n            this._includeDependencies = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LoaderContext.prototype, \"materialMode\", {\r\n        /**\r\n         * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\r\n         * Options:\r\n         * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\r\n         * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\r\n         * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._materialMode;\r\n        },\r\n        set: function (materialMode) {\r\n            this._materialMode = materialMode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LoaderContext.prototype, \"dependencyBaseUrl\", {\r\n        /**\r\n         * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\r\n         * Absolute paths will not be affected by the value of this property.\r\n         */\r\n        get: function () {\r\n            return this._dependencyBaseUrl;\r\n        },\r\n        set: function (val) {\r\n            this._dependencyBaseUrl = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LoaderContext.prototype, \"overrideAbsolutePaths\", {\r\n        /**\r\n         * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\r\n         * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\r\n         * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\r\n         */\r\n        get: function () {\r\n            return this._overrideAbsPath;\r\n        },\r\n        set: function (val) {\r\n            this._overrideAbsPath = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LoaderContext.prototype, \"overrideFullURLs\", {\r\n        /**\r\n         * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\r\n         * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\r\n         * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\r\n         */\r\n        get: function () {\r\n            return this._overrideFullUrls;\r\n        },\r\n        set: function (val) {\r\n            this._overrideFullUrls = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Map a URL to another URL, so that files that are referred to by the original URL will instead\r\n     * be loaded from the new URL. Use this when your file structure does not match the one that is\r\n     * expected by the loaded file.\r\n     *\r\n     * @param originalUrl The original URL which is referenced in the loaded resource.\r\n     * @param newUrl The URL from which away.should load the resource instead.\r\n     *\r\n     * @see mapUrlToData()\r\n     */\r\n    LoaderContext.prototype.mapUrl = function (originalUrl, newUrl) {\r\n        this._remappedUrls[originalUrl] = newUrl;\r\n    };\r\n    /**\r\n     * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\r\n     * which it's referenced, the dependency data will be retrieved straight from the memory instead.\r\n     *\r\n     * @param originalUrl The original URL which is referenced in the loaded resource.\r\n     * @param data The embedded data. Can be ByteArray or a export class which can be used to create a bytearray.\r\n     */\r\n    LoaderContext.prototype.mapUrlToData = function (originalUrl, data) {\r\n        this._embeddedDataByUrl[originalUrl] = data;\r\n    };\r\n    /**\r\n     * @private\r\n     * Defines whether embedded data has been mapped to a particular URL.\r\n     */\r\n    LoaderContext.prototype._iHasDataForUrl = function (url) {\r\n        return this._embeddedDataByUrl.hasOwnProperty(url);\r\n    };\r\n    /**\r\n     * @private\r\n     * Returns embedded data for a particular URL.\r\n     */\r\n    LoaderContext.prototype._iGetDataForUrl = function (url) {\r\n        return this._embeddedDataByUrl[url];\r\n    };\r\n    /**\r\n     * @private\r\n     * Defines whether a replacement URL has been mapped to a particular URL.\r\n     */\r\n    LoaderContext.prototype._iHasMappingForUrl = function (url) {\r\n        return this._remappedUrls.hasOwnProperty(url);\r\n    };\r\n    /**\r\n     * @private\r\n     * Returns new (replacement) URL for a particular original URL.\r\n     */\r\n    LoaderContext.prototype._iGetRemappedUrl = function (originalUrl) {\r\n        return this._remappedUrls[originalUrl];\r\n    };\r\n    LoaderContext.UNDEFINED = 0;\r\n    LoaderContext.SINGLEPASS_MATERIALS = 1;\r\n    LoaderContext.MULTIPASS_MATERIALS = 2;\r\n    return LoaderContext;\r\n}());\r\nexports.LoaderContext = LoaderContext;\r\n},{}],\"awayjs-core/lib/library/LoaderInfo\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\r\n/**\r\n * The LoaderInfo export class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main export class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main export class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main export class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n *\r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nvar LoaderInfo = (function (_super) {\r\n    __extends(LoaderInfo, _super);\r\n    function LoaderInfo() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    Object.defineProperty(LoaderInfo.prototype, \"bytes\", {\r\n        /**\r\n         * The bytes associated with a LoaderInfo object.\r\n         *\r\n         * @throws SecurityError If the object accessing this API is prevented from\r\n         *                       accessing the loaded object due to security\r\n         *                       restrictions. This situation can occur, for\r\n         *                       instance, when a Loader object attempts to access\r\n         *                       the <code>contentLoaderInfo.content</code> property\r\n         *                       and it is not granted security permission to access\r\n         *                       the loaded content.\r\n         *\r\n         *                       <p>For more information related to security, see the\r\n         *                       Flash Player Developer Center Topic: <a\r\n         *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n         *                       scope=\"external\">Security</a>.</p>\r\n         */\r\n        get: function () {\r\n            return this._bytes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LoaderInfo.prototype, \"bytesLoaded\", {\r\n        /**\r\n         * The number of bytes that are loaded for the media. When this number equals\r\n         * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n         */\r\n        get: function () {\r\n            return this._bytesLoaded;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LoaderInfo.prototype, \"bytesTotal\", {\r\n        /**\r\n         * The number of compressed bytes in the entire media file.\r\n         *\r\n         * <p>Before the first <code>progress</code> event is dispatched by this\r\n         * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n         * is 0. After the first <code>progress</code> event from the Loader object,\r\n         * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n         * downloaded.</p>\r\n         */\r\n        get: function () {\r\n            return this._bytesTotal;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LoaderInfo.prototype, \"content\", {\r\n        /**\r\n         * The loaded object associated with this LoaderInfo object.\r\n         *\r\n         * @throws SecurityError If the object accessing this API is prevented from\r\n         *                       accessing the loaded object due to security\r\n         *                       restrictions. This situation can occur, for\r\n         *                       instance, when a Loader object attempts to access\r\n         *                       the <code>contentLoaderInfo.content</code> property\r\n         *                       and it is not granted security permission to access\r\n         *                       the loaded content.\r\n         *\r\n         *                       <p>For more information related to security, see the\r\n         *                       Flash Player Developer Center Topic: <a\r\n         *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n         *                       scope=\"external\">Security</a>.</p>\r\n         */\r\n        get: function () {\r\n            return this._content;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LoaderInfo.prototype, \"contentType\", {\r\n        /**\r\n         * The MIME type of the loaded file. The value is <code>null</code> if not\r\n         * enough of the file has loaded in order to determine the type. The\r\n         * following list gives the possible values:\r\n         * <ul>\r\n         *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n         *   <li><code>\"image/jpeg\"</code></li>\r\n         *   <li><code>\"image/gif\"</code></li>\r\n         *   <li><code>\"image/png\"</code></li>\r\n         * </ul>\r\n         */\r\n        get: function () {\r\n            return this._contentType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LoaderInfo.prototype, \"loader\", {\r\n        /**\r\n         * The Loader object associated with this LoaderInfo object. If this\r\n         * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n         * of the main export class of the SWF file, no Loader object is associated.\r\n         *\r\n         * @throws SecurityError If the object accessing this API is prevented from\r\n         *                       accessing the Loader object because of security\r\n         *                       restrictions. This can occur, for instance, when a\r\n         *                       loaded SWF file attempts to access its\r\n         *                       <code>loaderInfo.loader</code> property and it is\r\n         *                       not granted security permission to access the\r\n         *                       loading SWF file.\r\n         *\r\n         *                       <p>For more information related to security, see the\r\n         *                       Flash Player Developer Center Topic: <a\r\n         *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n         *                       scope=\"external\">Security</a>.</p>\r\n         */\r\n        get: function () {\r\n            return this._loader;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LoaderInfo.prototype, \"url\", {\r\n        /**\r\n         * The URL of the media being loaded.\r\n         *\r\n         * <p>Before the first <code>progress</code> event is dispatched by this\r\n         * LoaderInfo object's corresponding Loader object, the value of the\r\n         * <code>url</code> property might reflect only the initial URL specified in\r\n         * the call to the <code>load()</code> method of the Loader object. After the\r\n         * first <code>progress</code> event, the <code>url</code> property reflects\r\n         * the media's final URL, after any redirects and relative URLs are\r\n         * resolved.</p>\r\n         *\r\n         * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n         * see the <code>isURLInaccessible</code> property for details.</p>\r\n         */\r\n        get: function () {\r\n            return this._url;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LoaderInfo;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.LoaderInfo = LoaderInfo;\r\n},{\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\"}],\"awayjs-core/lib/library/Loader\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar URLLoader_1 = require(\"../net/URLLoader\");\r\nvar URLLoaderDataFormat_1 = require(\"../net/URLLoaderDataFormat\");\r\nvar AssetEvent_1 = require(\"../events/AssetEvent\");\r\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\r\nvar URLLoaderEvent_1 = require(\"../events/URLLoaderEvent\");\r\nvar LoaderEvent_1 = require(\"../events/LoaderEvent\");\r\nvar ParserEvent_1 = require(\"../events/ParserEvent\");\r\nvar ResourceDependency_1 = require(\"../parsers/ResourceDependency\");\r\n/**\r\n * Dispatched when any asset finishes parsing. Also see specific events for each\r\n * individual asset type (meshes, materials et c.)\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\r\n/**\r\n * Dispatched when a full resource (including dependencies) finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\r\n/**\r\n * Dispatched when a single dependency (which may be the main file of a resource)\r\n * finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\r\n/**\r\n * Dispatched when an error occurs during loading. I\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\r\n/**\r\n * Dispatched when an error occurs during parsing.\r\n *\r\n * @eventType away.events.ParserEvent\r\n */\r\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\r\n/**\r\n * Dispatched when an image asset dimensions are not a power of 2\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\r\n/**\r\n * Loader can load any file format that away.supports (or for which a third-party parser\r\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\r\n * and for when the resource (or it's dependencies) have been loaded.\r\n *\r\n * The Loader will not make assets available in any other way than through the dispatched\r\n * events. To store assets and make them available at any point from any module in an application,\r\n * use the AssetLibrary to load and manage assets.\r\n *\r\n * @see away.library.AssetLibrary\r\n */\r\nvar Loader = (function (_super) {\r\n    __extends(Loader, _super);\r\n    /**\r\n     * Create a new ResourceLoadSession object.\r\n     */\r\n    function Loader(materialMode) {\r\n        var _this = this;\r\n        if (materialMode === void 0) { materialMode = 0; }\r\n        _super.call(this);\r\n        this._materialMode = materialMode;\r\n        this._stack = new Array();\r\n        this._errorHandlers = new Array();\r\n        this._parseErrorHandlers = new Array();\r\n        this._onReadyForDependenciesDelegate = function (event) { return _this.onReadyForDependencies(event); };\r\n        this._onParseCompleteDelegate = function (event) { return _this.onParseComplete(event); };\r\n        this._onParseErrorDelegate = function (event) { return _this.onParseError(event); };\r\n        this._onLoadCompleteDelegate = function (event) { return _this.onLoadComplete(event); };\r\n        this._onLoadErrorDelegate = function (event) { return _this.onLoadError(event); };\r\n        this._onTextureSizeErrorDelegate = function (event) { return _this.onTextureSizeError(event); };\r\n        this._onAssetCompleteDelegate = function (event) { return _this.onAssetComplete(event); };\r\n    }\r\n    /**\r\n     * Enables a specific parser.\r\n     * When no specific parser is set for a loading/parsing opperation,\r\n     * loader3d can autoselect the correct parser to use.\r\n     * A parser must have been enabled, to be considered when autoselecting the parser.\r\n     *\r\n     * @param parser The parser export class to enable.\r\n     *\r\n     * @see away.parsers.Parsers\r\n     */\r\n    Loader.enableParser = function (parser) {\r\n        if (Loader._parsers.indexOf(parser) < 0)\r\n            Loader._parsers.push(parser);\r\n    };\r\n    /**\r\n     * Enables a list of parsers.\r\n     * When no specific parser is set for a loading/parsing opperation,\r\n     * Loader can autoselect the correct parser to use.\r\n     * A parser must have been enabled, to be considered when autoselecting the parser.\r\n     *\r\n     * @param parsers A Vector of parser classes to enable.\r\n     * @see away.parsers.Parsers\r\n     */\r\n    Loader.enableParsers = function (parsers) {\r\n        for (var c = 0; c < parsers.length; c++)\r\n            Loader.enableParser(parsers[c]);\r\n    };\r\n    Object.defineProperty(Loader.prototype, \"baseDependency\", {\r\n        /**\r\n         * Returns the base dependency of the loader\r\n         */\r\n        get: function () {\r\n            return this._baseDependency;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Loader.prototype, \"loaderInfo\", {\r\n        /**\r\n         * Returns a LoaderInfo object corresponding to the object being loaded.\r\n         * LoaderInfo objects are shared between the Loader object and the loaded\r\n         * content object. The LoaderInfo object supplies loading progress\r\n         * information and statistics about the loaded file.\r\n         *\r\n         * <p>Events related to the load are dispatched by the LoaderInfo object\r\n         * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n         * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n         * LoaderInfo object, even before the content is loaded, so that you can add\r\n         * event listeners to the object prior to the load.</p>\r\n         *\r\n         * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n         * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n         * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n         */\r\n        get: function () {\r\n            return this._loaderInfo;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Loads a file and (optionally) all of its dependencies.\r\n     *\r\n     * @param req The URLRequest object containing the URL of the file to be loaded.\r\n     * @param context An optional context object providing additional parameters for loading\r\n     * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n     * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\r\n     */\r\n    Loader.prototype.load = function (req, context, ns, parser) {\r\n        if (context === void 0) { context = null; }\r\n        if (ns === void 0) { ns = null; }\r\n        if (parser === void 0) { parser = null; }\r\n        this._uri = req.url = req.url.replace(/\\\\/g, \"/\");\r\n        this._context = context;\r\n        this._namespace = ns;\r\n        this._baseDependency = new ResourceDependency_1.ResourceDependency('', req, null, parser, null);\r\n        this.retrieveDependency(this._baseDependency);\r\n    };\r\n    /**\r\n     * Loads a resource from already loaded data.\r\n     *\r\n     * @param data The data object containing all resource information.\r\n     * @param context An optional context object providing additional parameters for loading\r\n     * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n     * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\r\n     */\r\n    Loader.prototype.loadData = function (data, id, context, ns, parser) {\r\n        if (context === void 0) { context = null; }\r\n        if (ns === void 0) { ns = null; }\r\n        if (parser === void 0) { parser = null; }\r\n        this._uri = id;\r\n        this._context = context;\r\n        this._namespace = ns;\r\n        this._baseDependency = new ResourceDependency_1.ResourceDependency(id, null, data, parser, null);\r\n        this.retrieveDependency(this._baseDependency);\r\n    };\r\n    /**\r\n     * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\r\n     * stack when complete and continues on the top set.\r\n     * @param parser The parser that will translate the data into a usable resource.\r\n     */\r\n    Loader.prototype.retrieveNext = function (parser) {\r\n        if (parser === void 0) { parser = null; }\r\n        if (this._currentDependency.dependencies.length) {\r\n            var next = this._currentDependency.dependencies.pop();\r\n            this._stack.push(this._currentDependency);\r\n            this.retrieveDependency(next);\r\n        }\r\n        else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\r\n            this._currentDependency.parser._iResumeParsing();\r\n            this._stack.pop();\r\n        }\r\n        else if (this._stack.length) {\r\n            var prev = this._currentDependency;\r\n            this._currentDependency = this._stack.pop();\r\n            if (prev._iSuccess)\r\n                prev.resolve();\r\n            this.retrieveNext(parser);\r\n        }\r\n        else {\r\n            this.dispatchEvent(new LoaderEvent_1.LoaderEvent(LoaderEvent_1.LoaderEvent.LOAD_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves a single dependency.\r\n     * @param parser The parser that will translate the data into a usable resource.\r\n     */\r\n    Loader.prototype.retrieveDependency = function (dependency) {\r\n        var data;\r\n        if (this._context && this._context.materialMode != 0)\r\n            this._materialMode = this._context.materialMode;\r\n        this._currentDependency = dependency;\r\n        dependency._iLoader = new URLLoader_1.URLLoader();\r\n        this.addEventListeners(dependency._iLoader);\r\n        // Get already loaded (or mapped) data if available\r\n        data = dependency.data;\r\n        if (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\r\n            data = this._context._iGetDataForUrl(dependency.request.url);\r\n        if (data) {\r\n            if (data.constructor === Function)\r\n                data = new data();\r\n            dependency._iSetData(data);\r\n            if (dependency.retrieveAsRawData) {\r\n                // No need to parse. The parent parser is expecting this\r\n                // to be raw data so it can be passed directly.\r\n                dependency.resolve();\r\n                // Move on to next dependency\r\n                this.retrieveNext();\r\n            }\r\n            else {\r\n                this.parseDependency(dependency);\r\n            }\r\n        }\r\n        else {\r\n            // Resolve URL and start loading\r\n            dependency.request.url = this.resolveDependencyUrl(dependency);\r\n            if (dependency.retrieveAsRawData) {\r\n                // Always use binary for raw data loading\r\n                dependency._iLoader.dataFormat = URLLoaderDataFormat_1.URLLoaderDataFormat.BINARY;\r\n            }\r\n            else {\r\n                if (!dependency.parser)\r\n                    dependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\r\n                if (dependency.parser) {\r\n                    dependency._iLoader.dataFormat = dependency.parser.dataFormat;\r\n                }\r\n                else {\r\n                    // Always use BINARY for unknown file formats. The thorough\r\n                    // file type check will determine format after load, and if\r\n                    // binary, a text load will have broken the file data.\r\n                    dependency._iLoader.dataFormat = URLLoaderDataFormat_1.URLLoaderDataFormat.BINARY;\r\n                }\r\n            }\r\n            dependency._iLoader.load(dependency.request);\r\n        }\r\n    };\r\n    Loader.prototype.joinUrl = function (base, end) {\r\n        if (end.charAt(0) == '/' || end.charAt(0) == '\\\\')\r\n            end = end.substr(1);\r\n        if (end.charAt(0) == '.')\r\n            end = end.substr(2);\r\n        if (base.length == 0)\r\n            return end;\r\n        if (base.charAt(base.length - 1) == '/' || base.charAt(base.length - 1) == '\\\\')\r\n            base = base.substr(0, base.length - 1);\r\n        return base.concat('/', end);\r\n    };\r\n    Loader.prototype.resolveDependencyUrl = function (dependency) {\r\n        var scheme_re;\r\n        var base;\r\n        var url = dependency.request.url;\r\n        // Has the user re-mapped this URL?\r\n        if (this._context && this._context._iHasMappingForUrl(url))\r\n            return this._context._iGetRemappedUrl(url);\r\n        // This is the \"base\" dependency, i.e. the actual requested asset.\r\n        // We will not try to resolve this since the user can probably be\r\n        // thrusted to know this URL better than our automatic resolver. :)\r\n        if (url == this._uri)\r\n            return url;\r\n        // Absolute URL? Check if starts with slash or a URL\r\n        // scheme definition (e.g. ftp://, http://, file://)\r\n        scheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\r\n        if (url.charAt(0) == '/') {\r\n            if (this._context && this._context.overrideAbsolutePaths)\r\n                return this.joinUrl(this._context.dependencyBaseUrl, url);\r\n            else\r\n                return url;\r\n        }\r\n        else if (scheme_re.test(url)) {\r\n            // If overriding full URLs, get rid of scheme (e.g. \"http://\")\r\n            // and replace with the dependencyBaseUrl defined by user.\r\n            if (this._context && this._context.overrideFullURLs) {\r\n                var noscheme_url = url.replace(scheme_re, ''); //url['replace'](scheme_re);\r\n                return this.joinUrl(this._context.dependencyBaseUrl, noscheme_url);\r\n            }\r\n        }\r\n        // Since not absolute, just get rid of base file name to find it's\r\n        // folder and then concatenate dynamic URL\r\n        if (this._context && this._context.dependencyBaseUrl) {\r\n            base = this._context.dependencyBaseUrl;\r\n            return this.joinUrl(base, url);\r\n        }\r\n        else {\r\n            base = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\r\n            return this.joinUrl(base, url);\r\n        }\r\n    };\r\n    Loader.prototype.retrieveParserDependencies = function () {\r\n        if (!this._currentDependency)\r\n            return;\r\n        var parserDependancies = this._currentDependency.parser.dependencies;\r\n        var i, len = parserDependancies.length;\r\n        for (i = 0; i < len; i++)\r\n            this._currentDependency.dependencies[i] = parserDependancies[i];\r\n        // Since more dependencies might be added eventually, empty this\r\n        // list so that the same dependency isn't retrieved more than once.\r\n        parserDependancies.length = 0;\r\n        this._stack.push(this._currentDependency);\r\n        this.retrieveNext();\r\n    };\r\n    Loader.prototype.resolveParserDependencies = function () {\r\n        this._currentDependency._iSuccess = true;\r\n        // Retrieve any last dependencies remaining on this parser, or\r\n        // if none exists, just move on.\r\n        if (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))\r\n            this.retrieveParserDependencies();\r\n        else\r\n            this.retrieveNext();\r\n    };\r\n    /**\r\n     * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\r\n     * @param event\r\n     */\r\n    Loader.prototype.onLoadError = function (event) {\r\n        var handled;\r\n        var isDependency = (this._currentDependency != this._baseDependency);\r\n        var loader = event.urlLoader;\r\n        this.removeEventListeners(loader);\r\n        if (this.hasEventListener(URLLoaderEvent_1.URLLoaderEvent.LOAD_ERROR)) {\r\n            this.dispatchEvent(event);\r\n            handled = true;\r\n        }\r\n        else {\r\n            // TODO: Consider not doing this even when Loader does have it's own LOAD_ERROR listener\r\n            var i, len = this._errorHandlers.length;\r\n            for (i = 0; i < len; i++)\r\n                if (!handled)\r\n                    handled = this._errorHandlers[i](event);\r\n        }\r\n        if (handled) {\r\n            //if (isDependency && ! event.isDefaultPrevented()) {\r\n            if (isDependency) {\r\n                this._currentDependency.resolveFailure();\r\n                this.retrieveNext();\r\n            }\r\n            else {\r\n                // Either this was the base file (last left in the stack) or\r\n                // default behavior was prevented by the handlers, and hence\r\n                // there is nothing more to do than clean up and bail.\r\n                this.dispose();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Error event was not handled by listeners directly on Loader or\r\n            // on any of the subscribed loaders (in the list of error handlers.)\r\n            throw new Error();\r\n        }\r\n    };\r\n    /**\r\n     * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\r\n     * @param event\r\n     */\r\n    Loader.prototype.onParseError = function (event) {\r\n        var handled;\r\n        var isDependency = (this._currentDependency != this._baseDependency);\r\n        var loader = event.target;\r\n        this.removeEventListeners(loader);\r\n        if (this.hasEventListener(ParserEvent_1.ParserEvent.PARSE_ERROR)) {\r\n            this.dispatchEvent(event);\r\n            handled = true;\r\n        }\r\n        else {\r\n            // TODO: Consider not doing this even when Loader does\r\n            // have it's own LOAD_ERROR listener\r\n            var i, len = this._parseErrorHandlers.length;\r\n            for (i = 0; i < len; i++)\r\n                if (!handled)\r\n                    handled = this._parseErrorHandlers[i](event);\r\n        }\r\n        if (handled) {\r\n            this.retrieveNext();\r\n        }\r\n        else {\r\n            // Error event was not handled by listeners directly on Loader or\r\n            // on any of the subscribed loaders (in the list of error handlers.)\r\n            throw new Error(event.message);\r\n        }\r\n    };\r\n    Loader.prototype.onAssetComplete = function (event) {\r\n        // Add loaded asset to list of assets retrieved as part\r\n        // of the current dependency. This list will be inspected\r\n        // by the parent parser when dependency is resolved\r\n        if (this._currentDependency)\r\n            this._currentDependency.assets.push(event.asset);\r\n        event.asset.resetAssetPath(event.asset.name, this._namespace);\r\n        if (!this._currentDependency.suppresAssetEvents)\r\n            this.dispatchEvent(event);\r\n    };\r\n    Loader.prototype.onReadyForDependencies = function (event) {\r\n        var parser = event.target;\r\n        if (this._context && !this._context.includeDependencies)\r\n            parser._iResumeParsing();\r\n        else\r\n            this.retrieveParserDependencies();\r\n    };\r\n    /**\r\n     * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\r\n     * @param event\r\n     */\r\n    Loader.prototype.onLoadComplete = function (event) {\r\n        var loader = event.urlLoader;\r\n        this.removeEventListeners(loader);\r\n        // Resolve this dependency\r\n        this._currentDependency._iSetData(loader.data);\r\n        if (this._currentDependency.retrieveAsRawData) {\r\n            // No need to parse this data, which should be returned as is\r\n            this.resolveParserDependencies();\r\n        }\r\n        else {\r\n            this.parseDependency(this._currentDependency);\r\n        }\r\n    };\r\n    /**\r\n     * Called when parsing is complete.\r\n     */\r\n    Loader.prototype.onParseComplete = function (event) {\r\n        var parser = event.target;\r\n        this.resolveParserDependencies(); //resolve in front of removing listeners to allow any remaining asset events to propagate\r\n        parser.removeEventListener(ParserEvent_1.ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\r\n        parser.removeEventListener(ParserEvent_1.ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\r\n        parser.removeEventListener(ParserEvent_1.ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\r\n        parser.removeEventListener(AssetEvent_1.AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n        parser.removeEventListener(AssetEvent_1.AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n    };\r\n    /**\r\n     * Called when an image is too large or it's dimensions are not a power of 2\r\n     * @param event\r\n     */\r\n    Loader.prototype.onTextureSizeError = function (event) {\r\n        event.asset.name = this._currentDependency.resolveName(event.asset);\r\n        this.dispatchEvent(event);\r\n    };\r\n    Loader.prototype.addEventListeners = function (loader) {\r\n        loader.addEventListener(URLLoaderEvent_1.URLLoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\r\n        loader.addEventListener(URLLoaderEvent_1.URLLoaderEvent.LOAD_ERROR, this._onLoadErrorDelegate);\r\n    };\r\n    Loader.prototype.removeEventListeners = function (loader) {\r\n        loader.removeEventListener(URLLoaderEvent_1.URLLoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\r\n        loader.removeEventListener(URLLoaderEvent_1.URLLoaderEvent.LOAD_ERROR, this._onLoadErrorDelegate);\r\n    };\r\n    Loader.prototype.stop = function () {\r\n        this.dispose();\r\n    };\r\n    Loader.prototype.dispose = function () {\r\n        this._errorHandlers = null;\r\n        this._parseErrorHandlers = null;\r\n        this._context = null;\r\n        this._stack = null;\r\n        if (this._currentDependency && this._currentDependency._iLoader)\r\n            this.removeEventListeners(this._currentDependency._iLoader);\r\n        this._currentDependency = null;\r\n    };\r\n    /**\r\n     * @private\r\n     * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\r\n     * add error event listeners to the Loader instance. This system is used instead of\r\n     * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\r\n     * that if hasEventListener() returns true, it's client code that's listening for the\r\n     * event. Secondly, functions added as error handler through this custom method are\r\n     * expected to return a boolean value indicating whether the event was handled (i.e.\r\n     * whether they in turn had any client code listening for the event.) If no handlers\r\n     * return true, the Loader knows that the event wasn't handled and will throw an RTE.\r\n     */\r\n    Loader.prototype._iAddParseErrorHandler = function (handler) {\r\n        if (this._parseErrorHandlers.indexOf(handler) < 0)\r\n            this._parseErrorHandlers.push(handler);\r\n    };\r\n    Loader.prototype._iAddErrorHandler = function (handler) {\r\n        if (this._errorHandlers.indexOf(handler) < 0)\r\n            this._errorHandlers.push(handler);\r\n    };\r\n    /**\r\n     * Guesses the parser to be used based on the file contents.\r\n     * @param data The data to be parsed.\r\n     * @param uri The url or id of the object to be parsed.\r\n     * @return An instance of the guessed parser.\r\n     */\r\n    Loader.prototype.getParserFromData = function (data) {\r\n        var len = Loader._parsers.length;\r\n        // go in reverse order to allow application override of default parser added in away.proper\r\n        for (var i = len - 1; i >= 0; i--)\r\n            if (Loader._parsers[i].supportsData(data))\r\n                return new Loader._parsers[i]();\r\n        return null;\r\n    };\r\n    /**\r\n     * Initiates parsing of the loaded dependency.\r\n     *\r\n     * @param The dependency to be parsed.\r\n     */\r\n    Loader.prototype.parseDependency = function (dependency) {\r\n        var parser = dependency.parser;\r\n        // If no parser has been defined, try to find one by letting\r\n        // all plugged in parsers inspect the actual data.\r\n        if (!parser)\r\n            dependency._iSetParser(parser = this.getParserFromData(dependency.data));\r\n        if (parser) {\r\n            parser.addEventListener(ParserEvent_1.ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\r\n            parser.addEventListener(ParserEvent_1.ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\r\n            parser.addEventListener(ParserEvent_1.ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\r\n            parser.addEventListener(AssetEvent_1.AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n            parser.addEventListener(AssetEvent_1.AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n            if (dependency.request && dependency.request.url)\r\n                parser._iFileName = dependency.request.url;\r\n            parser.materialMode = this._materialMode;\r\n            parser.parseAsync(dependency.data);\r\n        }\r\n        else {\r\n            var handled;\r\n            var message = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\";\r\n            var event = new ParserEvent_1.ParserEvent(ParserEvent_1.ParserEvent.PARSE_ERROR, message);\r\n            if (this.hasEventListener(ParserEvent_1.ParserEvent.PARSE_ERROR)) {\r\n                this.dispatchEvent(event);\r\n                handled = true;\r\n            }\r\n            else {\r\n                // TODO: Consider not doing this even when Loader does\r\n                // have it's own LOAD_ERROR listener\r\n                var i, len = this._parseErrorHandlers.length;\r\n                for (i = 0; i < len; i++)\r\n                    if (!handled)\r\n                        handled = this._parseErrorHandlers[i](event);\r\n            }\r\n            if (handled) {\r\n                this.retrieveNext();\r\n            }\r\n            else {\r\n                // Error event was not handled by listeners directly on Loader or\r\n                // on any of the subscribed loaders (in the list of error handlers.)\r\n                throw new Error(message);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Guesses the parser to be used based on the file extension.\r\n     * @return An instance of the guessed parser.\r\n     */\r\n    Loader.prototype.getParserFromSuffix = function (url) {\r\n        // Get rid of query string if any and extract extension\r\n        var base = (url.indexOf('?') > 0) ? url.split('?')[0] : url;\r\n        var fileExtension = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\r\n        var len = Loader._parsers.length;\r\n        // go in reverse order to allow application override of default parser added in away.proper\r\n        for (var i = len - 1; i >= 0; i--) {\r\n            var parserClass = Loader._parsers[i];\r\n            if (parserClass.supportsType(fileExtension))\r\n                return new parserClass();\r\n        }\r\n        return null;\r\n    };\r\n    // Image parser only parser that is added by default, to save file size.\r\n    Loader._parsers = new Array();\r\n    return Loader;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.Loader = Loader;\r\n},{\"../events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"../events/LoaderEvent\":\"awayjs-core/lib/events/LoaderEvent\",\"../events/ParserEvent\":\"awayjs-core/lib/events/ParserEvent\",\"../events/URLLoaderEvent\":\"awayjs-core/lib/events/URLLoaderEvent\",\"../net/URLLoader\":\"awayjs-core/lib/net/URLLoader\",\"../net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"../parsers/ResourceDependency\":\"awayjs-core/lib/parsers/ResourceDependency\"}],\"awayjs-core/lib/library/NumSuffixConflictStrategy\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ConflictStrategyBase_1 = require(\"../library/ConflictStrategyBase\");\r\nvar NumSuffixConflictStrategy = (function (_super) {\r\n    __extends(NumSuffixConflictStrategy, _super);\r\n    function NumSuffixConflictStrategy(separator) {\r\n        if (separator === void 0) { separator = '.'; }\r\n        _super.call(this);\r\n        this._separator = separator;\r\n        this._next_suffix = {};\r\n    }\r\n    NumSuffixConflictStrategy.prototype.resolveConflict = function (changedAsset, oldAsset, assetsDictionary, precedence) {\r\n        var orig;\r\n        var new_name;\r\n        var base;\r\n        var suffix;\r\n        orig = changedAsset.name;\r\n        if (orig.indexOf(this._separator) >= 0) {\r\n            // Name has an ocurrence of the separator, so get base name and suffix,\r\n            // unless suffix is non-numerical, in which case revert to zero and\r\n            // use entire name as base\r\n            base = orig.substring(0, orig.lastIndexOf(this._separator));\r\n            suffix = parseInt(orig.substring(base.length - 1));\r\n            if (isNaN(suffix)) {\r\n                base = orig;\r\n                suffix = 0;\r\n            }\r\n        }\r\n        else {\r\n            base = orig;\r\n            suffix = 0;\r\n        }\r\n        if (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\r\n            suffix = this._next_suffix[base];\r\n        }\r\n        // Find the first suffixed name that does\r\n        // not collide with other names.\r\n        do {\r\n            suffix++;\r\n            new_name = base.concat(this._separator, suffix.toString());\r\n        } while (assetsDictionary.hasOwnProperty(new_name));\r\n        this._next_suffix[base] = suffix;\r\n        this._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\r\n    };\r\n    NumSuffixConflictStrategy.prototype.create = function () {\r\n        return new NumSuffixConflictStrategy(this._separator);\r\n    };\r\n    return NumSuffixConflictStrategy;\r\n}(ConflictStrategyBase_1.ConflictStrategyBase));\r\nexports.NumSuffixConflictStrategy = NumSuffixConflictStrategy;\r\n},{\"../library/ConflictStrategyBase\":\"awayjs-core/lib/library/ConflictStrategyBase\"}],\"awayjs-core/lib/library\":[function(require,module,exports){\n\"use strict\";\r\nvar AbstractionBase_1 = require(\"./library/AbstractionBase\");\r\nexports.AbstractionBase = AbstractionBase_1.AbstractionBase;\r\nvar AssetBase_1 = require(\"./library/AssetBase\");\r\nexports.AssetBase = AssetBase_1.AssetBase;\r\nvar AssetLibrary_1 = require(\"./library/AssetLibrary\");\r\nexports.AssetLibrary = AssetLibrary_1.AssetLibrary;\r\nvar AssetLibraryBundle_1 = require(\"./library/AssetLibraryBundle\");\r\nexports.AssetLibraryBundle = AssetLibraryBundle_1.AssetLibraryBundle;\r\nvar AssetLibraryIterator_1 = require(\"./library/AssetLibraryIterator\");\r\nexports.AssetLibraryIterator = AssetLibraryIterator_1.AssetLibraryIterator;\r\nvar ConflictPrecedence_1 = require(\"./library/ConflictPrecedence\");\r\nexports.ConflictPrecedence = ConflictPrecedence_1.ConflictPrecedence;\r\nvar ConflictStrategy_1 = require(\"./library/ConflictStrategy\");\r\nexports.ConflictStrategy = ConflictStrategy_1.ConflictStrategy;\r\nvar ConflictStrategyBase_1 = require(\"./library/ConflictStrategyBase\");\r\nexports.ConflictStrategyBase = ConflictStrategyBase_1.ConflictStrategyBase;\r\nvar ErrorConflictStrategy_1 = require(\"./library/ErrorConflictStrategy\");\r\nexports.ErrorConflictStrategy = ErrorConflictStrategy_1.ErrorConflictStrategy;\r\nvar IDUtil_1 = require(\"./library/IDUtil\");\r\nexports.IDUtil = IDUtil_1.IDUtil;\r\nvar IgnoreConflictStrategy_1 = require(\"./library/IgnoreConflictStrategy\");\r\nexports.IgnoreConflictStrategy = IgnoreConflictStrategy_1.IgnoreConflictStrategy;\r\nvar Loader_1 = require(\"./library/Loader\");\r\nexports.Loader = Loader_1.Loader;\r\nvar LoaderContext_1 = require(\"./library/LoaderContext\");\r\nexports.LoaderContext = LoaderContext_1.LoaderContext;\r\nvar LoaderInfo_1 = require(\"./library/LoaderInfo\");\r\nexports.LoaderInfo = LoaderInfo_1.LoaderInfo;\r\nvar NumSuffixConflictStrategy_1 = require(\"./library/NumSuffixConflictStrategy\");\r\nexports.NumSuffixConflictStrategy = NumSuffixConflictStrategy_1.NumSuffixConflictStrategy;\r\n},{\"./library/AbstractionBase\":\"awayjs-core/lib/library/AbstractionBase\",\"./library/AssetBase\":\"awayjs-core/lib/library/AssetBase\",\"./library/AssetLibrary\":\"awayjs-core/lib/library/AssetLibrary\",\"./library/AssetLibraryBundle\":\"awayjs-core/lib/library/AssetLibraryBundle\",\"./library/AssetLibraryIterator\":\"awayjs-core/lib/library/AssetLibraryIterator\",\"./library/ConflictPrecedence\":\"awayjs-core/lib/library/ConflictPrecedence\",\"./library/ConflictStrategy\":\"awayjs-core/lib/library/ConflictStrategy\",\"./library/ConflictStrategyBase\":\"awayjs-core/lib/library/ConflictStrategyBase\",\"./library/ErrorConflictStrategy\":\"awayjs-core/lib/library/ErrorConflictStrategy\",\"./library/IDUtil\":\"awayjs-core/lib/library/IDUtil\",\"./library/IgnoreConflictStrategy\":\"awayjs-core/lib/library/IgnoreConflictStrategy\",\"./library/Loader\":\"awayjs-core/lib/library/Loader\",\"./library/LoaderContext\":\"awayjs-core/lib/library/LoaderContext\",\"./library/LoaderInfo\":\"awayjs-core/lib/library/LoaderInfo\",\"./library/NumSuffixConflictStrategy\":\"awayjs-core/lib/library/NumSuffixConflictStrategy\"}],\"awayjs-core/lib/managers/AudioChannel\":[function(require,module,exports){\n\"use strict\";\r\nvar AudioChannel = (function () {\r\n    function AudioChannel() {\r\n        var _this = this;\r\n        this._isPlaying = false;\r\n        this._isLooping = false;\r\n        this._audioCtx = AudioChannel._audioCtx || (AudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\r\n        this._gainNode = this._audioCtx.createGain();\r\n        this._gainNode = this._audioCtx.createGain();\r\n        this._gainNode.connect(this._audioCtx.destination);\r\n        this._audio = new Audio();\r\n        this._audio.onended = function (event) { return _this._onEnded(event); };\r\n        this._audio[\"crossOrigin\"] = \"anonymous\";\r\n        var source = this._audioCtx.createMediaElementSource(this._audio);\r\n        source.connect(this._gainNode);\r\n    }\r\n    Object.defineProperty(AudioChannel.prototype, \"currentTime\", {\r\n        get: function () {\r\n            return this._audio.currentTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioChannel.prototype, \"volume\", {\r\n        get: function () {\r\n            return this._gainNode.gain.value;\r\n        },\r\n        set: function (value) {\r\n            this._gainNode.gain.value = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AudioChannel.prototype.isPlaying = function () {\r\n        return this._isPlaying;\r\n    };\r\n    AudioChannel.prototype.isLooping = function () {\r\n        return this._isLooping;\r\n    };\r\n    AudioChannel.prototype.isDecoding = function () {\r\n        return false;\r\n    };\r\n    AudioChannel.prototype.play = function (url, offset, loop) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (loop === void 0) { loop = false; }\r\n        this._isPlaying = true;\r\n        this._isLooping = loop;\r\n        this._audio.src = url;\r\n        this._audio.loop = loop;\r\n        this._audio.currentTime = offset;\r\n        this._audio.play();\r\n    };\r\n    AudioChannel.prototype.stop = function () {\r\n        this._audio.pause();\r\n        this._isPlaying = false;\r\n        this._isLooping = false;\r\n    };\r\n    AudioChannel.prototype._onEnded = function (event) {\r\n        this.stop();\r\n    };\r\n    AudioChannel.maxChannels = 16;\r\n    AudioChannel._channels = new Array();\r\n    return AudioChannel;\r\n}());\r\nexports.AudioChannel = AudioChannel;\r\n},{}],\"awayjs-core/lib/managers/AudioManager\":[function(require,module,exports){\n\"use strict\";\r\nvar StreamingAudioChannel_1 = require(\"../managers/StreamingAudioChannel\");\r\nvar WebAudioChannel_1 = require(\"../managers/WebAudioChannel\");\r\nvar AudioManager = (function () {\r\n    function AudioManager() {\r\n    }\r\n    AudioManager.setExternalSoundInterface = function (new_obj) {\r\n        if (new_obj.startSound == null) {\r\n            console.log(\"Could not set the externalSoundInterface, because it does not provide a 'startSound' function\");\r\n            return;\r\n        }\r\n        if (new_obj.stopSound == null) {\r\n            console.log(\"Could not set the externalSoundInterface, because it does not provide a 'stopSound' function\");\r\n            return;\r\n        }\r\n        AudioManager._externalSoundInterface = new_obj;\r\n    };\r\n    AudioManager.getExternalSoundInterface = function () {\r\n        return AudioManager._externalSoundInterface;\r\n    };\r\n    AudioManager.getChannel = function (byteLength) {\r\n        //choose best audio channel by bytelength\r\n        //todo: StreamingAudioChannel doesnt seem to be working. no error, but also no sound is playing\r\n        var channelClass = (byteLength > 50000) ? StreamingAudioChannel_1.StreamingAudioChannel : WebAudioChannel_1.WebAudioChannel;\r\n        //var channelClass:IAudioChannelClass = WebAudioChannel;\r\n        var i = 0;\r\n        while (channelClass._channels[i] && channelClass._channels[i].isPlaying())\r\n            i++;\r\n        if (i == channelClass.maxChannels) {\r\n            //pick the oldest channel to reuse, ignoring looping channels\r\n            var channel;\r\n            var len = channelClass._channels.length;\r\n            for (var j = 0; j < len; j++) {\r\n                channel = channelClass._channels[j];\r\n                if (!channel.isLooping() && !channel.isDecoding()) {\r\n                    channelClass._channels.push(channelClass._channels.splice(j, 1)[0]);\r\n                    channel.stop();\r\n                    return channel;\r\n                }\r\n            }\r\n            //do not return channel until one is freed up\r\n            return null;\r\n        }\r\n        return channelClass._channels[i] || (channelClass._channels[i] = new channelClass());\r\n    };\r\n    //todo: make AudioPlaybackManager keep track of active sounds + implement global playback control\r\n    AudioManager._externalSoundInterface = null;\r\n    return AudioManager;\r\n}());\r\nexports.AudioManager = AudioManager;\r\n},{\"../managers/StreamingAudioChannel\":\"awayjs-core/lib/managers/StreamingAudioChannel\",\"../managers/WebAudioChannel\":\"awayjs-core/lib/managers/WebAudioChannel\"}],\"awayjs-core/lib/managers/EventAudioChannel\":[function(require,module,exports){\n\"use strict\";\r\nvar ParserUtils_1 = require(\"../parsers/ParserUtils\");\r\nvar EventAudioChannel = (function () {\r\n    function EventAudioChannel() {\r\n        var _this = this;\r\n        this._isPlaying = false;\r\n        this._isLooping = false;\r\n        this._startTime = 0;\r\n        this._audio = new Audio();\r\n        this._audio.ontimeupdate = function (event) { return _this._onTimeUpdate(event); };\r\n    }\r\n    Object.defineProperty(EventAudioChannel.prototype, \"duration\", {\r\n        get: function () {\r\n            return this._duration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(EventAudioChannel.prototype, \"currentTime\", {\r\n        get: function () {\r\n            return this._audio.currentTime - this._startTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(EventAudioChannel.prototype, \"volume\", {\r\n        get: function () {\r\n            return this._volume;\r\n        },\r\n        set: function (value) {\r\n            if (this._volume == value)\r\n                return;\r\n            this._volume = value;\r\n            this._audio.volume = this._volume;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    EventAudioChannel.prototype.isPlaying = function () {\r\n        return this._isPlaying;\r\n    };\r\n    EventAudioChannel.prototype.isLooping = function () {\r\n        return this._isLooping;\r\n    };\r\n    EventAudioChannel.prototype.isDecoding = function () {\r\n        return false;\r\n    };\r\n    EventAudioChannel.prototype.play = function (buffer, offset, loop, id) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (loop === void 0) { loop = false; }\r\n        if (id === void 0) { id = 0; }\r\n        this._isPlaying = true;\r\n        this._isLooping = loop;\r\n        this._audio.src = EventAudioChannel._base64Cache[id] || (EventAudioChannel._base64Cache[id] = ParserUtils_1.ParserUtils.arrayBufferToBase64(buffer, \"audio/mp3\"));\r\n        this._audio.loop = this._isLooping;\r\n        this._audio.currentTime = offset;\r\n        this._audio.play();\r\n    };\r\n    EventAudioChannel.prototype.stop = function () {\r\n        this._audio.pause();\r\n        this._isPlaying = false;\r\n        this._isLooping = false;\r\n    };\r\n    EventAudioChannel.prototype._onTimeUpdate = function (event) {\r\n        //TODO: more accurate end detection\r\n        if (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\r\n            this.stop();\r\n    };\r\n    EventAudioChannel.maxChannels = 4;\r\n    EventAudioChannel._channels = new Array();\r\n    EventAudioChannel._base64Cache = new Object();\r\n    return EventAudioChannel;\r\n}());\r\nexports.EventAudioChannel = EventAudioChannel;\r\n},{\"../parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\"}],\"awayjs-core/lib/managers/IAudioChannelClass\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-core/lib/managers/IAudioChannel\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-core/lib/managers/StreamingAudioChannel\":[function(require,module,exports){\n\"use strict\";\r\nvar StreamingAudioChannel = (function () {\r\n    function StreamingAudioChannel() {\r\n        var _this = this;\r\n        this._isPlaying = false;\r\n        this._isLooping = false;\r\n        this._startTime = 0;\r\n        this._sourceOpenDelegate = function (event) { return _this._sourceOpen(event); };\r\n        this._updateEndDelegate = function (event) { return _this._updateEnd(event); };\r\n        this._audio = new Audio();\r\n        this._audio.ontimeupdate = function (event) { return _this._onTimeUpdate(event); };\r\n        this._updateSource();\r\n    }\r\n    Object.defineProperty(StreamingAudioChannel.prototype, \"duration\", {\r\n        get: function () {\r\n            return this._duration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StreamingAudioChannel.prototype, \"currentTime\", {\r\n        get: function () {\r\n            return this._audio.currentTime - this._startTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StreamingAudioChannel.prototype, \"volume\", {\r\n        get: function () {\r\n            return this._volume;\r\n        },\r\n        set: function (value) {\r\n            if (this._volume == value)\r\n                return;\r\n            this._volume = value;\r\n            this._audio.volume = this._volume;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    StreamingAudioChannel.prototype.isPlaying = function () {\r\n        return this._isPlaying;\r\n    };\r\n    StreamingAudioChannel.prototype.isLooping = function () {\r\n        return this._isLooping;\r\n    };\r\n    StreamingAudioChannel.prototype.isDecoding = function () {\r\n        return false;\r\n    };\r\n    StreamingAudioChannel.prototype.play = function (buffer, offset, loop) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (loop === void 0) { loop = false; }\r\n        this._isPlaying = true;\r\n        if (this._isLooping || this._isLooping != loop) {\r\n            this._isLooping = loop;\r\n            this._sourceDirty = true;\r\n        }\r\n        if (this._sourceDirty)\r\n            this._updateSource();\r\n        this._buffer = buffer;\r\n        this._offset = offset;\r\n        if (!this._isQueuing && !this._isOpening)\r\n            this._queueBuffer();\r\n    };\r\n    StreamingAudioChannel.prototype.stop = function () {\r\n        this._audio.pause();\r\n        this._isPlaying = false;\r\n        this._isLooping = false;\r\n    };\r\n    StreamingAudioChannel.prototype._sourceOpen = function (event) {\r\n        this._isOpening = false;\r\n        //TODO: find out how in the name of all that is holy how this can be executed more than once on a MediaSource object\r\n        if (this._mediaSource.activeSourceBuffers.length) {\r\n            console.log(\"ERR: double sourceopen event called\");\r\n            return;\r\n        }\r\n        this._sourceBuffer = this._mediaSource.addSourceBuffer('audio/mpeg');\r\n        this._sourceBuffer.addEventListener(\"updateend\", this._updateEndDelegate);\r\n        if (this._isPlaying)\r\n            this._queueBuffer();\r\n    };\r\n    StreamingAudioChannel.prototype._queueBuffer = function () {\r\n        this._isQueuing = true;\r\n        this._startTime = this._sourceBuffer.timestampOffset;\r\n        this._sourceBuffer.appendBuffer(this._buffer);\r\n    };\r\n    StreamingAudioChannel.prototype._updateEnd = function (event) {\r\n        this._isQueuing = false;\r\n        if (this._isLooping)\r\n            this._mediaSource.endOfStream();\r\n        this._duration = this._sourceBuffer.timestampOffset - this._startTime;\r\n        this._audio.currentTime = this._startTime + this._offset;\r\n        this._audio.play();\r\n    };\r\n    StreamingAudioChannel.prototype._onTimeUpdate = function (event) {\r\n        //TODO: more accurate end detection\r\n        if (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\r\n            this.stop();\r\n    };\r\n    StreamingAudioChannel.prototype._updateSource = function () {\r\n        if (this._mediaSource)\r\n            this._disposeSource();\r\n        this._isQueuing = false;\r\n        this._isOpening = true;\r\n        this._mediaSource = new MediaSource();\r\n        this._mediaSource.addEventListener(\"sourceopen\", this._sourceOpenDelegate);\r\n        this._urlString = URL.createObjectURL(this._mediaSource);\r\n        this._audio.src = this._urlString;\r\n        this._audio.loop = this._isLooping;\r\n        this._sourceDirty = false;\r\n    };\r\n    StreamingAudioChannel.prototype._disposeSource = function () {\r\n        if (!this._isOpening) {\r\n            if (this._sourceBuffer.timestampOffset)\r\n                this._sourceBuffer.remove(0, this._sourceBuffer.timestampOffset);\r\n            this._sourceBuffer.removeEventListener(\"updateend\", this._updateEndDelegate);\r\n            this._mediaSource.removeSourceBuffer(this._sourceBuffer);\r\n            delete this._sourceBuffer;\r\n            this._sourceBuffer = null;\r\n        }\r\n        this._mediaSource.removeEventListener(\"sourceopen\", this._sourceOpenDelegate);\r\n        URL.revokeObjectURL(this._urlString);\r\n        delete this._mediaSource;\r\n        this._mediaSource = null;\r\n    };\r\n    StreamingAudioChannel.maxChannels = 4;\r\n    StreamingAudioChannel._channels = new Array();\r\n    return StreamingAudioChannel;\r\n}());\r\nexports.StreamingAudioChannel = StreamingAudioChannel;\r\n},{}],\"awayjs-core/lib/managers/WebAudioChannel\":[function(require,module,exports){\n\"use strict\";\r\nvar WebAudioChannel = (function () {\r\n    function WebAudioChannel() {\r\n        var _this = this;\r\n        this._isPlaying = false;\r\n        this._isLooping = false;\r\n        this._isDecoding = false;\r\n        this._volume = 1;\r\n        this._startTime = 0;\r\n        this._audioCtx = WebAudioChannel._audioCtx || (WebAudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\r\n        this._gainNode = this._audioCtx.createGain();\r\n        this._gainNode.gain.value = this._volume;\r\n        this._gainNode.connect(this._audioCtx.destination);\r\n        this._onEndedDelegate = function (event) { return _this._onEnded(event); };\r\n    }\r\n    Object.defineProperty(WebAudioChannel.prototype, \"duration\", {\r\n        get: function () {\r\n            return this._duration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WebAudioChannel.prototype, \"currentTime\", {\r\n        get: function () {\r\n            return this._audioCtx.currentTime - this._startTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WebAudioChannel.prototype, \"volume\", {\r\n        get: function () {\r\n            return this._volume;\r\n        },\r\n        set: function (value) {\r\n            if (this._volume == value)\r\n                return;\r\n            this._volume = value;\r\n            this._gainNode.gain.value = this._volume;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WebAudioChannel.prototype.isPlaying = function () {\r\n        return this._isPlaying;\r\n    };\r\n    WebAudioChannel.prototype.isLooping = function () {\r\n        return this._isLooping;\r\n    };\r\n    WebAudioChannel.prototype.isDecoding = function () {\r\n        return this._isDecoding;\r\n    };\r\n    WebAudioChannel.prototype.play = function (buffer, offset, loop, id) {\r\n        var _this = this;\r\n        if (offset === void 0) { offset = 0; }\r\n        if (loop === void 0) { loop = false; }\r\n        if (id === void 0) { id = 0; }\r\n        this._isPlaying = true;\r\n        this._isLooping = loop;\r\n        this._currentTime = offset;\r\n        this._id = id;\r\n        this._isDecoding = true;\r\n        //fast path for short sounds\r\n        if (WebAudioChannel._decodeCache[id])\r\n            this._onDecodeComplete(WebAudioChannel._decodeCache[id]);\r\n        else if (!WebAudioChannel._errorCache[id])\r\n            this._audioCtx.decodeAudioData(buffer, function (buffer) { return _this._onDecodeComplete(buffer); }, function (event) { return _this._onError(event); });\r\n        else\r\n            this.stop();\r\n    };\r\n    WebAudioChannel.prototype.stop = function () {\r\n        if (!this._isPlaying)\r\n            return;\r\n        this._isPlaying = false;\r\n        this._isLooping = false;\r\n        this._isDecoding = false;\r\n        if (this._source)\r\n            this._disposeSource();\r\n    };\r\n    WebAudioChannel.prototype._onDecodeComplete = function (buffer) {\r\n        if (!this._isPlaying)\r\n            return;\r\n        this._isDecoding = false;\r\n        //if (buffer.duration < 2) //cache all buffers?\r\n        WebAudioChannel._decodeCache[this._id] = buffer;\r\n        if (this._source)\r\n            this._disposeSource();\r\n        this._source = this._audioCtx.createBufferSource();\r\n        this._source.loop = this._isLooping;\r\n        this._source.connect(this._gainNode);\r\n        this._source.buffer = buffer;\r\n        this._duration = buffer.duration;\r\n        this._startTime = this._audioCtx.currentTime - this._currentTime;\r\n        this._source.onended = this._onEndedDelegate;\r\n        try {\r\n            this._source.start(this._audioCtx.currentTime, this._currentTime);\r\n        }\r\n        catch (error) {\r\n            console.log(\"Error starting audio: \" + error);\r\n            this._disposeSource();\r\n        }\r\n    };\r\n    WebAudioChannel.prototype._onError = function (event) {\r\n        console.log(\"Error with decoding audio data\");\r\n        WebAudioChannel._errorCache[this._id] = true;\r\n        this.stop();\r\n    };\r\n    WebAudioChannel.prototype._onEnded = function (event) {\r\n        this.stop();\r\n    };\r\n    WebAudioChannel.prototype._disposeSource = function () {\r\n        //clean up\r\n        this._source.stop(this._audioCtx.currentTime);\r\n        this._source.onended = null;\r\n        this._source.disconnect();\r\n        delete this._source.buffer;\r\n        delete this._source;\r\n        this._source = null;\r\n    };\r\n    WebAudioChannel.maxChannels = 64;\r\n    WebAudioChannel._channels = new Array();\r\n    WebAudioChannel._decodeCache = new Object();\r\n    WebAudioChannel._errorCache = new Object();\r\n    return WebAudioChannel;\r\n}());\r\nexports.WebAudioChannel = WebAudioChannel;\r\n},{}],\"awayjs-core/lib/managers\":[function(require,module,exports){\n\"use strict\";\r\nvar AudioManager_1 = require(\"./managers/AudioManager\");\r\nexports.AudioManager = AudioManager_1.AudioManager;\r\nvar StreamingAudioChannel_1 = require(\"./managers/StreamingAudioChannel\");\r\nexports.StreamingAudioChannel = StreamingAudioChannel_1.StreamingAudioChannel;\r\nvar WebAudioChannel_1 = require(\"./managers/WebAudioChannel\");\r\nexports.WebAudioChannel = WebAudioChannel_1.WebAudioChannel;\r\n},{\"./managers/AudioManager\":\"awayjs-core/lib/managers/AudioManager\",\"./managers/StreamingAudioChannel\":\"awayjs-core/lib/managers/StreamingAudioChannel\",\"./managers/WebAudioChannel\":\"awayjs-core/lib/managers/WebAudioChannel\"}],\"awayjs-core/lib/net/CrossDomainPolicy\":[function(require,module,exports){\n\"use strict\";\r\nvar CrossDomainPolicy = (function () {\r\n    function CrossDomainPolicy() {\r\n    }\r\n    CrossDomainPolicy.ANONYMOUS = 'anonymous';\r\n    CrossDomainPolicy.USE_CREDENTIALS = 'use-credentials';\r\n    return CrossDomainPolicy;\r\n}());\r\nexports.CrossDomainPolicy = CrossDomainPolicy;\r\n},{}],\"awayjs-core/lib/net/URLLoaderDataFormat\":[function(require,module,exports){\n\"use strict\";\r\nvar URLLoaderDataFormat = (function () {\r\n    function URLLoaderDataFormat() {\r\n    }\r\n    /**\r\n     * TEXT\r\n     * @type {string}\r\n     */\r\n    URLLoaderDataFormat.TEXT = \"text\";\r\n    /**\r\n     * Variables / Value Pairs\r\n     * @type {string}\r\n     */\r\n    URLLoaderDataFormat.VARIABLES = \"variables\";\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    URLLoaderDataFormat.BLOB = \"blob\";\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    URLLoaderDataFormat.ARRAY_BUFFER = \"arraybuffer\";\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    URLLoaderDataFormat.BINARY = \"binary\";\r\n    return URLLoaderDataFormat;\r\n}());\r\nexports.URLLoaderDataFormat = URLLoaderDataFormat;\r\n},{}],\"awayjs-core/lib/net/URLLoader\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar URLLoaderDataFormat_1 = require(\"../net/URLLoaderDataFormat\");\r\nvar URLRequestMethod_1 = require(\"../net/URLRequestMethod\");\r\nvar URLVariables_1 = require(\"../net/URLVariables\");\r\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\r\nvar URLLoaderEvent_1 = require(\"../events/URLLoaderEvent\");\r\n/**\r\n * The URLLoader is used to load a single file, as part of a resource.\r\n *\r\n * While URLLoader can be used directly, e.g. to create a third-party asset\r\n * management system, it's recommended to use any of the classes Loader3D, Loader\r\n * and AssetLibrary instead in most cases.\r\n *\r\n * @see Loader\r\n * @see away.library.AssetLibrary\r\n */\r\nvar URLLoader = (function (_super) {\r\n    __extends(URLLoader, _super);\r\n    /**\r\n     * Creates a new URLLoader object.\r\n     */\r\n    function URLLoader() {\r\n        _super.call(this);\r\n        this._bytesLoaded = 0;\r\n        this._bytesTotal = 0;\r\n        this._dataFormat = URLLoaderDataFormat_1.URLLoaderDataFormat.TEXT;\r\n        this._loadError = false;\r\n    }\r\n    Object.defineProperty(URLLoader.prototype, \"url\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._request ? this._request.url : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(URLLoader.prototype, \"data\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._data;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(URLLoader.prototype, \"dataFormat\", {\r\n        get: function () {\r\n            return this._dataFormat;\r\n        },\r\n        /**\r\n         *\r\n         * URLLoaderDataFormat.BINARY\r\n         * URLLoaderDataFormat.TEXT\r\n         * URLLoaderDataFormat.VARIABLES\r\n         *\r\n         * @param format\r\n         */\r\n        set: function (format) {\r\n            this._dataFormat = format;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(URLLoader.prototype, \"bytesLoaded\", {\r\n        /**\r\n         *\r\n         * @returns {number}\r\n         */\r\n        get: function () {\r\n            return this._bytesLoaded;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(URLLoader.prototype, \"bytesTotal\", {\r\n        /**\r\n         *\r\n         * @returns {number}\r\n         */\r\n        get: function () {\r\n            return this._bytesTotal;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Load a resource from a file.\r\n     *\r\n     * @param request The URLRequest object containing the URL of the object to be loaded.\r\n     */\r\n    URLLoader.prototype.load = function (request) {\r\n        this._request = request;\r\n        this.initXHR();\r\n        if (request.method === URLRequestMethod_1.URLRequestMethod.POST)\r\n            this.postRequest(request);\r\n        else\r\n            this.getRequest(request);\r\n    };\r\n    URLLoader.prototype.isSupported = function () {\r\n        return window != null;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    URLLoader.prototype.close = function () {\r\n        this._XHR.abort();\r\n        this.disposeXHR();\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    URLLoader.prototype.dispose = function () {\r\n        if (this._XHR)\r\n            this._XHR.abort();\r\n        this.disposeXHR();\r\n    };\r\n    /**\r\n     *\r\n     * @param xhr\r\n     * @param responseType\r\n     */\r\n    URLLoader.prototype.setResponseType = function (xhr, responseType) {\r\n        switch (responseType) {\r\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.ARRAY_BUFFER:\r\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.BLOB:\r\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.TEXT:\r\n                xhr.responseType = responseType;\r\n                break;\r\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.VARIABLES:\r\n                xhr.responseType = URLLoaderDataFormat_1.URLLoaderDataFormat.TEXT;\r\n                break;\r\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.BINARY:\r\n                xhr.responseType = '';\r\n                break;\r\n            default:\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param request {URLRequest}\r\n     */\r\n    URLLoader.prototype.getRequest = function (request) {\r\n        try {\r\n            this._XHR.open(request.method, request.url, request.async);\r\n            this.setResponseType(this._XHR, this._dataFormat);\r\n            this._XHR.send(); // No data to send\r\n        }\r\n        catch (e /* <XMLHttpRequestException> */) {\r\n            this.handleXmlHttpRequestException(e);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param request {URLRequest}\r\n     */\r\n    URLLoader.prototype.postRequest = function (request) {\r\n        this._loadError = false;\r\n        this._XHR.open(request.method, request.url, request.async);\r\n        if (request.data != null) {\r\n            if (request.data instanceof URLVariables_1.URLVariables) {\r\n                var urlVars = request.data;\r\n                try {\r\n                    this._XHR.responseType = 'text';\r\n                    this._XHR.send(urlVars.formData);\r\n                }\r\n                catch (e /* <XMLHttpRequestException> */) {\r\n                    this.handleXmlHttpRequestException(e);\r\n                }\r\n            }\r\n            else {\r\n                this.setResponseType(this._XHR, this._dataFormat);\r\n                if (request.data)\r\n                    this._XHR.send(request.data); // TODO: Test\r\n                else\r\n                    this._XHR.send(); // no data to send\r\n            }\r\n        }\r\n        else {\r\n            this._XHR.send(); // No data to send\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param error {XMLHttpRequestException}\r\n     */\r\n    URLLoader.prototype.handleXmlHttpRequestException = function (error /* <XMLHttpRequestException> */) {\r\n        switch (error.code) {\r\n            /******************************************************************************************************************************************************************************************************\r\n             *\r\n             *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\r\n             *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\r\n             *\r\n             ******************************************************************************************************************************************************************************************************/\r\n            case 101:\r\n                // Note: onLoadError event throws IO_ERROR event - this case is already Covered\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    URLLoader.prototype.initXHR = function () {\r\n        var _this = this;\r\n        if (!this._XHR) {\r\n            this._XHR = new XMLHttpRequest();\r\n            this._XHR.onloadstart = function (event) { return _this.onLoadStart(event); }; // loadstart\t        - When the request starts.\r\n            this._XHR.onprogress = function (event) { return _this.onProgress(event); }; // progress\t            - While loading and sending data.\r\n            this._XHR.onabort = function (event) { return _this.onAbort(event); }; // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\r\n            this._XHR.onerror = function (event) { return _this.onLoadError(event); }; // error\t            - When the request has failed.\r\n            this._XHR.onload = function (event) { return _this.onLoadComplete(event); }; // load\t                - When the request has successfully completed.\r\n            this._XHR.ontimeout = function (event) { return _this.onTimeOut(event); }; // timeout\t            - When the author specified timeout has passed before the request could complete.\r\n            this._XHR.onloadend = function (event) { return _this.onLoadEnd(event); }; // loadend\t            - When the request has completed, regardless of whether or not it was successful.\r\n            this._XHR.onreadystatechange = function (event) { return _this.onReadyStateChange(event); }; // onreadystatechange   - When XHR state changes\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    URLLoader.prototype.disposeXHR = function () {\r\n        if (this._XHR !== null) {\r\n            this._XHR.onloadstart = null;\r\n            this._XHR.onprogress = null;\r\n            this._XHR.onabort = null;\r\n            this._XHR.onerror = null;\r\n            this._XHR.onload = null;\r\n            this._XHR.ontimeout = null;\r\n            this._XHR.onloadend = null;\r\n            this._XHR = null;\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param source\r\n     */\r\n    URLLoader.prototype.decodeURLVariables = function (source) {\r\n        var result = new Object();\r\n        source = source.split(\"+\").join(\" \");\r\n        var tokens, re = /[?&]?([^=]+)=([^&]*)/g;\r\n        while (tokens = re.exec(source))\r\n            result[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n        return result;\r\n    };\r\n    // XMLHttpRequest - Event Handlers\r\n    /**\r\n     * When XHR state changes\r\n     * @param event\r\n     */\r\n    URLLoader.prototype.onReadyStateChange = function (event) {\r\n        if (this._XHR.readyState == 4) {\r\n            this._status = this._XHR.status;\r\n            if (this._status == 404) {\r\n                this._loadError = true;\r\n                this.dispatchEvent(this._loadErrorEvent || (this._loadErrorEvent = new URLLoaderEvent_1.URLLoaderEvent(URLLoaderEvent_1.URLLoaderEvent.LOAD_ERROR, this)));\r\n            }\r\n            this.dispatchEvent(this._statusEvent || (this._statusEvent = new URLLoaderEvent_1.URLLoaderEvent(URLLoaderEvent_1.URLLoaderEvent.HTTP_STATUS, this)));\r\n        }\r\n    };\r\n    /**\r\n     * When the request has completed, regardless of whether or not it was successful.\r\n     * @param event\r\n     */\r\n    URLLoader.prototype.onLoadEnd = function (event) {\r\n        if (this._loadError === true)\r\n            return;\r\n    };\r\n    /**\r\n     * When the author specified timeout has passed before the request could complete.\r\n     * @param event\r\n     */\r\n    URLLoader.prototype.onTimeOut = function (event) {\r\n        //TODO: Timeout not currently implemented ( also not part of AS3 API )\r\n    };\r\n    /**\r\n     * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\r\n     * @param event\r\n     */\r\n    URLLoader.prototype.onAbort = function (event) {\r\n        // TODO: investigate whether this needs to be an IOError\r\n    };\r\n    /**\r\n     * While loading and sending data.\r\n     * @param event\r\n     */\r\n    URLLoader.prototype.onProgress = function (event) {\r\n        this._bytesTotal = event.total;\r\n        this._bytesLoaded = event.loaded;\r\n        this.dispatchEvent(this._progressEvent || (this._progressEvent = new URLLoaderEvent_1.URLLoaderEvent(URLLoaderEvent_1.URLLoaderEvent.LOAD_PROGRESS, this)));\r\n    };\r\n    /**\r\n     * When the request starts.\r\n     * @param event\r\n     */\r\n    URLLoader.prototype.onLoadStart = function (event) {\r\n        this.dispatchEvent(this._loadStartEvent || (this._loadStartEvent = new URLLoaderEvent_1.URLLoaderEvent(URLLoaderEvent_1.URLLoaderEvent.LOAD_START, this)));\r\n    };\r\n    /**\r\n     * When the request has successfully completed.\r\n     * @param event\r\n     */\r\n    URLLoader.prototype.onLoadComplete = function (event) {\r\n        if (this._loadError === true)\r\n            return;\r\n        switch (this._dataFormat) {\r\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.TEXT:\r\n                this._data = this._XHR.responseText;\r\n                break;\r\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.VARIABLES:\r\n                this._data = this.decodeURLVariables(this._XHR.responseText);\r\n                break;\r\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.BLOB:\r\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.ARRAY_BUFFER:\r\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.BINARY:\r\n                this._data = this._XHR.response;\r\n                break;\r\n            default:\r\n                this._data = this._XHR.responseText;\r\n                break;\r\n        }\r\n        this.dispatchEvent(this._loadCompleteEvent || (this._loadCompleteEvent = new URLLoaderEvent_1.URLLoaderEvent(URLLoaderEvent_1.URLLoaderEvent.LOAD_COMPLETE, this)));\r\n    };\r\n    /**\r\n     * When the request has failed. ( due to network issues ).\r\n     * @param event\r\n     */\r\n    URLLoader.prototype.onLoadError = function (event) {\r\n        this._loadError = true;\r\n        this.dispatchEvent(this._loadErrorEvent || (this._loadErrorEvent = new URLLoaderEvent_1.URLLoaderEvent(URLLoaderEvent_1.URLLoaderEvent.LOAD_ERROR, this)));\r\n    };\r\n    return URLLoader;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.URLLoader = URLLoader;\r\n},{\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"../events/URLLoaderEvent\":\"awayjs-core/lib/events/URLLoaderEvent\",\"../net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"../net/URLRequestMethod\":\"awayjs-core/lib/net/URLRequestMethod\",\"../net/URLVariables\":\"awayjs-core/lib/net/URLVariables\"}],\"awayjs-core/lib/net/URLRequestMethod\":[function(require,module,exports){\n\"use strict\";\r\nvar URLRequestMethod = (function () {\r\n    function URLRequestMethod() {\r\n    }\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    URLRequestMethod.POST = 'POST';\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    URLRequestMethod.GET = 'GET';\r\n    return URLRequestMethod;\r\n}());\r\nexports.URLRequestMethod = URLRequestMethod;\r\n},{}],\"awayjs-core/lib/net/URLRequest\":[function(require,module,exports){\n\"use strict\";\r\nvar URLRequestMethod_1 = require(\"../net/URLRequestMethod\");\r\nvar URLRequest = (function () {\r\n    /**\r\n\r\n     * @param url\r\n     */\r\n    function URLRequest(url) {\r\n        if (url === void 0) { url = null; }\r\n        /**\r\n         *\r\n         * away.net.URLRequestMethod.GET\r\n         * away.net.URLRequestMethod.POST\r\n         *\r\n         * @type {string}\r\n         */\r\n        this.method = URLRequestMethod_1.URLRequestMethod.GET;\r\n        /**\r\n         * Use asynchronous XMLHttpRequest\r\n         * @type {boolean}\r\n         */\r\n        this.async = true;\r\n        this._url = url;\r\n    }\r\n    Object.defineProperty(URLRequest.prototype, \"url\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return this._url;\r\n        },\r\n        /**\r\n         *\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this._url = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * dispose\r\n     */\r\n    URLRequest.prototype.dispose = function () {\r\n        this.data = null;\r\n        this._url = null;\r\n    };\r\n    return URLRequest;\r\n}());\r\nexports.URLRequest = URLRequest;\r\n},{\"../net/URLRequestMethod\":\"awayjs-core/lib/net/URLRequestMethod\"}],\"awayjs-core/lib/net/URLVariables\":[function(require,module,exports){\n\"use strict\";\r\nvar URLVariables = (function () {\r\n    /**\r\n     *\r\n     * @param source\r\n     */\r\n    function URLVariables(source) {\r\n        if (source === void 0) { source = null; }\r\n        this._variables = new Object();\r\n        if (source !== null)\r\n            this.decode(source);\r\n    }\r\n    /**\r\n     *\r\n     * @param source\r\n     */\r\n    URLVariables.prototype.decode = function (source) {\r\n        source = source.split(\"+\").join(\" \");\r\n        var tokens, re = /[?&]?([^=]+)=([^&]*)/g;\r\n        while (tokens = re.exec(source))\r\n            this._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n    };\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    URLVariables.prototype.toString = function () {\r\n        return '';\r\n    };\r\n    Object.defineProperty(URLVariables.prototype, \"variables\", {\r\n        /**\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        get: function () {\r\n            return this._variables;\r\n        },\r\n        /**\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        set: function (obj) {\r\n            this._variables = obj;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(URLVariables.prototype, \"formData\", {\r\n        /**\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        get: function () {\r\n            var fd = new FormData();\r\n            for (var s in this._variables)\r\n                fd.append(s, this._variables[s]);\r\n            return fd;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return URLVariables;\r\n}());\r\nexports.URLVariables = URLVariables;\r\n},{}],\"awayjs-core/lib/net\":[function(require,module,exports){\n\"use strict\";\r\nvar CrossDomainPolicy_1 = require(\"./net/CrossDomainPolicy\");\r\nexports.CrossDomainPolicy = CrossDomainPolicy_1.CrossDomainPolicy;\r\nvar URLLoader_1 = require(\"./net/URLLoader\");\r\nexports.URLLoader = URLLoader_1.URLLoader;\r\nvar URLLoaderDataFormat_1 = require(\"./net/URLLoaderDataFormat\");\r\nexports.URLLoaderDataFormat = URLLoaderDataFormat_1.URLLoaderDataFormat;\r\nvar URLRequest_1 = require(\"./net/URLRequest\");\r\nexports.URLRequest = URLRequest_1.URLRequest;\r\nvar URLRequestMethod_1 = require(\"./net/URLRequestMethod\");\r\nexports.URLRequestMethod = URLRequestMethod_1.URLRequestMethod;\r\nvar URLVariables_1 = require(\"./net/URLVariables\");\r\nexports.URLVariables = URLVariables_1.URLVariables;\r\n},{\"./net/CrossDomainPolicy\":\"awayjs-core/lib/net/CrossDomainPolicy\",\"./net/URLLoader\":\"awayjs-core/lib/net/URLLoader\",\"./net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"./net/URLRequest\":\"awayjs-core/lib/net/URLRequest\",\"./net/URLRequestMethod\":\"awayjs-core/lib/net/URLRequestMethod\",\"./net/URLVariables\":\"awayjs-core/lib/net/URLVariables\"}],\"awayjs-core/lib/parsers/Image2DParser\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar URLLoaderDataFormat_1 = require(\"../net/URLLoaderDataFormat\");\r\nvar ParserBase_1 = require(\"../parsers/ParserBase\");\r\nvar ParserUtils_1 = require(\"../parsers/ParserUtils\");\r\nvar ByteArray_1 = require(\"../utils/ByteArray\");\r\n/**\r\n * Image2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nvar Image2DParser = (function (_super) {\r\n    __extends(Image2DParser, _super);\r\n    /**\r\n     * Creates a new Image2DParser object.\r\n     * @param uri The url or id of the data or file to be parsed.\r\n     * @param extra The holder for extra contextual data that the parser might need.\r\n     */\r\n    function Image2DParser() {\r\n        _super.call(this, URLLoaderDataFormat_1.URLLoaderDataFormat.BLOB);\r\n    }\r\n    /**\r\n     * Indicates whether or not a given file extension is supported by the parser.\r\n     * @param extension The file extension of a potential file to be parsed.\r\n     * @return Whether or not the given file type is supported.\r\n     */\r\n    Image2DParser.supportsType = function (extension) {\r\n        extension = extension.toLowerCase();\r\n        return extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\"; //|| extension == \"bmp\";//|| extension == \"atf\";\r\n    };\r\n    /**\r\n     * Tests whether a data block can be parsed by the parser.\r\n     * @param data The data block to potentially be parsed.\r\n     * @return Whether or not the given data is supported.\r\n     */\r\n    Image2DParser.supportsData = function (data) {\r\n        if (data instanceof HTMLImageElement)\r\n            return true;\r\n        if (!(data instanceof ByteArray_1.ByteArray))\r\n            return false;\r\n        var ba = data;\r\n        ba.position = 0;\r\n        if (ba.readUnsignedShort() == 0xd8ff)\r\n            return true; // JPEG, maybe check for \"JFIF\" as well?\r\n        ba.position = 0;\r\n        if (ba.readShort() == 0x424D)\r\n            return true; // BMP\r\n        ba.position = 1;\r\n        if (ba.readUTFBytes(3) == 'PNG')\r\n            return true;\r\n        ba.position = 0;\r\n        if (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\r\n            return true;\r\n        ba.position = 0;\r\n        if (ba.readUTFBytes(3) == 'ATF')\r\n            return true;\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Image2DParser.prototype._pProceedParsing = function () {\r\n        var _this = this;\r\n        var asset;\r\n        var sizeError = false;\r\n        if (this._loadingImage) {\r\n            return ParserBase_1.ParserBase.MORE_TO_PARSE;\r\n        }\r\n        else if (this._htmlImageElement) {\r\n            //if (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\r\n            asset = ParserUtils_1.ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\r\n            this._pFinalizeAsset(asset, this._iFileName);\r\n        }\r\n        else if (this.data instanceof HTMLImageElement) {\r\n            var htmlImageElement = this.data;\r\n            //if (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\r\n            asset = ParserUtils_1.ParserUtils.imageToBitmapImage2D(htmlImageElement, false);\r\n            this._pFinalizeAsset(asset, this._iFileName);\r\n        }\r\n        else if (this.data instanceof ByteArray_1.ByteArray) {\r\n            var ba = this.data;\r\n            ba.position = 0;\r\n            this._htmlImageElement = ParserUtils_1.ParserUtils.byteArrayToImage(this.data);\r\n            if (!this._htmlImageElement.complete) {\r\n                this._htmlImageElement.onload = function (event) { return _this.onLoadComplete(event); };\r\n                this._loadingImage = true;\r\n                return ParserBase_1.ParserBase.MORE_TO_PARSE;\r\n            }\r\n            //if (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\r\n            asset = ParserUtils_1.ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\r\n            this._pFinalizeAsset(asset, this._iFileName);\r\n        }\r\n        else if (this.data instanceof ArrayBuffer) {\r\n            this._htmlImageElement = ParserUtils_1.ParserUtils.arrayBufferToImage(this.data);\r\n            asset = ParserUtils_1.ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\r\n            this._pFinalizeAsset(asset, this._iFileName);\r\n        }\r\n        else if (this.data instanceof Blob) {\r\n            this._htmlImageElement = ParserUtils_1.ParserUtils.blobToImage(this.data);\r\n            this._htmlImageElement.onload = function (event) { return _this.onLoadComplete(event); };\r\n            this._loadingImage = true;\r\n            return ParserBase_1.ParserBase.MORE_TO_PARSE;\r\n        }\r\n        if (sizeError == true) {\r\n        }\r\n        this._pContent = asset;\r\n        return ParserBase_1.ParserBase.PARSING_DONE;\r\n    };\r\n    Image2DParser.prototype.onLoadComplete = function (event) {\r\n        this._loadingImage = false;\r\n    };\r\n    return Image2DParser;\r\n}(ParserBase_1.ParserBase));\r\nexports.Image2DParser = Image2DParser;\r\n},{\"../net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"../parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\",\"../parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\",\"../utils/ByteArray\":\"awayjs-core/lib/utils/ByteArray\"}],\"awayjs-core/lib/parsers/ImageCubeParser\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar BitmapImageCube_1 = require(\"../image/BitmapImageCube\");\r\nvar URLLoaderDataFormat_1 = require(\"../net/URLLoaderDataFormat\");\r\nvar URLRequest_1 = require(\"../net/URLRequest\");\r\nvar ParserBase_1 = require(\"../parsers/ParserBase\");\r\n/**\r\n * ImageCubeParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nvar ImageCubeParser = (function (_super) {\r\n    __extends(ImageCubeParser, _super);\r\n    /**\r\n     * Creates a new ImageCubeParser object.\r\n     * @param uri The url or id of the data or file to be parsed.\r\n     * @param extra The holder for extra contextual data that the parser might need.\r\n     */\r\n    function ImageCubeParser() {\r\n        _super.call(this, URLLoaderDataFormat_1.URLLoaderDataFormat.TEXT);\r\n    }\r\n    /**\r\n     * Indicates whether or not a given file extension is supported by the parser.\r\n     * @param extension The file extension of a potential file to be parsed.\r\n     * @return Whether or not the given file type is supported.\r\n     */\r\n    ImageCubeParser.supportsType = function (extension) {\r\n        extension = extension.toLowerCase();\r\n        return extension == \"cube\";\r\n    };\r\n    /**\r\n     * Tests whether a data block can be parsed by the parser.\r\n     * @param data The data block to potentially be parsed.\r\n     * @return Whether or not the given data is supported.\r\n     */\r\n    ImageCubeParser.supportsData = function (data) {\r\n        try {\r\n            var obj = JSON.parse(data);\r\n            if (obj)\r\n                return true;\r\n            return false;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ImageCubeParser.prototype._iResolveDependency = function (resourceDependency) {\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ImageCubeParser.prototype._iResolveDependencyFailure = function (resourceDependency) {\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ImageCubeParser.prototype._pProceedParsing = function () {\r\n        if (this._imgDependencyDictionary != null) {\r\n            var asset = new BitmapImageCube_1.BitmapImageCube(this._getBitmapImage2D(ImageCubeParser.posX).width);\r\n            asset.draw(BitmapImageCube_1.BitmapImageCube.posX, this._getBitmapImage2D(ImageCubeParser.posX));\r\n            asset.draw(BitmapImageCube_1.BitmapImageCube.negX, this._getBitmapImage2D(ImageCubeParser.negX));\r\n            asset.draw(BitmapImageCube_1.BitmapImageCube.posY, this._getBitmapImage2D(ImageCubeParser.posY));\r\n            asset.draw(BitmapImageCube_1.BitmapImageCube.negY, this._getBitmapImage2D(ImageCubeParser.negY));\r\n            asset.draw(BitmapImageCube_1.BitmapImageCube.posZ, this._getBitmapImage2D(ImageCubeParser.posZ));\r\n            asset.draw(BitmapImageCube_1.BitmapImageCube.negZ, this._getBitmapImage2D(ImageCubeParser.negZ));\r\n            //clear dictionary\r\n            this._imgDependencyDictionary = null;\r\n            asset.name = this._iFileName;\r\n            this._pFinalizeAsset(asset, this._iFileName);\r\n            return ParserBase_1.ParserBase.PARSING_DONE;\r\n        }\r\n        try {\r\n            var json = JSON.parse(this.data);\r\n            var data = json.data;\r\n            var rec;\r\n            if (data.length != 6)\r\n                this._pDieWithError('ImageCubeParser: Error - cube texture should have exactly 6 images');\r\n            if (json) {\r\n                this._imgDependencyDictionary = new Object();\r\n                for (var c = 0; c < data.length; c++) {\r\n                    rec = data[c];\r\n                    this._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest_1.URLRequest(rec.image.toString()));\r\n                }\r\n                if (!this._validateCubeData()) {\r\n                    this._pDieWithError(\"ImageCubeParser: JSON data error - cubes require id of:   \\n\" + ImageCubeParser.posX + ', ' + ImageCubeParser.negX + ',  \\n' + ImageCubeParser.posY + ', ' + ImageCubeParser.negY + ',  \\n' + ImageCubeParser.posZ + ', ' + ImageCubeParser.negZ);\r\n                    return ParserBase_1.ParserBase.PARSING_DONE;\r\n                }\r\n                this._pPauseAndRetrieveDependencies();\r\n                return ParserBase_1.ParserBase.MORE_TO_PARSE;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._pDieWithError('CubeTexturePaser Error parsing JSON');\r\n        }\r\n        return ParserBase_1.ParserBase.PARSING_DONE;\r\n    };\r\n    ImageCubeParser.prototype._validateCubeData = function () {\r\n        return (this._imgDependencyDictionary[ImageCubeParser.posX] != null && this._imgDependencyDictionary[ImageCubeParser.negX] != null && this._imgDependencyDictionary[ImageCubeParser.posY] != null && this._imgDependencyDictionary[ImageCubeParser.negY] != null && this._imgDependencyDictionary[ImageCubeParser.posZ] != null && this._imgDependencyDictionary[ImageCubeParser.negZ] != null);\r\n    };\r\n    ImageCubeParser.prototype._getBitmapImage2D = function (name) {\r\n        var dependency = this._imgDependencyDictionary[name];\r\n        if (dependency)\r\n            return dependency.assets[0];\r\n        return null;\r\n    };\r\n    ImageCubeParser.posX = 'posX';\r\n    ImageCubeParser.negX = 'negX';\r\n    ImageCubeParser.posY = 'posY';\r\n    ImageCubeParser.negY = 'negY';\r\n    ImageCubeParser.posZ = 'posZ';\r\n    ImageCubeParser.negZ = 'negZ';\r\n    return ImageCubeParser;\r\n}(ParserBase_1.ParserBase));\r\nexports.ImageCubeParser = ImageCubeParser;\r\n},{\"../image/BitmapImageCube\":\"awayjs-core/lib/image/BitmapImageCube\",\"../net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"../net/URLRequest\":\"awayjs-core/lib/net/URLRequest\",\"../parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\"}],\"awayjs-core/lib/parsers/ParserBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AbstractMethodError_1 = require(\"../errors/AbstractMethodError\");\r\nvar AssetEvent_1 = require(\"../events/AssetEvent\");\r\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\r\nvar ParserEvent_1 = require(\"../events/ParserEvent\");\r\nvar TimerEvent_1 = require(\"../events/TimerEvent\");\r\nvar ParserUtils_1 = require(\"../parsers/ParserUtils\");\r\nvar ResourceDependency_1 = require(\"../parsers/ResourceDependency\");\r\nvar ImageUtils_1 = require(\"../utils/ImageUtils\");\r\nvar Timer_1 = require(\"../utils/Timer\");\r\nvar getTimer_1 = require(\"../utils/getTimer\");\r\n/**\r\n * <code>ParserBase</code> provides an abstract base export class for objects that convert blocks of data to data structures\r\n * supported by away.\r\n *\r\n * If used by <code>Loader</code> to automatically determine the parser type, two public static methods should\r\n * be implemented, with the following signatures:\r\n *\r\n * <code>public static supportsType(extension : string) : boolean</code>\r\n * Indicates whether or not a given file extension is supported by the parser.\r\n *\r\n * <code>public static supportsData(data : *) : boolean</code>\r\n * Tests whether a data block can be parsed by the parser.\r\n *\r\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\r\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\r\n * handle regardless of whether the object was loaded or not.\r\n *\r\n * @see Loader\r\n */\r\nvar ParserBase = (function (_super) {\r\n    __extends(ParserBase, _super);\r\n    /**\r\n     * Creates a new ParserBase object\r\n     * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\r\n     *\r\n     * @see away.loading.parsers.ParserDataFormat\r\n     */\r\n    function ParserBase(format) {\r\n        var _this = this;\r\n        _super.call(this);\r\n        this._materialMode = 0;\r\n        this._dataFormat = format;\r\n        this._dependencies = new Array();\r\n        this._pOnIntervalDelegate = function (event) { return _this._pOnInterval(event); };\r\n    }\r\n    //----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    // TODO: add error checking for the following ( could cause a problem if this function is not implemented )\r\n    //----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    // Needs to be implemented in all Parsers (\r\n    //<code>public static supportsType(extension : string) : boolean</code>\r\n    //* Indicates whether or not a given file extension is supported by the parser.\r\n    //----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    ParserBase.supportsType = function (extension) {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    Object.defineProperty(ParserBase.prototype, \"content\", {\r\n        /* Protected */\r\n        get: function () {\r\n            return this._pContent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates a bitmapData loaded before assigning to a default BitmapMaterial\r\n     */\r\n    ParserBase.prototype.isBitmapImage2DValid = function (bitmapImage2D) {\r\n        var isValid = ImageUtils_1.ImageUtils.isImage2DValid(bitmapImage2D);\r\n        if (!isValid) {\r\n            console.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\r\n        }\r\n        return isValid;\r\n    };\r\n    Object.defineProperty(ParserBase.prototype, \"parsingFailure\", {\r\n        get: function () {\r\n            return this._parsingFailure;\r\n        },\r\n        set: function (b) {\r\n            this._parsingFailure = b;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ParserBase.prototype, \"parsingPaused\", {\r\n        get: function () {\r\n            return this._parsingPaused;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ParserBase.prototype, \"parsingComplete\", {\r\n        get: function () {\r\n            return this._parsingComplete;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ParserBase.prototype, \"materialMode\", {\r\n        get: function () {\r\n            return this._materialMode;\r\n        },\r\n        set: function (newMaterialMode) {\r\n            this._materialMode = newMaterialMode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ParserBase.prototype, \"data\", {\r\n        get: function () {\r\n            return this._data;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ParserBase.prototype, \"dataFormat\", {\r\n        /**\r\n         * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\r\n         */\r\n        get: function () {\r\n            return this._dataFormat;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\r\n     * the parser will periodically stop parsing so that the AVM may proceed to the\r\n     * next frame.\r\n     *\r\n     * @param data The untyped data object in which the loaded data resides.\r\n     * @param frameLimit number of milliseconds of parsing allowed per frame. The\r\n     * actual time spent on a frame can exceed this number since time-checks can\r\n     * only be performed between logical sections of the parsing procedure.\r\n     */\r\n    ParserBase.prototype.parseAsync = function (data, frameLimit) {\r\n        if (frameLimit === void 0) { frameLimit = 30; }\r\n        this._data = data;\r\n        this._pStartParsing(frameLimit);\r\n    };\r\n    Object.defineProperty(ParserBase.prototype, \"dependencies\", {\r\n        /**\r\n         * A list of dependencies that need to be loaded and resolved for the object being parsed.\r\n         */\r\n        get: function () {\r\n            return this._dependencies;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\r\n     * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\r\n     * dependency should be a member of the dependencies property.\r\n     *\r\n     * @param resourceDependency The dependency to be resolved.\r\n     */\r\n    ParserBase.prototype._iResolveDependency = function (resourceDependency) {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    /**\r\n     * Resolve a dependency loading failure. Used by parser to eventually provide a default map\r\n     *\r\n     * @param resourceDependency The dependency to be resolved.\r\n     */\r\n    ParserBase.prototype._iResolveDependencyFailure = function (resourceDependency) {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    /**\r\n     * Resolve a dependency name\r\n     *\r\n     * @param resourceDependency The dependency to be resolved.\r\n     */\r\n    ParserBase.prototype._iResolveDependencyName = function (resourceDependency, asset) {\r\n        return asset.name;\r\n    };\r\n    ParserBase.prototype._iResumeParsing = function () {\r\n        this._parsingPaused = false;\r\n        if (this._timer)\r\n            this._timer.start();\r\n        //get started!\r\n        if (!this._isParsing)\r\n            this._pOnInterval();\r\n    };\r\n    ParserBase.prototype._pFinalizeAsset = function (asset, name) {\r\n        if (name === void 0) { name = null; }\r\n        var type_event;\r\n        var type_name;\r\n        if (name != null)\r\n            asset.name = name;\r\n        // If the asset has no name, give it\r\n        // a per-type default name.\r\n        if (!asset.name)\r\n            asset.name = asset.assetType;\r\n        this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.ASSET_COMPLETE, asset));\r\n    };\r\n    /**\r\n     * Parse the next block of data.\r\n     * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\r\n     * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\r\n     */\r\n    ParserBase.prototype._pProceedParsing = function () {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    ParserBase.prototype._pDieWithError = function (message) {\r\n        if (message === void 0) { message = 'Unknown parsing error'; }\r\n        if (this._timer) {\r\n            this._timer.removeEventListener(TimerEvent_1.TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n            this._timer.stop();\r\n            this._timer = null;\r\n        }\r\n        this.dispatchEvent(new ParserEvent_1.ParserEvent(ParserEvent_1.ParserEvent.PARSE_ERROR, message));\r\n    };\r\n    ParserBase.prototype._pAddDependency = function (id, req, retrieveAsRawData, data, suppressErrorEvents, sub_id) {\r\n        if (retrieveAsRawData === void 0) { retrieveAsRawData = false; }\r\n        if (data === void 0) { data = null; }\r\n        if (suppressErrorEvents === void 0) { suppressErrorEvents = false; }\r\n        if (sub_id === void 0) { sub_id = 0; }\r\n        var dependency = new ResourceDependency_1.ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents, sub_id);\r\n        this._dependencies.push(dependency);\r\n        return dependency;\r\n    };\r\n    ParserBase.prototype._pPauseAndRetrieveDependencies = function () {\r\n        this._pPauseParsing();\r\n        this.dispatchEvent(new ParserEvent_1.ParserEvent(ParserEvent_1.ParserEvent.READY_FOR_DEPENDENCIES));\r\n    };\r\n    ParserBase.prototype._pPauseParsing = function () {\r\n        if (this._timer)\r\n            this._timer.stop();\r\n        this._parsingPaused = true;\r\n    };\r\n    /**\r\n     * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\r\n     * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\r\n     */\r\n    ParserBase.prototype._pHasTime = function () {\r\n        return ((getTimer_1.getTimer() - this._lastFrameTime) < this._frameLimit);\r\n    };\r\n    /**\r\n     * Called when the parsing pause interval has passed and parsing can proceed.\r\n     */\r\n    ParserBase.prototype._pOnInterval = function (event) {\r\n        if (event === void 0) { event = null; }\r\n        this._lastFrameTime = getTimer_1.getTimer();\r\n        this._isParsing = true;\r\n        if (this._pProceedParsing() && !this._parsingFailure)\r\n            this._pFinishParsing();\r\n        this._isParsing = false;\r\n    };\r\n    /**\r\n     * Initializes the parsing of data.\r\n     * @param frameLimit The maximum duration of a parsing session.\r\n     */\r\n    ParserBase.prototype._pStartParsing = function (frameLimit) {\r\n        this._frameLimit = frameLimit;\r\n        this._timer = new Timer_1.Timer(this._frameLimit, 0);\r\n        this._timer.addEventListener(TimerEvent_1.TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n        this._timer.start();\r\n        //get started!\r\n        this._pOnInterval();\r\n    };\r\n    /**\r\n     * Finish parsing the data.\r\n     */\r\n    ParserBase.prototype._pFinishParsing = function () {\r\n        if (this._timer) {\r\n            this._timer.removeEventListener(TimerEvent_1.TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n            this._timer.stop();\r\n        }\r\n        this._timer = null;\r\n        this._parsingComplete = true;\r\n        this._isParsing = false;\r\n        this.dispatchEvent(new ParserEvent_1.ParserEvent(ParserEvent_1.ParserEvent.PARSE_COMPLETE));\r\n    };\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    ParserBase.prototype._pGetTextData = function () {\r\n        return ParserUtils_1.ParserUtils.toString(this._data);\r\n    };\r\n    /**\r\n     *\r\n     * @returns {ByteArray}\r\n     * @private\r\n     */\r\n    ParserBase.prototype._pGetByteData = function () {\r\n        return ParserUtils_1.ParserUtils.toByteArray(this._data);\r\n    };\r\n    /**\r\n     *\r\n     * @returns {any}\r\n     * @private\r\n     */\r\n    ParserBase.prototype._pGetData = function () {\r\n        return this._data;\r\n    };\r\n    /**\r\n     * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\r\n     */\r\n    ParserBase.PARSING_DONE = true;\r\n    /* Protected */\r\n    /**\r\n     * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\r\n     */\r\n    ParserBase.MORE_TO_PARSE = false;\r\n    return ParserBase;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.ParserBase = ParserBase;\r\n},{\"../errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"../events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"../events/ParserEvent\":\"awayjs-core/lib/events/ParserEvent\",\"../events/TimerEvent\":\"awayjs-core/lib/events/TimerEvent\",\"../parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\",\"../parsers/ResourceDependency\":\"awayjs-core/lib/parsers/ResourceDependency\",\"../utils/ImageUtils\":\"awayjs-core/lib/utils/ImageUtils\",\"../utils/Timer\":\"awayjs-core/lib/utils/Timer\",\"../utils/getTimer\":\"awayjs-core/lib/utils/getTimer\"}],\"awayjs-core/lib/parsers/ParserDataFormat\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * An enumeration providing values to describe the data format of parsed data.\r\n */\r\nvar ParserDataFormat = (function () {\r\n    function ParserDataFormat() {\r\n    }\r\n    /**\r\n     * Describes the format of a binary file.\r\n     */\r\n    ParserDataFormat.BINARY = \"binary\";\r\n    /**\r\n     * Describes the format of a plain text file.\r\n     */\r\n    ParserDataFormat.PLAIN_TEXT = \"plainText\";\r\n    /**\r\n     * Describes the format of an image file\r\n     */\r\n    ParserDataFormat.IMAGE = \"image\";\r\n    return ParserDataFormat;\r\n}());\r\nexports.ParserDataFormat = ParserDataFormat;\r\n},{}],\"awayjs-core/lib/parsers/ParserUtils\":[function(require,module,exports){\n\"use strict\";\r\nvar BitmapImage2D_1 = require(\"../image/BitmapImage2D\");\r\nvar ByteArray_1 = require(\"../utils/ByteArray\");\r\nvar ParserUtils = (function () {\r\n    function ParserUtils() {\r\n    }\r\n    ParserUtils.arrayBufferToBase64 = function (data, mimeType) {\r\n        var byteStr = '';\r\n        var bytes = new Uint8Array(data);\r\n        var len = bytes.byteLength;\r\n        for (var i = 0; i < len; i++)\r\n            byteStr += String.fromCharCode(bytes[i]);\r\n        var base64Image = window.btoa(byteStr);\r\n        return 'data:' + mimeType + ';base64,' + base64Image;\r\n    };\r\n    ParserUtils.arrayBufferToAudio = function (data, fileType) {\r\n        var str = ParserUtils.arrayBufferToBase64(data, 'audio/' + fileType);\r\n        var audio = new Audio();\r\n        audio.src = str;\r\n        return audio;\r\n    };\r\n    /**\r\n     * Converts an ArrayBuffer to a base64 string\r\n     *\r\n     * @param image data as a ByteArray\r\n     *\r\n     * @return HTMLImageElement\r\n     *\r\n     */\r\n    ParserUtils.arrayBufferToImage = function (data) {\r\n        var str = ParserUtils.arrayBufferToBase64(data, 'image/png');\r\n        var img = new Image();\r\n        img.src = str;\r\n        return img;\r\n    };\r\n    /**\r\n     * Converts an ByteArray to an Image - returns an HTMLImageElement\r\n     *\r\n     * @param image data as a ByteArray\r\n     *\r\n     * @return HTMLImageElement\r\n     *\r\n     */\r\n    ParserUtils.byteArrayToImage = function (data) {\r\n        var str = ParserUtils.arrayBufferToBase64(data.arraybytes, 'image/png');\r\n        var img = new Image();\r\n        img.src = str;\r\n        return img;\r\n    };\r\n    ParserUtils.byteArrayToAudio = function (data, filetype) {\r\n        var str = ParserUtils.arrayBufferToBase64(data.arraybytes, 'audio/' + filetype);\r\n        var audio = new Audio();\r\n        audio.src = str;\r\n        return audio;\r\n    };\r\n    /**\r\n     * Converts an Blob to an Image - returns an HTMLImageElement\r\n     *\r\n     * @param image data as a Blob\r\n     *\r\n     * @return HTMLImageElement\r\n     *\r\n     */\r\n    ParserUtils.blobToImage = function (data) {\r\n        var URLObj = window['URL'] || window['webkitURL'];\r\n        var src = URLObj.createObjectURL(data);\r\n        var img = new Image();\r\n        img.src = src;\r\n        return img;\r\n    };\r\n    /**\r\n     * Converts an Blob to audio - returns an HTMLAudioElement\r\n     *\r\n     * @param audio data as a Blob\r\n     *\r\n     * @return HTMLAudioElement\r\n     *\r\n     */\r\n    ParserUtils.blobToAudio = function (data) {\r\n        var URLObj = window['URL'] || window['webkitURL'];\r\n        var src = URLObj.createObjectURL(data);\r\n        var img = new Audio();\r\n        img.src = src;\r\n        return img;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    ParserUtils.imageToBitmapImage2D = function (img, powerOfTwo) {\r\n        if (powerOfTwo === void 0) { powerOfTwo = true; }\r\n        var bitmapData = new BitmapImage2D_1.BitmapImage2D(img.width, img.height, true, null, powerOfTwo);\r\n        bitmapData.draw(img);\r\n        return bitmapData;\r\n    };\r\n    /**\r\n     * Returns a object as ByteArray, if possible.\r\n     *\r\n     * @param data The object to return as ByteArray\r\n     *\r\n     * @return The ByteArray or null\r\n     *\r\n     */\r\n    ParserUtils.toByteArray = function (data) {\r\n        var b = new ByteArray_1.ByteArray();\r\n        b.setArrayBuffer(data);\r\n        return b;\r\n    };\r\n    /**\r\n     * Returns a object as String, if possible.\r\n     *\r\n     * @param data The object to return as String\r\n     * @param length The length of the returned String\r\n     *\r\n     * @return The String or null\r\n     *\r\n     */\r\n    ParserUtils.toString = function (data, length) {\r\n        if (length === void 0) { length = 0; }\r\n        if (typeof data === 'string') {\r\n            var s = data;\r\n            if (s['substr'] != null)\r\n                return s.substr(0, s.length);\r\n        }\r\n        if (data instanceof ByteArray_1.ByteArray) {\r\n            var ba = data;\r\n            ba.position = 0;\r\n            return ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\r\n        }\r\n        return null;\r\n        /*\r\n         var ba:ByteArray;\r\n\r\n         length ||= uint.MAX_VALUE;\r\n\r\n         if (data is String)\r\n         return String(data).substr(0, length);\r\n\r\n         ba = toByteArray(data);\r\n         if (ba) {\r\n         ba.position = 0;\r\n         return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\r\n         }\r\n\r\n         return null;\r\n\r\n         */\r\n    };\r\n    return ParserUtils;\r\n}());\r\nexports.ParserUtils = ParserUtils;\r\n},{\"../image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\",\"../utils/ByteArray\":\"awayjs-core/lib/utils/ByteArray\"}],\"awayjs-core/lib/parsers/ResourceDependency\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\r\n * required by a parser, used by ResourceLoadSession.\r\n *\r\n */\r\nvar ResourceDependency = (function () {\r\n    function ResourceDependency(id, request, data, parser, parentParser, retrieveAsRawData, suppressAssetEvents, sub_id) {\r\n        if (retrieveAsRawData === void 0) { retrieveAsRawData = false; }\r\n        if (suppressAssetEvents === void 0) { suppressAssetEvents = false; }\r\n        if (sub_id === void 0) { sub_id = 0; }\r\n        this._id = id;\r\n        this._sub_id = sub_id;\r\n        this._request = request;\r\n        this._data = data;\r\n        this._parser = parser;\r\n        this._parentParser = parentParser;\r\n        this._retrieveAsRawData = retrieveAsRawData;\r\n        this._suppressAssetEvents = suppressAssetEvents;\r\n        this._assets = new Array();\r\n        this._dependencies = new Array();\r\n    }\r\n    Object.defineProperty(ResourceDependency.prototype, \"id\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResourceDependency.prototype, \"sub_id\", {\r\n        get: function () {\r\n            return this._sub_id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResourceDependency.prototype, \"request\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._request;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResourceDependency.prototype, \"data\", {\r\n        /**\r\n         * The data containing the dependency to be parsed, if the resource was already loaded.\r\n         */\r\n        get: function () {\r\n            return this._data;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResourceDependency.prototype, \"parser\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parser;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResourceDependency.prototype, \"parentParser\", {\r\n        /**\r\n         * The parser which is dependent on this ResourceDependency object.\r\n         */\r\n        get: function () {\r\n            return this._parentParser;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResourceDependency.prototype, \"retrieveAsRawData\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._retrieveAsRawData;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResourceDependency.prototype, \"suppresAssetEvents\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._suppressAssetEvents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResourceDependency.prototype, \"assets\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._assets;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResourceDependency.prototype, \"dependencies\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._dependencies;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @private\r\n     * Method to set data after having already created the dependency object, e.g. after load.\r\n     */\r\n    ResourceDependency.prototype._iSetData = function (data) {\r\n        this._data = data;\r\n    };\r\n    /**\r\n     * @private\r\n     *\r\n     */\r\n    ResourceDependency.prototype._iSetParser = function (parser) {\r\n        this._parser = parser;\r\n    };\r\n    /**\r\n     * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\r\n     * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\r\n     * to its intended parent. The dependency should be a member of the dependencies property.\r\n     */\r\n    ResourceDependency.prototype.resolve = function () {\r\n        if (this._parentParser)\r\n            this._parentParser._iResolveDependency(this);\r\n    };\r\n    /**\r\n     * Resolve a dependency failure. For example, map loading failure from a 3d file\r\n     */\r\n    ResourceDependency.prototype.resolveFailure = function () {\r\n        if (this._parentParser)\r\n            this._parentParser._iResolveDependencyFailure(this);\r\n    };\r\n    /**\r\n     * Resolve the dependencies name\r\n     */\r\n    ResourceDependency.prototype.resolveName = function (asset) {\r\n        if (this._parentParser)\r\n            return this._parentParser._iResolveDependencyName(this, asset);\r\n        return asset.name;\r\n    };\r\n    return ResourceDependency;\r\n}());\r\nexports.ResourceDependency = ResourceDependency;\r\n},{}],\"awayjs-core/lib/parsers/TextureAtlasParser\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Sampler2D_1 = require(\"../image/Sampler2D\");\r\nvar Rectangle_1 = require(\"../geom/Rectangle\");\r\nvar URLLoaderDataFormat_1 = require(\"../net/URLLoaderDataFormat\");\r\nvar URLRequest_1 = require(\"../net/URLRequest\");\r\nvar ParserBase_1 = require(\"../parsers/ParserBase\");\r\nvar ParserUtils_1 = require(\"../parsers/ParserUtils\");\r\nvar XmlUtils_1 = require(\"../utils/XmlUtils\");\r\n/**\r\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nvar TextureAtlasParser = (function (_super) {\r\n    __extends(TextureAtlasParser, _super);\r\n    /**\r\n     * Creates a new TextureAtlasParser object.\r\n     * @param uri The url or id of the data or file to be parsed.\r\n     * @param extra The holder for extra contextual data that the parser might need.\r\n     */\r\n    function TextureAtlasParser() {\r\n        _super.call(this, URLLoaderDataFormat_1.URLLoaderDataFormat.TEXT);\r\n        this._parseState = 0;\r\n    }\r\n    /**\r\n     * Indicates whether or not a given file extension is supported by the parser.\r\n     * @param extension The file extension of a potential file to be parsed.\r\n     * @return Whether or not the given file type is supported.\r\n     */\r\n    TextureAtlasParser.supportsType = function (extension) {\r\n        extension = extension.toLowerCase();\r\n        return extension == \"xml\";\r\n    };\r\n    /**\r\n     * Tests whether a data block can be parsed by the parser.\r\n     * @param data The data block to potentially be parsed.\r\n     * @return Whether or not the given data is supported.\r\n     */\r\n    TextureAtlasParser.supportsData = function (data) {\r\n        try {\r\n            var content = ParserUtils_1.ParserUtils.toString(data);\r\n            if (content.indexOf(\"TextureAtlas\") != -1 || content.indexOf(\"textureatlas\") != -1)\r\n                return true;\r\n            return false;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TextureAtlasParser.prototype._iResolveDependency = function (resourceDependency) {\r\n        if (resourceDependency.assets.length) {\r\n            this._imageData = resourceDependency.assets[0];\r\n            this._pFinalizeAsset(this._imageData);\r\n            this._parseState = TextureAtlasParserState.PARSE_SUBTEXTURES;\r\n        }\r\n        else {\r\n            this._parseState = TextureAtlasParserState.PARSE_COMPLETE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TextureAtlasParser.prototype._iResolveDependencyFailure = function (resourceDependency) {\r\n        this._parseState = TextureAtlasParserState.PARSE_COMPLETE;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TextureAtlasParser.prototype._pProceedParsing = function () {\r\n        var nodes;\r\n        switch (this._parseState) {\r\n            case TextureAtlasParserState.PARSE_XML:\r\n                try {\r\n                    this._doc = XmlUtils_1.XmlUtils.getChildrenWithTag(XmlUtils_1.XmlUtils.strToXml(this._pGetTextData()), \"TextureAtlas\")[0];\r\n                    this._imagePath = XmlUtils_1.XmlUtils.readAttributeValue(this._doc, \"imagePath\");\r\n                    this._subTextureNodes = XmlUtils_1.XmlUtils.getChildrenWithTag(this._doc, \"SubTexture\");\r\n                    this._parseState = TextureAtlasParserState.PARSE_IMAGE;\r\n                }\r\n                catch (Error) {\r\n                    return ParserBase_1.ParserBase.PARSING_DONE;\r\n                }\r\n                break;\r\n            case TextureAtlasParserState.PARSE_IMAGE:\r\n                if (this._imagePath) {\r\n                    this._pAddDependency(this._imagePath, new URLRequest_1.URLRequest(this._imagePath));\r\n                    this._pPauseAndRetrieveDependencies();\r\n                }\r\n                else {\r\n                    return ParserBase_1.ParserBase.PARSING_DONE;\r\n                }\r\n                break;\r\n            case TextureAtlasParserState.PARSE_SUBTEXTURES:\r\n                var sampler;\r\n                var element;\r\n                var x;\r\n                var y;\r\n                var width;\r\n                var height;\r\n                var len = this._subTextureNodes.length;\r\n                for (var i = 0; i < len; i++) {\r\n                    element = this._subTextureNodes[i];\r\n                    sampler = new Sampler2D_1.Sampler2D();\r\n                    //setup subtexture rect\r\n                    x = XmlUtils_1.XmlUtils.readAttributeValue(element, \"x\");\r\n                    y = XmlUtils_1.XmlUtils.readAttributeValue(element, \"y\");\r\n                    width = XmlUtils_1.XmlUtils.readAttributeValue(element, \"width\");\r\n                    height = XmlUtils_1.XmlUtils.readAttributeValue(element, \"height\");\r\n                    if (x || y || width || height)\r\n                        sampler.imageRect = new Rectangle_1.Rectangle(parseInt(x) / this._imageData.width, parseInt(y) / this._imageData.height, parseInt(width) / this._imageData.width, parseInt(height) / this._imageData.height);\r\n                    //setup frame rect\r\n                    x = XmlUtils_1.XmlUtils.readAttributeValue(element, \"frameX\");\r\n                    y = XmlUtils_1.XmlUtils.readAttributeValue(element, \"frameY\");\r\n                    width = XmlUtils_1.XmlUtils.readAttributeValue(element, \"frameWidth\");\r\n                    height = XmlUtils_1.XmlUtils.readAttributeValue(element, \"frameHeight\");\r\n                    if (x || y || width || height)\r\n                        sampler.frameRect = new Rectangle_1.Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\r\n                    this._pFinalizeAsset(sampler, XmlUtils_1.XmlUtils.readAttributeValue(element, \"name\"));\r\n                }\r\n                this._parseState = TextureAtlasParserState.PARSE_COMPLETE;\r\n                break;\r\n            case TextureAtlasParserState.PARSE_COMPLETE:\r\n                return ParserBase_1.ParserBase.PARSING_DONE;\r\n        }\r\n        return ParserBase_1.ParserBase.MORE_TO_PARSE;\r\n    };\r\n    return TextureAtlasParser;\r\n}(ParserBase_1.ParserBase));\r\nexports.TextureAtlasParser = TextureAtlasParser;\r\nvar TextureAtlasParserState = (function () {\r\n    function TextureAtlasParserState() {\r\n    }\r\n    TextureAtlasParserState.PARSE_XML = 0;\r\n    TextureAtlasParserState.PARSE_IMAGE = 1;\r\n    TextureAtlasParserState.PARSE_SUBTEXTURES = 2;\r\n    TextureAtlasParserState.PARSE_COMPLETE = 3;\r\n    return TextureAtlasParserState;\r\n}());\r\nexports.TextureAtlasParserState = TextureAtlasParserState;\r\n},{\"../geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"../image/Sampler2D\":\"awayjs-core/lib/image/Sampler2D\",\"../net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"../net/URLRequest\":\"awayjs-core/lib/net/URLRequest\",\"../parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\",\"../parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\",\"../utils/XmlUtils\":\"awayjs-core/lib/utils/XmlUtils\"}],\"awayjs-core/lib/parsers/WaveAudioParser\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar WaveAudio_1 = require(\"../audio/WaveAudio\");\r\nvar URLLoaderDataFormat_1 = require(\"../net/URLLoaderDataFormat\");\r\nvar ParserBase_1 = require(\"../parsers/ParserBase\");\r\nvar ByteArray_1 = require(\"../utils/ByteArray\");\r\nvar WaveAudioParser = (function (_super) {\r\n    __extends(WaveAudioParser, _super);\r\n    function WaveAudioParser() {\r\n        _super.call(this, URLLoaderDataFormat_1.URLLoaderDataFormat.BLOB);\r\n    }\r\n    WaveAudioParser.supportsType = function (extension) {\r\n        extension = extension.toLowerCase();\r\n        return extension == \"wav\" || extension == \"mp3\" || extension == \"ogg\";\r\n    };\r\n    WaveAudioParser.supportsData = function (data) {\r\n        if (!(data instanceof ByteArray_1.ByteArray))\r\n            return false;\r\n        var ba = data;\r\n        var filetype = WaveAudioParser.parseFileType(ba);\r\n        return filetype ? true : false;\r\n    };\r\n    WaveAudioParser.prototype._pStartParsing = function (frameLimit) {\r\n        //clear content\r\n        delete this._pContent;\r\n        this._pContent = null;\r\n        _super.prototype._pStartParsing.call(this, frameLimit);\r\n    };\r\n    WaveAudioParser.prototype._pProceedParsing = function () {\r\n        if (this.data instanceof ByteArray_1.ByteArray) {\r\n            this._pContent = new WaveAudio_1.WaveAudio(this.data.arraybytes);\r\n            this._pFinalizeAsset(this._pContent, this._iFileName);\r\n        }\r\n        else if (this.data instanceof ArrayBuffer) {\r\n            this._pContent = new WaveAudio_1.WaveAudio(this.data);\r\n            this._pFinalizeAsset(this._pContent, this._iFileName);\r\n        }\r\n        return ParserBase_1.ParserBase.PARSING_DONE;\r\n    };\r\n    WaveAudioParser.parseFileType = function (ba) {\r\n        //old mp3 detections\r\n        // This does not seem to work for all my mp3 files (i tested different mp3 encoders)\r\n        // I leave it in, because it might work for mp3 data that i do not have here to test\r\n        ba.position = 0;\r\n        if ((ba.readUnsignedShort() & 0xFFE0) == 0xFFE0) {\r\n            return 'mp3'; // test for MP3 syncword\r\n        }\r\n        // new mp3 detection\r\n        // this from is-mp3 npm module,\r\n        // but still i have mp3 files that are not detected by this\r\n        // i added the hack: (byte_1 === 255 && byte_2 === 243 && byte_3 === 130) \tto catch those mp3s\r\n        // todo: find a more foolproof way to detect al mp3 (my hack might collide with detection for other filetypes)\r\n        ba.position = 0;\r\n        var byte_1 = ba.readUnsignedByte();\r\n        var byte_2 = ba.readUnsignedByte();\r\n        var byte_3 = ba.readUnsignedByte();\r\n        if ((byte_1 === 73 && byte_2 === 68 && byte_3 === 51)\r\n            || (byte_1 === 255 && byte_2 === 251)\r\n            || (byte_1 === 255 && byte_2 === 243 && byte_3 === 130)) {\r\n            return 'mp3';\r\n        }\r\n        ba.position = 0;\r\n        if (ba.readUTFBytes(4) == 'RIFF')\r\n            return 'wav';\r\n        ba.position = 0;\r\n        if (ba.readUTFBytes(4) == 'OggS')\r\n            return 'ogg';\r\n        ba.position = 0;\r\n        return null;\r\n    };\r\n    return WaveAudioParser;\r\n}(ParserBase_1.ParserBase));\r\nexports.WaveAudioParser = WaveAudioParser;\r\n},{\"../audio/WaveAudio\":\"awayjs-core/lib/audio/WaveAudio\",\"../net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"../parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\",\"../utils/ByteArray\":\"awayjs-core/lib/utils/ByteArray\"}],\"awayjs-core/lib/parsers\":[function(require,module,exports){\n\"use strict\";\r\nvar Image2DParser_1 = require(\"./parsers/Image2DParser\");\r\nexports.Image2DParser = Image2DParser_1.Image2DParser;\r\nvar ImageCubeParser_1 = require(\"./parsers/ImageCubeParser\");\r\nexports.ImageCubeParser = ImageCubeParser_1.ImageCubeParser;\r\nvar ParserBase_1 = require(\"./parsers/ParserBase\");\r\nexports.ParserBase = ParserBase_1.ParserBase;\r\nvar ParserDataFormat_1 = require(\"./parsers/ParserDataFormat\");\r\nexports.ParserDataFormat = ParserDataFormat_1.ParserDataFormat;\r\nvar ParserUtils_1 = require(\"./parsers/ParserUtils\");\r\nexports.ParserUtils = ParserUtils_1.ParserUtils;\r\nvar ResourceDependency_1 = require(\"./parsers/ResourceDependency\");\r\nexports.ResourceDependency = ResourceDependency_1.ResourceDependency;\r\nvar TextureAtlasParser_1 = require(\"./parsers/TextureAtlasParser\");\r\nexports.TextureAtlasParser = TextureAtlasParser_1.TextureAtlasParser;\r\nvar WaveAudioParser_1 = require(\"./parsers/WaveAudioParser\");\r\nexports.WaveAudioParser = WaveAudioParser_1.WaveAudioParser;\r\n},{\"./parsers/Image2DParser\":\"awayjs-core/lib/parsers/Image2DParser\",\"./parsers/ImageCubeParser\":\"awayjs-core/lib/parsers/ImageCubeParser\",\"./parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\",\"./parsers/ParserDataFormat\":\"awayjs-core/lib/parsers/ParserDataFormat\",\"./parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\",\"./parsers/ResourceDependency\":\"awayjs-core/lib/parsers/ResourceDependency\",\"./parsers/TextureAtlasParser\":\"awayjs-core/lib/parsers/TextureAtlasParser\",\"./parsers/WaveAudioParser\":\"awayjs-core/lib/parsers/WaveAudioParser\"}],\"awayjs-core/lib/projections/CoordinateSystem\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\r\n *\r\n * @see away.projections.PerspectiveLens#coordinateSystem\r\n */\r\nvar CoordinateSystem = (function () {\r\n    function CoordinateSystem() {\r\n    }\r\n    /**\r\n     * Default option, projects to a left-handed coordinate system\r\n     */\r\n    CoordinateSystem.LEFT_HANDED = \"leftHanded\";\r\n    /**\r\n     * Projects to a right-handed coordinate system\r\n     */\r\n    CoordinateSystem.RIGHT_HANDED = \"rightHanded\";\r\n    return CoordinateSystem;\r\n}());\r\nexports.CoordinateSystem = CoordinateSystem;\r\n},{}],\"awayjs-core/lib/projections/FreeMatrixProjection\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar PerspectiveProjection_1 = require(\"../projections/PerspectiveProjection\");\r\nvar ProjectionBase_1 = require(\"../projections/ProjectionBase\");\r\nvar FreeMatrixProjection = (function (_super) {\r\n    __extends(FreeMatrixProjection, _super);\r\n    function FreeMatrixProjection() {\r\n        _super.call(this);\r\n        this._pMatrix.copyFrom(new PerspectiveProjection_1.PerspectiveProjection().matrix);\r\n    }\r\n    Object.defineProperty(FreeMatrixProjection.prototype, \"near\", {\r\n        //@override\r\n        set: function (value) {\r\n            this._pNear = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FreeMatrixProjection.prototype, \"far\", {\r\n        //@override\r\n        set: function (value) {\r\n            this._pFar = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FreeMatrixProjection.prototype, \"iAspectRatio\", {\r\n        //@override\r\n        set: function (value) {\r\n            this._pAspectRatio = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    //@override\r\n    FreeMatrixProjection.prototype.clone = function () {\r\n        var clone = new FreeMatrixProjection();\r\n        clone._pMatrix.copyFrom(this._pMatrix);\r\n        clone._pNear = this._pNear;\r\n        clone._pFar = this._pFar;\r\n        clone._pAspectRatio = this._pAspectRatio;\r\n        clone.pInvalidateMatrix();\r\n        return clone;\r\n    };\r\n    //@override\r\n    FreeMatrixProjection.prototype.pUpdateMatrix = function () {\r\n        this._pMatrixInvalid = false;\r\n    };\r\n    return FreeMatrixProjection;\r\n}(ProjectionBase_1.ProjectionBase));\r\nexports.FreeMatrixProjection = FreeMatrixProjection;\r\n},{\"../projections/PerspectiveProjection\":\"awayjs-core/lib/projections/PerspectiveProjection\",\"../projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/IProjection\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-core/lib/projections/ObliqueNearPlaneProjection\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Vector3D_1 = require(\"../geom/Vector3D\");\r\nvar ProjectionEvent_1 = require(\"../events/ProjectionEvent\");\r\nvar ProjectionBase_1 = require(\"../projections/ProjectionBase\");\r\nvar ObliqueNearPlaneProjection = (function (_super) {\r\n    __extends(ObliqueNearPlaneProjection, _super);\r\n    function ObliqueNearPlaneProjection(baseProjection, plane) {\r\n        var _this = this;\r\n        _super.call(this);\r\n        this.baseProjection = baseProjection;\r\n        this.plane = plane;\r\n        this._onProjectionMatrixChangedDelegate = function (event) { return _this.onProjectionMatrixChanged(event); };\r\n    }\r\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"frustumCorners\", {\r\n        //@override\r\n        get: function () {\r\n            return this._baseProjection.frustumCorners;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"near\", {\r\n        //@override\r\n        get: function () {\r\n            return this._baseProjection.near;\r\n        },\r\n        //@override\r\n        set: function (value) {\r\n            this._baseProjection.near = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"far\", {\r\n        //@override\r\n        get: function () {\r\n            return this._baseProjection.far;\r\n        },\r\n        //@override\r\n        set: function (value) {\r\n            this._baseProjection.far = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"iAspectRatio\", {\r\n        //@override\r\n        get: function () {\r\n            return this._baseProjection._iAspectRatio;\r\n        },\r\n        //@override\r\n        set: function (value) {\r\n            this._baseProjection._iAspectRatio = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"plane\", {\r\n        get: function () {\r\n            return this._plane;\r\n        },\r\n        set: function (value) {\r\n            this._plane = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"baseProjection\", {\r\n        set: function (value) {\r\n            if (this._baseProjection) {\r\n                this._baseProjection.removeEventListener(ProjectionEvent_1.ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n            }\r\n            this._baseProjection = value;\r\n            if (this._baseProjection) {\r\n                this._baseProjection.addEventListener(ProjectionEvent_1.ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n            }\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ObliqueNearPlaneProjection.prototype.onProjectionMatrixChanged = function (event) {\r\n        this.pInvalidateMatrix();\r\n    };\r\n    //@override\r\n    ObliqueNearPlaneProjection.prototype.pUpdateMatrix = function () {\r\n        this._pMatrix.copyFrom(this._baseProjection.matrix);\r\n        var cx = this._plane.a;\r\n        var cy = this._plane.b;\r\n        var cz = this._plane.c;\r\n        var cw = -this._plane.d + .05;\r\n        var signX = cx >= 0 ? 1 : -1;\r\n        var signY = cy >= 0 ? 1 : -1;\r\n        var p = new Vector3D_1.Vector3D(signX, signY, 1, 1);\r\n        var inverse = this._pMatrix.clone();\r\n        inverse.invert();\r\n        var q = inverse.transformVector(p);\r\n        this._pMatrix.copyRowTo(3, p);\r\n        var a = (q.x * p.x + q.y * p.y + q.z * p.z + q.w * p.w) / (cx * q.x + cy * q.y + cz * q.z + cw * q.w);\r\n        this._pMatrix.copyRowFrom(2, new Vector3D_1.Vector3D(cx * a, cy * a, cz * a, cw * a));\r\n    };\r\n    return ObliqueNearPlaneProjection;\r\n}(ProjectionBase_1.ProjectionBase));\r\nexports.ObliqueNearPlaneProjection = ObliqueNearPlaneProjection;\r\n},{\"../events/ProjectionEvent\":\"awayjs-core/lib/events/ProjectionEvent\",\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\",\"../projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/OrthographicOffCenterProjection\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Matrix3DUtils_1 = require(\"../geom/Matrix3DUtils\");\r\nvar Vector3D_1 = require(\"../geom/Vector3D\");\r\nvar ProjectionBase_1 = require(\"../projections/ProjectionBase\");\r\nvar OrthographicOffCenterProjection = (function (_super) {\r\n    __extends(OrthographicOffCenterProjection, _super);\r\n    function OrthographicOffCenterProjection(minX, maxX, minY, maxY) {\r\n        _super.call(this);\r\n        this._minX = minX;\r\n        this._maxX = maxX;\r\n        this._minY = minY;\r\n        this._maxY = maxY;\r\n    }\r\n    Object.defineProperty(OrthographicOffCenterProjection.prototype, \"minX\", {\r\n        get: function () {\r\n            return this._minX;\r\n        },\r\n        set: function (value) {\r\n            this._minX = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OrthographicOffCenterProjection.prototype, \"maxX\", {\r\n        get: function () {\r\n            return this._maxX;\r\n        },\r\n        set: function (value) {\r\n            this._maxX = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OrthographicOffCenterProjection.prototype, \"minY\", {\r\n        get: function () {\r\n            return this._minY;\r\n        },\r\n        set: function (value) {\r\n            this._minY = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OrthographicOffCenterProjection.prototype, \"maxY\", {\r\n        get: function () {\r\n            return this._maxY;\r\n        },\r\n        set: function (value) {\r\n            this._maxY = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    //@override\r\n    OrthographicOffCenterProjection.prototype.unproject = function (nX, nY, sZ) {\r\n        var v = new Vector3D_1.Vector3D(nX, -nY, sZ, 1.0);\r\n        v = this.unprojectionMatrix.transformVector(v);\r\n        //z is unaffected by transform\r\n        v.z = sZ;\r\n        return v;\r\n    };\r\n    //@override\r\n    OrthographicOffCenterProjection.prototype.clone = function () {\r\n        var clone = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\r\n        clone._pNear = this._pNear;\r\n        clone._pFar = this._pFar;\r\n        clone._pAspectRatio = this._pAspectRatio;\r\n        return clone;\r\n    };\r\n    //@override\r\n    OrthographicOffCenterProjection.prototype.pUpdateMatrix = function () {\r\n        var raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        var w = 1 / (this._maxX - this._minX);\r\n        var h = 1 / (this._maxY - this._minY);\r\n        var d = 1 / (this._pFar - this._pNear);\r\n        raw[0] = 2 * w;\r\n        raw[5] = 2 * h;\r\n        raw[10] = d;\r\n        raw[12] = -(this._maxX + this._minX) * w;\r\n        raw[13] = -(this._maxY + this._minY) * h;\r\n        raw[14] = -this._pNear * d;\r\n        raw[15] = 1;\r\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n        this._pMatrix.copyRawDataFrom(raw);\r\n        this._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\r\n        this._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\r\n        this._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\r\n        this._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\r\n        this._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n        this._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n        this._pMatrixInvalid = false;\r\n    };\r\n    return OrthographicOffCenterProjection;\r\n}(ProjectionBase_1.ProjectionBase));\r\nexports.OrthographicOffCenterProjection = OrthographicOffCenterProjection;\r\n},{\"../geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\",\"../projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/OrthographicProjection\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Matrix3DUtils_1 = require(\"../geom/Matrix3DUtils\");\r\nvar Vector3D_1 = require(\"../geom/Vector3D\");\r\nvar ProjectionBase_1 = require(\"../projections/ProjectionBase\");\r\nvar OrthographicProjection = (function (_super) {\r\n    __extends(OrthographicProjection, _super);\r\n    function OrthographicProjection(projectionHeight) {\r\n        if (projectionHeight === void 0) { projectionHeight = 500; }\r\n        _super.call(this);\r\n        this._projectionHeight = projectionHeight;\r\n    }\r\n    Object.defineProperty(OrthographicProjection.prototype, \"projectionHeight\", {\r\n        get: function () {\r\n            return this._projectionHeight;\r\n        },\r\n        set: function (value) {\r\n            if (value == this._projectionHeight) {\r\n                return;\r\n            }\r\n            this._projectionHeight = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    //@override\r\n    OrthographicProjection.prototype.unproject = function (nX, nY, sZ) {\r\n        var v = new Vector3D_1.Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\r\n        v = this.unprojectionMatrix.transformVector(v);\r\n        //z is unaffected by transform\r\n        v.z = sZ;\r\n        return v;\r\n    };\r\n    //@override\r\n    OrthographicProjection.prototype.clone = function () {\r\n        var clone = new OrthographicProjection();\r\n        clone._pNear = this._pNear;\r\n        clone._pFar = this._pFar;\r\n        clone._pAspectRatio = this._pAspectRatio;\r\n        clone.projectionHeight = this._projectionHeight;\r\n        return clone;\r\n    };\r\n    //@override\r\n    OrthographicProjection.prototype.pUpdateMatrix = function () {\r\n        var raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        this._yMax = this._projectionHeight * .5;\r\n        this._xMax = this._yMax * this._pAspectRatio;\r\n        var left;\r\n        var right;\r\n        var top;\r\n        var bottom;\r\n        if (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\r\n            // assume symmetric frustum\r\n            left = -this._xMax;\r\n            right = this._xMax;\r\n            top = -this._yMax;\r\n            bottom = this._yMax;\r\n            raw[0] = 2 / (this._projectionHeight * this._pAspectRatio);\r\n            raw[5] = 2 / this._projectionHeight;\r\n            raw[10] = 1 / (this._pFar - this._pNear);\r\n            raw[14] = this._pNear / (this._pNear - this._pFar);\r\n            raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\r\n            raw[15] = 1;\r\n        }\r\n        else {\r\n            var xWidth = this._xMax * (this._pViewPort.width / this._pScissorRect.width);\r\n            var yHgt = this._yMax * (this._pViewPort.height / this._pScissorRect.height);\r\n            var center = this._xMax * (this._pScissorRect.x * 2 - this._pViewPort.width) / this._pScissorRect.width + this._xMax;\r\n            var middle = -this._yMax * (this._pScissorRect.y * 2 - this._pViewPort.height) / this._pScissorRect.height - this._yMax;\r\n            left = center - xWidth;\r\n            right = center + xWidth;\r\n            top = middle - yHgt;\r\n            bottom = middle + yHgt;\r\n            raw[0] = 2 * 1 / (right - left);\r\n            raw[5] = -2 * 1 / (top - bottom);\r\n            raw[10] = 1 / (this._pFar - this._pNear);\r\n            raw[12] = (right + left) / (right - left);\r\n            raw[13] = (bottom + top) / (bottom - top);\r\n            raw[14] = this._pNear / (this.near - this.far);\r\n            raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n            raw[15] = 1;\r\n        }\r\n        this._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\r\n        this._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\r\n        this._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\r\n        this._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\r\n        this._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n        this._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n        this._pMatrix.copyRawDataFrom(raw);\r\n        this._pMatrixInvalid = false;\r\n    };\r\n    return OrthographicProjection;\r\n}(ProjectionBase_1.ProjectionBase));\r\nexports.OrthographicProjection = OrthographicProjection;\r\n},{\"../geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\",\"../projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/PerspectiveProjection\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Matrix3DUtils_1 = require(\"../geom/Matrix3DUtils\");\r\nvar Vector3D_1 = require(\"../geom/Vector3D\");\r\nvar CoordinateSystem_1 = require(\"../projections/CoordinateSystem\");\r\nvar ProjectionBase_1 = require(\"../projections/ProjectionBase\");\r\nvar PerspectiveProjection = (function (_super) {\r\n    __extends(PerspectiveProjection, _super);\r\n    function PerspectiveProjection(fieldOfView, coordinateSystem) {\r\n        if (fieldOfView === void 0) { fieldOfView = 60; }\r\n        if (coordinateSystem === void 0) { coordinateSystem = \"leftHanded\"; }\r\n        _super.call(this, coordinateSystem);\r\n        this._fieldOfView = 60;\r\n        this._focalLength = 1000;\r\n        this._hFieldOfView = 60;\r\n        this._hFocalLength = 1000;\r\n        this._preserveAspectRatio = true;\r\n        this._preserveFocalLength = false;\r\n        this.fieldOfView = fieldOfView;\r\n    }\r\n    Object.defineProperty(PerspectiveProjection.prototype, \"preserveAspectRatio\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._preserveAspectRatio;\r\n        },\r\n        set: function (value) {\r\n            if (this._preserveAspectRatio == value)\r\n                return;\r\n            this._preserveAspectRatio = value;\r\n            if (this._preserveAspectRatio)\r\n                this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerspectiveProjection.prototype, \"preserveFocalLength\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._preserveFocalLength;\r\n        },\r\n        set: function (value) {\r\n            if (this._preserveFocalLength == value)\r\n                return;\r\n            this._preserveFocalLength = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerspectiveProjection.prototype, \"fieldOfView\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._fieldOfView;\r\n        },\r\n        set: function (value) {\r\n            if (this._fieldOfView == value)\r\n                return;\r\n            this._fieldOfView = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerspectiveProjection.prototype, \"focalLength\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._focalLength;\r\n        },\r\n        set: function (value) {\r\n            if (this._focalLength == value)\r\n                return;\r\n            this._focalLength = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerspectiveProjection.prototype, \"hFieldOfView\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._hFieldOfView;\r\n        },\r\n        set: function (value) {\r\n            if (this._hFieldOfView == value)\r\n                return;\r\n            this._hFieldOfView = value;\r\n            this._hFocalLength = 1 / Math.tan(this._hFieldOfView * Math.PI / 360);\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerspectiveProjection.prototype, \"hFocalLength\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._hFocalLength;\r\n        },\r\n        set: function (value) {\r\n            if (this._hFocalLength == value)\r\n                return;\r\n            this._hFocalLength = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    //@override\r\n    PerspectiveProjection.prototype.unproject = function (nX, nY, sZ) {\r\n        var v = new Vector3D_1.Vector3D(nX, -nY, sZ, 1.0);\r\n        v.x *= sZ;\r\n        v.y *= sZ;\r\n        v = this.unprojectionMatrix.transformVector(v);\r\n        //z is unaffected by transform\r\n        v.z = sZ;\r\n        return v;\r\n    };\r\n    //@override\r\n    PerspectiveProjection.prototype.clone = function () {\r\n        var clone = new PerspectiveProjection(this._fieldOfView);\r\n        clone._pNear = this._pNear;\r\n        clone._pFar = this._pFar;\r\n        clone._pAspectRatio = this._pAspectRatio;\r\n        clone._pCoordinateSystem = this._pCoordinateSystem;\r\n        return clone;\r\n    };\r\n    //@override\r\n    PerspectiveProjection.prototype.pUpdateMatrix = function () {\r\n        var raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        if (this._preserveFocalLength) {\r\n            if (this._preserveAspectRatio)\r\n                this._hFocalLength = this._focalLength;\r\n            this._fieldOfView = Math.atan(0.5 * this._pScissorRect.height / this._focalLength) * 360 / Math.PI;\r\n            this._hFieldOfView = Math.atan(0.5 * this._pScissorRect.width / this._hFocalLength) * 360 / Math.PI;\r\n        }\r\n        else {\r\n            this._focalLength = 0.5 * this._pScissorRect.height / Math.tan(this._fieldOfView * Math.PI / 360);\r\n            if (this._preserveAspectRatio)\r\n                this._hFocalLength = this._focalLength;\r\n            else\r\n                this._hFocalLength = 0.5 * this._pScissorRect.width / Math.tan(this._hFieldOfView * Math.PI / 360);\r\n        }\r\n        var tanMinX = -this._pOriginX / this._hFocalLength;\r\n        var tanMaxX = (1 - this._pOriginX) / this._hFocalLength;\r\n        var tanMinY = -this._pOriginY / this._focalLength;\r\n        var tanMaxY = (1 - this._pOriginY) / this._focalLength;\r\n        var left;\r\n        var right;\r\n        var top;\r\n        var bottom;\r\n        // assume scissored frustum\r\n        var center = -((tanMinX - tanMaxX) * this._pScissorRect.x + tanMinX * this._pScissorRect.width);\r\n        var middle = ((tanMinY - tanMaxY) * this._pScissorRect.y + tanMinY * this._pScissorRect.height);\r\n        left = center - (tanMaxX - tanMinX) * this._pViewPort.width;\r\n        right = center;\r\n        top = middle;\r\n        bottom = middle + (tanMaxY - tanMinY) * this._pViewPort.height;\r\n        raw[0] = 2 / (right - left);\r\n        raw[5] = 2 / (bottom - top);\r\n        raw[8] = (right + left) / (right - left);\r\n        raw[9] = (bottom + top) / (bottom - top);\r\n        raw[10] = (this._pFar + this._pNear) / (this._pFar - this._pNear);\r\n        raw[11] = 1;\r\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\r\n        raw[14] = -2 * this._pFar * this._pNear / (this._pFar - this._pNear);\r\n        if (this._pCoordinateSystem == CoordinateSystem_1.CoordinateSystem.RIGHT_HANDED)\r\n            raw[5] = -raw[5];\r\n        this._pMatrix.copyRawDataFrom(raw);\r\n        this._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear * left;\r\n        this._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear * right;\r\n        this._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear * top;\r\n        this._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear * bottom;\r\n        this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar * left;\r\n        this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar * right;\r\n        this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar * top;\r\n        this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar * bottom;\r\n        this._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n        this._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n        this._pMatrixInvalid = false;\r\n    };\r\n    return PerspectiveProjection;\r\n}(ProjectionBase_1.ProjectionBase));\r\nexports.PerspectiveProjection = PerspectiveProjection;\r\n},{\"../geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\",\"../projections/CoordinateSystem\":\"awayjs-core/lib/projections/CoordinateSystem\",\"../projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/ProjectionBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Matrix3D_1 = require(\"../geom/Matrix3D\");\r\nvar Rectangle_1 = require(\"../geom/Rectangle\");\r\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\r\nvar ProjectionEvent_1 = require(\"../events/ProjectionEvent\");\r\nvar AbstractMethodError_1 = require(\"../errors/AbstractMethodError\");\r\nvar ProjectionBase = (function (_super) {\r\n    __extends(ProjectionBase, _super);\r\n    function ProjectionBase(coordinateSystem) {\r\n        if (coordinateSystem === void 0) { coordinateSystem = \"leftHanded\"; }\r\n        _super.call(this);\r\n        this._pMatrix = new Matrix3D_1.Matrix3D();\r\n        this._pScissorRect = new Rectangle_1.Rectangle();\r\n        this._pViewPort = new Rectangle_1.Rectangle();\r\n        this._pNear = 20;\r\n        this._pFar = 3000;\r\n        this._pAspectRatio = 1;\r\n        this._pMatrixInvalid = true;\r\n        this._pFrustumCorners = [];\r\n        this._pOriginX = 0.5;\r\n        this._pOriginY = 0.5;\r\n        this._unprojectionInvalid = true;\r\n        this.coordinateSystem = coordinateSystem;\r\n    }\r\n    Object.defineProperty(ProjectionBase.prototype, \"coordinateSystem\", {\r\n        /**\r\n         * The handedness of the coordinate system projection. The default is LEFT_HANDED.\r\n         */\r\n        get: function () {\r\n            return this._pCoordinateSystem;\r\n        },\r\n        set: function (value) {\r\n            if (this._pCoordinateSystem == value)\r\n                return;\r\n            this._pCoordinateSystem = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProjectionBase.prototype, \"frustumCorners\", {\r\n        get: function () {\r\n            return this._pFrustumCorners;\r\n        },\r\n        set: function (frustumCorners) {\r\n            this._pFrustumCorners = frustumCorners;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProjectionBase.prototype, \"matrix\", {\r\n        get: function () {\r\n            if (this._pMatrixInvalid) {\r\n                this.pUpdateMatrix();\r\n                this._pMatrixInvalid = false;\r\n            }\r\n            return this._pMatrix;\r\n        },\r\n        set: function (value) {\r\n            this._pMatrix = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProjectionBase.prototype, \"near\", {\r\n        get: function () {\r\n            return this._pNear;\r\n        },\r\n        set: function (value) {\r\n            if (value == this._pNear) {\r\n                return;\r\n            }\r\n            this._pNear = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProjectionBase.prototype, \"originX\", {\r\n        get: function () {\r\n            return this._pOriginX;\r\n        },\r\n        set: function (value) {\r\n            if (this._pOriginX == value)\r\n                return;\r\n            this._pOriginX = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProjectionBase.prototype, \"originY\", {\r\n        get: function () {\r\n            return this._pOriginY;\r\n        },\r\n        set: function (value) {\r\n            if (this._pOriginY == value)\r\n                return;\r\n            this._pOriginY = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProjectionBase.prototype, \"far\", {\r\n        get: function () {\r\n            return this._pFar;\r\n        },\r\n        set: function (value) {\r\n            if (value == this._pFar) {\r\n                return;\r\n            }\r\n            this._pFar = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ProjectionBase.prototype.project = function (point3d) {\r\n        var v = this.matrix.transformVector(point3d);\r\n        v.x = v.x / v.w;\r\n        v.y = -v.y / v.w;\r\n        //z is unaffected by transform\r\n        v.z = point3d.z;\r\n        return v;\r\n    };\r\n    Object.defineProperty(ProjectionBase.prototype, \"unprojectionMatrix\", {\r\n        get: function () {\r\n            if (this._unprojectionInvalid) {\r\n                if (!this._unprojection)\r\n                    this._unprojection = new Matrix3D_1.Matrix3D();\r\n                this._unprojection.copyFrom(this.matrix);\r\n                this._unprojection.invert();\r\n                this._unprojectionInvalid = false;\r\n            }\r\n            return this._unprojection;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ProjectionBase.prototype.unproject = function (nX, nY, sZ) {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    ProjectionBase.prototype.clone = function () {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    Object.defineProperty(ProjectionBase.prototype, \"_iAspectRatio\", {\r\n        get: function () {\r\n            return this._pAspectRatio;\r\n        },\r\n        set: function (value) {\r\n            if (this._pAspectRatio == value)\r\n                return;\r\n            this._pAspectRatio = value;\r\n            this.pInvalidateMatrix();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ProjectionBase.prototype.pInvalidateMatrix = function () {\r\n        this._pMatrixInvalid = true;\r\n        this._unprojectionInvalid = true;\r\n        this.dispatchEvent(new ProjectionEvent_1.ProjectionEvent(ProjectionEvent_1.ProjectionEvent.MATRIX_CHANGED, this));\r\n    };\r\n    ProjectionBase.prototype.pUpdateMatrix = function () {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    ProjectionBase.prototype._iUpdateScissorRect = function (x, y, width, height) {\r\n        this._pScissorRect.x = x;\r\n        this._pScissorRect.y = y;\r\n        this._pScissorRect.width = width;\r\n        this._pScissorRect.height = height;\r\n        this.pInvalidateMatrix();\r\n    };\r\n    ProjectionBase.prototype._iUpdateViewport = function (x, y, width, height) {\r\n        this._pViewPort.x = x;\r\n        this._pViewPort.y = y;\r\n        this._pViewPort.width = width;\r\n        this._pViewPort.height = height;\r\n        this.pInvalidateMatrix();\r\n    };\r\n    return ProjectionBase;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.ProjectionBase = ProjectionBase;\r\n},{\"../errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"../events/ProjectionEvent\":\"awayjs-core/lib/events/ProjectionEvent\",\"../geom/Matrix3D\":\"awayjs-core/lib/geom/Matrix3D\",\"../geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\"}],\"awayjs-core/lib/projections\":[function(require,module,exports){\n\"use strict\";\r\nvar CoordinateSystem_1 = require(\"./projections/CoordinateSystem\");\r\nexports.CoordinateSystem = CoordinateSystem_1.CoordinateSystem;\r\nvar FreeMatrixProjection_1 = require(\"./projections/FreeMatrixProjection\");\r\nexports.FreeMatrixProjection = FreeMatrixProjection_1.FreeMatrixProjection;\r\nvar ObliqueNearPlaneProjection_1 = require(\"./projections/ObliqueNearPlaneProjection\");\r\nexports.ObliqueNearPlaneProjection = ObliqueNearPlaneProjection_1.ObliqueNearPlaneProjection;\r\nvar OrthographicOffCenterProjection_1 = require(\"./projections/OrthographicOffCenterProjection\");\r\nexports.OrthographicOffCenterProjection = OrthographicOffCenterProjection_1.OrthographicOffCenterProjection;\r\nvar OrthographicProjection_1 = require(\"./projections/OrthographicProjection\");\r\nexports.OrthographicProjection = OrthographicProjection_1.OrthographicProjection;\r\nvar PerspectiveProjection_1 = require(\"./projections/PerspectiveProjection\");\r\nexports.PerspectiveProjection = PerspectiveProjection_1.PerspectiveProjection;\r\nvar ProjectionBase_1 = require(\"./projections/ProjectionBase\");\r\nexports.ProjectionBase = ProjectionBase_1.ProjectionBase;\r\n},{\"./projections/CoordinateSystem\":\"awayjs-core/lib/projections/CoordinateSystem\",\"./projections/FreeMatrixProjection\":\"awayjs-core/lib/projections/FreeMatrixProjection\",\"./projections/ObliqueNearPlaneProjection\":\"awayjs-core/lib/projections/ObliqueNearPlaneProjection\",\"./projections/OrthographicOffCenterProjection\":\"awayjs-core/lib/projections/OrthographicOffCenterProjection\",\"./projections/OrthographicProjection\":\"awayjs-core/lib/projections/OrthographicProjection\",\"./projections/PerspectiveProjection\":\"awayjs-core/lib/projections/PerspectiveProjection\",\"./projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/ui/Keyboard\":[function(require,module,exports){\n\"use strict\";\r\nvar Keyboard = (function () {\r\n    function Keyboard() {\r\n    }\r\n    /**\r\n     * Constant associated with the key code value for the A key (65).\r\n     */\r\n    Keyboard.A = 65;\r\n    /**\r\n     * Constant associated with the key code value for the Alternate (Option) key  (18).\r\n     */\r\n    Keyboard.ALTERNATE = 18;\r\n    /**\r\n     * Select the audio mode\r\n     */\r\n    Keyboard.AUDIO = 0x01000017;\r\n    /**\r\n     * Constant associated with the key code value for the B key (66).\r\n     */\r\n    Keyboard.B = 66;\r\n    /**\r\n     * Return to previous page in application\r\n     */\r\n    Keyboard.BACK = 0x01000016;\r\n    /**\r\n     * Constant associated with the key code value for the ` key (192).\r\n     */\r\n    Keyboard.BACKQUOTE = 192;\r\n    /**\r\n     * Constant associated with the key code value for the \\ key (220).\r\n     */\r\n    Keyboard.BACKSLASH = 220;\r\n    /**\r\n     * Constant associated with the key code value for the Backspace key (8).\r\n     */\r\n    Keyboard.BACKSPACE = 8;\r\n    /**\r\n     * Blue function key button\r\n     */\r\n    Keyboard.BLUE = 0x01000003;\r\n    /**\r\n     * Constant associated with the key code value for the C key (67).\r\n     */\r\n    Keyboard.C = 67;\r\n    /**\r\n     * Constant associated with the key code value for the Caps Lock key (20).\r\n     */\r\n    Keyboard.CAPS_LOCK = 20;\r\n    /**\r\n     * Channel down\r\n     */\r\n    Keyboard.CHANNEL_DOWN = 0x01000005;\r\n    /**\r\n     * Channel up\r\n     */\r\n    Keyboard.CHANNEL_UP = 0x01000005;\r\n    /**\r\n     * Constant associated with the key code value for the , key (188).\r\n     */\r\n    Keyboard.COMMA = 188;\r\n    /**\r\n     * Constant associated with the Mac command key (15). This constant is\r\n     * currently only used for setting menu key equivalents.\r\n     */\r\n    Keyboard.COMMAND = 15;\r\n    /**\r\n     * Constant associated with the key code value for the Control key (17).\r\n     */\r\n    Keyboard.CONTROL = 17;\r\n    /**\r\n     * Constant associated with the key code value for the D key (68).\r\n     */\r\n    Keyboard.D = 68;\r\n    /**\r\n     * Constant associated with the key code value for the Delete key (46).\r\n     */\r\n    Keyboard.DELETE = 46;\r\n    /**\r\n     * Constant associated with the key code value for the Down Arrow key (40).\r\n     */\r\n    Keyboard.DOWN = 40;\r\n    /**\r\n     * Engage DVR application mode\r\n     */\r\n    Keyboard.DVR = 0x01000019;\r\n    /**\r\n     * Constant associated with the key code value for the E key (69).\r\n     */\r\n    Keyboard.E = 69;\r\n    /**\r\n     * Constant associated with the key code value for the End key (35).\r\n     */\r\n    Keyboard.END = 35;\r\n    /**\r\n     * Constant associated with the key code value for the Enter key (13).\r\n     */\r\n    Keyboard.ENTER = 13;\r\n    /**\r\n     * Constant associated with the key code value for the = key (187).\r\n     */\r\n    Keyboard.EQUAL = 187;\r\n    /**\r\n     * Constant associated with the key code value for the Escape key (27).\r\n     */\r\n    Keyboard.ESCAPE = 27;\r\n    /**\r\n     * Exits current application mode\r\n     */\r\n    Keyboard.EXIT = 0x01000015;\r\n    /**\r\n     * Constant associated with the key code value for the F key (70).\r\n     */\r\n    Keyboard.F = 70;\r\n    /**\r\n     * Constant associated with the key code value for the F1 key (112).\r\n     */\r\n    Keyboard.F1 = 112;\r\n    /**\r\n     * Constant associated with the key code value for the F10 key (121).\r\n     */\r\n    Keyboard.F10 = 121;\r\n    /**\r\n     * Constant associated with the key code value for the F11 key (122).\r\n     */\r\n    Keyboard.F11 = 122;\r\n    /**\r\n     * Constant associated with the key code value for the F12 key (123).\r\n     */\r\n    Keyboard.F12 = 123;\r\n    /**\r\n     * Constant associated with the key code value for the F13 key (124).\r\n     */\r\n    Keyboard.F13 = 124;\r\n    /**\r\n     * Constant associated with the key code value for the F14 key (125).\r\n     */\r\n    Keyboard.F14 = 125;\r\n    /**\r\n     * Constant associated with the key code value for the F15 key (126).\r\n     */\r\n    Keyboard.F15 = 126;\r\n    /**\r\n     * Constant associated with the key code value for the F2 key (113).\r\n     */\r\n    Keyboard.F2 = 113;\r\n    /**\r\n     * Constant associated with the key code value for the F3 key (114).\r\n     */\r\n    Keyboard.F3 = 114;\r\n    /**\r\n     * Constant associated with the key code value for the F4 key (115).\r\n     */\r\n    Keyboard.F4 = 115;\r\n    /**\r\n     * Constant associated with the key code value for the F5 key (116).\r\n     */\r\n    Keyboard.F5 = 116;\r\n    /**\r\n     * Constant associated with the key code value for the F6 key (117).\r\n     */\r\n    Keyboard.F6 = 117;\r\n    /**\r\n     * Constant associated with the key code value for the F7 key (118).\r\n     */\r\n    Keyboard.F7 = 118;\r\n    /**\r\n     * Constant associated with the key code value for the F8 key (119).\r\n     */\r\n    Keyboard.F8 = 119;\r\n    /**\r\n     * Constant associated with the key code value for the F9 key (120).\r\n     */\r\n    Keyboard.F9 = 120;\r\n    /**\r\n     * Engage fast-forward transport mode\r\n     */\r\n    Keyboard.FAST_FORWARD = 0x0100000A;\r\n    /**\r\n     * Constant associated with the key code value for the G key (71).\r\n     */\r\n    Keyboard.G = 71;\r\n    /**\r\n     * Green function key button\r\n     */\r\n    Keyboard.GREEN = 0x01000001;\r\n    /**\r\n     * Engage program guide\r\n     */\r\n    Keyboard.GUIDE = 0x01000014;\r\n    /**\r\n     * Constant associated with the key code value for the H key (72).\r\n     */\r\n    Keyboard.H = 72;\r\n    /**\r\n     * Engage help application or context-sensitive help\r\n     */\r\n    Keyboard.HELP = 0x0100001D;\r\n    /**\r\n     * Constant associated with the key code value for the Home key (36).\r\n     */\r\n    Keyboard.HOME = 36;\r\n    /**\r\n     * Constant associated with the key code value for the I key (73).\r\n     */\r\n    Keyboard.I = 73;\r\n    /**\r\n     * Info button\r\n     */\r\n    Keyboard.INFO = 0x01000013;\r\n    /**\r\n     * Cycle input\r\n     */\r\n    Keyboard.INPUT = 0x0100001B;\r\n    /**\r\n     * Constant associated with the key code value for the Insert key (45).\r\n     */\r\n    Keyboard.INSERT = 45;\r\n    /**\r\n     * Constant associated with the key code value for the J key (74).\r\n     */\r\n    Keyboard.J = 74;\r\n    /**\r\n     * Constant associated with the key code value for the K key (75).\r\n     */\r\n    Keyboard.K = 75;\r\n    /**\r\n     * The Begin key\r\n     */\r\n    Keyboard.KEYNAME_BEGIN = \"Begin\";\r\n    /**\r\n     * The Break key\r\n     */\r\n    Keyboard.KEYNAME_BREAK = \"Break\";\r\n    /**\r\n     * The Clear Display key\r\n     */\r\n    Keyboard.KEYNAME_CLEARDISPLAY = \"ClrDsp\";\r\n    /**\r\n     * The Clear Line key\r\n     */\r\n    Keyboard.KEYNAME_CLEARLINE = \"ClrLn\";\r\n    /**\r\n     * The Delete key\r\n     */\r\n    Keyboard.KEYNAME_DELETE = \"Delete\";\r\n    /**\r\n     * The Delete Character key\r\n     */\r\n    Keyboard.KEYNAME_DELETECHAR = \"DelChr\";\r\n    /**\r\n     * The Delete Line key\r\n     */\r\n    Keyboard.KEYNAME_DELETELINE = \"DelLn\";\r\n    /**\r\n     * The down arrow\r\n     */\r\n    Keyboard.KEYNAME_DOWNARROW = \"Down\";\r\n    /**\r\n     * The End key\r\n     */\r\n    Keyboard.KEYNAME_END = \"End\";\r\n    /**\r\n     * The Execute key\r\n     */\r\n    Keyboard.KEYNAME_EXECUTE = \"Exec\";\r\n    /**\r\n     * The F1 key\r\n     */\r\n    Keyboard.KEYNAME_F1 = \"F1\";\r\n    /**\r\n     * The F10 key\r\n     */\r\n    Keyboard.KEYNAME_F10 = \"F10\";\r\n    /**\r\n     * The F11 key\r\n     */\r\n    Keyboard.KEYNAME_F11 = \"F11\";\r\n    /**\r\n     * The F12 key\r\n     */\r\n    Keyboard.KEYNAME_F12 = \"F12\";\r\n    /**\r\n     * The F13 key\r\n     */\r\n    Keyboard.KEYNAME_F13 = \"F13\";\r\n    /**\r\n     * The F14 key\r\n     */\r\n    Keyboard.KEYNAME_F14 = \"F14\";\r\n    /**\r\n     * The F15 key\r\n     */\r\n    Keyboard.KEYNAME_F15 = \"F15\";\r\n    /**\r\n     * The F16 key\r\n     */\r\n    Keyboard.KEYNAME_F16 = \"F16\";\r\n    /**\r\n     * The F17 key\r\n     */\r\n    Keyboard.KEYNAME_F17 = \"F17\";\r\n    /**\r\n     * The F18 key\r\n     */\r\n    Keyboard.KEYNAME_F18 = \"F18\";\r\n    /**\r\n     * The F19 key\r\n     */\r\n    Keyboard.KEYNAME_F19 = \"F19\";\r\n    /**\r\n     * The F2 key\r\n     */\r\n    Keyboard.KEYNAME_F2 = \"F2\";\r\n    /**\r\n     * The F20 key\r\n     */\r\n    Keyboard.KEYNAME_F20 = \"F20\";\r\n    /**\r\n     * The F21 key\r\n     */\r\n    Keyboard.KEYNAME_F21 = \"F21\";\r\n    /**\r\n     * The F22 key\r\n     */\r\n    Keyboard.KEYNAME_F22 = \"F22\";\r\n    /**\r\n     * The F23 key\r\n     */\r\n    Keyboard.KEYNAME_F23 = \"F23\";\r\n    /**\r\n     * The F24 key\r\n     */\r\n    Keyboard.KEYNAME_F24 = \"F24\";\r\n    /**\r\n     * The F25 key\r\n     */\r\n    Keyboard.KEYNAME_F25 = \"F25\";\r\n    /**\r\n     * The F26 key\r\n     */\r\n    Keyboard.KEYNAME_F26 = \"F26\";\r\n    /**\r\n     * The F27 key\r\n     */\r\n    Keyboard.KEYNAME_F27 = \"F27\";\r\n    /**\r\n     * The F28 key\r\n     */\r\n    Keyboard.KEYNAME_F28 = \"F28\";\r\n    /**\r\n     * The F29 key\r\n     */\r\n    Keyboard.KEYNAME_F29 = \"F29\";\r\n    /**\r\n     * The F3 key\r\n     */\r\n    Keyboard.KEYNAME_F3 = \"F3\";\r\n    /**\r\n     * The F30 key\r\n     */\r\n    Keyboard.KEYNAME_F30 = \"F30\";\r\n    /**\r\n     * The F31 key\r\n     */\r\n    Keyboard.KEYNAME_F31 = \"F31\";\r\n    /**\r\n     * The F32 key\r\n     */\r\n    Keyboard.KEYNAME_F32 = \"F32\";\r\n    /**\r\n     * The F33 key\r\n     */\r\n    Keyboard.KEYNAME_F33 = \"F33\";\r\n    /**\r\n     * The F34 key\r\n     */\r\n    Keyboard.KEYNAME_F34 = \"F34\";\r\n    /**\r\n     * The F35 key\r\n     */\r\n    Keyboard.KEYNAME_F35 = \"F35\";\r\n    /**\r\n     * The F4 key\r\n     */\r\n    Keyboard.KEYNAME_F4 = \"F4\";\r\n    /**\r\n     * The F5 key\r\n     */\r\n    Keyboard.KEYNAME_F5 = \"F5\";\r\n    /**\r\n     * The F6 key\r\n     */\r\n    Keyboard.KEYNAME_F6 = \"F6\";\r\n    /**\r\n     * The F7 key\r\n     */\r\n    Keyboard.KEYNAME_F7 = \"F7\";\r\n    /**\r\n     * The F8 key\r\n     */\r\n    Keyboard.KEYNAME_F8 = \"F8\";\r\n    /**\r\n     * The F9 key\r\n     */\r\n    Keyboard.KEYNAME_F9 = \"F9\";\r\n    /**\r\n     * The Find key\r\n     */\r\n    Keyboard.KEYNAME_FIND = \"Find\";\r\n    /**\r\n     * The Help key\r\n     */\r\n    Keyboard.KEYNAME_HELP = \"Help\";\r\n    /**\r\n     * The Home key\r\n     */\r\n    Keyboard.KEYNAME_HOME = \"Home\";\r\n    /**\r\n     * The Insert key\r\n     */\r\n    Keyboard.KEYNAME_INSERT = \"Insert\";\r\n    /**\r\n     * The Insert Character key\r\n     */\r\n    Keyboard.KEYNAME_INSERTCHAR = \"InsChr\";\r\n    /**\r\n     * The Insert Line key\r\n     */\r\n    Keyboard.KEYNAME_INSERTLINE = \"LnsLn\";\r\n    /**\r\n     * The left arrow\r\n     */\r\n    Keyboard.KEYNAME_LEFTARROW = \"Left\";\r\n    /**\r\n     * The Menu key\r\n     */\r\n    Keyboard.KEYNAME_MENU = \"Menu\";\r\n    /**\r\n     * The Mode Switch key\r\n     */\r\n    Keyboard.KEYNAME_MODESWITCH = \"ModeSw\";\r\n    /**\r\n     * The Next key\r\n     */\r\n    Keyboard.KEYNAME_NEXT = \"Next\";\r\n    /**\r\n     * The Page Down key\r\n     */\r\n    Keyboard.KEYNAME_PAGEDOWN = \"PgDn\";\r\n    /**\r\n     * The Page Up key\r\n     */\r\n    Keyboard.KEYNAME_PAGEUP = \"PgUp\";\r\n    /**\r\n     * The Pause key\r\n     */\r\n    Keyboard.KEYNAME_PAUSE = \"Pause\";\r\n    /**\r\n     * The Previous key\r\n     */\r\n    Keyboard.KEYNAME_PREV = \"Prev\";\r\n    /**\r\n     * The PRINT key\r\n     */\r\n    Keyboard.KEYNAME_PRINT = \"Print\";\r\n    /**\r\n     * The PRINT Screen\r\n     */\r\n    Keyboard.KEYNAME_PRINTSCREEN = \"PrntScrn\";\r\n    /**\r\n     * The Redo key\r\n     */\r\n    Keyboard.KEYNAME_REDO = \"Redo\";\r\n    /**\r\n     * The Reset key\r\n     */\r\n    Keyboard.KEYNAME_RESET = \"Reset\";\r\n    /**\r\n     * The right arrow\r\n     */\r\n    Keyboard.KEYNAME_RIGHTARROW = \"Right\";\r\n    /**\r\n     * The Scroll Lock key\r\n     */\r\n    Keyboard.KEYNAME_SCROLLLOCK = \"ScrlLck\";\r\n    /**\r\n     * The Select key\r\n     */\r\n    Keyboard.KEYNAME_SELECT = \"Select\";\r\n    /**\r\n     * The Stop key\r\n     */\r\n    Keyboard.KEYNAME_STOP = \"Stop\";\r\n    /**\r\n     * The System Request key\r\n     */\r\n    Keyboard.KEYNAME_SYSREQ = \"SysReq\";\r\n    /**\r\n     * The System key\r\n     */\r\n    Keyboard.KEYNAME_SYSTEM = \"Sys\";\r\n    /**\r\n     * The Undo key\r\n     */\r\n    Keyboard.KEYNAME_UNDO = \"Undo\";\r\n    /**\r\n     * The up arrow\r\n     */\r\n    Keyboard.KEYNAME_UPARROW = \"Up\";\r\n    /**\r\n     * The User key\r\n     */\r\n    Keyboard.KEYNAME_USER = \"User\";\r\n    /**\r\n     * Constant associated with the key code value for the L key (76).\r\n     */\r\n    Keyboard.L = 76;\r\n    /**\r\n     * Watch last channel or show watched\r\n     */\r\n    Keyboard.LAST = 0x01000011;\r\n    /**\r\n     * Constant associated with the key code value for the Left Arrow key (37).\r\n     */\r\n    Keyboard.LEFT = 37;\r\n    /**\r\n     * Constant associated with the key code value for the [ key (219).\r\n     */\r\n    Keyboard.LEFTBRACKET = 219;\r\n    /**\r\n     * Return to live [position in broadcast]\r\n     */\r\n    Keyboard.LIVE = 0x01000010;\r\n    /**\r\n     * Constant associated with the key code value for the M key (77).\r\n     */\r\n    Keyboard.M = 77;\r\n    /**\r\n     * Engage \"Master Shell\" e.g. TiVo or other vendor button\r\n     */\r\n    Keyboard.MASTER_SHELL = 0x0100001E;\r\n    /**\r\n     * Engage menu\r\n     */\r\n    Keyboard.MENU = 0x01000012;\r\n    /**\r\n     * Constant associated with the key code value for the - key (189).\r\n     */\r\n    Keyboard.MINUS = 189;\r\n    /**\r\n     * Constant associated with the key code value for the N key (78).\r\n     */\r\n    Keyboard.N = 78;\r\n    /**\r\n     * Skip to next track or chapter\r\n     */\r\n    Keyboard.NEXT = 0x0100000E;\r\n    /**\r\n     * Constant associated with the key code value for the 0 key (48).\r\n     */\r\n    Keyboard.NUMBER_0 = 48;\r\n    /**\r\n     * Constant associated with the key code value for the 1 key (49).\r\n     */\r\n    Keyboard.NUMBER_1 = 49;\r\n    /**\r\n     * Constant associated with the key code value for the 2 key (50).\r\n     */\r\n    Keyboard.NUMBER_2 = 50;\r\n    /**\r\n     * Constant associated with the key code value for the 3 key (51).\r\n     */\r\n    Keyboard.NUMBER_3 = 51;\r\n    /**\r\n     * Constant associated with the key code value for the 4 key (52).\r\n     */\r\n    Keyboard.NUMBER_4 = 52;\r\n    /**\r\n     * Constant associated with the key code value for the 5 key (53).\r\n     */\r\n    Keyboard.NUMBER_5 = 53;\r\n    /**\r\n     * Constant associated with the key code value for the 6 key (54).\r\n     */\r\n    Keyboard.NUMBER_6 = 54;\r\n    /**\r\n     * Constant associated with the key code value for the 7 key (55).\r\n     */\r\n    Keyboard.NUMBER_7 = 55;\r\n    /**\r\n     * Constant associated with the key code value for the 8 key (56).\r\n     */\r\n    Keyboard.NUMBER_8 = 56;\r\n    /**\r\n     * Constant associated with the key code value for the 9 key (57).\r\n     */\r\n    Keyboard.NUMBER_9 = 57;\r\n    /**\r\n     * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\r\n     */\r\n    Keyboard.NUMPAD = 21;\r\n    /**\r\n     * Constant associated with the key code value for the number 0 key on the number pad (96).\r\n     */\r\n    Keyboard.NUMPAD_0 = 96;\r\n    /**\r\n     * Constant associated with the key code value for the number 1 key on the number pad (97).\r\n     */\r\n    Keyboard.NUMPAD_1 = 97;\r\n    /**\r\n     * Constant associated with the key code value for the number 2 key on the number pad (98).\r\n     */\r\n    Keyboard.NUMPAD_2 = 98;\r\n    /**\r\n     * Constant associated with the key code value for the number 3 key on the number pad (99).\r\n     */\r\n    Keyboard.NUMPAD_3 = 99;\r\n    /**\r\n     * Constant associated with the key code value for the number 4 key on the number pad (100).\r\n     */\r\n    Keyboard.NUMPAD_4 = 100;\r\n    /**\r\n     * Constant associated with the key code value for the number 5 key on the number pad (101).\r\n     */\r\n    Keyboard.NUMPAD_5 = 101;\r\n    /**\r\n     * Constant associated with the key code value for the number 6 key on the number pad (102).\r\n     */\r\n    Keyboard.NUMPAD_6 = 102;\r\n    /**\r\n     * Constant associated with the key code value for the number 7 key on the number pad (103).\r\n     */\r\n    Keyboard.NUMPAD_7 = 103;\r\n    /**\r\n     * Constant associated with the key code value for the number 8 key on the number pad (104).\r\n     */\r\n    Keyboard.NUMPAD_8 = 104;\r\n    /**\r\n     * Constant associated with the key code value for the number 9 key on the number pad (105).\r\n     */\r\n    Keyboard.NUMPAD_9 = 105;\r\n    /**\r\n     * Constant associated with the key code value for the addition key on the number pad (107).\r\n     */\r\n    Keyboard.NUMPAD_ADD = 107;\r\n    /**\r\n     * Constant associated with the key code value for the decimal key on the number pad (110).\r\n     */\r\n    Keyboard.NUMPAD_DECIMAL = 110;\r\n    /**\r\n     * Constant associated with the key code value for the division key on the number pad (111).\r\n     */\r\n    Keyboard.NUMPAD_DIVIDE = 111;\r\n    /**\r\n     * Constant associated with the key code value for the Enter key on the number pad (108).\r\n     */\r\n    Keyboard.NUMPAD_ENTER = 108;\r\n    /**\r\n     * Constant associated with the key code value for the multiplication key on the number pad (106).\r\n     */\r\n    Keyboard.NUMPAD_MULTIPLY = 106;\r\n    /**\r\n     * Constant associated with the key code value for the subtraction key on the number pad (109).\r\n     */\r\n    Keyboard.NUMPAD_SUBTRACT = 109;\r\n    /**\r\n     * Constant associated with the key code value for the O key (79).\r\n     */\r\n    Keyboard.O = 79;\r\n    /**\r\n     * Constant associated with the key code value for the P key (80).\r\n     */\r\n    Keyboard.P = 80;\r\n    /**\r\n     * Constant associated with the key code value for the Page Down key (34).\r\n     */\r\n    Keyboard.PAGE_DOWN = 34;\r\n    /**\r\n     * Constant associated with the key code value for the Page Up key (33).\r\n     */\r\n    Keyboard.PAGE_UP = 33;\r\n    /**\r\n     * Engage pause transport mode\r\n     */\r\n    Keyboard.PAUSE = 0x01000008;\r\n    /**\r\n     * Constant associated with the key code value for the . key (190).\r\n     */\r\n    Keyboard.PERIOD = 190;\r\n    /**\r\n     * Engage play transport mode\r\n     */\r\n    Keyboard.PLAY = 0x01000007;\r\n    /**\r\n     * Skip to previous track or chapter\r\n     */\r\n    Keyboard.PREVIOUS = 0x0100000F;\r\n    /**\r\n     * Constant associated with the key code value for the Q key (81).\r\n     */\r\n    Keyboard.Q = 81;\r\n    /**\r\n     * Constant associated with the key code value for the ' key (222).\r\n     */\r\n    Keyboard.QUOTE = 222;\r\n    /**\r\n     * Constant associated with the key code value for the R key (82).\r\n     */\r\n    Keyboard.R = 82;\r\n    /**\r\n     * Record item or engage record transport mode\r\n     */\r\n    Keyboard.RECORD = 0x01000006;\r\n    /**\r\n     * Red function key button\r\n     */\r\n    Keyboard.RED = 0x01000000;\r\n    /**\r\n     * Engage rewind transport mode\r\n     */\r\n    Keyboard.REWIND = 0x0100000B;\r\n    /**\r\n     * Constant associated with the key code value for the Right Arrow key (39).\r\n     */\r\n    Keyboard.RIGHT = 39;\r\n    /**\r\n     * Constant associated with the key code value for the ] key (221).\r\n     */\r\n    Keyboard.RIGHTBRACKET = 221;\r\n    /**\r\n     * Constant associated with the key code value for the S key (83).\r\n     */\r\n    Keyboard.S = 83;\r\n    /**\r\n     * Search button\r\n     */\r\n    Keyboard.SEARCH = 0x0100001F;\r\n    /**\r\n     * Constant associated with the key code value for the ; key (186).\r\n     */\r\n    Keyboard.SEMICOLON = 186;\r\n    /**\r\n     * Engage setup application or menu\r\n     */\r\n    Keyboard.SETUP = 0x0100001C;\r\n    /**\r\n     * Constant associated with the key code value for the Shift key (16).\r\n     */\r\n    Keyboard.SHIFT = 16;\r\n    /**\r\n     * Quick skip backward (usually 7-10 seconds)\r\n     */\r\n    Keyboard.SKIP_BACKWARD = 0x0100000D;\r\n    /**\r\n     * Quick skip ahead (usually 30 seconds)\r\n     */\r\n    Keyboard.SKIP_FORWARD = 0x0100000C;\r\n    /**\r\n     * Constant associated with the key code value for the / key (191).\r\n     */\r\n    Keyboard.SLASH = 191;\r\n    /**\r\n     * Constant associated with the key code value for the Spacebar (32).\r\n     */\r\n    Keyboard.SPACE = 32;\r\n    /**\r\n     * Engage stop transport mode\r\n     */\r\n    Keyboard.STOP = 0x01000009;\r\n    /**\r\n     * Toggle subtitles\r\n     */\r\n    Keyboard.SUBTITLE = 0x01000018;\r\n    /**\r\n     * Constant associated with the key code value for the T key (84).\r\n     */\r\n    Keyboard.T = 84;\r\n    /**\r\n     * Constant associated with the key code value for the Tab key (9).\r\n     */\r\n    Keyboard.TAB = 9;\r\n    /**\r\n     * Constant associated with the key code value for the U key (85).\r\n     */\r\n    Keyboard.U = 85;\r\n    /**\r\n     * Constant associated with the key code value for the Up Arrow key (38).\r\n     */\r\n    Keyboard.UP = 38;\r\n    /**\r\n     * Constant associated with the key code value for the V key (86).\r\n     */\r\n    Keyboard.V = 86;\r\n    /**\r\n     * Engage video-on-demand\r\n     */\r\n    Keyboard.VOD = 0x0100001A;\r\n    /**\r\n     * Constant associated with the key code value for the W key (87).\r\n     */\r\n    Keyboard.W = 87;\r\n    /**\r\n     * Constant associated with the key code value for the X key (88).\r\n     */\r\n    Keyboard.X = 88;\r\n    /**\r\n     * Constant associated with the key code value for the Y key (89).\r\n     */\r\n    Keyboard.Y = 89;\r\n    /**\r\n     * Yellow function key button\r\n     */\r\n    Keyboard.YELLOW = 0x01000002;\r\n    /**\r\n     * Constant associated with the key code value for the Z key (90).\r\n     */\r\n    Keyboard.Z = 90;\r\n    return Keyboard;\r\n}());\r\nexports.Keyboard = Keyboard;\r\n},{}],\"awayjs-core/lib/ui\":[function(require,module,exports){\n\"use strict\";\r\nvar Keyboard_1 = require(\"./ui/Keyboard\");\r\nexports.Keyboard = Keyboard_1.Keyboard;\r\n},{\"./ui/Keyboard\":\"awayjs-core/lib/ui/Keyboard\"}],\"awayjs-core/lib/utils/BitmapImageUtils\":[function(require,module,exports){\n\"use strict\";\r\nvar ColorUtils_1 = require(\"../utils/ColorUtils\");\r\nvar BitmapImageUtils = (function () {\r\n    function BitmapImageUtils() {\r\n    }\r\n    BitmapImageUtils._fillRect = function (context, rect, color, transparent) {\r\n        if (color == 0x0 && transparent) {\r\n            context.clearRect(rect.x, rect.y, rect.width, rect.height);\r\n        }\r\n        else {\r\n            var argb = ColorUtils_1.ColorUtils.float32ColorToARGB(color);\r\n            if (transparent)\r\n                context.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0] / 255 + ')';\r\n            else\r\n                context.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\r\n            context.fillRect(rect.x, rect.y, rect.width, rect.height);\r\n        }\r\n    };\r\n    BitmapImageUtils._copyPixels = function (context, bmpd, sourceRect, destRect) {\r\n        context.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\r\n    };\r\n    BitmapImageUtils._draw = function (context, source, matrix, colorTransform, blendMode, clipRect, smoothing) {\r\n        context.save();\r\n        if (matrix != null)\r\n            context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\r\n        if (clipRect != null)\r\n            context.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\r\n        else\r\n            context.drawImage(source, 0, 0);\r\n        context.restore();\r\n    };\r\n    return BitmapImageUtils;\r\n}());\r\nexports.BitmapImageUtils = BitmapImageUtils;\r\n},{\"../utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\"}],\"awayjs-core/lib/utils/ByteArrayBase\":[function(require,module,exports){\n\"use strict\";\r\nvar AbstractMethodError_1 = require(\"../errors/AbstractMethodError\");\r\nvar ByteArrayBase = (function () {\r\n    function ByteArrayBase() {\r\n        this.position = 0;\r\n        this.length = 0;\r\n        this._mode = \"\";\r\n    }\r\n    ByteArrayBase.prototype.writeByte = function (b) {\r\n        throw \"Virtual method\";\r\n    };\r\n    ByteArrayBase.prototype.readByte = function () {\r\n        throw \"Virtual method\";\r\n    };\r\n    ByteArrayBase.prototype.writeUnsignedByte = function (b) {\r\n        throw \"Virtual method\";\r\n    };\r\n    ByteArrayBase.prototype.readUnsignedByte = function () {\r\n        throw \"Virtual method\";\r\n    };\r\n    ByteArrayBase.prototype.writeUnsignedShort = function (b) {\r\n        throw \"Virtual method\";\r\n    };\r\n    ByteArrayBase.prototype.readUnsignedShort = function () {\r\n        throw \"Virtual method\";\r\n    };\r\n    ByteArrayBase.prototype.writeUnsignedInt = function (b) {\r\n        throw \"Virtual method\";\r\n    };\r\n    ByteArrayBase.prototype.readUnsignedInt = function () {\r\n        throw \"Virtual method\";\r\n    };\r\n    ByteArrayBase.prototype.writeFloat = function (b) {\r\n        throw \"Virtual method\";\r\n    };\r\n    ByteArrayBase.prototype.toFloatBits = function (x) {\r\n        throw \"Virtual method\";\r\n    };\r\n    ByteArrayBase.prototype.readFloat = function (b) {\r\n        throw \"Virtual method\";\r\n    };\r\n    ByteArrayBase.prototype.fromFloatBits = function (x) {\r\n        throw \"Virtual method\";\r\n    };\r\n    ByteArrayBase.prototype.getBytesAvailable = function () {\r\n        throw new AbstractMethodError_1.AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\r\n    };\r\n    ByteArrayBase.prototype.toString = function () {\r\n        return \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\r\n    };\r\n    ByteArrayBase.prototype.compareEqual = function (other, count) {\r\n        if (count == undefined || count > this.length - this.position)\r\n            count = this.length - this.position;\r\n        if (count > other.length - other.position)\r\n            count = other.length - other.position;\r\n        var co0 = count;\r\n        var r = true;\r\n        while (r && count >= 4) {\r\n            count -= 4;\r\n            if (this.readUnsignedInt() != other.readUnsignedInt())\r\n                r = false;\r\n        }\r\n        while (r && count >= 1) {\r\n            count--;\r\n            if (this.readUnsignedByte() != other.readUnsignedByte())\r\n                r = false;\r\n        }\r\n        var c0;\r\n        this.position -= (c0 - count);\r\n        other.position -= (c0 - count);\r\n        return r;\r\n    };\r\n    ByteArrayBase.prototype.writeBase64String = function (s) {\r\n        for (var i = 0; i < s.length; i++) {\r\n            var v = s.charAt(i);\r\n        }\r\n    };\r\n    ByteArrayBase.prototype.dumpToConsole = function () {\r\n        var oldpos = this.position;\r\n        this.position = 0;\r\n        var nstep = 8;\r\n        function asHexString(x, digits) {\r\n            var lut = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n            var sh = \"\";\r\n            for (var d = 0; d < digits; d++) {\r\n                sh = lut[(x >> (d << 2)) & 0xf] + sh;\r\n            }\r\n            return sh;\r\n        }\r\n        for (var i = 0; i < this.length; i += nstep) {\r\n            var s = asHexString(i, 4) + \":\";\r\n            for (var j = 0; j < nstep && i + j < this.length; j++) {\r\n                s += \" \" + asHexString(this.readUnsignedByte(), 2);\r\n            }\r\n            console.log(s);\r\n        }\r\n        this.position = oldpos;\r\n    };\r\n    ByteArrayBase.prototype.readBase64String = function (count) {\r\n        if (count == undefined || count > this.length - this.position)\r\n            count = this.length - this.position;\r\n        if (!(count > 0))\r\n            return \"\";\r\n        return ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\r\n    };\r\n    ByteArrayBase.internalGetBase64String = function (count, getUnsignedByteFunc, self) {\r\n        var r = \"\";\r\n        var b0, b1, b2, enc1, enc2, enc3, enc4;\r\n        var base64Key = ByteArrayBase.Base64Key;\r\n        while (count >= 3) {\r\n            b0 = getUnsignedByteFunc.apply(self);\r\n            b1 = getUnsignedByteFunc.apply(self);\r\n            b2 = getUnsignedByteFunc.apply(self);\r\n            enc1 = b0 >> 2;\r\n            enc2 = ((b0 & 3) << 4) | (b1 >> 4);\r\n            enc3 = ((b1 & 15) << 2) | (b2 >> 6);\r\n            enc4 = b2 & 63;\r\n            r += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\r\n            count -= 3;\r\n        }\r\n        // pad\r\n        if (count == 2) {\r\n            b0 = getUnsignedByteFunc.apply(self);\r\n            b1 = getUnsignedByteFunc.apply(self);\r\n            enc1 = b0 >> 2;\r\n            enc2 = ((b0 & 3) << 4) | (b1 >> 4);\r\n            enc3 = ((b1 & 15) << 2);\r\n            r += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\r\n        }\r\n        else if (count == 1) {\r\n            b0 = getUnsignedByteFunc.apply(self);\r\n            enc1 = b0 >> 2;\r\n            enc2 = ((b0 & 3) << 4);\r\n            r += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\r\n        }\r\n        return r;\r\n    };\r\n    ByteArrayBase.Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    return ByteArrayBase;\r\n}());\r\nexports.ByteArrayBase = ByteArrayBase;\r\n},{\"../errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\"}],\"awayjs-core/lib/utils/ByteArrayBuffer\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ByteArrayBase_1 = require(\"../utils/ByteArrayBase\");\r\nvar ByteArrayBuffer = (function (_super) {\r\n    __extends(ByteArrayBuffer, _super);\r\n    function ByteArrayBuffer() {\r\n        _super.call(this);\r\n        this._bytes = [];\r\n        this._mode = \"Array\";\r\n    }\r\n    ByteArrayBuffer.prototype.writeByte = function (b) {\r\n        var bi = ~~b;\r\n        this._bytes[this.position++] = bi;\r\n        if (this.position > this.length) {\r\n            this.length = this.position;\r\n        }\r\n    };\r\n    ByteArrayBuffer.prototype.readByte = function () {\r\n        if (this.position >= this.length) {\r\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n        }\r\n        return this._bytes[this.position++];\r\n    };\r\n    ByteArrayBuffer.prototype.writeUnsignedByte = function (b) {\r\n        var bi = ~~b;\r\n        this._bytes[this.position++] = bi & 0xff;\r\n        if (this.position > this.length) {\r\n            this.length = this.position;\r\n        }\r\n    };\r\n    ByteArrayBuffer.prototype.readUnsignedByte = function () {\r\n        if (this.position >= this.length) {\r\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n        }\r\n        return this._bytes[this.position++];\r\n    };\r\n    ByteArrayBuffer.prototype.writeUnsignedShort = function (b) {\r\n        var bi = ~~b;\r\n        this._bytes[this.position++] = bi & 0xff;\r\n        this._bytes[this.position++] = (bi >> 8) & 0xff;\r\n        if (this.position > this.length) {\r\n            this.length = this.position;\r\n        }\r\n    };\r\n    ByteArrayBuffer.prototype.readUnsignedShort = function () {\r\n        if (this.position + 2 > this.length)\r\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n        var r = this._bytes[this.position] | (this._bytes[this.position + 1] << 8);\r\n        this.position += 2;\r\n        return r;\r\n    };\r\n    ByteArrayBuffer.prototype.writeUnsignedInt = function (b) {\r\n        var bi = ~~b;\r\n        this._bytes[this.position++] = bi & 0xff;\r\n        this._bytes[this.position++] = (bi >>> 8) & 0xff;\r\n        this._bytes[this.position++] = (bi >>> 16) & 0xff;\r\n        this._bytes[this.position++] = (bi >>> 24) & 0xff;\r\n        if (this.position > this.length) {\r\n            this.length = this.position;\r\n        }\r\n    };\r\n    ByteArrayBuffer.prototype.readUnsignedInt = function () {\r\n        if (this.position + 4 > this.length) {\r\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n        }\r\n        var r = this._bytes[this.position] | (this._bytes[this.position + 1] << 8) | (this._bytes[this.position + 2] << 16) | (this._bytes[this.position + 3] << 24);\r\n        this.position += 4;\r\n        return r >>> 0;\r\n    };\r\n    ByteArrayBuffer.prototype.writeFloat = function (b) {\r\n        // this is crazy slow and silly, but as a fallback...\r\n        this.writeUnsignedInt(this.toFloatBits(Number(b)));\r\n    };\r\n    ByteArrayBuffer.prototype.toFloatBits = function (x) {\r\n        // don't handle inf/nan yet\r\n        // special case zero\r\n        if (x == 0) {\r\n            return 0;\r\n        }\r\n        // remove the sign, after this we only deal with positive numbers\r\n        var sign = 0;\r\n        if (x < 0) {\r\n            x = -x;\r\n            sign = 1;\r\n        }\r\n        else {\r\n            sign = 0;\r\n        }\r\n        // a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\r\n        var exponent = Math.log(x) / Math.log(2); // rough exponent\r\n        exponent = Math.floor(exponent);\r\n        x = x * Math.pow(2, 23 - exponent); // normalize to 24 bits\r\n        var mantissa = Math.floor(x) - 0x800000;\r\n        exponent = exponent + 127;\r\n        return ((sign << 31) >>> 0) | (exponent << 23) | mantissa;\r\n    };\r\n    ByteArrayBuffer.prototype.readFloat = function (b) {\r\n        return this.fromFloatBits(this.readUnsignedInt());\r\n    };\r\n    ByteArrayBuffer.prototype.fromFloatBits = function (x) {\r\n        if (x == 0) {\r\n            return 0;\r\n        }\r\n        var exponent = (x >>> 23) & 0xff;\r\n        var mantissa = (x & 0x7fffff) | 0x800000;\r\n        var y = Math.pow(2, (exponent - 127) - 23) * mantissa;\r\n        if (x >>> 31 != 0) {\r\n            y = -y;\r\n        }\r\n        return y;\r\n    };\r\n    return ByteArrayBuffer;\r\n}(ByteArrayBase_1.ByteArrayBase));\r\nexports.ByteArrayBuffer = ByteArrayBuffer;\r\n},{\"../utils/ByteArrayBase\":\"awayjs-core/lib/utils/ByteArrayBase\"}],\"awayjs-core/lib/utils/ByteArray\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ByteArrayBase_1 = require(\"../utils/ByteArrayBase\");\r\nvar ByteArray = (function (_super) {\r\n    __extends(ByteArray, _super);\r\n    function ByteArray(maxlength) {\r\n        if (maxlength === void 0) { maxlength = 4; }\r\n        _super.call(this);\r\n        this._mode = \"Typed array\";\r\n        this.maxlength = Math.max((maxlength + 255) & (~255), 4);\r\n        this.arraybytes = new ArrayBuffer(this.maxlength);\r\n        this.unalignedarraybytestemp = new ArrayBuffer(16);\r\n    }\r\n    ByteArray.prototype.ensureWriteableSpace = function (n) {\r\n        this.ensureSpace(n + this.position);\r\n    };\r\n    ByteArray.prototype.setArrayBuffer = function (aBuffer) {\r\n        this.ensureSpace(aBuffer.byteLength);\r\n        this.length = aBuffer.byteLength;\r\n        var inInt8AView = new Int8Array(aBuffer);\r\n        var localInt8View = new Int8Array(this.arraybytes, 0, this.length);\r\n        localInt8View.set(inInt8AView);\r\n        this.position = 0;\r\n    };\r\n    ByteArray.prototype.getBytesAvailable = function () {\r\n        return (this.length) - (this.position);\r\n    };\r\n    ByteArray.prototype.ensureSpace = function (n) {\r\n        if (n > this.maxlength) {\r\n            var newmaxlength = (n + 255) & (~255);\r\n            var newarraybuffer = new ArrayBuffer(newmaxlength);\r\n            var view = new Uint8Array(this.arraybytes, 0, this.length);\r\n            var newview = new Uint8Array(newarraybuffer, 0, this.length);\r\n            newview.set(view); // memcpy\r\n            this.arraybytes = newarraybuffer;\r\n            this.maxlength = newmaxlength;\r\n        }\r\n    };\r\n    ByteArray.prototype.writeByte = function (b) {\r\n        this.ensureWriteableSpace(1);\r\n        var view = new Int8Array(this.arraybytes);\r\n        view[this.position++] = (~~b); // ~~ is cast to int in js...\r\n        if (this.position > this.length) {\r\n            this.length = this.position;\r\n        }\r\n    };\r\n    ByteArray.prototype.readByte = function () {\r\n        if (this.position >= this.length)\r\n            throw \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n        var view = new Int8Array(this.arraybytes);\r\n        return view[this.position++];\r\n    };\r\n    ByteArray.prototype.readBytes = function (bytes, offset, length) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (length === void 0) { length = 0; }\r\n        if (length == null)\r\n            length = bytes.length;\r\n        bytes.ensureWriteableSpace(offset + length);\r\n        var byteView = new Int8Array(bytes.arraybytes);\r\n        var localByteView = new Int8Array(this.arraybytes);\r\n        byteView.set(localByteView.subarray(this.position, this.position + length), offset);\r\n        this.position += length;\r\n        if (length + offset > bytes.length)\r\n            bytes.length += (length + offset) - bytes.length;\r\n    };\r\n    ByteArray.prototype.writeUnsignedByte = function (b) {\r\n        this.ensureWriteableSpace(1);\r\n        var view = new Uint8Array(this.arraybytes);\r\n        view[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\r\n        if (this.position > this.length)\r\n            this.length = this.position;\r\n    };\r\n    ByteArray.prototype.readUnsignedByte = function () {\r\n        if (this.position >= this.length)\r\n            throw \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n        var view = new Uint8Array(this.arraybytes);\r\n        return view[this.position++];\r\n    };\r\n    ByteArray.prototype.writeUnsignedShort = function (b) {\r\n        this.ensureWriteableSpace(2);\r\n        if ((this.position & 1) == 0) {\r\n            var view = new Uint16Array(this.arraybytes);\r\n            view[this.position >> 1] = (~~b) & 0xffff; // ~~ is cast to int in js...\r\n        }\r\n        else {\r\n            var view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\r\n            view[0] = (~~b) & 0xffff;\r\n            var view2 = new Uint8Array(this.arraybytes, this.position, 2);\r\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\r\n            view2.set(view3);\r\n        }\r\n        this.position += 2;\r\n        if (this.position > this.length)\r\n            this.length = this.position;\r\n    };\r\n    ByteArray.prototype.readUTFBytes = function (len) {\r\n        var value = \"\";\r\n        var max = this.position + len;\r\n        var data = new DataView(this.arraybytes);\r\n        // utf8-encode\r\n        while (this.position < max) {\r\n            var c = data.getUint8(this.position++);\r\n            if (c < 0x80) {\r\n                if (c == 0)\r\n                    break;\r\n                value += String.fromCharCode(c);\r\n            }\r\n            else if (c < 0xE0) {\r\n                value += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\r\n            }\r\n            else if (c < 0xF0) {\r\n                var c2 = data.getUint8(this.position++);\r\n                value += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\r\n            }\r\n            else {\r\n                var c2 = data.getUint8(this.position++);\r\n                var c3 = data.getUint8(this.position++);\r\n                value += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    ByteArray.prototype.readInt = function () {\r\n        var data = new DataView(this.arraybytes);\r\n        var int = data.getInt32(this.position, true);\r\n        this.position += 4;\r\n        return int;\r\n    };\r\n    ByteArray.prototype.readShort = function () {\r\n        var data = new DataView(this.arraybytes);\r\n        var short = data.getInt16(this.position, true);\r\n        this.position += 2;\r\n        return short;\r\n    };\r\n    ByteArray.prototype.readDouble = function () {\r\n        var data = new DataView(this.arraybytes);\r\n        var double = data.getFloat64(this.position, true);\r\n        this.position += 8;\r\n        return double;\r\n    };\r\n    ByteArray.prototype.readUnsignedShort = function () {\r\n        if (this.position > this.length + 2)\r\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n        if ((this.position & 1) == 0) {\r\n            var view = new Uint16Array(this.arraybytes);\r\n            var pa = this.position >> 1;\r\n            this.position += 2;\r\n            return view[pa];\r\n        }\r\n        else {\r\n            var view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\r\n            var view2 = new Uint8Array(this.arraybytes, this.position, 2);\r\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\r\n            view3.set(view2);\r\n            this.position += 2;\r\n            return view[0];\r\n        }\r\n    };\r\n    ByteArray.prototype.writeUnsignedInt = function (b) {\r\n        this.ensureWriteableSpace(4);\r\n        if ((this.position & 3) == 0) {\r\n            var view = new Uint32Array(this.arraybytes);\r\n            view[this.position >> 2] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\r\n        }\r\n        else {\r\n            var view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\r\n            view[0] = (~~b) & 0xffffffff;\r\n            var view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n            view2.set(view3);\r\n        }\r\n        this.position += 4;\r\n        if (this.position > this.length)\r\n            this.length = this.position;\r\n    };\r\n    ByteArray.prototype.readUnsignedInt = function () {\r\n        if (this.position > this.length + 4)\r\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n        if ((this.position & 3) == 0) {\r\n            var view = new Uint32Array(this.arraybytes);\r\n            var pa = this.position >> 2;\r\n            this.position += 4;\r\n            return view[pa];\r\n        }\r\n        else {\r\n            var view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\r\n            var view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n            view3.set(view2);\r\n            this.position += 4;\r\n            return view[0];\r\n        }\r\n    };\r\n    ByteArray.prototype.writeFloat = function (b) {\r\n        this.ensureWriteableSpace(4);\r\n        if ((this.position & 3) == 0) {\r\n            var view = new Float32Array(this.arraybytes);\r\n            view[this.position >> 2] = b;\r\n        }\r\n        else {\r\n            var view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\r\n            view[0] = b;\r\n            var view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n            view2.set(view3);\r\n        }\r\n        this.position += 4;\r\n        if (this.position > this.length)\r\n            this.length = this.position;\r\n    };\r\n    ByteArray.prototype.readFloat = function () {\r\n        if (this.position > this.length + 4)\r\n            throw \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n        if ((this.position & 3) == 0) {\r\n            var view = new Float32Array(this.arraybytes);\r\n            var pa = this.position >> 2;\r\n            this.position += 4;\r\n            return view[pa];\r\n        }\r\n        else {\r\n            var view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\r\n            var view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n            view3.set(view2);\r\n            this.position += 4;\r\n            return view[0];\r\n        }\r\n    };\r\n    return ByteArray;\r\n}(ByteArrayBase_1.ByteArrayBase));\r\nexports.ByteArray = ByteArray;\r\n},{\"../utils/ByteArrayBase\":\"awayjs-core/lib/utils/ByteArrayBase\"}],\"awayjs-core/lib/utils/CSS\":[function(require,module,exports){\n\"use strict\";\r\nvar CSS = (function () {\r\n    function CSS() {\r\n    }\r\n    CSS.setElementSize = function (element, width, height) {\r\n        if (!element)\r\n            return;\r\n        element.style.width = width + \"px\";\r\n        element.style.height = height + \"px\";\r\n        element[\"width\"] = width;\r\n        element[\"height\"] = height;\r\n    };\r\n    CSS.setElementWidth = function (element, width) {\r\n        if (!element)\r\n            return;\r\n        element.style.width = width + \"px\";\r\n        element[\"width\"] = width;\r\n    };\r\n    CSS.setElementHeight = function (element, height) {\r\n        if (!element)\r\n            return;\r\n        element.style.height = height + \"px\";\r\n        element[\"height\"] = height;\r\n    };\r\n    CSS.setElementX = function (element, x) {\r\n        if (!element)\r\n            return;\r\n        element.style.position = 'absolute';\r\n        element.style.left = x + \"px\";\r\n    };\r\n    CSS.setElementY = function (element, y) {\r\n        if (!element)\r\n            return;\r\n        element.style.position = 'absolute';\r\n        element.style.top = y + \"px\";\r\n    };\r\n    CSS.getElementVisibility = function (element) {\r\n        if (!element)\r\n            return false;\r\n        return element.style.visibility == 'visible';\r\n    };\r\n    CSS.setElementVisibility = function (element, visible) {\r\n        if (!element)\r\n            return;\r\n        if (visible) {\r\n            element.style.visibility = 'visible';\r\n        }\r\n        else {\r\n            element.style.visibility = 'hidden';\r\n        }\r\n    };\r\n    CSS.setElementAlpha = function (element, alpha) {\r\n        if (element instanceof HTMLCanvasElement) {\r\n            var context = element.getContext(\"2d\");\r\n            context.globalAlpha = alpha;\r\n        }\r\n    };\r\n    CSS.setElementPosition = function (element, x, y, absolute) {\r\n        if (absolute === void 0) { absolute = false; }\r\n        if (!element)\r\n            return;\r\n        if (absolute) {\r\n            element.style.position = \"absolute\";\r\n        }\r\n        else {\r\n            element.style.position = \"relative\";\r\n        }\r\n        element.style.left = x + \"px\";\r\n        element.style.top = y + \"px\";\r\n    };\r\n    return CSS;\r\n}());\r\nexports.CSS = CSS;\r\n},{}],\"awayjs-core/lib/utils/ColorUtils\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n *\r\n */\r\nvar ColorUtils = (function () {\r\n    function ColorUtils() {\r\n    }\r\n    ColorUtils.float32ColorToARGB = function (float32Color) {\r\n        var a = (float32Color & 0xff000000) >>> 24;\r\n        var r = (float32Color & 0xff0000) >>> 16;\r\n        var g = (float32Color & 0xff00) >>> 8;\r\n        var b = float32Color & 0xff;\r\n        var result = [a, r, g, b];\r\n        return result;\r\n    };\r\n    ColorUtils.ARGBtoFloat32 = function (a, r, g, b) {\r\n        return ((a << 24) | (r << 16) | (g << 8) | b);\r\n    };\r\n    ColorUtils.componentToHex = function (c) {\r\n        var hex = c.toString(16);\r\n        return hex.length == 1 ? \"0\" + hex : hex;\r\n    };\r\n    ColorUtils.RGBToHexString = function (argb) {\r\n        return \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\r\n    };\r\n    ColorUtils.ARGBToHexString = function (argb) {\r\n        return \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\r\n    };\r\n    return ColorUtils;\r\n}());\r\nexports.ColorUtils = ColorUtils;\r\n},{}],\"awayjs-core/lib/utils/Debug\":[function(require,module,exports){\n\"use strict\";\r\nvar PartialImplementationError_1 = require(\"../errors/PartialImplementationError\");\r\n/**\r\n *\r\n */\r\nvar Debug = (function () {\r\n    function Debug() {\r\n    }\r\n    Debug.breakpoint = function () {\r\n        Debug['break']();\r\n    };\r\n    Debug.throwPIROnKeyWordOnly = function (str, enable) {\r\n        if (enable === void 0) { enable = true; }\r\n        if (!enable)\r\n            Debug.keyword = null;\r\n        else\r\n            Debug.keyword = str;\r\n    };\r\n    Debug.throwPIR = function (clss, fnc, msg) {\r\n        Debug.logPIR('PartialImplementationError ' + clss, fnc, msg);\r\n        if (Debug.THROW_ERRORS) {\r\n            if (Debug.keyword) {\r\n                var e = clss + fnc + msg;\r\n                if (e.indexOf(Debug.keyword) == -1)\r\n                    return;\r\n            }\r\n            throw new PartialImplementationError_1.PartialImplementationError(clss + '.' + fnc + ': ' + msg);\r\n        }\r\n    };\r\n    Debug.logPIR = function (clss, fnc, msg) {\r\n        if (msg === void 0) { msg = ''; }\r\n        if (Debug.LOG_PI_ERRORS)\r\n            console.log(clss + '.' + fnc + ': ' + msg);\r\n    };\r\n    Debug.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i - 0] = arguments[_i];\r\n        }\r\n        if (Debug.ENABLE_LOG)\r\n            console.log(args);\r\n    };\r\n    Debug.THROW_ERRORS = true;\r\n    Debug.ENABLE_LOG = true;\r\n    Debug.LOG_PI_ERRORS = true;\r\n    Debug.keyword = null;\r\n    return Debug;\r\n}());\r\nexports.Debug = Debug;\r\n},{\"../errors/PartialImplementationError\":\"awayjs-core/lib/errors/PartialImplementationError\"}],\"awayjs-core/lib/utils/Extensions\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n *\r\n */\r\nvar Extensions = (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.SIMD = Boolean(typeof (SIMD) !== \"undefined\");\r\n    return Extensions;\r\n}());\r\nexports.Extensions = Extensions;\r\n},{}],\"awayjs-core/lib/utils/IArrayBufferViewClass\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-core/lib/utils/ImageUtils\":[function(require,module,exports){\n\"use strict\";\r\nvar ImageUtils = (function () {\r\n    function ImageUtils() {\r\n    }\r\n    ImageUtils.isImage2DValid = function (image2D) {\r\n        if (image2D == null)\r\n            return true;\r\n        return ImageUtils.isDimensionValid(image2D.width, image2D.powerOfTwo) && ImageUtils.isDimensionValid(image2D.height, image2D.powerOfTwo);\r\n    };\r\n    ImageUtils.isHTMLImageElementValid = function (image) {\r\n        if (image == null)\r\n            return true;\r\n        return ImageUtils.isDimensionValid(image.width) && ImageUtils.isDimensionValid(image.height);\r\n    };\r\n    ImageUtils.isDimensionValid = function (d, powerOfTwo) {\r\n        if (powerOfTwo === void 0) { powerOfTwo = true; }\r\n        return d >= 1 && d <= ImageUtils.MAX_SIZE && (!powerOfTwo || ImageUtils.isPowerOfTwo(d));\r\n    };\r\n    ImageUtils.isPowerOfTwo = function (value) {\r\n        return value ? ((value & -value) == value) : false;\r\n    };\r\n    ImageUtils.getBestPowerOf2 = function (value) {\r\n        var p = 1;\r\n        while (p < value)\r\n            p <<= 1;\r\n        if (p > ImageUtils.MAX_SIZE)\r\n            p = ImageUtils.MAX_SIZE;\r\n        return p;\r\n    };\r\n    ImageUtils.MAX_SIZE = 2048;\r\n    return ImageUtils;\r\n}());\r\nexports.ImageUtils = ImageUtils;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = ImageUtils;\r\n},{}],\"awayjs-core/lib/utils/MipmapGenerator\":[function(require,module,exports){\n\"use strict\";\r\nvar BitmapImage2D_1 = require(\"../image/BitmapImage2D\");\r\nvar Matrix_1 = require(\"../geom/Matrix\");\r\nvar Rectangle_1 = require(\"../geom/Rectangle\");\r\nvar MipmapGenerator = (function () {\r\n    function MipmapGenerator() {\r\n    }\r\n    MipmapGenerator._generateMipMaps = function (source, output, alpha) {\r\n        if (alpha === void 0) { alpha = false; }\r\n        var w = source.width;\r\n        var h = source.height;\r\n        var i = 0;\r\n        var mipmap;\r\n        MipmapGenerator._rect.width = w;\r\n        MipmapGenerator._rect.height = h;\r\n        //use (OR) to create non-square texture mipmaps\r\n        while (w >= 1 || h >= 1) {\r\n            mipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\r\n            if (alpha)\r\n                mipmap.fillRect(MipmapGenerator._rect, 0);\r\n            MipmapGenerator._matrix.a = MipmapGenerator._rect.width / source.width;\r\n            MipmapGenerator._matrix.d = MipmapGenerator._rect.height / source.height;\r\n            //todo: add support for NPOT textures\r\n            if (document) {\r\n                mipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\r\n            }\r\n            else {\r\n                if (source.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\r\n                    //for BitmapImage2D\r\n                    var bitmapImage = source;\r\n                    bitmapImage.lock();\r\n                    mipmap.lock();\r\n                    this.downsampleImage(bitmapImage.getImageData(), mipmap.getImageData());\r\n                    mipmap.unlock();\r\n                    bitmapImage.unlock();\r\n                }\r\n                else if (source.constructor.toString().indexOf(\"CPUCanvas\") > -1) {\r\n                    this.downsampleImage(source.getImageData(), mipmap.getImageData());\r\n                }\r\n                else {\r\n                    //for imageData\r\n                    this.downsampleImage(source, mipmap.getImageData());\r\n                }\r\n            }\r\n            w >>= 1;\r\n            h >>= 1;\r\n            MipmapGenerator._rect.width = w > 1 ? w : 1;\r\n            MipmapGenerator._rect.height = h > 1 ? h : 1;\r\n            i++;\r\n        }\r\n    };\r\n    MipmapGenerator._getMipmapHolder = function (mipMapHolder, newW, newH) {\r\n        if (mipMapHolder) {\r\n            if (mipMapHolder.width == newW && mipMapHolder.height == newH)\r\n                return mipMapHolder;\r\n            MipmapGenerator._freeMipMapHolder(mipMapHolder);\r\n        }\r\n        if (!MipmapGenerator._mipMaps[newW]) {\r\n            MipmapGenerator._mipMaps[newW] = [];\r\n            MipmapGenerator._mipMapUses[newW] = [];\r\n        }\r\n        if (!MipmapGenerator._mipMaps[newW][newH]) {\r\n            mipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapImage2D_1.BitmapImage2D(newW, newH, true);\r\n            MipmapGenerator._mipMapUses[newW][newH] = 1;\r\n        }\r\n        else {\r\n            MipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\r\n            mipMapHolder = MipmapGenerator._mipMaps[newW][newH];\r\n        }\r\n        return mipMapHolder;\r\n    };\r\n    MipmapGenerator._freeMipMapHolder = function (mipMapHolder) {\r\n        var holderWidth = mipMapHolder.width;\r\n        var holderHeight = mipMapHolder.height;\r\n        if (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\r\n            MipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\r\n            MipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\r\n        }\r\n    };\r\n    MipmapGenerator.downsampleImage = function (bitmap, destBitmap) {\r\n        var box = new BoxFilter();\r\n        var xkernel = new PolyphaseKernel(box, bitmap.width, destBitmap.width, 4);\r\n        var ykernel = new PolyphaseKernel(box, bitmap.height, destBitmap.height, 4);\r\n        var tempBitmap = []; //destBitmap.width, bitmap.height\r\n        var scale = 0;\r\n        var iscale = 0;\r\n        var kernelLength = 0;\r\n        var kernelWidth = 0;\r\n        var kernelWindowSize = 0;\r\n        var sumR = 0;\r\n        var sumG = 0;\r\n        var sumB = 0;\r\n        var sumA = 0;\r\n        var center;\r\n        var left;\r\n        var i = 0;\r\n        var j = 0;\r\n        var index = 0;\r\n        for (var y = 0; y < bitmap.height; y++) {\r\n            kernelLength = xkernel.len;\r\n            scale = kernelLength / bitmap.width;\r\n            iscale = 1.0 / scale;\r\n            kernelWidth = xkernel.width;\r\n            kernelWindowSize = xkernel.windowSize;\r\n            for (i = 0; i < kernelLength; i++) {\r\n                center = (0.5 + i) * iscale;\r\n                left = Math.floor(center - kernelWidth);\r\n                sumR = 0;\r\n                sumG = 0;\r\n                sumB = 0;\r\n                sumA = 0;\r\n                for (var j = 0; j < kernelWindowSize; ++j) {\r\n                    index = (y * bitmap.width + (left + j)) * 4;\r\n                    var colorR = bitmap.data[index];\r\n                    var colorG = bitmap.data[index + 1];\r\n                    var colorB = bitmap.data[index + 2];\r\n                    var colorA = bitmap.data[index + 3];\r\n                    var value = xkernel.valueAt(i, j);\r\n                    sumR += value * colorR;\r\n                    sumG += value * colorG;\r\n                    sumB += value * colorB;\r\n                    sumA += value * colorA;\r\n                }\r\n                index = (y * destBitmap.width + i) * 4;\r\n                tempBitmap[index] = sumR;\r\n                tempBitmap[index + 1] = sumG;\r\n                tempBitmap[index + 2] = sumB;\r\n                tempBitmap[index + 3] = sumA;\r\n            }\r\n        }\r\n        for (var x = 0; x < destBitmap.width; x++) {\r\n            kernelLength = ykernel.len;\r\n            scale = kernelLength / bitmap.height;\r\n            iscale = 1.0 / scale;\r\n            kernelWidth = ykernel.width;\r\n            kernelWindowSize = ykernel.windowSize;\r\n            for (i = 0; i < kernelLength; i++) {\r\n                center = (0.5 + i) * iscale;\r\n                left = Math.floor(center - kernelWidth);\r\n                sumR = 0;\r\n                sumG = 0;\r\n                sumB = 0;\r\n                sumA = 0;\r\n                for (j = 0; j < kernelWindowSize; ++j) {\r\n                    index = ((j + left) * destBitmap.width + x) * 4;\r\n                    var colorR = tempBitmap[index];\r\n                    var colorG = tempBitmap[index + 1];\r\n                    var colorB = tempBitmap[index + 2];\r\n                    var colorA = tempBitmap[index + 3];\r\n                    var value = ykernel.valueAt(i, j);\r\n                    sumR += value * colorR;\r\n                    sumG += value * colorG;\r\n                    sumB += value * colorB;\r\n                    sumA += value * colorA;\r\n                }\r\n                index = (i * destBitmap.width + x) * 4;\r\n                destBitmap.data[index] = sumR;\r\n                destBitmap.data[index + 1] = sumG;\r\n                destBitmap.data[index + 2] = sumB;\r\n                destBitmap.data[index + 3] = sumA;\r\n            }\r\n        }\r\n        return destBitmap;\r\n    };\r\n    MipmapGenerator._mipMaps = [];\r\n    MipmapGenerator._mipMapUses = [];\r\n    MipmapGenerator._matrix = new Matrix_1.Matrix();\r\n    MipmapGenerator._rect = new Rectangle_1.Rectangle();\r\n    return MipmapGenerator;\r\n}());\r\nexports.MipmapGenerator = MipmapGenerator;\r\nvar PolyphaseKernel = (function () {\r\n    function PolyphaseKernel(f, srcLength, dstLength, samples) {\r\n        var scale = dstLength / srcLength;\r\n        var iscale = 1.0 / scale;\r\n        if (scale > 1) {\r\n            // Upsampling.\r\n            samples = 1;\r\n            scale = 1;\r\n        }\r\n        this.len = dstLength;\r\n        this.width = f.width * iscale;\r\n        this.windowSize = Math.ceil(this.width * 2);\r\n        this.data = [];\r\n        for (var i = 0; i < this.len; i++) {\r\n            var center = (0.5 + i) * iscale;\r\n            var left = Math.floor(center - this.width);\r\n            var total = 0.0;\r\n            for (var j = 0; j < this.windowSize; j++) {\r\n                var sample = f.sampleBox(left + j - center, scale, samples);\r\n                //printf(\"%f %X\\n\", sample, *(uint32 *)&sample);\r\n                this.data[i * this.windowSize + j] = sample;\r\n                total += sample;\r\n            }\r\n            // normalize weights.\r\n            for (var j = 0; j < this.windowSize; j++) {\r\n                this.data[i * this.windowSize + j] /= total;\r\n            }\r\n        }\r\n    }\r\n    PolyphaseKernel.prototype.valueAt = function (column, x) {\r\n        return this.data[column * this.windowSize + x];\r\n    };\r\n    return PolyphaseKernel;\r\n}());\r\nexports.PolyphaseKernel = PolyphaseKernel;\r\nvar BoxFilter = (function () {\r\n    function BoxFilter() {\r\n    }\r\n    Object.defineProperty(BoxFilter.prototype, \"width\", {\r\n        get: function () {\r\n            return 0.5;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BoxFilter.prototype.sampleBox = function (x, scale, samples) {\r\n        var sum = 0;\r\n        var isamples = 1.0 / samples;\r\n        for (var s = 0; s < samples; s++) {\r\n            var p = (x + (s + 0.5) * isamples) * scale;\r\n            var value = this.evaluate(p);\r\n            sum += value;\r\n        }\r\n        return sum * isamples;\r\n    };\r\n    BoxFilter.prototype.evaluate = function (x) {\r\n        if (Math.abs(x) <= this.width)\r\n            return 1.0;\r\n        else\r\n            return 0.0;\r\n    };\r\n    return BoxFilter;\r\n}());\r\nexports.BoxFilter = BoxFilter;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = MipmapGenerator;\r\n},{\"../geom/Matrix\":\"awayjs-core/lib/geom/Matrix\",\"../geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"../image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\"}],\"awayjs-core/lib/utils/RequestAnimationFrame\":[function(require,module,exports){\n\"use strict\";\r\nvar getTimer_1 = require(\"../utils/getTimer\");\r\nvar RequestAnimationFrame = (function () {\r\n    function RequestAnimationFrame(callback, callbackContext) {\r\n        var _this = this;\r\n        this._active = false;\r\n        this._argsArray = new Array();\r\n        this._getTimer = getTimer_1.getTimer;\r\n        this.setCallback(callback, callbackContext);\r\n        this._rafUpdateFunction = function () {\r\n            if (_this._active)\r\n                _this._tick();\r\n        };\r\n        this._argsArray.push(this._dt);\r\n    }\r\n    // Public\r\n    /**\r\n     *\r\n     * @param callback\r\n     * @param callbackContext\r\n     */\r\n    RequestAnimationFrame.prototype.setCallback = function (callback, callbackContext) {\r\n        this._callback = callback;\r\n        this._callbackContext = callbackContext;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    RequestAnimationFrame.prototype.start = function () {\r\n        this._prevTime = this._getTimer();\r\n        this._active = true;\r\n        if (window) {\r\n            if (window.requestAnimationFrame) {\r\n                window.requestAnimationFrame(this._rafUpdateFunction);\r\n            }\r\n            else {\r\n                if (window['mozRequestAnimationFrame'])\r\n                    window.requestAnimationFrame = window['mozRequestAnimationFrame'];\r\n                else if (window['webkitRequestAnimationFrame'])\r\n                    window.requestAnimationFrame = window['webkitRequestAnimationFrame'];\r\n                else if (window['oRequestAnimationFrame'])\r\n                    window.requestAnimationFrame = window['oRequestAnimationFrame'];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    RequestAnimationFrame.prototype.stop = function () {\r\n        this._active = false;\r\n    };\r\n    Object.defineProperty(RequestAnimationFrame.prototype, \"active\", {\r\n        // Get / Set\r\n        /**\r\n         *\r\n         * @returns {boolean}\r\n         */\r\n        get: function () {\r\n            return this._active;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // Private\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    RequestAnimationFrame.prototype._tick = function () {\r\n        this._currentTime = this._getTimer();\r\n        this._dt = this._currentTime - this._prevTime;\r\n        this._argsArray[0] = this._dt;\r\n        this._callback.apply(this._callbackContext, this._argsArray);\r\n        window.requestAnimationFrame(this._rafUpdateFunction);\r\n        this._prevTime = this._currentTime;\r\n    };\r\n    return RequestAnimationFrame;\r\n}());\r\nexports.RequestAnimationFrame = RequestAnimationFrame;\r\n},{\"../utils/getTimer\":\"awayjs-core/lib/utils/getTimer\"}],\"awayjs-core/lib/utils/Timer\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\r\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\r\nvar TimerEvent_1 = require(\"../events/TimerEvent\");\r\nvar Timer = (function (_super) {\r\n    __extends(Timer, _super);\r\n    function Timer(delay, repeatCount) {\r\n        if (repeatCount === void 0) { repeatCount = 0; }\r\n        _super.call(this);\r\n        this._repeatCount = 0;\r\n        this._currentCount = 0;\r\n        this._running = false;\r\n        this._delay = delay;\r\n        this._repeatCount = repeatCount;\r\n        if (isNaN(delay) || delay < 0)\r\n            throw new ErrorBase_1.ErrorBase(\"Delay is negative or not a number\");\r\n    }\r\n    Object.defineProperty(Timer.prototype, \"currentCount\", {\r\n        get: function () {\r\n            return this._currentCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Timer.prototype, \"delay\", {\r\n        get: function () {\r\n            return this._delay;\r\n        },\r\n        set: function (value) {\r\n            this._delay = value;\r\n            if (this._running) {\r\n                this.stop();\r\n                this.start();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Timer.prototype, \"repeatCount\", {\r\n        get: function () {\r\n            return this._repeatCount;\r\n        },\r\n        set: function (value) {\r\n            this._repeatCount = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Timer.prototype.reset = function () {\r\n        if (this._running)\r\n            this.stop();\r\n        this._currentCount = 0;\r\n    };\r\n    Object.defineProperty(Timer.prototype, \"running\", {\r\n        get: function () {\r\n            return this._running;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Timer.prototype.start = function () {\r\n        var _this = this;\r\n        this._running = true;\r\n        clearInterval(this._iid);\r\n        this._iid = setInterval(function () { return _this.tick(); }, this._delay);\r\n    };\r\n    Timer.prototype.stop = function () {\r\n        this._running = false;\r\n        clearInterval(this._iid);\r\n    };\r\n    Timer.prototype.tick = function () {\r\n        this._currentCount++;\r\n        if ((this._repeatCount > 0) && this._currentCount >= this._repeatCount) {\r\n            this.stop();\r\n            this.dispatchEvent(new TimerEvent_1.TimerEvent(TimerEvent_1.TimerEvent.TIMER));\r\n            this.dispatchEvent(new TimerEvent_1.TimerEvent(TimerEvent_1.TimerEvent.TIMER_COMPLETE));\r\n        }\r\n        else {\r\n            this.dispatchEvent(new TimerEvent_1.TimerEvent(TimerEvent_1.TimerEvent.TIMER));\r\n        }\r\n    };\r\n    return Timer;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.Timer = Timer;\r\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\",\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"../events/TimerEvent\":\"awayjs-core/lib/events/TimerEvent\"}],\"awayjs-core/lib/utils/XmlUtils\":[function(require,module,exports){\n\"use strict\";\r\nvar XmlUtils = (function () {\r\n    function XmlUtils() {\r\n    }\r\n    XmlUtils.getChildrenWithTag = function (node, tag) {\r\n        var fragment = document.createDocumentFragment();\r\n        if (node) {\r\n            var num = node.childNodes.length;\r\n            for (var i = 0; i < num; i++) {\r\n                var child = node.childNodes[i];\r\n                if (child != null) {\r\n                    if (child.nodeName == tag) {\r\n                        fragment.appendChild(child);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return fragment.childNodes;\r\n    };\r\n    XmlUtils.filterListByParam = function (nodes, paramName, paramValue) {\r\n        var fragment = document.createDocumentFragment();\r\n        if (nodes) {\r\n            var num = nodes.length;\r\n            for (var i = 0; i < num; i++) {\r\n                var child = nodes[i];\r\n                if (child != null) {\r\n                    if (child.attributes.getNamedItem(paramName).value == paramValue) {\r\n                        fragment.appendChild(child);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return fragment.childNodes;\r\n    };\r\n    XmlUtils.strToXml = function (str) {\r\n        var parser = new DOMParser();\r\n        var node = parser.parseFromString(str, \"text/xml\");\r\n        return node;\r\n    };\r\n    XmlUtils.nodeToString = function (node) {\r\n        if (!node)\r\n            return \"\";\r\n        var str = (new XMLSerializer()).serializeToString(node);\r\n        return str;\r\n    };\r\n    XmlUtils.readAttributeValue = function (node, attrName) {\r\n        var attrs = node.attributes;\r\n        if (attrs == undefined) {\r\n            return \"\";\r\n        }\r\n        var attribute = attrs.getNamedItem(attrName);\r\n        if (!attribute) {\r\n            //console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", attribute does not exist.\";\r\n            return \"\";\r\n        }\r\n        //console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", value: \" + attribute.value);\r\n        return attribute.value;\r\n    };\r\n    XmlUtils.writeAttributeValue = function (node, attrName, attrValue) {\r\n        var attribute = document.createAttribute(attrName);\r\n        attribute.value = attrValue;\r\n        attribute = node.attributes.setNamedItem(attribute);\r\n        console.log(\"XmlUltils - writeAttributeValue() - name: \" + attribute.name + \", value: \" + attribute.value);\r\n    };\r\n    XmlUtils.hasAttribute = function (node, attrName) {\r\n        var attrs = node.attributes;\r\n        if (attrs == undefined) {\r\n            return false;\r\n        }\r\n        var attribute = attrs.getNamedItem(attrName);\r\n        return attribute != null;\r\n    };\r\n    return XmlUtils;\r\n}());\r\nexports.XmlUtils = XmlUtils;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = XmlUtils;\r\n},{}],\"awayjs-core/lib/utils/getTimer\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n *\r\n *\r\n * @returns {number}\r\n */\r\nfunction getTimer() {\r\n    // number milliseconds of 1970/01/01\r\n    // this different to AS3 implementation which gets the number of milliseconds\r\n    // since instance of Flash player was initialised\r\n    return Date.now();\r\n}\r\nexports.getTimer = getTimer;\r\n},{}],\"awayjs-core/lib/utils\":[function(require,module,exports){\n\"use strict\";\r\nvar BitmapImageUtils_1 = require(\"./utils/BitmapImageUtils\");\r\nexports.BitmapImageUtils = BitmapImageUtils_1.BitmapImageUtils;\r\nvar ByteArray_1 = require(\"./utils/ByteArray\");\r\nexports.ByteArray = ByteArray_1.ByteArray;\r\nvar ByteArrayBase_1 = require(\"./utils/ByteArrayBase\");\r\nexports.ByteArrayBase = ByteArrayBase_1.ByteArrayBase;\r\nvar ByteArrayBuffer_1 = require(\"./utils/ByteArrayBuffer\");\r\nexports.ByteArrayBuffer = ByteArrayBuffer_1.ByteArrayBuffer;\r\nvar ColorUtils_1 = require(\"./utils/ColorUtils\");\r\nexports.ColorUtils = ColorUtils_1.ColorUtils;\r\nvar CSS_1 = require(\"./utils/CSS\");\r\nexports.CSS = CSS_1.CSS;\r\nvar Debug_1 = require(\"./utils/Debug\");\r\nexports.Debug = Debug_1.Debug;\r\nvar Extensions_1 = require(\"./utils/Extensions\");\r\nexports.Extensions = Extensions_1.Extensions;\r\nvar getTimer_1 = require(\"./utils/getTimer\");\r\nexports.getTimer = getTimer_1.getTimer;\r\nvar ImageUtils_1 = require(\"./utils/ImageUtils\");\r\nexports.ImageUtils = ImageUtils_1.ImageUtils;\r\nvar MipmapGenerator_1 = require(\"./utils/MipmapGenerator\");\r\nexports.MipmapGenerator = MipmapGenerator_1.MipmapGenerator;\r\nvar RequestAnimationFrame_1 = require(\"./utils/RequestAnimationFrame\");\r\nexports.RequestAnimationFrame = RequestAnimationFrame_1.RequestAnimationFrame;\r\nvar Timer_1 = require(\"./utils/Timer\");\r\nexports.Timer = Timer_1.Timer;\r\nvar XmlUtils_1 = require(\"./utils/XmlUtils\");\r\nexports.XmlUtils = XmlUtils_1.XmlUtils;\r\n},{\"./utils/BitmapImageUtils\":\"awayjs-core/lib/utils/BitmapImageUtils\",\"./utils/ByteArray\":\"awayjs-core/lib/utils/ByteArray\",\"./utils/ByteArrayBase\":\"awayjs-core/lib/utils/ByteArrayBase\",\"./utils/ByteArrayBuffer\":\"awayjs-core/lib/utils/ByteArrayBuffer\",\"./utils/CSS\":\"awayjs-core/lib/utils/CSS\",\"./utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\",\"./utils/Debug\":\"awayjs-core/lib/utils/Debug\",\"./utils/Extensions\":\"awayjs-core/lib/utils/Extensions\",\"./utils/ImageUtils\":\"awayjs-core/lib/utils/ImageUtils\",\"./utils/MipmapGenerator\":\"awayjs-core/lib/utils/MipmapGenerator\",\"./utils/RequestAnimationFrame\":\"awayjs-core/lib/utils/RequestAnimationFrame\",\"./utils/Timer\":\"awayjs-core/lib/utils/Timer\",\"./utils/XmlUtils\":\"awayjs-core/lib/utils/XmlUtils\",\"./utils/getTimer\":\"awayjs-core/lib/utils/getTimer\"}]},{},[1])\n\n",
    "import * as attributes\t\t\t\tfrom \"./lib/attributes\";\r\nimport * as audio\t\t\t\t\tfrom \"./lib/audio\";\r\nimport * as errors\t\t\t\t\tfrom \"./lib/errors\";\r\nimport * as events\t\t\t\t\tfrom \"./lib/events\";\r\nimport * as geom\t\t\t\t\tfrom \"./lib/geom\";\r\nimport * as image\t\t\t\t\tfrom \"./lib/image\";\r\nimport * as library\t\t\t\t\tfrom \"./lib/library\";\r\nimport * as managers\t\t\t\tfrom \"./lib/managers\";\r\nimport * as net\t\t\t\t\t\tfrom \"./lib/net\";\r\nimport * as parsers\t\t\t\t\tfrom \"./lib/parsers\";\r\nimport * as projections\t\t\t\tfrom \"./lib/projections\";\r\nimport * as ui\t\t\t\t\t\tfrom \"./lib/ui\";\r\nimport * as utils\t\t\t\t\tfrom \"./lib/utils\";\r\n\r\nlibrary.Loader.enableParser(parsers.Image2DParser);\r\nlibrary.Loader.enableParser(parsers.ImageCubeParser);\r\nlibrary.Loader.enableParser(parsers.TextureAtlasParser);\r\nlibrary.Loader.enableParser(parsers.WaveAudioParser);\r\n\r\nexport {\r\n\tattributes,\r\n\taudio,\r\n\terrors,\r\n\tevents,\r\n\tgeom,\r\n\timage,\r\n\tlibrary,\r\n\tmanagers,\r\n\tnet,\r\n\tparsers,\r\n\tprojections,\r\n\tui,\r\n\tutils\r\n}",
    "import {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\r\nimport {AssetBase}\t\t\t\tfrom \"../library/AssetBase\";\r\n\r\nexport class AttributesBuffer extends AssetBase\r\n{\r\n\tpublic static assetType:string = \"[assets AttributesBuffer]\";\r\n\t\r\n\tprivate _count:number = 0;\r\n\tprivate _stride:number = 0;\r\n\tprivate _newStride:number = 0;\r\n\r\n\tprivate _buffer:ArrayBuffer;\r\n\tprivate _bufferView:Uint8Array;\r\n\tprivate _contentDirty:boolean;\r\n\tprivate _lengthDirty:boolean;\r\n\tprivate _viewVOs:Array<ViewVO> = new Array<ViewVO>();\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AttributesBuffer.assetType;\r\n\t}\r\n\r\n\tpublic get stride():number\r\n\t{\r\n\t\tif (this._lengthDirty)\r\n\t\t\tthis._updateLength();\r\n\r\n\t\treturn this._stride;\r\n\t}\r\n\r\n\tpublic set stride(value:number)\r\n\t{\r\n\t\tif (this._newStride == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._newStride = value;\r\n\r\n\t\tthis.resize();\r\n\t}\r\n\t\r\n\tpublic get count():number\r\n\t{\r\n\t\treturn this._count;\r\n\t}\r\n\t\r\n\tpublic set count(value:number)\r\n\t{\r\n\t\tif (this._count == value)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tthis._count = value;\r\n\t\t\r\n\t\tthis.resize();\r\n\t}\r\n\r\n\r\n\tpublic get buffer():ArrayBuffer\r\n\t{\r\n\t\tif (this._lengthDirty)\r\n\t\t\tthis._updateLength();\r\n\r\n\t\tthis._contentDirty = false;\r\n\r\n\t\treturn this._buffer;\r\n\t}\r\n\r\n\r\n\tpublic get bufferView():Uint8Array\r\n\t{\r\n\t\tif (this._lengthDirty)\r\n\t\t\tthis._updateLength();\r\n\r\n\t\tthis._contentDirty = false;\r\n\r\n\t\treturn this._bufferView;\r\n\t}\r\n\r\n\tpublic set bufferView(value:Uint8Array)\r\n\t{\r\n\t\tthis._bufferView = value;\r\n\t\tthis._buffer = this._bufferView.buffer;\r\n\t}\r\n\r\n\tpublic get length():number\r\n\t{\r\n\t\treturn this._count*this.stride;\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(stride:number = 0, count:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._stride = this._newStride = stride;\r\n\t\tthis._count = count;\r\n\r\n\t\tthis._buffer = new ArrayBuffer(this._stride*this._count);\r\n\t\tthis._bufferView = new Uint8Array(this._buffer, 0, this._buffer.byteLength);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tif (this._contentDirty)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.invalidate();\r\n\r\n\t\tthis._contentDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic resize():void\r\n\t{\r\n\t\tif (this._lengthDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis.clear();\r\n\r\n\t\tthis._lengthDirty = true;\r\n\r\n\t\t//dispose buffer if stride is 0\r\n\t\tif (!this._newStride) {\r\n\t\t\tthis._buffer = null;\r\n\t\t\tthis._bufferView = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic clone():AttributesBuffer\r\n\t{\r\n\t\tvar attributesBuffer:AttributesBuffer = new AttributesBuffer(this._stride, this._count);\r\n\t\tattributesBuffer.bufferView.set(this.bufferView);\r\n\r\n\t\tvar len:number = this._viewVOs.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._viewVOs[i].view._internalClone(attributesBuffer);\r\n\r\n\t\treturn attributesBuffer;\r\n\t}\r\n\r\n\tpublic getView(index:number):AttributesView\r\n\t{\r\n\t\tif (index < this._viewVOs.length)\r\n\t\t\treturn this._viewVOs[index].view;\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic _setAttributes(viewIndex:number, arrayBufferView:ArrayBufferView, offset:number = 0):void\r\n\t{\r\n\t\tvar array:Uint8Array = (arrayBufferView instanceof Uint8Array)? <Uint8Array> arrayBufferView : new Uint8Array(arrayBufferView.buffer);\r\n\r\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\r\n\t\tvar vLength:number = viewVO.length;\r\n\t\tvar vOffset:number = viewVO.offset;\r\n\t\tvar vCount:number = array.length/vLength;\r\n\r\n\t\t//make sure there is enough space in the buffer\r\n\t\tif (this.count < vCount + offset)\r\n\t\t\tthis.count = vCount + offset;\r\n\r\n\t\tif (this._lengthDirty)\r\n\t\t\tthis._updateLength();\r\n\r\n\t\t//fast path for separate buffers\r\n\t\tif (this._viewVOs.length == 1) {\r\n\t\t\tthis._bufferView.set(array);\r\n\t\t} else {\r\n\t\t\tfor (var i:number = 0; i < vCount; i++)\r\n\t\t\t\tthis._bufferView.set(array.subarray(i*vLength, (i+1)*vLength), (i+offset)*this._stride + vOffset);\r\n\t\t}\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\tpublic _addView(view:AttributesView):void\r\n\t{\r\n\t\tvar viewVO:ViewVO = new ViewVO(view);\r\n\t\tvar len:number = this._viewVOs.length;\r\n\r\n\t\tviewVO.offset = len? this._viewVOs[len - 1].offset + this._viewVOs[len - 1].length : 0;\r\n\r\n\t\tthis._viewVOs.push(viewVO);\r\n\r\n\t\tif (this._newStride < viewVO.offset + viewVO.length) {\r\n\t\t\tthis._newStride = viewVO.offset + viewVO.length;\r\n\t\t\tthis.resize();\r\n\t\t}\r\n\r\n\t\tview._index = len;\r\n\t}\r\n\r\n\tpublic _removeView(view:AttributesView):void\r\n\t{\r\n\t\tvar viewIndex:number = view._index;\r\n\t\tvar viewVO:ViewVO = this._viewVOs.splice(viewIndex, 1)[0];\r\n\t\tvar len:number = this._viewVOs.length;\r\n\r\n\t\tviewVO.dispose();\r\n\r\n\t\tfor (var i:number = viewIndex; i < len; i++) {\r\n\t\t\tviewVO = this._viewVOs[i];\r\n\t\t\tviewVO.offset = i? this._viewVOs[i - 1].offset + this._viewVOs[i - 1].length : 0;\r\n\t\t\tviewVO.view._index = i;\r\n\t\t}\r\n\r\n\t\tthis._newStride = viewVO.offset + viewVO.length;\r\n\r\n\t\tthis.resize();\r\n\t}\r\n\r\n\tpublic _getOffset(viewIndex:number):number\r\n\t{\r\n\t\treturn this._viewVOs[viewIndex].offset;\r\n\t}\r\n\r\n\tpublic _updateLength():void\r\n\t{\r\n\t\tthis._lengthDirty = false;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar len:number = this._viewVOs.length;\r\n\r\n\t\tvar newLength:number = this._newStride*this._count;\r\n\r\n\t\tif (!this._buffer || this._buffer.byteLength != newLength) {\r\n\t\t\tvar newBuffer:ArrayBuffer = new ArrayBuffer(newLength);\r\n\t\t\tvar newView:Uint8Array = new Uint8Array(newBuffer, 0, newBuffer.byteLength);\r\n\t\t\tvar viewVO:ViewVO;\r\n\t\t\tvar vLength:number;\r\n\t\t\tvar vOffset:number;\r\n\t\t\tvar vOldOffset:number;\r\n\r\n\t\t\tif (this._stride != this._newStride) {\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tviewVO = this._viewVOs[i];\r\n\t\t\t\t\tvLength = viewVO.length;\r\n\t\t\t\t\tvOffset = viewVO.offset;\r\n\t\t\t\t\tvOldOffset = viewVO.oldOffset;\r\n\t\t\t\t\tfor (j = 0; j < this._count; j++)\r\n\t\t\t\t\t\tif (vOldOffset != null)\r\n\t\t\t\t\t\t\tnewView.set(new Uint8Array(this._buffer, j*this._stride + vOldOffset, vLength), j*this._newStride + vOffset);\r\n\r\n\t\t\t\t\tviewVO.oldOffset = viewVO.offset;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._stride = this._newStride;\r\n\t\t\t} else {\r\n\t\t\t\tnewView.set(new Uint8Array(this._buffer, 0, Math.min(newLength, this._buffer.byteLength))); //TODO: bypass quantisation of bytearray on instantiation\r\n\t\t\t}\r\n\r\n\t\t\tthis._buffer = newBuffer;\r\n\t\t\tthis._bufferView = newView;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ViewVO\r\n{\r\n\tpublic view:AttributesView;\r\n\r\n\tpublic length;\r\n\r\n\tpublic offset;\r\n\r\n\tpublic oldOffset;\r\n\r\n\tconstructor(view:AttributesView)\r\n\t{\r\n\t\tthis.view = view;\r\n\t\tthis.length = view.size*view.dimensions;\r\n\t}\r\n\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.view = null;\r\n\t}\r\n\r\n\tpublic clone():ViewVO\r\n\t{\r\n\t\treturn new ViewVO(this.view);\r\n\t}\r\n}",
    "import {AttributesBuffer}\t\tfrom \"../attributes/AttributesBuffer\";\r\nimport {AssetBase}\t\t\t\tfrom \"../library/AssetBase\";\r\nimport {IArrayBufferViewClass}\tfrom \"../utils/IArrayBufferViewClass\";\r\n\r\nexport class AttributesView extends AssetBase\r\n{\r\n\tpublic static assetType:string = \"[attributes AttributesView]\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AttributesView.assetType;\r\n\t}\r\n\r\n\tpublic _cloneCache:AttributesView;\r\n\tpublic _attributesBuffer:AttributesBuffer;\r\n\tpublic _bufferDirty:boolean;\r\n\tprivate _size:number;\r\n\tprivate _dimensions:number;\r\n\tprivate _unsigned:boolean;\r\n\r\n\tpublic _index:number;\r\n\tpublic _arrayClass:IArrayBufferViewClass;\r\n\r\n\tpublic normalized:boolean;\r\n\r\n\tpublic get attributesBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._attributesBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get size():number\r\n\t{\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\tpublic set size(value:number)\r\n\t{\r\n\t\tif (this._size == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._size = value;\r\n\r\n\t\tthis._attributesBuffer._removeView(this);\r\n\t\tthis._attributesBuffer._addView(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get dimensions():number\r\n\t{\r\n\t\treturn this._dimensions;\r\n\t}\r\n\r\n\tpublic set dimensions(value:number)\r\n\t{\r\n\t\tif (this._dimensions == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._dimensions = value;\r\n\r\n\t\t//reset view\r\n\t\tthis._attributesBuffer._removeView(this);\r\n\t\tthis._attributesBuffer._addView(this);\r\n\t}\r\n\r\n\tpublic get unsigned():boolean\r\n\t{\r\n\t\treturn this._unsigned;\r\n\t}\r\n\r\n\tpublic get count():number\r\n\t{\r\n\t\treturn this._attributesBuffer.count;\r\n\t}\r\n\r\n\tpublic set count(value:number)\r\n\t{\r\n\t\tthis._attributesBuffer.count = value;\r\n\t}\r\n\r\n\tpublic get offset():number\r\n\t{\r\n\t\treturn this._attributesBuffer._getOffset(this._index);\r\n\t}\r\n\r\n\tpublic get length():number\r\n\t{\r\n\t\treturn this._attributesBuffer.count*this._dimensions;\r\n\t}\r\n\t\r\n\tpublic get stride():number\r\n\t{\r\n\t\treturn this._attributesBuffer.stride/this._size;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, count?:number, unsigned?:boolean);\r\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBuffer?:AttributesBuffer, unsigned?:boolean);\r\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBufferCount:any = 0, unsigned:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._arrayClass = arrayClass;\r\n\t\tthis._size = arrayClass.BYTES_PER_ELEMENT;\r\n\t\tthis._dimensions = dimensions;\r\n\t\tthis._attributesBuffer = (attributesBufferCount instanceof AttributesBuffer)? <AttributesBuffer> attributesBufferCount : new AttributesBuffer(this._dimensions*this._size, attributesBufferCount);\r\n\r\n\t\tthis._attributesBuffer._addView(this);\r\n\r\n\t\tthis._unsigned = unsigned;\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(arrayBufferView:ArrayBufferView, offset?:number);\r\n\tpublic set(values:any, offset:number = 0):void\r\n\t{\r\n\t\tthis._attributesBuffer._setAttributes(this._index, (values instanceof Array)? new (this._arrayClass)(values) : <ArrayBufferView> values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset:number = 0):ArrayBufferView\r\n\t{\r\n\t\treturn new (this._arrayClass)(this._attributesBuffer.buffer, offset*this._attributesBuffer.stride + this.offset, count*this.stride - this.offset/this.size);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):AttributesView\r\n\t{\r\n\t\treturn (this._cloneCache = new AttributesView(this._arrayClass, this._dimensions, attributesBuffer, this._unsigned));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):AttributesView\r\n\t{\r\n\t\tif (attributesBuffer)\r\n\t\t\tthis._internalClone(attributesBuffer);\r\n\r\n\t\tif (!this._cloneCache)\r\n\t\t\tthis._attributesBuffer.clone();\r\n\r\n\t\tvar cloneCache:AttributesView = this._cloneCache;\r\n\t\tthis._cloneCache = null;\r\n\r\n\t\treturn cloneCache;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tif (!this._attributesBuffer)\r\n\t\t\treturn;\r\n\r\n\t\tthis._attributesBuffer._removeView(this);\r\n\t\tthis._attributesBuffer = null;\r\n\t}\r\n}",
    "import {AttributesBuffer}\t\tfrom \"../attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\r\n\r\nexport class Byte4Attributes extends AttributesView\r\n{\r\n\tpublic static assetType:string = \"[attributes Byte4Attributes]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Byte4Attributes.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(length?:number, unsigned?:boolean);\r\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\r\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\r\n\t{\r\n\t\tsuper(unsigned? Uint8Array : Int8Array, 4, attributesBufferLength, unsigned);\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(typedArray:Float32Array, offset?:number);\r\n\tpublic set(typedArray:Uint8Array, offset?:number);\r\n\tpublic set(typedArray:Int8Array, offset?:number);\r\n\tpublic set(values:any, offset:number = 0):void\r\n\t{\r\n\t\tsuper.set(values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset?:number):Uint8Array;\r\n\tpublic get(count:number, offset?:number):Int8Array;\r\n\tpublic get(count:number, offset:number = 0):any\r\n\t{\r\n\t\treturn super.get(count, offset);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte4Attributes\r\n\t{\r\n\t\treturn (this._cloneCache = new Byte4Attributes(attributesBuffer, this._arrayClass == Uint8Array));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte4Attributes\r\n\t{\r\n\t\treturn <Byte4Attributes> super.clone(attributesBuffer);\r\n\t}\r\n}",
    "import {AttributesBuffer}\t\tfrom \"../attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\r\n\r\nexport class Float1Attributes extends AttributesView\r\n{\r\n\tpublic static assetType:string = \"[attributes Float1Attributes]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Float1Attributes.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(length?:number);\r\n\tconstructor(attributesBuffer?:AttributesBuffer);\r\n\tconstructor(attributesBufferLength?:any)\r\n\t{\r\n\t\tsuper(Float32Array, 1, attributesBufferLength)\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(typedArray:Float32Array, offset?:number);\r\n\tpublic set(values:any, offset:number = 0):void\r\n\t{\r\n\t\tsuper.set(values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset:number = 0):Float32Array\r\n\t{\r\n\t\treturn <Float32Array> super.get(count, offset);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float1Attributes\r\n\t{\r\n\t\treturn (this._cloneCache = new Float1Attributes(attributesBuffer));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float1Attributes\r\n\t{\r\n\t\treturn <Float1Attributes> super.clone(attributesBuffer);\r\n\t}\r\n}",
    "import {AttributesBuffer}\t\tfrom \"../attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\r\n\r\nexport class Float2Attributes extends AttributesView\r\n{\r\n\tpublic static assetType:string = \"[attributes Float2Attributes]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Float2Attributes.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(length?:number);\r\n\tconstructor(attributesBuffer?:AttributesBuffer);\r\n\tconstructor(attributesBufferLength?:any)\r\n\t{\r\n\t\tsuper(Float32Array, 2, attributesBufferLength)\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(typedArray:Float32Array, offset?:number);\r\n\tpublic set(values:any, offset:number = 0):void\r\n\t{\r\n\t\tsuper.set(values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset:number = 0):Float32Array\r\n\t{\r\n\t\treturn <Float32Array> super.get(count, offset);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float2Attributes\r\n\t{\r\n\t\treturn (this._cloneCache = new Float2Attributes(attributesBuffer));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float2Attributes\r\n\t{\r\n\t\treturn <Float2Attributes> super.clone(attributesBuffer);\r\n\t}\r\n}",
    "import {AttributesBuffer}\t\t\tfrom \"../attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\r\n\r\nexport class Float3Attributes extends AttributesView\r\n{\r\n\tpublic static assetType:string = \"[attributes Float3Attributes]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Float3Attributes.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(length?:number);\r\n\tconstructor(attributesBuffer?:AttributesBuffer);\r\n\tconstructor(attributesBufferLength?:any)\r\n\t{\r\n\t\tsuper(Float32Array, 3, attributesBufferLength)\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(typedArray:Float32Array, offset?:number);\r\n\tpublic set(values:any, offset:number = 0):void\r\n\t{\r\n\t\tsuper.set(values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset:number = 0):Float32Array\r\n\t{\r\n\t\treturn <Float32Array> super.get(count, offset);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\treturn (this._cloneCache = new Float3Attributes(attributesBuffer));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float3Attributes\r\n\t{\r\n\t\treturn <Float3Attributes> super.clone(attributesBuffer);\r\n\t}\r\n}",
    "import {AttributesBuffer}\t\t\tfrom \"../attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\r\n\r\nexport class Float4Attributes extends AttributesView\r\n{\r\n\tpublic static assetType:string = \"[attributes Float4Attributes]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Float4Attributes.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(length?:number);\r\n\tconstructor(attributesBuffer?:AttributesBuffer);\r\n\tconstructor(attributesBufferLength?:any)\r\n\t{\r\n\t\tsuper(Float32Array, 4, attributesBufferLength)\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(typedArray:Float32Array, offset?:number);\r\n\tpublic set(values:any, offset:number = 0):void\r\n\t{\r\n\t\tsuper.set(values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset:number = 0):Float32Array\r\n\t{\r\n\t\treturn <Float32Array> super.get(count, offset);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float4Attributes\r\n\t{\r\n\t\treturn (this._cloneCache = new Float4Attributes(attributesBuffer));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float4Attributes\r\n\t{\r\n\t\treturn <Float4Attributes> super.clone(attributesBuffer);\r\n\t}\r\n}",
    "import {AttributesBuffer}\t\t\tfrom \"../attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\r\n\r\nexport class Short2Attributes extends AttributesView\r\n{\r\n\tpublic static assetType:string = \"[attributes Short2Attributes]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Short2Attributes.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(length?:number, unsigned?:boolean);\r\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\r\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\r\n\t{\r\n\t\tsuper(unsigned? Uint16Array : Int16Array, 2, attributesBufferLength, unsigned)\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(typedArray:Uint16Array, offset?:number);\r\n\tpublic set(typedArray:Int16Array, offset?:number);\r\n\tpublic set(values:any, offset:number = 0):void\r\n\t{\r\n\t\tsuper.set(values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset?:number):Uint16Array;\r\n\tpublic get(count:number, offset?:number):Int16Array;\r\n\tpublic get(count:number, offset:number = 0):any\r\n\t{\r\n\t\treturn super.get(count, offset);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short2Attributes\r\n\t{\r\n\t\treturn (this._cloneCache = new Short2Attributes(attributesBuffer, this._arrayClass == Uint16Array));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short2Attributes\r\n\t{\r\n\t\treturn <Short2Attributes> super.clone(attributesBuffer);\r\n\t}\r\n}",
    "import {AttributesBuffer}\t\t\tfrom \"../attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\r\n\r\nexport class Short3Attributes extends AttributesView\r\n{\r\n\tpublic static assetType:string = \"[attributes Short3Attributes]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Short3Attributes.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(length?:number, unsigned?:boolean);\r\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\r\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\r\n\t{\r\n\t\tsuper(unsigned? Uint16Array : Int16Array, 3, attributesBufferLength, unsigned)\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(typedArray:Uint16Array, offset?:number);\r\n\tpublic set(typedArray:Int16Array, offset?:number);\r\n\tpublic set(values:any, offset:number = 0):void\r\n\t{\r\n\t\tsuper.set(values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset?:number):Uint16Array;\r\n\tpublic get(count:number, offset?:number):Int16Array;\r\n\tpublic get(count:number, offset:number = 0):any\r\n\t{\r\n\t\treturn super.get(count, offset);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short3Attributes\r\n\t{\r\n\t\treturn (this._cloneCache = new Short3Attributes(attributesBuffer, this._arrayClass == Uint16Array));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short3Attributes\r\n\t{\r\n\t\treturn <Short3Attributes> super.clone(attributesBuffer);\r\n\t}\r\n}",
    "export {AttributesView}\t\t\t\t\tfrom \"./attributes/AttributesView\";\r\nexport {AttributesBuffer}\t\t\t\tfrom \"./attributes/AttributesBuffer\";\r\nexport {Byte4Attributes}\t\t\t\tfrom \"./attributes/Byte4Attributes\";\r\nexport {Float1Attributes}\t\t\t\tfrom \"./attributes/Float1Attributes\";\r\nexport {Float2Attributes}\t\t\t\tfrom \"./attributes/Float2Attributes\";\r\nexport {Float3Attributes}\t\t\t\tfrom \"./attributes/Float3Attributes\";\r\nexport {Float4Attributes}\t\t\t\tfrom \"./attributes/Float4Attributes\";\r\nexport {Short2Attributes}\t\t\t\tfrom \"./attributes/Short2Attributes\";\r\nexport {Short3Attributes}\t\t\t\tfrom \"./attributes/Short3Attributes\";",
    "import {IAudioChannel}\t\t\t\tfrom \"../managers/IAudioChannel\";\r\nimport {AudioManager}\t\t\t\tfrom \"../managers/AudioManager\";\r\nimport {ColorTransform}\t\t\tfrom \"../geom/ColorTransform\";\r\nimport {Matrix}\t\t\t\t\tfrom \"../geom/Matrix\";\r\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\r\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {AssetBase}\t\t\t\tfrom \"../library/AssetBase\";\r\nimport {ParserUtils}\t\t\t\tfrom \"../parsers/ParserUtils\";\r\nimport {ColorUtils}\t\t\t\tfrom \"../utils/ColorUtils\";\r\n\r\n// TODO: Audio should probably be an interface containing play/stop/seek functionality\r\nexport class WaveAudio extends AssetBase\r\n{\r\n\tpublic static assetType:string = \"[asset WaveAudio]\";\r\n\r\n\tprivate _audioChannel:IAudioChannel;\r\n\tprivate _volume:number = 1;\r\n\tprivate _buffer:ArrayBuffer;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn WaveAudio.assetType;\r\n\t}\r\n\r\n\tpublic get volume():number\r\n\t{\r\n\t\treturn this._volume;\r\n\t}\r\n\r\n\tpublic set volume(value:number)\r\n\t{\r\n\t\tif (this._volume == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._volume = value;\r\n\r\n\t\tif (this._audioChannel)\r\n\t\t\tthis._audioChannel.volume = this._volume;\r\n\t}\r\n\r\n\tpublic get currentTime():number\r\n\t{\r\n\t\tif (this._audioChannel)\r\n\t\t\treturn this._audioChannel.currentTime;\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tpublic get duration():number\r\n\t{\r\n\t\tif (this._audioChannel)\r\n\t\t\treturn this._audioChannel.duration;\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(buffer:ArrayBuffer)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._buffer = buffer;\r\n\t}\r\n\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.stop();\r\n\t}\r\n\r\n\tpublic play(offset:number, loop:boolean = false):void\r\n\t{\r\n\t\tthis._audioChannel = AudioManager.getChannel(this._buffer.byteLength);\r\n\r\n\t\tif (this._audioChannel) {\r\n\t\t\tthis._audioChannel.volume = this._volume;\r\n\t\t\tthis._audioChannel.play(this._buffer, offset, loop, this.id);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic stop():void\r\n\t{\r\n\t\tif (this._audioChannel)\r\n\t\t\tthis._audioChannel.stop();\r\n\r\n\t\tdelete this._audioChannel;\r\n\t\tthis._audioChannel = null;\r\n\t}\r\n\r\n\tpublic clone():WaveAudio\r\n\t{\r\n\t\tvar newInstance:WaveAudio = new WaveAudio(this._buffer);\r\n\r\n\t\tnewInstance.name = this.name;\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n}",
    "export {WaveAudio}\t\t\t\t\t\tfrom \"./audio/WaveAudio\";",
    "import {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nexport class AbstractMethodError extends ErrorBase\r\n{\r\n\t/**\r\n\t * Create a new AbstractMethodError.\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract export class was created, or an abstract method was not overridden by the subclass.\", id);\r\n\t}\r\n}",
    "import {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nexport class ArgumentError extends ErrorBase\r\n{\r\n\t/**\r\n\t * Create a new ArgumentError.\r\n\t *\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"ArgumentError\", id);\r\n\t}\r\n}",
    "import {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\r\n\r\nexport class DocumentError extends ErrorBase\r\n{\r\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\r\n\r\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\r\n\t{\r\n\t\tsuper(message, id);\r\n\t}\r\n}",
    "export class ErrorBase\r\n{\r\n\r\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\r\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\r\n\tprivate _name:string = '';  // Contains the name of the Error object.\r\n\r\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\r\n\t{\r\n\r\n\t\tthis._messsage = message;\r\n\t\tthis._name = name;\r\n\t\tthis._errorID = id;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get message():string\r\n\t{\r\n\t\treturn this._messsage;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set message(value:string)\r\n\t{\r\n\t\tthis._messsage = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get name():string\r\n\t{\r\n\r\n\t\treturn this._name;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set name(value:string)\r\n\t{\r\n\r\n\t\tthis._name = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get errorID():number\r\n\t{\r\n\r\n\t\treturn this._errorID;\r\n\r\n\t}\r\n\r\n}",
    "import {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nexport class PartialImplementationError extends ErrorBase\r\n{\r\n\t/**\r\n\t * Create a new AbstractMethodError.\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(dependency:string = '', id:number = 0)\r\n\t{\r\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\r\n\t}\r\n}",
    "import {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\r\n\r\n/**\r\n * RangeError is thrown when an index is accessed out of range of the number of\r\n * available indices on an Array.\r\n */\r\nexport class RangeError extends ErrorBase\r\n{\r\n\t/**\r\n\t * Create a new RangeError.\r\n\t *\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"RangeError\", id);\r\n\t}\r\n}",
    "export {AbstractMethodError}\t\t\tfrom \"./errors/AbstractMethodError\";\r\nexport {ArgumentError}\t\t\t\t\tfrom \"./errors/ArgumentError\";\r\nexport {DocumentError}\t\t\t\t\tfrom \"./errors/DocumentError\";\r\nexport {ErrorBase}\t\t\t\t\t\tfrom \"./errors/ErrorBase\";\r\nexport {PartialImplementationError}\t\tfrom \"./errors/PartialImplementationError\";\r\nexport {RangeError}\t\t\t\t\t\tfrom \"./errors/RangeError\";",
    "import {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {EventBase}\t\t\t\tfrom \"../events/EventBase\";\r\n\r\n/**\r\n * @export class away.events.AssetEvent\r\n */\r\nexport class AssetEvent extends EventBase\r\n{\r\n\t/**\r\n\t * Dispatched when the content of an asset is invalidated\r\n\t */\r\n\tpublic static INVALIDATE:string = \"invalidate\";\r\n\r\n\t/**\r\n\t * Dispatched when an asset is diposed\r\n\t */\r\n\tpublic static DISPOSE:string = \"dispose\";\r\n\r\n\t/**\r\n\t * Dispatched when an asset is cleared\r\n\t */\r\n\tpublic static CLEAR:string = \"clear\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static RENAME:string = 'rename';\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ENTER_FRAME:string = 'enterFrame';\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static EXIT_FRAME:string = 'exitFrame';\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\r\n\r\n\t/**\r\n\t * Dispatched when the loading of an asset and all of its dependencies is complete.\r\n\t */\r\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\r\n\r\n\tprivate _asset:IAsset;\r\n\tprivate _prevName:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(type:string, asset:IAsset, prevName:string = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._asset = asset;\r\n\t\tthis._prevName = prevName || this._asset.name;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get asset():IAsset\r\n\t{\r\n\t\treturn this._asset;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get prevName():string\r\n\t{\r\n\t\treturn this._prevName;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():AssetEvent\r\n\t{\r\n\t\treturn new AssetEvent(this.type, this._asset, this._prevName);\r\n\t}\r\n}",
    "export class EventBase\r\n{\r\n\t/**\r\n\t * Type of event\r\n\t * @property type\r\n\t * @type String\r\n\t */\r\n\tpublic type:string = undefined;\r\n\r\n\t/**\r\n\t * Reference to target object\r\n\t * @property target\r\n\t * @type Object\r\n\t */\r\n\tpublic target:any = undefined;\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current event.\r\n\t * @return An exact duplicate of the current event.\r\n\t */\r\n\tpublic clone():EventBase\r\n\t{\r\n\t\treturn new EventBase(this.type);\r\n\t}\r\n}",
    "import {EventBase}\t\t\t\t\tfrom \"../events/EventBase\";\r\n\r\n/**\r\n * Base export class for dispatching events\r\n*\r\n* @export class away.events.EventDispatcher\r\n*\r\n*/\r\nexport class EventDispatcher\r\n{\r\n\tprivate listenerObjects:Array<ListenerObject> = new Array<ListenerObject>();\r\n\tprivate target:any;\r\n\r\n\tconstructor(target:any = null)\r\n\t{\r\n\t\tthis.target = target || this;\r\n\t}\r\n\r\n\t/**\r\n\t * Add an event listener\r\n\t * @method addEventListener\r\n\t * @param {String} Name of event to add a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void):void\r\n\t{\r\n\t\tvar l:ListenerObject = this.listenerObjects[type];\r\n\r\n\t\tif (l === undefined)\r\n\t\t\tl = this.listenerObjects[type] = new ListenerObject();\r\n\r\n\t\tl.addEventListener(listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an event listener\r\n\t * @method removeEventListener\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void):void\r\n\t{\r\n\t\tvar l:ListenerObject = this.listenerObjects[type];\r\n\r\n\t\tif (l) {\r\n\t\t\tl.removeEventListener(listener);\r\n\r\n\t\t\tif (l.numListeners == 0)\r\n\t\t\t\tdelete this.listenerObjects[type];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatch an event\r\n\t * @method dispatchEvent\r\n\t * @param {Event} Event to dispatch\r\n\t */\r\n\tpublic dispatchEvent(event:EventBase):void\r\n\t{\r\n\t\tvar l:ListenerObject = this.listenerObjects[event.type];\r\n\r\n\t\tif (l) {\r\n\t\t\tevent.target = this.target;\r\n\t\t\tl.dispatchEvent(event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * check if an object has an event listener assigned to it\r\n\t * @method hasListener\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic hasEventListener(type:string, listener?:(event:EventBase) => void):boolean\r\n\t{\r\n\t\tif (this.listenerObjects[type] === undefined)\r\n\t\t\treturn false;\r\n\r\n\t\tif (listener != null)\r\n\t\t\treturn this.listenerObjects[type].getEventListenerIndex(listener) !== -1;\r\n\r\n\t\treturn this.listenerObjects[type].numListeners > 0;\r\n\t}\r\n}\r\n\r\nexport class ListenerObject\r\n{\r\n\tpublic index:number = 0;\r\n\r\n\tpublic listeners:Array<(event:EventBase) => void> = new Array<(event:EventBase) => void>();\r\n\r\n\tpublic numListeners:number = 0;\r\n\r\n\tpublic addEventListener(listener:(event:EventBase) => void):void\r\n\t{\r\n\t\t//check if listener already added\r\n\t\tif (this.getEventListenerIndex(listener) !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tthis.listeners.push(listener);\r\n\t\tthis.numListeners++;\r\n\t}\r\n\r\n\tpublic removeEventListener(listener:(event:EventBase) => void):void\r\n\t{\r\n\t\t//check if listener exists\r\n\t\tvar index:number = this.getEventListenerIndex(listener);\r\n\r\n\t\tif (index === -1)\r\n\t\t\treturn;\r\n\r\n\t\tthis.listeners.splice(index, 1);\r\n\t\tif (index <= this.index)\r\n\t\t\tthis.index--;\r\n\r\n\t\tthis.numListeners--;\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:EventBase):void\r\n\t{\r\n\t\tvar len:number = this.numListeners;\r\n\t\tfor (this.index = 0; this.index < len && this.index < this.numListeners; this.index++)\r\n\t\t\tthis.listeners[this.index](event);\r\n\t}\r\n\r\n\t/**\r\n\t * get Event Listener Index in array. Returns -1 if no listener is added\r\n\t * @method getEventListenerIndex\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic getEventListenerIndex(listener:(event:EventBase) => void):number\r\n\t{\r\n\t\tfor (var index:number = 0; index < this.numListeners; index++)\r\n\t\t\tif (listener == this.listeners[index])\r\n\t\t\t\treturn index;\r\n\r\n\t\treturn -1;\r\n\t}\r\n}\r\nexport default EventDispatcher;",
    "import {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {EventBase}\t\t\t\tfrom \"../events/EventBase\";\r\n\r\nexport class LoaderEvent extends EventBase\r\n{\r\n\t/**\r\n\t * Dispatched when the loading of a session and all of its dependencies is complete.\r\n\t */\r\n\tpublic static LOAD_COMPLETE:string = \"loadComplete\";\r\n\r\n\tprivate _url:string;\r\n\tprivate _content:IAsset;\r\n\tprivate _assets:IAsset[];\r\n\r\n\t/**\r\n\t * Create a new LoaderEvent object.\r\n\t *\r\n\t * @param type The event type.\r\n\t * @param url The url of the loaded resource.\r\n\t * @param assets The assets of the loaded resource.\r\n\t */\r\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._url = url;\r\n\t\tthis._content = content;\r\n\t\tthis._assets = assets;\r\n\t}\r\n\r\n\t/**\r\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\r\n\t */\r\n\tpublic get content():IAsset\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The url of the loaded resource.\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n\r\n\t/**\r\n\t * The error string on loadError.\r\n\t */\r\n\tpublic get assets():IAsset[]\r\n\t{\r\n\t\treturn this._assets;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current event.\r\n\t * @return An exact duplicate of the current event.\r\n\t */\r\n\tpublic clone():LoaderEvent\r\n\t{\r\n\t\treturn new LoaderEvent(this.type, this._url, this._content, this._assets);\r\n\t}\r\n}",
    "import {EventBase}\t\t\t\tfrom \"../events/EventBase\";\r\n\r\nexport class ParserEvent extends EventBase\r\n{\r\n\tprivate _message:string;\r\n\r\n\t/**\r\n\t * Dispatched when parsing of an asset completed.\r\n\t */\r\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\r\n\r\n\t/**\r\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\r\n\t * incorrectly formatted.)\r\n\t */\r\n\tpublic static PARSE_ERROR:string = 'parseError';\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\r\n\t * This is an internal event that should rarely (if ever) be listened for by\r\n\t * external classes.\r\n\t */\r\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\r\n\r\n\r\n\tconstructor(type:string, message:string = '')\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._message = message;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\r\n\t */\r\n\tpublic get message():string\r\n\t{\r\n\t\treturn this._message;\r\n\t}\r\n\r\n\r\n\tpublic clone():ParserEvent\r\n\t{\r\n\t\treturn new ParserEvent(this.type, this._message);\r\n\t}\r\n}",
    "import {EventBase}\t\t\t\tfrom \"../events/EventBase\";\r\nimport {IProjection}\t\t\t\tfrom \"../projections/IProjection\";\r\n\r\nexport class ProjectionEvent extends EventBase\r\n{\r\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\r\n\r\n\tprivate _projection:IProjection;\r\n\r\n\tconstructor(type:string, projection:IProjection)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis._projection = projection;\r\n\t}\r\n\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n}",
    "import {EventBase}\t\t\t\tfrom \"../events/EventBase\";\r\n\r\nexport class TimerEvent extends EventBase\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TIMER:string = \"timer\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t}\r\n}\r\n\r\nexport default TimerEvent",
    "import {URLLoader}\t\t\t\tfrom \"../net/URLLoader\";\r\nimport {EventBase}\t\t\t\tfrom \"../events/EventBase\";\r\n\r\nexport class URLLoaderEvent extends EventBase\r\n{\r\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\r\n\r\n\tpublic static LOAD_ERROR:string = \"loadError\";\r\n\r\n\tpublic static LOAD_PROGRESS:string = \"loadProgress\";\r\n\r\n\tpublic static LOAD_START:string = \"loadStart\";\r\n\r\n\tpublic static LOAD_COMPLETE:string = \"loadComplete\";\r\n\r\n\tprivate _urlLoader:URLLoader;\r\n\r\n\tconstructor(type:string, urlLoader:URLLoader)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._urlLoader = urlLoader;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get urlLoader():URLLoader\r\n\t{\r\n\t\treturn this._urlLoader;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():URLLoaderEvent\r\n\t{\r\n\t\treturn new URLLoaderEvent(this.type, this._urlLoader);\r\n\t}\r\n}",
    "export {AssetEvent}\t\t\t\t\t\tfrom \"./events/AssetEvent\";\r\nexport {EventBase}\t\t\t\t\t\tfrom \"./events/EventBase\";\r\nexport {EventDispatcher}\t\t\t\tfrom \"./events/EventDispatcher\";\r\nexport {IEventDispatcher}\t\t\t\tfrom \"./events/IEventDispatcher\";\r\nexport {LoaderEvent}\t\t\t\t\tfrom \"./events/LoaderEvent\";\r\nexport {ParserEvent}\t\t\t\t\tfrom \"./events/ParserEvent\";\r\nexport {ProjectionEvent}\t\t\t\tfrom \"./events/ProjectionEvent\";\r\nexport {TimerEvent}\t\t\t\t\t\tfrom \"./events/TimerEvent\";\r\nexport {URLLoaderEvent}\t\t\t\t\tfrom \"./events/URLLoaderEvent\";",
    "import {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\r\n\r\n/**\r\n * A Box object is an area defined by its position, as indicated by its\r\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\r\n * height and depth.\r\n *\r\n *\r\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n * <code>height</code> <code>depth</code> properties of the Box export class are\r\n * independent of each other; changing the value of one property has no effect\r\n * on the others. However, the <code>right</code>, <code>bottom</code> and\r\n * <code>back</code> properties are integrally related to those six\r\n * properties. For example, if you change the value of the <code>right</code>\r\n * property, the value of the <code>width</code> property changes; if you\r\n * change the <code>bottom</code> property, the value of the\r\n * <code>height</code> property changes. </p>\r\n *\r\n * <p>The following methods and properties use Box objects:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Box()</code> constructor to create a\r\n * Box object.</p>\r\n *\r\n * <p><b>Note:</b> The Box export class does not define a cubic Shape\r\n * display object.\r\n */\r\nexport class Box\r\n{\r\n\tprivate _size:Vector3D;\r\n\tprivate _bottomRightBack:Vector3D;\r\n\tprivate _topLeftFront:Vector3D;\r\n\r\n\t/**\r\n\t * The height of the box, in pixels. Changing the <code>height</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The width of the box, in pixels. Changing the <code>width</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic depth:number;\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>x</code> property of a Box object has no\r\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>x</code> property is equal to the value of the\r\n\t * <code>left</code> property.</p>\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>y</code> property of a Box object has no\r\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>y</code> property is equal to the value of the\r\n\t * <code>top</code> property.</p>\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>z</code> property of a Box object has no\r\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>z</code> property is equal to the value of the\r\n\t * <code>front</code> property.</p>\r\n\t */\r\n\tpublic z:number\r\n\r\n\t/**\r\n\t * The sum of the <code>z</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get back():number\r\n\t{\r\n\t\treturn this.z + this.depth;\r\n\t}\r\n\r\n\tpublic set back(val:number)\r\n\t{\r\n\t\tthis.depth = val - this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>y</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get bottom():number\r\n\t{\r\n\t\treturn this.y + this.height;\r\n\t}\r\n\r\n\tpublic set bottom(val:number)\r\n\t{\r\n\t\tthis.height = val - this.y;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Box object's bottom-right corner, determined by the\r\n\t * values of the <code>right</code> and <code>bottom</code> properties.\r\n\t */\r\n\tpublic get bottomRightBack():Vector3D\r\n\t{\r\n\t\tif (this._bottomRightBack == null)\r\n\t\t\tthis._bottomRightBack = new Vector3D();\r\n\r\n\t\tthis._bottomRightBack.x = this.x + this.width;\r\n\t\tthis._bottomRightBack.y = this.y + this.height;\r\n\t\tthis._bottomRightBack.z = this.z + this.depth;\r\n\r\n\t\treturn this._bottomRightBack;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\r\n\t * the <code>front</code> property of a Box object has no effect on the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\r\n\t * properties. However it does affect the <code>depth</code> property,\r\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\r\n\t * <code>depth</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get front():number\r\n\t{\r\n\t\treturn this.z;\r\n\t}\r\n\r\n\tpublic set front(val:number)\r\n\t{\r\n\t\tthis.depth += this.z - val;\r\n\t\tthis.z = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\r\n\t * <code>left</code> property of a Box object has no effect on the\r\n\t * <code>y</code> and <code>height</code> properties. However it does affect\r\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\r\n\t * does <i>not</i> affect the <code>width</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get left():number\r\n\t{\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\tpublic set left(val:number)\r\n\t{\r\n\t\tthis.width += this.x - val;\r\n\t\tthis.x = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>x</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic get right():number\r\n\t{\r\n\t\treturn this.x + this.width;\r\n\t}\r\n\r\n\tpublic set right(val:number)\r\n\t{\r\n\t\tthis.width = val - this.x;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the Box object, expressed as a Vector3D object with the\r\n\t * values of the <code>width</code>, <code>height</code> and\r\n\t * <code>depth</code> properties.\r\n\t */\r\n\tpublic get size():Vector3D\r\n\t{\r\n\t\tif (this._size == null)\r\n\t\t\tthis._size = new Vector3D();\r\n\r\n\t\tthis._size.x = this.width;\r\n\t\tthis._size.y = this.height;\r\n\t\tthis._size.z = this.depth;\r\n\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\r\n\t * the <code>top</code> property of a Box object has no effect on the\r\n\t * <code>x</code> and <code>width</code> properties. However it does affect\r\n\t * the <code>height</code> property, whereas changing the <code>y</code>\r\n\t * value does <i>not</i> affect the <code>height</code> property.\r\n\t *\r\n\t * <p>The value of the <code>top</code> property is equal to the value of the\r\n\t * <code>y</code> property.</p>\r\n\t */\r\n\tpublic get top():number\r\n\t{\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\tpublic set top(val:number)\r\n\t{\r\n\t\tthis.height += (this.y - val);\r\n\t\tthis.y = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Box object's top-left-front corner, determined by the\r\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\r\n\t */\r\n\tpublic get topLeftFront():Vector3D\r\n\t{\r\n\t\tif (this._topLeftFront == null)\r\n\t\t\tthis._topLeftFront = new Vector3D();\r\n\r\n\t\tthis._topLeftFront.x = this.x;\r\n\t\tthis._topLeftFront.y = this.y;\r\n\t\tthis._topLeftFront.z = this.z;\r\n\r\n\t\treturn this._topLeftFront;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Box object with the top-left-front corner specified by the\r\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\r\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\r\n\t * parameters. If you call this public without parameters, a box with\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\r\n\t *\r\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param width  The width of the box, in pixels.\r\n\t * @param height The height of the box, in pixels.\r\n\t * @param depth The depth of the box, in pixels.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.depth = depth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Box object with the same values for the <code>x</code>,\r\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\r\n\t * and <code>depth</code> properties as the original Box object.\r\n\t *\r\n\t * @return A new Box object with the same values for the <code>x</code>,\r\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t *         <code>height</code> and <code>depth</code> properties as the\r\n\t *         original Box object.\r\n\t */\r\n\tpublic clone():Box\r\n\t{\r\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified position is contained within the cubic\r\n\t * region defined by this Box object.\r\n\t *\r\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\r\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\r\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\r\n\t * @return A value of <code>true</code> if the Box object contains the\r\n\t *         specified position; otherwise <code>false</code>.\r\n\t */\r\n\tpublic contains(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified position is contained within the cubic\r\n\t * region defined by this Box object. This method is similar to the\r\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\r\n\t * object as a parameter.\r\n\t *\r\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\r\n\t *                 <i>z</i> coordinates.\r\n\t * @return A value of <code>true</code> if the Box object contains the\r\n\t *         specified position; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsPoint(position:Vector3D):boolean\r\n\t{\r\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the Box object specified by the <code>box</code>\r\n\t * parameter is contained within this Box object. A Box object is said to\r\n\t * contain another if the second Box object falls entirely within the\r\n\t * boundaries of the first.\r\n\t *\r\n\t * @param box The Box object being checked.\r\n\t * @return A value of <code>true</code> if the Box object that you specify\r\n\t *         is contained by this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsBox(box:Box):boolean\r\n\t{\r\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of box data from the source Box object into the calling\r\n\t * Box object.\r\n\t *\r\n\t * @param sourceBox The Box object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceBox:Box):void\r\n\t{\r\n\t\tthis.x = sourceBox.x;\r\n\t\tthis.y = sourceBox.y;\r\n\t\tthis.z = sourceBox.z;\r\n\t\tthis.width = sourceBox.width;\r\n\t\tthis.height = sourceBox.height;\r\n\t\tthis.depth = sourceBox.depth;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toCompare</code>\r\n\t * parameter is equal to this Box object. This method compares the\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties of an object against\r\n\t * the same properties of this Box object.\r\n\t *\r\n\t * @param toCompare The box to compare to this Box object.\r\n\t * @return A value of <code>true</code> if the object has exactly the same\r\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\r\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\r\n\t *         properties as this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic equals(toCompare:Box):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Box object by the specified amounts, in\r\n\t * pixels. The center point of the Box object stays the same, and its\r\n\t * size increases to the left and right by the <code>dx</code> value, to\r\n\t * the top and the bottom by the <code>dy</code> value, and to\r\n\t * the front and the back by the <code>dz</code> value.\r\n\t *\r\n\t * @param dx The value to be added to the left and the right of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           width and position of the box:\r\n\t * @param dy The value to be added to the top and the bottom of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           height and position of the box:\r\n\t * @param dz The value to be added to the front and the back of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           depth and position of the box:\r\n\t */\r\n\tpublic inflate(dx:number, dy:number, dz:number):void\r\n\t{\r\n\t\tthis.x -= dx/2;\r\n\t\tthis.y -= dy/2;\r\n\t\tthis.z -= dz/2;\r\n\t\tthis.width += dx/2;\r\n\t\tthis.height += dy/2;\r\n\t\tthis.depth += dz/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Box object. This method is similar to the\r\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\r\n\t * a parameter.\r\n\t *\r\n\t * <p>The following two code examples give the same result:</p>\r\n\t *\r\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\r\n\t *              increase the horizontal dimension of the Box object.\r\n\t *              The <code>y</code> property is used to increase the vertical\r\n\t *              dimension of the Box object.\r\n\t *              The <code>z</code> property is used to increase the\r\n\t *              longitudinal dimension of the Box object.\r\n\t */\r\n\tpublic inflatePoint(delta:Vector3D):void\r\n\t{\r\n\t\tthis.x -= delta.x/2;\r\n\t\tthis.y -= delta.y/2;\r\n\t\tthis.z -= delta.z/2;\r\n\t\tthis.width += delta.x/2;\r\n\t\tthis.height += delta.y/2;\r\n\t\tthis.depth += delta.z/2;\r\n\t}\r\n\r\n\t/**\r\n\t * If the Box object specified in the <code>toIntersect</code> parameter\r\n\t * intersects with this Box object, returns the area of intersection\r\n\t * as a Box object. If the boxes do not intersect, this method returns an\r\n\t * empty Box object with its properties set to 0.\r\n\t *\r\n\t * @param toIntersect The Box object to compare against to see if it\r\n\t *                    intersects with this Box object.\r\n\t * @return A Box object that equals the area of intersection. If the\r\n\t *         boxes do not intersect, this method returns an empty Box\r\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\r\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\r\n\t *         <code>depth</code> properties set to 0.\r\n\t */\r\n\tpublic intersection(toIntersect:Box):Box\r\n\t{\r\n\t\tif (this.intersects(toIntersect)) {\r\n\t\t\tvar i:Box = new Box();\r\n\r\n\t\t\tif (this.x > toIntersect.x) {\r\n\t\t\t\ti.x = this.x;\r\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\r\n\r\n\t\t\t\tif (i.width > this.width)\r\n\t\t\t\t\ti.width = this.width;\r\n\t\t\t} else {\r\n\t\t\t\ti.x = toIntersect.x;\r\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\r\n\r\n\t\t\t\tif (i.width > toIntersect.width)\r\n\t\t\t\t\ti.width = toIntersect.width;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.y > toIntersect.y) {\r\n\t\t\t\ti.y = this.y;\r\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\r\n\r\n\t\t\t\tif (i.height > this.height)\r\n\t\t\t\t\ti.height = this.height;\r\n\t\t\t} else {\r\n\t\t\t\ti.y = toIntersect.y;\r\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\r\n\r\n\t\t\t\tif (i.height > toIntersect.height)\r\n\t\t\t\t\ti.height = toIntersect.height;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this.z > toIntersect.z) {\r\n\t\t\t\ti.z = this.z;\r\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\r\n\r\n\t\t\t\tif (i.depth > this.depth)\r\n\t\t\t\t\ti.depth = this.depth;\r\n\t\t\t} else {\r\n\t\t\t\ti.z = toIntersect.z;\r\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\r\n\r\n\t\t\t\tif (i.depth > toIntersect.depth)\r\n\t\t\t\t\ti.depth = toIntersect.depth;\r\n\t\t\t}\r\n\r\n\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn new Box();\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Box object. This method checks the\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code>, and <code>depth</code> properties of the specified\r\n\t * Box object to see if it intersects with this Box object.\r\n\t *\r\n\t * @param toIntersect The Box object to compare against this Box object.\r\n\t * @return A value of <code>true</code> if the specified object intersects\r\n\t *         with this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic intersects(toIntersect:Box):boolean\r\n\t{\r\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif (this.containsPoint(position))\r\n\t\t\treturn 0;\r\n\r\n\t\tvar halfExtentsX:number = this.width/2;\r\n\t\tvar halfExtentsY:number = this.height/2;\r\n\t\tvar halfExtentsZ:number = this.depth/2;\r\n\r\n\t\tvar centerX:number = this.x + halfExtentsX;\r\n\t\tvar centerY:number = this.y + halfExtentsY;\r\n\t\tvar centerZ:number = this.z + halfExtentsZ;\r\n\r\n\t\tvar px:number = position.x - centerX;\r\n\t\tvar py:number = position.y - centerY;\r\n\t\tvar pz:number = position.z - centerZ;\r\n\r\n\t\tvar vx:number = direction.x;\r\n\t\tvar vy:number = direction.y;\r\n\t\tvar vz:number = direction.z;\r\n\r\n\t\tvar ix:number;\r\n\t\tvar iy:number;\r\n\t\tvar iz:number;\r\n\t\tvar rayEntryDistance:number;\r\n\r\n\t\t// ray-plane tests\r\n\t\tvar intersects:boolean;\r\n\t\tif (vx < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsX - px )/vx;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 1;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vx > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsX - px )/vx;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = -1;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vy < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsY - py )/vy;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 1;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vy > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsY - py )/vy;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = -1;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vz < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsZ - pz )/vz;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 1;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vz > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsZ - pz )/vz;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = -1;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn intersects? rayEntryDistance : -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\r\n\t *\r\n\t * @param point The point for which to find the closest point on the Box\r\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\r\n\t * @return\r\n\t */\r\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\r\n\t{\r\n\t\tvar p:number;\r\n\r\n\t\tif (target == null)\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\tp = point.x;\r\n\t\tif (p < this.x)\r\n\t\t\tp = this.x;\r\n\t\tif (p > this.x + this.width)\r\n\t\t\tp = this.x + this.width;\r\n\t\ttarget.x = p;\r\n\r\n\t\tp = point.y;\r\n\t\tif (p < this.y + this.height)\r\n\t\t\tp = this.y + this.height;\r\n\t\tif (p > this.y)\r\n\t\t\tp = this.y;\r\n\t\ttarget.y = p;\r\n\r\n\t\tp = point.z;\r\n\t\tif (p < this.z)\r\n\t\t\tp = this.z;\r\n\t\tif (p > this.z + this.depth)\r\n\t\t\tp = this.z + this.depth;\r\n\t\ttarget.z = p;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not this Box object is empty.\r\n\t *\r\n\t * @return A value of <code>true</code> if the Box object's width, height or\r\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\r\n\t */\r\n\tpublic isEmpty():boolean\r\n\t{\r\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Box object, as determined by its\r\n\t * top-left-front corner, by the specified amounts.\r\n\t *\r\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\r\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\r\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\r\n\t */\r\n\tpublic offset(dx:number, dy:number, dz:number):void\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t\tthis.z += dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Box object using a Vector3D object as a\r\n\t * parameter. This method is similar to the <code>Box.offset()</code>\r\n\t * method, except that it takes a Vector3D object as a parameter.\r\n\t *\r\n\t * @param position A Vector3D object to use to offset this Box object.\r\n\t */\r\n\tpublic offsetPosition(position:Vector3D):void\r\n\t{\r\n\t\tthis.x += position.x;\r\n\t\tthis.y += position.y;\r\n\t\tthis.z += position.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\r\n\t * width, height or depth is less than or equal to 0.\r\n\t *\r\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\r\n\t * <code>depth</code> properties to 0.</p>\r\n\t *\r\n\t */\r\n\tpublic setEmpty():void\r\n\t{\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.z = 0;\r\n\t\tthis.width = 0;\r\n\t\tthis.height = 0;\r\n\t\tthis.depth = 0;\r\n\t}\r\n\r\n\tpublic setBoundIdentity():void\r\n\t{\r\n\t\tthis.x = Number.MAX_VALUE/2;\r\n\t\tthis.y = Number.MAX_VALUE/2;\r\n\t\tthis.z = Number.MAX_VALUE/2;\r\n\t\tthis.width = -Number.MAX_VALUE;\r\n\t\tthis.height = -Number.MAX_VALUE;\r\n\t\tthis.depth = -Number.MAX_VALUE;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Box to the specified values\r\n\t *\r\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param widtha  The width of the box, in pixels.\r\n\t * @param heighta The height of the box, in pixels.\r\n\t * @param deptha  The depth of the box, in pixels.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number):void\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.z = za;\r\n\t\tthis.width = widtha;\r\n\t\tthis.height = heighta;\r\n\t\tthis.depth = deptha;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds and returns a string that lists the horizontal, vertical and\r\n\t * longitudinal positions and the width, height and depth of the Box object.\r\n\t *\r\n\t * @return A string listing the value of each of the following properties of\r\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\r\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Adds two boxes together to create a new Box object, by filling\r\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\r\n\t *\r\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\r\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\r\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\r\n\t *\r\n\t * @param toUnion A Box object to add to this Box object.\r\n\t * @return A new Box object that is the union of the two boxes.\r\n\t */\r\n\tpublic union(toUnion:Box, target:Box = null):Box\r\n\t{\r\n\t\tvar width:number;\r\n\t\tvar height:number;\r\n\t\tvar depth:number;\r\n\t\tif (target == null)\r\n\t\t\ttarget = new Box();\r\n\r\n\t\tif (this.x < toUnion.x) {\r\n\t\t\twidth = toUnion.x - this.x + toUnion.width;\r\n\t\t\ttarget.x = this.x;\r\n\t\t\ttarget.width = (width < this.width)? this.width : width;\r\n\t\t} else {\r\n\t\t\twidth = this.x - toUnion.x + this.width;\r\n\t\t\ttarget.x = toUnion.x;\r\n\t\t\ttarget.width = (width < toUnion.width)? toUnion.width : width;\r\n\t\t}\r\n\r\n\t\tif (this.y < toUnion.y) {\r\n\t\t\theight = toUnion.y - this.y + toUnion.height;\r\n\t\t\ttarget.y = this.y;\r\n\t\t\ttarget.height = (height < this.height)? this.height : height;\r\n\t\t} else {\r\n\t\t\theight = this.y - toUnion.y + this.height;\r\n\t\t\ttarget.y = toUnion.y;\r\n\t\t\ttarget.height = (height < toUnion.height)? toUnion.height : height;\r\n\t\t}\r\n\r\n\t\tif (this.z < toUnion.z) {\r\n\t\t\tdepth = toUnion.z - this.z + toUnion.depth;\r\n\t\t\ttarget.z = this.z;\r\n\t\t\ttarget.depth = (depth < this.depth)? this.depth : depth;\r\n\t\t} else {\r\n\t\t\tdepth = this.z - toUnion.z + this.depth;\r\n\t\t\ttarget.z = toUnion.z;\r\n\t\t\ttarget.depth = (depth < toUnion.depth)? toUnion.depth : depth;\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\t}\r\n}",
    "import {ColorUtils}\t\t\tfrom \"../utils/ColorUtils\";\r\n\r\n/**\r\n * The ColorTransform export class lets you adjust the color values in a display\r\n * object. The color adjustment or <i>color transformation</i> can be applied\r\n * to all four channels: red, green, blue, and alpha transparency.\r\n *\r\n * <p>When a ColorTransform object is applied to a display object, a new value\r\n * for each color channel is calculated like this:</p>\r\n *\r\n * <ul>\r\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\r\n * <code>redOffset</code></li>\r\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\r\n * <code>greenOffset</code></li>\r\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\r\n * <code>blueOffset</code></li>\r\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\r\n * <code>alphaOffset</code></li>\r\n * </ul>\r\n *\r\n * <p>If any of the color channel values is greater than 255 after the\r\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\r\n *\r\n * <p>You can use ColorTransform objects in the following ways:</p>\r\n *\r\n * <ul>\r\n *   <li>In the <code>colorTransform</code> parameter of the\r\n * <code>colorTransform()</code> method of the BitmapData class</li>\r\n *   <li>As the <code>colorTransform</code> property of a Transform object\r\n * (which can be used as the <code>transform</code> property of a display\r\n * object)</li>\r\n * </ul>\r\n *\r\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\r\n * a ColorTransform object before you can call the methods of the\r\n * ColorTransform object.</p>\r\n *\r\n * <p>Color transformations do not apply to the background color of a movie\r\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\r\n * that are attached to the movie clip.</p>\r\n */\r\nexport class ColorTransform\r\n{\r\n\tpublic rawData:Float32Array = new Float32Array(8);\r\n\t\r\n\t/**\r\n\t * A decimal value that is multiplied with the alpha transparency channel\r\n\t * value.\r\n\t *\r\n\t * <p>If you set the alpha transparency value of a display object directly by\r\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\r\n\t * affects the value of the <code>alphaMultiplier</code> property of that\r\n\t * display object's <code>transform.colorTransform</code> property.</p>\r\n\t */\r\n\tpublic get alphaMultiplier():number\r\n\t{\r\n\t\treturn this.rawData[3];\r\n\t}\r\n\r\n\tpublic set alphaMultiplier(value:number)\r\n\t{\r\n\t\tthis.rawData[3] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the alpha transparency channel\r\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\r\n\t * value.\r\n\t */\r\n\tpublic get alphaOffset():number\r\n\t{\r\n\t\treturn this.rawData[7]*0xFF;\r\n\t}\r\n\r\n\tpublic set alphaOffset(value:number)\r\n\t{\r\n\t\tthis.rawData[7] = value/0xFF;\r\n\t}\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the blue channel value.\r\n\t */\r\n\tpublic get blueMultiplier():number\r\n\t{\r\n\t\treturn this.rawData[2];\r\n\t}\r\n\r\n\tpublic set blueMultiplier(value:number)\r\n\t{\r\n\t\tthis.rawData[2] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the blue channel value after it\r\n\t * has been multiplied by the <code>blueMultiplier</code> value.\r\n\t */\r\n\tpublic get blueOffset():number\r\n\t{\r\n\t\treturn this.rawData[6]*0xFF;\r\n\t}\r\n\r\n\tpublic set blueOffset(value:number)\r\n\t{\r\n\t\tthis.rawData[6] = value/0xFF;\r\n\t}\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the green channel value.\r\n\t */\r\n\tpublic get greenMultiplier():number\r\n\t{\r\n\t\treturn this.rawData[1];\r\n\t}\r\n\r\n\tpublic set greenMultiplier(value:number)\r\n\t{\r\n\t\tthis.rawData[1] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the green channel value after\r\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\r\n\t */\r\n\tpublic get greenOffset():number\r\n\t{\r\n\t\treturn this.rawData[5]*0xFF;\r\n\t}\r\n\r\n\tpublic set greenOffset(value:number)\r\n\t{\r\n\t\tthis.rawData[5] = value/0xFF;\r\n\t}\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the red channel value.\r\n\t */\r\n\tpublic get redMultiplier():number\r\n\t{\r\n\t\treturn this.rawData[0];\r\n\t}\r\n\r\n\tpublic set redMultiplier(value:number)\r\n\t{\r\n\t\tthis.rawData[0] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the red channel value after it\r\n\t * has been multiplied by the <code>redMultiplier</code> value.\r\n\t */\r\n\tpublic get redOffset():number\r\n\t{\r\n\t\treturn this.rawData[4]*0xFF;\r\n\t}\r\n\r\n\tpublic set redOffset(value:number)\r\n\t{\r\n\t\tthis.rawData[4] = value/0xFF;\r\n\t}\r\n\r\n\t/**\r\n\t * The RGB color value for a ColorTransform object.\r\n\t *\r\n\t * <p>When you set this property, it changes the three color offset values\r\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\r\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\r\n\t * multiplier values(<code>redMultiplier</code>,\r\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\r\n\t * alpha transparency multiplier and offset values do not change.</p>\r\n\t *\r\n\t * <p>When you pass a value for this property, use the format\r\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\r\n\t * hexadecimal digits that specify the offset of each color component. The 0x\r\n\t * tells the ActionScript compiler that the number is a hexadecimal\r\n\t * value.</p>\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn((this.rawData[0] << 16) | ( this.rawData[1] << 8) | this.rawData[2]);\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\r\n\r\n\t\tthis.rawData[4] = argb[1];  //(value >> 16) & 0xFF;\r\n\t\tthis.rawData[5] = argb[2];  //(value >> 8) & 0xFF;\r\n\t\tthis.rawData[6] = argb[3];  //value & 0xFF;\r\n\r\n\t\tthis.rawData[0] = 0;\r\n\t\tthis.rawData[1] = 0;\r\n\t\tthis.rawData[2] = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a ColorTransform object for a display object with the specified\r\n\t * color channel values and alpha values.\r\n\t *\r\n\t * @param redMultiplier   The value for the red multiplier, in the range from\r\n\t *                        0 to 1.\r\n\t * @param greenMultiplier The value for the green multiplier, in the range\r\n\t *                        from 0 to 1.\r\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\r\n\t *                        from 0 to 1.\r\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\r\n\t *                        the range from 0 to 1.\r\n\t * @param redOffset       The offset value for the red color channel, in the\r\n\t *                        range from -255 to 255.\r\n\t * @param greenOffset     The offset value for the green color channel, in\r\n\t *                        the range from -255 to 255.\r\n\t * @param blueOffset      The offset for the blue color channel value, in the\r\n\t *                        range from -255 to 255.\r\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\r\n\t *                        the range from -255 to 255.\r\n\t */\r\n\tconstructor(rawData:Float32Array);\r\n\tconstructor(redMultiplier?:number, greenMultiplier?:number, blueMultiplier?:number, alphaMultiplier?:number, redOffset?:number, greenOffset?:number, blueOffset?:number, alphaOffset?:number);\r\n\tconstructor(redMultiplier:number | Float32Array = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\r\n\t{\r\n\t\tif (redMultiplier instanceof Float32Array) {\r\n\t\t\tthis.copyRawDataFrom(redMultiplier);\r\n\t\t} else {\r\n\t\t\tthis.redMultiplier = Number(redMultiplier);\r\n\t\t\tthis.greenMultiplier = greenMultiplier;\r\n\t\t\tthis.blueMultiplier = blueMultiplier;\r\n\t\t\tthis.alphaMultiplier = alphaMultiplier;\r\n\t\t\tthis.redOffset = redOffset;\r\n\t\t\tthis.greenOffset = greenOffset;\r\n\t\t\tthis.blueOffset = blueOffset;\r\n\t\t\tthis.alphaOffset = alphaOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic copyRawDataFrom(vector:Float32Array, index:number = 0):void\r\n\t{\r\n\t\tfor (var c:number = 0; c < 8; c++)\r\n\t\t\tthis.rawData[c] = vector[c + index];\r\n\t}\r\n\r\n    public clear()\r\n    {\r\n        this.rawData[0] = 1;\r\n        this.rawData[1] = 1;\r\n        this.rawData[2] = 1;\r\n        this.rawData[3] = 1;\r\n        this.rawData[4] = 0;\r\n        this.rawData[5] = 0;\r\n        this.rawData[6] = 0;\r\n        this.rawData[7] = 0;\r\n    }\r\n\r\n    public clone():ColorTransform\r\n    {\r\n        return new ColorTransform(this.rawData);\r\n    }\r\n\r\n    public copyFrom(source:ColorTransform)\r\n    {\r\n\t\tfor (var c:number = 0; c < 8; c++)\r\n\t\t\tthis.rawData[c] = source.rawData[c];\r\n    }\r\n\r\n    public copyTo(destination:ColorTransform)\r\n    {\r\n        destination.copyFrom(this);\r\n    }\r\n\r\n    public prepend(ct:ColorTransform)\r\n    {\r\n        this.rawData[4] += ct.rawData[4] * this.rawData[0];\r\n        this.rawData[5] += ct.rawData[5] * this.rawData[1];\r\n        this.rawData[6] += ct.rawData[6] * this.rawData[2];\r\n        this.rawData[7] += ct.rawData[7] * this.rawData[3];\r\n\r\n        this.redMultiplier *= ct.redMultiplier;\r\n        this.greenMultiplier *= ct.greenMultiplier;\r\n        this.blueMultiplier *= ct.blueMultiplier;\r\n        this.alphaMultiplier *= ct.alphaMultiplier;\r\n    }\r\n\t\r\n\tpublic _isRenderable():boolean\r\n\t{\r\n\t\treturn this.rawData[3] != 0 || this.rawData[7] > 0;\r\n\t}\r\n}",
    "/**\r\n* MathConsts provides some commonly used mathematical constants\r\n*/\r\nexport class MathConsts\r\n{\r\n\t/**\r\n\t * The amount to multiply with when converting radians to degrees.\r\n\t */\r\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\r\n\r\n\t/**\r\n\t * The amount to multiply with when converting degrees to radians.\r\n\t */\r\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\r\n}",
    "import {Quaternion}\t\t\t\tfrom \"../geom/Quaternion\";\r\nimport {Matrix3D}\t\t\t\t\tfrom \"../geom/Matrix3D\";\r\nimport {Plane3D}\t\t\t\t\tfrom \"../geom/Plane3D\";\r\nimport {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\r\n\r\n\r\n/**\r\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\r\n */\r\nexport class Matrix3DUtils\r\n{\r\n\t/**\r\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\r\n\t */\r\n\tpublic static RAW_DATA_CONTAINER:Float32Array = new Float32Array(16);\r\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\r\n\r\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\r\n\r\n\t/**\r\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\r\n\t *\r\n\t * @param    quarternion    The quarterion object to convert.\r\n\t */\r\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar x:number = quarternion.x;\r\n\t\tvar y:number = quarternion.y;\r\n\t\tvar z:number = quarternion.z;\r\n\t\tvar w:number = quarternion.w;\r\n\r\n\t\tvar xx:number = x*x;\r\n\t\tvar xy:number = x*y;\r\n\t\tvar xz:number = x*z;\r\n\t\tvar xw:number = x*w;\r\n\r\n\t\tvar yy:number = y*y;\r\n\t\tvar yz:number = y*z;\r\n\t\tvar yw:number = y*w;\r\n\r\n\t\tvar zz:number = z*z;\r\n\t\tvar zw:number = z*w;\r\n\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\traw[0] = 1 - 2*(yy + zz);\r\n\t\traw[1] = 2*(xy + zw);\r\n\t\traw[2] = 2*(xz - yw);\r\n\t\traw[4] = 2*(xy - zw);\r\n\t\traw[5] = 1 - 2*(xx + zz);\r\n\t\traw[6] = 2*(yz + xw);\r\n\t\traw[8] = 2*(xz + yw);\r\n\t\traw[9] = 2*(yz - xw);\r\n\t\traw[10] = 1 - 2*(xx + yy);\r\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (m) {\r\n\t\t\tm.copyRawDataFrom(raw);\r\n\t\t\treturn m;\r\n\t\t} else\r\n\t\t\treturn new Matrix3D(raw);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the forward vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The forward vector\r\n\t */\r\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (v === null)\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\tm.copyColumnTo(2, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the up vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The up vector\r\n\t */\r\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (v === null)\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\tm.copyColumnTo(1, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the right vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The right vector\r\n\t */\r\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\r\n\t\tif (v === null) {\r\n\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\t}\r\n\r\n\t\tm.copyColumnTo(0, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\r\n\t */\r\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\r\n\t{\r\n\t\tvar r1:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar r2:Float32Array = m2.rawData;\r\n\t\tm1.copyRawDataTo(r1);\r\n\r\n\t\tfor (var i:number = 0; i < 16; ++i) {\r\n\t\t\tif (r1[i] != r2[i])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D):void\r\n\t{\r\n\t\tvar dirN:Vector3D;\r\n\t\tvar upN:Vector3D;\r\n\t\tvar lftN:Vector3D;\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tlftN = dir.crossProduct(up);\r\n\t\tlftN.normalize();\r\n\r\n\t\tupN = lftN.crossProduct(dir);\r\n\t\tupN.normalize();\r\n\t\tdirN = dir.clone();\r\n\t\tdirN.normalize();\r\n\r\n\t\traw[0] = lftN.x;\r\n\t\traw[1] = upN.x;\r\n\t\traw[2] = -dirN.x;\r\n\t\traw[3] = 0.0;\r\n\r\n\t\traw[4] = lftN.y;\r\n\t\traw[5] = upN.y;\r\n\t\traw[6] = -dirN.y;\r\n\t\traw[7] = 0.0;\r\n\r\n\t\traw[8] = lftN.z;\r\n\t\traw[9] = upN.z;\r\n\t\traw[10] = -dirN.z;\r\n\t\traw[11] = 0.0;\r\n\r\n\t\traw[12] = -lftN.dotProduct(pos);\r\n\t\traw[13] = -upN.dotProduct(pos);\r\n\t\traw[14] = dirN.dotProduct(pos);\r\n\t\traw[15] = 1.0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n\r\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tif (target === null)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\r\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar ab2:number = -2*a*b;\r\n\t\tvar ac2:number = -2*a*c;\r\n\t\tvar bc2:number = -2*b*c;\r\n\t\t// reflection matrix\r\n\t\trawData[0] = 1 - 2*a*a;\r\n\t\trawData[4] = ab2;\r\n\t\trawData[8] = ac2;\r\n\t\trawData[12] = -2*a*d;\r\n\t\trawData[1] = ab2;\r\n\t\trawData[5] = 1 - 2*b*b;\r\n\t\trawData[9] = bc2;\r\n\t\trawData[13] = -2*b*d;\r\n\t\trawData[2] = ac2;\r\n\t\trawData[6] = bc2;\r\n\t\trawData[10] = 1 - 2*c*c;\r\n\t\trawData[14] = -2*c*d;\r\n\t\trawData[3] = 0;\r\n\t\trawData[7] = 0;\r\n\t\trawData[11] = 0;\r\n\t\trawData[15] = 1;\r\n\t\ttarget.copyRawDataFrom(rawData);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\r\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar d:number = raw[12];\r\n\t\tvar h:number = raw[13];\r\n\t\tvar l:number = raw[14];\r\n\t\tvar p:number = raw[15];\r\n\r\n\t\tvar x:number = vector.x;\r\n\t\tvar y:number = vector.y;\r\n\t\tvar z:number = vector.z;\r\n\t\tresult.x = a * x + b * y + c * z + d;\r\n\t\tresult.y = e * x + f * y + g * z + h;\r\n\t\tresult.z = i * x + j * y + k * z + l;\r\n\t\tresult.w = m * x + n * y + o * z + p;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar x:number = vector.x;\r\n\t\tvar y:number = vector.y;\r\n\t\tvar z:number = vector.z;\r\n\t\tresult.x = a * x + b * y + c * z;\r\n\t\tresult.y = e * x + f * y + g * z;\r\n\t\tresult.z = i * x + j * y + k * z;\r\n\t\tresult.w = m * x + n * y + o * z;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif(!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\ttransform.copyColumnTo(3, result);\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>):void\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar outIndex:number = 0;\r\n\t\tvar length:number = vin.length;\r\n\t\tfor(var index:number = 0; index<length; index+=3) {\r\n\t\t\tvar x:number = vin[index];\r\n\t\t\tvar y:number = vin[index+1];\r\n\t\t\tvar z:number = vin[index+2];\r\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\r\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\r\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\r\n\t\t}\r\n\t}\r\n}",
    "import {Box}\t\t\t\t\t\t\tfrom \"../geom/Box\";\r\nimport {MathConsts}\t\t\t\t\tfrom \"../geom/MathConsts\";\r\nimport {Orientation3D}\t\t\t\tfrom \"../geom/Orientation3D\";\r\nimport {Quaternion}\t\t\t\t\tfrom \"../geom/Quaternion\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"../geom/Vector3D\";\r\nimport {ArgumentError}\t\t\t\tfrom \"../errors/ArgumentError\";\r\n\r\nexport class Matrix3D\r\n{\r\n\t/**\r\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\r\n\t *\r\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\r\n\t * object must be invertible. If a non-invertible matrix is needed, create a subexport class of the Matrix3D object.</p>\r\n\t */\r\n\tpublic rawData:Float32Array = new Float32Array(16);\r\n\r\n\tprivate static tempMatrix:Matrix3D = new Matrix3D();\r\n\tprivate static tempRawData:Float32Array = Matrix3D.tempMatrix.rawData;\r\n\r\n\tprivate _position:Vector3D = new Vector3D();\r\n\tprivate _positionDirty:boolean = true;\r\n\r\n\tprivate _components:Array<Vector3D>;\r\n\r\n\t/**\r\n\t * Creates a Matrix3D object.\r\n\t */\r\n\tconstructor(v:Float32Array = null)\r\n\t{\r\n\t\tif (v != null && v.length == 16) {\r\n\t\t\tthis.copyRawDataFrom(v);\r\n\t\t} else {\r\n\t\t\tthis.identity();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\r\n\t */\r\n\tpublic append(lhs:Matrix3D):void\r\n\t{\r\n\t\tvar lrd:Float32Array = lhs.rawData;\r\n\r\n\t\tvar m111:number = this.rawData[0];\r\n\t\tvar m112:number = this.rawData[1];\r\n\t\tvar m113:number = this.rawData[2];\r\n\t\tvar m114:number = this.rawData[3];\r\n\t\tvar m121:number = this.rawData[4];\r\n\t\tvar m122:number = this.rawData[5];\r\n\t\tvar m123:number = this.rawData[6];\r\n\t\tvar m124:number = this.rawData[7];\r\n\t\tvar m131:number = this.rawData[8];\r\n\t\tvar m132:number = this.rawData[9];\r\n\t\tvar m133:number = this.rawData[10];\r\n\t\tvar m134:number = this.rawData[11];\r\n\t\tvar m141:number = this.rawData[12];\r\n\t\tvar m142:number = this.rawData[13];\r\n\t\tvar m143:number = this.rawData[14];\r\n\t\tvar m144:number = this.rawData[15];\r\n\t\tvar m211:number = lrd[0];\r\n\t\tvar m212:number = lrd[1];\r\n\t\tvar m213:number = lrd[2];\r\n\t\tvar m214:number = lrd[3];\r\n\t\tvar m221:number = lrd[4];\r\n\t\tvar m222:number = lrd[5];\r\n\t\tvar m223:number = lrd[6];\r\n\t\tvar m224:number = lrd[7];\r\n\t\tvar m231:number = lrd[8];\r\n\t\tvar m232:number = lrd[9];\r\n\t\tvar m233:number = lrd[10];\r\n\t\tvar m234:number = lrd[11];\r\n\t\tvar m241:number = lrd[12];\r\n\t\tvar m242:number = lrd[13];\r\n\t\tvar m243:number = lrd[14];\r\n\t\tvar m244:number = lrd[15];\r\n\r\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\r\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\r\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\r\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\r\n\r\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\r\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\r\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\r\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\r\n\r\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\r\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\r\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\r\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\r\n\r\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\r\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\r\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\r\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\r\n\r\n\t\tthis._positionDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental rotation to a Matrix3D object.\r\n\t */\r\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null ):void\r\n\t{\r\n\t\tthis.append(Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees));\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental skew change along the x, y, and z axes to a Matrix3D object.\r\n\t */\r\n\tpublic appendSkew(xSkew:number, ySkew:number, zSkew:number):void\r\n\t{\r\n\t\tif(xSkew == 0 && ySkew == 0 && zSkew == 0) return;\r\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\r\n\t\traw[0] = 1;\r\n\t\traw[1] = 0;\r\n\t\traw[2] = 0;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = xSkew;\r\n\t\traw[5] = 1;\r\n\t\traw[6] = 0;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = ySkew;\r\n\t\traw[9] = zSkew;\r\n\t\traw[10] = 1;\r\n\t\traw[11] = 0;\r\n\r\n\t\traw[12] = 0;\r\n\t\traw[13] = 0;\r\n\t\traw[14] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tthis.append(Matrix3D.tempMatrix);\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\r\n\t */\r\n\tpublic appendScale(xScale:number, yScale:number, zScale:number):void\r\n\t{\r\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\r\n\t\t\treturn;\r\n\r\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\r\n\r\n\t\traw[0] = xScale;\r\n\t\traw[1] = 0;\r\n\t\traw[2] = 0;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = 0;\r\n\t\traw[5] = yScale;\r\n\t\traw[6] = 0;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = 0;\r\n\t\traw[9] = 0;\r\n\t\traw[10] = zScale;\r\n\t\traw[11] = 0;\r\n\r\n\t\traw[12] = 0;\r\n\t\traw[13] = 0;\r\n\t\traw[14] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tthis.append(Matrix3D.tempMatrix);\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\r\n\t */\r\n\tpublic appendTranslation(x:number, y:number, z:number):void\r\n\t{\r\n\t\tthis.rawData[12] += x;\r\n\t\tthis.rawData[13] += y;\r\n\t\tthis.rawData[14] += z;\r\n\r\n\t\tthis._positionDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\r\n\t */\r\n\tpublic clone():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.rawData);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\r\n\t */\r\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tswitch (column) {\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\r\n\t */\r\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tswitch (column) {\r\n\t\t\tcase 0:\r\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\r\n\t */\r\n\tpublic copyFrom(source:Matrix3D):void\r\n\t{\r\n\t\tvar sourceRaw:Float32Array = source.rawData;\r\n\t\tvar len:number = sourceRaw.length;\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tthis.rawData[c] = sourceRaw[c];\r\n\t}\r\n\r\n\t/**\r\n\t * Copies this Matrix3D object into a destination Matrix3D object.\r\n\t */\r\n\tpublic copyTo(target:Matrix3D):void\r\n\t{\r\n\t\tvar targetRaw:Float32Array = target.rawData;\r\n\t\tvar len:number = this.rawData.length;\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\ttargetRaw[c] = this.rawData[c];\r\n\t}\r\n\r\n\tpublic copyRawDataFrom(vector:Float32Array, index:number = 0, transpose:boolean = false):void\r\n\t{\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\r\n\t\tvar len:number = vector.length - index;\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tthis.rawData[c] = vector[c + index];\r\n\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\t}\r\n\r\n\tpublic copyRawDataTo(vector:Float32Array, index:number = 0, transpose:boolean = false):void\r\n\t{\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\r\n\t\tvar len:number = this.rawData.length;\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tvector[c + index ] = this.rawData[c];\r\n\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\r\n\t */\r\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tswitch (row) {\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\r\n\t */\r\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tswitch (row) {\r\n\t\t\tcase 0:\r\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\r\n\t */\r\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\r\n\t{\r\n\t\tvar q:Quaternion;\r\n\r\n\t\tif (this._components == null)\r\n\t\t\tthis._components = [null, new Vector3D(), new Vector3D(), new Vector3D()];\r\n\r\n\t\tvar colX:Vector3D = new Vector3D(this.rawData[0], this.rawData[1], this.rawData[2]);\r\n\t\tvar colY:Vector3D = new Vector3D(this.rawData[4], this.rawData[5], this.rawData[6]);\r\n\t\tvar colZ:Vector3D = new Vector3D(this.rawData[8], this.rawData[9], this.rawData[10]);\r\n\r\n\t\tvar scale:Vector3D = this._components[3];\r\n\t\tvar skew:Vector3D = this._components[2];\r\n\r\n\t\t//compute X scale factor and normalise colX\r\n\t\tscale.x = colX.length;\r\n\t\tcolX.scaleBy(1/scale.x);\r\n\r\n\t\t//compute XY shear factor and make colY orthogonal to colX\r\n\t\tskew.x = colX.dotProduct(colY);\r\n\t\tcolY = Vector3D.combine(colY, colX, 1, -skew.x);\r\n\r\n\t\t//compute Y scale factor and normalise colY\r\n\t\tscale.y = colY.length;\r\n\t\tcolY.scaleBy(1/scale.y);\r\n\t\tskew.x /= scale.y;\r\n\r\n\t\t//compute XZ and YZ shears and make colZ orthogonal to colX and colY\r\n\t\tskew.y = colX.dotProduct(colZ);\r\n\t\tcolZ = Vector3D.combine(colZ, colX, 1, -skew.y);\r\n\t\tskew.z = colY.dotProduct(colZ);\r\n\t\tcolZ = Vector3D.combine(colZ, colY, 1, -skew.z);\r\n\r\n\t\t//compute Z scale and normalise colZ\r\n\t\tscale.z = colZ.length;\r\n\t\tcolZ.scaleBy(1/scale.z);\r\n\t\tskew.y /= scale.z;\r\n\t\tskew.z /= scale.z;\r\n\r\n\t\t//at this point, the matrix (in cols) is orthonormal\r\n\t\t//check for a coordinate system flip. If the determinant is -1, negate the z scaling factor\r\n\t\tif (colX.dotProduct(colY.crossProduct(colZ)) < 0) {\r\n\t\t\tscale.z = -scale.z;\r\n\t\t\tcolZ.x = -colZ.x;\r\n\t\t\tcolZ.y = -colZ.y;\r\n\t\t\tcolZ.z = -colZ.z;\r\n\t\t}\r\n\r\n\t\tvar rot = this._components[1];\r\n\r\n\t\tswitch (orientationStyle) {\r\n\t\t\tcase Orientation3D.AXIS_ANGLE:\r\n\r\n\t\t\t\trot.w = Math.acos((colX.x + colY.y + colZ.z - 1)/2);\r\n\r\n\t\t\t\tvar len:number = Math.sqrt((colY.z - colZ.y)*(colY.z - colZ.y) + (colZ.x - colX.z)*(colZ.x - colX.z) + (colX.y - colY.x)*(colX.y - colY.x));\r\n\t\t\t\trot.x = (colY.z - colZ.y)/len;\r\n\t\t\t\trot.y = (colZ.x - colX.z)/len;\r\n\t\t\t\trot.z = (colX.y - colY.x)/len;\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase Orientation3D.QUATERNION:\r\n\r\n\t\t\t\tvar tr = colX.x + colY.y + colZ.z;\r\n\r\n\t\t\t\tif (tr > 0) {\r\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\r\n\r\n\t\t\t\t\trot.x = (colY.z - colZ.y)/(4*rot.w);\r\n\t\t\t\t\trot.y = (colZ.x - colX.z)/(4*rot.w);\r\n\t\t\t\t\trot.z = (colX.y - colY.x)/(4*rot.w);\r\n\t\t\t\t} else if ((colX.x > colY.y) && (colX.x > colZ.z)) {\r\n\t\t\t\t\trot.x = Math.sqrt(1 + colX.x - colY.y - colZ.z)/2;\r\n\r\n\t\t\t\t\trot.w = (colY.z - colZ.y)/(4*rot.x);\r\n\t\t\t\t\trot.y = (colX.y + colY.x)/(4*rot.x);\r\n\t\t\t\t\trot.z = (colZ.x + colX.z)/(4*rot.x);\r\n\t\t\t\t} else if (colY.y > colZ.z) {\r\n\t\t\t\t\trot.y = Math.sqrt(1 + colY.y - colX.x - colZ.z)/2;\r\n\r\n\t\t\t\t\trot.x = (colX.y + colY.x)/(4*rot.y);\r\n\t\t\t\t\trot.w = (colZ.x - colX.z)/(4*rot.y);\r\n\t\t\t\t\trot.z = (colY.z + colZ.y)/(4*rot.y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trot.z = Math.sqrt(1 + colZ.z - colX.x - colY.y)/2;\r\n\r\n\t\t\t\t\trot.x = (colZ.x + colX.z)/(4*rot.z);\r\n\t\t\t\t\trot.y = (colY.z + colZ.y)/(4*rot.z);\r\n\t\t\t\t\trot.w = (colX.y - colY.x)/(4*rot.z);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase Orientation3D.EULER_ANGLES:\r\n\r\n\t\t\t\trot.y = Math.asin(-colX.z);\r\n\r\n\t\t\t\t//var cos:number = Math.cos(rot.y);\r\n\r\n\t\t\t\tif (colX.z != 1 && colX.z != -1) {\r\n\t\t\t\t\trot.x = Math.atan2(colY.z, colZ.z);\r\n\t\t\t\t\trot.z = Math.atan2(colX.y, colX.x);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trot.z = 0;\r\n\t\t\t\t\trot.x = Math.atan2(colY.x, colY.y);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis._components[0] = this.position;\r\n\r\n\t\treturn this._components;\r\n\t}\r\n\r\n\t/**\r\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\r\n\t * coordinate to another.\r\n\t */\r\n\tpublic deltaTransformVector(v:Vector3D, t:Vector3D = null):Vector3D\r\n\t{\r\n\t\tvar x:number = v.x;\r\n\t\tvar y:number = v.y;\r\n\t\tvar z:number = v.z;\r\n\r\n\t\tif (!t)\r\n\t\t\tt = new Vector3D();\r\n\r\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8];\r\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9];\r\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10];\r\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11];\r\n\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the current matrix to an identity or unit matrix.\r\n\t */\r\n\tpublic identity():void\r\n\t{\r\n\t\tthis.rawData[0] = 1;\r\n\t\tthis.rawData[1] = 0;\r\n\t\tthis.rawData[2] = 0;\r\n\t\tthis.rawData[3] = 0;\r\n\t\tthis.rawData[4] = 0;\r\n\t\tthis.rawData[5] = 1;\r\n\t\tthis.rawData[6] = 0;\r\n\t\tthis.rawData[7] = 0;\r\n\t\tthis.rawData[8] = 0;\r\n\t\tthis.rawData[9] = 0;\r\n\t\tthis.rawData[10] = 1;\r\n\t\tthis.rawData[11] = 0;\r\n\t\tthis.rawData[12] = 0;\r\n\t\tthis.rawData[13] = 0;\r\n\t\tthis.rawData[14] = 0;\r\n\t\tthis.rawData[15] = 1;\r\n\r\n\t\tthis._positionDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\r\n\t */\r\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tfor (var i:number = 0; i < 16; ++i)\r\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\r\n\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\r\n\t */\r\n\tpublic interpolateTo(toMat:Matrix3D, percent:number):void\r\n\t{\r\n\t\tfor (var i:number = 0; i < 16; ++i)\r\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts the current matrix.\r\n\t */\r\n\tpublic invert():boolean\r\n\t{\r\n\t\tvar d = this.determinant;\r\n\t\tvar invertable:boolean = Math.abs(d) > 0.00000000001;\r\n\r\n\t\tif (invertable) {\r\n\t\t\td = 1/d;\r\n\t\t\tvar m11:number = this.rawData[0];\r\n\t\t\tvar m12:number = this.rawData[1];\r\n\t\t\tvar m13:number = this.rawData[2];\r\n\t\t\tvar m14:number = this.rawData[3];\r\n\t\t\tvar m21:number = this.rawData[4];\r\n\t\t\tvar m22:number = this.rawData[5];\r\n\t\t\tvar m23:number = this.rawData[6];\r\n\t\t\tvar m24:number = this.rawData[7];\r\n\t\t\tvar m31:number = this.rawData[8];\r\n\t\t\tvar m32:number = this.rawData[9];\r\n\t\t\tvar m33:number = this.rawData[10];\r\n\t\t\tvar m34:number = this.rawData[11];\r\n\t\t\tvar m41:number = this.rawData[12];\r\n\t\t\tvar m42:number = this.rawData[13];\r\n\t\t\tvar m43:number = this.rawData[14];\r\n\t\t\tvar m44:number = this.rawData[15];\r\n\r\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\r\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\r\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\r\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\r\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\r\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\r\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\r\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\r\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\r\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\r\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\r\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\r\n\t\t}\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\treturn invertable;\r\n\t}\r\n\r\n\t/* TODO implement pointAt\r\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\r\n\t {\r\n\t }\r\n\t */\r\n\r\n\t/**\r\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\r\n\t */\r\n\tpublic prepend(rhs:Matrix3D):void\r\n\t{\r\n\t\tvar m111:number = rhs.rawData[0];\r\n\t\tvar m112:number = rhs.rawData[1];\r\n\t\tvar m113:number = rhs.rawData[2];\r\n\t\tvar m114:number = rhs.rawData[3];\r\n\t\tvar m121:number = rhs.rawData[4];\r\n\t\tvar m122:number = rhs.rawData[5];\r\n\t\tvar m123:number = rhs.rawData[6];\r\n\t\tvar m124:number = rhs.rawData[7];\r\n\t\tvar m131:number = rhs.rawData[8];\r\n\t\tvar m132:number = rhs.rawData[9];\r\n\t\tvar m133:number = rhs.rawData[10];\r\n\t\tvar m134:number = rhs.rawData[11];\r\n\t\tvar m141:number = rhs.rawData[12];\r\n\t\tvar m142:number = rhs.rawData[13];\r\n\t\tvar m143:number = rhs.rawData[14];\r\n\t\tvar m144:number = rhs.rawData[15];\r\n\r\n\t\tvar m211:number = this.rawData[0];\r\n\t\tvar m212:number = this.rawData[1];\r\n\t\tvar m213:number = this.rawData[2];\r\n\t\tvar m214:number = this.rawData[3];\r\n\t\tvar m221:number = this.rawData[4];\r\n\t\tvar m222:number = this.rawData[5];\r\n\t\tvar m223:number = this.rawData[6];\r\n\t\tvar m224:number = this.rawData[7];\r\n\t\tvar m231:number = this.rawData[8];\r\n\t\tvar m232:number = this.rawData[9];\r\n\t\tvar m233:number = this.rawData[10];\r\n\t\tvar m234:number = this.rawData[11];\r\n\t\tvar m241:number = this.rawData[12];\r\n\t\tvar m242:number = this.rawData[13];\r\n\t\tvar m243:number = this.rawData[14];\r\n\t\tvar m244:number = this.rawData[15];\r\n\r\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\r\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\r\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\r\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\r\n\r\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\r\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\r\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\r\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\r\n\r\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\r\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\r\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\r\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\r\n\r\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\r\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\r\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\r\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\r\n\r\n\t\tthis._positionDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental rotation to a Matrix3D object.\r\n\t */\r\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null ):void\r\n\t{\r\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\r\n\r\n\t\t/*\r\n\t\t if ( pivot != null )\r\n\t\t {\r\n\t\t var p:Vector3D = pivot;\r\n\t\t m.appendTranslation( p.x, p.y, p.z );\r\n\t\t }\r\n\t\t */\r\n\t\tthis.prepend(m);\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\r\n\t */\r\n\tpublic prependScale(xScale:number, yScale:number, zScale:number):void\r\n\t{\r\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\r\n\t\t\treturn;\r\n\r\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\r\n\r\n\t\traw[0] = xScale;\r\n\t\traw[1] = 0;\r\n\t\traw[2] = 0;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = 0;\r\n\t\traw[5] = yScale;\r\n\t\traw[6] = 0;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = 0;\r\n\t\traw[9] = 0;\r\n\t\traw[10] = zScale;\r\n\t\traw[11] = 0;\r\n\r\n\t\traw[12] = 0;\r\n\t\traw[13] = 0;\r\n\t\traw[14] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tthis.prepend(Matrix3D.tempMatrix);\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\r\n\t */\r\n\tpublic prependTranslation(x:number, y:number, z:number):void\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\r\n\r\n\t\traw[0] = 1;\r\n\t\traw[1] = 0;\r\n\t\traw[2] = 0;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = 0;\r\n\t\traw[5] = 1;\r\n\t\traw[6] = 0;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = 0;\r\n\t\traw[9] = 0;\r\n\t\traw[10] = 1;\r\n\t\traw[11] = 0;\r\n\r\n\t\traw[12] = x;\r\n\t\traw[13] = y;\r\n\t\traw[14] = z;\r\n\t\traw[15] = 1;\r\n\r\n\t\tthis.prepend(Matrix3D.tempMatrix);\r\n\t}\r\n\r\n\t// TODO orientationStyle\r\n\t/**\r\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\r\n\t */\r\n\tpublic recompose(components:Vector3D[]):boolean\r\n\t{\r\n\t\tvar pos:Vector3D = components[0] || this.position;\r\n\r\n\t\tthis.identity();\r\n\t\tvar scale:Vector3D = components[3];\r\n\t\tif(scale && (scale.x != 1 || scale.y != 1 || scale.z != 1))\r\n\t\t\tthis.appendScale(scale.x, scale.y, scale.z);\r\n\r\n\t\tvar skew:Vector3D = components[2];\r\n\t\tif(skew && (skew.x !=0 || skew.y != 0 || skew.z != 0))\r\n\t\t\tthis.appendSkew(skew.x, skew.y, skew.z);\r\n\r\n\t\tvar sin:number;\r\n\t\tvar cos:number;\r\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\r\n\t\traw[12] = 0;\r\n\t\traw[13] = 0;\r\n\t\traw[14] = 0;\r\n\t\traw[15] = 0;\r\n\r\n\t\tvar rotation:Vector3D = components[1];\r\n\t\tif (rotation) {\r\n\t\t\tvar angle:number = -rotation.x;\r\n\t\t\tif(angle != 0){\r\n\t\t\t\tsin = Math.sin(angle);\r\n\t\t\t\tcos = Math.cos(angle);\r\n\r\n\t\t\t\traw[0] = 1;\r\n\t\t\t\traw[1] = 0;\r\n\t\t\t\traw[2] = 0;\r\n\t\t\t\traw[3] = 0;\r\n\r\n\t\t\t\traw[4] = 0;\r\n\t\t\t\traw[5] = cos;\r\n\t\t\t\traw[6] = -sin;\r\n\t\t\t\traw[7] = 0;\r\n\r\n\t\t\t\traw[8] = 0;\r\n\t\t\t\traw[9] = sin;\r\n\t\t\t\traw[10] = cos;\r\n\t\t\t\traw[11] = 0;\r\n\r\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\r\n\t\t\t}\r\n\t\t\tangle = -rotation.y;\r\n\t\t\tif(angle != 0){\r\n\t\t\t\tsin = Math.sin(angle);\r\n\t\t\t\tcos = Math.cos(angle);\r\n\r\n\t\t\t\traw[0] = cos;\r\n\t\t\t\traw[1] = 0;\r\n\t\t\t\traw[2] = sin;\r\n\t\t\t\traw[3] = 0;\r\n\r\n\t\t\t\traw[4] = 0;\r\n\t\t\t\traw[5] = 1;\r\n\t\t\t\traw[6] = 0;\r\n\t\t\t\traw[7] = 0;\r\n\r\n\t\t\t\traw[8] = -sin;\r\n\t\t\t\traw[9] = 0;\r\n\t\t\t\traw[10] = cos;\r\n\t\t\t\traw[11] = 0;\r\n\r\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\r\n\t\t\t}\r\n\t\t\tangle = -rotation.z;\r\n\t\t\tif(angle != 0){\r\n\t\t\t\tsin = Math.sin(angle);\r\n\t\t\t\tcos = Math.cos(angle);\r\n\r\n\t\t\t\traw[0] = cos;\r\n\t\t\t\traw[1] = -sin;\r\n\t\t\t\traw[2] = 0;\r\n\t\t\t\traw[3] = 0;\r\n\r\n\t\t\t\traw[4] = sin;\r\n\t\t\t\traw[5] = cos;\r\n\t\t\t\traw[6] = 0;\r\n\t\t\t\traw[7] = 0;\r\n\r\n\t\t\t\traw[8] = 0;\r\n\t\t\t\traw[9] = 0;\r\n\t\t\t\traw[10] = 1;\r\n\t\t\t\traw[11] = 0;\r\n\r\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.rawData[12] = pos.x;\r\n\t\tthis.rawData[13] = pos.y;\r\n\t\tthis.rawData[14] = pos.z;\r\n\r\n\t\tif (components[0])\r\n\t\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.rawData[15] = 1;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic transformVector(v:Vector3D, t:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (v == null)\r\n\t\t\treturn t || new Vector3D();\r\n\r\n\t\tvar x:number = v.x;\r\n\t\tvar y:number = v.y;\r\n\t\tvar z:number = v.z;\r\n\r\n\t\tif (!t)\r\n\t\t\tt = new Vector3D();\r\n\r\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\r\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\r\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\r\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15];\r\n\r\n\t\treturn t;\r\n\t}\r\n\r\n\tpublic transformBox(b:Box, t:Box = null):Box\r\n\t{\r\n\t\tif (b == null)\r\n\t\t\treturn t || new Box();\r\n\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tmaxX = b.width + (minX = b.x);\r\n\t\tmaxY = b.height + (minY = b.y);\r\n\t\tmaxZ = b.depth + (minZ = b.z);\r\n\r\n\t\tif (!t)\r\n\t\t\tt = new Box();\r\n\r\n\t\t//TODO: take account of shear\r\n\t\tt.width = maxX*this.rawData[0] + maxY*this.rawData[4] + maxZ*this.rawData[8] + this.rawData[12] - (t.x = minX*this.rawData[0] + minY*this.rawData[4] + minZ*this.rawData[8] + this.rawData[12]);\r\n\t\tt.height = maxX*this.rawData[1] + maxY*this.rawData[5] + maxZ*this.rawData[9] + this.rawData[13] - (t.y = minX*this.rawData[1] + minY*this.rawData[5] + minZ*this.rawData[9] + this.rawData[13]);\r\n\t\tt.depth = maxX*this.rawData[2] + maxY*this.rawData[6] + maxZ*this.rawData[10] + this.rawData[14] - (t.z = minX*this.rawData[2] + minY*this.rawData[6] + minZ*this.rawData[10] + this.rawData[14]);\r\n\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\r\n\t */\r\n\tpublic transformVectors(vin:number[], vout:number[]):void\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\r\n\r\n\t\twhile (i + 3 <= vin.length) {\r\n\t\t\tx = vin[i];\r\n\t\t\ty = vin[i + 1];\r\n\t\t\tz = vin[i + 2];\r\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\r\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\r\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\r\n\t\t\ti += 3;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\r\n\t */\r\n\tpublic transpose():void\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\r\n\t\tthis.copyRawDataTo(raw);\r\n\r\n\t\tthis.rawData[1] = raw[4];\r\n\t\tthis.rawData[2] = raw[8];\r\n\t\tthis.rawData[3] = raw[12];\r\n\t\tthis.rawData[4] = raw[1];\r\n\t\tthis.rawData[6] = raw[9];\r\n\t\tthis.rawData[7] = raw[13];\r\n\t\tthis.rawData[8] = raw[2];\r\n\t\tthis.rawData[9] = raw[6];\r\n\t\tthis.rawData[11] = raw[14];\r\n\t\tthis.rawData[12] = raw[3];\r\n\t\tthis.rawData[13] = raw[7];\r\n\t\tthis.rawData[14] = raw[11];\r\n\r\n\t\tthis._positionDirty = true;\r\n\t}\r\n\r\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\r\n\t{\r\n\r\n\t\t// internal export class use by rotations which have been tested\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tvar rad = degrees*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tvar c:number = Math.cos(rad);\r\n\t\tvar s:number = Math.sin(rad);\r\n\t\tvar t:number = 1 - c;\r\n\t\tvar tmp1:number, tmp2:number;\r\n\r\n\t\tm.rawData[0] = c + x*x*t;\r\n\t\tm.rawData[5] = c + y*y*t;\r\n\t\tm.rawData[10] = c + z*z*t;\r\n\r\n\t\ttmp1 = x*y*t;\r\n\t\ttmp2 = z*s;\r\n\t\tm.rawData[1] = tmp1 + tmp2;\r\n\t\tm.rawData[4] = tmp1 - tmp2;\r\n\t\ttmp1 = x*z*t;\r\n\t\ttmp2 = y*s;\r\n\t\tm.rawData[8] = tmp1 + tmp2;\r\n\t\tm.rawData[2] = tmp1 - tmp2;\r\n\t\ttmp1 = y*z*t;\r\n\t\ttmp2 = x*s;\r\n\t\tm.rawData[9] = tmp1 - tmp2;\r\n\t\tm.rawData[6] = tmp1 + tmp2;\r\n\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * [read-only] A Number that determines whether a matrix is invertible.\r\n\t */\r\n\tpublic get determinant():number\r\n\t{\r\n\t\treturn ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\r\n\t}\r\n\r\n\t/**\r\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\r\n\t * transformation's frame of reference.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\tif (this._positionDirty) {\r\n\t\t\tthis._positionDirty = false;\r\n\t\t\tthis._position.x = this.rawData[12];\r\n\t\t\tthis._position.y = this.rawData[13];\r\n\t\t\tthis._position.z = this.rawData[14];\r\n\t\t}\r\n\r\n\t\treturn this._position;\r\n\t}\r\n\r\n\tpublic invalidatePosition():void\r\n\t{\r\n\t\tthis._positionDirty = true;\r\n\t}\r\n\r\n\tpublic toFixed(decimalPlace:number):string\r\n\t{\r\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\r\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\r\n\t}\r\n}",
    "import {Point}\t\t\t\t\tfrom \"../geom/Point\";\r\nimport {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\r\nimport {ArgumentError}\t\t\tfrom \"../errors/ArgumentError\";\r\n\r\n/**\r\n * The Matrix export class represents a transformation matrix that determines how to\r\n * map points from one coordinate space to another. You can perform various\r\n * graphical transformations on a display object by setting the properties of\r\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\r\n * property of a Transform object, and then applying that Transform object as\r\n * the <code>transform</code> property of the display object. These\r\n * transformation functions include translation(<i>x</i> and <i>y</i>\r\n * repositioning), rotation, scaling, and skewing.\r\n *\r\n * <p>Together these types of transformations are known as <i>affine\r\n * transformations</i>. Affine transformations preserve the straightness of\r\n * lines while transforming, so that parallel lines stay parallel.</p>\r\n *\r\n * <p>To apply a transformation matrix to a display object, you create a\r\n * Transform object, set its <code>matrix</code> property to the\r\n * transformation matrix, and then set the <code>transform</code> property of\r\n * the display object to the Transform object. Matrix objects are also used as\r\n * parameters of some methods, such as the following:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\r\n *   <li>The <code>beginBitmapFill()</code> method,\r\n * <code>beginGradientFill()</code> method, or\r\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\r\n * </ul>\r\n *\r\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\r\n * contents:</p>\r\n *\r\n * <p>In traditional transformation matrixes, the <code>u</code>,\r\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\r\n * The Matrix export class can only operate in two-dimensional space, so it always\r\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\r\n * and that the property value <code>w</code> is 1.0. The effective values of\r\n * the matrix are as follows:</p>\r\n *\r\n * <p>You can get and set the values of all six of the other properties in a\r\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\r\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\r\n *\r\n * <p>The Matrix export class supports the four major types of transformations:\r\n * translation, scaling, rotation, and skewing. You can set three of these\r\n * transformations by using specialized methods, as described in the following\r\n * table: </p>\r\n *\r\n * <p>Each transformation function alters the current matrix properties so\r\n * that you can effectively combine multiple transformations. To do this, you\r\n * call more than one transformation function before applying the matrix to\r\n * its display object target(by using the <code>transform</code> property of\r\n * that display object).</p>\r\n *\r\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\r\n * before you can call the methods of the Matrix object.</p>\r\n */\r\nexport class Matrix\r\n{\r\n\tpublic rawData:Float32Array = new Float32Array(6);\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\r\n\t * when scaling or rotating an image.\r\n\t */\r\n\tpublic get a():number\r\n\t{\r\n\t\treturn this.rawData[0];\r\n\t}\r\n\r\n\tpublic set a(value:number)\r\n\t{\r\n\t\tthis.rawData[0] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\r\n\t * when rotating or skewing an image.\r\n\t */\r\n\tpublic get b():number\r\n\t{\r\n\t\treturn this.rawData[2];\r\n\t}\r\n\r\n\tpublic set b(value:number)\r\n\t{\r\n\t\tthis.rawData[2] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\r\n\t * when rotating or skewing an image.\r\n\t */\r\n\tpublic get c():number\r\n\t{\r\n\t\treturn this.rawData[1];\r\n\t}\r\n\r\n\tpublic set c(value:number)\r\n\t{\r\n\t\tthis.rawData[1] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\r\n\t * when scaling or rotating an image.\r\n\t */\r\n\tpublic get d():number\r\n\t{\r\n\t\treturn this.rawData[3];\r\n\t}\r\n\r\n\tpublic set d(value:number)\r\n\t{\r\n\t\tthis.rawData[3] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The distance by which to translate each point along the <i>x</i> axis.\r\n\t */\r\n\tpublic get tx():number\r\n\t{\r\n\t\treturn this.rawData[4];\r\n\t}\r\n\r\n\tpublic set tx(value:number)\r\n\t{\r\n\t\tthis.rawData[4] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The distance by which to translate each point along the <i>y</i> axis.\r\n\t */\r\n\tpublic get ty():number\r\n\t{\r\n\t\treturn this.rawData[5];\r\n\t}\r\n\r\n\tpublic set ty(value:number)\r\n\t{\r\n\t\tthis.rawData[5] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Matrix object with the specified parameters. In matrix\r\n\t * notation, the properties are organized like this:\r\n\t *\r\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\r\n\t * constructor, it creates an <i>identity matrix</i> with the following\r\n\t * values:</p>\r\n\t *\r\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\r\n\t *\r\n\t * @param a  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when scaling or rotating an image.\r\n\t * @param b  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when rotating or skewing an image.\r\n\t * @param c  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when rotating or skewing an image.\r\n\t * @param d  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when scaling or rotating an image..\r\n\t * @param tx The distance by which to translate each point along the <i>x</i>\r\n\t *           axis.\r\n\t * @param ty The distance by which to translate each point along the <i>y</i>\r\n\t *           axis.\r\n\t */\r\n\tconstructor(rawData?:Float32Array);\r\n\tconstructor(a?:number, b?:number, c?:number, d?:number, tx?:number, ty?:number);\r\n\tconstructor(a:number | Float32Array = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\r\n\t{\r\n\t\tif (a instanceof Float32Array) {\r\n\t\t\tthis.copyRawDataFrom(a);\r\n\t\t} else {\r\n\t\t\tthis.a = Number(a);\r\n\t\t\tthis.b = b;\r\n\t\t\tthis.c = c;\r\n\t\t\tthis.d = d;\r\n\t\t\tthis.tx = tx;\r\n\t\t\tthis.ty = ty;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic copyRawDataFrom(vector:Float32Array, index:number = 0):void\r\n\t{\r\n\t\tfor (var c:number = 0; c < 6; c++)\r\n\t\t\tthis.rawData[c] = vector[c + index];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\r\n\t * copy of the contained object.\r\n\t *\r\n\t * @return A Matrix object.\r\n\t */\r\n\tpublic clone():Matrix\r\n\t{\r\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\r\n\t}\r\n\r\n\t/**\r\n\t * Concatenates a matrix with the current matrix, effectively combining the\r\n\t * geometric effects of the two. In mathematical terms, concatenating two\r\n\t * matrixes is the same as combining them using matrix multiplication.\r\n\t *\r\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\r\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\r\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\r\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\r\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\r\n\t *\r\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\r\n\t * you want to concatenate two matrixes without altering either of the two\r\n\t * source matrixes, first copy the source matrix by using the\r\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\r\n\t *\r\n\t * @param matrix The matrix to be concatenated to the source matrix.\r\n\t */\r\n\tpublic concat(matrix:Matrix):void\r\n\t{\r\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\r\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\r\n\t\tthis.a = a1;\r\n\r\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\r\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\r\n\r\n\t\tthis.c = c1;\r\n\r\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\r\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\r\n\t\tthis.tx = tx1;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\r\n\t * object.\r\n\t *\r\n\t * @param column   The column from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (column > 2) {\r\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\r\n\t\t} else if (column == 0) {\r\n\t\t\tthis.a = vector3D.x;\r\n\t\t\tthis.c = vector3D.y;\r\n\t\t} else if (column == 1) {\r\n\t\t\tthis.b = vector3D.x;\r\n\t\t\tthis.d = vector3D.y;\r\n\t\t} else {\r\n\t\t\tthis.tx = vector3D.x;\r\n\t\t\tthis.ty = vector3D.y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific column of the calling Matrix object into the Vector3D\r\n\t * object. The w element of the Vector3D object will not be changed.\r\n\t *\r\n\t * @param column   The column from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (column > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (column == 0) {\r\n\t\t\tvector3D.x = this.a;\r\n\t\t\tvector3D.y = this.c;\r\n\t\t\tvector3D.z = 0;\r\n\t\t} else if (column == 1) {\r\n\t\t\tvector3D.x = this.b;\r\n\t\t\tvector3D.y = this.d;\r\n\t\t\tvector3D.z = 0;\r\n\t\t} else {\r\n\t\t\tvector3D.x = this.tx;\r\n\t\t\tvector3D.y = this.ty;\r\n\t\t\tvector3D.z = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of the matrix data from the source Point object into the\r\n\t * calling Matrix object.\r\n\t *\r\n\t * @param sourceMatrix The Matrix object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceMatrix:Matrix):void\r\n\t{\r\n\t\tthis.a = sourceMatrix.a;\r\n\t\tthis.b = sourceMatrix.b;\r\n\t\tthis.c = sourceMatrix.c;\r\n\t\tthis.d = sourceMatrix.d;\r\n\t\tthis.tx = sourceMatrix.tx;\r\n\t\tthis.ty = sourceMatrix.ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\r\n\t *\r\n\t * @param row      The row from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (row > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (row == 0) {\r\n\t\t\tthis.a = vector3D.x;\r\n\t\t\tthis.c = vector3D.y;\r\n\t\t} else if (row == 1) {\r\n\t\t\tthis.b = vector3D.x;\r\n\t\t\tthis.d = vector3D.y;\r\n\t\t} else {\r\n\t\t\tthis.tx = vector3D.x;\r\n\t\t\tthis.ty = vector3D.y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\r\n\t * The w element of the Vector3D object will not be changed.\r\n\t *\r\n\t * @param row      The row from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (row > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (row == 0) {\r\n\t\t\tvector3D.x = this.a;\r\n\t\t\tvector3D.y = this.b;\r\n\t\t\tvector3D.z = this.tx;\r\n\t\t} else if (row == 1) {\r\n\t\t\tvector3D.x = this.c;\r\n\t\t\tvector3D.y = this.d;\r\n\t\t\tvector3D.z = this.ty;\r\n\t\t} else {\r\n\t\t\tvector3D.setTo(0, 0, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Includes parameters for scaling, rotation, and translation. When applied\r\n\t * to a matrix it sets the matrix's values based on those parameters.\r\n\t *\r\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\r\n\t * matrix as you would if you applied the <code>identity()</code>,\r\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\r\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\r\n\t * 100, 100)</code> has the same effect as the following:</p>\r\n\t *\r\n\t * @param scaleX   The factor by which to scale horizontally.\r\n\t * @param scaleY   The factor by which scale vertically.\r\n\t * @param rotation The amount to rotate, in radians.\r\n\t * @param tx       The number of pixels to translate(move) to the right\r\n\t *                 along the <i>x</i> axis.\r\n\t * @param ty       The number of pixels to translate(move) down along the\r\n\t *                 <i>y</i> axis.\r\n\t */\r\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\r\n\t{\r\n\t\tthis.a = scaleX;\r\n\t\tthis.d = scaleY;\r\n\t\tthis.b = rotation;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the specific style of matrix expected by the\r\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\r\n\t * methods of the Graphics class. Width and height are scaled to a\r\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\r\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\r\n\t * height.\r\n\t *\r\n\t * <p>For example, consider a gradient with the following\r\n\t * characteristics:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li><code>GradientType.LINEAR</code></li>\r\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\r\n\t * 255]</code></li>\r\n\t *   <li><code>SpreadMethod.PAD</code></li>\r\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The following illustrations show gradients in which the matrix was\r\n\t * defined using the <code>createGradientBox()</code> method with different\r\n\t * parameter settings:</p>\r\n\t *\r\n\t * @param width    The width of the gradient box.\r\n\t * @param height   The height of the gradient box.\r\n\t * @param rotation The amount to rotate, in radians.\r\n\t * @param tx       The distance, in pixels, to translate to the right along\r\n\t *                 the <i>x</i> axis. This value is offset by half of the\r\n\t *                 <code>width</code> parameter.\r\n\t * @param ty       The distance, in pixels, to translate down along the\r\n\t *                 <i>y</i> axis. This value is offset by half of the\r\n\t *                 <code>height</code> parameter.\r\n\t */\r\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\r\n\t{\r\n\t\tthis.a = width/1638.4;\r\n\t\tthis.d = height/1638.4;\r\n\r\n\t\tif (rotation != 0.0) {\r\n\t\t\tvar cos = Math.cos(rotation);\r\n\t\t\tvar sin = Math.sin(rotation);\r\n\r\n\t\t\tthis.b = sin*this.d;\r\n\t\t\tthis.c = -sin*this.a;\r\n\t\t\tthis.a *= cos;\r\n\t\t\tthis.d *= cos;\r\n\t\t} else {\r\n\t\t\tthis.b = this.c = 0;\r\n\t\t}\r\n\r\n\t\tthis.tx = tx + width/2;\r\n\t\tthis.ty = ty + height/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a point in the pretransform coordinate space, returns the\r\n\t * coordinates of that point after the transformation occurs. Unlike the\r\n\t * standard transformation applied using the <code>transformPoint()</code>\r\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\r\n\t * does not consider the translation parameters <code>tx</code> and\r\n\t * <code>ty</code>.\r\n\t *\r\n\t * @param point The point for which you want to get the result of the matrix\r\n\t *              transformation.\r\n\t * @return The point resulting from applying the matrix transformation.\r\n\t */\r\n\tpublic deltaTransformPoint(point:Point):Point\r\n\t{\r\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets each matrix property to a value that causes a null transformation. An\r\n\t * object transformed by applying an identity matrix will be identical to the\r\n\t * original.\r\n\t *\r\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\r\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\r\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\r\n\t * <code>ty</code>=0.</p>\r\n\t *\r\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\r\n\t *\r\n\t */\r\n\tpublic identity():void\r\n\t{\r\n\t\tthis.a = 1;\r\n\t\tthis.b = 0;\r\n\t\tthis.c = 0;\r\n\t\tthis.d = 1;\r\n\t\tthis.tx = 0;\r\n\t\tthis.ty = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the opposite transformation of the original matrix. You can apply\r\n\t * an inverted matrix to an object to undo the transformation performed when\r\n\t * applying the original matrix.\r\n\t */\r\n\tpublic invert():void\r\n\t{\r\n\t\tvar norm = this.a*this.d - this.b*this.c;\r\n\r\n\t\tif (norm == 0) {\r\n\t\t\tthis.a = this.b = this.c = this.d = 0;\r\n\t\t\tthis.tx = -this.tx;\r\n\t\t\tthis.ty = -this.ty;\r\n\t\t} else {\r\n\t\t\tnorm = 1.0/norm;\r\n\t\t\tvar a1 = this.d*norm;\r\n\t\t\tthis.d = this.a*norm;\r\n\t\t\tthis.a = a1;\r\n\t\t\tthis.b *= -norm;\r\n\t\t\tthis.c *= -norm;\r\n\r\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\r\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\r\n\t\t\tthis.tx = tx1;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\r\n\t * copy of the contained object.\r\n\t *\r\n\t * @param matrix The matrix for which you want to get the result of the matrix\r\n\t *               transformation.\r\n\t * @return A Matrix object.\r\n\t */\r\n\tpublic multiply(matrix:Matrix):Matrix\r\n\t{\r\n\t\tvar result = new Matrix();\r\n\r\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\r\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\r\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\r\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\r\n\r\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\r\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a rotation transformation to the Matrix object.\r\n\t *\r\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\r\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\r\n\t * Matrix object. In matrix notation, this is the same as concatenating the\r\n\t * current matrix with the following:</p>\r\n\t *\r\n\t * @param angle The rotation angle in radians.\r\n\t */\r\n\tpublic rotate(angle:number):void\r\n\t{\r\n\t\tvar cos = Math.cos(angle);\r\n\t\tvar sin = Math.sin(angle);\r\n\r\n\t\tvar a1 = this.a*cos - this.b*sin;\r\n\t\tthis.b = this.a*sin + this.b*cos;\r\n\t\tthis.a = a1;\r\n\r\n\t\tvar c1 = this.c*cos - this.d*sin;\r\n\t\tthis.d = this.c*sin + this.d*cos;\r\n\t\tthis.c = c1;\r\n\r\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\r\n\t\tthis.ty = this.tx*sin + this.ty*cos;\r\n\t\tthis.tx = tx1;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\r\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\r\n\t * <code>sy</code>.\r\n\t *\r\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\r\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\r\n\t * is the same as concatenating the current matrix with the following\r\n\t * matrix:</p>\r\n\t *\r\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\r\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\r\n\t */\r\n\tpublic scale(sx:number, sy:number):void\r\n\t{\r\n\t\tthis.a *= sx;\r\n\t\tthis.b *= sy;\r\n\r\n\t\tthis.c *= sx;\r\n\t\tthis.d *= sy;\r\n\r\n\t\tthis.tx *= sx;\r\n\t\tthis.ty *= sy;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Matrix to the specified values.\r\n\t *\r\n\t * @param a  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when scaling or rotating an image.\r\n\t * @param b  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when rotating or skewing an image.\r\n\t * @param c  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when rotating or skewing an image.\r\n\t * @param d  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when scaling or rotating an image..\r\n\t * @param tx The distance by which to translate each point along the <i>x</i>\r\n\t *           axis.\r\n\t * @param ty The distance by which to translate each point along the <i>y</i>\r\n\t *           axis.\r\n\t */\r\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\r\n\t{\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a text value listing the properties of the Matrix object.\r\n\t *\r\n\t * @return A string containing the values of the properties of the Matrix\r\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\r\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the result of applying the geometric transformation represented by\r\n\t * the Matrix object to the specified point.\r\n\t *\r\n\t * @param point The point for which you want to get the result of the Matrix\r\n\t *              transformation.\r\n\t * @return The point resulting from applying the Matrix transformation.\r\n\t */\r\n\tpublic transformPoint(point:Point):Point\r\n\t{\r\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\r\n\t}\r\n\r\n\t/**\r\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\r\n\t * by the <code>dx</code> and <code>dy</code> parameters.\r\n\t *\r\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\r\n\t *           pixels.\r\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\r\n\t */\r\n\tpublic translate(dx:number, dy:number):void\r\n\t{\r\n\t\tthis.tx += dx;\r\n\t\tthis.ty += dy;\r\n\t}\r\n}",
    "/**\r\n * A Quaternion object which can be used to represent rotations.\r\n */\r\nexport class Orientation3D\r\n{\r\n\t/**\r\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\r\n\r\n\t/**\r\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\r\n\r\n\t/**\r\n\t * The quaternion orientation uses complex numbers.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static QUATERNION:string = \"quaternion\";\r\n}",
    "import {PlaneClassification}\tfrom \"../geom/PlaneClassification\";\r\nimport {Vector3D}\t\t\t\tfrom \"../geom/Vector3D\";\r\n\r\nexport class Plane3D\r\n{\r\n\t/**\r\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\r\n\t */\r\n\tpublic a:number;\r\n\r\n\t/**\r\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\r\n\t */\r\n\tpublic b:number;\r\n\r\n\t/**\r\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\r\n\t */\r\n\tpublic c:number;\r\n\r\n\t/**\r\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\r\n\t */\r\n\tpublic d:number;\r\n\r\n\tpublic _iAlignment:number;\r\n\r\n\t// indicates the alignment of the plane\r\n\tpublic static ALIGN_ANY:number = 0;\r\n\tpublic static ALIGN_XY_AXIS:number = 1;\r\n\tpublic static ALIGN_YZ_AXIS:number = 2;\r\n\tpublic static ALIGN_XZ_AXIS:number = 3;\r\n\r\n\t/**\r\n\t * Create a Plane3D with ABCD coefficients\r\n\t */\r\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\r\n\t{\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\r\n\t\tif (a == 0 && b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (b == 0 && c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (a == 0 && c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\r\n\t * @param p0 Vector3D\r\n\t * @param p1 Vector3D\r\n\t * @param p2 Vector3D\r\n\t */\r\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D):void\r\n\t{\r\n\t\tvar d1x:number = p1.x - p0.x;\r\n\t\tvar d1y:number = p1.y - p0.y;\r\n\t\tvar d1z:number = p1.z - p0.z;\r\n\r\n\t\tvar d2x:number = p2.x - p0.x;\r\n\t\tvar d2y:number = p2.y - p0.y;\r\n\t\tvar d2z:number = p2.z - p0.z;\r\n\r\n\t\tthis.a = d1y*d2z - d1z*d2y;\r\n\t\tthis.b = d1z*d2x - d1x*d2z;\r\n\t\tthis.c = d1x*d2y - d1y*d2x;\r\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\r\n\r\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\r\n\t\tif (this.a == 0 && this.b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (this.b == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (this.a == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\r\n\t * @param normal Vector3D\r\n\t * @param point  Vector3D\r\n\t */\r\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D):void\r\n\t{\r\n\t\tthis.a = normal.x;\r\n\t\tthis.b = normal.y;\r\n\t\tthis.c = normal.z;\r\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\r\n\t\tif (this.a == 0 && this.b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (this.b == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (this.a == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize this Plane3D\r\n\t * @return Plane3D This Plane3D.\r\n\t */\r\n\tpublic normalize():Plane3D\r\n\t{\r\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\r\n\t\tthis.a *= len;\r\n\t\tthis.b *= len;\r\n\t\tthis.c *= len;\r\n\t\tthis.d *= len;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the signed distance between this Plane3D and the point p.\r\n\t * @param p Vector3D\r\n\t * @returns Number\r\n\t */\r\n\tpublic distance(p:Vector3D):number\r\n\t{\r\n\r\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\r\n\r\n\t\t\treturn this.a*p.x - this.d;\r\n\r\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\r\n\t\t\treturn this.b*p.y - this.d;\r\n\t\t}\r\n\r\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\r\n\r\n\t\t\treturn this.c*p.z - this.d;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\r\n\t * @param p Vector3D\r\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\r\n\t */\r\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\r\n\t{\r\n\t\t// check NaN\r\n\t\tif (this.d != this.d)\r\n\t\t\treturn PlaneClassification.FRONT;\r\n\r\n\t\tvar len:number;\r\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\r\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\r\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\r\n\t\t\tlen = this.c*p.z - this.d; else\r\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\r\n\r\n\t\tif (len < -epsilon)\r\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\r\n\t\t\treturn PlaneClassification.FRONT; else\r\n\t\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\r\n\t}\r\n}",
    "export class PlaneClassification\r\n{\r\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\r\n\tpublic static BACK:number = 0;\r\n\tpublic static FRONT:number = 1;\r\n\r\n\tpublic static IN:number = 0;\r\n\tpublic static OUT:number = 1;\r\n\tpublic static INTERSECT:number = 2;\r\n\r\n}",
    "/**\r\n * The Point object represents a location in a two-dimensional coordinate\r\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\r\n * represents the vertical axis.\r\n *\r\n * <p>The following code creates a point at(0,0):</p>\r\n *\r\n * <p>Methods and properties of the following classes use Point objects:</p>\r\n *\r\n * <ul>\r\n *   <li>BitmapData</li>\r\n *   <li>DisplayObject</li>\r\n *   <li>DisplayObjectContainer</li>\r\n *   <li>DisplacementMapFilter</li>\r\n *   <li>NativeWindow</li>\r\n *   <li>Matrix</li>\r\n *   <li>Rectangle</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Point()</code> constructor to create a Point\r\n * object.</p>\r\n */\r\nexport class Point\r\n{\r\n\t/**\r\n\t * The horizontal coordinate of the point. The default value is 0.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate of the point. The default value is 0.\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The length of the line segment from(0,0) to this point.\r\n\t */\r\n\tpublic get length():number\r\n\t{\r\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new point. If you pass no parameters to this method, a point is\r\n\t * created at(0,0).\r\n\t *\r\n\t * @param x The horizontal coordinate.\r\n\t * @param y The vertical coordinate.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the coordinates of another point to the coordinates of this point to\r\n\t * create a new point.\r\n\t *\r\n\t * @param v The point to be added.\r\n\t * @return The new point.\r\n\t */\r\n\tpublic add(v:Point):Point\r\n\t{\r\n\t\treturn new Point(this.x + v.x, this.y + v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of this Point object.\r\n\t *\r\n\t * @return The new Point object.\r\n\t */\r\n\tpublic clone():Point\r\n\t{\r\n\t\treturn new Point(this.x, this.y);\r\n\t}\r\n\r\n\tpublic copyFrom(sourcePoint:Point):void\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether two points are equal. Two points are equal if they have\r\n\t * the same <i>x</i> and <i>y</i> values.\r\n\t *\r\n\t * @param toCompare The point to be compared.\r\n\t * @return A value of <code>true</code> if the object is equal to this Point\r\n\t *         object; <code>false</code> if it is not equal.\r\n\t */\r\n\tpublic equals(toCompare:Point):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the line segment between(0,0) and the current point to a set\r\n\t * length.\r\n\t *\r\n\t * @param thickness The scaling value. For example, if the current point is\r\n\t *                 (0,5), and you normalize it to 1, the point returned is\r\n\t *                  at(0,1).\r\n\t */\r\n\tpublic normalize(thickness:number = 1):void\r\n\t{\r\n\t\tif (this.length != 0) {\r\n\t\t\tvar invLength = thickness/this.length;\r\n\t\t\tthis.x *= invLength;\r\n\t\t\tthis.y *= invLength;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthrow \"Cannot divide by zero length.\";\r\n\t}\r\n\r\n\t/**\r\n\t * Offsets the Point object by the specified amount. The value of\r\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\r\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\r\n\t * value of <i>y</i> to create the new <i>y</i> value.\r\n\t *\r\n\t * @param dx The amount by which to offset the horizontal coordinate,\r\n\t *           <i>x</i>.\r\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\r\n\t */\r\n\tpublic offset(dx:number, dy:number):void\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t}\r\n\r\n\tpublic setTo(xa:number, ya:number):void\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the coordinates of another point from the coordinates of this\r\n\t * point to create a new point.\r\n\t *\r\n\t * @param v The point to be subtracted.\r\n\t * @return The new point.\r\n\t */\r\n\tpublic subtract(v:Point):Point\r\n\t{\r\n\t\treturn new Point(this.x - v.x, this.y - v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\r\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\r\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\r\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\r\n\t *\r\n\t * @return The string representation of the coordinates.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\r\n\t *\r\n\t * @param pt1 The first point.\r\n\t * @param pt2 The second point.\r\n\t * @return The distance between the first and second points.\r\n\t */\r\n\tpublic static distance(pt1:Point, pt2:Point):number\r\n\t{\r\n\t\tvar dx:number = pt2.x - pt1.x;\r\n\t\tvar dy:number = pt2.y - pt1.y;\r\n\r\n\t\treturn Math.sqrt(dx*dx + dy*dy);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines a point between two specified points. The parameter\r\n\t * <code>f</code> determines where the new interpolated point is located\r\n\t * relative to the two end points specified by parameters <code>pt1</code>\r\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\r\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\r\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\r\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\r\n\t * point(parameter <code>pt2</code>).\r\n\t *\r\n\t * @param pt1 The first point.\r\n\t * @param pt2 The second point.\r\n\t * @param f   The level of interpolation between the two points. Indicates\r\n\t *            where the new point will be, along the line between\r\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\r\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\r\n\t *            <code>pt2</code> is returned.\r\n\t * @return The new, interpolated point.\r\n\t */\r\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\r\n\t{\r\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\r\n\t *\r\n\t * @param len   The length coordinate of the polar pair.\r\n\t * @param angle The angle, in radians, of the polar pair.\r\n\t * @return The Cartesian point.\r\n\t */\r\n\tpublic static polar(len:number, angle:number):Point\r\n\t{\r\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\r\n\t}\r\n}\r\n",
    "export class PoissonLookup\r\n{\r\n\tpublic static _distributions:Array<Array<number>>;\r\n\r\n\tpublic static initDistributions():void\r\n\t{\r\n\t\t// precalculated for best control\r\n\t\tthis._distributions = new Array<Array<number>>();\r\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\r\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\r\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\r\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\r\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\r\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\r\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\r\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\r\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\r\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\r\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\r\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\r\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\r\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\r\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\r\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\r\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\r\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\r\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\r\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\r\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\r\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\r\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\r\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\r\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\r\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\r\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\r\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\r\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\r\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\r\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\r\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\r\n\t}\r\n\r\n\tpublic static getDistribution(n:number /*int*/):Array<number>\r\n\t{\r\n\t\tif (!this._distributions)\r\n\t\t\tthis.initDistributions();\r\n\r\n\t\tif (n < 2 || n > 32)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this._distributions[n - 1];\r\n\t}\r\n}",
    "import {Matrix3DUtils}\t\tfrom \"../geom/Matrix3DUtils\";\r\nimport {Orientation3D}\t\tfrom \"../geom/Orientation3D\";\r\nimport {Matrix3D}\t\t\t\tfrom \"../geom/Matrix3D\";\r\nimport {Vector3D}\t\t\t\tfrom \"../geom/Vector3D\";\r\n\r\n/**\r\n * A Quaternion object which can be used to represent rotations.\r\n */\r\nexport class Quaternion\r\n{\r\n\t/**\r\n\t * The x value of the quaternion.\r\n\t */\r\n\tpublic x:number = 0;\r\n\r\n\t/**\r\n\t * The y value of the quaternion.\r\n\t */\r\n\tpublic y:number = 0;\r\n\r\n\t/**\r\n\t * The z value of the quaternion.\r\n\t */\r\n\tpublic z:number = 0;\r\n\r\n\t/**\r\n\t * The w value of the quaternion.\r\n\t */\r\n\tpublic w:number = 1;\r\n\r\n\t/**\r\n\t * Creates a new Quaternion object.\r\n\t * @param x The x value of the quaternion.\r\n\t * @param y The y value of the quaternion.\r\n\t * @param z The z value of the quaternion.\r\n\t * @param w The w value of the quaternion.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the magnitude of the quaternion object.\r\n\t */\r\n\tpublic get magnitude():number\r\n\t{\r\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\r\n\t *\r\n\t * @param    qa    The first quaternion in the multiplication.\r\n\t * @param    qb    The second quaternion in the multiplication.\r\n\t */\r\n\tpublic multiply(qa:Quaternion, qb:Quaternion):void\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\r\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\r\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\r\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\r\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\r\n\t}\r\n\r\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\r\n\t{\r\n\t\t//target ||= new Quaternion();\r\n\t\tif (target === null) {\r\n\t\t\ttarget = new Quaternion();\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar x2:number = vector.x;\r\n\t\tvar y2:number = vector.y;\r\n\t\tvar z2:number = vector.z;\r\n\r\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\r\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\r\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\r\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with values representing the given rotation around a vector.\r\n\t *\r\n\t * @param    axis    The axis around which to rotate\r\n\t * @param    angle    The angle in radians of the rotation.\r\n\t */\r\n\tpublic fromAxisAngle(axis:Vector3D, angle:number):void\r\n\t{\r\n\t\tvar sin_a:number = Math.sin(angle/2);\r\n\t\tvar cos_a:number = Math.cos(angle/2);\r\n\r\n\t\tthis.x = axis.x*sin_a;\r\n\t\tthis.y = axis.y*sin_a;\r\n\t\tthis.z = axis.z*sin_a;\r\n\t\tthis.w = cos_a;\r\n\r\n\t\tthis.normalize();\r\n\t}\r\n\r\n\t/**\r\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\r\n\t * @param qa The first quaternion to interpolate.\r\n\t * @param qb The second quaternion to interpolate.\r\n\t * @param t The interpolation weight, a value between 0 and 1.\r\n\t */\r\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number):void\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\r\n\r\n\t\t// shortest direction\r\n\t\tif (dot < 0) {\r\n\t\t\tdot = -dot;\r\n\t\t\tw2 = -w2;\r\n\t\t\tx2 = -x2;\r\n\t\t\ty2 = -y2;\r\n\t\t\tz2 = -z2;\r\n\t\t}\r\n\r\n\t\tif (dot < 0.95) {\r\n\t\t\t// interpolate angle linearly\r\n\t\t\tvar angle:number = Math.acos(dot);\r\n\t\t\tvar s:number = 1/Math.sin(angle);\r\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\r\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\r\n\t\t\tthis.w = w1*s1 + w2*s2;\r\n\t\t\tthis.x = x1*s1 + x2*s2;\r\n\t\t\tthis.y = y1*s1 + y2*s2;\r\n\t\t\tthis.z = z1*s1 + z2*s2;\r\n\t\t} else {\r\n\t\t\t// nearly identical angle, interpolate linearly\r\n\t\t\tthis.w = w1 + t*(w2 - w1);\r\n\t\t\tthis.x = x1 + t*(x2 - x1);\r\n\t\t\tthis.y = y1 + t*(y2 - y1);\r\n\t\t\tthis.z = z1 + t*(z2 - z1);\r\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t\t\tthis.w *= len;\r\n\t\t\tthis.x *= len;\r\n\t\t\tthis.y *= len;\r\n\t\t\tthis.z *= len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolates between two quaternions.\r\n\t * @param qa The first quaternion to interpolate.\r\n\t * @param qb The second quaternion to interpolate.\r\n\t * @param t The interpolation weight, a value between 0 and 1.\r\n\t */\r\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number):void\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\t\tvar len:number;\r\n\r\n\t\t// shortest direction\r\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\r\n\t\t\tw2 = -w2;\r\n\t\t\tx2 = -x2;\r\n\t\t\ty2 = -y2;\r\n\t\t\tz2 = -z2;\r\n\t\t}\r\n\r\n\t\tthis.w = w1 + t*(w2 - w1);\r\n\t\tthis.x = x1 + t*(x2 - x1);\r\n\t\tthis.y = y1 + t*(y2 - y1);\r\n\t\tthis.z = z1 + t*(z2 - z1);\r\n\r\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t\tthis.w *= len;\r\n\t\tthis.x *= len;\r\n\t\tthis.y *= len;\r\n\t\tthis.z *= len;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with values representing the given euler rotation.\r\n\t *\r\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\r\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\r\n\t * @param    az        The angle in radians of the rotation around the az axis.\r\n\t */\r\n\tpublic fromEulerAngles(ax:number, ay:number, az:number):void\r\n\t{\r\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\r\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\r\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\r\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\r\n\r\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\r\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\r\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\r\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\r\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\r\n\t * @return The Vector3D containing the Euler angles.\r\n\t */\r\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\r\n\t{\r\n\r\n\t\t//target ||= new Vector3D();\r\n\t\tif (target === null) {\r\n\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\t}\r\n\r\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\r\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\r\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalises the quaternion object.\r\n\t */\r\n\tpublic normalize(val:number = 1):void\r\n\t{\r\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\r\n\r\n\t\tthis.x *= mag;\r\n\t\tthis.y *= mag;\r\n\t\tthis.z *= mag;\r\n\t\tthis.w *= mag;\r\n\t}\r\n\r\n\t/**\r\n\t * Used to trace the values of a quaternion.\r\n\t *\r\n\t * @return A string representation of the quaternion object.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\r\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\r\n\t * @return A Matrix3D object representing an equivalent rotation.\r\n\t */\r\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\r\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\r\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\r\n\r\n\t\trawData[0] = xx - yy - zz + ww;\r\n\t\trawData[4] = xy2 - zw2;\r\n\t\trawData[8] = xz2 + yw2;\r\n\t\trawData[12] = 0;\r\n\t\trawData[1] = xy2 + zw2;\r\n\t\trawData[5] = -xx + yy - zz + ww;\r\n\t\trawData[9] = yz2 - xw2;\r\n\t\trawData[13] = 0;\r\n\t\trawData[2] = xz2 - yw2;\r\n\t\trawData[6] = yz2 + xw2;\r\n\t\trawData[10] = -xx - yy + zz + ww;\r\n\t\trawData[14] = 0;\r\n\t\trawData[3] = 0.0;\r\n\t\trawData[7] = 0.0;\r\n\t\trawData[11] = 0;\r\n\t\trawData[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\treturn new Matrix3D(rawData);\r\n\t\telse\r\n\t\t\ttarget.copyRawDataFrom(rawData);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\r\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\r\n\t */\r\n\tpublic fromMatrix(matrix:Matrix3D):void\r\n\t{\r\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = v.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\r\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\r\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\r\n\t */\r\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false):void\r\n\t{\r\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\r\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\r\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\r\n\r\n\t\ttarget[0] = xx - yy - zz + ww;\r\n\t\ttarget[1] = xy2 - zw2;\r\n\t\ttarget[2] = xz2 + yw2;\r\n\t\ttarget[4] = xy2 + zw2;\r\n\t\ttarget[5] = -xx + yy - zz + ww;\r\n\t\ttarget[6] = yz2 - xw2;\r\n\t\ttarget[8] = xz2 - yw2;\r\n\t\ttarget[9] = yz2 + xw2;\r\n\t\ttarget[10] = -xx - yy + zz + ww;\r\n\t\ttarget[3] = target[7] = target[11] = 0;\r\n\r\n\t\tif (!exclude4thRow) {\r\n\t\t\ttarget[12] = target[13] = target[14] = 0;\r\n\t\t\ttarget[15] = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the quaternion.\r\n\t * @return An exact duplicate of the current Quaternion.\r\n\t */\r\n\tpublic clone():Quaternion\r\n\t{\r\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates a point.\r\n\t * @param vector The Vector3D object to be rotated.\r\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\r\n\t * @return A Vector3D object containing the rotated point.\r\n\t */\r\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\r\n\t{\r\n\t\tvar x1:number, y1:number, z1:number, w1:number;\r\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\r\n\r\n\t\t//target ||= new Vector3D();\r\n\t\tif (target === null) {\r\n\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\t}\r\n\r\n\t\t// p*q'\r\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\r\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\r\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\r\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\r\n\r\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\r\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\r\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the data from a quaternion into this instance.\r\n\t * @param q The quaternion to copy from.\r\n\t */\r\n\tpublic copyFrom(q:Quaternion):void\r\n\t{\r\n\t\tthis.x = q.x;\r\n\t\tthis.y = q.y;\r\n\t\tthis.z = q.z;\r\n\t\tthis.w = q.w;\r\n\t}\r\n}",
    "import {Point}\t\t\t\t\tfrom \"../geom/Point\";\r\n\r\n/**\r\n * A Rectangle object is an area defined by its position, as indicated by its\r\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\r\n *\r\n *\r\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\r\n * <code>height</code> properties of the Rectangle export class are independent of\r\n * each other; changing the value of one property has no effect on the others.\r\n * However, the <code>right</code> and <code>bottom</code> properties are\r\n * integrally related to those four properties. For example, if you change the\r\n * value of the <code>right</code> property, the value of the\r\n * <code>width</code> property changes; if you change the <code>bottom</code>\r\n * property, the value of the <code>height</code> property changes. </p>\r\n *\r\n * <p>The following methods and properties use Rectangle objects:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\r\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\r\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\r\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\r\n * <code>merge()</code>, <code>paletteMap()</code>,\r\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\r\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\r\n * BitmapData class</li>\r\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\r\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\r\n * DisplayObject class</li>\r\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\r\n * class</li>\r\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\r\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\r\n * method of the Sprite class</li>\r\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\r\n * method of the PrintJob class</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\r\n * Rectangle object.</p>\r\n *\r\n * <p><b>Note:</b> The Rectangle export class does not define a rectangular Shape\r\n * display object. To draw a rectangular Shape object onscreen, use the\r\n * <code>drawRect()</code> method of the Graphics class.</p>\r\n */\r\nexport class Rectangle\r\n{\r\n\tprivate _size:Point;\r\n\tprivate _bottomRight:Point;\r\n\tprivate _topLeft:Point;\r\n\r\n\t/**\r\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\r\n\t * value of a Rectangle object has no effect on the <code>x</code>,\r\n\t * <code>y</code>, and <code>width</code> properties.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\r\n\t * value of a Rectangle object has no effect on the <code>x</code>,\r\n\t * <code>y</code>, and <code>height</code> properties.\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the value of the <code>x</code> property of a Rectangle object has no\r\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\r\n\t * properties.\r\n\t *\r\n\t * <p>The value of the <code>x</code> property is equal to the value of the\r\n\t * <code>left</code> property.</p>\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the value of the <code>y</code> property of a Rectangle object has no\r\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\r\n\t * properties.\r\n\t *\r\n\t * <p>The value of the <code>y</code> property is equal to the value of the\r\n\t * <code>top</code> property.</p>\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The sum of the <code>y</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get bottom():number\r\n\t{\r\n\t\treturn this.y + this.height;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Rectangle object's bottom-right corner, determined by\r\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\r\n\t */\r\n\tpublic get bottomRight():Point\r\n\t{\r\n\t\tif (this._bottomRight == null)\r\n\t\t\tthis._bottomRight = new Point();\r\n\r\n\t\tthis._bottomRight.x = this.x + this.width;\r\n\t\tthis._bottomRight.y = this.y + this.height;\r\n\r\n\t\treturn this._bottomRight;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the <code>left</code> property of a Rectangle object has no effect on the\r\n\t * <code>y</code> and <code>height</code> properties. However it does affect\r\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\r\n\t * does <i>not</i> affect the <code>width</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get left():number\r\n\t{\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>x</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic get right():number\r\n\t{\r\n\t\treturn this.x + this.width;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the Rectangle object, expressed as a Point object with the\r\n\t * values of the <code>width</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get size():Point\r\n\t{\r\n\t\tif (this._size == null)\r\n\t\t\tthis._size = new Point();\r\n\r\n\t\tthis._size.x = this.width;\r\n\t\tthis._size.y = this.height;\r\n\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the <code>top</code> property of a Rectangle object has no effect on the\r\n\t * <code>x</code> and <code>width</code> properties. However it does affect\r\n\t * the <code>height</code> property, whereas changing the <code>y</code>\r\n\t * value does <i>not</i> affect the <code>height</code> property.\r\n\t *\r\n\t * <p>The value of the <code>top</code> property is equal to the value of the\r\n\t * <code>y</code> property.</p>\r\n\t */\r\n\tpublic get top():number\r\n\t{\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Rectangle object's top-left corner, determined by the\r\n\t * <i>x</i> and <i>y</i> coordinates of the point.\r\n\t */\r\n\tpublic get topLeft():Point\r\n\t{\r\n\t\tif (this._topLeft == null)\r\n\t\t\tthis._topLeft = new Point();\r\n\r\n\t\tthis._topLeft.x = this.x;\r\n\t\tthis._topLeft.y = this.y;\r\n\r\n\t\treturn this._topLeft;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Rectangle object with the top-left corner specified by the\r\n\t * <code>x</code> and <code>y</code> parameters and with the specified\r\n\t * <code>width</code> and <code>height</code> parameters. If you call this\r\n\t * public without parameters, a rectangle with <code>x</code>,\r\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\r\n\t * to 0 is created.\r\n\t *\r\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\r\n\t *               rectangle.\r\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\r\n\t *               rectangle.\r\n\t * @param width  The width of the rectangle, in pixels.\r\n\t * @param height The height of the rectangle, in pixels.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Rectangle object with the same values for the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties as the original Rectangle object.\r\n\t *\r\n\t * @return A new Rectangle object with the same values for the\r\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t *         <code>height</code> properties as the original Rectangle object.\r\n\t */\r\n\tpublic clone():Rectangle\r\n\t{\r\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified point is contained within the rectangular\r\n\t * region defined by this Rectangle object.\r\n\t *\r\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\r\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\r\n\t * @return A value of <code>true</code> if the Rectangle object contains the\r\n\t *         specified point; otherwise <code>false</code>.\r\n\t */\r\n\tpublic contains(x:number, y:number):boolean\r\n\t{\r\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified point is contained within the rectangular\r\n\t * region defined by this Rectangle object. This method is similar to the\r\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\r\n\t * object as a parameter.\r\n\t *\r\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\r\n\t *              coordinates.\r\n\t * @return A value of <code>true</code> if the Rectangle object contains the\r\n\t *         specified point; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsPoint(point:Point):boolean\r\n\t{\r\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\r\n\t * parameter is contained within this Rectangle object. A Rectangle object is\r\n\t * said to contain another if the second Rectangle object falls entirely\r\n\t * within the boundaries of the first.\r\n\t *\r\n\t * @param rect The Rectangle object being checked.\r\n\t * @return A value of <code>true</code> if the Rectangle object that you\r\n\t *         specify is contained by this Rectangle object; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic containsRect(rect:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of rectangle data from the source Rectangle object into the\r\n\t * calling Rectangle object.\r\n\t *\r\n\t * @param sourceRect The Rectangle object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceRect:Rectangle):void\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toCompare</code>\r\n\t * parameter is equal to this Rectangle object. This method compares the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties of an object against the same properties of\r\n\t * this Rectangle object.\r\n\t *\r\n\t * @param toCompare The rectangle to compare to this Rectangle object.\r\n\t * @return A value of <code>true</code> if the object has exactly the same\r\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\r\n\t *         and <code>height</code> properties as this Rectangle object;\r\n\t *         otherwise <code>false</code>.\r\n\t */\r\n\tpublic equals(toCompare:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Rectangle object by the specified amounts, in\r\n\t * pixels. The center point of the Rectangle object stays the same, and its\r\n\t * size increases to the left and right by the <code>dx</code> value, and to\r\n\t * the top and the bottom by the <code>dy</code> value.\r\n\t *\r\n\t * @param dx The value to be added to the left and the right of the Rectangle\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           width and position of the rectangle:\r\n\t * @param dy The value to be added to the top and the bottom of the\r\n\t *           Rectangle. The following equation is used to calculate the new\r\n\t *           height and position of the rectangle:\r\n\t */\r\n\tpublic inflate(dx:number, dy:number):void\r\n\t{\r\n\t\tthis.x -= dx/2;\r\n\t\tthis.y -= dy/2;\r\n\t\tthis.width += dx/2;\r\n\t\tthis.height += dy/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Rectangle object. This method is similar to the\r\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\r\n\t * a parameter.\r\n\t *\r\n\t * <p>The following two code examples give the same result:</p>\r\n\t *\r\n\t * @param point The <code>x</code> property of this Point object is used to\r\n\t *              increase the horizontal dimension of the Rectangle object.\r\n\t *              The <code>y</code> property is used to increase the vertical\r\n\t *              dimension of the Rectangle object.\r\n\t */\r\n\tpublic inflatePoint(point:Point):void\r\n\t{\r\n\t\tthis.x -= point.x/2;\r\n\t\tthis.y -= point.y/2;\r\n\t\tthis.width += point.x/2;\r\n\t\tthis.height += point.y/2;\r\n\t}\r\n\r\n\t/**\r\n\t * If the Rectangle object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Rectangle object, returns the area of\r\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\r\n\t * this method returns an empty Rectangle object with its properties set to\r\n\t * 0.\r\n\t *\r\n\t * @param toIntersect The Rectangle object to compare against to see if it\r\n\t *                    intersects with this Rectangle object.\r\n\t * @return A Rectangle object that equals the area of intersection. If the\r\n\t *         rectangles do not intersect, this method returns an empty\r\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\r\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\r\n\t *         properties set to 0.\r\n\t */\r\n\tpublic intersection(toIntersect:Rectangle):Rectangle\r\n\t{\r\n\t\tif (this.intersects(toIntersect)) {\r\n\t\t\tvar i:Rectangle = new Rectangle();\r\n\r\n\t\t\tif (this.x > toIntersect.x) {\r\n\t\t\t\ti.x = this.x;\r\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\r\n\r\n\t\t\t\tif (i.width > this.width)\r\n\t\t\t\t\ti.width = this.width;\r\n\t\t\t} else {\r\n\t\t\t\ti.x = toIntersect.x;\r\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\r\n\r\n\t\t\t\tif (i.width > toIntersect.width)\r\n\t\t\t\t\ti.width = toIntersect.width;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.y > toIntersect.y) {\r\n\t\t\t\ti.y = this.y;\r\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\r\n\r\n\t\t\t\tif (i.height > this.height)\r\n\t\t\t\t\ti.height = this.height;\r\n\t\t\t} else {\r\n\t\t\t\ti.y = toIntersect.y;\r\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\r\n\r\n\t\t\t\tif (i.height > toIntersect.height)\r\n\t\t\t\t\ti.height = toIntersect.height;\r\n\t\t\t}\r\n\r\n\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn new Rectangle();\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Rectangle object. This method checks the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties of the specified Rectangle object to see if\r\n\t * it intersects with this Rectangle object.\r\n\t *\r\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\r\n\t *                    object.\r\n\t * @return A value of <code>true</code> if the specified object intersects\r\n\t *         with this Rectangle object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic intersects(toIntersect:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not this Rectangle object is empty.\r\n\t *\r\n\t * @return A value of <code>true</code> if the Rectangle object's width or\r\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\r\n\t */\r\n\tpublic isEmpty():boolean\r\n\t{\r\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Rectangle object, as determined by its\r\n\t * top-left corner, by the specified amounts.\r\n\t *\r\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\r\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\r\n\t */\r\n\tpublic offset(dx:number, dy:number):void\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Rectangle object using a Point object as a\r\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\r\n\t * method, except that it takes a Point object as a parameter.\r\n\t *\r\n\t * @param point A Point object to use to offset this Rectangle object.\r\n\t */\r\n\tpublic offsetPoint(point:Point):void\r\n\t{\r\n\t\tthis.x += point.x;\r\n\t\tthis.y += point.y;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\r\n\t * empty if its width or height is less than or equal to 0.\r\n\t *\r\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\r\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\r\n\t *\r\n\t */\r\n\tpublic setEmpty():void\r\n\t{\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.width = 0;\r\n\t\tthis.height = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Rectangle to the specified values\r\n\t *\r\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\r\n\t *                rectangle.\r\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\r\n\t *                rectangle.\r\n\t * @param widtha  The width of the rectangle, in pixels.\r\n\t * @param heighta The height of the rectangle, in pixels.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number):void\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.width = widtha;\r\n\t\tthis.height = heighta;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds and returns a string that lists the horizontal and vertical\r\n\t * positions and the width and height of the Rectangle object.\r\n\t *\r\n\t * @return A string listing the value of each of the following properties of\r\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\r\n\t *         <code>width</code>, and <code>height</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Adds two rectangles together to create a new Rectangle object, by filling\r\n\t * in the horizontal and vertical space between the two rectangles.\r\n\t *\r\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\r\n\t * <code>0</code> as the height or width value, such as: <code>var\r\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\r\n\t *\r\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\r\n\t * @return A new Rectangle object that is the union of the two rectangles.\r\n\t */\r\n\tpublic union(toUnion:Rectangle):Rectangle\r\n\t{\r\n\t\tvar u:Rectangle = new Rectangle();\r\n\r\n\t\tif (this.x < toUnion.x) {\r\n\t\t\tu.x = this.x;\r\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\r\n\r\n\t\t\tif (u.width < this.width)\r\n\t\t\t\tu.width = this.width;\r\n\t\t} else {\r\n\t\t\tu.x = toUnion.x;\r\n\t\t\tu.width = this.x - toUnion.x + this.width;\r\n\r\n\t\t\tif (u.width < toUnion.width)\r\n\t\t\t\tu.width = toUnion.width;\r\n\t\t}\r\n\r\n\t\tif (this.y < toUnion.y) {\r\n\t\t\tu.y = this.y;\r\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\r\n\r\n\t\t\tif (u.height < this.height)\r\n\t\t\t\tu.height = this.height;\r\n\t\t} else {\r\n\t\t\tu.y = toUnion.y;\r\n\t\t\tu.height = this.y - toUnion.y + this.height;\r\n\r\n\t\t\tif (u.height < toUnion.height)\r\n\t\t\t\tu.height = toUnion.height;\r\n\t\t}\r\n\r\n\t\treturn u;\r\n\t}\r\n}",
    "import {PlaneClassification}\tfrom \"../geom/PlaneClassification\";\r\nimport {Vector3D}\t\t\t\tfrom \"../geom/Vector3D\";\r\n\r\nexport class Sphere\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic z:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic radius:number;\r\n\r\n\t/**\r\n\t * Create a Sphere with ABCD coefficients\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, radius:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.radius = radius;\r\n\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif (this.containsPoint(position))\r\n\t\t\treturn 0;\r\n\r\n\t\tvar px:number = position.x - this.x, py:number = position.y - this.y, pz:number = position.z - this.z;\r\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\r\n\t\tvar rayEntryDistance:number;\r\n\r\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\r\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\r\n\t\tvar c:number = px*px + py*py + pz*pz - this.radius*this.radius;\r\n\t\tvar det:number = b*b - 4*a*c;\r\n\r\n\t\tif (det >= 0) { // ray goes through sphere\r\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\r\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\r\n\t\t\tif (rayEntryDistance >= 0) {\r\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\r\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\r\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\r\n\t\t\t\ttargetNormal.normalize();\r\n\r\n\t\t\t\treturn rayEntryDistance;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ray misses sphere\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic containsPoint(position:Vector3D):boolean\r\n\t{\r\n\t\tvar px:number = position.x - this.x;\r\n\t\tvar py:number = position.y - this.y;\r\n\t\tvar pz:number = position.z - this.z;\r\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\r\n\t\treturn distance <= this.radius;\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\r\n\t}\r\n}",
    "/**\r\n * The Vector3D export class represents a point or a location in the three-dimensional\r\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\r\n * space, the x property represents the horizontal axis and the y property\r\n * represents the vertical axis. In three-dimensional space, the z property\r\n * represents depth. The value of the x property increases as the object moves\r\n * to the right. The value of the y property increases as the object moves\r\n * down. The z property increases as the object moves farther from the point\r\n * of view. Using perspective projection and scaling, the object is seen to be\r\n * bigger when near and smaller when farther away from the screen. As in a\r\n * right-handed three-dimensional coordinate system, the positive z-axis points\r\n * away from the viewer and the value of the z property increases as the object\r\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\r\n * space is the upper-left corner of the stage.\r\n *\r\n * <p>The Vector3D export class can also represent a direction, an arrow pointing from\r\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\r\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\r\n *\r\n * <p>Quaternion notation introduces a fourth element, the w property, which\r\n * provides additional orientation information. For example, the w property can\r\n * define an angle of rotation of a Vector3D object. The combination of the\r\n * angle of rotation and the coordinates x, y, and z can determine the display\r\n * object's orientation. Here is a representation of Vector3D elements in\r\n * matrix notation:</p>\r\n */\r\nexport class Vector3D\r\n{\r\n\t/**\r\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\r\n\t */\r\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\r\n\r\n\t/**\r\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\r\n\t */\r\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\r\n\r\n\t/**\r\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\r\n\t */\r\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\r\n\r\n\t/**\r\n\t * The first element of a Vector3D object, such as the x coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/*\r\n\t *The second element of a Vector3D object, such as the y coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The third element of a Vector3D object, such as the y coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic z:number;\r\n\r\n\t/**\r\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\r\n\t * and z properties) can hold data such as the angle of rotation. The\r\n\t * default value is 0.\r\n\t *\r\n\t * <p>Quaternion notation employs an angle as the fourth element in\r\n\t * its calculation of three-dimensional rotation. The w property can\r\n\t * be used to define the angle of rotation about the Vector3D object.\r\n\t * The combination of the rotation angle and the coordinates (x,y,z)\r\n\t * determines the display object's orientation.</p>\r\n\t *\r\n\t * <p>In addition, the w property can be used as a perspective warp\r\n\t * factor for a projected three-dimensional position or as a projection\r\n\t * transform value in representing a three-dimensional coordinate\r\n\t * projected into the two-dimensional space. For example, you can\r\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\r\n\t * property, that, when applied to a Vector3D object, produces a\r\n\t * transform value in the Vector3D object's fourth element (the w\r\n\t * property). Dividing the Vector3D object's other elements by the\r\n\t * transform value then produces a projected Vector3D object. You can\r\n\t * use the <code>Vector3D.project()</code> method to divide the first\r\n\t * three elements of a Vector3D object by its fourth element.</p>\r\n\t */\r\n\tpublic w:number;\r\n\r\n\t/**\r\n\t * The length, magnitude, of the current Vector3D object from the\r\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\r\n\t * property is ignored. A unit vector has a length or magnitude of\r\n\t * one.\r\n\t */\r\n\tpublic get length():number\r\n\t{\r\n\t\treturn Math.sqrt(this.lengthSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * The square of the length of the current Vector3D object, calculated\r\n\t * using the x, y, and z properties. The w property is ignored. Use the\r\n\t * <code>lengthSquared()</code> method whenever possible instead of the\r\n\t * slower <code>Math.sqrt()</code> method call of the\r\n\t * <code>Vector3D.length()</code> method.\r\n\t */\r\n\tpublic get lengthSquared():number\r\n\t{\r\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an instance of a Vector3D object. If you do not specify a\r\n\t * parameter for the constructor, a Vector3D object is created with\r\n\t * the elements (0,0,0,0).\r\n\t *\r\n\t * @param x The first element, such as the x coordinate.\r\n\t * @param y The second element, such as the y coordinate.\r\n\t * @param z The third element, such as the z coordinate.\r\n\t * @param w An optional element for additional data such as the angle\r\n\t *          of rotation.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the value of the x, y, and z elements of the current Vector3D\r\n\t * object to the values of the x, y, and z elements of another Vector3D\r\n\t * object. The <code>add()</code> method does not change the current\r\n\t * Vector3D object. Instead, it returns a new Vector3D object with\r\n\t * the new values.\r\n\t *\r\n\t * <p>The result of adding two vectors together is a resultant vector.\r\n\t * One way to visualize the result is by drawing a vector from the\r\n\t * origin or tail of the first vector to the end or head of the second\r\n\t * vector. The resultant vector is the distance between the origin\r\n\t * point of the first vector and the end point of the second vector.\r\n\t * </p>\r\n\t */\r\n\tpublic add(a:Vector3D):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the angle in radians between two vectors. The returned angle\r\n\t * is the smallest radian the first Vector3D object rotates until it\r\n\t * aligns with the second Vector3D object.\r\n\t *\r\n\t * <p>The <code>angleBetween()</code> method is a static method. You\r\n\t * can use it directly as a method of the Vector3D class.</p>\r\n\t *\r\n\t * <p>To convert a degree to a radian, you can use the following\r\n\t * formula:</p>\r\n\t *\r\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\r\n\t *\r\n\t * @param a The first Vector3D object.\r\n\t * @param b The second Vector3D object.\r\n\t * @returns The angle between two Vector3D objects.\r\n\t */\r\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\r\n\t{\r\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Vector3D object that is an exact copy of the current\r\n\t * Vector3D object.\r\n\t *\r\n\t * @returns A new Vector3D object that is a copy of the current\r\n\t * Vector3D object.\r\n\t */\r\n\tpublic clone():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\r\n\t}\r\n\r\n\tpublic static combine(a:Vector3D, b:Vector3D, ascl:number, bscl:number):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(a.x*ascl + b.x*bscl, a.y*ascl + b.y*bscl, a.z*ascl + b.z*bscl);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of vector data from the source Vector3D object into the\r\n\t * calling Vector3D object.\r\n\t *\r\n\t * @param src The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(src:Vector3D):void\r\n\t{\r\n\t\tthis.x = src.x;\r\n\t\tthis.y = src.y;\r\n\t\tthis.z = src.z;\r\n\t\tthis.w = src.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Vector3D object that is perpendicular (at a right\r\n\t * angle) to the current Vector3D and another Vector3D object. If the\r\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\r\n\t * Vector3D objects are parallel to each other.\r\n\t *\r\n\t * <p>You can use the normalized cross product of two vertices of a\r\n\t * polygon surface with the normalized vector of the camera or eye\r\n\t * viewpoint to get a dot product. The value of the dot product can\r\n\t * identify whether a surface of a three-dimensional object is hidden\r\n\t * from the viewpoint.</p>\r\n\t *\r\n\t * @param a A second Vector3D object.\r\n\t * @returns A new Vector3D object that is perpendicular to the current\r\n\t *          Vector3D object and the Vector3D object specified as the\r\n\t *          parameter.\r\n\t */\r\n\tpublic crossProduct(a:Vector3D, t:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (t == null)\r\n\t\t\tt = new Vector3D();\r\n\r\n\t\tt.x = this.y*a.z - this.z*a.y;\r\n\t\tt.y = this.z*a.x - this.x*a.z;\r\n\t\tt.z = this.x*a.y - this.y*a.x;\r\n\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * Decrements the value of the x, y, and z elements of the current\r\n\t * Vector3D object by the values of the x, y, and z elements of\r\n\t * specified Vector3D object. Unlike the\r\n\t * <code>Vector3D.subtract()</code> method, the\r\n\t * <code>decrementBy()</code> method changes the current Vector3D\r\n\t * object and does not return a new Vector3D object.\r\n\t *\r\n\t * @param a The Vector3D object containing the values to subtract from\r\n\t *          the current Vector3D object.\r\n\t */\r\n\tpublic decrementBy(a:Vector3D):void\r\n\t{\r\n\t\tthis.x -= a.x;\r\n\t\tthis.y -= a.y;\r\n\t\tthis.z -= a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the distance between two Vector3D objects. The\r\n\t * <code>distance()</code> method is a static method. You can use it\r\n\t * directly as a method of the Vector3D export class to get the Euclidean\r\n\t * distance between two three-dimensional points.\r\n\t *\r\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\r\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\r\n\t * @returns The distance between two Vector3D objects.\r\n\t */\r\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\r\n\t{\r\n\t\tvar x:number = (pt1.x - pt2.x);\r\n\t\tvar y:number = (pt1.y - pt2.y);\r\n\t\tvar z:number = (pt1.z - pt2.z);\r\n\t\treturn Math.sqrt(x*x + y*y + z*z);\r\n\t}\r\n\r\n\t/**\r\n\t * If the current Vector3D object and the one specified as the\r\n\t * parameter are unit vertices, this method returns the cosine of the\r\n\t * angle between the two vertices. Unit vertices are vertices that\r\n\t * point to the same direction but their length is one. They remove the\r\n\t * length of the vector as a factor in the result. You can use the\r\n\t * <code>normalize()</code> method to convert a vector to a unit\r\n\t * vector.\r\n\t *\r\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\r\n\t * vertices. It is also used in backface culling or lighting\r\n\t * calculations. Backface culling is a procedure for determining which\r\n\t * surfaces are hidden from the viewpoint. You can use the normalized\r\n\t * vertices from the camera, or eye, viewpoint and the cross product of\r\n\t * the vertices of a polygon surface to get the dot product. If the dot\r\n\t * product is less than zero, then the surface is facing the camera or\r\n\t * the viewer. If the two unit vertices are perpendicular to each\r\n\t * other, they are orthogonal and the dot product is zero. If the two\r\n\t * vertices are parallel to each other, the dot product is one.</p>\r\n\t *\r\n\t * @param a The second Vector3D object.\r\n\t * @returns A scalar which is the dot product of the current Vector3D\r\n\t *          object and the specified Vector3D object.\r\n\t *\r\n\t * @see away.geom.Vector3D#crossProduct()\r\n\t * @see away.geom.Vector3D#normalize()\r\n\t */\r\n\tpublic dotProduct(a:Vector3D):number\r\n\t{\r\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether two Vector3D objects are equal by comparing the\r\n\t * x, y, and z elements of the current Vector3D object with a\r\n\t * specified Vector3D object. If the values of these elements are the\r\n\t * same, the two Vector3D objects are equal. If the second optional\r\n\t * parameter is set to true, all four elements of the Vector3D objects,\r\n\t * including the w property, are compared.\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t * @param toCompare The Vector3D object to be compared with the current\r\n\t *                  Vector3D object.\r\n\t * @param allFour   An optional parameter that specifies whether the w\r\n\t *                  property of the Vector3D objects is used in the\r\n\t *                  comparison.\r\n\t * @returns A value of true if the specified Vector3D object is equal\r\n\t *          to the current Vector3D object; false if it is not equal.\r\n\t */\r\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the value of the x, y, and z elements of the current\r\n\t * Vector3D object by the values of the x, y, and z elements of a\r\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\r\n\t * method, the <code>incrementBy()</code> method changes the current\r\n\t * Vector3D object and does not return a new Vector3D object.\r\n\t *\r\n\t * @param a The Vector3D object to be added to the current Vector3D\r\n\t *          object.\r\n\t */\r\n\tpublic incrementBy(a:Vector3D):void\r\n\t{\r\n\t\tthis.x += a.x;\r\n\t\tthis.y += a.y;\r\n\t\tthis.z += a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Compares the elements of the current Vector3D object with the\r\n\t * elements of a specified Vector3D object to determine whether they\r\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\r\n\t * value of all the elements of the two vertices are equal, or the\r\n\t * result of the comparison is within the tolerance range. The\r\n\t * difference between two elements must be less than the number\r\n\t * specified as the tolerance parameter. If the third optional\r\n\t * parameter is set to <code>true</code>, all four elements of the\r\n\t * Vector3D objects, including the <code>w</code> property, are\r\n\t * compared. Otherwise, only the x, y, and z elements are included in\r\n\t * the comparison.\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t * @param toCompare The Vector3D object to be compared with the current\r\n\t *                  Vector3D object.\r\n\t * @param tolerance A number determining the tolerance factor. If the\r\n\t *                  difference between the values of the Vector3D\r\n\t *                  element specified in the toCompare parameter and\r\n\t *                  the current Vector3D element is less than the\r\n\t *                  tolerance number, the two values are considered\r\n\t *                  nearly equal.\r\n\t * @param allFour   An optional parameter that specifies whether the w\r\n\t *                  property of the Vector3D objects is used in the\r\n\t *                  comparison.\r\n\t * @returns A value of true if the specified Vector3D object is nearly\r\n\t *          equal to the current Vector3D object; false if it is not\r\n\t *          equal.\r\n\t *\r\n\t * @see away.geom.Vector3D#equals()\r\n\t */\r\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\r\n\t{\r\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the current Vector3D object to its inverse. The inverse object\r\n\t * is also considered the opposite of the original object. The value of\r\n\t * the x, y, and z properties of the current Vector3D object is changed\r\n\t * to -x, -y, and -z.\r\n\t */\r\n\tpublic negate():void\r\n\t{\r\n\t\tthis.x = -this.x;\r\n\t\tthis.y = -this.y;\r\n\t\tthis.z = -this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a Vector3D object to a unit vector by dividing the first\r\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\r\n\t * are vertices that have a direction but their length is one. They\r\n\t * simplify vector calculations by removing length as a factor.\r\n\t */\r\n\t/**\r\n\t * Scales the line segment between(0,0) and the current point to a set\r\n\t * length.\r\n\t *\r\n\t * @param thickness The scaling value. For example, if the current\r\n\t *                  Vector3D object is (0,3,4), and you normalize it to\r\n\t *                  1, the point returned is at(0,0.6,0.8).\r\n\t */\r\n\tpublic normalize(thickness:number = 1):void\r\n\t{\r\n\t\tif (this.length != 0) {\r\n\t\t\tvar invLength = thickness/this.length;\r\n\t\t\tthis.x *= invLength;\r\n\t\t\tthis.y *= invLength;\r\n\t\t\tthis.z *= invLength;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\r\n\t * <code>z</code> properties of the current Vector3D object by the\r\n\t * value of its <code>w</code> property.\r\n\t *\r\n\t * <p>If the current Vector3D object is the result of multiplying a\r\n\t * Vector3D object by a projection Matrix3D object, the w property can\r\n\t * hold the transform value. The <code>project()</code> method then can\r\n\t * complete the projection by dividing the elements by the\r\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\r\n\t * property to create a projection Matrix3D object.</p>\r\n\t */\r\n\tpublic project():void\r\n\t{\r\n\t\tthis.x /= this.w;\r\n\t\tthis.y /= this.w;\r\n\t\tthis.z /= this.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\r\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\r\n\t * number specified in the parameter. For example, if the vector is\r\n\t * scaled by ten, the result is a vector that is ten times longer. The\r\n\t * scalar can also change the direction of the vector. Multiplying the\r\n\t * vector by a negative number reverses its direction.\r\n\t *\r\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\r\n\r\n\t */\r\n\tpublic scaleBy(s:number):void\r\n\t{\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\t\tthis.z *= s;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Vector3D to the specified values\r\n\t *\r\n\t * @param xa The first element, such as the x coordinate.\r\n\t * @param ya The second element, such as the y coordinate.\r\n\t * @param za The third element, such as the z coordinate.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, za:number):void\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.z = za;\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the value of the x, y, and z elements of the current\r\n\t * Vector3D object from the values of the x, y, and z elements of\r\n\t * another Vector3D object. The <code>subtract()</code> method does not\r\n\t * change the current Vector3D object. Instead, this method returns a\r\n\t * new Vector3D object with the new values.\r\n\t *\r\n\t * @param a The Vector3D object to be subtracted from the current\r\n\t *          Vector3D object.\r\n\t * @returns A new Vector3D object that is the difference between the\r\n\t *          current Vector3D and the specified Vector3D object.\r\n\t *\r\n\t * @see away.geom.Vector3D#decrementBy()\r\n\t */\r\n\tpublic subtract(a:Vector3D):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a string representation of the current Vector3D object. The\r\n\t * string contains the values of the x, y, and z properties.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\r\n\t}\r\n}",
    "export {Box}\t\t\t\t\t\t\tfrom \"./geom/Box\";\r\nexport {ColorTransform}\t\t\t\t\tfrom \"./geom/ColorTransform\";\r\nexport {MathConsts}\t\t\t\t\t\tfrom \"./geom/MathConsts\";\r\nexport {Matrix}\t\t\t\t\t\t\tfrom \"./geom/Matrix\";\r\nexport {Matrix3D}\t\t\t\t\t\tfrom \"./geom/Matrix3D\";\r\nexport {Matrix3DUtils}\t\t\t\t\tfrom \"./geom/Matrix3DUtils\";\r\nexport {Orientation3D}\t\t\t\t\tfrom \"./geom/Orientation3D\";\r\nexport {Plane3D}\t\t\t\t\t\tfrom \"./geom/Plane3D\";\r\nexport {PlaneClassification}\t\t\tfrom \"./geom/PlaneClassification\";\r\nexport {Point}\t\t\t\t\t\t\tfrom \"./geom/Point\";\r\nexport {PoissonLookup}\t\t\t\t\tfrom \"./geom/PoissonLookup\";\r\nexport {Quaternion}\t\t\t\t\t\tfrom \"./geom/Quaternion\";\r\nexport {Rectangle}\t\t\t\t\t\tfrom \"./geom/Rectangle\";\r\nexport {Sphere}\t\t\t\t\t\t\tfrom \"./geom/Sphere\";\r\nexport {Vector3D}\t\t\t\t\t\tfrom \"./geom/Vector3D\";",
    "import {Image2D}\t\t\t\t\tfrom \"../image/Image2D\";\r\nimport {BlendMode}\t\t\t\tfrom \"../image/BlendMode\";\r\nimport {ColorTransform}\t\t\tfrom \"../geom/ColorTransform\";\r\nimport {Matrix}\t\t\t\t\tfrom \"../geom/Matrix\";\r\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\r\nimport {Point}\t\t\t\t\tfrom \"../geom/Point\";\r\nimport {ByteArray}\t\t\t\tfrom \"../utils/ByteArray\";\r\nimport {ColorUtils}\t\t\t\tfrom \"../utils/ColorUtils\";\r\nimport {BitmapImageUtils}\t\t\tfrom \"../utils/BitmapImageUtils\";\r\nimport {IImageCanvas}\t\t\t\tfrom \"../image/IImageCanvas\";\r\nimport {CPUCanvas}\t\t\t\tfrom \"../image/CPUCanvas\";\r\n/**\r\n * The BitmapImage2D export class lets you work with the data(pixels) of a Bitmap\r\n * object. You can use the methods of the BitmapImage2D export class to create\r\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\r\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\r\n * image that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes.\r\n *\r\n * <p>This export class lets you separate bitmap rendering operations from the\r\n * internal display updating routines of flash. By manipulating a\r\n * BitmapImage2D object directly, you can create complex images without incurring\r\n * the per-frame overhead of constantly redrawing the content from vector\r\n * data.</p>\r\n *\r\n * <p>The methods of the BitmapImage2D export class support effects that are not\r\n * available through the filters available to non-bitmap display objects.</p>\r\n *\r\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\r\n * represent either a fully opaque bitmap or a transparent bitmap that\r\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\r\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\r\n * of a single pixel in the bitmap.</p>\r\n *\r\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\r\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\r\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\r\n * represents the alpha channel value, followed by red, green, and blue.)</p>\r\n *\r\n * <p>The four channels(alpha, red, green, and blue) are represented as\r\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\r\n * method or the <code>DisplacementMapFilter.componentX</code> and\r\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\r\n * are represented by the following constants in the BitmapImage2DChannel\r\n * class:</p>\r\n *\r\n * <ul>\r\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n * </ul>\r\n *\r\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\r\n * <code>bitmapData</code> property of the Bitmap object.</p>\r\n *\r\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\r\n * <code>Graphics.beginBitmapFill()</code> method.</p>\r\n *\r\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\r\n * using the <code>flash.display.Tilesheet</code> class.</p>\r\n *\r\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\r\n * is 8,191 pixels in width or height, and the total number of pixels cannot\r\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\r\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\r\n * is 2,880 pixels in height and 2,880 in width.</p>\r\n */\r\nexport class BitmapImage2D extends Image2D\r\n{\r\n\tpublic static assetType:string = \"[image BitmapImage2D]\";\r\n\r\n\tprivate _imageCanvas:IImageCanvas;\r\n\tprivate _context:CanvasRenderingContext2D;\r\n\tprivate _imageData:ImageData;\r\n\tprivate _imageDataDirty:boolean;\r\n\tprivate _transparent:boolean;\r\n\tprivate _locked:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BitmapImage2D.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\r\n\t * set this value only when you construct a BitmapImage2D object by passing in\r\n\t * <code>true</code> for the <code>transparent</code> parameter of the\r\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\r\n\t * whether it supports per-pixel transparency by determining if the value of\r\n\t * the <code>transparent</code> property is <code>true</code>.\r\n\t */\r\n\tpublic get transparent():boolean\r\n\t{\r\n\t\treturn this._transparent;\r\n\t}\r\n\r\n\tpublic set transparent(value:boolean)\r\n\t{\r\n\t\tthis._transparent = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a BitmapImage2D object with a specified width and height. If you\r\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\r\n\t * the bitmap is set to that color.\r\n\t *\r\n\t * <p>By default, the bitmap is created as transparent, unless you pass\r\n\t * the value <code>false</code> for the transparent parameter. After you\r\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\r\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\r\n\t * information. If you define the bitmap as transparent, every pixel uses 32\r\n\t * bits of color channel information, including an alpha transparency\r\n\t * channel.</p>\r\n\t *\r\n\t * @param width       The width of the bitmap image in pixels.\r\n\t * @param height      The height of the bitmap image in pixels.\r\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\r\n\t *                    transparency. The default value is <code>true</code>\r\n\t *                    (transparent). To create a fully transparent bitmap,\r\n\t *                    set the value of the <code>transparent</code>\r\n\t *                    parameter to <code>true</code> and the value of the\r\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\r\n\t *                    0). Setting the <code>transparent</code> property to\r\n\t *                    <code>false</code> can result in minor improvements\r\n\t *                    in rendering performance.\r\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\r\n\t *                    bitmap image area. The default value is\r\n\t *                    0xFFFFFFFF(solid white).\r\n\t */\r\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null, powerOfTwo:boolean = true)\r\n\t{\r\n\t\tsuper(width, height, powerOfTwo);\r\n\r\n\t\tthis._transparent = transparent;\r\n\t\tif(document) {\r\n\t\t\tthis._imageCanvas = <IImageCanvas> document.createElement(\"canvas\");\r\n\t\t}else {\r\n\t\t\tthis._imageCanvas = new CPUCanvas();\r\n\t\t}\r\n\t\tthis._imageCanvas.width = width;\r\n\t\tthis._imageCanvas.height = height;\r\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\r\n\r\n\t\tif (fillColor != null)\r\n\t\t\tthis.fillRect(this._rect, fillColor);\r\n\t}\r\n\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tif (!this._imageDataDirty) {\r\n\t\t\tthis._imageDataDirty = true;\r\n\r\n\t\t\tsuper.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\r\n\t * with an exact copy of the contained bitmap.\r\n\t *\r\n\t * @return A new BitmapImage2D object that is identical to the original.\r\n\t */\r\n\tpublic clone():BitmapImage2D\r\n\t{\r\n\t\tvar t:BitmapImage2D = new BitmapImage2D(this.width, this.height, this.transparent, null, this.powerOfTwo);\r\n\t\tt.draw(this);\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the color values in a specified area of a bitmap image by using a\r\n\t * <code>ColorTransform</code> object. If the rectangle matches the\r\n\t * boundaries of the bitmap image, this method transforms the color values of\r\n\t * the entire image.\r\n\t *\r\n\t * @param rect           A Rectangle object that defines the area of the\r\n\t *                       image in which the ColorTransform object is applied.\r\n\t * @param colorTransform A ColorTransform object that describes the color\r\n\t *                       transformation values to apply.\r\n\t */\r\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform):void\r\n\t{\r\n\t\tif (!this._imageData)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar data:Uint8ClampedArray = this._imageData.data;\r\n\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\r\n\r\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\r\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\r\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\r\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Transfers data from one channel of another BitmapImage2D object or the\r\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\r\n\t * All of the data in the other channels in the destination BitmapImage2D object\r\n\t * are preserved.\r\n\t *\r\n\t * <p>The source channel value and destination channel value can be one of\r\n\t * following values: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n\t * </ul>\r\n\t *\r\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\r\n\t *                         can be a different BitmapImage2D object or it can\r\n\t *                         refer to the current BitmapImage2D object.\r\n\t * @param sourceRect       The source Rectangle object. To copy only channel\r\n\t *                         data from a smaller area within the bitmap,\r\n\t *                         specify a source rectangle that is smaller than\r\n\t *                         the overall size of the BitmapImage2D object.\r\n\t * @param destPoint        The destination Point object that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new channel data is placed. To copy only\r\n\t *                         channel data from one area to a different area in\r\n\t *                         the destination image, specify a point other than\r\n\t *                        (0,0).\r\n\t * @param sourceChannel    The source channel. Use a value from the\r\n\t *                         BitmapImage2DChannel class\r\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\r\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n\t * @param destChannel      The destination channel. Use a value from the\r\n\t *                         BitmapImage2DChannel class\r\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\r\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\r\n\t */\r\n\tpublic copyChannel(sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number):void\r\n\t{\r\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\r\n\r\n\t\tif (!this._imageData)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar sourceData:Float32Array = sourceBitmap.getImageData().data;\r\n\t\tvar destData:Uint8ClampedArray = this._imageData.data;\r\n\r\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\r\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\r\n\r\n\t\tvar i:number, j:number, sourceIndex:number, destIndex:number;\r\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\r\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\r\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\r\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\r\n\r\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a fast routine to perform pixel manipulation between images with\r\n\t * no stretching, rotation, or color effects. This method copies a\r\n\t * rectangular area of a source image to a rectangular area of the same size\r\n\t * at the destination point of the destination BitmapImage2D object.\r\n\t *\r\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\r\n\t * parameters, you can use a secondary image as an alpha source for the\r\n\t * source image. If the source image has alpha data, both sets of alpha data\r\n\t * are used to composite pixels from the source image to the destination\r\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\r\n\t * image that corresponds to the upper-left corner of the source rectangle.\r\n\t * Any pixels outside the intersection of the source image and alpha image\r\n\t * are not copied to the destination image.</p>\r\n\t *\r\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\r\n\t * channel is used when a transparent image is copied onto another\r\n\t * transparent image. To copy pixels with the alpha channel data, set the\r\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\r\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\r\n\t *\r\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\r\n\t *                         The source image can be a different BitmapImage2D\r\n\t *                         instance, or it can refer to the current\r\n\t *                         BitmapImage2D instance.\r\n\t * @param sourceRect       A rectangle that defines the area of the source\r\n\t *                         image to use as input.\r\n\t * @param destPoint        The destination point that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new pixels are placed.\r\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\r\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\r\n\t *                         that corresponds to the upper-left corner of the\r\n\t *                         <code>sourceRect</code> parameter.\r\n\t * @param mergeAlpha       To use the alpha channel, set the value to\r\n\t *                         <code>true</code>. To copy pixels with no alpha\r\n\t *                         channel, set the value to <code>false</code>.\r\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\r\n\t */\r\n\tpublic copyPixels(source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(source:HTMLElement, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(source:any, sourceRect:Rectangle, destRect:Rectangle):void\r\n\t{\r\n\t\tif (source instanceof BitmapImage2D)\r\n\t\t\tsource = source.getCanvas();\r\n\r\n\t\tif (this._locked && this._imageData)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\r\n\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\r\n\r\n\t\tthis._imageData = null;\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Frees memory that is used to store the BitmapImage2D object.\r\n\t *\r\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\r\n\t * and height of the image are set to 0. All subsequent calls to methods or\r\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\r\n\t * </p>\r\n\t *\r\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\r\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\r\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\r\n\t * object is no longer usable and an exception may be thrown if\r\n\t * you call functions on the BitmapImage2D object. However,\r\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\r\n\t * object(approximately 128 bytes); the memory occupied by the actual\r\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\r\n\t * collected by the garbage collector.</p>\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._context = null;\r\n\t\tthis._imageCanvas = null;\r\n\t\tthis._imageData = null;\r\n\t\tthis._rect = null;\r\n\t\tthis._transparent = null;\r\n\t\tthis._locked = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the <code>source</code> display object onto the bitmap image, using\r\n\t * the NME software renderer. You can specify <code>matrix</code>,\r\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\r\n\t * <code>clipRect</code> parameter to control how the rendering performs.\r\n\t * Optionally, you can specify whether the bitmap should be smoothed when\r\n\t * scaled(this works only if the source object is a BitmapImage2D object).\r\n\t *\r\n\t * <p>The source display object does not use any of its applied\r\n\t * transformations for this call. It is treated as it exists in the library\r\n\t * or file, with no matrix transform, no color transform, and no blend mode.\r\n\t * To draw a display object(such as a movie clip) by using its own transform\r\n\t * properties, you can copy its <code>transform</code> property object to the\r\n\t * <code>transform</code> property of the Bitmap object that uses the\r\n\t * BitmapImage2D object.</p>\r\n\t *\r\n\t * @param source         The display object or BitmapImage2D object to draw to\r\n\t *                       the BitmapImage2D object.(The DisplayObject and\r\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\r\n\t *                       interface.)\r\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\r\n\t *                       the coordinates of the bitmap. If you do not want to\r\n\t *                       apply a matrix transformation to the image, set this\r\n\t *                       parameter to an identity matrix, created with the\r\n\t *                       default <code>new Matrix()</code> constructor, or\r\n\t *                       pass a <code>null</code> value.\r\n\t * @param colorTransform A ColorTransform object that you use to adjust the\r\n\t *                       color values of the bitmap. If no object is\r\n\t *                       supplied, the bitmap image's colors are not\r\n\t *                       transformed. If you must pass this parameter but you\r\n\t *                       do not want to transform the image, set this\r\n\t *                       parameter to a ColorTransform object created with\r\n\t *                       the default <code>new ColorTransform()</code>\r\n\t *                       constructor.\r\n\t * @param blendMode      A string value, from the flash.display.BlendMode\r\n\t *                       class, specifying the blend mode to be applied to\r\n\t *                       the resulting bitmap.\r\n\t * @param clipRect       A Rectangle object that defines the area of the\r\n\t *                       source object to draw. If you do not supply this\r\n\t *                       value, no clipping occurs and the entire source\r\n\t *                       object is drawn.\r\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\r\n\t *                       object is smoothed when scaled or rotated, due to a\r\n\t *                       scaling or rotation in the <code>matrix</code>\r\n\t *                       parameter. The <code>smoothing</code> parameter only\r\n\t *                       applies if the <code>source</code> parameter is a\r\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\r\n\t *                       to <code>false</code>, the rotated or scaled\r\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\r\n\t *                       example, the following two images use the same\r\n\t *                       BitmapImage2D object for the <code>source</code>\r\n\t *                       parameter, but the <code>smoothing</code> parameter\r\n\t *                       is set to <code>true</code> on the left and\r\n\t *                       <code>false</code> on the right:\r\n\t *\r\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\r\n\t *                       to <code>true</code> takes longer than doing so with\r\n\t *                       <code>smoothing</code> set to\r\n\t *                       <code>false</code>.</p>\r\n\t * @throws ArgumentError The <code>source</code> parameter is not a\r\n\t *                       BitmapImage2D or DisplayObject object.\r\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\r\n\t *                       object.\r\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\r\n\t *                       Sprite or MovieClip object) all of its child objects\r\n\t *                       do not come from the same domain as the caller, or\r\n\t *                       are not in a content that is accessible to the\r\n\t *                       caller by having called the\r\n\t *                       <code>Security.allowDomain()</code> method. This\r\n\t *                       restriction does not apply to AIR content in the\r\n\t *                       application security sandbox.\r\n\t */\r\n\tpublic draw(source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean):void\r\n\t{\r\n\t\tif (source instanceof BitmapImage2D && source.getCanvas())\r\n\t\t\tsource = source.getCanvas();\r\n\r\n\t\tif (this._locked && this._imageData)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\r\n\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\r\n\t\tthis._imageData = null;\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Fills a rectangular area of pixels with a specified ARGB color.\r\n\t *\r\n\t * @param rect  The rectangular area to fill.\r\n\t * @param color The ARGB color value that fills the area. ARGB colors are\r\n\t *              often specified in hexadecimal format; for example,\r\n\t *              0xFF336699.\r\n\t * @throws TypeError The rect is null.\r\n\t */\r\n\tpublic fillRect(rect:Rectangle, color:number):void\r\n\t{\r\n\t\tif (this._locked && this._imageData)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\r\n\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\r\n\r\n\t\tthis._imageData = null;\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\r\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\r\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\r\n\t * alpha information is returned.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\r\n\t *         method returns 0.\r\n\t */\r\n\tpublic getPixel(x, y):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tif (!this._imageData)\r\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\t\tvar index:number = (x + y*this._imageData.width)*4;\r\n\r\n\t\t\tr = this._imageData.data[index + 0];\r\n\t\t\tg = this._imageData.data[index + 1];\r\n\t\t\tb = this._imageData.data[index + 2];\r\n\t\t\ta = this._imageData.data[index + 3];\r\n\t\t}\r\n\r\n\t\t//returns black if fully transparent\r\n\t\tif (!a)\r\n\t\t\treturn 0x0;\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\r\n\t * This method is similar to the <code>getPixel()</code> method, which\r\n\t * returns an RGB color without alpha channel data.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\r\n\t *         returned.\r\n\t */\r\n\tpublic getPixel32(x, y):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tif (!this._imageData)\r\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\t\tvar index:number = (x + y*this._imageData.width)*4;\r\n\r\n\t\t\tr = this._imageData.data[index + 0];\r\n\t\t\tg = this._imageData.data[index + 1];\r\n\t\t\tb = this._imageData.data[index + 2];\r\n\t\t\ta = this._imageData.data[index + 3];\r\n\t\t}\r\n\r\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\tpublic getPixelData(x, y, imagePixel:Uint8ClampedArray):void\r\n\t{\r\n\t\tif (!this._imageData)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar index:number = (x + y*this._imageData.width)*4;\r\n\r\n\t\timagePixel[0] = this._imageData.data[index + 0];\r\n\t\timagePixel[1] = this._imageData.data[index + 1];\r\n\t\timagePixel[2] = this._imageData.data[index + 2];\r\n\t\timagePixel[3] = this._imageData.data[index + 3];\r\n\t}\r\n\r\n\tpublic setPixelData(x, y, imagePixel:Uint8ClampedArray):void\r\n\t{\r\n\t\tif (!this._imageData)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar index:number = (x + y*this._imageData.width)*4;\r\n\r\n\t\tthis._imageData.data[index + 0] = imagePixel[0];\r\n\t\tthis._imageData.data[index + 1] = imagePixel[1];\r\n\t\tthis._imageData.data[index + 2] = imagePixel[2];\r\n\t\tthis._imageData.data[index + 3] = imagePixel[3];\r\n\t\t\r\n\t\tthis.invalidate();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\r\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\r\n\t * changes. To improve performance, use this method along with the\r\n\t * <code>unlock()</code> method before and after numerous calls to the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\r\n\t *\r\n\t */\r\n\tpublic lock():void\r\n\t{\r\n\t\tif (this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\r\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\r\n\t * in the Array is expected to be 32-bit ARGB pixel values.\r\n\t *\r\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\r\n\t *                    object.\r\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\r\n\t *                    values to be used in the rectangular region.\r\n\t * @throws RangeError The vector array is not large enough to read all the\r\n\t *                    pixel data.\r\n\t */\r\n\tpublic setArray(rect:Rectangle, inputArray:Array<number>):void\r\n\t{\r\n\t\tif (!this._imageData)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar i:number, j:number, index:number, argb:number[];\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageData.width)*4;\r\n\r\n\t\t\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\t\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\t\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\t\t\tthis._imageData.data[index + 3] = argb[0];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\r\n\t * value of the image pixel is preserved during this operation. The value of\r\n\t * the RGB color parameter is treated as an unmultiplied color value.\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapImage2D instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting RGB color for the pixel.\r\n\t */\r\n\tpublic setPixel(x:number, y:number, color:number):void\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._imageData)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar index:number = (x + y*this._imageData.width)*4;\r\n\r\n\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\tthis._imageData.data[index + 3] = 0xFF;\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the color and alpha transparency values of a single pixel of a\r\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\r\n\t * method; the main difference is that the <code>setPixel32()</code> method\r\n\t * takes an ARGB color value that contains alpha channel information.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapImage2D instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\r\n\t *              opaque(not transparent), the alpha transparency portion of\r\n\t *              this color value is ignored.\r\n\t */\r\n\tpublic setPixel32(x, y, color:number):void\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._imageData)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar index:number = (x + y*this._imageData.width)*4;\r\n\r\n\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\tthis._imageData.data[index + 3] = argb[0];\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a byte array into a rectangular region of pixel data. For each\r\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\r\n\t * the return value is written into the pixel. If the byte array ends before\r\n\t * the full rectangle is written, the function returns. The data in the byte\r\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\r\n\t * on the byte array before or after the pixels are read.\r\n\t *\r\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\r\n\t *                       object.\r\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\r\n\t *                       unmultiplied pixel values to be used in the\r\n\t *                       rectangular region.\r\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\r\n\t *                   enough data to fill the area of the <code>rect</code>\r\n\t *                   rectangle. The method fills as many pixels as possible\r\n\t *                   before throwing the exception.\r\n\t * @throws TypeError The rect or inputByteArray are null.\r\n\t */\r\n\tpublic setPixels(rect:Rectangle, input:Uint8ClampedArray):void\r\n\t{\r\n\t\tif (!this._imageData)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar i:number;\r\n\t\tvar w:number = this._imageData.width;\r\n\t\tfor (i = 0; i < rect.height; ++i)\r\n\t\t\tthis._imageData.data.set(input.subarray(i*w*4, (i + 1)*w*4), (rect.x + (i + rect.y)*w)*4);\r\n\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\r\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\r\n\t * To improve performance, use this method along with the <code>lock()</code>\r\n\t * method before and after numerous calls to the <code>setPixel()</code> or\r\n\t * <code>setPixel32()</code> method.\r\n\t *\r\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\r\n\t *                   you do not specify a value for this parameter, the\r\n\t *                   entire area of the BitmapImage2D object is considered\r\n\t *                   changed.\r\n\t */\r\n\tpublic unlock():void\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = false;\r\n\r\n\t\tif (this._imageData)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {ImageData}\r\n\t */\r\n\tpublic getImageData():ImageData\r\n\t{\r\n\t\tif (!this._imageData)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\treturn this._imageData;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {HTMLCanvasElement}\r\n\t */\r\n\tpublic getCanvas():HTMLCanvasElement\r\n\t{\r\n\t\treturn <HTMLCanvasElement> this._imageCanvas;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(width:number, height:number):void\r\n\t{\r\n\t\tif (this._locked)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\r\n\t\tif(this._imageCanvas) {\r\n\t\t\tthis._imageCanvas.width = width;\r\n\t\t\tthis._imageCanvas.height = height;\r\n\t\t}\r\n\t\t\r\n\t\tsuper._setSize(width, height);\r\n\r\n\t\tif (this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t}\r\n}",
    "export class BitmapImageChannel\r\n{\r\n\tpublic static ALPHA:number /*uint*/ = 8;\r\n\tpublic static BLUE:number /*uint*/ = 4;\r\n\tpublic static GREEN:number /*uint*/ = 2;\r\n\tpublic static RED:number /*uint*/ = 1;\r\n}",
    "import {BitmapImage2D}\t\t\tfrom \"../image/BitmapImage2D\";\r\nimport {ImageCube}\t\t\t\tfrom \"../image/ImageCube\";\r\nimport {BlendMode}\t\t\t\tfrom \"../image/BlendMode\";\r\nimport {ColorTransform}\t\t\tfrom \"../geom/ColorTransform\";\r\nimport {Matrix}\t\t\t\t\tfrom \"../geom/Matrix\";\r\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\r\nimport {Point}\t\t\t\t\tfrom \"../geom/Point\";\r\nimport {ByteArray}\t\t\t\tfrom \"../utils/ByteArray\";\r\nimport {ColorUtils}\t\t\t\tfrom \"../utils/ColorUtils\";\r\nimport {BitmapImageUtils}\t\t\tfrom \"../utils/BitmapImageUtils\";\r\n\r\n/**\r\n * The BitmapImage2D export class lets you work with the data(pixels) of a Bitmap\r\n * object. You can use the methods of the BitmapImage2D export class to create\r\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\r\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\r\n * image that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes.\r\n *\r\n * <p>This export class lets you separate bitmap rendering operations from the\r\n * internal display updating routines of flash. By manipulating a\r\n * BitmapImage2D object directly, you can create complex images without incurring\r\n * the per-frame overhead of constantly redrawing the content from vector\r\n * data.</p>\r\n *\r\n * <p>The methods of the BitmapImage2D export class support effects that are not\r\n * available through the filters available to non-bitmap display objects.</p>\r\n *\r\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\r\n * represent either a fully opaque bitmap or a transparent bitmap that\r\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\r\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\r\n * of a single pixel in the bitmap.</p>\r\n *\r\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\r\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\r\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\r\n * represents the alpha channel value, followed by red, green, and blue.)</p>\r\n *\r\n * <p>The four channels(alpha, red, green, and blue) are represented as\r\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\r\n * method or the <code>DisplacementMapFilter.componentX</code> and\r\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\r\n * are represented by the following constants in the BitmapImage2DChannel\r\n * class:</p>\r\n *\r\n * <ul>\r\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n * </ul>\r\n *\r\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\r\n * <code>bitmapData</code> property of the Bitmap object.</p>\r\n *\r\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\r\n * <code>Graphics.beginBitmapFill()</code> method.</p>\r\n *\r\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\r\n * using the <code>flash.display.Tilesheet</code> class.</p>\r\n *\r\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\r\n * is 8,191 pixels in width or height, and the total number of pixels cannot\r\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\r\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\r\n * is 2,880 pixels in height and 2,880 in width.</p>\r\n */\r\nexport class BitmapImageCube extends ImageCube\r\n{\r\n\tpublic static assetType:string = \"[image BitmapImageCube]\";\r\n\r\n\tpublic static posX:number = 0;\r\n\tpublic static negX:number = 1;\r\n\tpublic static posY:number = 2;\r\n\tpublic static negY:number = 3;\r\n\tpublic static posZ:number = 4;\r\n\tpublic static negZ:number = 5;\r\n\r\n\tprivate _imageCanvas:Array<HTMLCanvasElement> = new Array<HTMLCanvasElement>(6);\r\n\tprivate _context:Array<CanvasRenderingContext2D> = new Array<CanvasRenderingContext2D>(6);\r\n\tprivate _imageData:Array<ImageData> = new Array<ImageData>(6);\r\n\tprivate _transparent:boolean;\r\n\tprivate _locked:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BitmapImageCube.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\r\n\t * set this value only when you construct a BitmapImage2D object by passing in\r\n\t * <code>true</code> for the <code>transparent</code> parameter of the\r\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\r\n\t * whether it supports per-pixel transparency by determining if the value of\r\n\t * the <code>transparent</code> property is <code>true</code>.\r\n\t */\r\n\tpublic get transparent():boolean\r\n\t{\r\n\t\treturn this._transparent;\r\n\t}\r\n\r\n\tpublic set transparent(value:boolean)\r\n\t{\r\n\t\tthis._transparent = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a BitmapImage2D object with a specified width and height. If you\r\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\r\n\t * the bitmap is set to that color.\r\n\t *\r\n\t * <p>By default, the bitmap is created as transparent, unless you pass\r\n\t * the value <code>false</code> for the transparent parameter. After you\r\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\r\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\r\n\t * information. If you define the bitmap as transparent, every pixel uses 32\r\n\t * bits of color channel information, including an alpha transparency\r\n\t * channel.</p>\r\n\t *\r\n\t * @param width       The width of the bitmap image in pixels.\r\n\t * @param height      The height of the bitmap image in pixels.\r\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\r\n\t *                    transparency. The default value is <code>true</code>\r\n\t *                    (transparent). To create a fully transparent bitmap,\r\n\t *                    set the value of the <code>transparent</code>\r\n\t *                    parameter to <code>true</code> and the value of the\r\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\r\n\t *                    0). Setting the <code>transparent</code> property to\r\n\t *                    <code>false</code> can result in minor improvements\r\n\t *                    in rendering performance.\r\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\r\n\t *                    bitmap image area. The default value is\r\n\t *                    0xFFFFFFFF(solid white).\r\n\t */\r\n\tconstructor(size:number, transparent:boolean = true, fillColor:number = null)\r\n\t{\r\n\t\tsuper(size);\r\n\r\n\t\tthis._transparent = transparent;\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tthis._imageCanvas[i] = <HTMLCanvasElement> document.createElement(\"canvas\");\r\n\t\t\tthis._imageCanvas[i].width = size;\r\n\t\t\tthis._imageCanvas[i].height = size;\r\n\t\t\tthis._context[i] = this._imageCanvas[i].getContext(\"2d\");\r\n\r\n\t\t\tif (fillColor != null)\r\n\t\t\t\tthis.fillRect(i, new Rectangle(0, 0, size, size), fillColor);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\r\n\t * with an exact copy of the contained bitmap.\r\n\t *\r\n\t * @return A new BitmapImage2D object that is identical to the original.\r\n\t */\r\n\tpublic clone():BitmapImageCube\r\n\t{\r\n\t\tvar t:BitmapImageCube = new BitmapImageCube(this._size, this.transparent);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tt.draw(i, this.getCanvas(i));\r\n\t\t}\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the color values in a specified area of a bitmap image by using a\r\n\t * <code>ColorTransform</code> object. If the rectangle matches the\r\n\t * boundaries of the bitmap image, this method transforms the color values of\r\n\t * the entire image.\r\n\t *\r\n\t * @param rect           A Rectangle object that defines the area of the\r\n\t *                       image in which the ColorTransform object is applied.\r\n\t * @param colorTransform A ColorTransform object that describes the color\r\n\t *                       transformation values to apply.\r\n\t */\r\n\tpublic colorTransform(side:number, rect:Rectangle, colorTransform:ColorTransform):void\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar data:Uint8ClampedArray = this._imageData[side].data;\r\n\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\r\n\r\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\r\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\r\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\r\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Transfers data from one channel of another BitmapImage2D object or the\r\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\r\n\t * All of the data in the other channels in the destination BitmapImage2D object\r\n\t * are preserved.\r\n\t *\r\n\t * <p>The source channel value and destination channel value can be one of\r\n\t * following values: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n\t * </ul>\r\n\t *\r\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\r\n\t *                         can be a different BitmapImage2D object or it can\r\n\t *                         refer to the current BitmapImage2D object.\r\n\t * @param sourceRect       The source Rectangle object. To copy only channel\r\n\t *                         data from a smaller area within the bitmap,\r\n\t *                         specify a source rectangle that is smaller than\r\n\t *                         the overall size of the BitmapImage2D object.\r\n\t * @param destPoint        The destination Point object that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new channel data is placed. To copy only\r\n\t *                         channel data from one area to a different area in\r\n\t *                         the destination image, specify a point other than\r\n\t *                        (0,0).\r\n\t * @param sourceChannel    The source channel. Use a value from the\r\n\t *                         BitmapImage2DChannel class\r\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\r\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n\t * @param destChannel      The destination channel. Use a value from the\r\n\t *                         BitmapImage2DChannel class\r\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\r\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\r\n\t */\r\n\tpublic copyChannel(side:number, sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number):void\r\n\t{\r\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar sourceData:Uint8ClampedArray = sourceBitmap.getImageData().data;\r\n\t\tvar destData:Uint8ClampedArray = this._imageData[side].data;\r\n\r\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\r\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\r\n\r\n\t\tvar i:number, j:number, sourceIndex:number, destIndex:number;\r\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\r\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\r\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\r\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this._size)*4;\r\n\r\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a fast routine to perform pixel manipulation between images with\r\n\t * no stretching, rotation, or color effects. This method copies a\r\n\t * rectangular area of a source image to a rectangular area of the same size\r\n\t * at the destination point of the destination BitmapImage2D object.\r\n\t *\r\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\r\n\t * parameters, you can use a secondary image as an alpha source for the\r\n\t * source image. If the source image has alpha data, both sets of alpha data\r\n\t * are used to composite pixels from the source image to the destination\r\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\r\n\t * image that corresponds to the upper-left corner of the source rectangle.\r\n\t * Any pixels outside the intersection of the source image and alpha image\r\n\t * are not copied to the destination image.</p>\r\n\t *\r\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\r\n\t * channel is used when a transparent image is copied onto another\r\n\t * transparent image. To copy pixels with the alpha channel data, set the\r\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\r\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\r\n\t *\r\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\r\n\t *                         The source image can be a different BitmapImage2D\r\n\t *                         instance, or it can refer to the current\r\n\t *                         BitmapImage2D instance.\r\n\t * @param sourceRect       A rectangle that defines the area of the source\r\n\t *                         image to use as input.\r\n\t * @param destPoint        The destination point that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new pixels are placed.\r\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\r\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\r\n\t *                         that corresponds to the upper-left corner of the\r\n\t *                         <code>sourceRect</code> parameter.\r\n\t * @param mergeAlpha       To use the alpha channel, set the value to\r\n\t *                         <code>true</code>. To copy pixels with no alpha\r\n\t *                         channel, set the value to <code>false</code>.\r\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\r\n\t */\r\n\tpublic copyPixels(side:number, source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(side:number, source:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(side:number, source:any, sourceRect:Rectangle, destRect:Rectangle):void\r\n\t{\r\n\t\tif (source instanceof BitmapImage2D)\r\n\t\t\tsource = source.getCanvas();\r\n\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) draw object\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\r\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\r\n\t\t}\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Frees memory that is used to store the BitmapImage2D object.\r\n\t *\r\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\r\n\t * and height of the image are set to 0. All subsequent calls to methods or\r\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\r\n\t * </p>\r\n\t *\r\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\r\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\r\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\r\n\t * object is no longer usable and an exception may be thrown if\r\n\t * you call functions on the BitmapImage2D object. However,\r\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\r\n\t * object(approximately 128 bytes); the memory occupied by the actual\r\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\r\n\t * collected by the garbage collector.</p>\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tthis._context[i] = null;\r\n\t\t\tthis._imageCanvas[i] = null;\r\n\t\t\tthis._imageData[i] = null;\r\n\t\t}\r\n\r\n\t\tthis._transparent = null;\r\n\t\tthis._locked = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the <code>source</code> display object onto the bitmap image, using\r\n\t * the NME software renderer. You can specify <code>matrix</code>,\r\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\r\n\t * <code>clipRect</code> parameter to control how the rendering performs.\r\n\t * Optionally, you can specify whether the bitmap should be smoothed when\r\n\t * scaled(this works only if the source object is a BitmapImage2D object).\r\n\t *\r\n\t * <p>The source display object does not use any of its applied\r\n\t * transformations for this call. It is treated as it exists in the library\r\n\t * or file, with no matrix transform, no color transform, and no blend mode.\r\n\t * To draw a display object(such as a movie clip) by using its own transform\r\n\t * properties, you can copy its <code>transform</code> property object to the\r\n\t * <code>transform</code> property of the Bitmap object that uses the\r\n\t * BitmapImage2D object.</p>\r\n\t *\r\n\t * @param source         The display object or BitmapImage2D object to draw to\r\n\t *                       the BitmapImage2D object.(The DisplayObject and\r\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\r\n\t *                       interface.)\r\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\r\n\t *                       the coordinates of the bitmap. If you do not want to\r\n\t *                       apply a matrix transformation to the image, set this\r\n\t *                       parameter to an identity matrix, created with the\r\n\t *                       default <code>new Matrix()</code> constructor, or\r\n\t *                       pass a <code>null</code> value.\r\n\t * @param colorTransform A ColorTransform object that you use to adjust the\r\n\t *                       color values of the bitmap. If no object is\r\n\t *                       supplied, the bitmap image's colors are not\r\n\t *                       transformed. If you must pass this parameter but you\r\n\t *                       do not want to transform the image, set this\r\n\t *                       parameter to a ColorTransform object created with\r\n\t *                       the default <code>new ColorTransform()</code>\r\n\t *                       constructor.\r\n\t * @param blendMode      A string value, from the flash.display.BlendMode\r\n\t *                       class, specifying the blend mode to be applied to\r\n\t *                       the resulting bitmap.\r\n\t * @param clipRect       A Rectangle object that defines the area of the\r\n\t *                       source object to draw. If you do not supply this\r\n\t *                       value, no clipping occurs and the entire source\r\n\t *                       object is drawn.\r\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\r\n\t *                       object is smoothed when scaled or rotated, due to a\r\n\t *                       scaling or rotation in the <code>matrix</code>\r\n\t *                       parameter. The <code>smoothing</code> parameter only\r\n\t *                       applies if the <code>source</code> parameter is a\r\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\r\n\t *                       to <code>false</code>, the rotated or scaled\r\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\r\n\t *                       example, the following two images use the same\r\n\t *                       BitmapImage2D object for the <code>source</code>\r\n\t *                       parameter, but the <code>smoothing</code> parameter\r\n\t *                       is set to <code>true</code> on the left and\r\n\t *                       <code>false</code> on the right:\r\n\t *\r\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\r\n\t *                       to <code>true</code> takes longer than doing so with\r\n\t *                       <code>smoothing</code> set to\r\n\t *                       <code>false</code>.</p>\r\n\t * @throws ArgumentError The <code>source</code> parameter is not a\r\n\t *                       BitmapImage2D or DisplayObject object.\r\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\r\n\t *                       object.\r\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\r\n\t *                       Sprite or MovieClip object) all of its child objects\r\n\t *                       do not come from the same domain as the caller, or\r\n\t *                       are not in a content that is accessible to the\r\n\t *                       caller by having called the\r\n\t *                       <code>Security.allowDomain()</code> method. This\r\n\t *                       restriction does not apply to AIR content in the\r\n\t *                       application security sandbox.\r\n\t */\r\n\tpublic draw(side:number, source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(side:number, source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(side:number, source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean):void\r\n\t{\r\n\t\tif (source instanceof BitmapImage2D)\r\n\t\t\tsource = source.getCanvas();\r\n\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) draw object\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\r\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\t\t}\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Fills a rectangular area of pixels with a specified ARGB color.\r\n\t *\r\n\t * @param rect  The rectangular area to fill.\r\n\t * @param color The ARGB color value that fills the area. ARGB colors are\r\n\t *              often specified in hexadecimal format; for example,\r\n\t *              0xFF336699.\r\n\t * @throws TypeError The rect is null.\r\n\t */\r\n\tpublic fillRect(side:number, rect:Rectangle, color:number):void\r\n\t{\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) apply fill\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tif (this._imageData[side])\r\n\t\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\r\n\r\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\r\n\r\n\t\t\tif (this._imageData[side])\r\n\t\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\r\n\t\t}\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\r\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\r\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\r\n\t * alpha information is returned.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\r\n\t *         method returns 0.\r\n\t */\r\n\tpublic getPixel(side:number, x:number, y:number):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tvar index:number = (x + y*this._size)*4;\r\n\r\n\t\t\tr = this._imageData[side].data[index + 0];\r\n\t\t\tg = this._imageData[side].data[index + 1];\r\n\t\t\tb = this._imageData[side].data[index + 2];\r\n\t\t\ta = this._imageData[side].data[index + 3];\r\n\t\t}\r\n\r\n\t\t//returns black if fully transparent\r\n\t\tif (!a)\r\n\t\t\treturn 0x0;\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\r\n\t * This method is similar to the <code>getPixel()</code> method, which\r\n\t * returns an RGB color without alpha channel data.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\r\n\t *         returned.\r\n\t */\r\n\tpublic getPixel32(side:number, x, y):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tvar index:number = (x + y*this._size)*4;\r\n\r\n\t\t\tr = this._imageData[side].data[index + 0];\r\n\t\t\tg = this._imageData[side].data[index + 1];\r\n\t\t\tb = this._imageData[side].data[index + 2];\r\n\t\t\ta = this._imageData[side].data[index + 3];\r\n\t\t}\r\n\r\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\r\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\r\n\t * changes. To improve performance, use this method along with the\r\n\t * <code>unlock()</code> method before and after numerous calls to the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\r\n\t *\r\n\t */\r\n\tpublic lock():void\r\n\t{\r\n\t\tif (this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = true;\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\r\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\r\n\t * in the Array is expected to be 32-bit ARGB pixel values.\r\n\t *\r\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\r\n\t *                    object.\r\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\r\n\t *                    values to be used in the rectangular region.\r\n\t * @throws RangeError The vector array is not large enough to read all the\r\n\t *                    pixel data.\r\n\t */\r\n\tpublic setArray(side:number, rect:Rectangle, inputArray:Array<number>):void\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar i:number, j:number, index:number, argb:number[];\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\r\n\r\n\t\t\t\tthis._imageData[side].data[index + 0] = argb[1];\r\n\t\t\t\tthis._imageData[side].data[index + 1] = argb[2];\r\n\t\t\t\tthis._imageData[side].data[index + 2] = argb[3];\r\n\t\t\t\tthis._imageData[side].data[index + 3] = argb[0];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\r\n\t * value of the image pixel is preserved during this operation. The value of\r\n\t * the RGB color parameter is treated as an unmultiplied color value.\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapImage2D instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting RGB color for the pixel.\r\n\t */\r\n\tpublic setPixel(side:number, x:number, y:number, color:number):void\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar index:number = (x + y*this._size)*4;\r\n\r\n\t\tthis._imageData[side].data[index + 0] = argb[1];\r\n\t\tthis._imageData[side].data[index + 1] = argb[2];\r\n\t\tthis._imageData[side].data[index + 2] = argb[3];\r\n\t\tthis._imageData[side].data[index + 3] = 255;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the color and alpha transparency values of a single pixel of a\r\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\r\n\t * method; the main difference is that the <code>setPixel32()</code> method\r\n\t * takes an ARGB color value that contains alpha channel information.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapImage2D instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\r\n\t *              opaque(not transparent), the alpha transparency portion of\r\n\t *              this color value is ignored.\r\n\t */\r\n\tpublic setPixel32(side:number, x, y, color:number):void\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar index:number = (x + y*this._size)*4;\r\n\r\n\t\tthis._imageData[side].data[index + 0] = argb[1];\r\n\t\tthis._imageData[side].data[index + 1] = argb[2];\r\n\t\tthis._imageData[side].data[index + 2] = argb[3];\r\n\t\tthis._imageData[side].data[index + 3] = argb[0];\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a byte array into a rectangular region of pixel data. For each\r\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\r\n\t * the return value is written into the pixel. If the byte array ends before\r\n\t * the full rectangle is written, the function returns. The data in the byte\r\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\r\n\t * on the byte array before or after the pixels are read.\r\n\t *\r\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\r\n\t *                       object.\r\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\r\n\t *                       unmultiplied pixel values to be used in the\r\n\t *                       rectangular region.\r\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\r\n\t *                   enough data to fill the area of the <code>rect</code>\r\n\t *                   rectangle. The method fills as many pixels as possible\r\n\t *                   before throwing the exception.\r\n\t * @throws TypeError The rect or inputByteArray are null.\r\n\t */\r\n\tpublic setPixels(side:number, rect:Rectangle, inputByteArray:ByteArray):void\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tinputByteArray.position = 0;\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\r\n\r\n\t\t\t\tthis._imageData[side].data[index + 0] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData[side].data[index + 1] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData[side].data[index + 2] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData[side].data[index + 3] = inputByteArray.readUnsignedInt();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\r\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\r\n\t * To improve performance, use this method along with the <code>lock()</code>\r\n\t * method before and after numerous calls to the <code>setPixel()</code> or\r\n\t * <code>setPixel32()</code> method.\r\n\t *\r\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\r\n\t *                   you do not specify a value for this parameter, the\r\n\t *                   entire area of the BitmapImage2D object is considered\r\n\t *                   changed.\r\n\t */\r\n\tpublic unlock():void\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = false;\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0); // at coords 0,0\r\n\t\t\tthis._imageData[i] = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {ImageData}\r\n\t */\r\n\tpublic getImageData(side:number):ImageData\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\treturn this._imageData[side];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {HTMLCanvasElement}\r\n\t */\r\n\tpublic getCanvas(side:number):HTMLCanvasElement\r\n\t{\r\n\t\treturn this._imageCanvas[side];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(size:number):void\r\n\t{\r\n\t\tsuper._setSize(size);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tif (this._locked)\r\n\t\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0);\r\n\r\n\t\t\tthis._imageCanvas[i].width = size;\r\n\t\t\tthis._imageCanvas[i].height = size;\r\n\r\n\t\t\tif (this._locked)\r\n\t\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\r\n\t\t}\r\n\t}\r\n}",
    "/**\r\n * A export class that provides constant values for visual blend mode effects. These\r\n * constants are used in the following:\r\n * <ul>\r\n *   <li> The <code>blendMode</code> property of the\r\n * flash.display.DisplayObject class.</li>\r\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\r\n * method of the flash.display.BitmapData class</li>\r\n * </ul>\r\n */\r\nexport class BlendMode\r\n{\r\n\t/**\r\n\t * Adds the values of the constituent colors of the display object to the\r\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\r\n\t * commonly used for animating a lightening dissolve between two objects.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\r\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\r\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\r\n\t */\r\n\tpublic static ADD:string = \"add\";\r\n\r\n\t/**\r\n\t * Applies the alpha value of each pixel of the display object to the\r\n\t * background. This requires the <code>blendMode</code> property of the\r\n\t * parent display object be set to\r\n\t * <code>away.base.BlendMode.LAYER</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static ALPHA:string = \"alpha\";\r\n\r\n\t/**\r\n\t * Selects the darker of the constituent colors of the display object and the\r\n\t * colors of the background(the colors with the smaller values). This\r\n\t * setting is commonly used for superimposing type.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\r\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static DARKEN:string = \"darken\";\r\n\r\n\t/**\r\n\t * Compares the constituent colors of the display object with the colors of\r\n\t * its background, and subtracts the darker of the values of the two\r\n\t * constituent colors from the lighter value. This setting is commonly used\r\n\t * for more vibrant colors.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\r\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\r\n\t */\r\n\tpublic static DIFFERENCE:string = \"difference\";\r\n\r\n\t/**\r\n\t * Erases the background based on the alpha value of the display object. This\r\n\t * process requires that the <code>blendMode</code> property of the parent\r\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static ERASE:string = \"erase\";\r\n\r\n\t/**\r\n\t * Adjusts the color of each pixel based on the darkness of the display\r\n\t * object. If the display object is lighter than 50% gray, the display object\r\n\t * and background colors are screened, which results in a lighter color. If\r\n\t * the display object is darker than 50% gray, the colors are multiplied,\r\n\t * which results in a darker color. This setting is commonly used for shading\r\n\t * effects.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static HARDLIGHT:string = \"hardlight\";\r\n\r\n\t/**\r\n\t * Inverts the background.\r\n\t */\r\n\tpublic static INVERT:string = \"invert\";\r\n\r\n\t/**\r\n\t * Forces the creation of a transparency group for the display object. This\r\n\t * means that the display object is precomposed in a temporary buffer before\r\n\t * it is processed further. The precomposition is done automatically if the\r\n\t * display object is precached by means of bitmap caching or if the display\r\n\t * object is a display object container that has at least one child object\r\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static LAYER:string = \"layer\";\r\n\r\n\t/**\r\n\t * Selects the lighter of the constituent colors of the display object and\r\n\t * the colors of the background(the colors with the larger values). This\r\n\t * setting is commonly used for superimposing type.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\r\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static LIGHTEN:string = \"lighten\";\r\n\r\n\t/**\r\n\t * Multiplies the values of the display object constituent colors by the\r\n\t * constituent colors of the background color, and normalizes by dividing by\r\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\r\n\t * shadows and depth effects.\r\n\t *\r\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\r\n\t * display object and the corresponding color of the pixel in the background\r\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\r\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\r\n\t * shade than the color of the display object or the color of the\r\n\t * background.</p>\r\n\t */\r\n\tpublic static MULTIPLY:string = \"multiply\";\r\n\r\n\t/**\r\n\t * The display object appears in front of the background. Pixel values of the\r\n\t * display object override the pixel values of the background. Where the\r\n\t * display object is transparent, the background is visible.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * Adjusts the color of each pixel based on the darkness of the background.\r\n\t * If the background is lighter than 50% gray, the display object and\r\n\t * background colors are screened, which results in a lighter color. If the\r\n\t * background is darker than 50% gray, the colors are multiplied, which\r\n\t * results in a darker color. This setting is commonly used for shading\r\n\t * effects.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static OVERLAY:string = \"overlay\";\r\n\r\n\t/**\r\n\t * Multiplies the complement(inverse) of the display object color by the\r\n\t * complement of the background color, resulting in a bleaching effect. This\r\n\t * setting is commonly used for highlights or to remove black areas of the\r\n\t * display object.\r\n\t */\r\n\tpublic static SCREEN:string = \"screen\";\r\n\r\n\t/**\r\n\t * Uses a shader to define the blend between objects.\r\n\t *\r\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\r\n\t * automatically sets the display object's <code>blendMode</code> property to\r\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\r\n\t * set to <code>BlendMode.SHADER</code> without first setting the\r\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\r\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\r\n\t * <code>blendShader</code> property is set(which sets the\r\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\r\n\t * later the value of the <code>blendMode</code> property is changed, the\r\n\t * blend mode can be reset to use the blend shader simply by setting the\r\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\r\n\t * <code>blendShader</code> property does not need to be set again except to\r\n\t * change the shader that's used to define the blend mode.</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static SHADER:string = \"shader\";\r\n\r\n\t/**\r\n\t * Subtracts the values of the constituent colors in the display object from\r\n\t * the values of the background color, applying a floor of 0. This setting is\r\n\t * commonly used for animating a darkening dissolve between two objects.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\r\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\r\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\r\n\t */\r\n\tpublic static SUBTRACT:string = \"subtract\";\r\n}",
    "import {IImageCanvas}\t\t\t\t\tfrom \"../image/IImageCanvas\";\r\nimport {CPURenderingContext2D}\t\tfrom \"../image/CPURenderingContext2D\";\r\nimport {ImageData}\t\t\t\t\tfrom \"../image/ImageData\";\r\n\r\nexport class CPUCanvas implements IImageCanvas {\r\n\tpublic width:number = 1;\r\n\tpublic height:number = 1;\r\n\r\n\tprivate imageData:ImageData;\r\n\r\n\tgetContext(contextId: \"2d\"): CanvasRenderingContext2D;\r\n\tgetContext(contextId: \"experimental-webgl\"): WebGLRenderingContext;\r\n\tgetContext(contextId: string, ...args: any[]): CanvasRenderingContext2D | WebGLRenderingContext;\r\n\tgetContext(contextId: string, ...args: any[]): any\r\n\t{\r\n\t\treturn new CPURenderingContext2D(this);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tpublic reset() {\r\n\t\tif (!this.imageData) {\r\n\t\t\tthis.imageData = new ImageData(this.width, this.height);\r\n\t\t}else{\r\n\t\t\tthis.imageData.width = this.width;\r\n\t\t\tthis.imageData.height = this.height;\r\n\r\n\t\t\tif(this.imageData.data) {\r\n\t\t\t\t//this.imageData.data.length = 0;\r\n\t\t\t\tthis.imageData.data = null;\r\n\t\t\t}\r\n\t\t\tthis.imageData.data = new Uint8Array(this.width*this.height*4);\r\n\t\t}\r\n\r\n\t\tfor (var i:number = 0; i < this.width * this.height * 4; i += 4) {\r\n\t\t\tthis.imageData.data[i] = 255;\r\n\t\t\tthis.imageData.data[i + 1] = 255;\r\n\t\t\tthis.imageData.data[i + 2] = 255;\r\n\t\t\tthis.imageData.data[i + 3] = 255;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getImageData():ImageData {\r\n\t\tif (this.imageData.width != this.width || this.imageData.height != this.height) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t\treturn this.imageData;\r\n\t}\r\n\r\n\r\n}\r\nexport default CPUCanvas;",
    "import {ImageData}\t\t\t\t\tfrom \"../image/ImageData\";\r\nimport {CPUCanvas}\t\t\t\t\tfrom \"../image/CPUCanvas\";\r\nimport {BitmapImage2D}\t\t\t\tfrom \"../image/BitmapImage2D\";\r\nimport {Matrix}\t\t\t\t\t\tfrom \"../geom/Matrix\";\r\nimport {Point}\t\t\t\t\t\tfrom \"../geom/Point\";\r\n\r\n//TODO: implement all methods\r\nexport class CPURenderingContext2D implements CanvasRenderingContext2D\r\n{\r\n\tpublic miterLimit:number;\r\n\tpublic font:string;\r\n\tpublic globalCompositeOperation:string;\r\n\tpublic msFillRule:string;\r\n\tpublic lineCap:string;\r\n\tpublic msImageSmoothingEnabled:boolean;\r\n\tpublic mozImageSmoothingEnabled:boolean;\r\n\tpublic webkitImageSmoothingEnabled:boolean;\r\n\tpublic oImageSmoothingEnabled:boolean;\r\n\tpublic lineDashOffset:number;\r\n\tpublic shadowColor:string;\r\n\tpublic lineJoin:string;\r\n\tpublic shadowOffsetX:number;\r\n\tpublic lineWidth:number;\r\n\tpublic canvas:HTMLCanvasElement;\r\n\tpublic strokeStyle:any;\r\n\tpublic globalAlpha:number;\r\n\tpublic shadowOffsetY:number;\r\n\tpublic fillStyle:any;\r\n\tpublic shadowBlur:number;\r\n\tpublic textAlign:string;\r\n\tpublic textBaseline:string;\r\n\r\n\tpublic cpuCanvas:CPUCanvas;\r\n\r\n\tprivate matrix:Matrix;\r\n\r\n\tconstructor(cpuCanvas:CPUCanvas)\r\n\t{\r\n\t\tthis.cpuCanvas = cpuCanvas;\r\n\t}\r\n\r\n\tpublic restore():void\r\n\t{\r\n\t\tthis.matrix = null;\r\n\t}\r\n\r\n\tpublic setTransform(m11:number, m12:number, m21:number, m22:number, dx:number, dy:number):void\r\n\t{\r\n\t\tthis.matrix = new Matrix(m11, m12, m21, m22, dx, dy);\r\n\t}\r\n\r\n\tpublic save():void\r\n\t{\r\n\t}\r\n\r\n\tpublic arc(x:number, y:number, radius:number, startAngle:number, endAngle:number, anticlockwise:boolean):void\r\n\t{\r\n\t}\r\n\r\n\tpublic measureText(text:string):TextMetrics {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tpublic isPointInPath(x:number, y:number, fillRule:string):boolean {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tpublic quadraticCurveTo(cpx:number, cpy:number, x:number, y:number):void {\r\n\t}\r\n\r\n\tpublic putImageData(imagedata:ImageData, dx:number, dy:number, dirtyX:number, dirtyY:number, dirtyWidth:number, dirtyHeight:number):void {\r\n\t}\r\n\r\n\tpublic rotate(angle:number):void {\r\n\t}\r\n\r\n\tpublic fillText(text:string, x:number, y:number, maxWidth:number):void {\r\n\t}\r\n\r\n\tpublic translate(x:number, y:number):void {\r\n\t}\r\n\r\n\tpublic scale(x:number, y:number):void {\r\n\t}\r\n\r\n\tpublic createRadialGradient(x0:number, y0:number, r0:number, x1:number, y1:number, r1:number):CanvasGradient {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tpublic ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic lineTo(x:number, y:number):void {\r\n\t}\r\n\r\n\tpublic getLineDash():number[] {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tpublic fill(fillRule:string):void {\r\n\t}\r\n\r\n\tpublic createImageData(imageDataOrSw:any, sh:number):ImageData {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tpublic createPattern(image:HTMLElement, repetition:string):CanvasPattern {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tpublic closePath():void {\r\n\t}\r\n\r\n\tpublic rect(x:number, y:number, w:number, h:number):void {\r\n\t}\r\n\r\n\tpublic clip(fillRule:string):void {\r\n\t}\r\n\r\n\tpublic clearRect(x:number, y:number, w:number, h:number):void {\r\n\t\tvar imageData:ImageData = this.cpuCanvas.getImageData();\r\n\t\tfor (var i:number = x; i < x + w; i++) {\r\n\t\t\tfor (var j:number = y; j < y + h; j++) {\r\n\r\n\t\t\t\tvar index:number = (i + j * imageData.width) * 4;\r\n\t\t\t\timageData.data[index] = 0;\r\n\t\t\t\timageData.data[index + 1] = 0;\r\n\t\t\t\timageData.data[index + 2] = 0;\r\n\t\t\t\timageData.data[index + 3] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic moveTo(x:number, y:number):void {\r\n\t}\r\n\r\n\tpublic getImageData(sx:number, sy:number, sw:number, sh:number):ImageData {\r\n\t\t//var result:ImageData = new ImageData(sw, sh);\r\n\t\t//var i:number = 0;\r\n\t\t//\r\n\t\t//for (i = 0; i < sw * sh * 4; i += 4) {\r\n\t\t//    result.data[i] = 255;\r\n\t\t//    result.data[i + 1] = 255;\r\n\t\t//    result.data[i + 2] = 255;\r\n\t\t//    result.data[i + 3] = 255;\r\n\t\t//}\r\n\t\t//\r\n\t\t//var imageData:ImageData = this.cpuCanvas.getImageData();\r\n\t\t//for (i = sx; i < sx + sw; i++) {\r\n\t\t//    for (var j:number = sy; j < sy + sh; j++) {\r\n\t\t//        this.copyPixel32(result, i - sx, i - sy, imageData, i, j);\r\n\t\t//    }\r\n\t\t//}\r\n\t\treturn this.cpuCanvas.getImageData();\r\n\t}\r\n\r\n\tprivate point:Point = new Point();\r\n\tprivate point2:Point = new Point();\r\n\r\n\tprivate applyPixel32(target:ImageData, x:number, y:number, color:number[]) {\r\n\t\t//todo: blending support\r\n\r\n\t\tx = Math.floor(x);\r\n\t\ty = Math.floor(y);\r\n\r\n\t\tif (x < 0 || x >= target.width || y >= target.height || y < 0) return;\r\n\t\tvar index:number = (x + y * target.width) * 4;\r\n\t\t//var alpha:number = color[3] / 255;\r\n\t\ttarget.data[index] += color[0];\r\n\t\ttarget.data[index + 1] += color[1];\r\n\t\ttarget.data[index + 2] += color[2];\r\n\t\ttarget.data[index + 3] += color[3];\r\n\r\n\t\t//target.data[index] = color[0];\r\n\t\t//target.data[index + 1] = color[1];\r\n\t\t//target.data[index + 2] = color[2];\r\n\t\t//target.data[index + 3] = color[3];\r\n\r\n\t\ttarget.data[index] = target.data[index] & 0xFF;\r\n\t\ttarget.data[index + 1] = target.data[index + 1] & 0xFF;\r\n\t\ttarget.data[index + 2] = target.data[index + 2] & 0xFF;\r\n\t\ttarget.data[index + 3] = target.data[index + 3] & 0xFF;\r\n\t}\r\n\r\n\tprivate copyPixel32(target:ImageData, x:number, y:number, source:ImageData, fromX:number, fromY:number) {\r\n\t\tx = Math.floor(x);\r\n\t\ty = Math.floor(y);\r\n\t\tfromX = Math.floor(fromX);\r\n\t\tfromY = Math.floor(fromY);\r\n\r\n\t\tif (x < 0 || x >= target.width || y >= target.height || y < 0) return;\r\n\t\tif (fromX < 0 || fromX >= source.width || fromY >= source.height || fromY < 0) return;\r\n\t\tvar index:number = (x + y * target.width) * 4;\r\n\t\tvar fromIndex:number = (fromX + fromY * source.width) * 4;\r\n\t\ttarget.data[index] = source.data[fromIndex];\r\n\t\ttarget.data[index + 1] = source.data[fromIndex + 1];\r\n\t\ttarget.data[index + 2] = source.data[fromIndex + 2];\r\n\t\ttarget.data[index + 3] = source.data[fromIndex + 3];\r\n\t}\r\n\r\n\tprivate parsedFillStyle:string;\r\n\tprivate parsedA:number;\r\n\tprivate parsedR:number;\r\n\tprivate parsedG:number;\r\n\tprivate parsedB:number;\r\n\r\n\tpublic fillRect(x:number, y:number, w:number, h:number):void {\r\n\t\tif (this.fillStyle) {\r\n\t\t\tif (this.parsedFillStyle != this.fillStyle) {\r\n\t\t\t\tvar colorStrings:string[] = this.fillStyle.substring(5, this.fillStyle.lastIndexOf(\")\")).split(\",\");\r\n\t\t\t\tthis.parsedA = parseFloat(colorStrings[3]) * 255;\r\n\t\t\t\tthis.parsedR = parseInt(colorStrings[0]);\r\n\t\t\t\tthis.parsedG = parseInt(colorStrings[1]);\r\n\t\t\t\tthis.parsedB = parseInt(colorStrings[2]);\r\n\t\t\t\tthis.parsedFillStyle = this.fillStyle;\r\n\t\t\t}\r\n\r\n\t\t\tvar imageData:ImageData = this.cpuCanvas.getImageData();\r\n\t\t\tfor (var i:number = x; i < x + w; i++) {\r\n\t\t\t\tfor (var j:number = y; j < y + h; j++) {\r\n\r\n\t\t\t\t\tvar index:number = (i + j * imageData.width) * 4;\r\n\t\t\t\t\timageData.data[index] = this.parsedR;\r\n\t\t\t\t\timageData.data[index + 1] = this.parsedG;\r\n\t\t\t\t\timageData.data[index + 2] = this.parsedB;\r\n\t\t\t\t\timageData.data[index + 3] = this.parsedA;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic bezierCurveTo(cp1x:number, cp1y:number, cp2x:number, cp2y:number, x:number, y:number):void {\r\n\t}\r\n\r\n\tpublic drawImage(image:HTMLElement, offsetX:number, offsetY:number, width:number, height:number, canvasOffsetX:number, canvasOffsetY:number, canvasImageWidth:number, canvasImageHeight:number):void {\r\n\t\tvar b:any = image;\r\n\t\tif (image.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\r\n\t\t\tvar bitmap:BitmapImage2D = <BitmapImage2D> b;\r\n\t\t\tbitmap.lock();\r\n\r\n\t\t\tthis.drawBitmap(bitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\r\n\r\n\t\t\tbitmap.unlock();\r\n\t\t} else if (image.constructor.toString().indexOf(\"HTMLImage\") > -1) {\r\n\t\t\tvar htmlImage:HTMLImageElement = <HTMLImageElement> image;\r\n\t\t\tvar htmlCanvas:HTMLCanvasElement = <HTMLCanvasElement> document.createElement(\"canvas\");\r\n\t\t\thtmlCanvas.width = htmlImage.width;\r\n\t\t\thtmlCanvas.height = htmlImage.height;\r\n\t\t\tvar htmlContext:CanvasRenderingContext2D = htmlCanvas.getContext(\"2d\");\r\n\t\t\thtmlContext.drawImage(htmlImage, 0, 0);\r\n\t\t\tvar htmlImageData:ImageData = htmlContext.getImageData(0, 0, htmlImage.width, htmlImage.height);\r\n\r\n\t\t\tvar resultBitmap:BitmapImage2D = new BitmapImage2D(htmlImage.width, htmlImage.height, true, 0, false);\r\n\t\t\tresultBitmap.getImageData().data = htmlImageData.data;\r\n\t\t\tvar passBitmap:any = resultBitmap;\r\n\t\t\tthis.drawImage(passBitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\r\n\t\t} else if (image.constructor.toString().indexOf(\"CPUCanvas\") > -1) {\r\n\t\t\t//\r\n\t\t\tvar canvas:CPUCanvas = <CPUCanvas> b;\r\n\t\t\tthis.drawBitmap(canvas, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\r\n\t\t\t//\r\n\t\t\t//if (!width || width == 0) {\r\n\t\t\t//    width = canvas.width;\r\n\t\t\t//    height = canvas.height;\r\n\t\t\t//}\r\n\t\t\t//\r\n\t\t\t//var sourceData:ImageData = canvas.getImageData();\r\n\t\t\t//var scaleX:number = width / sourceData.width;\r\n\t\t\t//var scaleY:number = height / sourceData.height;\r\n\t\t\t//\r\n\t\t\t//var imageData:ImageData = this.cpuCanvas.getImageData();\r\n\t\t\t//for (var i:number = offsetX; i < offsetX + width; i++) {\r\n\t\t\t//    for (var j:number = offsetY; j < offsetY + height; j++) {\r\n\t\t\t//        this.copyPixel32(imageData, i, j, sourceData, (i - offsetX) * scaleX, (j - offsetY) * scaleY);\r\n\t\t\t//    }\r\n\t\t\t//}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate drawBitmap(bitmap:any, offsetX:number, offsetY:number, width:number, height:number, canvasOffsetX:number, canvasOffsetY:number, canvasImageWidth:number, canvasImageHeight:number) {\r\n\t\tif (!width || width == 0) {\r\n\t\t\twidth = bitmap.width;\r\n\t\t\theight = bitmap.height;\r\n\t\t}\r\n\r\n\t\tif (!canvasOffsetX || canvasOffsetX == 0) {\r\n\t\t\tcanvasOffsetX = 0;\r\n\t\t\tcanvasOffsetY = 0;\r\n\t\t}\r\n\r\n\t\tif (!canvasImageWidth || canvasImageWidth == 0 || this.matrix) { //todo: if matrix? should we reset canvasImageWidth\r\n\t\t\tcanvasImageWidth = width;\r\n\t\t\tcanvasImageHeight = height;\r\n\t\t}\r\n\r\n\t\t//console.log(\"CPURenderingContext2D:drawBitmap(width: \" + width + \" height: \" + height + \" canvasImageWidth: \" + canvasImageWidth + \" canvasImageHeight: \" + canvasImageHeight);\r\n\r\n\t\tvar sourceData:ImageData = bitmap.getImageData();\r\n\t\tvar canvasImageData:ImageData = this.cpuCanvas.getImageData();\r\n\r\n\t\tif (this.matrix || (canvasImageWidth != width || canvasImageHeight != height)) {\r\n\t\t\tvar matrix:Matrix = this.matrix;\r\n\t\t\tif (!matrix) {\r\n\t\t\t\tmatrix = new Matrix();\r\n\t\t\t\tmatrix.scale(canvasImageWidth / width, canvasImageHeight / height);\r\n\t\t\t}\r\n\r\n\t\t\tvar scaleX:number = Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b);\r\n\t\t\tvar scaleY:number = Math.sqrt(matrix.c * matrix.c + matrix.d * matrix.d);\r\n\r\n\t\t\tcanvasImageWidth = width * scaleX;\r\n\t\t\tcanvasImageHeight = height * scaleY;\r\n\r\n\t\t\tmatrix.tx += canvasOffsetX;\r\n\t\t\tmatrix.ty += canvasOffsetY;\r\n\r\n\t\t\tcanvasOffsetX = Math.floor(matrix.tx);\r\n\t\t\tcanvasOffsetY = Math.floor(matrix.ty);\r\n\r\n\t\t\tmatrix.invert();\r\n\r\n\t\t\tif (scaleX >= 1 || scaleY >= 1) {\r\n\t\t\t\tvar p:Point = new Point();\r\n\t\t\t\tfor (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\r\n\t\t\t\t\tfor (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\r\n\t\t\t\t\t\tp.x = i;\r\n\t\t\t\t\t\tp.y = j;\r\n\t\t\t\t\t\tp = matrix.transformPoint(p);\r\n\r\n\t\t\t\t\t\tvar color:number[] = CPURenderingContext2D.sampleBilinear(p.x, p.y, sourceData);\r\n\t\t\t\t\t\tthis.applyPixel32(canvasImageData, i, j, color);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//decimate\r\n\t\t\t\tvar p1:Point = this.point;\r\n\t\t\t\tvar p2:Point = this.point2;\r\n\t\t\t\tfor (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\r\n\t\t\t\t\tfor (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\r\n\t\t\t\t\t\tp1.x = i;\r\n\t\t\t\t\t\tp1.y = j;\r\n\t\t\t\t\t\tp1 = matrix.transformPoint(p1);\r\n\r\n\t\t\t\t\t\tp2.x = i + 1;\r\n\t\t\t\t\t\tp2.y = j + 1;\r\n\t\t\t\t\t\tp2 = matrix.transformPoint(p2);\r\n\r\n\t\t\t\t\t\tvar color:number[] = CPURenderingContext2D.sampleBox(p1.x + offsetX, p1.y + offsetY, p2.x + offsetX, p2.y + offsetY, sourceData);\r\n\t\t\t\t\t\tthis.applyPixel32(canvasImageData, i, j, color);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tmatrix.invert();\r\n\t\t} else {\r\n\t\t\tfor (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\r\n\t\t\t\tfor (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\r\n\t\t\t\t\tvar color:number[] = CPURenderingContext2D.sample(i - canvasOffsetX + offsetX, j - canvasOffsetY + offsetY, sourceData);\r\n\t\t\t\t\tthis.applyPixel32(canvasImageData, i, j, color);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic transform(m11:number, m12:number, m21:number, m22:number, dx:number, dy:number):void {\r\n\t}\r\n\r\n\tpublic stroke():void {\r\n\t}\r\n\r\n\tpublic strokeRect(x:number, y:number, w:number, h:number):void {\r\n\t}\r\n\r\n\tpublic setLineDash(segments:number[]):void {\r\n\t}\r\n\r\n\tpublic strokeText(text:string, x:number, y:number, maxWidth:number):void {\r\n\t}\r\n\r\n\tpublic beginPath():void {\r\n\t}\r\n\r\n\tpublic arcTo(x1:number, y1:number, x2:number, y2:number, radius:number):void {\r\n\t}\r\n\r\n\tpublic createLinearGradient(x0:number, y0:number, x1:number, y1:number):CanvasGradient {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tprivate static sampleBilinear(u:number, v:number, texture:ImageData, texelSizeX:number = 1, texelSizeY:number = 1):number[] {\r\n\t\tvar color00:number[] = CPURenderingContext2D.sample(u, v, texture);\r\n\t\tvar color10:number[] = CPURenderingContext2D.sample(u + texelSizeX, v, texture);\r\n\t\tvar color01:number[] = CPURenderingContext2D.sample(u, v + texelSizeY, texture);\r\n\t\tvar color11:number[] = CPURenderingContext2D.sample(u + texelSizeX, v + texelSizeY, texture);\r\n\r\n\t\tvar a:number = u;\r\n\t\ta = a - Math.floor(a);\r\n\r\n\t\tvar interColor0:number[] = CPURenderingContext2D.interpolateColor(color00, color10, a);\r\n\t\tvar interColor1:number[] = CPURenderingContext2D.interpolateColor(color01, color11, a);\r\n\r\n\t\tvar b:number = v;\r\n\t\tb = b - Math.floor(b);\r\n\t\treturn CPURenderingContext2D.interpolateColor(interColor0, interColor1, b);\r\n\t}\r\n\r\n\tprivate static sample(u:number, v:number, imageData:ImageData):number[] {\r\n\t\tu = Math.floor(u);\r\n\t\tv = Math.floor(v);\r\n\r\n\t\tvar result:number[] = [0, 0, 0, 0];\r\n\r\n\t\tif (u < 0 || u >= imageData.width || v < 0 || v >= imageData.height) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tvar index:number = (u + v * imageData.width) * 4;\r\n\t\tresult[0] = imageData.data[index];\r\n\t\tresult[1] = imageData.data[index + 1];\r\n\t\tresult[2] = imageData.data[index + 2];\r\n\t\tresult[3] = imageData.data[index + 3];\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprivate static sampleBox(x0:number, y0:number, x1:number, y1:number, texture:ImageData):number[] {\r\n\t\tvar area:number = 0;// -- total area accumulated in pixels\r\n\t\tvar result:number[] = [0, 0, 0, 0];\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar xsize:number;\r\n\t\tvar ysize:number;\r\n\r\n\t\tvar fromY:number = Math.floor(y0);\r\n\t\tvar toY:number = Math.ceil(y1);\r\n\r\n\t\tfromY = Math.max(Math.min(fromY, texture.height - 1), 0);\r\n\t\ttoY = Math.max(Math.min(toY, texture.height - 1), 0);\r\n\r\n\t\tfor (y = fromY; y < toY; y++) {\r\n\t\t\tysize = 1;\r\n\r\n\t\t\tif (y < y0) {\r\n\t\t\t\tysize = ysize * (1.0 - (y0 - y))\r\n\t\t\t}\r\n\r\n\t\t\tif (y > y1) {\r\n\t\t\t\tysize = ysize * (1.0 - (y - y1))\r\n\t\t\t}\r\n\r\n\t\t\tvar fromX:number = Math.floor(x0);\r\n\t\t\tvar toX:number = Math.ceil(x1);\r\n\r\n\t\t\tfromX = Math.max(Math.min(fromX, texture.width - 1), 0);\r\n\t\t\ttoX = Math.max(Math.min(toX, texture.width - 1), 0);\r\n\r\n\r\n\t\t\tfor (x = fromX; x < toX; x++) {\r\n\t\t\t\txsize = ysize;\r\n\r\n\t\t\t\tvar color:number[] = CPURenderingContext2D.sample(x, y, texture);\r\n\r\n\t\t\t\tif (x < x0) {\r\n\t\t\t\t\txsize = xsize * (1.0 - (x0 - x))\r\n\t\t\t\t}\r\n\t\t\t\tif (x > x1) {\r\n\t\t\t\t\txsize = xsize * (1.0 - (x - x1))\r\n\t\t\t\t}\r\n\t\t\t\tresult[0] += color[0] * xsize;\r\n\t\t\t\tresult[1] += color[1] * xsize;\r\n\t\t\t\tresult[2] += color[2] * xsize;\r\n\t\t\t\tresult[3] += color[3] * xsize;\r\n\t\t\t\tarea = area + xsize\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tresult[0] /= area;\r\n\t\tresult[1] /= area;\r\n\t\tresult[2] /= area;\r\n\t\tresult[3] /= area;\r\n\r\n\t\tresult[0] = result[0] & 0xFF;\r\n\t\tresult[1] = result[1] & 0xFF;\r\n\t\tresult[2] = result[2] & 0xFF;\r\n\t\tresult[3] = result[3] & 0xFF;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprivate static interpolateColor(source:number[], target:number[], a:number):number[] {\r\n\t\tvar result:number[] = [];\r\n\t\tresult[0] = source[0] + (target[0] - source[0]) * a;\r\n\t\tresult[1] = source[1] + (target[1] - source[1]) * a;\r\n\t\tresult[2] = source[2] + (target[2] - source[2]) * a;\r\n\t\tresult[3] = source[3] + (target[3] - source[3]) * a;\r\n\t\treturn result;\r\n\t}\r\n\r\n}\r\nexport default CPURenderingContext2D;",
    "import {ImageBase}\t\t\t\tfrom \"../image/ImageBase\";\r\nimport {Sampler2D}\t\t\t\tfrom \"../image/Sampler2D\";\r\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\r\nimport {ImageUtils}\t\t\t\tfrom \"../utils/ImageUtils\";\r\n\r\nexport class Image2D extends ImageBase\r\n{\r\n\tpublic static assetType:string = \"[image Image2D]\";\r\n\r\n\tpublic _rect:Rectangle;\r\n\r\n\tprivate _powerOfTwo:boolean = true;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Image2D.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the image in pixels.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._rect.height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._rect.height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._setSize(this._rect.width, value);\r\n\t}\r\n\r\n\t/**\r\n\t * The rectangle that defines the size and location of the bitmap image. The\r\n\t * top and left of the rectangle are 0; the width and height are equal to the\r\n\t * width and height in pixels of the BitmapData object.\r\n\t */\r\n\tpublic get rect():Rectangle\r\n\t{\r\n\t\treturn this._rect;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the bitmap image in pixels.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._rect.width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._rect.width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._setSize(value, this._rect.height);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(width:number, height:number, powerOfTwo:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._rect = new Rectangle(0, 0, width, height);\r\n\t\tthis._powerOfTwo = powerOfTwo;\r\n\t\tthis._testDimensions();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(width:number, height:number):void\r\n\t{\r\n\t\tif (this._rect.width != width || this._rect.height != height)\r\n\t\t\tthis.clear();\r\n\r\n\t\tthis._rect.width = width;\r\n\t\tthis._rect.height = height;\r\n\r\n\t\tthis._testDimensions();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _testDimensions():void\r\n\t{\r\n\t\tif (this._powerOfTwo && (!ImageUtils.isDimensionValid(this._rect.width) || !ImageUtils.isDimensionValid(this._rect.height)))\r\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\r\n\t}\r\n\r\n\t/**\r\n\t * Enable POT texture size validation\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic get powerOfTwo():boolean {\r\n\t\treturn this._powerOfTwo;\r\n\t}\r\n\r\n\tpublic set powerOfTwo(value:boolean) {\r\n\t\tif(this._powerOfTwo == value) return;\r\n\t\tthis._powerOfTwo = value;\r\n\t\tthis._testDimensions();\r\n\t}\r\n}",
    "import {SamplerBase}\t\t\t\t\tfrom \"../image/SamplerBase\";\r\nimport {AbstractMethodError}\t\t\tfrom \"../errors/AbstractMethodError\";\r\nimport {AssetEvent}\t\t\t\t\tfrom \"../events/AssetEvent\";\r\nimport {IAsset}\t\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {AssetBase}\t\t\t\t\tfrom \"../library/AssetBase\";\r\n\r\nexport class ImageBase extends AssetBase\r\n{\r\n\tpublic _pFormat:string = \"bgra\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get format():string\r\n\t{\r\n\t\treturn this._pFormat;\r\n\t}\r\n}",
    "import {ImageBase}\t\t\t\tfrom \"../image/ImageBase\";\r\nimport {SamplerCube}\t\t\t\tfrom \"../image/SamplerCube\";\r\nimport {ImageUtils}\t\t\t\tfrom \"../utils/ImageUtils\";\r\n\r\nexport class ImageCube extends ImageBase\r\n{\r\n\tpublic static assetType:string = \"[image ImageCube]\";\r\n\r\n\tpublic _size:number;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn ImageCube.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube bitmap in pixels.\r\n\t */\r\n\tpublic get size():number\r\n\t{\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\tpublic set size(value:number)\r\n\t{\r\n\t\tif (this._size == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._setSize(this._size);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(size:number)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._size = size;\r\n\r\n\t\tthis._testDimensions();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(size:number):void\r\n\t{\r\n\t\tif (this._size != size)\r\n\t\t\tthis.clear();\r\n\r\n\t\tthis._size = size;\r\n\r\n\t\tthis._testDimensions();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _testDimensions():void\r\n\t{\r\n\t\tif (!ImageUtils.isDimensionValid(this._size))\r\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\r\n\t}\r\n}",
    "export class ImageData {\r\n    public width: number;\r\n    public data: any;\r\n    public height: number;\r\n\r\n    constructor(width:number, height:number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.data = new Uint8Array(width*height*4);\r\n    }\r\n}\r\nexport default ImageData;",
    "import {SamplerBase}\t\t\t\tfrom \"../image/SamplerBase\";\r\nimport {Image2D}\t\t\t\t\tfrom \"../image/Image2D\";\r\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\r\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\n\r\n/**\r\n * The Sampler2D export class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Sampler2D()</code> constructor.\r\n *\r\n * <p>The <code>Sampler2D()</code> constructor allows you to create a Sampler2D\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Sampler2D object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Sampler2D object can share its Image2D reference among several Sampler2D\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Sampler2D objects that reference the same Image2D object,\r\n * multiple texture objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each texture\r\n * object instance.</p>\r\n\r\n */\r\nexport class Sampler2D extends SamplerBase\r\n{\r\n\tpublic static assetType:string = \"[asset Sampler2D]\";\r\n\r\n\tprivate _imageRect:Rectangle;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _repeat:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Sampler2D.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Sampler2D object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping export class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\t//var pixelSnapping:PixelSnapping;\r\n\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\t//TODO: update dependencies\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get imageRect():Rectangle\r\n\t{\r\n\t\treturn this._imageRect;\r\n\t}\r\n\tpublic set imageRect(value:Rectangle)\r\n\t{\r\n\t\tif (this._imageRect == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._imageRect = value;\r\n\r\n\t\tthis._updateRect();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\tpublic set frameRect(value:Rectangle)\r\n\t{\r\n\t\tif (this._frameRect == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._frameRect = value;\r\n\r\n\t\tthis._updateRect();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param image2D\r\n\t * @param smoothing\r\n\t */\r\n\tconstructor(repeat:boolean = false, smooth:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper(smooth, mipmap);\r\n\r\n\t\tthis._repeat = repeat;\r\n\r\n\t\tthis._updateRect();\r\n\t}\r\n\r\n\tprivate _updateRect():void\r\n\t{\r\n\t}\r\n}",
    "import {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {AssetBase}\t\t\t\tfrom \"../library/AssetBase\";\r\n\r\n/**\r\n *\r\n */\r\nexport class SamplerBase extends AssetBase\r\n{\r\n\tprivate _smooth:boolean;\r\n\tprivate _mipmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\t//TODO: update dependencies\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\t//TODO: update dependencies\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(smooth:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._smooth = smooth;\r\n\t\tthis._mipmap = mipmap;\r\n\t}\r\n}",
    "import {SamplerBase}\t\t\t\tfrom \"../image/SamplerBase\";\r\nimport {ImageCube}\t\t\t\tfrom \"../image/ImageCube\";\r\n\r\n/**\r\n * The Bitmap export class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Bitmap()</code> constructor.\r\n *\r\n * <p>The <code>Bitmap()</code> constructor allows you to create a Bitmap\r\n * object that contains a reference to a BitmapData object. After you create a\r\n * Bitmap object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Bitmap object can share its BitmapData reference among several Bitmap\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Bitmap objects that reference the same BitmapData object,\r\n * multiple texture objects can use the same complex BitmapData object without\r\n * incurring the memory overhead of a BitmapData object for each texture\r\n * object instance.</p>\r\n\r\n */\r\nexport class SamplerCube extends SamplerBase\r\n{\r\n\tpublic static assetType:string = \"[asset SamplerCube]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SamplerCube.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param bitmapData\r\n\t * @param smoothing\r\n\t */\r\n\tconstructor(smooth:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper(smooth, mipmap);\r\n\t}\r\n}",
    "import {BitmapImage2D}\t\t\tfrom \"../image/BitmapImage2D\";\r\nimport {BitmapImageChannel}\t\tfrom \"../image/BitmapImageChannel\";\r\nimport {Image2D}\t\t\t\t\tfrom \"../image/Image2D\";\r\nimport {Point}\t\t\t\t\tfrom \"../geom/Point\";\r\n\r\n/**\r\n *\r\n */\r\nexport class SpecularImage2D extends Image2D\r\n{\r\n\tpublic static assetType:string = \"[asset SpecularImage2D]\";\r\n\r\n\tprivate _specularSource:BitmapImage2D;\r\n\tprivate _glossSource:BitmapImage2D;\r\n\tprivate _output:BitmapImage2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SpecularImage2D.assetType;\r\n\t}\r\n\r\n\tpublic get specularSource():BitmapImage2D\r\n\t{\r\n\t\treturn this._specularSource;\r\n\t}\r\n\r\n\tpublic set specularSource(value:BitmapImage2D)\r\n\t{\r\n\t\tif (this._specularSource == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularSource = value;\r\n\r\n\t\tthis.invalidate();\r\n\r\n\t\tthis._testSize();\r\n\t}\r\n\r\n\r\n\tpublic get glossSource():BitmapImage2D\r\n\t{\r\n\t\treturn this._glossSource;\r\n\t}\r\n\r\n\tpublic set glossSource(value:BitmapImage2D)\r\n\t{\r\n\t\tif (this._glossSource == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._glossSource = value;\r\n\r\n\t\tthis.invalidate();\r\n\r\n\t\tthis._testSize();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(specularSource:BitmapImage2D = null, glossSource:BitmapImage2D = null)\r\n\t{\r\n\t\tsuper(1, 1);\r\n\r\n\t\tthis._specularSource = specularSource;\r\n\t\tthis._glossSource = glossSource;\r\n\r\n\t\tthis._output = new BitmapImage2D(1, 1, false, 0xffffff);\r\n\r\n\t\tthis._testSize();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new SpecularImage2D object that is a clone of the original instance\r\n\t * with an exact copy of the contained bitmap.\r\n\t *\r\n\t * @return A new SpecularImage2D object that is identical to the original.\r\n\t */\r\n\tpublic clone():SpecularImage2D\r\n\t{\r\n\t\treturn new SpecularImage2D(this._specularSource, this._glossSource);\r\n\t}\r\n\r\n\t/**\r\n\t * Frees memory that is used to store the SpecularImage2D object.\r\n\t *\r\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\r\n\t * and height of the image are set to 0. All subsequent calls to methods or\r\n\t * properties of this SpecularImage2D instance fail, and an exception is thrown.\r\n\t * </p>\r\n\t *\r\n\t * <p><code>SpecularImage2D.dispose()</code> releases the memory occupied by the\r\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\r\n\t * memory). After using <code>SpecularImage2D.dispose()</code>, the SpecularImage2D\r\n\t * object is no longer usable and an exception may be thrown if\r\n\t * you call functions on the SpecularImage2D object. However,\r\n\t * <code>SpecularImage2D.dispose()</code> does not garbage collect the SpecularImage2D\r\n\t * object(approximately 128 bytes); the memory occupied by the actual\r\n\t * SpecularImage2D object is released at the time the SpecularImage2D object is\r\n\t * collected by the garbage collector.</p>\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._rect = null;\r\n\r\n\t\tthis._output.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {ImageData}\r\n\t */\r\n\tpublic getImageData():ImageData\r\n\t{\r\n\t\tvar origin:Point = new Point();\r\n\r\n\t\tthis._output.fillRect(this._rect, 0xffffff);\r\n\r\n\t\tif (this._glossSource)\r\n\t\t\tthis._output.copyChannel(this._glossSource, this._rect, origin, BitmapImageChannel.GREEN, BitmapImageChannel.GREEN);\r\n\r\n\t\tif (this._specularSource)\r\n\t\t\tthis._output.copyChannel(this._specularSource, this._rect, origin, BitmapImageChannel.RED, BitmapImageChannel.RED);\r\n\r\n\t\treturn this._output.getImageData();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {HTMLCanvasElement}\r\n\t */\r\n\tpublic getCanvas():HTMLCanvasElement\r\n\t{\r\n\t\treturn this._output.getCanvas();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(width:number, height:number):void\r\n\t{\r\n\t\tsuper._setSize(width, height);\r\n\r\n\t\tthis._output._setSize(width, height);\r\n\t}\r\n\r\n\tprivate _testSize():void\r\n\t{\r\n\t\tvar w:number, h:number;\r\n\r\n\t\tif (this._specularSource) {\r\n\t\t\tw = this._specularSource.width;\r\n\t\t\th = this._specularSource.height;\r\n\t\t} else if (this._glossSource) {\r\n\t\t\tw = this._glossSource.width;\r\n\t\t\th = this._glossSource.height;\r\n\t\t} else {\r\n\t\t\tw = 1;\r\n\t\t\th = 1;\r\n\t\t}\r\n\r\n\t\tif (w != this._output.width && h != this._output.height) {\r\n\t\t\tthis._output.dispose();\r\n\t\t\tthis._output = new BitmapImage2D(w, h, false, 0xffffff);\r\n\t\t}\r\n\r\n\t\tthis._setSize(w, h);\r\n\t}\r\n}",
    "export {BitmapImage2D}\t\t\t\t\tfrom \"./image/BitmapImage2D\";\r\nexport {BitmapImageChannel}\t\t\t\tfrom \"./image/BitmapImageChannel\";\r\nexport {BitmapImageCube}\t\t\t\tfrom \"./image/BitmapImageCube\";\r\nexport {BlendMode}\t\t\t\t\t\tfrom \"./image/BlendMode\";\r\nexport {CPUCanvas}\t\t\t\t\t\tfrom \"./image/CPUCanvas\";\r\nexport {CPURenderingContext2D}\t\t\tfrom \"./image/CPURenderingContext2D\";\r\nexport {IImageCanvas}\t\t\t\t\tfrom \"./image/IImageCanvas\";\r\nexport {Image2D}\t\t\t\t\t\tfrom \"./image/Image2D\";\r\nexport {ImageBase}\t\t\t\t\t\tfrom \"./image/ImageBase\";\r\nexport {ImageCube}\t\t\t\t\t\tfrom \"./image/ImageCube\";\r\nexport {ImageData}\t\t\t\t\t\tfrom \"./image/ImageData\";\r\nexport {Sampler2D}\t\t\t\t\t\tfrom \"./image/Sampler2D\";\r\nexport {SamplerBase}\t\t\t\t\tfrom \"./image/SamplerBase\";\r\nexport {SamplerCube}\t\t\t\t\tfrom \"./image/SamplerCube\";\r\nexport {SpecularImage2D}\t\t\t\tfrom \"./image/SpecularImage2D\";",
    "import {AssetEvent}\t\t\t\t\tfrom \"../events/AssetEvent\";\r\nimport {EventDispatcher}\t\t\t\tfrom \"../events/EventDispatcher\";\r\nimport {IAbstractionPool}\t\t\t\tfrom \"../library/IAbstractionPool\";\r\nimport {IAsset}\t\t\t\t\t\tfrom \"../library/IAsset\";\r\n\r\n/**\r\n *\r\n * @export class away.pool.AbstractionBase\r\n */\r\nexport class AbstractionBase extends EventDispatcher\r\n{\r\n\tprivate _onClearDelegate:(event:AssetEvent) => void;\r\n\tprivate _onInvalidateDelegate:(event:AssetEvent) => void;\r\n\r\n\tpublic _pool:IAbstractionPool;\r\n\r\n\tpublic _asset:IAsset;\r\n\r\n\tpublic _invalid:boolean = true;\r\n\r\n\tconstructor(asset:IAsset, pool:IAbstractionPool)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._asset = asset;\r\n\t\tthis._pool = pool;\r\n\r\n\t\tthis._onClearDelegate = (event:AssetEvent) => this.onClear(event);\r\n\t\tthis._onInvalidateDelegate = (event:AssetEvent) => this.onInvalidate(event);\r\n\r\n\t\tthis._asset.addEventListener(AssetEvent.CLEAR, this._onClearDelegate);\r\n\t\tthis._asset.addEventListener(AssetEvent.INVALIDATE, this._onInvalidateDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic onClear(event:AssetEvent):void\r\n\t{\r\n\t\tthis._asset.removeEventListener(AssetEvent.CLEAR, this._onClearDelegate);\r\n\t\tthis._asset.removeEventListener(AssetEvent.INVALIDATE, this._onInvalidateDelegate);\r\n\r\n\t\tthis._pool.clearAbstraction(this._asset);\r\n\t\tthis._pool = null;\r\n\t\tthis._asset = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic onInvalidate(event:AssetEvent):void\r\n\t{\r\n\t\tthis._invalid = true;\r\n\t}\r\n}",
    "import {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {IAssetClass}\t\t\t\tfrom \"../library/IAssetClass\";\r\nimport {AbstractMethodError}\t\tfrom \"../errors/AbstractMethodError\";\r\nimport {AssetEvent}\t\t\t\tfrom \"../events/AssetEvent\";\r\nimport {EventDispatcher}\t\t\tfrom \"../events/EventDispatcher\";\r\n\r\nexport class AssetBase extends EventDispatcher implements IAsset\r\n{\r\n\tpublic static ID_COUNT:number = 0;\r\n\r\n\tprivate _originalName:string;\r\n\tprivate _namespace:string;\r\n\tprivate _name:string;\r\n\tprivate _id:number;\r\n\tprivate _full_path:Array<string>;\r\n\r\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\r\n\r\n\tconstructor(name:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._id = AssetBase.ID_COUNT++;\r\n\r\n\t\tif (name == null)\r\n\t\t\tname = 'null';\r\n\r\n\t\tthis._name = name;\r\n\t\tthis._originalName = name;\r\n\r\n\t\tthis.updateFullPath();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * The original name used for this asset in the resource (e.g. file) in which\r\n\t * it was found. This may not be the same as <code>name</code>, which may\r\n\t * have changed due to of a name conflict.\r\n\t */\r\n\tpublic get originalName():string\r\n\t{\r\n\t\treturn this._originalName;\r\n\t}\r\n\r\n\t/**\r\n\t * A unique id for the asset, used to identify assets in an associative array\r\n\t */\r\n\tpublic get id():number\r\n\t{\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic get name():string\r\n\t{\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic set name(val:string)\r\n\t{\r\n\t\tvar prev:string;\r\n\r\n\t\tprev = this._name;\r\n\t\tthis._name = val;\r\n\r\n\t\tif (this._name == null)\r\n\t\t\tthis._name = 'null';\r\n\r\n\t\tthis.updateFullPath();\r\n\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.RENAME, this, prev));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.DISPOSE, this));\r\n\t}\r\n\r\n\tpublic clear():void\r\n\t{\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.CLEAR, this));\r\n\t}\r\n\r\n\tpublic get assetNamespace():string\r\n\t{\r\n\t\treturn this._namespace;\r\n\t}\r\n\r\n\tpublic get assetFullPath():Array<string>\r\n\t{\r\n\t\treturn this._full_path;\r\n\t}\r\n\r\n\tpublic assetPathEquals(name:string, ns:string):boolean\r\n\t{\r\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\r\n\t}\r\n\r\n\r\n\tpublic isAsset(assetClass:IAssetClass):boolean\r\n\t{\r\n\t\treturn this.assetType == assetClass.assetType;\r\n\t}\r\n\r\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\r\n\t{\r\n\r\n\t\tthis._name = name? name : 'null';\r\n\t\tthis._namespace = ns? ns : AssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (overrideOriginal)\r\n\t\t\tthis._originalName = this._name;\r\n\r\n\t\tthis.updateFullPath();\r\n\t}\r\n\r\n\tprivate updateFullPath():void\r\n\t{\r\n\t\tthis._full_path = [ this._namespace, this._name ];\r\n\t}\r\n}",
    "import {URLRequest}\t\t\t\tfrom \"../net/URLRequest\";\r\nimport {AssetLibrary}\t\t\t\tfrom \"../library/AssetLibrary\";\r\nimport {AssetLibraryIterator}\t\tfrom \"../library/AssetLibraryIterator\";\r\nimport {Loader}\t\t\t\t\tfrom \"../library/Loader\";\r\nimport {LoaderContext}\t\t\tfrom \"../library/LoaderContext\";\r\nimport {ConflictPrecedence}\t\tfrom \"../library/ConflictPrecedence\";\r\nimport {ConflictStrategy}\t\t\tfrom \"../library/ConflictStrategy\";\r\nimport {ConflictStrategyBase}\t\tfrom \"../library/ConflictStrategyBase\";\r\nimport {AssetBase}\t\t\t\tfrom \"../library/AssetBase\";\r\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\r\nimport {AssetEvent}\t\t\t\tfrom \"../events/AssetEvent\";\r\nimport {URLLoaderEvent}\t\t\tfrom \"../events/URLLoaderEvent\";\r\nimport {LoaderEvent}\t\t\t\tfrom \"../events/LoaderEvent\";\r\nimport {EventDispatcher}\t\t\tfrom \"../events/EventDispatcher\";\r\nimport {ParserEvent}\t\t\t\tfrom \"../events/ParserEvent\";\r\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\r\n\r\n/**\r\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\r\n * Its purpose is to create a container for 3D data management, both before and after parsing.\r\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\r\n */\r\nexport class AssetLibraryBundle extends EventDispatcher\r\n{\r\n\tpublic static _iInstances:Object = new Object();\r\n\r\n\tprivate _loaderSessions:Array<Loader>;\r\n\tprivate _strategy:ConflictStrategyBase;\r\n\tprivate _strategyPreference:string;\r\n\tprivate _assets:Array<IAsset>;\r\n\tprivate _assetDictionary:Object;\r\n\tprivate _assetDictDirty:boolean;\r\n\tprivate _loaderSessionsGarbage:Array<Loader> = new Array<Loader>();\r\n\tprivate _gcTimeoutIID;\r\n\r\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\r\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\r\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\r\n\tprivate _onTextureSizeErrorDelegate:(event:LoaderEvent) => void;\r\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>AssetLibraryBundle</code> object.\r\n\t *\r\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\r\n\t\tthis._assetDictionary = new Object();\r\n\t\tthis._loaderSessions = new Array<Loader>();\r\n\r\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\r\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\r\n\r\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\r\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:LoaderEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\r\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\r\n\t * pass a string key to this method to define which bundle should be returned. This is\r\n\t * referred to as using the AssetLibrary as a multiton.\r\n\t *\r\n\t * @param key Defines which multiton instance should be returned.\r\n\t * @return An instance of the asset library\r\n\t */\r\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\r\n\t{\r\n\t\tif (!key)\r\n\t\t\tkey = 'default';\r\n\r\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\r\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\r\n\r\n\t\treturn AssetLibraryBundle._iInstances[key];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enableParser(parserClass:Object):void\r\n\t{\r\n\t\tLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enableParsers(parserClasses:Object[]):void\r\n\t{\r\n\t\tLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\r\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\r\n\t * is used which means that a numeric suffix is appended to one of the assets. The\r\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\r\n\t * be renamed.\r\n\t *\r\n\t * @see naming.ConflictStrategy\r\n\t * @see AssetLibrary.conflictPrecedence\r\n\t */\r\n\tpublic get conflictStrategy():ConflictStrategyBase\r\n\t{\r\n\t\treturn this._strategy;\r\n\t}\r\n\r\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\r\n\t{\r\n\r\n\t\tif (!val)\r\n\t\t\tthrow new ErrorBase('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\r\n\r\n\t\tthis._strategy = val.create();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines which asset should have precedence when resolving a naming conflict between\r\n\t * two assets of which one has just been renamed by the user or by a parser. By default\r\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\r\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\r\n\t *\r\n\t * This property is ignored for conflict strategies that do not actually rename an\r\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\r\n\t *\r\n\t * @see away.library.ConflictPrecedence\r\n\t * @see away.library.ConflictStrategy\r\n\t */\r\n\tpublic get conflictPrecedence():string\r\n\t{\r\n\t\treturn this._strategyPreference;\r\n\t}\r\n\r\n\tpublic set conflictPrecedence(val:string)\r\n\t{\r\n\t\tthis._strategyPreference = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\r\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\r\n\t * namespace. A \"null\" filter value means no filter of that type is used.\r\n\t *\r\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\r\n\t * null to not filter on asset type.\r\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\r\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\r\n\t * included in the iteration or not. This needs to be a function that takes a single\r\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\r\n\t *\r\n\t * @see away.library.AssetType\r\n\t */\r\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\r\n\t{\r\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a file and (optionally) all of its dependencies.\r\n\t *\r\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\r\n\t * @return A handle to the retrieved resource.\r\n\t */\r\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\r\n\t{\r\n\t\tthis.getLoader().load(req, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a resource from existing data in memory.\r\n\t *\r\n\t * @param data The data object containing all resource information.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\r\n\t * @return A handle to the retrieved resource.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\r\n\t{\r\n\t\tthis.getLoader().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tpublic getLoader():Loader\r\n\t{\r\n\t\tvar loader:Loader = new Loader();\r\n\r\n\t\tthis._loaderSessions.push(loader);\r\n\r\n\t\tloader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn loader;\r\n\t}\r\n\t\r\n\tpublic disposeLoader(loader:Loader):void\r\n\t{\r\n\t\tvar index:number = this._loaderSessions.indexOf(loader);\r\n\t\tthis._loaderSessions.splice(index, 1);\r\n\r\n\t\t// Add loader to a garbage array - for a collection sweep and kill\r\n\t\tthis._loaderSessionsGarbage.push(loader);\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getAsset(name:string, ns:string = null):IAsset\r\n\t{\r\n\t\tif (this._assetDictDirty)\r\n\t\t\tthis.rehashAssetDict();\r\n\r\n\t\tif (ns == null)\r\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\treturn null;\r\n\r\n\t\treturn this._assetDictionary[ns][name];\r\n\r\n\t}\r\n\tpublic getAllAssets():Array<IAsset>\r\n\t{\r\n\t\treturn this._assets;\r\n\t}\r\n\t/**\r\n\t * Adds an asset to the asset library, first making sure that it's name is unique\r\n\t * using the method defined by the <code>conflictStrategy</code> and\r\n\t * <code>conflictPrecedence</code> properties.\r\n\t */\r\n\tpublic addAsset(asset:IAsset):void\r\n\t{\r\n\t\tvar ns:string;\r\n\t\tvar old:IAsset;\r\n\r\n\t\t// Bail if asset has already been added.\r\n\t\tif (this._assets.indexOf(asset) >= 0)\r\n\t\t\treturn;\r\n\r\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\r\n\t\tns = asset.assetNamespace || AssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (old != null)\r\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\r\n\r\n\t\t//create unique-id (for now this is used in AwayBuilder only\r\n\t\t//asset.id = IDUtil.createUID();\r\n\r\n\t\t// Add it\r\n\t\tthis._assets.push(asset);\r\n\r\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\tthis._assetDictionary[ns] = new Object();\r\n\r\n\t\tthis._assetDictionary[ns][asset.name] = asset;\r\n\r\n\t\tasset.addEventListener(AssetEvent.RENAME, this._onAssetRenameDelegate);\r\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an asset from the library, and optionally disposes that asset by calling\r\n\t * it's disposeAsset() method (which for most assets is implemented as a default\r\n\t * version of that type's dispose() method.\r\n\t *\r\n\t * @param asset The asset which should be removed from this library.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t */\r\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true):void\r\n\t{\r\n\t\tvar idx:number;\r\n\r\n\t\tthis.removeAssetFromDict(asset);\r\n\r\n\t\tasset.removeEventListener(AssetEvent.RENAME, this._onAssetRenameDelegate);\r\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\r\n\r\n\t\tidx = this._assets.indexOf(asset);\r\n\r\n\t\tif (idx >= 0)\r\n\t\t\tthis._assets.splice(idx, 1);\r\n\r\n\t\tif (dispose)\r\n\t\t\tasset.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an asset which is specified using name and namespace.\r\n\t *\r\n\t * @param name The name of the asset to be removed.\r\n\t * @param ns The namespace to which the desired asset belongs.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see away.library.AssetLibrary.removeAsset()\r\n\t */\r\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\r\n\t{\r\n\t\tvar asset:IAsset = this.getAsset(name, ns);\r\n\r\n\t\tif (asset)\r\n\t\t\tthis.removeAsset(asset, dispose);\r\n\r\n\t\treturn asset;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all assets from the asset library, optionally disposing them as they\r\n\t * are removed.\r\n\t *\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t */\r\n\tpublic removeAllAssets(dispose:boolean = true):void\r\n\t{\r\n\t\tif (dispose) {\r\n\t\t\tvar asset:IAsset;\r\n\t\t\tvar len:number = this._assets.length;\r\n\t\t\tfor (var c:number = 0; c < len; c++) {\r\n\t\t\t\tasset = this._assets[c];\r\n\t\t\t\tasset.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._assets.length = 0;\r\n\t\tthis.rehashAssetDict();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all assets belonging to a particular namespace (null for default)\r\n\t * from the asset library, and optionall disposes them by calling their\r\n\t * disposeAsset() method.\r\n\t *\r\n\t * @param ns The namespace from which all assets should be removed.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see away.library.AssetLibrary.removeAsset()\r\n\t */\r\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true):void\r\n\t{\r\n\t\tvar idx:number = 0;\r\n\t\tvar asset:IAsset;\r\n\t\tvar old_assets:IAsset[];\r\n\r\n\t\t// Empty the assets vector after having stored a copy of it.\r\n\t\t// The copy will be filled with all assets which weren't removed.\r\n\t\told_assets = this._assets.concat();\r\n\t\tthis._assets.length = 0;\r\n\r\n\t\tif (ns == null)\r\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tvar len:number = old_assets.length;\r\n\t\tfor (var d:number = 0; d < len; d++) {\r\n\t\t\tasset = old_assets[d];\r\n\r\n\t\t\t// Remove from dict if in the supplied namespace. If not,\r\n\t\t\t// transfer over to the new vector.\r\n\t\t\tif (asset.assetNamespace == ns) {\r\n\t\t\t\tif (dispose)\r\n\t\t\t\t\tasset.dispose();\r\n\r\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\r\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\r\n\t\t\t\t// test that is not needed since we know that the namespace\r\n\t\t\t\t// will be empty when loop finishes.\r\n\t\t\t\tthis.removeAssetFromDict(asset, false);\r\n\t\t\t} else {\r\n\t\t\t\tthis._assets[idx++] = asset;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t for each (asset in old_assets) {\r\n\t\t // Remove from dict if in the supplied namespace. If not,\r\n\t\t // transfer over to the new vector.\r\n\t\t if (asset.assetNamespace == ns) {\r\n\t\t if (dispose)\r\n\t\t asset.dispose();\r\n\r\n\t\t // Remove asset from dictionary, but don't try to auto-remove\r\n\t\t // the namespace, which will trigger an unnecessarily expensive\r\n\t\t // test that is not needed since we know that the namespace\r\n\t\t // will be empty when loop finishes.\r\n\t\t removeAssetFromDict(asset, false);\r\n\t\t } else\r\n\t\t _assets[idx++] = asset;\r\n\r\n\t\t }\r\n\t\t */\r\n\r\n\t\t// Remove empty namespace\r\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\tdelete this._assetDictionary[ns];\r\n\t}\r\n\r\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true):void\r\n\t{\r\n\t\tif (this._assetDictDirty)\r\n\t\t\tthis.rehashAssetDict();\r\n\r\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\r\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\r\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\r\n\r\n\t\t\tif (autoRemoveEmptyNamespace) {\r\n\r\n\t\t\t\tvar key:string;\r\n\t\t\t\tvar empty:boolean = true;\r\n\r\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\r\n\t\t\t\t\tempty = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (empty)\r\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic stopAllLoaders():void\r\n\t{\r\n\t\tvar len:number = this._loaderSessions.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis.killloaderSession(this._loaderSessions[i]);\r\n\r\n\t\tthis._loaderSessions = new Array<Loader>();\r\n\t}\r\n\r\n\tprivate rehashAssetDict():void\r\n\t{\r\n\t\tvar asset:IAsset;\r\n\r\n\t\tthis._assetDictionary = {};\r\n\r\n\t\tvar len:number = this._assets.length;\r\n\t\tfor (var c:number = 0; c < len; c++) {\r\n\t\t\tasset = this._assets[c];\r\n\r\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\r\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\r\n\r\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\r\n\r\n\t\t}\r\n\r\n\t\tthis._assetDictDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during loading.\r\n\t */\r\n\tprivate onLoadError(event:URLLoaderEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing.\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent):void\r\n\t{\r\n\t\t// Only add asset to library the first time.\r\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\r\n\t\t\tthis.addAsset(event.asset);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:LoaderEvent):void\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent):void\r\n\t{\r\n\t\tvar loader:Loader = <Loader> event.target;\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis.disposeLoader(loader);\r\n\t}\r\n\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\tvar loader:Loader;\r\n\r\n\t\twhile (this._loaderSessionsGarbage.length > 0) {\r\n\t\t\tloader = this._loaderSessionsGarbage.pop();\r\n\t\t\tthis.killloaderSession(loader);\r\n\t\t}\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate killloaderSession(loader:Loader):void\r\n\t{\r\n\t\tloader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t\tloader.stop();\r\n\t}\r\n\r\n\r\n\tprivate onAssetRename(event:AssetEvent):void\r\n\t{\r\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\r\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\r\n\r\n\t\tif (old != null) {\r\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\r\n\t\t} else {\r\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\r\n\r\n\t\t\tif (dict == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tdict[event.prevName] = null;\r\n\t\t\tdict[event.asset.name] = event.asset;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetConflictResolved(event:AssetEvent):void\r\n\t{\r\n\t\tthis.dispatchEvent(event.clone());\r\n\t}\r\n}",
    "import {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\n\r\nexport class AssetLibraryIterator\r\n{\r\n\r\n\tprivate  _assets:Array<IAsset>;\r\n\tprivate _filtered:Array<IAsset>;\r\n\r\n\tprivate _idx:number;\r\n\r\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\r\n\t{\r\n\t\tthis._assets = assets;\r\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\tpublic get currentAsset():IAsset\r\n\t{\r\n\t\t// Return current, or null if no current\r\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\r\n\t}\r\n\r\n\tpublic get numAssets():number\r\n\t{\r\n\t\treturn this._filtered.length;\r\n\t}\r\n\r\n\tpublic next():IAsset\r\n\t{\r\n\t\tvar next:IAsset = null;\r\n\r\n\t\tif (this._idx < this._filtered.length)\r\n\t\t\tnext = this._filtered[this._idx];\r\n\r\n\t\tthis._idx++;\r\n\r\n\t\treturn next;\r\n\t}\r\n\r\n\tpublic reset():void\r\n\t{\r\n\t\tthis._idx = 0;\r\n\t}\r\n\r\n\tpublic setIndex(index:number):void\r\n\t{\r\n\t\tthis._idx = index;\r\n\t}\r\n\r\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc):void\r\n\t{\r\n\t\tif (assetTypeFilter || namespaceFilter) {\r\n\r\n\t\t\tvar idx:number;\r\n\t\t\tvar asset:IAsset;\r\n\r\n\r\n\t\t\tidx = 0;\r\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\r\n\r\n\t\t\tvar l:number = this._assets.length;\r\n\r\n\t\t\tfor (var c:number = 0; c < l; c++) {\r\n\r\n\t\t\t\tasset = <IAsset> this._assets[c];\r\n\r\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\r\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\r\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\r\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tthis._filtered[idx++] = asset;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/*\r\n\t\t\t for each (asset in _assets) {\r\n\t\t\t // Skip this assets if filtering on type and this is wrong type\r\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\r\n\t\t\t continue;\r\n\r\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\r\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\r\n\t\t\t continue;\r\n\r\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\r\n\t\t\t if (filterFunc != null && !filterFunc(asset))\r\n\t\t\t continue;\r\n\r\n\t\t\t _filtered[idx++] = asset;\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t} else {\r\n\t\t\tthis._filtered = this._assets;\r\n\t\t}\r\n\t}\r\n}",
    "import {URLRequest}\t\t\t\tfrom \"../net/URLRequest\";\r\nimport {EventBase}\t\t\t\tfrom \"../events/EventBase\";\r\nimport {AssetLibraryBundle}\t\tfrom \"../library/AssetLibraryBundle\";\r\nimport {AssetLibraryIterator}\t\tfrom \"../library/AssetLibraryIterator\";\r\nimport {Loader}\t\t\t\t\tfrom \"../library/Loader\";\r\nimport {LoaderContext}\t\t\tfrom \"../library/LoaderContext\";\r\nimport {ConflictStrategyBase}\t\tfrom \"../library/ConflictStrategyBase\";\r\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\r\n\r\n/**\r\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\r\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\r\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\r\n */\r\nexport class AssetLibrary\r\n{\r\n\t/**\r\n\t * Creates a new <code>AssetLibrary</code> object.\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t//*/\r\n\t/**\r\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\r\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\r\n\t * pass a string key to this method to define which bundle should be returned. This is\r\n\t * referred to as using the AssetLibraryBundle as a multiton.\r\n\t *\r\n\t * @param key Defines which multiton instance should be returned.\r\n\t * @return An instance of the asset library\r\n\t */\r\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\r\n\t{\r\n\t\treturn AssetLibraryBundle.getInstance(key);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static enableParser(parserClass):void\r\n\t{\r\n\t\tLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>):void\r\n\t{\r\n\t\tLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for conflictStrategy property on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.conflictStrategy\r\n\t */\r\n\tpublic static get conflictStrategy():ConflictStrategyBase\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\r\n\t}\r\n\r\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\r\n\t{\r\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.conflictPrecedence\r\n\t */\r\n\tpublic static get conflictPrecedence():string\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\r\n\t}\r\n\r\n\tpublic static set conflictPrecedence(val:string)\r\n\t{\r\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for createIterator() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.createIterator()\r\n\t */\r\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for load() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.load()\r\n\t */\r\n\tpublic static load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\r\n\t{\r\n\t\tAssetLibrary.getBundle().load(req, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for loadData() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.loadData()\r\n\t */\r\n\tpublic static loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\r\n\t{\r\n\t\tAssetLibrary.getBundle().loadData(data, context, ns, parser);\r\n\t}\r\n\r\n\tpublic static stopLoad():void\r\n\t{\r\n\t\tAssetLibrary.getBundle().stopAllLoaders();\r\n\t}\r\n\r\n\tpublic static getLoader():Loader\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().getLoader();\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for getAsset() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.getAsset()\r\n\t */\r\n\tpublic static getAsset(name:string, ns:string = null):IAsset\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for getAsset() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.getAsset()\r\n\t */\r\n\tpublic static getAllAssets():Array<IAsset>\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().getAllAssets();\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for addEventListener() method on default asset library bundle.\r\n\t */\r\n\tpublic static addEventListener(type:string, listener:(event:EventBase) => void):void\r\n\t{\r\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeEventListener() method on default asset library bundle.\r\n\t */\r\n\tpublic static removeEventListener(type:string, listener:(event:EventBase) => void):void\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for hasEventListener() method on default asset library bundle.\r\n\r\n\t public static hasEventListener(type:string):boolean\r\n\t {\r\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\r\n\t}\r\n\r\n\t public static willTrigger(type:string):boolean\r\n\t {\r\n\t\treturn getBundle().willTrigger(type);\r\n\t}\r\n\t */\r\n\r\n\t/**\r\n\t * Short-hand for addAsset() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.addAsset()\r\n\t */\r\n\tpublic static addAsset(asset:IAsset):void\r\n\t{\r\n\t\tAssetLibrary.getBundle().addAsset(asset);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAsset() method on default asset library bundle.\r\n\t *\r\n\t * @param asset The asset which should be removed from the library.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAsset()\r\n\t */\r\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true):void\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\r\n\t *\r\n\t * @param name The name of the asset to be removed.\r\n\t * @param ns The namespace to which the desired asset belongs.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAssetByName()\r\n\t */\r\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\r\n\t *\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAllAssets()\r\n\t */\r\n\tpublic static removeAllAssets(dispose:boolean = true):void\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\r\n\t */\r\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true):void\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\r\n\t}\r\n}",
    "/**\r\n * Enumaration export class for precedence when resolving naming conflicts in the library.\r\n *\r\n * @see away.library.AssetLibrary.conflictPrecedence\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.naming.ConflictStrategy\r\n */\r\nexport class ConflictPrecedence\r\n{\r\n\t/**\r\n\t * Signals that in a conflict, the previous owner of the conflicting name\r\n\t * should be favored (and keep it's name) and that the newly renamed asset\r\n\t * is reverted to a non-conflicting name.\r\n\t */\r\n\tpublic static FAVOR_OLD:string = 'favorOld';\r\n\r\n\t/**\r\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\r\n\t * it's newly defined name) and that the previous owner of that name gets\r\n\t * renamed to a non-conflicting name.\r\n\t */\r\n\tpublic static FAVOR_NEW:string = 'favorNew';\r\n}",
    "import {ConflictPrecedence}\t\tfrom \"../library/ConflictPrecedence\";\r\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {AbstractMethodError}\t\tfrom \"../errors/AbstractMethodError\";\r\nimport {AssetEvent}\t\t\t\tfrom \"../events/AssetEvent\";\r\n\r\n/**\r\n * Abstract base export class for naming conflict resolution classes. Extend this to create a\r\n * strategy export class which the asset library can use to resolve asset naming conflicts, or\r\n * use one of the bundled concrete strategy classes:\r\n *\r\n * <ul>\r\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\r\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\r\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\r\n * </ul>\r\n *\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.ConflictStrategy\r\n * @see away.library.IgnoreConflictStrategy\r\n * @see away.library.ErrorConflictStrategy\r\n * @see away.library.NumSuffixConflictStrategy\r\n */\r\nexport class ConflictStrategyBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\r\n\t * classes.\r\n\t */\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string):void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\r\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\r\n\t * would break any state caching that happens inside the strategy class.\r\n\t */\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\r\n\t * the conflict resolution by applying the new names and dispatching the correct events.\r\n\t */\r\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string):void\r\n\t{\r\n\t\tvar loser_prev_name:string;\r\n\t\tvar winner:IAsset;\r\n\t\tvar loser:IAsset;\r\n\r\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\r\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\r\n\r\n\t\tloser_prev_name = loser.name;\r\n\r\n\t\tassetsDictionary[winner.name] = winner;\r\n\t\tassetsDictionary[nonConflictingName] = loser;\r\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\r\n\r\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\r\n\t}\r\n}",
    "import {ConflictStrategyBase}\t\t\tfrom \"../library/ConflictStrategyBase\";\r\nimport {ErrorConflictStrategy}\t\tfrom \"../library/ErrorConflictStrategy\";\r\nimport {IgnoreConflictStrategy}\t\tfrom \"../library/IgnoreConflictStrategy\";\r\nimport {NumSuffixConflictStrategy}\tfrom \"../library/NumSuffixConflictStrategy\";\r\n\r\n/**\r\n * Enumeration export class for bundled conflict strategies. Set one of these values (or an\r\n * instance of a self-defined sub-export class of ConflictStrategyBase) to the conflictStrategy\r\n * property on an AssetLibrary to define how that library resolves naming conflicts.\r\n *\r\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\r\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\r\n *\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.naming.ConflictStrategyBase\r\n */\r\nexport class ConflictStrategy\r\n{\r\n\t/**\r\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\r\n\t * a numeric suffix appended to the base name.\r\n\t */\r\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\r\n\r\n\t/**\r\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\r\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\r\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\r\n\t */\r\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\r\n\r\n\t/**\r\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\r\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\r\n\t * to have the library automatically rename assets to avoid such conflicts.\r\n\t */\r\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\r\n\r\n\tconstructor(include?:ConflictStrategyBase)\r\n\t{\r\n\t\t//TODO: find out why typescript d.ts files do not include this class\r\n\t}\r\n}",
    "import {ConflictStrategyBase}\t\tfrom \"../library/ConflictStrategyBase\";\r\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\r\n\r\nexport class ErrorConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string):void\r\n\t{\r\n\t\tthrow new ErrorBase('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new ErrorConflictStrategy();\r\n\t}\r\n}",
    "export class IDUtil\r\n{\r\n\t/**\r\n\t *  @private\r\n\t *  Char codes for 0123456789ABCDEF\r\n\t */\r\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\r\n\r\n\t/**\r\n\t *  Generates a UID (unique identifier) based on ActionScript's\r\n\t *  pseudo-random number generator and the current time.\r\n\t *\r\n\t *  <p>The UID has the form\r\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\r\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\r\n\t *\r\n\t *  <p>This UID will not be truly globally unique; but it is the best\r\n\t *  we can do without player support for UID generation.</p>\r\n\t *\r\n\t *  @return The newly-generated UID.\r\n\t *\r\n\t *  @langversion 3.0\r\n\t *  @playerversion Flash 9\r\n\t *  @playerversion AIR 1.1\r\n\t *  @productversion Flex 3\r\n\t */\r\n\tpublic static createUID():string\r\n\t{\r\n\t\tvar uid = new Array(36);\r\n\t\tvar index:number = 0;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\r\n\t\tfor (i = 0; i < 8; i++)\r\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\r\n\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\tuid[index++] = 45; // charCode for \"-\"\r\n\r\n\t\t\tfor (j = 0; j < 4; j++)\r\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\t\t}\r\n\r\n\t\tuid[index++] = 45; // charCode for \"-\"\r\n\r\n\t\tvar time:number = new Date().getTime();\r\n\t\t// Note: time is the number of milliseconds since 1970,\r\n\t\t// which is currently more than one trillion.\r\n\t\t// We use the low 8 hex digits of this number in the UID.\r\n\t\t// Just in case the system clock has been reset to\r\n\t\t// Jan 1-4, 1970 (in which case this number could have only\r\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\r\n\t\t// before taking the low digits.\r\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\r\n\r\n\t\tfor (i = 0; i < 8; i++)\r\n\t\t\tuid[index++] = timeString.charCodeAt(i);\r\n\r\n\t\tfor (i = 0; i < 4; i++)\r\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\r\n\t\treturn String.fromCharCode.apply(null, uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the decimal representation of a hex digit.\r\n\t * @private\r\n\r\n\t private static getDigit(hex:string):number\r\n\t {\r\n\t\tswitch (hex) {\r\n\t\t\tcase \"A\":\r\n\t\t\tcase \"a\":\r\n\t\t\t\treturn 10;\r\n\t\t\tcase \"B\":\r\n\t\t\tcase \"b\":\r\n\t\t\t\treturn 11;\r\n\t\t\tcase \"C\":\r\n\t\t\tcase \"c\":\r\n\t\t\t\treturn 12;\r\n\t\t\tcase \"D\":\r\n\t\t\tcase \"d\":\r\n\t\t\t\treturn 13;\r\n\t\t\tcase \"E\":\r\n\t\t\tcase \"e\":\r\n\t\t\t\treturn 14;\r\n\t\t\tcase \"F\":\r\n\t\t\tcase \"f\":\r\n\t\t\t\treturn 15;\r\n\t\t\tdefault:\r\n\t\t\t\treturn new uint(hex);\r\n\t\t}\r\n\t}\r\n\t */\r\n\r\n}",
    "import {ConflictStrategyBase}\t\tfrom \"../library/ConflictStrategyBase\";\r\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\n\r\nexport class IgnoreConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string):void\r\n\t{\r\n\t\t// Do nothing, ignore the fact that there is a conflict.\r\n\t\treturn;\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new IgnoreConflictStrategy();\r\n\t}\r\n}",
    "export class LoaderContext\r\n{\r\n\tpublic static UNDEFINED:number = 0;\r\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\r\n\tpublic static MULTIPASS_MATERIALS:number = 2;\r\n\r\n\tprivate _includeDependencies:boolean;\r\n\tprivate _dependencyBaseUrl:string;\r\n\tprivate _embeddedDataByUrl:Object;\r\n\tprivate _remappedUrls:Object;\r\n\tprivate _materialMode:number;\r\n\r\n\tprivate _overrideAbsPath:boolean;\r\n\tprivate _overrideFullUrls:boolean;\r\n\r\n\t/**\r\n\t * LoaderContext provides configuration for the Loader load() and parse() operations.\r\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\r\n\t * embedded data.\r\n\t *\r\n\t * @see away.loading.Loader\r\n\t */\r\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\r\n\t{\r\n\t\tthis._includeDependencies = includeDependencies;\r\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\r\n\t\tthis._embeddedDataByUrl = {};\r\n\t\tthis._remappedUrls = {};\r\n\t\tthis._materialMode = LoaderContext.UNDEFINED;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\r\n\t * parseData() operations) should be automatically loaded. Defaults to true.\r\n\t */\r\n\tpublic get includeDependencies():boolean\r\n\t{\r\n\t\treturn this._includeDependencies;\r\n\t}\r\n\r\n\tpublic set includeDependencies(val:boolean)\r\n\t{\r\n\t\tthis._includeDependencies = val;\r\n\t}\r\n\r\n\t/**\r\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\r\n\t * Options:\r\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\r\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\r\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\r\n\t *\r\n\t */\r\n\tpublic get materialMode():number\r\n\t{\r\n\t\treturn this._materialMode;\r\n\t}\r\n\r\n\tpublic set materialMode(materialMode:number)\r\n\t{\r\n\t\tthis._materialMode = materialMode;\r\n\t}\r\n\r\n\t/**\r\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\r\n\t * Absolute paths will not be affected by the value of this property.\r\n\t */\r\n\tpublic get dependencyBaseUrl():string\r\n\t{\r\n\t\treturn this._dependencyBaseUrl;\r\n\t}\r\n\r\n\tpublic set dependencyBaseUrl(val:string)\r\n\t{\r\n\t\tthis._dependencyBaseUrl = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\r\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\r\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\r\n\t */\r\n\tpublic get overrideAbsolutePaths():boolean\r\n\t{\r\n\t\treturn this._overrideAbsPath;\r\n\t}\r\n\r\n\tpublic set overrideAbsolutePaths(val:boolean)\r\n\t{\r\n\t\tthis._overrideAbsPath = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\r\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\r\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\r\n\t */\r\n\tpublic get overrideFullURLs():boolean\r\n\t{\r\n\t\treturn this._overrideFullUrls;\r\n\t}\r\n\r\n\tpublic set overrideFullURLs(val:boolean)\r\n\t{\r\n\t\tthis._overrideFullUrls = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\r\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\r\n\t * expected by the loaded file.\r\n\t *\r\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\r\n\t * @param newUrl The URL from which away.should load the resource instead.\r\n\t *\r\n\t * @see mapUrlToData()\r\n\t */\r\n\tpublic mapUrl(originalUrl:string, newUrl:string):void\r\n\t{\r\n\t\tthis._remappedUrls[originalUrl] = newUrl;\r\n\t}\r\n\r\n\t/**\r\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\r\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\r\n\t *\r\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\r\n\t * @param data The embedded data. Can be ByteArray or a export class which can be used to create a bytearray.\r\n\t */\r\n\tpublic mapUrlToData(originalUrl:string, data:any):void\r\n\t{\r\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Defines whether embedded data has been mapped to a particular URL.\r\n\t */\r\n\tpublic _iHasDataForUrl(url:string):boolean\r\n\t{\r\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Returns embedded data for a particular URL.\r\n\t */\r\n\tpublic _iGetDataForUrl(url:string):any\r\n\t{\r\n\t\treturn this._embeddedDataByUrl[url];\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Defines whether a replacement URL has been mapped to a particular URL.\r\n\t */\r\n\tpublic _iHasMappingForUrl(url:string):boolean\r\n\t{\r\n\t\treturn this._remappedUrls.hasOwnProperty(url);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Returns new (replacement) URL for a particular original URL.\r\n\t */\r\n\tpublic _iGetRemappedUrl(originalUrl:string):string\r\n\t{\r\n\t\treturn this._remappedUrls[originalUrl];\r\n\t}\r\n}",
    "import {EventDispatcher}\t\t\tfrom \"../events/EventDispatcher\";\r\nimport {Loader}\t\t\t\t\tfrom \"../library/Loader\";\r\nimport {AssetBase}\t\t\t\tfrom \"../library/AssetBase\";\r\nimport {ByteArray}\t\t\t\tfrom \"../utils/ByteArray\";\r\n\r\n/**\r\n * The LoaderInfo export class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main export class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main export class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main export class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nexport class LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:AssetBase;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():AssetBase\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main export class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}",
    "import {LoaderContext}\t\t\tfrom \"../library/LoaderContext\";\r\nimport {LoaderInfo}\t\t\t\tfrom \"../library/LoaderInfo\";\r\nimport {URLLoader}\t\t\t\tfrom \"../net/URLLoader\";\r\nimport {URLLoaderDataFormat}\t\tfrom \"../net/URLLoaderDataFormat\";\r\nimport {URLRequest}\t\t\t\tfrom \"../net/URLRequest\";\r\nimport {AssetEvent}\t\t\t\tfrom \"../events/AssetEvent\";\r\nimport {EventDispatcher}\t\t\tfrom \"../events/EventDispatcher\";\r\nimport {URLLoaderEvent}\t\t\tfrom \"../events/URLLoaderEvent\";\r\nimport {LoaderEvent}\t\t\t\tfrom \"../events/LoaderEvent\";\r\nimport {ParserEvent}\t\t\t\tfrom \"../events/ParserEvent\";\r\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\r\nimport {ResourceDependency}\t\tfrom \"../parsers/ResourceDependency\";\r\n\r\n\r\n\r\n/**\r\n * Dispatched when any asset finishes parsing. Also see specific events for each\r\n * individual asset type (meshes, materials et c.)\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a full resource (including dependencies) finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a single dependency (which may be the main file of a resource)\r\n * finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during loading. I\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during parsing.\r\n *\r\n * @eventType away.events.ParserEvent\r\n */\r\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\r\n\r\n/**\r\n * Dispatched when an image asset dimensions are not a power of 2\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Loader can load any file format that away.supports (or for which a third-party parser\r\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\r\n * and for when the resource (or it's dependencies) have been loaded.\r\n *\r\n * The Loader will not make assets available in any other way than through the dispatched\r\n * events. To store assets and make them available at any point from any module in an application,\r\n * use the AssetLibrary to load and manage assets.\r\n *\r\n * @see away.library.AssetLibrary\r\n */\r\nexport class Loader extends EventDispatcher\r\n{\r\n\tprivate _context:LoaderContext;\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _uri:string;\r\n\tprivate _materialMode:number;\r\n\r\n\tprivate _errorHandlers:Array<(event:URLLoaderEvent) => boolean>;\r\n\tprivate _parseErrorHandlers:Array<(event:ParserEvent) => boolean>;\r\n\r\n\tprivate _stack:Array<ResourceDependency>;\r\n\tprivate _baseDependency:ResourceDependency;\r\n\tprivate _currentDependency:ResourceDependency;\r\n\tprivate _namespace:string;\r\n\r\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\r\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\r\n\tprivate _onLoadCompleteDelegate:(event:URLLoaderEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => void;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\r\n\r\n\t// Image parser only parser that is added by default, to save file size.\r\n\tprivate static _parsers:Array<any> = new Array<any>();\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parser The parser export class to enable.\r\n\t *\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parser):void\r\n\t{\r\n\t\tif (Loader._parsers.indexOf(parser) < 0)\r\n\t\t\tLoader._parsers.push(parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * Loader can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parsers A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parsers:Array<Object>):void\r\n\t{\r\n\t\tfor (var c:number = 0; c < parsers.length; c++)\r\n\t\t\tLoader.enableParser(parsers[ c ]);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the base dependency of the loader\r\n\t */\r\n\tpublic get baseDependency():ResourceDependency\r\n\t{\r\n\t\treturn this._baseDependency;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new ResourceLoadSession object.\r\n\t */\r\n\tconstructor(materialMode:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._materialMode = materialMode;\r\n\r\n\t\tthis._stack = new Array<ResourceDependency>();\r\n\t\tthis._errorHandlers = new Array<(event:URLLoaderEvent) => boolean>();\r\n\t\tthis._parseErrorHandlers = new Array<(event:ParserEvent) => boolean>();\r\n\r\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\r\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t\tthis._onLoadCompleteDelegate = (event:URLLoaderEvent) => this.onLoadComplete(event);\r\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a file and (optionally) all of its dependencies.\r\n\t *\r\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\r\n\t */\r\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\r\n\t{\r\n\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\r\n\t\tthis._context = context;\r\n\t\tthis._namespace = ns;\r\n\r\n\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\r\n\t\tthis.retrieveDependency(this._baseDependency);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a resource from already loaded data.\r\n\t *\r\n\t * @param data The data object containing all resource information.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\r\n\t */\r\n\tpublic loadData(data:any, id:string, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\r\n\t{\r\n\t\tthis._uri = id;\r\n\t\tthis._context = context;\r\n\t\tthis._namespace = ns;\r\n\r\n\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\r\n\t\tthis.retrieveDependency(this._baseDependency);\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\r\n\t * stack when complete and continues on the top set.\r\n\t * @param parser The parser that will translate the data into a usable resource.\r\n\t */\r\n\tprivate retrieveNext(parser:ParserBase = null):void\r\n\t{\r\n\t\tif (this._currentDependency.dependencies.length) {\r\n\r\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\r\n\r\n\t\t\tthis._stack.push(this._currentDependency);\r\n\t\t\tthis.retrieveDependency(next);\r\n\r\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\r\n\r\n\t\t\tthis._currentDependency.parser._iResumeParsing();\r\n\t\t\tthis._stack.pop();\r\n\r\n\t\t} else if (this._stack.length) {\r\n\r\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\r\n\r\n\t\t\tthis._currentDependency = this._stack.pop();\r\n\r\n\t\t\tif (prev._iSuccess)\r\n\t\t\t\tprev.resolve();\r\n\r\n\t\t\tthis.retrieveNext(parser);\r\n\r\n\t\t} else {\r\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.LOAD_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves a single dependency.\r\n\t * @param parser The parser that will translate the data into a usable resource.\r\n\t */\r\n\tprivate retrieveDependency(dependency:ResourceDependency):void\r\n\t{\r\n\t\tvar data:any;\r\n\r\n\t\tif (this._context && this._context.materialMode != 0)\r\n\t\t\tthis._materialMode = this._context.materialMode;\r\n\r\n\t\tthis._currentDependency = dependency;\r\n\r\n\t\tdependency._iLoader = new URLLoader();\r\n\r\n\t\tthis.addEventListeners(dependency._iLoader);\r\n\r\n\t\t// Get already loaded (or mapped) data if available\r\n\t\tdata = dependency.data;\r\n\r\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\r\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\r\n\r\n\t\tif (data) {\r\n\t\t\tif (data.constructor === Function)\r\n\t\t\t\tdata = new data();\r\n\r\n\t\t\tdependency._iSetData(data);\r\n\r\n\t\t\tif (dependency.retrieveAsRawData) {\r\n\t\t\t\t// No need to parse. The parent parser is expecting this\r\n\t\t\t\t// to be raw data so it can be passed directly.\r\n\t\t\t\tdependency.resolve();\r\n\r\n\t\t\t\t// Move on to next dependency\r\n\t\t\t\tthis.retrieveNext();\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis.parseDependency(dependency);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// Resolve URL and start loading\r\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\r\n\r\n\t\t\tif (dependency.retrieveAsRawData) {\r\n\t\t\t\t// Always use binary for raw data loading\r\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (!dependency.parser)\r\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\r\n\r\n\t\t\t\tif (dependency.parser) {\r\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\r\n\t\t\t\t\t// file type check will determine format after load, and if\r\n\t\t\t\t\t// binary, a text load will have broken the file data.\r\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdependency._iLoader.load(dependency.request);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate joinUrl(base:string, end:string):string\r\n\t{\r\n\t\tif (end.charAt(0) == '/' || end.charAt(0) == '\\\\')\r\n\t\t\tend = end.substr(1);\r\n\r\n\t\tif (end.charAt(0) == '.')\r\n\t\t\tend = end.substr(2);\r\n\r\n\t\tif (base.length == 0)\r\n\t\t\treturn end;\r\n\r\n\t\tif (base.charAt(base.length - 1) == '/' || base.charAt(base.length - 1) == '\\\\')\r\n\t\t\tbase = base.substr(0, base.length - 1);\r\n\r\n\t\treturn base.concat('/', end);\r\n\r\n\t}\r\n\r\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\r\n\t{\r\n\t\tvar scheme_re:RegExp;\r\n\t\tvar base:string;\r\n\t\tvar url:string = dependency.request.url;\r\n\r\n\t\t// Has the user re-mapped this URL?\r\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\r\n\t\t\treturn this._context._iGetRemappedUrl(url);\r\n\r\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\r\n\t\t// We will not try to resolve this since the user can probably be\r\n\t\t// thrusted to know this URL better than our automatic resolver. :)\r\n\t\tif (url == this._uri)\r\n\t\t\treturn url;\r\n\r\n\r\n\t\t// Absolute URL? Check if starts with slash or a URL\r\n\t\t// scheme definition (e.g. ftp://, http://, file://)\r\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\r\n\r\n\t\tif (url.charAt(0) == '/') {\r\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\r\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\r\n\t\t\t\treturn url;\r\n\t\t} else if (scheme_re.test(url)) {\r\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\r\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\r\n\t\t\tif (this._context && this._context.overrideFullURLs) {\r\n\r\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\r\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Since not absolute, just get rid of base file name to find it's\r\n\t\t// folder and then concatenate dynamic URL\r\n\t\tif (this._context && this._context.dependencyBaseUrl) {\r\n\t\t\tbase = this._context.dependencyBaseUrl;\r\n\t\t\treturn this.joinUrl(base, url);\r\n\t\t} else {\r\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\r\n\t\t\treturn this.joinUrl(base, url);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate retrieveParserDependencies():void\r\n\t{\r\n\t\tif (!this._currentDependency)\r\n\t\t\treturn;\r\n\r\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies;\r\n\t\tvar i:number, len:number = parserDependancies.length;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\r\n\r\n\t\t// Since more dependencies might be added eventually, empty this\r\n\t\t// list so that the same dependency isn't retrieved more than once.\r\n\t\tparserDependancies.length = 0;\r\n\r\n\t\tthis._stack.push(this._currentDependency);\r\n\r\n\t\tthis.retrieveNext();\r\n\t}\r\n\r\n\tprivate resolveParserDependencies():void\r\n\t{\r\n\t\tthis._currentDependency._iSuccess = true;\r\n\r\n\t\t// Retrieve any last dependencies remaining on this parser, or\r\n\t\t// if none exists, just move on.\r\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\r\n\t\t\tthis.retrieveParserDependencies();\r\n\t\telse\r\n\t\t\tthis.retrieveNext();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadError(event:URLLoaderEvent):void\r\n\t{\r\n\t\tvar handled:boolean;\r\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\r\n\t\tvar loader:URLLoader = event.urlLoader;\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\thandled = true;\r\n\t\t} else {\r\n\t\t\t// TODO: Consider not doing this even when Loader does have it's own LOAD_ERROR listener\r\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tif (!handled)\r\n\t\t\t\t\thandled = this._errorHandlers[i](event);\r\n\t\t}\r\n\r\n\t\tif (handled) {\r\n\r\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\r\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\r\n\r\n\t\t\t\tthis._currentDependency.resolveFailure();\r\n\t\t\t\tthis.retrieveNext();\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// Either this was the base file (last left in the stack) or\r\n\t\t\t\t// default behavior was prevented by the handlers, and hence\r\n\t\t\t\t// there is nothing more to do than clean up and bail.\r\n\t\t\t\tthis.dispose();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\t// Error event was not handled by listeners directly on Loader or\r\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\r\n\t * @param event\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):void\r\n\t{\r\n\t\tvar handled:boolean;\r\n\r\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\r\n\r\n\t\tvar loader:URLLoader = <URLLoader>event.target;\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\thandled = true;\r\n\t\t} else {\r\n\t\t\t// TODO: Consider not doing this even when Loader does\r\n\t\t\t// have it's own LOAD_ERROR listener\r\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\r\n\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tif (!handled)\r\n\t\t\t\t\thandled = this._parseErrorHandlers[i](event);\r\n\t\t}\r\n\r\n\t\tif (handled) {\r\n\t\t\tthis.retrieveNext();\r\n\t\t} else {\r\n\t\t\t// Error event was not handled by listeners directly on Loader or\r\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\r\n\t\t\tthrow new Error(event.message);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent):void\r\n\t{\r\n\t\t// Add loaded asset to list of assets retrieved as part\r\n\t\t// of the current dependency. This list will be inspected\r\n\t\t// by the parent parser when dependency is resolved\r\n\t\tif (this._currentDependency)\r\n\t\t\tthis._currentDependency.assets.push(event.asset);\r\n\r\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\r\n\r\n\t\tif (!this._currentDependency.suppresAssetEvents)\r\n\t\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tprivate onReadyForDependencies(event:ParserEvent):void\r\n\t{\r\n\t\tvar parser:ParserBase = <ParserBase> event.target;\r\n\r\n\t\tif (this._context && !this._context.includeDependencies)\r\n\t\t\tparser._iResumeParsing();\r\n\t\telse\r\n\t\t\tthis.retrieveParserDependencies();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadComplete(event:URLLoaderEvent):void\r\n\t{\r\n\t\tvar loader:URLLoader = event.urlLoader;\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\t// Resolve this dependency\r\n\t\tthis._currentDependency._iSetData(loader.data);\r\n\r\n\t\tif (this._currentDependency.retrieveAsRawData) {\r\n\t\t\t// No need to parse this data, which should be returned as is\r\n\t\t\tthis.resolveParserDependencies();\r\n\t\t} else {\r\n\t\t\tthis.parseDependency(this._currentDependency);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when parsing is complete.\r\n\t */\r\n\tprivate onParseComplete(event:ParserEvent):void\r\n\t{\r\n\t\tvar parser:ParserBase = <ParserBase> event.target;\r\n\r\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\r\n\r\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\r\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\r\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\r\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an image is too large or it's dimensions are not a power of 2\r\n\t * @param event\r\n\t */\r\n\tprivate onTextureSizeError(event:AssetEvent):void\r\n\t{\r\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tprivate addEventListeners(loader:URLLoader):void\r\n\t{\r\n\t\tloader.addEventListener(URLLoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\r\n\t\tloader.addEventListener(URLLoaderEvent.LOAD_ERROR, this._onLoadErrorDelegate);\r\n\t}\r\n\r\n\tprivate removeEventListeners(loader:URLLoader):void\r\n\t{\r\n\t\tloader.removeEventListener(URLLoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\r\n\t\tloader.removeEventListener(URLLoaderEvent.LOAD_ERROR, this._onLoadErrorDelegate);\r\n\t}\r\n\r\n\tpublic stop():void\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\tprivate dispose():void\r\n\t{\r\n\t\tthis._errorHandlers = null;\r\n\t\tthis._parseErrorHandlers = null;\r\n\t\tthis._context = null;\r\n\t\tthis._stack = null;\r\n\r\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\r\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\r\n\r\n\t\tthis._currentDependency = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\r\n\t * add error event listeners to the Loader instance. This system is used instead of\r\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\r\n\t * that if hasEventListener() returns true, it's client code that's listening for the\r\n\t * event. Secondly, functions added as error handler through this custom method are\r\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\r\n\t * whether they in turn had any client code listening for the event.) If no handlers\r\n\t * return true, the Loader knows that the event wasn't handled and will throw an RTE.\r\n\t */\r\n\r\n\tpublic _iAddParseErrorHandler(handler):void\r\n\t{\r\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\r\n\t\t\tthis._parseErrorHandlers.push(handler);\r\n\t}\r\n\r\n\tpublic _iAddErrorHandler(handler):void\r\n\t{\r\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\r\n\t\t\tthis._errorHandlers.push(handler);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Guesses the parser to be used based on the file contents.\r\n\t * @param data The data to be parsed.\r\n\t * @param uri The url or id of the object to be parsed.\r\n\t * @return An instance of the guessed parser.\r\n\t */\r\n\tprivate getParserFromData(data:any):ParserBase\r\n\t{\r\n\t\tvar len:number = Loader._parsers.length;\r\n\r\n\t\t// go in reverse order to allow application override of default parser added in away.proper\r\n\t\tfor (var i:number = len - 1; i >= 0; i--)\r\n\t\t\tif (Loader._parsers[i].supportsData(data))\r\n\t\t\t\treturn new Loader._parsers[i]();\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Initiates parsing of the loaded dependency.\r\n\t *\r\n\t * @param The dependency to be parsed.\r\n\t */\r\n\tprivate parseDependency(dependency:ResourceDependency):void\r\n\t{\r\n\t\tvar parser:ParserBase = dependency.parser;\r\n\r\n\t\t// If no parser has been defined, try to find one by letting\r\n\t\t// all plugged in parsers inspect the actual data.\r\n\t\tif (!parser)\r\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\r\n\r\n\t\tif (parser) {\r\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\r\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\r\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\r\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t\tif (dependency.request && dependency.request.url)\r\n\t\t\t\tparser._iFileName = dependency.request.url;\r\n\r\n\t\t\tparser.materialMode = this._materialMode;\r\n\r\n\t\t\tparser.parseAsync(dependency.data);\r\n\r\n\t\t} else {\r\n\t\t\tvar handled:boolean;\r\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\";\r\n\t\t\tvar event:ParserEvent = new ParserEvent(ParserEvent.PARSE_ERROR, message);\r\n\t\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\t\tthis.dispatchEvent(event);\r\n\t\t\t\thandled = true;\r\n\t\t\t} else {\r\n\t\t\t\t// TODO: Consider not doing this even when Loader does\r\n\t\t\t\t// have it's own LOAD_ERROR listener\r\n\t\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\t\tif (!handled)\r\n\t\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\r\n\t\t\t}\r\n\r\n\t\t\tif (handled) {\r\n\t\t\t\tthis.retrieveNext();\r\n\t\t\t} else {\r\n\t\t\t\t// Error event was not handled by listeners directly on Loader or\r\n\t\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\r\n\t\t\t\tthrow new Error(message);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Guesses the parser to be used based on the file extension.\r\n\t * @return An instance of the guessed parser.\r\n\t */\r\n\tprivate getParserFromSuffix(url:string):ParserBase\r\n\t{\r\n\t\t// Get rid of query string if any and extract extension\r\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\r\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\r\n\r\n\t\tvar len:number = Loader._parsers.length;\r\n\r\n\t\t// go in reverse order to allow application override of default parser added in away.proper\r\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\r\n\t\t\tvar parserClass:any = Loader._parsers[i];\r\n\t\t\tif (parserClass.supportsType(fileExtension))\r\n\t\t\t\treturn new parserClass();\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}",
    "import {ConflictStrategyBase}\t\tfrom \"../library/ConflictStrategyBase\";\r\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\n\r\nexport class NumSuffixConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tprivate _separator:string;\r\n\tprivate _next_suffix:Object;\r\n\r\n\tconstructor(separator:string = '.')\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._separator = separator;\r\n\t\tthis._next_suffix = {};\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string):void\r\n\t{\r\n\t\tvar orig:string;\r\n\t\tvar new_name:string;\r\n\t\tvar base:string;\r\n\t\tvar suffix:number;\r\n\r\n\t\torig = changedAsset.name;\r\n\r\n\t\tif (orig.indexOf(this._separator) >= 0) {\r\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\r\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\r\n\t\t\t// use entire name as base\r\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\r\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\r\n\r\n\t\t\tif (isNaN(suffix)) {\r\n\t\t\t\tbase = orig;\r\n\t\t\t\tsuffix = 0;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tbase = orig;\r\n\t\t\tsuffix = 0;\r\n\t\t}\r\n\r\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\r\n\r\n\t\t\tsuffix = this._next_suffix[base];\r\n\r\n\t\t}\r\n\r\n\t\t// Find the first suffixed name that does\r\n\t\t// not collide with other names.\r\n\t\tdo {\r\n\r\n\t\t\tsuffix++;\r\n\r\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\r\n\r\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\r\n\r\n\t\tthis._next_suffix[ base ] = suffix;\r\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\r\n\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new NumSuffixConflictStrategy(this._separator);\r\n\t}\r\n}",
    "export {AbstractionBase}\t\t\t\tfrom \"./library/AbstractionBase\";\r\nexport {AssetBase}\t\t\t\t\t\tfrom \"./library/AssetBase\";\r\nexport {AssetLibrary}\t\t\t\t\tfrom \"./library/AssetLibrary\";\r\nexport {AssetLibraryBundle}\t\t\t\tfrom \"./library/AssetLibraryBundle\";\r\nexport {AssetLibraryIterator}\t\t\tfrom \"./library/AssetLibraryIterator\";\r\nexport {ConflictPrecedence}\t\t\t\tfrom \"./library/ConflictPrecedence\";\r\nexport {ConflictStrategy}\t\t\t\tfrom \"./library/ConflictStrategy\";\r\nexport {ConflictStrategyBase}\t\t\tfrom \"./library/ConflictStrategyBase\";\r\nexport {ErrorConflictStrategy}\t\t\tfrom \"./library/ErrorConflictStrategy\";\r\nexport {IAbstractionPool}\t\t\t\tfrom \"./library/IAbstractionPool\";\r\nexport {IAsset}\t\t\t\t\t\t\tfrom \"./library/IAsset\";\r\nexport {IAssetClass}\t\t\t\t\tfrom \"./library/IAssetClass\";\r\nexport {IDUtil}\t\t\t\t\t\t\tfrom \"./library/IDUtil\";\r\nexport {IgnoreConflictStrategy}\t\t\tfrom \"./library/IgnoreConflictStrategy\";\r\nexport {Loader}\t\t\t\t\t\t\tfrom \"./library/Loader\";\r\nexport {LoaderContext}\t\t\t\t\tfrom \"./library/LoaderContext\";\r\nexport {LoaderInfo}\t\t\t\t\t\tfrom \"./library/LoaderInfo\";\r\nexport {NumSuffixConflictStrategy}\t\tfrom \"./library/NumSuffixConflictStrategy\";",
    "\r\nexport class AudioChannel\r\n{\r\n\tpublic static maxChannels:number = 16;\r\n\r\n\tpublic static _channels:Array<AudioChannel> = new Array<AudioChannel>();\r\n\r\n\tprivate _isPlaying:boolean = false;\r\n\tprivate _isLooping:boolean = false;\r\n\r\n\tprivate static _audioCtx;\r\n\tprivate _audioCtx;\r\n\r\n\tprivate _gainNode;\r\n\r\n\tprivate _audio:HTMLAudioElement;\r\n\r\n\tpublic get currentTime():number\r\n\t{\r\n\t\treturn this._audio.currentTime;\r\n\t}\r\n\r\n\r\n\tpublic get volume():number\r\n\t{\r\n\t\treturn this._gainNode.gain.value;\r\n\t}\r\n\r\n\tpublic set volume(value:number)\r\n\t{\r\n\t\tthis._gainNode.gain.value = value;\r\n\t}\r\n\r\n\tpublic isPlaying():boolean\r\n\t{\r\n\t\treturn this._isPlaying;\r\n\t}\r\n\r\n\tpublic isLooping():boolean\r\n\t{\r\n\t\treturn this._isLooping;\r\n\t}\r\n\r\n\tpublic isDecoding():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._audioCtx = AudioChannel._audioCtx || (AudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\r\n\r\n\t\tthis._gainNode = this._audioCtx.createGain();\r\n\t\tthis._gainNode = this._audioCtx.createGain();\r\n\t\tthis._gainNode.connect(this._audioCtx.destination);\r\n\r\n\t\tthis._audio = new Audio();\r\n\t\tthis._audio.onended = (event) => this._onEnded(event);\r\n\t\tthis._audio[\"crossOrigin\"] = \"anonymous\";\r\n\r\n\t\tvar source = this._audioCtx.createMediaElementSource(this._audio);\r\n\t\tsource.connect(this._gainNode);\r\n\t}\r\n\t\r\n\tpublic play(url:string, offset:number = 0, loop:boolean = false):void\r\n\t{\r\n\t\tthis._isPlaying = true;\r\n\t\tthis._isLooping = loop;\r\n\r\n\t\tthis._audio.src = url;\r\n\t\tthis._audio.loop = loop;\r\n\t\tthis._audio.currentTime = offset;\r\n\t\tthis._audio.play();\r\n\t}\r\n\r\n\tpublic stop():void\r\n\t{\r\n\t\tthis._audio.pause();\r\n\t\tthis._isPlaying = false;\r\n\t\tthis._isLooping = false;\r\n\t}\r\n\r\n\tprivate _onEnded(event):void\r\n\t{\r\n\t\tthis.stop();\r\n\t}\r\n}",
    "import {StreamingAudioChannel}\tfrom \"../managers/StreamingAudioChannel\";\r\nimport {WebAudioChannel}\t\t\tfrom \"../managers/WebAudioChannel\";\r\nimport {IAudioChannel}\t\t\tfrom \"../managers/IAudioChannel\";\r\nimport {IAudioChannelClass}\t\tfrom \"../managers/IAudioChannelClass\";\r\n\r\nexport class AudioManager\r\n{\r\n\t//todo: make AudioPlaybackManager keep track of active sounds + implement global playback control\r\n\tprivate static _externalSoundInterface:any=null;\r\n\tpublic static setExternalSoundInterface(new_obj:any):number\r\n\t{\r\n\t\tif(new_obj.startSound == null){\r\n\t\t\tconsole.log(\"Could not set the externalSoundInterface, because it does not provide a 'startSound' function\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(new_obj.stopSound == null){\r\n\t\t\tconsole.log(\"Could not set the externalSoundInterface, because it does not provide a 'stopSound' function\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tAudioManager._externalSoundInterface=new_obj;\r\n\t}\r\n\r\n\tpublic static getExternalSoundInterface():any\r\n\t{\r\n\t\treturn AudioManager._externalSoundInterface;\r\n\t}\r\n\r\n\r\n\tpublic static getChannel(byteLength:number):IAudioChannel\r\n\t{\r\n\t\t//choose best audio channel by bytelength\r\n\t\t//todo: StreamingAudioChannel doesnt seem to be working. no error, but also no sound is playing\r\n\t\tvar channelClass:IAudioChannelClass = (byteLength > 50000)? StreamingAudioChannel : WebAudioChannel;\r\n\t\t//var channelClass:IAudioChannelClass = WebAudioChannel;\r\n\r\n\t\tvar i:number = 0;\r\n\t\twhile(channelClass._channels[i] && channelClass._channels[i].isPlaying())\r\n\t\t\ti++;\r\n\r\n\t\tif (i == channelClass.maxChannels) {\r\n\t\t\t//pick the oldest channel to reuse, ignoring looping channels\r\n\t\t\tvar channel:IAudioChannel;\r\n\t\t\tvar len:number = channelClass._channels.length;\r\n\t\t\tfor (var j:number = 0; j < len; j++) {\r\n\t\t\t\tchannel = channelClass._channels[j];\r\n\t\t\t\tif (!channel.isLooping() && !channel.isDecoding()) {\r\n\t\t\t\t\tchannelClass._channels.push(channelClass._channels.splice(j, 1)[0]);\r\n\t\t\t\t\tchannel.stop();\r\n\t\t\t\t\treturn channel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//do not return channel until one is freed up\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn channelClass._channels[i] || (channelClass._channels[i] = new channelClass());\r\n\t}\r\n\r\n\r\n}",
    "import {ParserUtils}\t\t\t\tfrom \"../parsers/ParserUtils\";\r\n\r\nexport class EventAudioChannel\r\n{\r\n\tpublic static maxChannels:number = 4;\r\n\r\n\tpublic static _channels:Array<EventAudioChannel> = new Array<EventAudioChannel>();\r\n\r\n\tpublic static _base64Cache:Object = new Object();\r\n\r\n\tprivate _isPlaying:boolean = false;\r\n\tprivate _isLooping:boolean = false;\r\n\tprivate _volume:number;\r\n\tprivate _startTime:number = 0;\r\n\tprivate _duration:number;\r\n\t\r\n\tprivate _audio:HTMLAudioElement;\r\n\r\n\tpublic get duration():number\r\n\t{\r\n\t\treturn this._duration;\r\n\t}\r\n\r\n\tpublic get currentTime():number\r\n\t{\r\n\t\treturn this._audio.currentTime - this._startTime;\r\n\t}\r\n\r\n\r\n\tpublic get volume():number\r\n\t{\r\n\t\treturn this._volume;\r\n\t}\r\n\r\n\tpublic set volume(value:number)\r\n\t{\r\n\t\tif (this._volume == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._volume = value;\r\n\r\n\t\tthis._audio.volume = this._volume;\r\n\t}\r\n\r\n\tpublic isPlaying():boolean\r\n\t{\r\n\t\treturn this._isPlaying;\r\n\t}\r\n\r\n\tpublic isLooping():boolean\r\n\t{\r\n\t\treturn this._isLooping;\r\n\t}\r\n\r\n\tpublic isDecoding():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._audio = new Audio();\r\n\t\tthis._audio.ontimeupdate = (event) => this._onTimeUpdate(event);\r\n\t}\r\n\t\r\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false, id:number = 0):void\r\n\t{\r\n\t\tthis._isPlaying = true;\r\n\t\tthis._isLooping = loop;\r\n\r\n\t\tthis._audio.src = EventAudioChannel._base64Cache[id] || (EventAudioChannel._base64Cache[id] = ParserUtils.arrayBufferToBase64(buffer, \"audio/mp3\"));\r\n\t\tthis._audio.loop = this._isLooping;\r\n\r\n\t\tthis._audio.currentTime = offset;\r\n\t\tthis._audio.play();\r\n\t}\r\n\r\n\tpublic stop():void\r\n\t{\r\n\t\tthis._audio.pause();\r\n\t\tthis._isPlaying = false;\r\n\t\tthis._isLooping = false;\r\n\t}\r\n\r\n\tprivate _onTimeUpdate(event):void\r\n\t{\r\n\t\t//TODO: more accurate end detection\r\n\t\tif (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\r\n\t\t\tthis.stop();\r\n\t}\r\n}",
    "\r\nexport class StreamingAudioChannel\r\n{\r\n\tpublic static maxChannels:number = 4;\r\n\r\n\tpublic static _channels:Array<StreamingAudioChannel> = new Array<StreamingAudioChannel>();\r\n\r\n\tprivate _sourceOpenDelegate:(event) => void;\r\n\tprivate _updateEndDelegate:(event) => void;\r\n\tprivate _sourceBuffer:SourceBuffer;\r\n\tprivate _sourceDirty:boolean;\r\n\tprivate _isPlaying:boolean = false;\r\n\tprivate _isLooping:boolean = false;\r\n\tprivate _isQueuing:boolean;\r\n\tprivate _isOpening:boolean;\r\n\tprivate _buffer:ArrayBuffer;\r\n\tprivate _offset:number;\r\n\tprivate _volume:number;\r\n\tprivate _startTime:number = 0;\r\n\tprivate _duration:number;\r\n\t\r\n\tprivate _audio:HTMLAudioElement;\r\n\t\r\n\tprivate _mediaSource:MediaSource;\r\n\tprivate _urlString:string;\r\n\r\n\tpublic get duration():number\r\n\t{\r\n\t\treturn this._duration;\r\n\t}\r\n\r\n\tpublic get currentTime():number\r\n\t{\r\n\t\treturn this._audio.currentTime - this._startTime;\r\n\t}\r\n\r\n\r\n\tpublic get volume():number\r\n\t{\r\n\t\treturn this._volume;\r\n\t}\r\n\r\n\tpublic set volume(value:number)\r\n\t{\r\n\t\tif (this._volume == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._volume = value;\r\n\r\n\t\tthis._audio.volume = this._volume;\r\n\t}\r\n\r\n\tpublic isPlaying():boolean\r\n\t{\r\n\t\treturn this._isPlaying;\r\n\t}\r\n\r\n\tpublic isLooping():boolean\r\n\t{\r\n\t\treturn this._isLooping;\r\n\t}\r\n\r\n\tpublic isDecoding():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._sourceOpenDelegate = (event) => this._sourceOpen(event);\r\n\t\tthis._updateEndDelegate = (event) => this._updateEnd(event);\r\n\r\n\t\tthis._audio = new Audio();\r\n\t\tthis._audio.ontimeupdate = (event) => this._onTimeUpdate(event);\r\n\r\n\t\tthis._updateSource();\r\n\r\n\t}\r\n\t\r\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false):void\r\n\t{\r\n\t\tthis._isPlaying = true;\r\n\r\n\t\tif (this._isLooping || this._isLooping != loop) {\r\n\t\t\tthis._isLooping = loop;\r\n\t\t\tthis._sourceDirty = true;\r\n\t\t}\r\n\r\n\t\tif (this._sourceDirty)\r\n\t\t\tthis._updateSource();\r\n\r\n\t\tthis._buffer = buffer;\r\n\t\tthis._offset = offset;\r\n\r\n\t\tif (!this._isQueuing && !this._isOpening)\r\n\t\t\tthis._queueBuffer();\r\n\t}\r\n\r\n\tpublic stop():void\r\n\t{\r\n\t\tthis._audio.pause();\r\n\t\tthis._isPlaying = false;\r\n\t\tthis._isLooping = false;\r\n\t}\r\n\t\r\n\tprivate _sourceOpen(event):void\r\n\t{\r\n\t\tthis._isOpening = false;\r\n\r\n\t\t//TODO: find out how in the name of all that is holy how this can be executed more than once on a MediaSource object\r\n\t\tif (this._mediaSource.activeSourceBuffers.length) {\r\n\t\t\tconsole.log(\"ERR: double sourceopen event called\")\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._sourceBuffer = this._mediaSource.addSourceBuffer('audio/mpeg');\r\n\t\tthis._sourceBuffer.addEventListener(\"updateend\", this._updateEndDelegate);\r\n\r\n\t\tif (this._isPlaying)\r\n\t\t\tthis._queueBuffer();\r\n\t}\r\n\r\n\tprivate _queueBuffer():void\r\n\t{\r\n\t\tthis._isQueuing = true;\r\n\r\n\t\tthis._startTime = this._sourceBuffer.timestampOffset;\r\n\t\tthis._sourceBuffer.appendBuffer(this._buffer);\r\n\t}\r\n\r\n\tprivate _updateEnd(event):void\r\n\t{\r\n\t\tthis._isQueuing = false;\r\n\r\n\t\tif (this._isLooping)\r\n\t\t\tthis._mediaSource.endOfStream();\r\n\r\n\t\tthis._duration = this._sourceBuffer.timestampOffset - this._startTime;\r\n\r\n\t\tthis._audio.currentTime = this._startTime + this._offset;\r\n\t\tthis._audio.play();\r\n\t}\r\n\r\n\tprivate _onTimeUpdate(event):void\r\n\t{\r\n\t\t//TODO: more accurate end detection\r\n\t\tif (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\r\n\t\t\tthis.stop();\r\n\t}\r\n\r\n\tprivate _updateSource():void\r\n\t{\r\n\t\tif(this._mediaSource)\r\n\t\t\tthis._disposeSource();\r\n\r\n\t\tthis._isQueuing = false;\r\n\t\tthis._isOpening = true;\r\n\r\n\t\tthis._mediaSource = new MediaSource();\r\n\t\tthis._mediaSource.addEventListener(\"sourceopen\", this._sourceOpenDelegate);\r\n\t\tthis._urlString = URL.createObjectURL(this._mediaSource);\r\n\t\tthis._audio.src = this._urlString;\r\n\t\tthis._audio.loop = this._isLooping;\r\n\r\n\t\tthis._sourceDirty = false;\r\n\t}\r\n\r\n\tprivate _disposeSource():void\r\n\t{\r\n\t\tif (!this._isOpening) {\r\n\t\t\tif (this._sourceBuffer.timestampOffset)\r\n\t\t\t\tthis._sourceBuffer.remove(0, this._sourceBuffer.timestampOffset);\r\n\r\n\t\t\tthis._sourceBuffer.removeEventListener(\"updateend\", this._updateEndDelegate);\r\n\t\t\tthis._mediaSource.removeSourceBuffer(this._sourceBuffer);\r\n\t\t\tdelete this._sourceBuffer;\r\n\t\t\tthis._sourceBuffer = null;\r\n\t\t}\r\n\r\n\t\tthis._mediaSource.removeEventListener(\"sourceopen\", this._sourceOpenDelegate);\r\n\t\tURL.revokeObjectURL(this._urlString);\r\n\t\tdelete this._mediaSource;\r\n\t\tthis._mediaSource = null;\r\n\t}\r\n}",
    "\r\nexport class WebAudioChannel\r\n{\r\n\tpublic static maxChannels:number = 64;\r\n\r\n\tpublic static _channels:Array<WebAudioChannel> = new Array<WebAudioChannel>();\r\n\r\n\tpublic static _decodeCache:Object = new Object();\r\n\tpublic static _errorCache:Object = new Object();\r\n\r\n\tprivate static _audioCtx;\r\n\tprivate _audioCtx;\r\n\r\n\tprivate _gainNode;\r\n\tprivate _source;\r\n\r\n\tprivate _isPlaying:boolean = false;\r\n\tprivate _isLooping:boolean = false;\r\n\tprivate _isDecoding:boolean = false;\r\n\tprivate _currentTime:number;\r\n\tprivate _id:number;\r\n\tprivate _volume:number = 1;\r\n\tprivate _startTime:number = 0;\r\n\tprivate _duration:number;\r\n\r\n\tprivate _onEndedDelegate : (event:any) => void;\r\n\r\n\tpublic get duration():number\r\n\t{\r\n\t\treturn this._duration;\r\n\t}\r\n\r\n\tpublic get currentTime():number\r\n\t{\r\n\t\treturn this._audioCtx.currentTime - this._startTime;\r\n\t}\r\n\r\n\tpublic get volume():number\r\n\t{\r\n\t\treturn this._volume;\r\n\t}\r\n\r\n\tpublic set volume(value:number)\r\n\t{\r\n\t\tif (this._volume == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._volume = value;\r\n\r\n\t\tthis._gainNode.gain.value = this._volume;\r\n\t}\r\n\r\n\r\n\tpublic isPlaying():boolean\r\n\t{\r\n\t\treturn this._isPlaying;\r\n\t}\r\n\r\n\tpublic isLooping():boolean\r\n\t{\r\n\t\treturn this._isLooping;\r\n\t}\r\n\r\n\tpublic isDecoding():boolean\r\n\t{\r\n\t\treturn this._isDecoding;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._audioCtx = WebAudioChannel._audioCtx || (WebAudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\r\n\r\n\t\tthis._gainNode = this._audioCtx.createGain();\r\n\t\tthis._gainNode.gain.value = this._volume;\r\n\r\n\t\tthis._gainNode.connect(this._audioCtx.destination);\r\n\r\n\t\tthis._onEndedDelegate = (event) => this._onEnded(event);\r\n\t}\r\n\r\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false, id:number = 0):void\r\n\t{\r\n\t\tthis._isPlaying = true;\r\n\t\tthis._isLooping = loop;\r\n\r\n\t\tthis._currentTime = offset;\r\n\r\n\t\tthis._id = id;\r\n\r\n\t\tthis._isDecoding = true;\r\n\r\n\t\t//fast path for short sounds\r\n\t\tif (WebAudioChannel._decodeCache[id])\r\n\t\t\tthis._onDecodeComplete(WebAudioChannel._decodeCache[id]);\r\n\t\telse if (!WebAudioChannel._errorCache[id])\r\n\t\t\tthis._audioCtx.decodeAudioData(buffer, (buffer) => this._onDecodeComplete(buffer), (event) => this._onError(event));\r\n\t\telse\r\n\t\t\tthis.stop();\r\n\t}\r\n\r\n\tpublic stop():void\r\n\t{\r\n\t\tif (!this._isPlaying)\r\n\t\t\treturn;\r\n\r\n\t\tthis._isPlaying = false;\r\n\t\tthis._isLooping = false;\r\n\t\tthis._isDecoding = false;\r\n\r\n\t\tif (this._source)\r\n\t\t\tthis._disposeSource();\r\n\t}\r\n\r\n\tpublic _onDecodeComplete(buffer):void\r\n\t{\r\n\t\tif (!this._isPlaying)\r\n\t\t\treturn;\r\n\r\n\t\tthis._isDecoding = false;\r\n\r\n\t\t//if (buffer.duration < 2) //cache all buffers?\r\n\t\tWebAudioChannel._decodeCache[this._id] = buffer;\r\n\r\n\t\tif (this._source)\r\n\t\t\tthis._disposeSource();\r\n\r\n\t\tthis._source = this._audioCtx.createBufferSource();\r\n\r\n\t\tthis._source.loop = this._isLooping;\r\n\t\tthis._source.connect(this._gainNode);\r\n\r\n\t\tthis._source.buffer = buffer;\r\n\t\tthis._duration = buffer.duration;\r\n\r\n\t\tthis._startTime = this._audioCtx.currentTime - this._currentTime;\r\n\t\tthis._source.onended = this._onEndedDelegate;\r\n\t\ttry {\r\n\t\t\tthis._source.start(this._audioCtx.currentTime, this._currentTime);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"Error starting audio: \" + error);\r\n\t\t\tthis._disposeSource();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _onError(event):void\r\n\t{\r\n\t\tconsole.log(\"Error with decoding audio data\");\r\n\t\tWebAudioChannel._errorCache[this._id] = true;\r\n\t\tthis.stop();\r\n\t}\r\n\r\n\tprivate _onEnded(event):void\r\n\t{\r\n\t\tthis.stop();\r\n\t}\r\n\r\n\tprivate _disposeSource():void\r\n\t{\r\n\t\t//clean up\r\n\t\tthis._source.stop(this._audioCtx.currentTime);\r\n\t\tthis._source.onended = null;\r\n\t\tthis._source.disconnect();\r\n\t\tdelete this._source.buffer;\r\n\t\tdelete this._source;\r\n\t\tthis._source = null;\r\n\t}\r\n}",
    "export {AudioManager}\t\t\t\t\tfrom \"./managers/AudioManager\";\r\nexport {IAudioChannel}\t\t\t\t\tfrom \"./managers/IAudioChannel\";\r\nexport {IAudioChannelClass}\t\t\t\tfrom \"./managers/IAudioChannelClass\";\r\nexport {StreamingAudioChannel}\t\t\tfrom \"./managers/StreamingAudioChannel\";\r\nexport {WebAudioChannel}\t\t\t\tfrom \"./managers/WebAudioChannel\";",
    "export class CrossDomainPolicy\r\n{\r\n\tpublic static ANONYMOUS:string = 'anonymous';\r\n\r\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\r\n}\r\n",
    "export class URLLoaderDataFormat\r\n{\r\n\t/**\r\n\t * TEXT\r\n\t * @type {string}\r\n\t */\r\n\tpublic static TEXT:string = \"text\";\r\n\r\n\t/**\r\n\t * Variables / Value Pairs\r\n\t * @type {string}\r\n\t */\r\n\tpublic static VARIABLES:string = \"variables\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static BLOB:string = \"blob\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static BINARY:string = \"binary\";\r\n}",
    "import {URLLoaderDataFormat}\t\t\tfrom \"../net/URLLoaderDataFormat\";\r\nimport {URLRequest}\t\t\t\t\tfrom \"../net/URLRequest\";\r\nimport {URLRequestMethod}\t\t\t\tfrom \"../net/URLRequestMethod\";\r\nimport {URLVariables}\t\t\t\t\tfrom \"../net/URLVariables\";\r\nimport {EventDispatcher}\t\t\t\tfrom \"../events/EventDispatcher\";\r\nimport {URLLoaderEvent}\t\t\t\tfrom \"../events/URLLoaderEvent\";\r\n\r\n/**\r\n * The URLLoader is used to load a single file, as part of a resource.\r\n *\r\n * While URLLoader can be used directly, e.g. to create a third-party asset\r\n * management system, it's recommended to use any of the classes Loader3D, Loader\r\n * and AssetLibrary instead in most cases.\r\n *\r\n * @see Loader\r\n * @see away.library.AssetLibrary\r\n */\r\nexport class URLLoader extends EventDispatcher\r\n{\r\n\tprivate _XHR:XMLHttpRequest;\r\n\tprivate _status:number;\r\n\tprivate _bytesLoaded:number = 0;\r\n\tprivate _bytesTotal:number = 0;\r\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\r\n\tprivate _loadError:boolean = false;\r\n\r\n\tprivate _request:URLRequest;\r\n\tprivate _data:any;\r\n\r\n\tprivate _loadStartEvent:URLLoaderEvent;\r\n\tprivate _loadErrorEvent:URLLoaderEvent;\r\n\tprivate _loadCompleteEvent:URLLoaderEvent;\r\n\tprivate _progressEvent:URLLoaderEvent;\r\n\tprivate _statusEvent:URLLoaderEvent;\r\n\r\n\t/**\r\n\t * Creates a new URLLoader object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\r\n\t\treturn this._request? this._request.url : '';\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * URLLoaderDataFormat.BINARY\r\n\t * URLLoaderDataFormat.TEXT\r\n\t * URLLoaderDataFormat.VARIABLES\r\n\t *\r\n\t * @param format\r\n\t */\r\n\tpublic set dataFormat(format:string)\r\n\t{\r\n\t\tthis._dataFormat = format;\r\n\t}\r\n\r\n\tpublic get dataFormat():string\r\n\t{\r\n\t\treturn this._dataFormat;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get bytesLoaded():number\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get bytesTotal():number\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * Load a resource from a file.\r\n\t *\r\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\r\n\t */\r\n\tpublic load(request:URLRequest):void\r\n\t{\r\n\t\tthis._request = request;\r\n\r\n\t\tthis.initXHR();\r\n\r\n\t\tif (request.method === URLRequestMethod.POST)\r\n\t\t\tthis.postRequest(request);\r\n\t\telse\r\n\t\t\tthis.getRequest(request);\r\n\t}\r\n\r\n\tpublic isSupported():boolean {\r\n\t\treturn window != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic close():void\r\n\t{\r\n\t\tthis._XHR.abort();\r\n\r\n\t\tthis.disposeXHR();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tif (this._XHR)\r\n\t\t\tthis._XHR.abort();\r\n\r\n\t\tthis.disposeXHR();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param xhr\r\n\t * @param responseType\r\n\t */\r\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\r\n\t{\r\n\t\tswitch (responseType) {\r\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\r\n\t\t\tcase URLLoaderDataFormat.BLOB:\r\n\t\t\tcase URLLoaderDataFormat.TEXT:\r\n\t\t\t\txhr.responseType = responseType;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\r\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.BINARY:\r\n\t\t\t\txhr.responseType = '';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param request {URLRequest}\r\n\t */\r\n\tprivate getRequest(request:URLRequest):void\r\n\t{\r\n\t\ttry {\r\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\r\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\r\n\t\t\tthis._XHR.send(); // No data to send\r\n\t\t} catch (e /* <XMLHttpRequestException> */) {\r\n\t\t\tthis.handleXmlHttpRequestException(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param request {URLRequest}\r\n\t */\r\n\tprivate postRequest(request:URLRequest):void\r\n\t{\r\n\t\tthis._loadError = false;\r\n\r\n\t\tthis._XHR.open(request.method, request.url, request.async);\r\n\r\n\t\tif (request.data != null) {\r\n\t\t\tif (request.data instanceof URLVariables) {\r\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._XHR.responseType = 'text';\r\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\r\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\r\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\r\n\r\n\t\t\t\tif (request.data)\r\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._XHR.send(); // no data to send\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._XHR.send(); // No data to send\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param error {XMLHttpRequestException}\r\n\t */\r\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\r\n\t{\r\n\t\tswitch (error.code) {\r\n\r\n\t\t/******************************************************************************************************************************************************************************************************\r\n\t\t *\r\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\r\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\r\n\t\t *\r\n\t\t ******************************************************************************************************************************************************************************************************/\r\n\r\n\t\t\tcase 101:\r\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate initXHR():void\r\n\t{\r\n\t\tif (!this._XHR) {\r\n\t\t\tthis._XHR = new XMLHttpRequest();\r\n\r\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\r\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\r\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\r\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\r\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\r\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\r\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\r\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate disposeXHR():void\r\n\t{\r\n\t\tif (this._XHR !== null) {\r\n\t\t\tthis._XHR.onloadstart = null;\r\n\t\t\tthis._XHR.onprogress = null;\r\n\t\t\tthis._XHR.onabort = null;\r\n\t\t\tthis._XHR.onerror = null;\r\n\t\t\tthis._XHR.onload = null;\r\n\t\t\tthis._XHR.ontimeout = null;\r\n\t\t\tthis._XHR.onloadend = null;\r\n\t\t\tthis._XHR = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tpublic decodeURLVariables(source:string):Object\r\n\t{\r\n\t\tvar result:Object = new Object();\r\n\r\n\t\tsource = source.split(\"+\").join(\" \");\r\n\r\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n\t\twhile (tokens = re.exec(source))\r\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// XMLHttpRequest - Event Handlers\r\n\r\n\t/**\r\n\t * When XHR state changes\r\n\t * @param event\r\n\t */\r\n\tprivate onReadyStateChange(event:Event):void\r\n\t{\r\n\t\tif (this._XHR.readyState == 4) {\r\n\t\t\tthis._status = this._XHR.status;\r\n\t\t\tif (this._status == 404) {\r\n\t\t\t\tthis._loadError = true;\r\n\r\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent || (this._loadErrorEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_ERROR, this)));\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchEvent(this._statusEvent || (this._statusEvent = new URLLoaderEvent(URLLoaderEvent.HTTP_STATUS, this)));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has completed, regardless of whether or not it was successful.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadEnd(event:ProgressEvent):void\r\n\t{\r\n\t\tif (this._loadError === true)\r\n\t\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * When the author specified timeout has passed before the request could complete.\r\n\t * @param event\r\n\t */\r\n\tprivate onTimeOut(event:Event):void\r\n\t{\r\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\r\n\t * @param event\r\n\t */\r\n\tprivate onAbort(event:UIEvent):void\r\n\t{\r\n\t\t// TODO: investigate whether this needs to be an IOError\r\n\t}\r\n\r\n\t/**\r\n\t * While loading and sending data.\r\n\t * @param event\r\n\t */\r\n\tprivate onProgress(event:ProgressEvent):void\r\n\t{\r\n\t\tthis._bytesTotal = event.total;\r\n\t\tthis._bytesLoaded = event.loaded;\r\n\r\n\t\tthis.dispatchEvent(this._progressEvent || (this._progressEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_PROGRESS, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * When the request starts.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadStart(event:ProgressEvent):void\r\n\t{\r\n\t\tthis.dispatchEvent(this._loadStartEvent || (this._loadStartEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_START, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has successfully completed.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadComplete(event:Event):void\r\n\t{\r\n\t\tif (this._loadError === true)\r\n\t\t\treturn;\r\n\r\n\t\tswitch (this._dataFormat) {\r\n\t\t\tcase URLLoaderDataFormat.TEXT:\r\n\t\t\t\tthis._data = this._XHR.responseText;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\r\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.BLOB:\r\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\r\n\t\t\tcase URLLoaderDataFormat.BINARY:\r\n\t\t\t\tthis._data = this._XHR.response;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthis._data = this._XHR.responseText;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent(this._loadCompleteEvent || (this._loadCompleteEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_COMPLETE, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has failed. ( due to network issues ).\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadError(event:Event):void\r\n\t{\r\n\t\tthis._loadError = true;\r\n\r\n\t\tthis.dispatchEvent(this._loadErrorEvent || (this._loadErrorEvent  = new URLLoaderEvent(URLLoaderEvent.LOAD_ERROR, this)));\r\n\t}\r\n}",
    "export class URLRequestMethod\r\n{\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static POST:string = 'POST';\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static GET:string = 'GET';\r\n}",
    "import {URLRequestMethod}\t\t\t\tfrom \"../net/URLRequestMethod\";\r\n\r\nexport class URLRequest\r\n{\r\n\t/*\r\n\t * The MIME content type of the content in the the data property.\r\n\t * @type {string}\r\n\t */\r\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\r\n\r\n\t/**\r\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\r\n\t *\r\n\t */\r\n\tpublic data:any;\r\n\r\n\t/**\r\n\t *\r\n\t * away.net.URLRequestMethod.GET\r\n\t * away.net.URLRequestMethod.POST\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic method:string = URLRequestMethod.GET;\r\n\r\n\t/**\r\n\t * Use asynchronous XMLHttpRequest\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic async:boolean = true;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _url:string;\r\n\r\n\t/**\r\n\r\n\t * @param url\r\n\t */\r\n\tconstructor(url:string = null)\r\n\t{\r\n\t\tthis._url = url;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set url(value:string)\r\n\t{\r\n\t\tthis._url = value;\r\n\t}\r\n\r\n\t/**\r\n\t * dispose\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.data = null;\r\n\t\tthis._url = null;\r\n\t}\r\n}",
    "export class URLVariables\r\n{\r\n\tprivate _variables:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tconstructor(source:string = null)\r\n\t{\r\n\t\tif (source !== null)\r\n\t\t\tthis.decode(source);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tpublic decode(source:string):void\r\n\t{\r\n\t\tsource = source.split(\"+\").join(\" \");\r\n\r\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n\t\twhile (tokens = re.exec(source))\r\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic get variables():Object\r\n\t{\r\n\t\treturn this._variables;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic get formData():FormData\r\n\t{\r\n\t\tvar fd:FormData = new FormData();\r\n\r\n\t\tfor (var s in this._variables)\r\n\t\t\tfd.append(s, this._variables[s]);\r\n\r\n\t\treturn fd;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic set variables(obj:Object)\r\n\t{\r\n\t\tthis._variables = obj;\r\n\t}\r\n}",
    "export {CrossDomainPolicy}\t\t\t\tfrom \"./net/CrossDomainPolicy\";\r\nexport {URLLoader}\t\t\t\t\t\tfrom \"./net/URLLoader\";\r\nexport {URLLoaderDataFormat}\t\t\tfrom \"./net/URLLoaderDataFormat\";\r\nexport {URLRequest}\t\t\t\t\t\tfrom \"./net/URLRequest\";\r\nexport {URLRequestMethod}\t\t\t\tfrom \"./net/URLRequestMethod\";\r\nexport {URLVariables}\t\t\t\t\tfrom \"./net/URLVariables\";",
    "import {BitmapImage2D}\t\t\tfrom \"../image/BitmapImage2D\";\r\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {URLLoaderDataFormat}\t\tfrom \"../net/URLLoaderDataFormat\";\r\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\r\nimport {ParserUtils}\t\t\t\tfrom \"../parsers/ParserUtils\";\r\nimport {ByteArray}\t\t\t\tfrom \"../utils/ByteArray\";\r\n\r\n/**\r\n * Image2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nexport class Image2DParser extends ParserBase\r\n{\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _doneParsing:boolean;\r\n\tprivate _loadingImage:boolean;\r\n\tprivate _htmlImageElement:HTMLImageElement;\r\n\r\n\t/**\r\n\t * Creates a new Image2DParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.BLOB);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\r\n\t\tif (data  instanceof HTMLImageElement)\r\n\t\t\treturn true;\r\n\r\n\t\tif (!(data instanceof ByteArray))\r\n\t\t\treturn false;\r\n\r\n\t\tvar ba:ByteArray = <ByteArray> data;\r\n\t\tba.position = 0;\r\n\r\n\t\tif (ba.readUnsignedShort() == 0xd8ff)\r\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readShort() == 0x424D)\r\n\t\t\treturn true; // BMP\r\n\r\n\t\tba.position = 1;\r\n\t\tif (ba.readUTFBytes(3) == 'PNG')\r\n\t\t\treturn true;\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\r\n\t\t\treturn true;\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUTFBytes(3) == 'ATF')\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\r\n\t\tvar asset:BitmapImage2D;\r\n\t\tvar sizeError:boolean = false;\r\n\r\n\t\tif (this._loadingImage) {\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t} else if (this._htmlImageElement) {\r\n\t\t\t//if (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\r\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t//}\r\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\r\n\t\t\tvar htmlImageElement:HTMLImageElement = <HTMLImageElement> this.data;\r\n\t\t\t//if (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\r\n\r\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement, false);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t//} else {\r\n\t\t\t//\tsizeError = true;\r\n\t\t\t//}\r\n\r\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\r\n\r\n\t\t\tvar ba:ByteArray = this.data;\r\n\t\t\tba.position = 0;\r\n\t\t\tthis._htmlImageElement = ParserUtils.byteArrayToImage(this.data);\r\n\r\n\t\t\tif (!this._htmlImageElement.complete) {\r\n\t\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\r\n\t\t\t\tthis._loadingImage = true;\r\n\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\r\n\t\t\t//if (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\r\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t//} else {\r\n\t\t\t//\tsizeError = true;\r\n\t\t\t//\r\n\t\t\t//}\r\n\r\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\r\n\r\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\r\n\r\n\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\r\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\r\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\r\n\r\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\r\n\r\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\r\n\t\t\tthis._loadingImage = true;\r\n\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t}\r\n\r\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\r\n\t\t{\r\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\r\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\r\n\t\t}\r\n\r\n\t\tthis._pContent = asset;\r\n\r\n\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t}\r\n\r\n\tpublic onLoadComplete(event):void\r\n\t{\r\n\t\tthis._loadingImage = false;\r\n\t}\r\n}",
    "import {BitmapImage2D}\t\t\tfrom \"../image/BitmapImage2D\";\r\nimport {BitmapImageCube}\t\t\tfrom \"../image/BitmapImageCube\";\r\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {URLLoaderDataFormat}\t\tfrom \"../net/URLLoaderDataFormat\";\r\nimport {URLRequest}\t\t\t\tfrom \"../net/URLRequest\";\r\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\r\nimport {ResourceDependency}\t\tfrom \"../parsers/ResourceDependency\";\r\n\r\n/**\r\n * ImageCubeParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nexport class ImageCubeParser extends ParserBase\r\n{\r\n\tprivate static posX:string = 'posX';\r\n\tprivate static negX:string = 'negX';\r\n\tprivate static posY:string = 'posY';\r\n\tprivate static negY:string = 'negY';\r\n\tprivate static posZ:string = 'posZ';\r\n\tprivate static negZ:string = 'negZ';\r\n\r\n\tprivate _imgDependencyDictionary:Object;\r\n\r\n\t/**\r\n\t * Creates a new ImageCubeParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"cube\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\ttry {\r\n\t\t\tvar obj = JSON.parse(data);\r\n\r\n\t\t\tif (obj)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\treturn false;\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\r\n\t\t\tvar asset:BitmapImageCube = new BitmapImageCube(this._getBitmapImage2D(ImageCubeParser.posX).width);\r\n\r\n\t\t\tasset.draw(BitmapImageCube.posX, this._getBitmapImage2D(ImageCubeParser.posX));\r\n\t\t\tasset.draw(BitmapImageCube.negX, this._getBitmapImage2D(ImageCubeParser.negX));\r\n\t\t\tasset.draw(BitmapImageCube.posY, this._getBitmapImage2D(ImageCubeParser.posY));\r\n\t\t\tasset.draw(BitmapImageCube.negY, this._getBitmapImage2D(ImageCubeParser.negY));\r\n\t\t\tasset.draw(BitmapImageCube.posZ, this._getBitmapImage2D(ImageCubeParser.posZ));\r\n\t\t\tasset.draw(BitmapImageCube.negZ, this._getBitmapImage2D(ImageCubeParser.negZ));\r\n\r\n\t\t\t//clear dictionary\r\n\t\t\tthis._imgDependencyDictionary = null;\r\n\r\n\t\t\tasset.name = this._iFileName;\r\n\r\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tvar json:any = JSON.parse(this.data);\r\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\r\n\t\t\tvar rec:any;\r\n\r\n\t\t\tif (data.length != 6)\r\n\t\t\t\tthis._pDieWithError('ImageCubeParser: Error - cube texture should have exactly 6 images');\r\n\r\n\t\t\tif (json) {\r\n\t\t\t\tthis._imgDependencyDictionary = new Object();\r\n\r\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\r\n\t\t\t\t\trec = data[c];\r\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this._validateCubeData()) {\r\n\r\n\t\t\t\t\tthis._pDieWithError(\"ImageCubeParser: JSON data error - cubes require id of:   \\n\" + ImageCubeParser.posX + ', ' + ImageCubeParser.negX + ',  \\n' + ImageCubeParser.posY + ', ' + ImageCubeParser.negY + ',  \\n' + ImageCubeParser.posZ + ', ' + ImageCubeParser.negZ);\r\n\r\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\r\n\t\t}\r\n\r\n\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t}\r\n\r\n\tprivate _validateCubeData():boolean\r\n\t{\r\n\t\treturn  ( this._imgDependencyDictionary[ ImageCubeParser.posX ] != null && this._imgDependencyDictionary[ ImageCubeParser.negX ] != null && this._imgDependencyDictionary[ ImageCubeParser.posY ] != null && this._imgDependencyDictionary[ ImageCubeParser.negY ] != null && this._imgDependencyDictionary[ ImageCubeParser.posZ ] != null && this._imgDependencyDictionary[ ImageCubeParser.negZ ] != null );\r\n\t}\r\n\r\n\tprivate _getBitmapImage2D(name:string):BitmapImage2D\r\n\t{\r\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\r\n\r\n\t\tif (dependency)\r\n\t\t\treturn <BitmapImage2D> dependency.assets[0];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n}",
    "import {BitmapImage2D}\t\t\tfrom \"../image/BitmapImage2D\";\r\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {URLRequest}\t\t\t\tfrom \"../net/URLRequest\";\r\nimport {AbstractMethodError}\t\tfrom \"../errors/AbstractMethodError\";\r\nimport {AssetEvent}\t\t\t\tfrom \"../events/AssetEvent\";\r\nimport {EventDispatcher}\t\t\tfrom \"../events/EventDispatcher\";\r\nimport {ParserEvent}\t\t\t\tfrom \"../events/ParserEvent\";\r\nimport {TimerEvent}\t\t\t\tfrom \"../events/TimerEvent\";\r\nimport {ParserUtils}\t\t\t\tfrom \"../parsers/ParserUtils\";\r\nimport {ResourceDependency}\t\tfrom \"../parsers/ResourceDependency\";\r\nimport {ByteArray}\t\t\t\tfrom \"../utils/ByteArray\";\r\nimport {ImageUtils}\t\t\t\tfrom \"../utils/ImageUtils\";\r\nimport {Timer}\t\t\t\t\tfrom \"../utils/Timer\";\r\nimport {getTimer}\t\t\t\t\tfrom \"../utils/getTimer\";\r\n\r\n/**\r\n * <code>ParserBase</code> provides an abstract base export class for objects that convert blocks of data to data structures\r\n * supported by away.\r\n *\r\n * If used by <code>Loader</code> to automatically determine the parser type, two public static methods should\r\n * be implemented, with the following signatures:\r\n *\r\n * <code>public static supportsType(extension : string) : boolean</code>\r\n * Indicates whether or not a given file extension is supported by the parser.\r\n *\r\n * <code>public static supportsData(data : *) : boolean</code>\r\n * Tests whether a data block can be parsed by the parser.\r\n *\r\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\r\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\r\n * handle regardless of whether the object was loaded or not.\r\n *\r\n * @see Loader\r\n */\r\nexport class ParserBase extends EventDispatcher\r\n{\r\n\tpublic _isParsing:boolean;\r\n\tpublic _iFileName:string;\r\n\tprivate _dataFormat:string;\r\n\tprivate _data:any;\r\n\tprivate _frameLimit:number;\r\n\tprivate _lastFrameTime:number;\r\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\r\n\tpublic _pContent:IAsset;\r\n\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\t// Needs to be implemented in all Parsers (\r\n\t//<code>public static supportsType(extension : string) : boolean</code>\r\n\t//* Indicates whether or not a given file extension is supported by the parser.\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate _dependencies:Array<ResourceDependency>;\r\n\tprivate _parsingPaused:boolean;\r\n\tprivate _parsingComplete:boolean;\r\n\tprivate _parsingFailure:boolean;\r\n\tprivate _timer:Timer;\r\n\tprivate _materialMode:number;\r\n\r\n\t/**\r\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\r\n\t */\r\n\tpublic static PARSING_DONE:boolean = true;\r\n\t/* Protected */\r\n\r\n\t/**\r\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\r\n\t */\r\n\tpublic static MORE_TO_PARSE:boolean = false;\r\n\t/* Protected */\r\n\r\n\r\n\tpublic get content():IAsset\r\n\t{\r\n\t\treturn this._pContent;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new ParserBase object\r\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\r\n\t *\r\n\t * @see away.loading.parsers.ParserDataFormat\r\n\t */\r\n\tconstructor(format:string)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._materialMode = 0;\r\n\t\tthis._dataFormat = format;\r\n\t\tthis._dependencies = new Array<ResourceDependency>();\r\n\r\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\r\n\t */\r\n\r\n\tpublic isBitmapImage2DValid(bitmapImage2D:BitmapImage2D):boolean\r\n\t{\r\n\t\tvar isValid:boolean = ImageUtils.isImage2DValid(bitmapImage2D);\r\n\r\n\t\tif (!isValid) {\r\n\r\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\r\n\t\t}\r\n\r\n\t\treturn isValid;\r\n\t}\r\n\r\n\tpublic set parsingFailure(b:boolean)\r\n\t{\r\n\t\tthis._parsingFailure = b;\r\n\t}\r\n\r\n\tpublic get parsingFailure():boolean\r\n\t{\r\n\t\treturn this._parsingFailure;\r\n\t}\r\n\r\n\tpublic get parsingPaused():boolean\r\n\t{\r\n\t\treturn this._parsingPaused;\r\n\t}\r\n\r\n\tpublic get parsingComplete():boolean\r\n\t{\r\n\t\treturn this._parsingComplete;\r\n\t}\r\n\r\n\tpublic set materialMode(newMaterialMode:number)\r\n\t{\r\n\t\tthis._materialMode = newMaterialMode;\r\n\t}\r\n\r\n\tpublic get materialMode():number\r\n\t{\r\n\t\treturn this._materialMode;\r\n\t}\r\n\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\t/**\r\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\r\n\t */\r\n\tpublic get dataFormat():string\r\n\t{\r\n\t\treturn this._dataFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\r\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\r\n\t * next frame.\r\n\t *\r\n\t * @param data The untyped data object in which the loaded data resides.\r\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\r\n\t * actual time spent on a frame can exceed this number since time-checks can\r\n\t * only be performed between logical sections of the parsing procedure.\r\n\t */\r\n\tpublic parseAsync(data:any, frameLimit:number = 30):void\r\n\t{\r\n\t\tthis._data = data;\r\n\t\tthis._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\t/**\r\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\r\n\t */\r\n\tpublic get dependencies():Array<ResourceDependency>\r\n\t{\r\n\t\treturn this._dependencies;\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\r\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\r\n\t * dependency should be a member of the dependencies property.\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\treturn asset.name;\r\n\t}\r\n\r\n\tpublic _iResumeParsing():void\r\n\t{\r\n\t\tthis._parsingPaused = false;\r\n\r\n\t\tif (this._timer)\r\n\t\t\tthis._timer.start();\r\n\r\n\t\t//get started!\r\n\t\tif (!this._isParsing)\r\n\t\t\tthis._pOnInterval();\r\n\t}\r\n\r\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null):void\r\n\t{\r\n\t\tvar type_event:string;\r\n\t\tvar type_name:string;\r\n\r\n\t\tif (name != null)\r\n\t\t\tasset.name = name;\r\n\r\n\t\t// If the asset has no name, give it\r\n\t\t// a per-type default name.\r\n\t\tif (!asset.name)\r\n\t\t\tasset.name = asset.assetType;\r\n\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\r\n\t}\r\n\r\n\t/**\r\n\t * Parse the next block of data.\r\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\r\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pDieWithError(message:string = 'Unknown parsing error'):void\r\n\t{\r\n\t\tif (this._timer) {\r\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\t\tthis._timer.stop();\r\n\t\t\tthis._timer = null;\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\r\n\t}\r\n\r\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false, sub_id:number=0):ResourceDependency\r\n\t{\r\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents, sub_id);\r\n\t\tthis._dependencies.push(dependency);\r\n\r\n\t\treturn dependency;\r\n\t}\r\n\r\n\tpublic _pPauseAndRetrieveDependencies():void\r\n\t{\r\n\t\tthis._pPauseParsing();\r\n\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\r\n\t}\r\n\r\n\tpublic _pPauseParsing():void\r\n\t{\r\n\t\tif (this._timer)\r\n\t\t\tthis._timer.stop();\r\n\r\n\t\tthis._parsingPaused = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\r\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\r\n\t */\r\n\tpublic _pHasTime():boolean\r\n\t{\r\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the parsing pause interval has passed and parsing can proceed.\r\n\t */\r\n\tpublic _pOnInterval(event:TimerEvent = null):void\r\n\t{\r\n\t\tthis._lastFrameTime = getTimer();\r\n\t\tthis._isParsing = true;\r\n\r\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\r\n\t\t\tthis._pFinishParsing();\r\n\r\n\t\tthis._isParsing = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the parsing of data.\r\n\t * @param frameLimit The maximum duration of a parsing session.\r\n\t */\r\n\tpublic _pStartParsing(frameLimit:number):void\r\n\t{\r\n\t\tthis._frameLimit = frameLimit;\r\n\t\tthis._timer = new Timer(this._frameLimit, 0);\r\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\tthis._timer.start();\r\n\r\n\t\t//get started!\r\n\t\tthis._pOnInterval();\r\n\t}\r\n\r\n\t/**\r\n\t * Finish parsing the data.\r\n\t */\r\n\tpublic _pFinishParsing():void\r\n\t{\r\n\t\tif (this._timer) {\r\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\t\tthis._timer.stop();\r\n\t\t}\r\n\r\n\t\tthis._timer = null;\r\n\t\tthis._parsingComplete = true;\r\n\t\tthis._isParsing = false;\r\n\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetTextData():string\r\n\t{\r\n\t\treturn ParserUtils.toString(this._data);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {ByteArray}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetByteData():ByteArray\r\n\t{\r\n\t\treturn ParserUtils.toByteArray(this._data);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {any}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetData():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n}",
    "/**\r\n * An enumeration providing values to describe the data format of parsed data.\r\n */\r\nexport class ParserDataFormat\r\n{\r\n\t/**\r\n\t * Describes the format of a binary file.\r\n\t */\r\n\tpublic static BINARY:string = \"binary\";\r\n\r\n\t/**\r\n\t * Describes the format of a plain text file.\r\n\t */\r\n\tpublic static PLAIN_TEXT:string = \"plainText\";\r\n\r\n\t/**\r\n\t * Describes the format of an image file\r\n\t */\r\n\tpublic static IMAGE:string = \"image\";\r\n\r\n}",
    "import {BitmapImage2D}\t\t\tfrom \"../image/BitmapImage2D\";\r\nimport {WaveAudio}\t\t\t\tfrom \"../audio/WaveAudio\";\r\nimport {ByteArray}\t\t\t\tfrom \"../utils/ByteArray\";\r\n\r\nexport class ParserUtils\r\n{\r\n\tpublic static arrayBufferToBase64(data:ArrayBuffer, mimeType:string):string\r\n\t{\r\n\t\tvar byteStr:string = '';\r\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\r\n\t\tvar len:number = bytes.byteLength;\r\n\r\n\t\tfor (var i = 0; i < len; i++)\r\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\r\n\r\n\t\tvar base64Image:string = window.btoa(byteStr);\r\n\t\treturn 'data:' + mimeType + ';base64,' + base64Image;\r\n\t}\r\n\r\n\tpublic static arrayBufferToAudio(data:ArrayBuffer, fileType:string):HTMLAudioElement\r\n\t{\r\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'audio/' + fileType);\r\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\r\n\t\taudio.src = str;\r\n\t\treturn audio;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an ArrayBuffer to a base64 string\r\n\t *\r\n\t * @param image data as a ByteArray\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\r\n\t{\r\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'image/png');\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = str;\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\r\n\t *\r\n\t * @param image data as a ByteArray\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\r\n\t{\r\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'image/png');\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = str;\r\n\t\treturn img;\r\n\t}\r\n\r\n\tpublic static byteArrayToAudio(data:ByteArray, filetype:string):HTMLAudioElement\r\n\t{\r\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'audio/' + filetype);\r\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\r\n\t\taudio.src = str;\r\n\t\treturn audio;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Blob to an Image - returns an HTMLImageElement\r\n\t *\r\n\t * @param image data as a Blob\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static blobToImage(data:Blob):HTMLImageElement\r\n\t{\r\n\t\tvar URLObj = window['URL'] || window['webkitURL'];\r\n\t\tvar src = URLObj.createObjectURL(data);\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = src;\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Blob to audio - returns an HTMLAudioElement\r\n\t *\r\n\t * @param audio data as a Blob\r\n\t *\r\n\t * @return HTMLAudioElement\r\n\t *\r\n\t */\r\n\tpublic static blobToAudio(data:Blob):HTMLAudioElement\r\n\t{\r\n\t\tvar URLObj = window['URL'] || window['webkitURL'];\r\n\t\tvar src = URLObj.createObjectURL(data);\r\n\t\tvar img:HTMLAudioElement = <HTMLAudioElement> new Audio();\r\n\t\timg.src = src;\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static imageToBitmapImage2D(img:HTMLImageElement, powerOfTwo:boolean = true):BitmapImage2D\r\n\t{\r\n\t\tvar bitmapData:BitmapImage2D = new BitmapImage2D(img.width, img.height, true, null, powerOfTwo);\r\n\t\tbitmapData.draw(img);\r\n\r\n\t\treturn bitmapData;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a object as ByteArray, if possible.\r\n\t *\r\n\t * @param data The object to return as ByteArray\r\n\t *\r\n\t * @return The ByteArray or null\r\n\t *\r\n\t */\r\n\tpublic static toByteArray(data:any):ByteArray\r\n\t{\r\n\t\tvar b:ByteArray = new ByteArray();\r\n\t\tb.setArrayBuffer(data);\r\n\t\treturn b;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a object as String, if possible.\r\n\t *\r\n\t * @param data The object to return as String\r\n\t * @param length The length of the returned String\r\n\t *\r\n\t * @return The String or null\r\n\t *\r\n\t */\r\n\tpublic static toString(data:any, length:number = 0):string\r\n\t{\r\n\r\n\t\tif (typeof data === 'string') {\r\n\t\t\tvar s:string = <string> data;\r\n\r\n\t\t\tif (s['substr'] != null)\r\n\t\t\t\treturn s.substr(0, s.length);\r\n\t\t}\r\n\r\n\t\tif (data instanceof ByteArray) {\r\n\t\t\tvar ba:ByteArray = <ByteArray> data;\r\n\t\t\tba.position = 0;\r\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t\t/*\r\n\t\t var ba:ByteArray;\r\n\r\n\t\t length ||= uint.MAX_VALUE;\r\n\r\n\t\t if (data is String)\r\n\t\t return String(data).substr(0, length);\r\n\r\n\t\t ba = toByteArray(data);\r\n\t\t if (ba) {\r\n\t\t ba.position = 0;\r\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\r\n\t\t }\r\n\r\n\t\t return null;\r\n\r\n\t\t */\r\n\r\n\t}\r\n}",
    "﻿import {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {URLLoader}\t\t\t\tfrom \"../net/URLLoader\";\r\nimport {URLRequest}\t\t\t\tfrom \"../net/URLRequest\";\r\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\r\n\r\n/**\r\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\r\n * required by a parser, used by ResourceLoadSession.\r\n *\r\n */\r\nexport class ResourceDependency\r\n{\r\n\tprivate _id:string;\r\n\tprivate _sub_id:number;\r\n\r\n\tprivate _request:URLRequest;\r\n\tprivate _assets:Array<IAsset>;\r\n\tprivate _parser:ParserBase;\r\n\tprivate _parentParser:ParserBase;\r\n\tprivate _data:any;\r\n\tprivate _retrieveAsRawData:boolean;\r\n\tprivate _suppressAssetEvents:boolean;\r\n\tprivate _dependencies:Array<ResourceDependency>;\r\n\r\n\tpublic _iLoader:URLLoader;\r\n\tpublic _iSuccess:boolean;\r\n\r\n\r\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false, sub_id:number=0)\r\n\t{\r\n\t\tthis._id = id;\r\n\t\tthis._sub_id = sub_id;\r\n\t\tthis._request = request;\r\n\t\tthis._data = data;\r\n\t\tthis._parser = parser;\r\n\t\tthis._parentParser = parentParser;\r\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\r\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\r\n\t\tthis._assets = new Array<IAsset>();\r\n\t\tthis._dependencies = new Array<ResourceDependency>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get id():string\r\n\t{\r\n\t\treturn this._id;\r\n\t}\r\n\tpublic get sub_id():number\r\n\t{\r\n\t\treturn this._sub_id;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get request():URLRequest\r\n\t{\r\n\t\treturn this._request;\r\n\t}\r\n\r\n\t/**\r\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\r\n\t */\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parser():ParserBase\r\n\t{\r\n\t\treturn this._parser;\r\n\t}\r\n\r\n\t/**\r\n\t * The parser which is dependent on this ResourceDependency object.\r\n\t */\r\n\tpublic get parentParser():ParserBase\r\n\t{\r\n\t\treturn this._parentParser;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get retrieveAsRawData():boolean\r\n\t{\r\n\t\treturn this._retrieveAsRawData;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get suppresAssetEvents():boolean\r\n\t{\r\n\t\treturn this._suppressAssetEvents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assets():Array<IAsset>\r\n\t{\r\n\t\treturn this._assets;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get dependencies():Array<ResourceDependency>\r\n\t{\r\n\t\treturn this._dependencies;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Method to set data after having already created the dependency object, e.g. after load.\r\n\t */\r\n\tpublic _iSetData(data:any):void\r\n\t{\r\n\t\tthis._data = data;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t */\r\n\tpublic _iSetParser(parser:ParserBase):void\r\n\t{\r\n\t\tthis._parser = parser;\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\r\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\r\n\t * to its intended parent. The dependency should be a member of the dependencies property.\r\n\t */\r\n\tpublic resolve():void\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\tthis._parentParser._iResolveDependency(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\r\n\t */\r\n\tpublic resolveFailure():void\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve the dependencies name\r\n\t */\r\n\tpublic resolveName(asset:IAsset):string\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\r\n\r\n\t\treturn asset.name;\r\n\t}\r\n}",
    "import {Sampler2D}\t\t\t\tfrom \"../image/Sampler2D\";\r\nimport {BitmapImage2D}\t\t\tfrom \"../image/BitmapImage2D\";\r\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\r\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {URLLoaderDataFormat}\t\tfrom \"../net/URLLoaderDataFormat\";\r\nimport {URLRequest}\t\t\t\tfrom \"../net/URLRequest\";\r\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\r\nimport {ParserUtils}\t\t\t\tfrom \"../parsers/ParserUtils\";\r\nimport {ResourceDependency}\t\tfrom \"../parsers/ResourceDependency\";\r\nimport {XmlUtils}\t\t\t\t\tfrom \"../utils/XmlUtils\";\r\n\r\n/**\r\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nexport class TextureAtlasParser extends ParserBase\r\n{\r\n\tprivate _doc:Node;\r\n\tprivate _imagePath:string;\r\n\tprivate _imageData:BitmapImage2D;\r\n\tprivate _subTextureNodes:NodeList;\r\n\tprivate _parseState:number = 0;\r\n\r\n\t/**\r\n\t * Creates a new TextureAtlasParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"xml\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\ttry {\r\n\t\t\tvar content:string = ParserUtils.toString(data);\r\n\t\t\tif(content.indexOf(\"TextureAtlas\") != -1 || content.indexOf(\"textureatlas\") != -1)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\treturn false;\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\tif(resourceDependency.assets.length) {\r\n\t\t\tthis._imageData = <BitmapImage2D> resourceDependency.assets[0];\r\n\t\t\tthis._pFinalizeAsset(this._imageData);\r\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_SUBTEXTURES;\r\n\t\t} else {\r\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\r\n\t{\r\n\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar nodes:NodeList;\r\n\r\n\t\tswitch(this._parseState) {\r\n\t\t\tcase TextureAtlasParserState.PARSE_XML:\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._doc = XmlUtils.getChildrenWithTag(XmlUtils.strToXml(this._pGetTextData()), \"TextureAtlas\")[0];\r\n\r\n\t\t\t\t\tthis._imagePath = XmlUtils.readAttributeValue(this._doc, \"imagePath\");\r\n\r\n\t\t\t\t\tthis._subTextureNodes = XmlUtils.getChildrenWithTag(this._doc, \"SubTexture\");\r\n\r\n\t\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_IMAGE;\r\n\r\n\t\t\t\t} catch(Error) {\r\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase TextureAtlasParserState.PARSE_IMAGE:\r\n\t\t\t\tif (this._imagePath){\r\n\t\t\t\t\tthis._pAddDependency(this._imagePath, new URLRequest(this._imagePath));\r\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase TextureAtlasParserState.PARSE_SUBTEXTURES:\r\n\t\t\t\tvar sampler:Sampler2D;\r\n\t\t\t\tvar element:Node;\r\n\t\t\t\tvar x:string;\r\n\t\t\t\tvar y:string;\r\n\t\t\t\tvar width:string;\r\n\t\t\t\tvar height:string;\r\n\t\t\t\tvar len:number = this._subTextureNodes.length;\r\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\t\t\telement = this._subTextureNodes[i];\r\n\t\t\t\t\tsampler = new Sampler2D();\r\n\r\n\t\t\t\t\t//setup subtexture rect\r\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"x\");\r\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"y\");\r\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"width\");\r\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"height\");\r\n\t\t\t\t\tif (x || y || width || height)\r\n\t\t\t\t\t\tsampler.imageRect = new Rectangle(parseInt(x)/this._imageData.width, parseInt(y)/this._imageData.height, parseInt(width)/this._imageData.width, parseInt(height)/this._imageData.height);\r\n\r\n\t\t\t\t\t//setup frame rect\r\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"frameX\");\r\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"frameY\");\r\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"frameWidth\");\r\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"frameHeight\");\r\n\t\t\t\t\tif (x || y || width || height)\r\n\t\t\t\t\t\tsampler.frameRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(sampler, XmlUtils.readAttributeValue(element, \"name\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase TextureAtlasParserState.PARSE_COMPLETE:\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n}\r\n\r\nexport class TextureAtlasParserState {\r\n\tpublic static PARSE_XML:number = 0;\r\n\tpublic static PARSE_IMAGE:number = 1;\r\n\tpublic static PARSE_SUBTEXTURES:number = 2;\r\n\tpublic static PARSE_COMPLETE:number = 3;\r\n}",
    "import {WaveAudio}\t\t\t\tfrom \"../audio/WaveAudio\";\r\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\r\nimport {URLLoaderDataFormat}\t\tfrom \"../net/URLLoaderDataFormat\";\r\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\r\nimport {ParserUtils}\t\t\t\tfrom \"../parsers/ParserUtils\";\r\nimport {ByteArray}\t\t\t\tfrom \"../utils/ByteArray\";\r\n\r\nexport class WaveAudioParser extends ParserBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.BLOB);\r\n\t}\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"wav\" || extension == \"mp3\" || extension == \"ogg\";\r\n\r\n\t}\r\n\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tif (!(data instanceof ByteArray))\r\n\t\t\treturn false;\r\n\r\n\t\tvar ba:ByteArray = <ByteArray> data;\r\n\t\tvar filetype : string = WaveAudioParser.parseFileType(ba);\r\n\t\treturn filetype? true : false;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number):void\r\n\t{\r\n\t\t//clear content\r\n\t\tdelete this._pContent;\r\n\t\tthis._pContent = null;\r\n\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (this.data instanceof ByteArray) { // Parse a ByteArray\r\n\t\t\tthis._pContent = new WaveAudio(this.data.arraybytes);\r\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\r\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\r\n\t\t\tthis._pContent = new WaveAudio(this.data);\r\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\r\n\t\t}\r\n\r\n\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t}\r\n\r\n\tprivate static parseFileType(ba:ByteArray):string\r\n\t{\r\n\r\n\r\n\t\t//old mp3 detections\r\n\t\t// This does not seem to work for all my mp3 files (i tested different mp3 encoders)\r\n\t\t// I leave it in, because it might work for mp3 data that i do not have here to test\r\n\t\tba.position = 0;\r\n\t\tif ((ba.readUnsignedShort() & 0xFFE0) == 0xFFE0) {\r\n\t\t\treturn 'mp3'; // test for MP3 syncword\r\n\t\t}\r\n\r\n\t\t// new mp3 detection\r\n\t\t// this from is-mp3 npm module,\r\n\t\t// but still i have mp3 files that are not detected by this\r\n\t\t// i added the hack: (byte_1 === 255 && byte_2 === 243 && byte_3 === 130) \tto catch those mp3s\r\n\t\t// todo: find a more foolproof way to detect al mp3 (my hack might collide with detection for other filetypes)\r\n\t\tba.position = 0;\r\n\t\tvar byte_1:number=ba.readUnsignedByte();\r\n\t\tvar byte_2:number=ba.readUnsignedByte();\r\n\t\tvar byte_3:number=ba.readUnsignedByte();\r\n\t\tif ((byte_1 === 73 && byte_2 === 68 && byte_3 === 51)\r\n\t\t\t|| (byte_1 === 255 && byte_2 === 251)\r\n\t\t\t|| (byte_1 === 255 && byte_2 === 243 && byte_3 === 130)){\r\n\t\t\treturn 'mp3';\r\n\t\t}\r\n\t\t\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUTFBytes(4) == 'RIFF')\r\n\t\t\treturn 'wav';\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUTFBytes(4) == 'OggS')\r\n\t\t\treturn 'ogg';\r\n\r\n\t\tba.position = 0;\r\n\r\n\t\treturn null;\r\n\t}\r\n}",
    "export {Image2DParser}\t\t\t\t\tfrom \"./parsers/Image2DParser\";\r\nexport {ImageCubeParser}\t\t\t\tfrom \"./parsers/ImageCubeParser\";\r\nexport {ParserBase}\t\t\t\t\t\tfrom \"./parsers/ParserBase\";\r\nexport {ParserDataFormat}\t\t\t\tfrom \"./parsers/ParserDataFormat\";\r\nexport {ParserUtils}\t\t\t\t\tfrom \"./parsers/ParserUtils\";\r\nexport {ResourceDependency}\t\t\t\tfrom \"./parsers/ResourceDependency\";\r\nexport {TextureAtlasParser}\t\t\t\tfrom \"./parsers/TextureAtlasParser\";\r\nexport {WaveAudioParser}\t\t\t\tfrom \"./parsers/WaveAudioParser\";",
    "/**\r\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\r\n *\r\n * @see away.projections.PerspectiveLens#coordinateSystem\r\n */\r\nexport class CoordinateSystem\r\n{\r\n\t/**\r\n\t * Default option, projects to a left-handed coordinate system\r\n\t */\r\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\r\n\r\n\t/**\r\n\t * Projects to a right-handed coordinate system\r\n\t */\r\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\r\n}",
    "import {PerspectiveProjection}\tfrom \"../projections/PerspectiveProjection\";\r\nimport {ProjectionBase}\t\t\tfrom \"../projections/ProjectionBase\";\r\n\r\nexport class FreeMatrixProjection extends ProjectionBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tthis._pNear = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tthis._pFar = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set iAspectRatio(value:number)\r\n\t{\r\n\t\tthis._pAspectRatio = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\r\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone.pInvalidateMatrix();\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix():void\r\n\t{\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}",
    "import {Matrix3D}\t\t\t\t\tfrom \"../geom/Matrix3D\";\r\nimport {Plane3D}\t\t\t\t\tfrom \"../geom/Plane3D\";\r\nimport {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\r\nimport {ProjectionEvent}\t\t\tfrom \"../events/ProjectionEvent\";\r\nimport {IProjection}\t\t\t\tfrom \"../projections/IProjection\";\r\nimport {ProjectionBase}\t\t\tfrom \"../projections/ProjectionBase\";\r\n\r\nexport class ObliqueNearPlaneProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _baseProjection:IProjection;\r\n\tprivate _plane:Plane3D;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.baseProjection = baseProjection;\r\n\t\tthis.plane = plane;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get frustumCorners():number[]\r\n\t{\r\n\t\treturn this._baseProjection.frustumCorners;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get near():number\r\n\t{\r\n\t\treturn this._baseProjection.near;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tthis._baseProjection.near = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get far():number\r\n\t{\r\n\t\treturn this._baseProjection.far;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tthis._baseProjection.far = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get iAspectRatio():number\r\n\t{\r\n\t\treturn this._baseProjection._iAspectRatio;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set iAspectRatio(value:number)\r\n\t{\r\n\t\tthis._baseProjection._iAspectRatio = value;\r\n\t}\r\n\r\n\tpublic get plane():Plane3D\r\n\t{\r\n\t\treturn this._plane;\r\n\t}\r\n\r\n\tpublic set plane(value:Plane3D)\r\n\t{\r\n\t\tthis._plane = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic set baseProjection(value:IProjection)\r\n\t{\r\n\t\tif (this._baseProjection) {\r\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\t}\r\n\t\tthis._baseProjection = value;\r\n\r\n\t\tif (this._baseProjection) {\r\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\t}\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent):void\r\n\t{\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix():void\r\n\t{\r\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\r\n\r\n\t\tvar cx:number = this._plane.a;\r\n\t\tvar cy:number = this._plane.b;\r\n\t\tvar cz:number = this._plane.c;\r\n\t\tvar cw:number = -this._plane.d + .05;\r\n\t\tvar signX:number = cx >= 0? 1 : -1;\r\n\t\tvar signY:number = cy >= 0? 1 : -1;\r\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\r\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\r\n\t\tinverse.invert();\r\n\t\tvar q:Vector3D = inverse.transformVector(p);\r\n\t\tthis._pMatrix.copyRowTo(3, p);\r\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\r\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\r\n\t}\r\n}",
    "import {Matrix3DUtils}\t\t\tfrom \"../geom/Matrix3DUtils\";\r\nimport {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\r\nimport {ProjectionBase}\t\t\tfrom \"../projections/ProjectionBase\";\r\n\r\nexport class OrthographicOffCenterProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _minX:number;\r\n\tprivate _maxX:number;\r\n\tprivate _minY:number;\r\n\tprivate _maxY:number;\r\n\r\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._minX = minX;\r\n\t\tthis._maxX = maxX;\r\n\t\tthis._minY = minY;\r\n\t\tthis._maxY = maxY;\r\n\t}\r\n\r\n\tpublic get minX():number\r\n\t{\r\n\t\treturn this._minX;\r\n\t}\r\n\r\n\tpublic set minX(value:number)\r\n\t{\r\n\t\tthis._minX = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get maxX():number\r\n\t{\r\n\t\treturn this._maxX;\r\n\t}\r\n\r\n\tpublic set maxX(value:number)\r\n\t{\r\n\t\tthis._maxX = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get minY():number\r\n\t{\r\n\t\treturn this._minY;\r\n\t}\r\n\r\n\tpublic set minY(value:number)\r\n\t{\r\n\t\tthis._minY = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get maxY():number\r\n\t{\r\n\t\treturn this._maxY;\r\n\t}\r\n\r\n\tpublic set maxY(value:number)\r\n\t{\r\n\t\tthis._maxY = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix():void\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar w:number = 1/(this._maxX - this._minX);\r\n\t\tvar h:number = 1/(this._maxY - this._minY);\r\n\t\tvar d:number = 1/(this._pFar - this._pNear);\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(this._maxX + this._minX)*w;\r\n\t\traw[13] = -(this._maxY + this._minY)*h;\r\n\t\traw[14] = -this._pNear*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}",
    "import {Matrix3DUtils}\t\t\tfrom \"../geom/Matrix3DUtils\";\r\nimport {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\r\nimport {ProjectionBase}\t\t\tfrom \"../projections/ProjectionBase\";\r\n\r\nexport class OrthographicProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _projectionHeight:number;\r\n\tprivate _xMax:number;\r\n\tprivate _yMax:number;\r\n\r\n\tconstructor(projectionHeight:number = 500)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._projectionHeight = projectionHeight;\r\n\t}\r\n\r\n\tpublic get projectionHeight():number\r\n\t{\r\n\t\treturn this._projectionHeight;\r\n\t}\r\n\r\n\tpublic set projectionHeight(value:number)\r\n\t{\r\n\t\tif (value == this._projectionHeight) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._projectionHeight = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone.projectionHeight = this._projectionHeight;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix():void\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tthis._yMax = this._projectionHeight*.5;\r\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\r\n\r\n\t\tvar left:number;\r\n\t\tvar right:number;\r\n\t\tvar top:number;\r\n\t\tvar bottom:number;\r\n\r\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\r\n\t\t\t// assume symmetric frustum\r\n\r\n\t\t\tleft = -this._xMax;\r\n\t\t\tright = this._xMax;\r\n\t\t\ttop = -this._yMax;\r\n\t\t\tbottom = this._yMax;\r\n\r\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\r\n\t\t\traw[5] = 2/this._projectionHeight;\r\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\r\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\r\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\r\n\t\t\traw[15] = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\r\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\r\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\r\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\r\n\r\n\t\t\tleft = center - xWidth;\r\n\t\t\tright = center + xWidth;\r\n\t\t\ttop = middle - yHgt;\r\n\t\t\tbottom = middle + yHgt;\r\n\r\n\t\t\traw[0] = 2*1/(right - left);\r\n\t\t\traw[5] = -2*1/(top - bottom);\r\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\r\n\r\n\t\t\traw[12] = (right + left)/(right - left);\r\n\t\t\traw[13] = (bottom + top)/(bottom - top);\r\n\t\t\traw[14] = this._pNear/(this.near - this.far);\r\n\r\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\t\traw[15] = 1;\r\n\t\t}\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}",
    "import {Matrix3DUtils}\t\t\tfrom \"../geom/Matrix3DUtils\";\r\nimport {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\r\nimport {CoordinateSystem}\t\t\tfrom \"../projections/CoordinateSystem\";\r\nimport {ProjectionBase}\t\t\tfrom \"../projections/ProjectionBase\";\r\n\r\nexport class PerspectiveProjection extends ProjectionBase\r\n{\r\n\tprivate _fieldOfView:number = 60;\r\n\tprivate _focalLength:number = 1000;\r\n\tprivate _hFieldOfView:number = 60;\r\n\tprivate _hFocalLength:number = 1000;\r\n\tprivate _preserveAspectRatio:boolean = true;\r\n\tprivate _preserveFocalLength:boolean = false;\r\n\r\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\r\n\t{\r\n\t\tsuper(coordinateSystem);\r\n\t\tthis.fieldOfView = fieldOfView;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get preserveAspectRatio():boolean\r\n\t{\r\n\t\treturn this._preserveAspectRatio;\r\n\t}\r\n\r\n\tpublic set preserveAspectRatio(value:boolean)\r\n\t{\r\n\t\tif (this._preserveAspectRatio == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._preserveAspectRatio = value;\r\n\r\n\t\tif (this._preserveAspectRatio)\r\n\t\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get preserveFocalLength():boolean\r\n\t{\r\n\t\treturn this._preserveFocalLength;\r\n\t}\r\n\r\n\tpublic set preserveFocalLength(value:boolean)\r\n\t{\r\n\t\tif (this._preserveFocalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._preserveFocalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get fieldOfView():number\r\n\t{\r\n\t\treturn this._fieldOfView;\r\n\t}\r\n\r\n\tpublic set fieldOfView(value:number)\r\n\t{\r\n\t\tif (this._fieldOfView == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._fieldOfView = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get focalLength():number\r\n\t{\r\n\t\treturn this._focalLength;\r\n\t}\r\n\r\n\tpublic set focalLength(value:number)\r\n\t{\r\n\t\tif (this._focalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._focalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get hFieldOfView():number\r\n\t{\r\n\t\treturn this._hFieldOfView;\r\n\t}\r\n\r\n\tpublic set hFieldOfView(value:number)\r\n\t{\r\n\t\tif (this._hFieldOfView == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._hFieldOfView = value;\r\n\r\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get hFocalLength():number\r\n\t{\r\n\t\treturn this._hFocalLength;\r\n\t}\r\n\r\n\tpublic set hFocalLength(value:number)\r\n\t{\r\n\t\tif (this._hFocalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._hFocalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\r\n\r\n\t\tv.x *= sZ;\r\n\t\tv.y *= sZ;\r\n\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix():void\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tif (this._preserveFocalLength) {\r\n\t\t\tif (this._preserveAspectRatio)\r\n\t\t\t\tthis._hFocalLength = this._focalLength;\r\n\r\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\r\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\r\n\t\t} else {\r\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\r\n\r\n\t\t\tif (this._preserveAspectRatio)\r\n\t\t\t\tthis._hFocalLength = this._focalLength;\r\n\t\t\telse\r\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\r\n\t\t}\r\n\r\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\r\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\r\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\r\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\r\n\r\n\t\tvar left:number;\r\n\t\tvar right:number;\r\n\t\tvar top:number;\r\n\t\tvar bottom:number;\r\n\r\n\t\t// assume scissored frustum\r\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\r\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\r\n\r\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\r\n\t\tright = center;\r\n\t\ttop = middle;\r\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\r\n\r\n\t\traw[0] = 2/(right - left);\r\n\t\traw[5] = 2/(bottom - top);\r\n\t\traw[8] = (right + left)/(right - left);\r\n\t\traw[9] = (bottom + top)/(bottom - top);\r\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\r\n\r\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\r\n\t\t\traw[5] = -raw[5];\r\n\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\r\n\r\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\r\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\r\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\r\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\r\n\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\r\n\r\n\t}\r\n}",
    "import {Matrix3D}\t\t\t\t\tfrom \"../geom/Matrix3D\";\r\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\r\nimport {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\r\nimport {EventDispatcher}\t\t\tfrom \"../events/EventDispatcher\";\r\nimport {ProjectionEvent}\t\t\tfrom \"../events/ProjectionEvent\";\r\nimport {AbstractMethodError}\t\tfrom \"../errors/AbstractMethodError\";\r\nimport {IProjection}\t\t\t\tfrom \"../projections/IProjection\";\r\n\r\nexport class ProjectionBase extends EventDispatcher implements IProjection\r\n{\r\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\r\n\tpublic _pScissorRect:Rectangle = new Rectangle();\r\n\tpublic _pViewPort:Rectangle = new Rectangle();\r\n\tpublic _pNear:number = 20;\r\n\tpublic _pFar:number = 3000;\r\n\tpublic _pAspectRatio:number = 1;\r\n\r\n\tpublic _pMatrixInvalid:boolean = true;\r\n\tpublic _pFrustumCorners:number[] = [];\r\n\tpublic _pCoordinateSystem:string;\r\n\tpublic _pOriginX:number = 0.5;\r\n\tpublic _pOriginY:number = 0.5;\r\n\r\n\tprivate _unprojection:Matrix3D;\r\n\tprivate _unprojectionInvalid:boolean = true;\r\n\r\n\tconstructor(coordinateSystem:string = \"leftHanded\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coordinateSystem = coordinateSystem;\r\n\t}\r\n\r\n\t/**\r\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\r\n\t */\r\n\tpublic get coordinateSystem():string\r\n\t{\r\n\t\treturn this._pCoordinateSystem;\r\n\t}\r\n\r\n\tpublic set coordinateSystem(value:string)\r\n\t{\r\n\t\tif (this._pCoordinateSystem == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pCoordinateSystem = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get frustumCorners():number[]\r\n\t{\r\n\t\treturn this._pFrustumCorners;\r\n\t}\r\n\r\n\tpublic set frustumCorners(frustumCorners:number[])\r\n\t{\r\n\t\tthis._pFrustumCorners = frustumCorners;\r\n\t}\r\n\r\n\tpublic get matrix():Matrix3D\r\n\t{\r\n\t\tif (this._pMatrixInvalid) {\r\n\t\t\tthis.pUpdateMatrix();\r\n\t\t\tthis._pMatrixInvalid = false;\r\n\t\t}\r\n\t\treturn this._pMatrix;\r\n\t}\r\n\r\n\tpublic set matrix(value:Matrix3D)\r\n\t{\r\n\t\tthis._pMatrix = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get near():number\r\n\t{\r\n\t\treturn this._pNear;\r\n\t}\r\n\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tif (value == this._pNear) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pNear = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get originX():number\r\n\t{\r\n\t\treturn this._pOriginX;\r\n\t}\r\n\r\n\tpublic set originX(value:number)\r\n\t{\r\n\t\tif (this._pOriginX == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pOriginX = value;\r\n\t}\r\n\r\n\tpublic get originY():number\r\n\t{\r\n\t\treturn this._pOriginY;\r\n\t}\r\n\r\n\tpublic set originY(value:number)\r\n\t{\r\n\t\tif (this._pOriginY == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pOriginY = value;\r\n\t}\r\n\r\n\tpublic get far():number\r\n\t{\r\n\t\treturn this._pFar;\r\n\t}\r\n\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tif (value == this._pFar) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pFar = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\r\n\t\tv.x = v.x/v.w;\r\n\t\tv.y = -v.y/v.w;\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = point3d.z;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic get unprojectionMatrix():Matrix3D\r\n\t{\r\n\t\tif (this._unprojectionInvalid) {\r\n\t\t\tif (!this._unprojection)\r\n\t\t\t\tthis._unprojection = new Matrix3D();\r\n\r\n\t\t\tthis._unprojection.copyFrom(this.matrix);\r\n\t\t\tthis._unprojection.invert();\r\n\t\t\tthis._unprojectionInvalid = false;\r\n\t\t}\r\n\t\treturn this._unprojection;\r\n\t}\r\n\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get _iAspectRatio():number\r\n\t{\r\n\t\treturn this._pAspectRatio;\r\n\t}\r\n\r\n\tpublic set _iAspectRatio(value:number)\r\n\t{\r\n\t\tif (this._pAspectRatio == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAspectRatio = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic pInvalidateMatrix():void\r\n\t{\r\n\t\tthis._pMatrixInvalid = true;\r\n\t\tthis._unprojectionInvalid = true;\r\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\r\n\t}\r\n\r\n\tpublic pUpdateMatrix():void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number):void\r\n\t{\r\n\t\tthis._pScissorRect.x = x;\r\n\t\tthis._pScissorRect.y = y;\r\n\t\tthis._pScissorRect.width = width;\r\n\t\tthis._pScissorRect.height = height;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number):void\r\n\t{\r\n\t\tthis._pViewPort.x = x;\r\n\t\tthis._pViewPort.y = y;\r\n\t\tthis._pViewPort.width = width;\r\n\t\tthis._pViewPort.height = height;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n}",
    "export {CoordinateSystem}\t\t\t\tfrom \"./projections/CoordinateSystem\";\r\nexport {FreeMatrixProjection}\t\t\tfrom \"./projections/FreeMatrixProjection\";\r\nexport {IProjection}\t\t\t\t\tfrom \"./projections/IProjection\";\r\nexport {ObliqueNearPlaneProjection}\t\tfrom \"./projections/ObliqueNearPlaneProjection\";\r\nexport {OrthographicOffCenterProjection}\tfrom \"./projections/OrthographicOffCenterProjection\";\r\nexport {OrthographicProjection}\t\t\tfrom \"./projections/OrthographicProjection\";\r\nexport {PerspectiveProjection}\t\t\tfrom \"./projections/PerspectiveProjection\";\r\nexport {ProjectionBase}\t\t\t\t\tfrom \"./projections/ProjectionBase\";",
    "export class Keyboard\r\n{\r\n\t/**\r\n\t * Constant associated with the key code value for the A key (65).\r\n\t */\r\n\tpublic static A:number /*uint*/ = 65;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\r\n\t */\r\n\tpublic static ALTERNATE:number /*uint*/ = 18;\r\n\r\n\t/**\r\n\t * Select the audio mode\r\n\t */\r\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the B key (66).\r\n\t */\r\n\tpublic static B:number /*uint*/ = 66;\r\n\r\n\t/**\r\n\t * Return to previous page in application\r\n\t */\r\n\tpublic static BACK:number /*uint*/ = 0x01000016;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ` key (192).\r\n\t */\r\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the \\ key (220).\r\n\t */\r\n\tpublic static BACKSLASH:number /*uint*/ = 220;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Backspace key (8).\r\n\t */\r\n\tpublic static BACKSPACE:number /*uint*/ = 8;\r\n\r\n\t/**\r\n\t * Blue function key button\r\n\t */\r\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the C key (67).\r\n\t */\r\n\tpublic static C:number /*uint*/ = 67;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Caps Lock key (20).\r\n\t */\r\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\r\n\r\n\t/**\r\n\t * Channel down\r\n\t */\r\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\r\n\r\n\t/**\r\n\t * Channel up\r\n\t */\r\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the , key (188).\r\n\t */\r\n\tpublic static COMMA:number /*uint*/ = 188;\r\n\r\n\t/**\r\n\t * Constant associated with the Mac command key (15). This constant is\r\n\t * currently only used for setting menu key equivalents.\r\n\t */\r\n\tpublic static COMMAND:number /*uint*/ = 15;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Control key (17).\r\n\t */\r\n\tpublic static CONTROL:number /*uint*/ = 17;\r\n\r\n\t/**\r\n\t * An array containing all the defined key name constants.\r\n\t */\r\n\tpublic static CharCodeStrings:Array<any>;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the D key (68).\r\n\t */\r\n\tpublic static D:number /*uint*/ = 68;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Delete key (46).\r\n\t */\r\n\tpublic static DELETE:number /*uint*/ = 46;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Down Arrow key (40).\r\n\t */\r\n\tpublic static DOWN:number /*uint*/ = 40;\r\n\r\n\t/**\r\n\t * Engage DVR application mode\r\n\t */\r\n\tpublic static DVR:number /*uint*/ = 0x01000019;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the E key (69).\r\n\t */\r\n\tpublic static E:number /*uint*/ = 69;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the End key (35).\r\n\t */\r\n\tpublic static END:number /*uint*/ = 35;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Enter key (13).\r\n\t */\r\n\tpublic static ENTER:number /*uint*/ = 13;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the = key (187).\r\n\t */\r\n\tpublic static EQUAL:number /*uint*/ = 187;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Escape key (27).\r\n\t */\r\n\tpublic static ESCAPE:number /*uint*/ = 27;\r\n\r\n\t/**\r\n\t * Exits current application mode\r\n\t */\r\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F key (70).\r\n\t */\r\n\tpublic static F:number /*uint*/ = 70;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F1 key (112).\r\n\t */\r\n\tpublic static F1:number /*uint*/ = 112;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F10 key (121).\r\n\t */\r\n\tpublic static F10:number /*uint*/ = 121;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F11 key (122).\r\n\t */\r\n\tpublic static F11:number /*uint*/ = 122;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F12 key (123).\r\n\t */\r\n\tpublic static F12:number /*uint*/ = 123;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F13 key (124).\r\n\t */\r\n\tpublic static F13:number /*uint*/ = 124;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F14 key (125).\r\n\t */\r\n\tpublic static F14:number /*uint*/ = 125;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F15 key (126).\r\n\t */\r\n\tpublic static F15:number /*uint*/ = 126;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F2 key (113).\r\n\t */\r\n\tpublic static F2:number /*uint*/ = 113;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F3 key (114).\r\n\t */\r\n\tpublic static F3:number /*uint*/ = 114;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F4 key (115).\r\n\t */\r\n\tpublic static F4:number /*uint*/ = 115;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F5 key (116).\r\n\t */\r\n\tpublic static F5:number /*uint*/ = 116;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F6 key (117).\r\n\t */\r\n\tpublic static F6:number /*uint*/ = 117;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F7 key (118).\r\n\t */\r\n\tpublic static F7:number /*uint*/ = 118;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F8 key (119).\r\n\t */\r\n\tpublic static F8:number /*uint*/ = 119;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F9 key (120).\r\n\t */\r\n\tpublic static F9:number /*uint*/ = 120;\r\n\r\n\t/**\r\n\t * Engage fast-forward transport mode\r\n\t */\r\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the G key (71).\r\n\t */\r\n\tpublic static G:number /*uint*/ = 71;\r\n\r\n\t/**\r\n\t * Green function key button\r\n\t */\r\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\r\n\r\n\t/**\r\n\t * Engage program guide\r\n\t */\r\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the H key (72).\r\n\t */\r\n\tpublic static H:number /*uint*/ = 72;\r\n\r\n\t/**\r\n\t * Engage help application or context-sensitive help\r\n\t */\r\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Home key (36).\r\n\t */\r\n\tpublic static HOME:number /*uint*/ = 36;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the I key (73).\r\n\t */\r\n\tpublic static I:number /*uint*/ = 73;\r\n\r\n\t/**\r\n\t * Info button\r\n\t */\r\n\tpublic static INFO:number /*uint*/ = 0x01000013;\r\n\r\n\t/**\r\n\t * Cycle input\r\n\t */\r\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Insert key (45).\r\n\t */\r\n\tpublic static INSERT:number /*uint*/ = 45;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the J key (74).\r\n\t */\r\n\tpublic static J:number /*uint*/ = 74;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the K key (75).\r\n\t */\r\n\tpublic static K:number /*uint*/ = 75;\r\n\r\n\t/**\r\n\t * The Begin key\r\n\t */\r\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\r\n\r\n\t/**\r\n\t * The Break key\r\n\t */\r\n\tpublic static KEYNAME_BREAK:string = \"Break\";\r\n\r\n\t/**\r\n\t * The Clear Display key\r\n\t */\r\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\r\n\r\n\t/**\r\n\t * The Clear Line key\r\n\t */\r\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\r\n\r\n\t/**\r\n\t * The Delete key\r\n\t */\r\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\r\n\r\n\t/**\r\n\t * The Delete Character key\r\n\t */\r\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\r\n\r\n\t/**\r\n\t * The Delete Line key\r\n\t */\r\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\r\n\r\n\t/**\r\n\t * The down arrow\r\n\t */\r\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\r\n\r\n\t/**\r\n\t * The End key\r\n\t */\r\n\tpublic static KEYNAME_END:string = \"End\";\r\n\r\n\t/**\r\n\t * The Execute key\r\n\t */\r\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\r\n\r\n\t/**\r\n\t * The F1 key\r\n\t */\r\n\tpublic static KEYNAME_F1:string = \"F1\";\r\n\r\n\t/**\r\n\t * The F10 key\r\n\t */\r\n\tpublic static KEYNAME_F10:string = \"F10\";\r\n\r\n\t/**\r\n\t * The F11 key\r\n\t */\r\n\tpublic static KEYNAME_F11:string = \"F11\";\r\n\r\n\t/**\r\n\t * The F12 key\r\n\t */\r\n\tpublic static KEYNAME_F12:string = \"F12\";\r\n\r\n\t/**\r\n\t * The F13 key\r\n\t */\r\n\tpublic static KEYNAME_F13:string = \"F13\";\r\n\r\n\t/**\r\n\t * The F14 key\r\n\t */\r\n\tpublic static KEYNAME_F14:string = \"F14\";\r\n\r\n\t/**\r\n\t * The F15 key\r\n\t */\r\n\tpublic static KEYNAME_F15:string = \"F15\";\r\n\r\n\t/**\r\n\t * The F16 key\r\n\t */\r\n\tpublic static KEYNAME_F16:string = \"F16\";\r\n\r\n\t/**\r\n\t * The F17 key\r\n\t */\r\n\tpublic static KEYNAME_F17:string = \"F17\";\r\n\r\n\t/**\r\n\t * The F18 key\r\n\t */\r\n\tpublic static KEYNAME_F18:string = \"F18\";\r\n\r\n\t/**\r\n\t * The F19 key\r\n\t */\r\n\tpublic static KEYNAME_F19:string = \"F19\";\r\n\r\n\t/**\r\n\t * The F2 key\r\n\t */\r\n\tpublic static KEYNAME_F2:string = \"F2\";\r\n\r\n\t/**\r\n\t * The F20 key\r\n\t */\r\n\tpublic static KEYNAME_F20:string = \"F20\";\r\n\r\n\t/**\r\n\t * The F21 key\r\n\t */\r\n\tpublic static KEYNAME_F21:string = \"F21\";\r\n\r\n\t/**\r\n\t * The F22 key\r\n\t */\r\n\tpublic static KEYNAME_F22:string = \"F22\";\r\n\r\n\t/**\r\n\t * The F23 key\r\n\t */\r\n\tpublic static KEYNAME_F23:string = \"F23\";\r\n\r\n\t/**\r\n\t * The F24 key\r\n\t */\r\n\tpublic static KEYNAME_F24:string = \"F24\";\r\n\r\n\t/**\r\n\t * The F25 key\r\n\t */\r\n\tpublic static KEYNAME_F25:string = \"F25\";\r\n\r\n\t/**\r\n\t * The F26 key\r\n\t */\r\n\tpublic static KEYNAME_F26:string = \"F26\";\r\n\r\n\t/**\r\n\t * The F27 key\r\n\t */\r\n\tpublic static KEYNAME_F27:string = \"F27\";\r\n\r\n\t/**\r\n\t * The F28 key\r\n\t */\r\n\tpublic static KEYNAME_F28:string = \"F28\";\r\n\r\n\t/**\r\n\t * The F29 key\r\n\t */\r\n\tpublic static KEYNAME_F29:string = \"F29\";\r\n\r\n\t/**\r\n\t * The F3 key\r\n\t */\r\n\tpublic static KEYNAME_F3:string = \"F3\";\r\n\r\n\t/**\r\n\t * The F30 key\r\n\t */\r\n\tpublic static KEYNAME_F30:string = \"F30\";\r\n\r\n\t/**\r\n\t * The F31 key\r\n\t */\r\n\tpublic static KEYNAME_F31:string = \"F31\";\r\n\r\n\t/**\r\n\t * The F32 key\r\n\t */\r\n\tpublic static KEYNAME_F32:string = \"F32\";\r\n\r\n\t/**\r\n\t * The F33 key\r\n\t */\r\n\tpublic static KEYNAME_F33:string = \"F33\";\r\n\r\n\t/**\r\n\t * The F34 key\r\n\t */\r\n\tpublic static KEYNAME_F34:string = \"F34\";\r\n\r\n\t/**\r\n\t * The F35 key\r\n\t */\r\n\tpublic static KEYNAME_F35:string = \"F35\";\r\n\r\n\t/**\r\n\t * The F4 key\r\n\t */\r\n\tpublic static KEYNAME_F4:string = \"F4\";\r\n\r\n\t/**\r\n\t * The F5 key\r\n\t */\r\n\tpublic static KEYNAME_F5:string = \"F5\";\r\n\r\n\t/**\r\n\t * The F6 key\r\n\t */\r\n\tpublic static KEYNAME_F6:string = \"F6\";\r\n\r\n\t/**\r\n\t * The F7 key\r\n\t */\r\n\tpublic static KEYNAME_F7:string = \"F7\";\r\n\r\n\t/**\r\n\t * The F8 key\r\n\t */\r\n\tpublic static KEYNAME_F8:string = \"F8\";\r\n\r\n\t/**\r\n\t * The F9 key\r\n\t */\r\n\tpublic static KEYNAME_F9:string = \"F9\";\r\n\r\n\t/**\r\n\t * The Find key\r\n\t */\r\n\tpublic static KEYNAME_FIND:string = \"Find\";\r\n\r\n\t/**\r\n\t * The Help key\r\n\t */\r\n\tpublic static KEYNAME_HELP:string = \"Help\";\r\n\r\n\t/**\r\n\t * The Home key\r\n\t */\r\n\tpublic static KEYNAME_HOME:string = \"Home\";\r\n\r\n\t/**\r\n\t * The Insert key\r\n\t */\r\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\r\n\r\n\t/**\r\n\t * The Insert Character key\r\n\t */\r\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\r\n\r\n\t/**\r\n\t * The Insert Line key\r\n\t */\r\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\r\n\r\n\t/**\r\n\t * The left arrow\r\n\t */\r\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\r\n\r\n\t/**\r\n\t * The Menu key\r\n\t */\r\n\tpublic static KEYNAME_MENU:string = \"Menu\";\r\n\r\n\t/**\r\n\t * The Mode Switch key\r\n\t */\r\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\r\n\r\n\t/**\r\n\t * The Next key\r\n\t */\r\n\tpublic static KEYNAME_NEXT:string = \"Next\";\r\n\r\n\t/**\r\n\t * The Page Down key\r\n\t */\r\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\r\n\r\n\t/**\r\n\t * The Page Up key\r\n\t */\r\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\r\n\r\n\t/**\r\n\t * The Pause key\r\n\t */\r\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\r\n\r\n\t/**\r\n\t * The Previous key\r\n\t */\r\n\tpublic static KEYNAME_PREV:string = \"Prev\";\r\n\r\n\t/**\r\n\t * The PRINT key\r\n\t */\r\n\tpublic static KEYNAME_PRINT:string = \"Print\";\r\n\r\n\t/**\r\n\t * The PRINT Screen\r\n\t */\r\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\r\n\r\n\t/**\r\n\t * The Redo key\r\n\t */\r\n\tpublic static KEYNAME_REDO:string = \"Redo\";\r\n\r\n\t/**\r\n\t * The Reset key\r\n\t */\r\n\tpublic static KEYNAME_RESET:string = \"Reset\";\r\n\r\n\t/**\r\n\t * The right arrow\r\n\t */\r\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\r\n\r\n\t/**\r\n\t * The Scroll Lock key\r\n\t */\r\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\r\n\r\n\t/**\r\n\t * The Select key\r\n\t */\r\n\tpublic static KEYNAME_SELECT:string = \"Select\";\r\n\r\n\t/**\r\n\t * The Stop key\r\n\t */\r\n\tpublic static KEYNAME_STOP:string = \"Stop\";\r\n\r\n\t/**\r\n\t * The System Request key\r\n\t */\r\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\r\n\r\n\t/**\r\n\t * The System key\r\n\t */\r\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\r\n\r\n\t/**\r\n\t * The Undo key\r\n\t */\r\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\r\n\r\n\t/**\r\n\t * The up arrow\r\n\t */\r\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\r\n\r\n\t/**\r\n\t * The User key\r\n\t */\r\n\tpublic static KEYNAME_USER:string = \"User\";\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the L key (76).\r\n\t */\r\n\tpublic static L:number /*uint*/ = 76;\r\n\r\n\t/**\r\n\t * Watch last channel or show watched\r\n\t */\r\n\tpublic static LAST:number /*uint*/ = 0x01000011;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Left Arrow key (37).\r\n\t */\r\n\tpublic static LEFT:number /*uint*/ = 37;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the [ key (219).\r\n\t */\r\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\r\n\r\n\t/**\r\n\t * Return to live [position in broadcast]\r\n\t */\r\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the M key (77).\r\n\t */\r\n\tpublic static M:number /*uint*/ = 77;\r\n\r\n\t/**\r\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\r\n\t */\r\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\r\n\r\n\t/**\r\n\t * Engage menu\r\n\t */\r\n\tpublic static MENU:number /*uint*/ = 0x01000012;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the - key (189).\r\n\t */\r\n\tpublic static MINUS:number /*uint*/ = 189;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the N key (78).\r\n\t */\r\n\tpublic static N:number /*uint*/ = 78;\r\n\r\n\t/**\r\n\t * Skip to next track or chapter\r\n\t */\r\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 0 key (48).\r\n\t */\r\n\tpublic static NUMBER_0:number /*uint*/ = 48;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 1 key (49).\r\n\t */\r\n\tpublic static NUMBER_1:number /*uint*/ = 49;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 2 key (50).\r\n\t */\r\n\tpublic static NUMBER_2:number /*uint*/ = 50;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 3 key (51).\r\n\t */\r\n\tpublic static NUMBER_3:number /*uint*/ = 51;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 4 key (52).\r\n\t */\r\n\tpublic static NUMBER_4:number /*uint*/ = 52;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 5 key (53).\r\n\t */\r\n\tpublic static NUMBER_5:number /*uint*/ = 53;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 6 key (54).\r\n\t */\r\n\tpublic static NUMBER_6:number /*uint*/ = 54;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 7 key (55).\r\n\t */\r\n\tpublic static NUMBER_7:number /*uint*/ = 55;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 8 key (56).\r\n\t */\r\n\tpublic static NUMBER_8:number /*uint*/ = 56;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 9 key (57).\r\n\t */\r\n\tpublic static NUMBER_9:number /*uint*/ = 57;\r\n\r\n\t/**\r\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\r\n\t */\r\n\tpublic static NUMPAD:number /*uint*/ = 21;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\r\n\t */\r\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\r\n\t */\r\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\r\n\t */\r\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\r\n\t */\r\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\r\n\t */\r\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\r\n\t */\r\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\r\n\t */\r\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\r\n\t */\r\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\r\n\t */\r\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\r\n\t */\r\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the addition key on the number pad (107).\r\n\t */\r\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\r\n\t */\r\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the division key on the number pad (111).\r\n\t */\r\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\r\n\t */\r\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\r\n\t */\r\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\r\n\t */\r\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the O key (79).\r\n\t */\r\n\tpublic static O:number /*uint*/ = 79;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the P key (80).\r\n\t */\r\n\tpublic static P:number /*uint*/ = 80;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Page Down key (34).\r\n\t */\r\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Page Up key (33).\r\n\t */\r\n\tpublic static PAGE_UP:number /*uint*/ = 33;\r\n\r\n\t/**\r\n\t * Engage pause transport mode\r\n\t */\r\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the . key (190).\r\n\t */\r\n\tpublic static PERIOD:number /*uint*/ = 190;\r\n\r\n\t/**\r\n\t * Engage play transport mode\r\n\t */\r\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\r\n\r\n\t/**\r\n\t * Skip to previous track or chapter\r\n\t */\r\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Q key (81).\r\n\t */\r\n\tpublic static Q:number /*uint*/ = 81;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ' key (222).\r\n\t */\r\n\tpublic static QUOTE:number /*uint*/ = 222;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the R key (82).\r\n\t */\r\n\tpublic static R:number /*uint*/ = 82;\r\n\r\n\t/**\r\n\t * Record item or engage record transport mode\r\n\t */\r\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\r\n\r\n\t/**\r\n\t * Red function key button\r\n\t */\r\n\tpublic static RED:number /*uint*/ = 0x01000000;\r\n\r\n\t/**\r\n\t * Engage rewind transport mode\r\n\t */\r\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Right Arrow key (39).\r\n\t */\r\n\tpublic static RIGHT:number /*uint*/ = 39;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ] key (221).\r\n\t */\r\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the S key (83).\r\n\t */\r\n\tpublic static S:number /*uint*/ = 83;\r\n\r\n\t/**\r\n\t * Search button\r\n\t */\r\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ; key (186).\r\n\t */\r\n\tpublic static SEMICOLON:number /*uint*/ = 186;\r\n\r\n\t/**\r\n\t * Engage setup application or menu\r\n\t */\r\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Shift key (16).\r\n\t */\r\n\tpublic static SHIFT:number /*uint*/ = 16;\r\n\r\n\t/**\r\n\t * Quick skip backward (usually 7-10 seconds)\r\n\t */\r\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\r\n\r\n\t/**\r\n\t * Quick skip ahead (usually 30 seconds)\r\n\t */\r\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the / key (191).\r\n\t */\r\n\tpublic static SLASH:number /*uint*/ = 191;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Spacebar (32).\r\n\t */\r\n\tpublic static SPACE:number /*uint*/ = 32;\r\n\r\n\t/**\r\n\t * Engage stop transport mode\r\n\t */\r\n\tpublic static STOP:number /*uint*/ = 0x01000009;\r\n\r\n\t/**\r\n\t * Toggle subtitles\r\n\t */\r\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the T key (84).\r\n\t */\r\n\tpublic static T:number /*uint*/ = 84;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Tab key (9).\r\n\t */\r\n\tpublic static TAB:number /*uint*/ = 9;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the U key (85).\r\n\t */\r\n\tpublic static U:number /*uint*/ = 85;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Up Arrow key (38).\r\n\t */\r\n\tpublic static UP:number /*uint*/ = 38;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the V key (86).\r\n\t */\r\n\tpublic static V:number /*uint*/ = 86;\r\n\r\n\t/**\r\n\t * Engage video-on-demand\r\n\t */\r\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the W key (87).\r\n\t */\r\n\tpublic static W:number /*uint*/ = 87;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the X key (88).\r\n\t */\r\n\tpublic static X:number /*uint*/ = 88;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Y key (89).\r\n\t */\r\n\tpublic static Y:number /*uint*/ = 89;\r\n\r\n\t/**\r\n\t * Yellow function key button\r\n\t */\r\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Z key (90).\r\n\t */\r\n\tpublic static Z:number /*uint*/ = 90;\r\n\r\n}",
    "export {Keyboard}\t\t\t\t\t\tfrom \"./ui/Keyboard\";",
    "import {BlendMode}\t\t\t\tfrom \"../image/BlendMode\";\r\nimport {ColorTransform}\t\t\tfrom \"../geom/ColorTransform\";\r\nimport {Matrix}\t\t\t\t\tfrom \"../geom/Matrix\";\r\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\r\nimport {ColorUtils}\t\t\t\tfrom \"../utils/ColorUtils\";\r\n\r\nexport class BitmapImageUtils\r\n{\r\n\tpublic static _fillRect(context:CanvasRenderingContext2D, rect:Rectangle, color:number, transparent:boolean):void\r\n\t{\r\n\t\tif (color == 0x0 && transparent) {\r\n\t\t\tcontext.clearRect(rect.x, rect.y, rect.width, rect.height);\r\n\t\t} else {\r\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\t\tif (transparent)\r\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\r\n\t\t\telse\r\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\r\n\r\n\t\t\tcontext.fillRect(rect.x, rect.y, rect.width, rect.height);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static _copyPixels(context:CanvasRenderingContext2D, bmpd:HTMLImageElement | HTMLCanvasElement | HTMLVideoElement, sourceRect:Rectangle, destRect:Rectangle):void\r\n\t{\r\n\t\tcontext.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\r\n\t}\r\n\r\n\tpublic static _draw(context:CanvasRenderingContext2D, source:any, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean):void\r\n\t{\r\n\t\tcontext.save();\r\n\r\n\t\tif (matrix != null)\r\n\t\t\tcontext.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\r\n\r\n\t\tif (clipRect != null)\r\n\t\t\tcontext.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\r\n\t\telse\r\n\t\t\tcontext.drawImage(source, 0, 0);\r\n\r\n\t\tcontext.restore();\r\n\t}\r\n}",
    "import {AbstractMethodError}\t\tfrom \"../errors/AbstractMethodError\";\r\n\r\nexport class ByteArrayBase\r\n{\r\n\tpublic position:number = 0;\r\n\tpublic length:number = 0;\r\n\tpublic _mode:string = \"\";\r\n\r\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\tpublic writeByte(b:number):void\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readByte():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number):void\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedByte():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number):void\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedShort():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number):void\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedInt():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeFloat(b:number):void\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic toFloatBits(x:number):void\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readFloat(b:number):void\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic fromFloatBits(x:number):void\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic getBytesAvailable():number\r\n\t{\r\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\r\n\t}\r\n\r\n\tpublic compareEqual(other, count):boolean\r\n\t{\r\n\t\tif (count == undefined || count > this.length - this.position)\r\n\t\t\tcount = this.length - this.position;\r\n\t\tif (count > other.length - other.position)\r\n\t\t\tcount = other.length - other.position;\r\n\t\tvar co0 = count;\r\n\t\tvar r:boolean = true;\r\n\t\twhile (r && count >= 4) {\r\n\t\t\tcount -= 4;\r\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\r\n\t\t}\r\n\t\twhile (r && count >= 1) {\r\n\t\t\tcount--;\r\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\r\n\t\t}\r\n\t\tvar c0;\r\n\t\tthis.position -= (c0 - count);\r\n\t\tother.position -= (c0 - count);\r\n\t\treturn r;\r\n\t}\r\n\r\n\tpublic writeBase64String(s:string):void\r\n\t{\r\n\t\tfor (var i:number = 0; i < s.length; i++) {\r\n\t\t\tvar v = s.charAt(i);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic dumpToConsole():void\r\n\t{\r\n\t\tvar oldpos = this.position;\r\n\t\tthis.position = 0;\r\n\t\tvar nstep:number = 8;\r\n\r\n\t\tfunction asHexString(x, digits)\r\n\t\t{\r\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\r\n\t\t\tvar sh:string = \"\";\r\n\t\t\tfor (var d:number = 0; d < digits; d++) {\r\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\r\n\t\t\t}\r\n\t\t\treturn sh;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < this.length; i += nstep) {\r\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\r\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\r\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\r\n\t\t\t}\r\n\t\t\tconsole.log(s);\r\n\t\t}\r\n\t\tthis.position = oldpos;\r\n\t}\r\n\r\n\tpublic readBase64String(count:number):string\r\n\t{\r\n\t\tif (count == undefined || count > this.length - this.position)\r\n\t\t\tcount = this.length - this.position;\r\n\t\tif (!(count > 0)) return \"\";\r\n\r\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\r\n\t}\r\n\r\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self):string\r\n\t{ // return base64 string of the next count bytes\r\n\t\tvar r:string = \"\";\r\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\r\n\t\tvar base64Key = ByteArrayBase.Base64Key;\r\n\t\twhile (count >= 3) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\r\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\r\n\t\t\tenc4 = b2 & 63;\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\r\n\t\t\tcount -= 3;\r\n\t\t}\r\n\t\t// pad\r\n\t\tif (count == 2) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\r\n\t\t\tenc3 = ((b1 & 15) << 2);\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\r\n\t\t} else if (count == 1) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4);\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\r\n\t\t}\r\n\t\treturn r;\r\n\t}\r\n}",
    "import {ByteArrayBase}\t\t\tfrom \"../utils/ByteArrayBase\";\r\n\r\nexport class ByteArrayBuffer extends ByteArrayBase\r\n{\r\n\r\n\t/*\r\n\t public maxlength:number = 0;\r\n\t public arraybytes; //ArrayBuffer\r\n\t public unalignedarraybytestemp; //ArrayBuffer\r\n\t */\r\n\r\n\tpublic _bytes:number[];\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._bytes = [];\r\n\t\tthis._mode = \"Array\";\r\n\t}\r\n\r\n\tpublic writeByte(b:number):void\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readByte():number\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\treturn this._bytes[ this.position++ ];\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number):void\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[this.position++] = bi & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedByte():number\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\treturn this._bytes[ this.position++ ];\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number):void\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedShort():number\r\n\t{\r\n\t\tif (this.position + 2 > this.length)\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\r\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\r\n\t\tthis.position += 2;\r\n\t\treturn r;\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number):void\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedInt():number\r\n\t{\r\n\t\tif (this.position + 4 > this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\r\n\t\tthis.position += 4;\r\n\t\treturn r >>> 0;\r\n\t}\r\n\r\n\tpublic writeFloat(b:number):void\r\n\t{\r\n\t\t// this is crazy slow and silly, but as a fallback...\r\n\r\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\r\n\t}\r\n\r\n\tpublic toFloatBits(x:number):number\r\n\t{\r\n\t\t// don't handle inf/nan yet\r\n\t\t// special case zero\r\n\t\tif (x == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// remove the sign, after this we only deal with positive numbers\r\n\t\tvar sign:number = 0;\r\n\t\tif (x < 0) {\r\n\t\t\tx = -x;\r\n\t\t\tsign = 1;\r\n\t\t} else {\r\n\t\t\tsign = 0;\r\n\t\t}\r\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\r\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\r\n\t\texponent = Math.floor(exponent);\r\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\r\n\t\tvar mantissa = Math.floor(x) - 0x800000;\r\n\t\texponent = exponent + 127;\r\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\r\n\t}\r\n\r\n\tpublic readFloat(b:number):number\r\n\t{\r\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\r\n\t}\r\n\r\n\tpublic fromFloatBits(x:number):number\r\n\t{\r\n\t\tif (x == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\r\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\r\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\r\n\t\tif (x >>> 31 != 0) {\r\n\t\t\ty = -y;\r\n\t\t}\r\n\t\treturn y;\r\n\t}\r\n\r\n\t/*\r\n\t public ensureWriteableSpace( n:number )\r\n\t {\r\n\t this.ensureSpace( n + this.position );\r\n\t }\r\n\r\n\t private ensureSpace( n:number )\r\n\t {\r\n\t if ( n > this.maxlength ) {\r\n\t var newmaxlength:number = (n+255)&(~255);\r\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\r\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\r\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\r\n\t newview.set(view);      // memcpy\r\n\t this.arraybytes = newarraybuffer;\r\n\t this.maxlength = newmaxlength;\r\n\t }\r\n\t }\r\n\t */\r\n}",
    "import {ByteArrayBase}\t\t\tfrom \"../utils/ByteArrayBase\";\r\n\r\nexport class ByteArray extends ByteArrayBase\r\n{\r\n\tpublic maxlength:number;\r\n\tpublic arraybytes; //ArrayBuffer\r\n\tpublic unalignedarraybytestemp; //ArrayBuffer\r\n\r\n\tconstructor(maxlength:number = 4)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._mode = \"Typed array\";\r\n\t\tthis.maxlength = Math.max((maxlength + 255) & (~255), 4);\r\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\r\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\r\n\t}\r\n\r\n\tpublic ensureWriteableSpace(n:number):void\r\n\t{\r\n\t\tthis.ensureSpace(n + this.position);\r\n\t}\r\n\r\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\r\n\t{\r\n\t\tthis.ensureSpace(aBuffer.byteLength);\r\n\r\n\t\tthis.length = aBuffer.byteLength;\r\n\r\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\r\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\r\n\r\n\t\tlocalInt8View.set(inInt8AView);\r\n\r\n\t\tthis.position = 0;\r\n\r\n\t}\r\n\r\n\tpublic getBytesAvailable():number\r\n\t{\r\n\t\treturn ( this.length ) - ( this.position );\r\n\t}\r\n\r\n\tpublic ensureSpace(n:number):void\r\n\t{\r\n\t\tif (n > this.maxlength) {\r\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\r\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\r\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\r\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\r\n\t\t\tnewview.set(view);      // memcpy\r\n\t\t\tthis.arraybytes = newarraybuffer;\r\n\t\t\tthis.maxlength = newmaxlength;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeByte(b:number):void\r\n\t{\r\n\t\tthis.ensureWriteableSpace(1);\r\n\r\n\t\tvar view = new Int8Array(this.arraybytes);\r\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readByte():number\r\n\t{\r\n\t\tif (this.position >= this.length)\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\r\n\t\tvar view = new Int8Array(this.arraybytes);\r\n\r\n\t\treturn view[ this.position++ ];\r\n\t}\r\n\r\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0):void\r\n\t{\r\n\t\tif (length == null)\r\n\t\t\tlength = bytes.length;\r\n\r\n\t\tbytes.ensureWriteableSpace(offset + length);\r\n\r\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\r\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\r\n\r\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\r\n\r\n\t\tthis.position += length;\r\n\r\n\t\tif (length + offset > bytes.length)\r\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number):void\r\n\t{\r\n\t\tthis.ensureWriteableSpace(1);\r\n\r\n\t\tvar view = new Uint8Array(this.arraybytes);\r\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\r\n\r\n\t\tif (this.position > this.length)\r\n\t\t\tthis.length = this.position;\r\n\t}\r\n\r\n\tpublic readUnsignedByte():number\r\n\t{\r\n\t\tif (this.position >= this.length)\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\r\n\t\tvar view = new Uint8Array(this.arraybytes);\r\n\t\treturn view[this.position++];\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number):void\r\n\t{\r\n\t\tthis.ensureWriteableSpace(2);\r\n\r\n\t\tif (( this.position & 1 ) == 0) {\r\n\t\t\tvar view = new Uint16Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\r\n\t\t} else {\r\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = (~~b) & 0xffff;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\r\n\t\tthis.position += 2;\r\n\r\n\t\tif (this.position > this.length)\r\n\t\t\tthis.length = this.position;\r\n\t}\r\n\r\n\tpublic readUTFBytes(len:number):string\r\n\t{\r\n\t\tvar value:string = \"\";\r\n\t\tvar max:number = this.position + len;\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\r\n\t\t// utf8-encode\r\n\t\twhile (this.position < max) {\r\n\r\n\t\t\tvar c:number = data.getUint8(this.position++);\r\n\r\n\t\t\tif (c < 0x80) {\r\n\r\n\t\t\t\tif (c == 0) break;\r\n\t\t\t\tvalue += String.fromCharCode(c);\r\n\r\n\t\t\t} else if (c < 0xE0) {\r\n\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t} else if (c < 0xF0) {\r\n\r\n\t\t\t\tvar c2 = data.getUint8(this.position++);\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar c2 = data.getUint8(this.position++);\r\n\t\t\t\tvar c3 = data.getUint8(this.position++);\r\n\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic readInt():number\r\n\t{\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar int:number = data.getInt32(this.position, true);\r\n\r\n\t\tthis.position += 4;\r\n\r\n\t\treturn int;\r\n\t}\r\n\r\n\tpublic readShort():number\r\n\t{\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar short:number = data.getInt16(this.position, true);\r\n\r\n\t\tthis.position += 2;\r\n\r\n\t\treturn short;\r\n\t}\r\n\r\n\tpublic readDouble():number\r\n\t{\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar double:number = data.getFloat64(this.position, true);\r\n\r\n\t\tthis.position += 8;\r\n\r\n\t\treturn double;\r\n\t}\r\n\r\n\tpublic readUnsignedShort():number\r\n\t{\r\n\t\tif (this.position > this.length + 2)\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\r\n\t\tif (( this.position & 1 ) == 0) {\r\n\t\t\tvar view = new Uint16Array(this.arraybytes);\r\n\t\t\tvar pa:number = this.position >> 1;\r\n\t\t\tthis.position += 2;\r\n\t\t\treturn view[ pa ];\r\n\t\t} else {\r\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 2;\r\n\t\t\treturn view[0];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number):void\r\n\t{\r\n\t\tthis.ensureWriteableSpace(4);\r\n\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Uint32Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\r\n\t\t} else {\r\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = (~~b) & 0xffffffff;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\t\tthis.position += 4;\r\n\r\n\t\tif (this.position > this.length)\r\n\t\t\tthis.length = this.position;\r\n\t}\r\n\r\n\tpublic readUnsignedInt():number\r\n\t{\r\n\t\tif (this.position > this.length + 4)\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Uint32Array(this.arraybytes);\r\n\t\t\tvar pa:number = this.position >> 2;\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[ pa ];\r\n\t\t} else {\r\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[0];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeFloat(b:number):void\r\n\t{\r\n\t\tthis.ensureWriteableSpace(4);\r\n\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Float32Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 2 ] = b;\r\n\t\t} else {\r\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = b;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\t\tthis.position += 4;\r\n\r\n\t\tif (this.position > this.length)\r\n\t\t\tthis.length = this.position;\r\n\t}\r\n\r\n\tpublic readFloat():number\r\n\t{\r\n\t\tif (this.position > this.length + 4)\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\r\n\t\tif ((this.position & 3) == 0) {\r\n\t\t\tvar view = new Float32Array(this.arraybytes);\r\n\t\t\tvar pa = this.position >> 2;\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[pa];\r\n\t\t} else {\r\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[ 0 ];\r\n\t\t}\r\n\t}\r\n}",
    "export class CSS\r\n{\r\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number):void\r\n\t{\r\n\t\tif(!element) return;\r\n\t\telement.style.width = width + \"px\";\r\n\t\telement.style.height = height + \"px\";\r\n\t\telement[\"width\"] = width;\r\n\t\telement[\"height\"] = height;\r\n\t}\r\n\r\n\tpublic static setElementWidth(element:HTMLElement, width:number):void\r\n\t{\r\n\t\tif(!element) return;\r\n\t\telement.style.width = width + \"px\";\r\n\t\telement[\"width\"] = width;\r\n\t}\r\n\r\n\tpublic static setElementHeight(element:HTMLElement, height:number):void\r\n\t{\r\n\t\tif(!element) return;\r\n\t\telement.style.height = height + \"px\";\r\n\t\telement[\"height\"] = height;\r\n\t}\r\n\r\n\tpublic static setElementX(element:HTMLElement, x:number):void\r\n\t{\r\n\t\tif(!element) return;\r\n\t\telement.style.position = 'absolute';\r\n\t\telement.style.left = x + \"px\";\r\n\t}\r\n\r\n\tpublic static setElementY(element:HTMLElement, y:number):void\r\n\t{\r\n\t\tif(!element) return;\r\n\t\telement.style.position = 'absolute';\r\n\t\telement.style.top = y + \"px\";\r\n\t}\r\n\r\n\tpublic static getElementVisibility(element:HTMLElement):boolean\r\n\t{\r\n\t\tif(!element) return false;\r\n\t\treturn element.style.visibility == 'visible';\r\n\t}\r\n\r\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean):void\r\n\t{\r\n\t\tif(!element) return;\r\n\t\tif (visible) {\r\n\t\t\telement.style.visibility = 'visible';\r\n\t\t} else {\r\n\t\t\telement.style.visibility = 'hidden';\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number):void\r\n\t{\r\n\t\tif (element instanceof HTMLCanvasElement) {\r\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\r\n\t\t\tcontext.globalAlpha = alpha;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false):void\r\n\t{\r\n\t\tif(!element) return;\r\n\t\tif (absolute) {\r\n\t\t\telement.style.position = \"absolute\";\r\n\t\t} else {\r\n\t\t\telement.style.position = \"relative\";\r\n\t\t}\r\n\r\n\t\telement.style.left = x + \"px\";\r\n\t\telement.style.top = y + \"px\";\r\n\t}\r\n}",
    "/**\r\n *\r\n */\r\nexport class ColorUtils\r\n{\r\n\tpublic static float32ColorToARGB(float32Color:number):number[]\r\n\t{\r\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24;\r\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\r\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\r\n\t\tvar b:number = float32Color & 0xff;\r\n\t\tvar result:number[] = [ a, r , g , b ];\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static ARGBtoFloat32(a:number, r:number, g:number, b:number):number\r\n\t{\r\n\t\treturn ((a << 24) | (r << 16) | (g << 8) | b);\r\n\t}\r\n\r\n\tprivate static componentToHex(c:number):string\r\n\t{\r\n\t\tvar hex = c.toString(16);\r\n\t\treturn hex.length == 1? \"0\" + hex : hex;\r\n\t}\r\n\r\n\tpublic static RGBToHexString(argb:number[]):string\r\n\t{\r\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\r\n\t}\r\n\r\n\tpublic static ARGBToHexString(argb:number[]):string\r\n\t{\r\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\r\n\t}\r\n}",
    "import {PartialImplementationError}\tfrom \"../errors/PartialImplementationError\";\r\n\r\n/**\r\n *\r\n */\r\nexport class Debug\r\n{\r\n\tpublic static THROW_ERRORS:boolean = true;\r\n\tpublic static ENABLE_LOG:boolean = true;\r\n\tpublic static LOG_PI_ERRORS:boolean = true;\r\n\r\n\tprivate static keyword:string = null;\r\n\r\n\tpublic static breakpoint():void\r\n\t{\r\n\t\tDebug['break']();\r\n\t}\r\n\r\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true):void\r\n\t{\r\n\t\tif (!enable)\r\n\t\t\tDebug.keyword = null;\r\n\t\telse\r\n\t\t\tDebug.keyword = str;\r\n\t}\r\n\r\n\tpublic static throwPIR(clss:string, fnc:string, msg:string):void\r\n\t{\r\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\r\n\r\n\t\tif (Debug.THROW_ERRORS) {\r\n\t\t\tif (Debug.keyword) {\r\n\t\t\t\tvar e:string = clss + fnc + msg;\r\n\r\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static logPIR(clss:string, fnc:string, msg:string = ''):void\r\n\t{\r\n\t\tif (Debug.LOG_PI_ERRORS)\r\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\r\n\t}\r\n\r\n\tpublic static log(...args:any[]):void\r\n\t{\r\n\t\tif (Debug.ENABLE_LOG)\r\n\t\t\tconsole.log(args);\r\n\t}\r\n}",
    "declare var SIMD:any;\r\n\r\n/**\r\n *\r\n */\r\nexport class Extensions\r\n{\r\n\tpublic static SIMD:boolean = Boolean(typeof(SIMD) !== \"undefined\");\r\n}",
    "import {Image2D}\t\t\t\t\t\tfrom \"../image/Image2D\";\r\n\r\nexport class ImageUtils\r\n{\r\n\tprivate static MAX_SIZE:number = 2048;\r\n\r\n\tpublic static isImage2DValid(image2D:Image2D):boolean\r\n\t{\r\n\t\tif (image2D == null)\r\n\t\t\treturn true;\r\n\r\n\t\treturn ImageUtils.isDimensionValid(image2D.width, image2D.powerOfTwo) && ImageUtils.isDimensionValid(image2D.height, image2D.powerOfTwo);\r\n\t}\r\n\r\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\r\n\t{\r\n\t\tif (image == null)\r\n\t\t\treturn true;\r\n\r\n\t\treturn ImageUtils.isDimensionValid(image.width) && ImageUtils.isDimensionValid(image.height);\r\n\t}\r\n\r\n\tpublic static isDimensionValid(d:number, powerOfTwo:boolean = true):boolean\r\n\t{\r\n\t\treturn d >= 1 && d <= ImageUtils.MAX_SIZE && (!powerOfTwo || ImageUtils.isPowerOfTwo(d));\r\n\t}\r\n\r\n\tpublic static isPowerOfTwo(value:number):boolean\r\n\t{\r\n\t\treturn value? ((value & -value) == value) : false;\r\n\t}\r\n\r\n\tpublic static getBestPowerOf2(value:number):number\r\n\t{\r\n\t\tvar p:number = 1;\r\n\r\n\t\twhile (p < value)\r\n\t\t\tp <<= 1;\r\n\r\n\t\tif (p > ImageUtils.MAX_SIZE)\r\n\t\t\tp = ImageUtils.MAX_SIZE;\r\n\r\n\t\treturn p;\r\n\t}\r\n}\r\n\r\nexport default ImageUtils",
    "import {BitmapImage2D}\t\t\t\tfrom \"../image/BitmapImage2D\";\r\nimport {CPUCanvas}\t\t\t\t\tfrom \"../image/CPUCanvas\";\r\nimport {Matrix}\t\t\t\t\t\tfrom \"../geom/Matrix\";\r\nimport {Rectangle}\t\t\t\t\tfrom \"../geom/Rectangle\";\r\n\r\nexport class MipmapGenerator {\r\n\tprivate static _mipMaps = [];\r\n\tprivate static _mipMapUses = [];\r\n\r\n\tprivate static _matrix:Matrix = new Matrix();\r\n\tprivate static _rect:Rectangle = new Rectangle();\r\n\tprivate static _source:BitmapImage2D;\r\n\r\n\t/**\r\n\t * Uploads a BitmapImage2D with mip maps to a target Texture object.\r\n\t * @param source The source to upload.\r\n\t * @param target The target Texture to upload to.\r\n\t * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\r\n\t * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\r\n\t */\r\n\tpublic static _generateMipMaps(source:HTMLElement, output?:Array<BitmapImage2D>, alpha?:boolean);\r\n\tpublic static _generateMipMaps(source:BitmapImage2D, output?:Array<BitmapImage2D>, alpha?:boolean);\r\n\tpublic static _generateMipMaps(source:any, output?:Array<BitmapImage2D>, alpha:boolean = false) {\r\n\t\tvar w:number = source.width;\r\n\t\tvar h:number = source.height;\r\n\t\tvar i:number = 0;\r\n\r\n\t\tvar mipmap:BitmapImage2D;\r\n\r\n\t\tMipmapGenerator._rect.width = w;\r\n\t\tMipmapGenerator._rect.height = h;\r\n\r\n\t\t//use (OR) to create non-square texture mipmaps\r\n\t\twhile (w >= 1 || h >= 1) {\r\n\r\n\t\t\tmipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\r\n\r\n\t\t\tif (alpha)\r\n\t\t\t\tmipmap.fillRect(MipmapGenerator._rect, 0);\r\n\r\n\r\n\t\t\tMipmapGenerator._matrix.a = MipmapGenerator._rect.width / source.width;\r\n\t\t\tMipmapGenerator._matrix.d = MipmapGenerator._rect.height / source.height;\r\n\t\t\t//todo: add support for NPOT textures\r\n\t\t\tif (document) {\r\n\t\t\t\tmipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\r\n\t\t\t} else {\r\n\t\t\t\tif (source.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\r\n\t\t\t\t\t//for BitmapImage2D\r\n\t\t\t\t\tvar bitmapImage:BitmapImage2D = <BitmapImage2D> source;\r\n\t\t\t\t\tbitmapImage.lock();\r\n\t\t\t\t\tmipmap.lock();\r\n\t\t\t\t\tthis.downsampleImage(bitmapImage.getImageData(), mipmap.getImageData());\r\n\t\t\t\t\tmipmap.unlock();\r\n\t\t\t\t\tbitmapImage.unlock();\r\n\t\t\t\t}else if(source.constructor.toString().indexOf(\"CPUCanvas\") > -1){\r\n\t\t\t\t\tthis.downsampleImage(source.getImageData(), mipmap.getImageData());\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//for imageData\r\n\t\t\t\t\tthis.downsampleImage(source, mipmap.getImageData());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tw >>= 1;\r\n\t\t\th >>= 1;\r\n\r\n\t\t\tMipmapGenerator._rect.width = w > 1 ? w : 1;\r\n\t\t\tMipmapGenerator._rect.height = h > 1 ? h : 1;\r\n\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _getMipmapHolder(mipMapHolder:BitmapImage2D, newW:number, newH:number):BitmapImage2D {\r\n\t\tif (mipMapHolder) {\r\n\t\t\tif (mipMapHolder.width == newW && mipMapHolder.height == newH)\r\n\t\t\t\treturn mipMapHolder;\r\n\r\n\t\t\tMipmapGenerator._freeMipMapHolder(mipMapHolder);\r\n\t\t}\r\n\r\n\t\tif (!MipmapGenerator._mipMaps[newW]) {\r\n\t\t\tMipmapGenerator._mipMaps[newW] = [];\r\n\t\t\tMipmapGenerator._mipMapUses[newW] = [];\r\n\t\t}\r\n\r\n\t\tif (!MipmapGenerator._mipMaps[newW][newH]) {\r\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapImage2D(newW, newH, true);\r\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = 1;\r\n\t\t} else {\r\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\r\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH];\r\n\t\t}\r\n\r\n\t\treturn mipMapHolder;\r\n\t}\r\n\r\n\tpublic static _freeMipMapHolder(mipMapHolder:BitmapImage2D) {\r\n\t\tvar holderWidth:number = mipMapHolder.width;\r\n\t\tvar holderHeight:number = mipMapHolder.height;\r\n\r\n\t\tif (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\r\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\r\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static downsampleImage(bitmap:ImageData, destBitmap:ImageData):ImageData {\r\n\t\tvar box:BoxFilter = new BoxFilter();\r\n\t\tvar xkernel:PolyphaseKernel = new PolyphaseKernel(box, bitmap.width, destBitmap.width, 4);\r\n\t\tvar ykernel:PolyphaseKernel = new PolyphaseKernel(box, bitmap.height, destBitmap.height, 4);\r\n\r\n\t\tvar tempBitmap:number[] = [];//destBitmap.width, bitmap.height\r\n\r\n\t\tvar scale:number = 0;\r\n\t\tvar iscale:number = 0;\r\n\t\tvar kernelLength:number = 0;\r\n\t\tvar kernelWidth:number = 0;\r\n\t\tvar kernelWindowSize:number = 0;\r\n\t\tvar sumR:number = 0;\r\n\t\tvar sumG:number = 0;\r\n\t\tvar sumB:number = 0;\r\n\t\tvar sumA:number = 0;\r\n\t\tvar center:number;\r\n\t\tvar left:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number = 0;\r\n\r\n\t\tfor (var y:number = 0; y < bitmap.height; y++) {\r\n\t\t\tkernelLength = xkernel.len;\r\n\t\t\tscale = kernelLength / bitmap.width;\r\n\t\t\tiscale = 1.0 / scale;\r\n\t\t\tkernelWidth = xkernel.width;\r\n\t\t\tkernelWindowSize = xkernel.windowSize;\r\n\r\n\t\t\tfor (i = 0; i < kernelLength; i++) {\r\n\t\t\t\tcenter = (0.5 + i) * iscale;\r\n\t\t\t\tleft = Math.floor(center - kernelWidth);\r\n\t\t\t\tsumR = 0;\r\n\t\t\t\tsumG = 0;\r\n\t\t\t\tsumB = 0;\r\n\t\t\t\tsumA = 0;\r\n\t\t\t\tfor (var j:number = 0; j < kernelWindowSize; ++j) {\r\n\t\t\t\t\tindex = (y * bitmap.width + (left + j) ) * 4;\r\n\t\t\t\t\tvar colorR:number = bitmap.data[index];\r\n\t\t\t\t\tvar colorG:number = bitmap.data[index + 1];\r\n\t\t\t\t\tvar colorB:number = bitmap.data[index + 2];\r\n\t\t\t\t\tvar colorA:number = bitmap.data[index + 3];\r\n\r\n\t\t\t\t\tvar value:number = xkernel.valueAt(i, j);\r\n\t\t\t\t\tsumR += value * colorR;\r\n\t\t\t\t\tsumG += value * colorG;\r\n\t\t\t\t\tsumB += value * colorB;\r\n\t\t\t\t\tsumA += value * colorA;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex = (y * destBitmap.width + i) * 4;\r\n\t\t\t\ttempBitmap[index] = sumR;\r\n\t\t\t\ttempBitmap[index + 1] = sumG;\r\n\t\t\t\ttempBitmap[index + 2] = sumB;\r\n\t\t\t\ttempBitmap[index + 3] = sumA;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var x:number = 0; x < destBitmap.width; x++) {\r\n\t\t\tkernelLength = ykernel.len;\r\n\t\t\tscale = kernelLength / bitmap.height;\r\n\t\t\tiscale = 1.0 / scale;\r\n\t\t\tkernelWidth = ykernel.width;\r\n\t\t\tkernelWindowSize = ykernel.windowSize;\r\n\r\n\t\t\tfor (i = 0; i < kernelLength; i++) {\r\n\t\t\t\tcenter = (0.5 + i) * iscale;\r\n\r\n\t\t\t\tleft = Math.floor(center - kernelWidth);\r\n\r\n\t\t\t\tsumR = 0;\r\n\t\t\t\tsumG = 0;\r\n\t\t\t\tsumB = 0;\r\n\t\t\t\tsumA = 0;\r\n\t\t\t\tfor (j = 0; j < kernelWindowSize; ++j) {\r\n\t\t\t\t\tindex = ((j + left) * destBitmap.width + x) * 4;\r\n\t\t\t\t\tvar colorR:number = tempBitmap[index];\r\n\t\t\t\t\tvar colorG:number = tempBitmap[index + 1];\r\n\t\t\t\t\tvar colorB:number = tempBitmap[index + 2];\r\n\t\t\t\t\tvar colorA:number = tempBitmap[index + 3];\r\n\r\n\t\t\t\t\tvar value:number = ykernel.valueAt(i, j);\r\n\t\t\t\t\tsumR += value * colorR;\r\n\t\t\t\t\tsumG += value * colorG;\r\n\t\t\t\t\tsumB += value * colorB;\r\n\t\t\t\t\tsumA += value * colorA;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex = (i * destBitmap.width + x) * 4;\r\n\t\t\t\tdestBitmap.data[index] = sumR;\r\n\t\t\t\tdestBitmap.data[index + 1] = sumG;\r\n\t\t\t\tdestBitmap.data[index + 2] = sumB;\r\n\t\t\t\tdestBitmap.data[index + 3] = sumA;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn destBitmap;\r\n\t}\r\n}\r\nexport class PolyphaseKernel {\r\n\tpublic len:number;\r\n\tpublic width:number;\r\n\tpublic windowSize:number;\r\n\tpublic data:number[];\r\n\r\n\tconstructor(f:BoxFilter, srcLength:number, dstLength:number, samples:number) {\r\n\r\n\t\tvar scale:number = dstLength / srcLength;\r\n\t\tvar iscale:number = 1.0 / scale;\r\n\r\n\t\tif (scale > 1) {\r\n\t\t\t// Upsampling.\r\n\t\t\tsamples = 1;\r\n\t\t\tscale = 1;\r\n\t\t}\r\n\r\n\t\tthis.len = dstLength;\r\n\t\tthis.width = f.width * iscale;\r\n\t\tthis.windowSize = Math.ceil(this.width * 2);\r\n\r\n\t\tthis.data = [];\r\n\r\n\t\tfor (var i:number = 0; i < this.len; i++) {\r\n\t\t\tvar center:number = (0.5 + i) * iscale;\r\n\r\n\t\t\tvar left:number = Math.floor(center - this.width);\r\n\r\n\t\t\tvar total:number = 0.0;\r\n\t\t\tfor (var j:number = 0; j < this.windowSize; j++) {\r\n\t\t\t\tvar sample:number = f.sampleBox(left + j - center, scale, samples);\r\n\r\n\t\t\t\t//printf(\"%f %X\\n\", sample, *(uint32 *)&sample);\r\n\r\n\t\t\t\tthis.data[i * this.windowSize + j] = sample;\r\n\t\t\t\ttotal += sample;\r\n\t\t\t}\r\n\r\n\t\t\t// normalize weights.\r\n\t\t\tfor (var j:number = 0; j < this.windowSize; j++) {\r\n\t\t\t\tthis.data[i * this.windowSize + j] /= total;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic valueAt(column:number, x:number):number {\r\n\t\treturn this.data[column * this.windowSize + x];\r\n\t}\r\n}\r\n\r\nexport class BoxFilter {\r\n\tpublic get width():number {\r\n\t\treturn 0.5;\r\n\t}\r\n\r\n\tpublic sampleBox(x:number, scale:number, samples:number):number {\r\n\t\tvar sum:number = 0;\r\n\t\tvar isamples:number = 1.0 / samples;\r\n\r\n\t\tfor (var s:number = 0; s < samples; s++) {\r\n\t\t\tvar p:number = (x + (s + 0.5) * isamples) * scale;\r\n\t\t\tvar value:number = this.evaluate(p);\r\n\t\t\tsum += value;\r\n\t\t}\r\n\r\n\t\treturn sum * isamples;\r\n\t}\r\n\r\n\tpublic evaluate(x:number):number {\r\n\t\tif (Math.abs(x) <= this.width) return 1.0;\r\n\t\telse return 0.0;\r\n\t}\r\n}\r\nexport default MipmapGenerator;",
    "import {getTimer}\t\t\t\t\tfrom \"../utils/getTimer\";\r\n\r\nexport class RequestAnimationFrame\r\n{\r\n\tprivate _callback:Function;\r\n\tprivate _callbackContext:Object;\r\n\tprivate _active:boolean = false;\r\n\tprivate _rafUpdateFunction:any;\r\n\tprivate _prevTime:number;\r\n\tprivate _dt:number;\r\n\tprivate _currentTime:number;\r\n\tprivate _argsArray:Array<any> = new Array();\r\n\tprivate _getTimer:Function;\r\n\r\n\tconstructor(callback:Function, callbackContext:Object)\r\n\t{\r\n\t\tthis._getTimer = getTimer;\r\n\r\n\t\tthis.setCallback(callback, callbackContext);\r\n\r\n\t\tthis._rafUpdateFunction = () => {\r\n\t\t\tif (this._active)\r\n\t\t\t\tthis._tick();\r\n\t\t}\r\n\r\n\t\tthis._argsArray.push(this._dt);\r\n\t}\r\n\r\n\t// Public\r\n\r\n\t/**\r\n\t *\r\n\t * @param callback\r\n\t * @param callbackContext\r\n\t */\r\n\tpublic setCallback(callback:Function, callbackContext:Object):void\r\n\t{\r\n\t\tthis._callback = callback;\r\n\t\tthis._callbackContext = callbackContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic start():void\r\n\t{\r\n\t\tthis._prevTime = this._getTimer();\r\n\t\tthis._active = true;\r\n\r\n\t\tif(window) {\r\n\t\t\tif (window.requestAnimationFrame) {\r\n\t\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\r\n\t\t\t} else {\r\n\t\t\t\tif (window['mozRequestAnimationFrame'])\r\n\t\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\r\n\t\t\t\telse if (window['webkitRequestAnimationFrame'])\r\n\t\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\r\n\t\t\t\telse if (window['oRequestAnimationFrame'])\r\n\t\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic stop():void\r\n\t{\r\n\t\tthis._active = false;\r\n\t}\r\n\r\n\t// Get / Set\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic get active():boolean\r\n\t{\r\n\t\treturn this._active;\r\n\t}\r\n\r\n\t// Private\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _tick():void\r\n\t{\r\n\t\tthis._currentTime = this._getTimer();\r\n\t\tthis._dt = this._currentTime - this._prevTime;\r\n\t\tthis._argsArray[0] = this._dt;\r\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\r\n\r\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\r\n\r\n\t\tthis._prevTime = this._currentTime;\r\n\t}\r\n\r\n\r\n}",
    "import {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\r\nimport {EventDispatcher}\t\t\tfrom \"../events/EventDispatcher\";\r\nimport {TimerEvent}\t\t\t\tfrom \"../events/TimerEvent\";\r\n\r\nexport class Timer extends EventDispatcher\r\n{\r\n\tprivate _delay:number;\r\n\tprivate _repeatCount:number = 0;\r\n\tprivate _currentCount:number = 0;\r\n\tprivate _iid;\r\n\tprivate _running:boolean = false;\r\n\r\n\tconstructor(delay:number, repeatCount:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._delay = delay;\r\n\t\tthis._repeatCount = repeatCount;\r\n\r\n\t\tif (isNaN(delay) || delay < 0)\r\n\t\t\tthrow new ErrorBase(\"Delay is negative or not a number\");\r\n\t}\r\n\r\n\tpublic get currentCount():number\r\n\t{\r\n\t\treturn this._currentCount;\r\n\t}\r\n\r\n\tpublic get delay():number\r\n\t{\r\n\t\treturn this._delay;\r\n\t}\r\n\r\n\tpublic set delay(value:number)\r\n\t{\r\n\t\tthis._delay = value;\r\n\r\n\t\tif (this._running) {\r\n\t\t\tthis.stop();\r\n\t\t\tthis.start();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get repeatCount():number\r\n\t{\r\n\t\treturn this._repeatCount;\r\n\t}\r\n\r\n\tpublic set repeatCount(value:number)\r\n\t{\r\n\t\tthis._repeatCount = value;\r\n\t}\r\n\r\n\tpublic reset():void\r\n\t{\r\n\t\tif (this._running)\r\n\t\t\tthis.stop();\r\n\r\n\t\tthis._currentCount = 0;\r\n\t}\r\n\r\n\tpublic get running():boolean\r\n\t{\r\n\t\treturn this._running;\r\n\t}\r\n\r\n\tpublic start():void\r\n\t{\r\n\t\tthis._running = true;\r\n\t\tclearInterval(this._iid);\r\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\r\n\t}\r\n\r\n\tpublic stop():void\r\n\t{\r\n\t\tthis._running = false;\r\n\t\tclearInterval(this._iid);\r\n\t}\r\n\r\n\tprivate tick():void\r\n\t{\r\n\t\tthis._currentCount++;\r\n\r\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\r\n\r\n\t\t\tthis.stop();\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\r\n\r\n\t\t} else {\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\r\n\t\t}\r\n\t}\r\n}",
    "export class XmlUtils {\r\n\r\n\tpublic static getChildrenWithTag(node:Node, tag:string):NodeList {\r\n\r\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\r\n\r\n\t\tif(node) {\r\n\t\t\tvar num:number = node.childNodes.length;\r\n\t\t\tfor(var i:number = 0; i < num; i++) {\r\n\t\t\t\tvar child:Node = node.childNodes[i];\r\n\t\t\t\tif(child != null) {\r\n\t\t\t\t\tif(child.nodeName == tag) {\r\n\t\t\t\t\t\tfragment.appendChild(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn fragment.childNodes;\r\n\t}\r\n\r\n\tpublic static filterListByParam(nodes:NodeList, paramName:string, paramValue):NodeList {\r\n\r\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\r\n\r\n\t\tif(nodes) {\r\n\t\t\tvar num:number = nodes.length;\r\n\t\t\tfor(var i:number = 0; i < num; i++) {\r\n\t\t\t\tvar child:Node = nodes[i];\r\n\t\t\t\tif(child != null) {\r\n\t\t\t\t\tif(child.attributes.getNamedItem(paramName).value == paramValue) {\r\n\t\t\t\t\t\tfragment.appendChild(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn fragment.childNodes;\r\n\t}\r\n\r\n\tpublic static strToXml(str:string):Node {\r\n\t\tvar parser:DOMParser = new DOMParser();\r\n\t\tvar node:Node = parser.parseFromString(str, \"text/xml\");\r\n\t\treturn node;\r\n\t}\r\n\r\n\tpublic static nodeToString(node:Node):string {\r\n\t\tif(!node) return \"\";\r\n\t\tvar str = (new XMLSerializer()).serializeToString(node);\r\n\t\treturn str;\r\n\t}\r\n\r\n\tpublic static readAttributeValue(node:Node, attrName:string):string {\r\n\t\tvar attrs = node.attributes;\r\n\t\tif(attrs == undefined) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\r\n\t\tif(!attribute) {\r\n\t\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", attribute does not exist.\";\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", value: \" + attribute.value);\r\n\t\treturn attribute.value;\r\n\t}\r\n\r\n\tpublic static writeAttributeValue(node:Node, attrName:string, attrValue:string) {\r\n\t\tvar attribute:Attr = document.createAttribute(attrName);\r\n\t\tattribute.value = attrValue;\r\n\t\tattribute = node.attributes.setNamedItem(attribute);\r\n\t\tconsole.log(\"XmlUltils - writeAttributeValue() - name: \" + attribute.name + \", value: \" + attribute.value);\r\n\t}\r\n\r\n\tpublic static hasAttribute(node:Node, attrName:string):boolean {\r\n\t\tvar attrs = node.attributes;\r\n\t\tif(attrs == undefined) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\r\n\t\treturn attribute != null;\r\n\t}\r\n}\r\nexport default XmlUtils;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "/**\r\n *\r\n *\r\n * @returns {number}\r\n */\r\nexport function getTimer():number\r\n{\r\n\t// number milliseconds of 1970/01/01\r\n\t// this different to AS3 implementation which gets the number of milliseconds\r\n\t// since instance of Flash player was initialised\r\n\treturn Date.now();\r\n}",
    "export {BitmapImageUtils}\t\t\t\tfrom \"./utils/BitmapImageUtils\";\r\nexport {ByteArray}\t\t\t\t\t\tfrom \"./utils/ByteArray\";\r\nexport {ByteArrayBase}\t\t\t\t\tfrom \"./utils/ByteArrayBase\";\r\nexport {ByteArrayBuffer}\t\t\t\tfrom \"./utils/ByteArrayBuffer\";\r\nexport {ColorUtils}\t\t\t\t\t\tfrom \"./utils/ColorUtils\";\r\nexport {CSS}\t\t\t\t\t\t\tfrom \"./utils/CSS\";\r\nexport {Debug}\t\t\t\t\t\t\tfrom \"./utils/Debug\";\r\nexport {Extensions}\t\t\t\t\t\tfrom \"./utils/Extensions\";\r\nexport {getTimer}\t\t\t\t\t\tfrom \"./utils/getTimer\";\r\nexport {IArrayBufferViewClass}\t\t\tfrom \"./utils/IArrayBufferViewClass\";\r\nexport {ImageUtils}\t\t\t\t\t\tfrom \"./utils/ImageUtils\";\r\nexport {MipmapGenerator}\t\t\t\tfrom \"./utils/MipmapGenerator\";\r\nexport {RequestAnimationFrame}\t\t\tfrom \"./utils/RequestAnimationFrame\";\r\nexport {Timer}\t\t\t\t\t\t\tfrom \"./utils/Timer\";\r\nexport {XmlUtils}\t\t\t\t\t\tfrom \"./utils/XmlUtils\";"
  ],
  "sourceRoot": ""
}