{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-core.js",
    "awayjs-core/lib/attributes/AttributesBuffer.ts",
    "awayjs-core/lib/attributes/AttributesView.ts",
    "awayjs-core/lib/attributes/Byte4Attributes.ts",
    "awayjs-core/lib/attributes/Float1Attributes.ts",
    "awayjs-core/lib/attributes/Float2Attributes.ts",
    "awayjs-core/lib/attributes/Float3Attributes.ts",
    "awayjs-core/lib/attributes/Float4Attributes.ts",
    "awayjs-core/lib/attributes/Short2Attributes.ts",
    "awayjs-core/lib/attributes/Short3Attributes.ts",
    "awayjs-core/lib/data/BitmapImage2D.ts",
    "awayjs-core/lib/data/BitmapImageChannel.ts",
    "awayjs-core/lib/data/BitmapImageCube.ts",
    "awayjs-core/lib/data/BlendMode.ts",
    "awayjs-core/lib/data/Image2D.ts",
    "awayjs-core/lib/data/ImageBase.ts",
    "awayjs-core/lib/data/ImageCube.ts",
    "awayjs-core/lib/data/Sampler2D.ts",
    "awayjs-core/lib/data/SamplerBase.ts",
    "awayjs-core/lib/data/SamplerCube.ts",
    "awayjs-core/lib/data/SpecularImage2D.ts",
    "awayjs-core/lib/data/WaveAudio.ts",
    "awayjs-core/lib/errors/AbstractMethodError.ts",
    "awayjs-core/lib/errors/ArgumentError.ts",
    "awayjs-core/lib/errors/DocumentError.ts",
    "awayjs-core/lib/errors/Error.ts",
    "awayjs-core/lib/errors/PartialImplementationError.ts",
    "awayjs-core/lib/errors/RangeError.ts",
    "awayjs-core/lib/events/AssetEvent.ts",
    "awayjs-core/lib/events/EventDispatcher.ts",
    "awayjs-core/lib/events/Event.ts",
    "awayjs-core/lib/events/HTTPStatusEvent.ts",
    "awayjs-core/lib/events/IOErrorEvent.ts",
    "awayjs-core/lib/events/LoaderEvent.ts",
    "awayjs-core/lib/events/ParserEvent.ts",
    "awayjs-core/lib/events/ProgressEvent.ts",
    "awayjs-core/lib/events/ProjectionEvent.ts",
    "awayjs-core/lib/events/TimerEvent.ts",
    "awayjs-core/lib/geom/Box.ts",
    "awayjs-core/lib/geom/ColorTransform.ts",
    "awayjs-core/lib/geom/MathConsts.ts",
    "awayjs-core/lib/geom/Matrix3DUtils.ts",
    "awayjs-core/lib/geom/Matrix3D.ts",
    "awayjs-core/lib/geom/Matrix.ts",
    "awayjs-core/lib/geom/Orientation3D.ts",
    "awayjs-core/lib/geom/PerspectiveProjection.ts",
    "awayjs-core/lib/geom/Plane3D.ts",
    "awayjs-core/lib/geom/PlaneClassification.ts",
    "awayjs-core/lib/geom/Point.ts",
    "awayjs-core/lib/geom/PoissonLookup.ts",
    "awayjs-core/lib/geom/Quaternion.ts",
    "awayjs-core/lib/geom/Rectangle.ts",
    "awayjs-core/lib/geom/Sphere.ts",
    "awayjs-core/lib/geom/UVTransform.ts",
    "awayjs-core/lib/geom/Vector3D.ts",
    "awayjs-core/lib/library/AssetBase.ts",
    "awayjs-core/lib/library/AssetLibraryBundle.ts",
    "awayjs-core/lib/library/AssetLibraryIterator.ts",
    "awayjs-core/lib/library/AssetLibrary.ts",
    "awayjs-core/lib/library/ConflictPrecedence.ts",
    "awayjs-core/lib/library/ConflictStrategyBase.ts",
    "awayjs-core/lib/library/ConflictStrategy.ts",
    "awayjs-core/lib/library/ErrorConflictStrategy.ts",
    "awayjs-core/lib/library/IDUtil.ts",
    "awayjs-core/lib/library/IgnoreConflictStrategy.ts",
    "awayjs-core/lib/library/LoaderContext.ts",
    "awayjs-core/lib/library/LoaderSession.ts",
    "awayjs-core/lib/library/NumSuffixConflictStrategy.ts",
    "awayjs-core/lib/managers/AudioManager.ts",
    "awayjs-core/lib/managers/StreamingAudioChannel.ts",
    "awayjs-core/lib/managers/WebAudioChannel.ts",
    "awayjs-core/lib/net/CrossDomainPolicy.ts",
    "awayjs-core/lib/net/URLLoaderDataFormat.ts",
    "awayjs-core/lib/net/URLLoader.ts",
    "awayjs-core/lib/net/URLRequestMethod.ts",
    "awayjs-core/lib/net/URLRequest.ts",
    "awayjs-core/lib/net/URLVariables.ts",
    "awayjs-core/lib/parsers/Image2DParser.ts",
    "awayjs-core/lib/parsers/ImageCubeParser.ts",
    "awayjs-core/lib/parsers/ParserBase.ts",
    "awayjs-core/lib/parsers/ParserDataFormat.ts",
    "awayjs-core/lib/parsers/ParserUtils.ts",
    "awayjs-core/lib/parsers/ResourceDependency.ts",
    "awayjs-core/lib/parsers/TextureAtlasParser.ts",
    "awayjs-core/lib/parsers/WaveAudioParser.ts",
    "awayjs-core/lib/projections/CoordinateSystem.ts",
    "awayjs-core/lib/projections/FreeMatrixProjection.ts",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection.ts",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection.ts",
    "awayjs-core/lib/projections/OrthographicProjection.ts",
    "awayjs-core/lib/projections/PerspectiveProjection.ts",
    "awayjs-core/lib/projections/ProjectionBase.ts",
    "awayjs-core/lib/ui/Keyboard.ts",
    "awayjs-core/lib/utils/BitmapImageUtils.ts",
    "awayjs-core/lib/utils/ByteArrayBase.ts",
    "awayjs-core/lib/utils/ByteArrayBuffer.ts",
    "awayjs-core/lib/utils/ByteArray.ts",
    "awayjs-core/lib/utils/CSS.ts",
    "awayjs-core/lib/utils/ColorUtils.ts",
    "awayjs-core/lib/utils/Debug.ts",
    "awayjs-core/lib/utils/ImageUtils.ts",
    "awayjs-core/lib/utils/MipmapGenerator.ts",
    "awayjs-core/lib/utils/RequestAnimationFrame.ts",
    "awayjs-core/lib/utils/Timer.ts",
    "awayjs-core/lib/utils/XmlUtils.ts",
    "awayjs-core/lib/utils/getTimer.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AttributesBuffer",
    "_super",
    "stride",
    "count",
    "_attributesBufferVO",
    "Array",
    "_count",
    "_stride",
    "_newStride",
    "_viewVOs",
    "_buffer",
    "ArrayBuffer",
    "_bufferView",
    "Uint8Array",
    "byteLength",
    "Object",
    "defineProperty",
    "get",
    "assetType",
    "enumerable",
    "configurable",
    "_lengthDirty",
    "_updateLength",
    "set",
    "value",
    "invalidateLength",
    "_contentDirty",
    "buffer",
    "invalidateContent",
    "len",
    "invalidate",
    "dispose",
    "clone",
    "attributesBuffer",
    "bufferView",
    "view",
    "_internalClone",
    "getView",
    "index",
    "_setAttributes",
    "viewIndex",
    "arrayBufferView",
    "offset",
    "array",
    "viewVO",
    "vLength",
    "vOffset",
    "vCount",
    "subarray",
    "_getLocalArrayBuffer",
    "localBuffer",
    "localBufferView",
    "_iAddAttributesBufferVO",
    "AttributesBufferVO",
    "push",
    "_iRemoveAttributesBufferVO",
    "splice",
    "indexOf",
    "_addView",
    "ViewVO",
    "_index",
    "_removeView",
    "_getOffset",
    "j",
    "newLength",
    "newBuffer",
    "newView",
    "vOldOffset",
    "oldOffset",
    "Math",
    "min",
    "size",
    "dimensions",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-core/lib/attributes/AttributesView",
    "AttributesView",
    "arrayClass",
    "attributesBufferCount",
    "_arrayClass",
    "_size",
    "BYTES_PER_ELEMENT",
    "_dimensions",
    "_attributesBuffer",
    "values",
    "_localArrayBuffer",
    "_cloneCache",
    "cloneCache",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "Byte4Attributes",
    "attributesBufferLength",
    "unsigned",
    "Int8Array",
    "awayjs-core/lib/attributes/Float1Attributes",
    "Float1Attributes",
    "Float32Array",
    "awayjs-core/lib/attributes/Float2Attributes",
    "Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "Float3Attributes",
    "awayjs-core/lib/attributes/Float4Attributes",
    "Float4Attributes",
    "awayjs-core/lib/attributes/Short2Attributes",
    "Short2Attributes",
    "Uint16Array",
    "Int16Array",
    "awayjs-core/lib/attributes/Short3Attributes",
    "Short3Attributes",
    "awayjs-core/lib/data/BitmapImage2D",
    "Image2D",
    "ColorUtils",
    "BitmapImageUtils",
    "BitmapImage2D",
    "width",
    "height",
    "transparent",
    "fillColor",
    "powerOfTwo",
    "_locked",
    "_transparent",
    "_imageCanvas",
    "document",
    "createElement",
    "_context",
    "getContext",
    "fillRect",
    "_rect",
    "draw",
    "colorTransform",
    "rect",
    "_imageData",
    "getImageData",
    "data",
    "x",
    "y",
    "redMultiplier",
    "redOffset",
    "greenMultiplier",
    "greenOffset",
    "blueMultiplier",
    "blueOffset",
    "alphaMultiplier",
    "alphaOffset",
    "putImageData",
    "copyChannel",
    "sourceBitmap",
    "sourceRect",
    "destPoint",
    "sourceChannel",
    "destChannel",
    "imageData",
    "sourceData",
    "destData",
    "sourceOffset",
    "round",
    "log",
    "destOffset",
    "sourceIndex",
    "destIndex",
    "copyPixels",
    "source",
    "destRect",
    "getCanvas",
    "_copyPixels",
    "matrix",
    "blendMode",
    "clipRect",
    "smoothing",
    "_draw",
    "color",
    "_fillRect",
    "getPixel",
    "g",
    "pixelData",
    "getPixel32",
    "lock",
    "setArray",
    "inputArray",
    "argb",
    "float32ColorToARGB",
    "setPixel",
    "setPixel32",
    "setPixels",
    "inputByteArray",
    "position",
    "readUnsignedInt",
    "unlock",
    "_setSize",
    "awayjs-core/lib/data/Image2D",
    "awayjs-core/lib/utils/BitmapImageUtils",
    "awayjs-core/lib/utils/ColorUtils",
    "awayjs-core/lib/data/BitmapImageChannel",
    "BitmapImageChannel",
    "ALPHA",
    "BLUE",
    "GREEN",
    "RED",
    "awayjs-core/lib/data/BitmapImageCube",
    "ImageCube",
    "Rectangle",
    "BitmapImageCube",
    "side",
    "posX",
    "negX",
    "posY",
    "negY",
    "posZ",
    "negZ",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/data/BlendMode",
    "BlendMode",
    "ADD",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "NORMAL",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "SUBTRACT",
    "ImageBase",
    "ImageUtils",
    "_powerOfTwo",
    "_testDimensions",
    "invalidateSize",
    "isDimensionValid",
    "awayjs-core/lib/data/ImageBase",
    "awayjs-core/lib/utils/ImageUtils",
    "_imageObject",
    "_iAddImageObject",
    "ImageObject",
    "_iRemoveImageObject",
    "awayjs-core/lib/data/Sampler2D",
    "SamplerBase",
    "Sampler2D",
    "image2D",
    "repeat",
    "smooth",
    "mipmap",
    "_offsetX",
    "_offsetY",
    "_scaleX",
    "_scaleY",
    "_updateRect",
    "_repeat",
    "_imageRect",
    "_frameRect",
    "awayjs-core/lib/data/SamplerBase",
    "_pFormat",
    "_smooth",
    "_mipmap",
    "awayjs-core/lib/data/SamplerCube",
    "SamplerCube",
    "imageCube",
    "awayjs-core/lib/data/SpecularImage2D",
    "Point",
    "SpecularImage2D",
    "specularSource",
    "glossSource",
    "_specularSource",
    "_glossSource",
    "_output",
    "_testSize",
    "origin",
    "w",
    "h",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/data/WaveAudio",
    "AudioManager",
    "WaveAudio",
    "_volume",
    "_audioChannel",
    "volume",
    "currentTime",
    "duration",
    "stop",
    "play",
    "loop",
    "getChannel",
    "newInstance",
    "name",
    "awayjs-core/lib/managers/AudioManager",
    "awayjs-core/lib/errors/AbstractMethodError",
    "AbstractMethodError",
    "message",
    "id",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/ArgumentError",
    "ArgumentError",
    "awayjs-core/lib/errors/DocumentError",
    "DocumentError",
    "DOCUMENT_DOES_NOT_EXIST",
    "_name",
    "_errorID",
    "_messsage",
    "awayjs-core/lib/errors/PartialImplementationError",
    "PartialImplementationError",
    "dependency",
    "awayjs-core/lib/errors/RangeError",
    "RangeError",
    "awayjs-core/lib/events/AssetEvent",
    "Event",
    "AssetEvent",
    "type",
    "asset",
    "prevName",
    "_asset",
    "_prevName",
    "assetPrevName",
    "ASSET_COMPLETE",
    "ASSET_RENAME",
    "ASSET_CONFLICT_RESOLVED",
    "TEXTURE_SIZE_ERROR",
    "awayjs-core/lib/events/Event",
    "awayjs-core/lib/events/EventDispatcher",
    "EventDispatcher",
    "target",
    "listeners",
    "addEventListener",
    "listener",
    "undefined",
    "getEventListenerIndex",
    "removeEventListener",
    "dispatchEvent",
    "event",
    "listenerArray",
    "hasEventListener",
    "COMPLETE",
    "OPEN",
    "ENTER_FRAME",
    "EXIT_FRAME",
    "RESIZE",
    "ERROR",
    "CHANGE",
    "awayjs-core/lib/events/HTTPStatusEvent",
    "HTTPStatusEvent",
    "status",
    "HTTP_STATUS",
    "awayjs-core/lib/events/IEventDispatcher",
    "awayjs-core/lib/events/IOErrorEvent",
    "IOErrorEvent",
    "IO_ERROR",
    "awayjs-core/lib/events/LoaderEvent",
    "LoaderEvent",
    "url",
    "content",
    "assets",
    "_url",
    "_content",
    "_assets",
    "RESOURCE_COMPLETE",
    "awayjs-core/lib/events/ParserEvent",
    "ParserEvent",
    "_message",
    "PARSE_COMPLETE",
    "PARSE_ERROR",
    "READY_FOR_DEPENDENCIES",
    "awayjs-core/lib/events/ProgressEvent",
    "ProgressEvent",
    "PROGRESS",
    "awayjs-core/lib/events/ProjectionEvent",
    "ProjectionEvent",
    "projection",
    "_projection",
    "MATRIX_CHANGED",
    "awayjs-core/lib/events/TimerEvent",
    "TimerEvent",
    "TIMER",
    "TIMER_COMPLETE",
    "awayjs-core/lib/geom/Box",
    "Vector3D",
    "Box",
    "z",
    "depth",
    "val",
    "_bottomRightBack",
    "_topLeftFront",
    "contains",
    "containsPoint",
    "containsBox",
    "box",
    "copyFrom",
    "sourceBox",
    "equals",
    "toCompare",
    "inflate",
    "dx",
    "dy",
    "dz",
    "inflatePoint",
    "delta",
    "intersection",
    "toIntersect",
    "intersects",
    "rayIntersection",
    "direction",
    "targetNormal",
    "halfExtentsX",
    "halfExtentsY",
    "halfExtentsZ",
    "centerX",
    "centerY",
    "centerZ",
    "px",
    "py",
    "pz",
    "vx",
    "vy",
    "vz",
    "ix",
    "iy",
    "iz",
    "rayEntryDistance",
    "closestPointToPoint",
    "point",
    "isEmpty",
    "offsetPosition",
    "setEmpty",
    "setTo",
    "xa",
    "ya",
    "za",
    "widtha",
    "heighta",
    "deptha",
    "toString",
    "union",
    "toUnion",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/geom/ColorTransform",
    "ColorTransform",
    "clear",
    "copyTo",
    "destination",
    "prepend",
    "ct",
    "awayjs-core/lib/geom/MathConsts",
    "MathConsts",
    "RADIANS_TO_DEGREES",
    "PI",
    "DEGREES_TO_RADIANS",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "Matrix3D",
    "Matrix3DUtils",
    "quaternion2matrix",
    "quarternion",
    "m",
    "xx",
    "xy",
    "xz",
    "xw",
    "yy",
    "yz",
    "yw",
    "zz",
    "zw",
    "raw",
    "RAW_DATA_CONTAINER",
    "copyRawDataFrom",
    "getForward",
    "v",
    "copyColumnTo",
    "normalize",
    "getUp",
    "getRight",
    "compare",
    "m1",
    "m2",
    "r1",
    "r2",
    "rawData",
    "copyRawDataTo",
    "lookAt",
    "pos",
    "dir",
    "up",
    "dirN",
    "upN",
    "lftN",
    "crossProduct",
    "dotProduct",
    "reflection",
    "plane",
    "c",
    "ab2",
    "ac2",
    "bc2",
    "transformVector",
    "vector",
    "result",
    "k",
    "deltaTransformVector",
    "getTranslation",
    "transform",
    "deltaTransformVectors",
    "vin",
    "vout",
    "outIndex",
    "CALCULATION_MATRIX",
    "awayjs-core/lib/geom/Matrix3D",
    "Orientation3D",
    "identity",
    "append",
    "lhs",
    "lrd",
    "m111",
    "m112",
    "m113",
    "m114",
    "m121",
    "m122",
    "m123",
    "m124",
    "m131",
    "m132",
    "m133",
    "m134",
    "m141",
    "m142",
    "m143",
    "m144",
    "m211",
    "m212",
    "m213",
    "m214",
    "m221",
    "m222",
    "m223",
    "m224",
    "m231",
    "m232",
    "m233",
    "m234",
    "m241",
    "m242",
    "m243",
    "m244",
    "appendRotation",
    "degrees",
    "axis",
    "getAxisRotation",
    "appendSkew",
    "xSkew",
    "ySkew",
    "zSkew",
    "tempRawData",
    "tempMatrix",
    "appendScale",
    "xScale",
    "yScale",
    "zScale",
    "appendTranslation",
    "copyColumnFrom",
    "column",
    "vector3D",
    "sourceMatrix3D",
    "sourceRaw",
    "transpose",
    "copyRowFrom",
    "row",
    "copyRowTo",
    "copyToMatrix3D",
    "dest",
    "decompose",
    "orientationStyle",
    "q",
    "_components",
    "colX",
    "colY",
    "colZ",
    "scale",
    "skew",
    "scaleBy",
    "combine",
    "rot",
    "AXIS_ANGLE",
    "acos",
    "sqrt",
    "QUATERNION",
    "tr",
    "EULER_ANGLES",
    "asin",
    "atan2",
    "interpolate",
    "thisMat",
    "toMat",
    "percent",
    "interpolateTo",
    "invert",
    "determinant",
    "invertable",
    "abs",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "m41",
    "m42",
    "m43",
    "m44",
    "rhs",
    "prependRotation",
    "prependScale",
    "prependTranslation",
    "recompose",
    "components",
    "angle",
    "rotation",
    "sin",
    "cos",
    "transformBox",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "transformVectors",
    "rad",
    "tmp1",
    "tmp2",
    "_position",
    "toFixed",
    "decimalPlace",
    "magnitude",
    "pow",
    "awayjs-core/lib/geom/Orientation3D",
    "awayjs-core/lib/geom/Matrix",
    "Matrix",
    "tx",
    "ty",
    "concat",
    "a1",
    "c1",
    "tx1",
    "sourceMatrix",
    "createBox",
    "scaleX",
    "scaleY",
    "createGradientBox",
    "deltaTransformPoint",
    "norm",
    "multiply",
    "rotate",
    "sx",
    "sy",
    "transformPoint",
    "translate",
    "awayjs-core/lib/geom/PerspectiveProjection",
    "PerspectiveProjection",
    "toMatrix3D",
    "_matrix3D",
    "awayjs-core/lib/geom/Plane3D",
    "PlaneClassification",
    "Plane3D",
    "_iAlignment",
    "ALIGN_XY_AXIS",
    "ALIGN_YZ_AXIS",
    "ALIGN_XZ_AXIS",
    "ALIGN_ANY",
    "fromPoints",
    "p0",
    "p1",
    "p2",
    "d1x",
    "d1y",
    "d1z",
    "d2x",
    "d2y",
    "d2z",
    "fromNormalAndPoint",
    "normal",
    "distance",
    "classifyPoint",
    "epsilon",
    "FRONT",
    "BACK",
    "INTERSECT",
    "awayjs-core/lib/geom/PlaneClassification",
    "IN",
    "OUT",
    "add",
    "sourcePoint",
    "thickness",
    "invLength",
    "subtract",
    "pt1",
    "pt2",
    "polar",
    "awayjs-core/lib/geom/PoissonLookup",
    "PoissonLookup",
    "initDistributions",
    "_distributions",
    "getDistribution",
    "awayjs-core/lib/geom/Quaternion",
    "Quaternion",
    "qa",
    "qb",
    "w1",
    "x1",
    "y1",
    "z1",
    "w2",
    "x2",
    "y2",
    "z2",
    "multiplyVector",
    "fromAxisAngle",
    "sin_a",
    "cos_a",
    "slerp",
    "dot",
    "s1",
    "s2",
    "lerp",
    "fromEulerAngles",
    "ax",
    "ay",
    "az",
    "halfX",
    "halfY",
    "halfZ",
    "cosX",
    "sinX",
    "cosY",
    "sinY",
    "cosZ",
    "sinZ",
    "toEulerAngles",
    "mag",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "ww",
    "fromMatrix",
    "toRawData",
    "exclude4thRow",
    "rotatePoint",
    "_bottomRight",
    "_topLeft",
    "containsRect",
    "offsetPoint",
    "awayjs-core/lib/geom/Sphere",
    "Sphere",
    "radius",
    "det",
    "sqrtDet",
    "awayjs-core/lib/geom/UVTransform",
    "UVTransform",
    "_uvMatrix",
    "_rotation",
    "_scaleU",
    "_scaleV",
    "_offsetU",
    "_offsetV",
    "_uvMatrixDirty",
    "updateUVMatrix",
    "lengthSquared",
    "angleBetween",
    "ascl",
    "bscl",
    "src",
    "decrementBy",
    "allFour",
    "incrementBy",
    "nearEquals",
    "tolerance",
    "negate",
    "project",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "_id",
    "ID_COUNT",
    "_originalName",
    "updateFullPath",
    "prev",
    "_namespace",
    "_full_path",
    "assetPathEquals",
    "ns",
    "isAsset",
    "assetClass",
    "resetAssetPath",
    "overrideOriginal",
    "DEFAULT_NAMESPACE",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "AssetLibraryIterator",
    "LoaderSession",
    "ConflictPrecedence",
    "ConflictStrategy",
    "AssetLibraryBundle",
    "_this",
    "_loaderSessionsGarbage",
    "_assetDictionary",
    "_loaderSessions",
    "conflictStrategy",
    "IGNORE",
    "create",
    "conflictPrecedence",
    "FAVOR_NEW",
    "_onAssetRenameDelegate",
    "onAssetRename",
    "_onAssetConflictResolvedDelegate",
    "onAssetConflictResolved",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "getInstance",
    "key",
    "_iInstances",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "_strategy",
    "_strategyPreference",
    "createIterator",
    "assetTypeFilter",
    "namespaceFilter",
    "filterFunc",
    "load",
    "req",
    "context",
    "parser",
    "getLoaderSession",
    "loadData",
    "loader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "disposeLoaderSession",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "getAsset",
    "_assetDictDirty",
    "rehashAssetDict",
    "getAllAssets",
    "addAsset",
    "old",
    "assetNamespace",
    "resolveConflict",
    "removeAsset",
    "idx",
    "removeAssetFromDict",
    "removeAssetByName",
    "removeAllAssets",
    "removeNamespaceAssets",
    "old_assets",
    "autoRemoveEmptyNamespace",
    "empty",
    "stopAllLoaderSessions",
    "killloaderSession",
    "pop",
    "clearTimeout",
    "dict",
    "awayjs-core/lib/library/AssetLibraryIterator",
    "awayjs-core/lib/library/ConflictPrecedence",
    "awayjs-core/lib/library/ConflictStrategy",
    "awayjs-core/lib/library/LoaderSession",
    "filter",
    "_idx",
    "_filtered",
    "next",
    "reset",
    "setIndex",
    "awayjs-core/lib/library/AssetLibrary",
    "AssetLibrary",
    "getBundle",
    "stopLoad",
    "FAVOR_OLD",
    "awayjs-core/lib/library/ConflictStrategyBase",
    "ConflictStrategyBase",
    "changedAsset",
    "oldAsset",
    "assetsDictionary",
    "precedence",
    "_pUpdateNames",
    "nonConflictingName",
    "newAsset",
    "loser_prev_name",
    "winner",
    "loser",
    "ErrorConflictStrategy",
    "IgnoreConflictStrategy",
    "NumSuffixConflictStrategy",
    "include",
    "APPEND_NUM_SUFFIX",
    "THROW_ERROR",
    "awayjs-core/lib/library/ErrorConflictStrategy",
    "awayjs-core/lib/library/IgnoreConflictStrategy",
    "awayjs-core/lib/library/NumSuffixConflictStrategy",
    "assetFullPath",
    "awayjs-core/lib/library/IAssetClass",
    "awayjs-core/lib/library/IAsset",
    "awayjs-core/lib/library/IDUtil",
    "IDUtil",
    "createUID",
    "uid",
    "ALPHA_CHAR_CODES",
    "floor",
    "random",
    "time",
    "Date",
    "getTime",
    "timeString",
    "toUpperCase",
    "substr",
    "charCodeAt",
    "String",
    "fromCharCode",
    "apply",
    "awayjs-core/lib/library/IWrapperClass",
    "awayjs-core/lib/library/LoaderContext",
    "LoaderContext",
    "includeDependencies",
    "dependencyBaseUrl",
    "_includeDependencies",
    "_dependencyBaseUrl",
    "_embeddedDataByUrl",
    "_remappedUrls",
    "_materialMode",
    "UNDEFINED",
    "materialMode",
    "_overrideAbsPath",
    "_overrideFullUrls",
    "mapUrl",
    "originalUrl",
    "newUrl",
    "mapUrlToData",
    "_iHasDataForUrl",
    "_iGetDataForUrl",
    "_iHasMappingForUrl",
    "_iGetRemappedUrl",
    "SINGLEPASS_MATERIALS",
    "MULTIPASS_MATERIALS",
    "URLLoader",
    "URLLoaderDataFormat",
    "Image2DParser",
    "ImageCubeParser",
    "TextureAtlasParser",
    "ResourceDependency",
    "WaveAudioParser",
    "_stack",
    "_errorHandlers",
    "_parseErrorHandlers",
    "_onReadyForDependenciesDelegate",
    "onReadyForDependencies",
    "_onParseCompleteDelegate",
    "onParseComplete",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_parsers",
    "parsers",
    "_baseDependency",
    "_uri",
    "replace",
    "retrieveDependency",
    "retrieveNext",
    "_currentDependency",
    "dependencies",
    "parsingPaused",
    "_iResumeParsing",
    "_iSuccess",
    "resolve",
    "_iLoader",
    "addEventListeners",
    "request",
    "Function",
    "_iSetData",
    "retrieveAsRawData",
    "parseDependency",
    "resolveDependencyUrl",
    "dataFormat",
    "BINARY",
    "_iSetParser",
    "getParserFromSuffix",
    "joinUrl",
    "base",
    "end",
    "charAt",
    "scheme_re",
    "RegExp",
    "overrideAbsolutePaths",
    "test",
    "overrideFullURLs",
    "noscheme_url",
    "substring",
    "lastIndexOf",
    "retrieveParserDependencies",
    "parserDependancies",
    "resolveParserDependencies",
    "handled",
    "isDependency",
    "removeEventListeners",
    "resolveFailure",
    "suppresAssetEvents",
    "resolveName",
    "handler",
    "getParserFromData",
    "supportsData",
    "_iFileName",
    "parseAsync",
    "split",
    "fileExtension",
    "toLowerCase",
    "supportsType",
    "awayjs-core/lib/net/URLLoader",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/parsers/Image2DParser",
    "awayjs-core/lib/parsers/ImageCubeParser",
    "awayjs-core/lib/parsers/ResourceDependency",
    "awayjs-core/lib/parsers/TextureAtlasParser",
    "awayjs-core/lib/parsers/WaveAudioParser",
    "separator",
    "_separator",
    "_next_suffix",
    "orig",
    "new_name",
    "suffix",
    "parseInt",
    "isNaN",
    "StreamingAudioChannel",
    "WebAudioChannel",
    "channelClass",
    "_channels",
    "isPlaying",
    "maxChannels",
    "isLooping",
    "channel",
    "awayjs-core/lib/managers/StreamingAudioChannel",
    "awayjs-core/lib/managers/WebAudioChannel",
    "awayjs-core/lib/managers/IAudioChannelClass",
    "awayjs-core/lib/managers/IAudioChannel",
    "_isPlaying",
    "_isLooping",
    "_startTime",
    "_sourceOpenDelegate",
    "_sourceOpen",
    "_updateEndDelegate",
    "_updateEnd",
    "_audio",
    "Audio",
    "ontimeupdate",
    "_onTimeUpdate",
    "_updateSource",
    "_duration",
    "_sourceDirty",
    "_offset",
    "_isQueuing",
    "_isOpening",
    "_queueBuffer",
    "pause",
    "_sourceBuffer",
    "_mediaSource",
    "addSourceBuffer",
    "timestampOffset",
    "appendBuffer",
    "endOfStream",
    "_disposeSource",
    "MediaSource",
    "_urlString",
    "URL",
    "createObjectURL",
    "remove",
    "removeSourceBuffer",
    "revokeObjectURL",
    "_isDecoded",
    "_audioCtx",
    "window",
    "_gainNode",
    "createGain",
    "gain",
    "connect",
    "_onEndedDelegate",
    "_onEnded",
    "_currentTime",
    "decodeAudioData",
    "_onDecodeComplete",
    "_onError",
    "_source",
    "createBufferSource",
    "start",
    "disconnect",
    "awayjs-core/lib/net/CrossDomainPolicy",
    "CrossDomainPolicy",
    "ANONYMOUS",
    "USE_CREDENTIALS",
    "TEXT",
    "VARIABLES",
    "BLOB",
    "ARRAY_BUFFER",
    "URLRequestMethod",
    "URLVariables",
    "AwayEvent",
    "AwayProgressEvent",
    "_bytesLoaded",
    "_bytesTotal",
    "_dataFormat",
    "_loadError",
    "_request",
    "_data",
    "format",
    "initXHR",
    "method",
    "POST",
    "postRequest",
    "getRequest",
    "close",
    "_XHR",
    "abort",
    "disposeXHR",
    "setResponseType",
    "xhr",
    "responseType",
    "open",
    "async",
    "send",
    "handleXmlHttpRequestException",
    "urlVars",
    "formData",
    "error",
    "XMLHttpRequest",
    "onloadstart",
    "onLoadStart",
    "onprogress",
    "onProgress",
    "onabort",
    "onAbort",
    "onerror",
    "onload",
    "ontimeout",
    "onTimeOut",
    "onloadend",
    "onLoadEnd",
    "onreadystatechange",
    "onReadyStateChange",
    "decodeURLVariables",
    "join",
    "tokens",
    "re",
    "exec",
    "decodeURIComponent",
    "readyState",
    "_loadErrorEvent",
    "_progressEvent",
    "bytesTotal",
    "total",
    "bytesLoaded",
    "loaded",
    "_loadStartEvent",
    "responseText",
    "response",
    "_loadCompleteEvent",
    "awayjs-core/lib/net/URLRequestMethod",
    "awayjs-core/lib/net/URLVariables",
    "GET",
    "awayjs-core/lib/net/URLRequest",
    "URLRequest",
    "_variables",
    "decode",
    "obj",
    "fd",
    "FormData",
    "ParserBase",
    "ParserUtils",
    "ByteArray",
    "extension",
    "HTMLImageElement",
    "ba",
    "readUnsignedShort",
    "readShort",
    "readUTFBytes",
    "readByte",
    "_pProceedParsing",
    "sizeError",
    "_loadingImage",
    "MORE_TO_PARSE",
    "_htmlImageElement",
    "isHTMLImageElementValid",
    "imageToBitmapImage2D",
    "_pFinalizeAsset",
    "htmlImageElement",
    "byteArrayToImage",
    "arrayBufferToImage",
    "Blob",
    "blobToImage",
    "_pContent",
    "PARSING_DONE",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-core/lib/utils/ByteArray",
    "JSON",
    "parse",
    "_iResolveDependency",
    "resourceDependency",
    "_iResolveDependencyFailure",
    "_imgDependencyDictionary",
    "_getBitmapImage2D",
    "json",
    "rec",
    "_pDieWithError",
    "_pAddDependency",
    "image",
    "_validateCubeData",
    "_pPauseAndRetrieveDependencies",
    "Timer",
    "getTimer",
    "_dependencies",
    "_pOnIntervalDelegate",
    "_pOnInterval",
    "isBitmapImage2DValid",
    "bitmapImage2D",
    "isValid",
    "isImage2DValid",
    "console",
    "_parsingFailure",
    "_parsingPaused",
    "_parsingComplete",
    "newMaterialMode",
    "frameLimit",
    "_pStartParsing",
    "_iResolveDependencyName",
    "_timer",
    "_isParsing",
    "type_event",
    "type_name",
    "suppressErrorEvents",
    "sub_id",
    "_pPauseParsing",
    "_pHasTime",
    "_lastFrameTime",
    "_frameLimit",
    "_pFinishParsing",
    "_pGetTextData",
    "_pGetByteData",
    "toByteArray",
    "awayjs-core/lib/utils/Timer",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-core/lib/parsers/ParserDataFormat",
    "ParserDataFormat",
    "PLAIN_TEXT",
    "IMAGE",
    "arrayBufferToBase64",
    "mimeType",
    "byteStr",
    "bytes",
    "base64Image",
    "btoa",
    "arrayBufferToAudio",
    "fileType",
    "str",
    "audio",
    "img",
    "Image",
    "arraybytes",
    "byteArrayToAudio",
    "filetype",
    "URLObj",
    "blobToAudio",
    "bitmapData",
    "setArrayBuffer",
    "getBytesAvailable",
    "parentParser",
    "suppressAssetEvents",
    "_sub_id",
    "_parser",
    "_parentParser",
    "_retrieveAsRawData",
    "_suppressAssetEvents",
    "XmlUtils",
    "_parseState",
    "TextureAtlasParserState",
    "PARSE_SUBTEXTURES",
    "nodes",
    "PARSE_XML",
    "_doc",
    "getChildrenWithTag",
    "strToXml",
    "_imagePath",
    "readAttributeValue",
    "_subTextureNodes",
    "PARSE_IMAGE",
    "bitmap",
    "element",
    "imageRect",
    "frameRect",
    "awayjs-core/lib/utils/XmlUtils",
    "parseFileType",
    "awayjs-core/lib/pool/IImageObject",
    "awayjs-core/lib/projections/CoordinateSystem",
    "CoordinateSystem",
    "LEFT_HANDED",
    "RIGHT_HANDED",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ProjectionBase",
    "FreeMatrixProjection",
    "_pMatrix",
    "_pNear",
    "_pFar",
    "_pAspectRatio",
    "pInvalidateMatrix",
    "pUpdateMatrix",
    "_pMatrixInvalid",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-core/lib/projections/ProjectionBase",
    "awayjs-core/lib/projections/IProjection",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection",
    "ObliqueNearPlaneProjection",
    "baseProjection",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_baseProjection",
    "frustumCorners",
    "near",
    "far",
    "_iAspectRatio",
    "_plane",
    "cx",
    "cy",
    "cz",
    "cw",
    "signX",
    "signY",
    "inverse",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "OrthographicOffCenterProjection",
    "_minX",
    "_maxX",
    "_minY",
    "_maxY",
    "unproject",
    "nX",
    "nY",
    "sZ",
    "unprojectionMatrix",
    "_pFrustumCorners",
    "awayjs-core/lib/projections/OrthographicProjection",
    "OrthographicProjection",
    "projectionHeight",
    "_projectionHeight",
    "_yMax",
    "_xMax",
    "left",
    "right",
    "top",
    "bottom",
    "_pScissorRect",
    "_pViewPort",
    "xWidth",
    "yHgt",
    "center",
    "middle",
    "fieldOfView",
    "coordinateSystem",
    "_fieldOfView",
    "_focalLength",
    "_hFieldOfView",
    "_hFocalLength",
    "_preserveAspectRatio",
    "_preserveFocalLength",
    "tan",
    "_pCoordinateSystem",
    "atan",
    "tanMinX",
    "_pOriginX",
    "tanMaxX",
    "tanMinY",
    "_pOriginY",
    "tanMaxY",
    "_unprojectionInvalid",
    "point3d",
    "_unprojection",
    "_iUpdateScissorRect",
    "_iUpdateViewport",
    "awayjs-core/lib/ui/Keyboard",
    "Keyboard",
    "A",
    "ALTERNATE",
    "AUDIO",
    "B",
    "BACKQUOTE",
    "BACKSLASH",
    "BACKSPACE",
    "C",
    "CAPS_LOCK",
    "CHANNEL_DOWN",
    "CHANNEL_UP",
    "COMMA",
    "COMMAND",
    "CONTROL",
    "D",
    "DELETE",
    "DOWN",
    "DVR",
    "E",
    "END",
    "ENTER",
    "EQUAL",
    "ESCAPE",
    "EXIT",
    "F",
    "F1",
    "F10",
    "F11",
    "F12",
    "F13",
    "F14",
    "F15",
    "F2",
    "F3",
    "F4",
    "F5",
    "F6",
    "F7",
    "F8",
    "F9",
    "FAST_FORWARD",
    "G",
    "GUIDE",
    "H",
    "HELP",
    "HOME",
    "I",
    "INFO",
    "INPUT",
    "INSERT",
    "J",
    "K",
    "KEYNAME_BEGIN",
    "KEYNAME_BREAK",
    "KEYNAME_CLEARDISPLAY",
    "KEYNAME_CLEARLINE",
    "KEYNAME_DELETE",
    "KEYNAME_DELETECHAR",
    "KEYNAME_DELETELINE",
    "KEYNAME_DOWNARROW",
    "KEYNAME_END",
    "KEYNAME_EXECUTE",
    "KEYNAME_F1",
    "KEYNAME_F10",
    "KEYNAME_F11",
    "KEYNAME_F12",
    "KEYNAME_F13",
    "KEYNAME_F14",
    "KEYNAME_F15",
    "KEYNAME_F16",
    "KEYNAME_F17",
    "KEYNAME_F18",
    "KEYNAME_F19",
    "KEYNAME_F2",
    "KEYNAME_F20",
    "KEYNAME_F21",
    "KEYNAME_F22",
    "KEYNAME_F23",
    "KEYNAME_F24",
    "KEYNAME_F25",
    "KEYNAME_F26",
    "KEYNAME_F27",
    "KEYNAME_F28",
    "KEYNAME_F29",
    "KEYNAME_F3",
    "KEYNAME_F30",
    "KEYNAME_F31",
    "KEYNAME_F32",
    "KEYNAME_F33",
    "KEYNAME_F34",
    "KEYNAME_F35",
    "KEYNAME_F4",
    "KEYNAME_F5",
    "KEYNAME_F6",
    "KEYNAME_F7",
    "KEYNAME_F8",
    "KEYNAME_F9",
    "KEYNAME_FIND",
    "KEYNAME_HELP",
    "KEYNAME_HOME",
    "KEYNAME_INSERT",
    "KEYNAME_INSERTCHAR",
    "KEYNAME_INSERTLINE",
    "KEYNAME_LEFTARROW",
    "KEYNAME_MENU",
    "KEYNAME_MODESWITCH",
    "KEYNAME_NEXT",
    "KEYNAME_PAGEDOWN",
    "KEYNAME_PAGEUP",
    "KEYNAME_PAUSE",
    "KEYNAME_PREV",
    "KEYNAME_PRINT",
    "KEYNAME_PRINTSCREEN",
    "KEYNAME_REDO",
    "KEYNAME_RESET",
    "KEYNAME_RIGHTARROW",
    "KEYNAME_SCROLLLOCK",
    "KEYNAME_SELECT",
    "KEYNAME_STOP",
    "KEYNAME_SYSREQ",
    "KEYNAME_SYSTEM",
    "KEYNAME_UNDO",
    "KEYNAME_UPARROW",
    "KEYNAME_USER",
    "L",
    "LAST",
    "LEFT",
    "LEFTBRACKET",
    "LIVE",
    "M",
    "MASTER_SHELL",
    "MENU",
    "MINUS",
    "N",
    "NEXT",
    "NUMBER_0",
    "NUMBER_1",
    "NUMBER_2",
    "NUMBER_3",
    "NUMBER_4",
    "NUMBER_5",
    "NUMBER_6",
    "NUMBER_7",
    "NUMBER_8",
    "NUMBER_9",
    "NUMPAD",
    "NUMPAD_0",
    "NUMPAD_1",
    "NUMPAD_2",
    "NUMPAD_3",
    "NUMPAD_4",
    "NUMPAD_5",
    "NUMPAD_6",
    "NUMPAD_7",
    "NUMPAD_8",
    "NUMPAD_9",
    "NUMPAD_ADD",
    "NUMPAD_DECIMAL",
    "NUMPAD_DIVIDE",
    "NUMPAD_ENTER",
    "NUMPAD_MULTIPLY",
    "NUMPAD_SUBTRACT",
    "O",
    "P",
    "PAGE_DOWN",
    "PAGE_UP",
    "PAUSE",
    "PERIOD",
    "PLAY",
    "PREVIOUS",
    "Q",
    "QUOTE",
    "R",
    "RECORD",
    "REWIND",
    "RIGHT",
    "RIGHTBRACKET",
    "S",
    "SEARCH",
    "SEMICOLON",
    "SETUP",
    "SHIFT",
    "SKIP_BACKWARD",
    "SKIP_FORWARD",
    "SLASH",
    "SPACE",
    "STOP",
    "SUBTITLE",
    "T",
    "TAB",
    "U",
    "UP",
    "V",
    "VOD",
    "W",
    "X",
    "Y",
    "YELLOW",
    "Z",
    "clearRect",
    "fillStyle",
    "bmpd",
    "drawImage",
    "save",
    "setTransform",
    "restore",
    "awayjs-core/lib/utils/ByteArrayBase",
    "ByteArrayBase",
    "_mode",
    "writeByte",
    "writeUnsignedByte",
    "readUnsignedByte",
    "writeUnsignedShort",
    "writeUnsignedInt",
    "writeFloat",
    "toFloatBits",
    "readFloat",
    "fromFloatBits",
    "compareEqual",
    "other",
    "co0",
    "c0",
    "writeBase64String",
    "dumpToConsole",
    "oldpos",
    "nstep",
    "asHexString",
    "digits",
    "lut",
    "sh",
    "readBase64String",
    "internalGetBase64String",
    "getUnsignedByteFunc",
    "self",
    "b0",
    "b1",
    "b2",
    "enc1",
    "enc2",
    "enc3",
    "enc4",
    "base64Key",
    "Base64Key",
    "awayjs-core/lib/utils/ByteArrayBuffer",
    "ByteArrayBuffer",
    "_bytes",
    "bi",
    "Number",
    "sign",
    "exponent",
    "mantissa",
    "maxlength",
    "max",
    "unalignedarraybytestemp",
    "ensureWriteableSpace",
    "ensureSpace",
    "aBuffer",
    "inInt8AView",
    "localInt8View",
    "newmaxlength",
    "newarraybuffer",
    "newview",
    "readBytes",
    "byteView",
    "localByteView",
    "view2",
    "view3",
    "DataView",
    "getUint8",
    "c2",
    "c3",
    "readInt",
    "int",
    "getInt32",
    "short",
    "getInt16",
    "readDouble",
    "double",
    "getFloat64",
    "pa",
    "Uint32Array",
    "awayjs-core/lib/utils/CSS",
    "CSS",
    "setElementSize",
    "style",
    "setElementWidth",
    "setElementHeight",
    "setElementX",
    "setElementY",
    "getElementVisibility",
    "visibility",
    "setElementVisibility",
    "visible",
    "setElementAlpha",
    "alpha",
    "HTMLCanvasElement",
    "globalAlpha",
    "setElementPosition",
    "absolute",
    "float32Color",
    "ARGBtoFloat32",
    "componentToHex",
    "hex",
    "RGBToHexString",
    "ARGBToHexString",
    "awayjs-core/lib/utils/Debug",
    "Debug",
    "breakpoint",
    "throwPIROnKeyWordOnly",
    "enable",
    "keyword",
    "throwPIR",
    "clss",
    "fnc",
    "msg",
    "logPIR",
    "THROW_ERRORS",
    "LOG_PI_ERRORS",
    "args",
    "_i",
    "arguments",
    "ENABLE_LOG",
    "awayjs-core/lib/utils/IArrayBufferViewClass",
    "MAX_SIZE",
    "isPowerOfTwo",
    "getBestPowerOf2",
    "awayjs-core/lib/utils/MipmapGenerator",
    "MipmapGenerator",
    "_generateMipMaps",
    "output",
    "_getMipmapHolder",
    "_matrix",
    "mipMapHolder",
    "newW",
    "newH",
    "_freeMipMapHolder",
    "_mipMaps",
    "_mipMapUses",
    "holderWidth",
    "holderHeight",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "RequestAnimationFrame",
    "callback",
    "callbackContext",
    "_active",
    "_argsArray",
    "_getTimer",
    "setCallback",
    "_rafUpdateFunction",
    "_tick",
    "_dt",
    "_callback",
    "_callbackContext",
    "_prevTime",
    "requestAnimationFrame",
    "delay",
    "repeatCount",
    "_repeatCount",
    "_currentCount",
    "_running",
    "_delay",
    "clearInterval",
    "_iid",
    "setInterval",
    "tick",
    "node",
    "tag",
    "fragment",
    "createDocumentFragment",
    "num",
    "childNodes",
    "child",
    "nodeName",
    "appendChild",
    "filterListByParam",
    "paramName",
    "paramValue",
    "attributes",
    "getNamedItem",
    "DOMParser",
    "parseFromString",
    "nodeToString",
    "XMLSerializer",
    "serializeToString",
    "attrName",
    "attrs",
    "attribute",
    "writeAttributeValue",
    "attrValue",
    "Attr",
    "setNamedItem",
    "hasAttribute",
    "now",
    "awayjs-core/lib/vos/IAttributesBufferVO",
    "awayjs-core/lib/vos/IAttributesVO"
  ],
  "mappings": "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",
  "file": "awayjs-core.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAttributesBufferVO\t\t= require(\"awayjs-core/lib/vos/IAttributesBufferVO\");\n\nclass AttributesBuffer extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[assets AttributesBuffer]\";\n\n\tprivate _attributesBufferVO:Array<IAttributesBufferVO> = new Array<IAttributesBufferVO>();\n\tprivate _count:number = 0;\n\tprivate _stride:number = 0;\n\tprivate _newStride:number = 0;\n\n\tprivate _buffer:ArrayBuffer;\n\tprivate _bufferView:Uint8Array;\n\tprivate _contentDirty:boolean;\n\tprivate _lengthDirty:boolean;\n\tprivate _viewVOs:Array<ViewVO> = new Array<ViewVO>();\n\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesBuffer.assetType;\n\t}\n\n\tpublic get stride():number\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\treturn this._stride;\n\t}\n\n\tpublic set stride(value:number)\n\t{\n\t\tif (this._newStride == value)\n\t\t\treturn;\n\n\t\tthis._newStride = value;\n\n\t\tthis.invalidateLength();\n\t}\n\t\n\tpublic get count():number\n\t{\n\t\treturn this._count;\n\t}\n\t\n\tpublic set count(value:number)\n\t{\n\t\tif (this._count == value)\n\t\t\treturn;\n\t\t\n\t\tthis._count = value;\n\t\t\n\t\tthis.invalidateLength();\n\t}\n\n\n\tpublic get buffer():ArrayBuffer\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._buffer;\n\t}\n\n\n\tpublic get bufferView():Uint8Array\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._bufferView;\n\t}\n\n\tpublic set bufferView(value:Uint8Array)\n\t{\n\t\tthis._bufferView = value;\n\t\tthis._buffer = this._bufferView.buffer;\n\t}\n\n\tpublic get length()\n\t{\n\t\treturn this._count*this.stride;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tconstructor(stride:number = 0, count:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._stride = this._newStride = stride;\n\t\tthis._count = count;\n\n\t\tthis._buffer = new ArrayBuffer(this._stride*this._count);\n\t\tthis._bufferView = new Uint8Array(this._buffer, 0, this._buffer.byteLength);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tif (this._contentDirty)\n\t\t\treturn;\n\n\t\tvar len:number = this._attributesBufferVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._attributesBufferVO[i].invalidate();\n\n\t\tthis._contentDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateLength():void\n\t{\n\t\tif (this._lengthDirty)\n\t\t\treturn;\n\n\t\twhile (this._attributesBufferVO.length)\n\t\t\tthis._attributesBufferVO[0].dispose();\n\n\t\tthis._lengthDirty = true;\n\t}\n\n\tpublic clone():AttributesBuffer\n\t{\n\t\tvar attributesBuffer:AttributesBuffer = new AttributesBuffer(this._stride, this._count);\n\t\tattributesBuffer.bufferView.set(this.bufferView);\n\n\t\tvar len:number = this._viewVOs.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._viewVOs[i].view._internalClone(attributesBuffer);\n\n\t\treturn attributesBuffer;\n\t}\n\n\tpublic getView(index:number):AttributesView\n\t{\n\t\tif (index < this._viewVOs.length)\n\t\t\treturn this._viewVOs[index].view;\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._attributesBufferVO.length)\n\t\t\tthis._attributesBufferVO[0].dispose();\n\t}\n\n\tpublic _setAttributes(viewIndex:number, arrayBufferView:ArrayBufferView, offset:number = 0)\n\t{\n\t\tvar array:Uint8Array = (arrayBufferView instanceof Uint8Array)? <Uint8Array> arrayBufferView : new Uint8Array(arrayBufferView.buffer);\n\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\t\tvar vCount:number = array.length/vLength;\n\n\t\t//make sure there is enough space in the buffer\n\t\tif (this.count < vCount + offset)\n\t\t\tthis.count = vCount + offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1) {\n\t\t\tthis._bufferView.set(array);\n\t\t} else {\n\t\t\tfor (var i:number = 0; i < vCount; i++)\n\t\t\t\tthis._bufferView.set(array.subarray(i*vLength, (i+1)*vLength), (i+offset)*this._stride + vOffset);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\tpublic _getLocalArrayBuffer(viewIndex:number):ArrayBuffer\n\t{\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1)\n\t\t\treturn this._buffer;\n\n\t\tvar localBuffer:ArrayBuffer = new ArrayBuffer(this._count*vLength);\n\t\tvar localBufferView:Uint8Array = new Uint8Array(localBuffer);\n\n\t\tfor (var i:number = 0; i < this._count; i++)\n\t\t\tlocalBufferView.set(this._bufferView.subarray(i*this._stride + vOffset, i*this._stride + vOffset + vLength), i*vLength);\n\n\t\treturn localBuffer;\n\t}\n\n\tpublic _iAddAttributesBufferVO(AttributesBufferVO:IAttributesBufferVO):IAttributesBufferVO\n\t{\n\t\tthis._attributesBufferVO.push(AttributesBufferVO);\n\n\t\treturn AttributesBufferVO;\n\t}\n\n\tpublic _iRemoveAttributesBufferVO(AttributesBufferVO:IAttributesBufferVO):IAttributesBufferVO\n\t{\n\t\tthis._attributesBufferVO.splice(this._attributesBufferVO.indexOf(AttributesBufferVO), 1);\n\n\t\treturn AttributesBufferVO;\n\t}\n\n\tpublic _addView(view:AttributesView)\n\t{\n\t\tvar viewVO:ViewVO = new ViewVO(view);\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.offset = len? this._viewVOs[len - 1].offset + this._viewVOs[len - 1].length : 0;\n\n\t\tthis._viewVOs.push(viewVO);\n\n\t\tif (this._newStride < viewVO.offset + viewVO.length) {\n\t\t\tthis._newStride = viewVO.offset + viewVO.length;\n\t\t\tthis.invalidateLength();\n\t\t}\n\n\t\tview._index = len;\n\t}\n\n\tpublic _removeView(view:AttributesView)\n\t{\n\t\tvar viewIndex:number = view._index;\n\t\tvar viewVO:ViewVO = this._viewVOs.splice(viewIndex, 1)[0];\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.dispose();\n\n\t\tfor (var i:number = viewIndex; i < len; i++) {\n\t\t\tviewVO = this._viewVOs[i];\n\t\t\tviewVO.offset = i? this._viewVOs[i - 1].offset + this._viewVOs[i - 1].length : 0;\n\t\t\tviewVO.view._index = i;\n\t\t}\n\n\t\tthis._newStride = viewVO.offset + viewVO.length;\n\n\t\tthis.invalidateLength();\n\t}\n\n\tpublic _getOffset(viewIndex:number):number\n\t{\n\t\treturn this._viewVOs[viewIndex].offset;\n\t}\n\n\tpublic _updateLength()\n\t{\n\t\tthis._lengthDirty = false;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tvar newLength:number = this._newStride*this._count;\n\n\t\tif (!this._buffer || this._buffer.byteLength != newLength) {\n\t\t\tvar newBuffer:ArrayBuffer = new ArrayBuffer(newLength);\n\t\t\tvar newView:Uint8Array = new Uint8Array(newBuffer, 0, newBuffer.byteLength);\n\t\t\tvar viewVO:ViewVO;\n\t\t\tvar vLength:number;\n\t\t\tvar vOffset:number;\n\t\t\tvar vOldOffset:number;\n\n\t\t\tif (this._stride != this._newStride) {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tviewVO = this._viewVOs[i];\n\t\t\t\t\tvLength = viewVO.length;\n\t\t\t\t\tvOffset = viewVO.offset;\n\t\t\t\t\tvOldOffset = viewVO.oldOffset;\n\t\t\t\t\tfor (j = 0; j < this._count; j++)\n\t\t\t\t\t\tif (vOldOffset != null)\n\t\t\t\t\t\t\tnewView.set(new Uint8Array(this._buffer, j*this._stride + vOldOffset, vLength), j*this._newStride + vOffset);\n\n\t\t\t\t\tviewVO.oldOffset = viewVO.offset;\n\t\t\t\t}\n\n\t\t\t\tthis._stride = this._newStride;\n\t\t\t} else {\n\t\t\t\tnewView.set(new Uint8Array(this._buffer, 0, Math.min(newLength, this._buffer.byteLength))); //TODO: bypass quantisation of bytearray on instantiation\n\t\t\t}\n\n\t\t\tthis._buffer = newBuffer;\n\t\t\tthis._bufferView = newView;\n\t\t}\n\t}\n}\n\nclass ViewVO\n{\n\tpublic view:AttributesView;\n\n\tpublic length;\n\n\tpublic offset;\n\n\tpublic oldOffset;\n\n\tconstructor(view:AttributesView)\n\t{\n\t\tthis.view = view;\n\t\tthis.length = view.size*view.dimensions;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.view = null;\n\t}\n\n\tpublic clone():ViewVO\n\t{\n\t\treturn new ViewVO(this.view);\n\t}\n}\n\nexport = AttributesBuffer;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass AttributesView extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[attributes AttributesView]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesView.assetType;\n\t}\n\n\tpublic _cloneCache:AttributesView;\n\tpublic _attributesBuffer:AttributesBuffer;\n\tpublic _bufferDirty:boolean;\n\tprivate _size:number;\n\tprivate _dimensions:number;\n\n\tpublic _index:number;\n\tpublic _arrayClass:IArrayBufferViewClass;\n\n\tpublic _localArrayBuffer:ArrayBuffer;\n\n\tpublic normalized:boolean;\n\n\tpublic get buffer():AttributesBuffer\n\t{\n\t\treturn this._attributesBuffer;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._size = value;\n\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get dimensions():number\n\t{\n\t\treturn this._dimensions;\n\t}\n\n\tpublic set dimensions(value:number)\n\t{\n\t\tif (this._dimensions == value)\n\t\t\treturn;\n\n\t\tthis._dimensions = value;\n\n\t\t//reset view\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this._attributesBuffer.count;\n\t}\n\n\tpublic set count(value:number)\n\t{\n\t\tthis._attributesBuffer.count = value;\n\t}\n\n\tpublic get offset():number\n\t{\n\t\treturn this._attributesBuffer._getOffset(this._index);\n\t}\n\n\tpublic get length():number\n\t{\n\t\treturn this._attributesBuffer.count*this._dimensions;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, count?:number);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBuffer?:AttributesBuffer);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBufferCount:any = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._arrayClass = arrayClass;\n\t\tthis._size = arrayClass.BYTES_PER_ELEMENT;\n\t\tthis._dimensions = dimensions;\n\t\tthis._attributesBuffer = (attributesBufferCount instanceof AttributesBuffer)? <AttributesBuffer> attributesBufferCount : new AttributesBuffer(this._dimensions*this._size, attributesBufferCount);\n\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tthis._attributesBuffer._setAttributes(this._index, (values instanceof Array)? new (this._arrayClass)(values) : <ArrayBufferView> values, offset);\n\n\t\tthis._localArrayBuffer = null;\n\t}\n\n\tpublic get(count:number, offset:number = 0):ArrayBufferView\n\t{\n\t\tif (!this._localArrayBuffer)\n\t\t\tthis._localArrayBuffer = this._attributesBuffer._getLocalArrayBuffer(this._index);\n\n\t\tvar len:number = this._dimensions*this._size;\n\t\treturn new (this._arrayClass)(this._localArrayBuffer, offset*len, count*this._dimensions);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):AttributesView\n\t{\n\t\treturn (this._cloneCache = new AttributesView(this._arrayClass, this._dimensions, attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):AttributesView\n\t{\n\t\tif (attributesBuffer)\n\t\t\tthis._internalClone(attributesBuffer);\n\n\t\tif (!this._cloneCache)\n\t\t\tthis._attributesBuffer.clone();\n\n\t\tvar cloneCache:AttributesView = this._cloneCache;\n\t\tthis._cloneCache = null;\n\n\t\treturn cloneCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer = null;\n\t}\n}\n\nexport = AttributesView;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Byte4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Byte4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Byte4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint8Array : Int8Array, 4, attributesBufferLength);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(typedArray:Uint8Array, offset?:number);\n\tpublic set(typedArray:Int8Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint8Array;\n\tpublic get(count:number, offset?:number):Int8Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte4Attributes\n\t{\n\t\treturn (this._cloneCache = new Byte4Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte4Attributes\n\t{\n\t\treturn <Byte4Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Byte4Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float1Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float1Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float1Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 1, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float1Attributes\n\t{\n\t\treturn (this._cloneCache = new Float1Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float1Attributes\n\t{\n\t\treturn <Float1Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float1Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 2, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float2Attributes\n\t{\n\t\treturn (this._cloneCache = new Float2Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float2Attributes\n\t{\n\t\treturn <Float2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float2Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 3, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\treturn (this._cloneCache = new Float3Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float3Attributes\n\t{\n\t\treturn <Float3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float3Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 4, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float4Attributes\n\t{\n\t\treturn (this._cloneCache = new Float4Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float4Attributes\n\t{\n\t\treturn <Float4Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float4Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Short2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 2, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short2Attributes\n\t{\n\t\treturn (this._cloneCache = new Short2Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short2Attributes\n\t{\n\t\treturn <Short2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Short2Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Short3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 3, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short3Attributes\n\t{\n\t\treturn (this._cloneCache = new Short3Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short3Attributes\n\t{\n\t\treturn <Short3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Short3Attributes;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[image BitmapImage2D]\";\n\n\tprivate _imageCanvas:HTMLCanvasElement;\n\tprivate _context:CanvasRenderingContext2D;\n\tprivate _imageData:ImageData;\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImage2D.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null, powerOfTwo:boolean = true)\n\t{\n\t\tsuper(width, height, powerOfTwo);\n\n\t\tthis._transparent = transparent;\n\t\tthis._imageCanvas = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\tthis._imageCanvas.width = width;\n\t\tthis._imageCanvas.height = height;\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\n\t\t\n\t\tif (fillColor != null)\n\t\t\tthis.fillRect(this._rect, fillColor);\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImage2D\n\t{\n\t\tvar t:BitmapImage2D = new BitmapImage2D(this.width, this.height, this.transparent);\n\t\tt.draw(this);\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar data:Array<number> = this._imageData.data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\n\t\tvar destData:Array<number> = this._imageData.data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:HTMLElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._context = null;\n\t\tthis._imageCanvas = null;\n\t\tthis._imageData = null;\n\t\tthis._rect = null;\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\t\tthis._imageData.data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\tthis._imageData = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\treturn this._imageData;\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn this._imageCanvas;\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tif (this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tthis._imageCanvas.width = width;\n\t\tthis._imageCanvas.height = height;\n\t\t\n\t\tsuper._setSize(width, height);\n\n\t\tif (this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n}\n\nexport = BitmapImage2D;",
    "class BitmapImageChannel\n{\n\tpublic static ALPHA:number /*uint*/ = 8;\n\tpublic static BLUE:number /*uint*/ = 4;\n\tpublic static GREEN:number /*uint*/ = 2;\n\tpublic static RED:number /*uint*/ = 1;\n}\n\nexport = BitmapImageChannel;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\n\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapImageCube extends ImageCube\n{\n\tpublic static assetType:string = \"[image BitmapImageCube]\";\n\n\tpublic static posX:number = 0;\n\tpublic static negX:number = 1;\n\tpublic static posY:number = 2;\n\tpublic static negY:number = 3;\n\tpublic static posZ:number = 4;\n\tpublic static negZ:number = 5;\n\n\tprivate _imageCanvas:Array<HTMLCanvasElement> = new Array<HTMLCanvasElement>(6);\n\tprivate _context:Array<CanvasRenderingContext2D> = new Array<CanvasRenderingContext2D>(6);\n\tprivate _imageData:Array<ImageData> = new Array<ImageData>(6);\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImageCube.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(size:number, transparent:boolean = true, fillColor:number = null)\n\t{\n\t\tsuper(size);\n\n\t\tthis._transparent = transparent;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._imageCanvas[i] = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\t\t\tthis._context[i] = this._imageCanvas[i].getContext(\"2d\");\n\n\t\t\tif (fillColor != null)\n\t\t\t\tthis.fillRect(i, new Rectangle(0, 0, size, size), fillColor);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImageCube\n\t{\n\t\tvar t:BitmapImageCube = new BitmapImageCube(this._size, this.transparent);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tt.draw(i, this.getCanvas(i));\n\t\t}\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(side:number, rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar data:Array<number> = this._imageData[side].data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(side:number, sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\n\t\tvar destData:Array<number> = this._imageData[side].data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this._size)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(side:number, source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i] = null;\n\t\t\tthis._imageCanvas[i] = null;\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(side:number, source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(side:number, rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(side:number, x:number, y:number):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(side:number, x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(side:number, rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\t\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\t\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\t\t\tthis._imageData[side].data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(side:number, x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(side:number, x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(side:number, rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0); // at coords 0,0\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData(side:number):ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\treturn this._imageData[side];\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas(side:number):HTMLCanvasElement\n\t{\n\t\treturn this._imageCanvas[side];\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number)\n\t{\n\t\tsuper._setSize(size);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tif (this._locked)\n\t\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0);\n\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\n\t\t\tif (this._locked)\n\t\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t\t}\n\t}\n}\n\nexport = BitmapImageCube;",
    "/**\n * A class that provides constant values for visual blend mode effects. These\n * constants are used in the following:\n * <ul>\n *   <li> The <code>blendMode</code> property of the\n * flash.display.DisplayObject class.</li>\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\n * method of the flash.display.BitmapData class</li>\n * </ul>\n */\nclass BlendMode\n{\n\t/**\n\t * Adds the values of the constituent colors of the display object to the\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\n\t * commonly used for animating a lightening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\n\t */\n\tpublic static ADD:string = \"add\";\n\n\t/**\n\t * Applies the alpha value of each pixel of the display object to the\n\t * background. This requires the <code>blendMode</code> property of the\n\t * parent display object be set to\n\t * <code>away.base.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ALPHA:string = \"alpha\";\n\n\t/**\n\t * Selects the darker of the constituent colors of the display object and the\n\t * colors of the background(the colors with the smaller values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static DARKEN:string = \"darken\";\n\n\t/**\n\t * Compares the constituent colors of the display object with the colors of\n\t * its background, and subtracts the darker of the values of the two\n\t * constituent colors from the lighter value. This setting is commonly used\n\t * for more vibrant colors.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\n\t */\n\tpublic static DIFFERENCE:string = \"difference\";\n\n\t/**\n\t * Erases the background based on the alpha value of the display object. This\n\t * process requires that the <code>blendMode</code> property of the parent\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ERASE:string = \"erase\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the display\n\t * object. If the display object is lighter than 50% gray, the display object\n\t * and background colors are screened, which results in a lighter color. If\n\t * the display object is darker than 50% gray, the colors are multiplied,\n\t * which results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static HARDLIGHT:string = \"hardlight\";\n\n\t/**\n\t * Inverts the background.\n\t */\n\tpublic static INVERT:string = \"invert\";\n\n\t/**\n\t * Forces the creation of a transparency group for the display object. This\n\t * means that the display object is precomposed in a temporary buffer before\n\t * it is processed further. The precomposition is done automatically if the\n\t * display object is precached by means of bitmap caching or if the display\n\t * object is a display object container that has at least one child object\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LAYER:string = \"layer\";\n\n\t/**\n\t * Selects the lighter of the constituent colors of the display object and\n\t * the colors of the background(the colors with the larger values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LIGHTEN:string = \"lighten\";\n\n\t/**\n\t * Multiplies the values of the display object constituent colors by the\n\t * constituent colors of the background color, and normalizes by dividing by\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\n\t * shadows and depth effects.\n\t *\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\n\t * display object and the corresponding color of the pixel in the background\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\n\t * shade than the color of the display object or the color of the\n\t * background.</p>\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * The display object appears in front of the background. Pixel values of the\n\t * display object override the pixel values of the background. Where the\n\t * display object is transparent, the background is visible.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the background.\n\t * If the background is lighter than 50% gray, the display object and\n\t * background colors are screened, which results in a lighter color. If the\n\t * background is darker than 50% gray, the colors are multiplied, which\n\t * results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static OVERLAY:string = \"overlay\";\n\n\t/**\n\t * Multiplies the complement(inverse) of the display object color by the\n\t * complement of the background color, resulting in a bleaching effect. This\n\t * setting is commonly used for highlights or to remove black areas of the\n\t * display object.\n\t */\n\tpublic static SCREEN:string = \"screen\";\n\n\t/**\n\t * Uses a shader to define the blend between objects.\n\t *\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\n\t * automatically sets the display object's <code>blendMode</code> property to\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\n\t * set to <code>BlendMode.SHADER</code> without first setting the\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\n\t * <code>blendShader</code> property is set(which sets the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\n\t * later the value of the <code>blendMode</code> property is changed, the\n\t * blend mode can be reset to use the blend shader simply by setting the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\n\t * <code>blendShader</code> property does not need to be set again except to\n\t * change the shader that's used to define the blend mode.</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static SHADER:string = \"shader\";\n\n\t/**\n\t * Subtracts the values of the constituent colors in the display object from\n\t * the values of the background color, applying a floor of 0. This setting is\n\t * commonly used for animating a darkening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\n\t */\n\tpublic static SUBTRACT:string = \"subtract\";\n}\n\nexport = BlendMode;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nclass Image2D extends ImageBase\n{\n\tpublic static assetType:string = \"[image Image2D]\";\n\n\tpublic _rect:Rectangle;\n\n\tprivate _powerOfTwo:boolean = true;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Image2D.assetType;\n\t}\n\n\t/**\n\t * The height of the image in pixels.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._rect.height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._rect.height == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._rect.width, value);\n\t}\n\n\t/**\n\t * The rectangle that defines the size and location of the bitmap image. The\n\t * top and left of the rectangle are 0; the width and height are equal to the\n\t * width and height in pixels of the BitmapData object.\n\t */\n\tpublic get rect():Rectangle\n\t{\n\t\treturn this._rect;\n\t}\n\n\t/**\n\t * The width of the bitmap image in pixels.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._rect.width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._rect.width == value)\n\t\t\treturn;\n\n\t\tthis._setSize(value, this._rect.height);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(width:number, height:number, powerOfTwo:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._rect = new Rectangle(0, 0, width, height);\n\t\tthis._powerOfTwo = powerOfTwo;\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tif (this._rect.width != width || this._rect.height != height)\n\t\t\tthis.invalidateSize();\n\n\t\tthis._rect.width = width;\n\t\tthis._rect.height = height;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions()\n\t{\n\t\tif (this._powerOfTwo && (!ImageUtils.isDimensionValid(this._rect.width) || !ImageUtils.isDimensionValid(this._rect.height)))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n\n\t/**\n\t * Enable POT texture size validation\n\t * @returns {boolean}\n\t */\n\tpublic get powerOfTwo():boolean {\n\t\treturn this._powerOfTwo;\n\t}\n\n\tpublic set powerOfTwo(value:boolean) {\n\t\tif(this._powerOfTwo == value) return;\n\t\tthis._powerOfTwo = value;\n\t\tthis._testDimensions();\n\t}\n}\n\nexport = Image2D;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IImageObject\t\t\t\t= require(\"awayjs-core/lib/pool/IImageObject\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\nclass ImageBase extends AssetBase implements IAsset\n{\n\tprivate _imageObject:Array<IImageObject> = new Array<IImageObject>();\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._imageObject.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._imageObject[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._imageObject.length)\n\t\t\tthis._imageObject[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._imageObject.length)\n\t\t\tthis._imageObject[0].dispose();\n\t}\n\n\n\tpublic _iAddImageObject(ImageObject:IImageObject):IImageObject\n\t{\n\t\tthis._imageObject.push(ImageObject);\n\n\t\treturn ImageObject;\n\t}\n\n\tpublic _iRemoveImageObject(ImageObject:IImageObject):IImageObject\n\t{\n\t\tthis._imageObject.splice(this._imageObject.indexOf(ImageObject), 1);\n\n\t\treturn ImageObject;\n\t}\n}\n\nexport = ImageBase;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nclass ImageCube extends ImageBase\n{\n\tpublic static assetType:string = \"[image ImageCube]\";\n\n\tpublic _size:number;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn ImageCube.assetType;\n\t}\n\n\t/**\n\t * The size of the cube bitmap in pixels.\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._size);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(size:number)\n\t{\n\t\tsuper();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number)\n\t{\n\t\tif (this._size != size)\n\t\t\tthis.invalidateSize();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions()\n\t{\n\t\tif (!ImageUtils.isDimensionValid(this._size))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n}\n\nexport = ImageCube;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\n/**\n * The Sampler2D class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Sampler2D()</code> constructor.\n *\n * <p>The <code>Sampler2D()</code> constructor allows you to create a Sampler2D\n * object that contains a reference to a Image2D object. After you create a\n * Sampler2D object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Sampler2D object can share its Image2D reference among several Sampler2D\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Sampler2D objects that reference the same Image2D object,\n * multiple texture objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each texture\n * object instance.</p>\n\n */\nclass Sampler2D extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset Sampler2D]\";\n\n\tprivate _offsetX:number = 0;\n\tprivate _offsetY:number = 0;\n\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\n\tprivate _rect:Rectangle;\n\tprivate _imageRect:Rectangle;\n\tprivate _frameRect:Rectangle;\n\tprivate _repeat:boolean;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Sampler2D.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D;\n\n\t/**\n\t * Controls whether or not the Sampler2D object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\t//var pixelSnapping:PixelSnapping;\n\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\n\t/**\n\t *\n\t */\n\tpublic get offsetX():number\n\t{\n\t\treturn this._offsetX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get offsetY():number\n\t{\n\t\treturn this._offsetY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._scaleX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._scaleY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get imageRect():Rectangle\n\t{\n\t\treturn this._imageRect;\n\t}\n\tpublic set imageRect(value:Rectangle)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\tpublic set frameRect(value:Rectangle)\n\t{\n\t\tif (this._frameRect == value)\n\t\t\treturn;\n\n\t\tthis._frameRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rect():Rectangle\n\t{\n\t\treturn this._rect;\n\t}\n\n\t/**\n\t *\n\t * @param image2D\n\t * @param smoothing\n\t */\n\tconstructor(image2D:Image2D = null, repeat:boolean = false, smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis.image2D = image2D;\n\n\t\tthis.repeat = repeat;\n\t\tthis.smooth = smooth;\n\t\tthis.mipmap = mipmap;\n\n\t\tthis._updateRect();\n\t}\n\n\tprivate _updateRect()\n\t{\n\t\tif (this._imageRect)\n\t\t\tthis._rect = this._imageRect;\n\t\telse\n\t\t\tthis._rect = this.image2D.rect;\n\n\t\tif (this._imageRect) {\n\t\t\tthis._offsetX = this._imageRect.x/this.image2D.width;\n\t\t\tthis._offsetY = this._imageRect.y/this.image2D.height;\n\n\t\t\tthis._scaleX = this._imageRect.width/this.image2D.width;\n\t\t\tthis._scaleY = this._imageRect.height/this.image2D.height;\n\t\t} else {\n\t\t\tthis._offsetX = 0;\n\t\t\tthis._offsetY = 0;\n\n\t\t\tthis._scaleX = 1;\n\t\t\tthis._scaleY = 1;\n\t\t}\n\n\t}\n}\n\nexport = Sampler2D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n *\n */\nclass SamplerBase extends AssetBase implements IAsset\n{\n\tprivate _smooth:boolean;\n\tprivate _mipmap:boolean;\n\n\tpublic _pFormat:string = \"bgra\";\n\n\t/**\n\t *\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get format():string\n\t{\n\t\treturn this._pFormat;\n\t}\n}\n\nexport = SamplerBase;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\n/**\n * The Bitmap class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Bitmap()</code> constructor.\n *\n * <p>The <code>Bitmap()</code> constructor allows you to create a Bitmap\n * object that contains a reference to a BitmapData object. After you create a\n * Bitmap object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Bitmap object can share its BitmapData reference among several Bitmap\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Bitmap objects that reference the same BitmapData object,\n * multiple texture objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each texture\n * object instance.</p>\n\n */\nclass SamplerCube extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset SamplerCube]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SamplerCube.assetType;\n\t}\n\n\t/**\n\t * The ImageCube object being referenced.\n\t */\n\tpublic imageCube:ImageCube;\n\n\t/**\n\t *\n\t * @param bitmapData\n\t * @param smoothing\n\t */\n\tconstructor(imageCube:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis.imageCube = imageCube;\n\t}\n}\n\nexport = SamplerCube;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageChannel\t\t= require(\"awayjs-core/lib/data/BitmapImageChannel\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n *\n */\nclass SpecularImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[asset SpecularImage2D]\";\n\n\tprivate _specularSource:BitmapImage2D;\n\tprivate _glossSource:BitmapImage2D;\n\tprivate _output:BitmapImage2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SpecularImage2D.assetType;\n\t}\n\n\tpublic get specularSource():BitmapImage2D\n\t{\n\t\treturn this._specularSource;\n\t}\n\n\tpublic set specularSource(value:BitmapImage2D)\n\t{\n\t\tif (this._specularSource == value)\n\t\t\treturn;\n\n\t\tthis._specularSource = value;\n\n\t\tthis.invalidateContent();\n\n\t\tthis._testSize();\n\t}\n\n\n\tpublic get glossSource():BitmapImage2D\n\t{\n\t\treturn this._glossSource;\n\t}\n\n\tpublic set glossSource(value:BitmapImage2D)\n\t{\n\t\tif (this._glossSource == value)\n\t\t\treturn;\n\n\t\tthis._glossSource = value;\n\n\t\tthis.invalidateContent();\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(specularSource:BitmapImage2D = null, glossSource:BitmapImage2D = null)\n\t{\n\t\tsuper(1, 1);\n\n\t\tthis._specularSource = specularSource;\n\t\tthis._glossSource = glossSource;\n\n\t\tthis._output = new BitmapImage2D(1, 1, false, 0xffffff);\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t * Returns a new SpecularImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new SpecularImage2D object that is identical to the original.\n\t */\n\tpublic clone():SpecularImage2D\n\t{\n\t\treturn new SpecularImage2D(this._specularSource, this._glossSource);\n\t}\n\n\t/**\n\t * Frees memory that is used to store the SpecularImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this SpecularImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>SpecularImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>SpecularImage2D.dispose()</code>, the SpecularImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the SpecularImage2D object. However,\n\t * <code>SpecularImage2D.dispose()</code> does not garbage collect the SpecularImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * SpecularImage2D object is released at the time the SpecularImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._rect = null;\n\n\t\tthis._output.dispose();\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tvar origin:Point = new Point();\n\n\t\tthis._output.fillRect(this._rect, 0xffffff);\n\n\t\tif (this._glossSource)\n\t\t\tthis._output.copyChannel(this._glossSource, this._rect, origin, BitmapImageChannel.GREEN, BitmapImageChannel.GREEN);\n\n\t\tif (this._specularSource)\n\t\t\tthis._output.copyChannel(this._specularSource, this._rect, origin, BitmapImageChannel.RED, BitmapImageChannel.RED);\n\n\t\treturn this._output.getImageData();\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn this._output.getCanvas();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tsuper._setSize(width, height);\n\n\t\tthis._output._setSize(width, height);\n\t}\n\n\tprivate _testSize()\n\t{\n\t\tvar w:number, h:number;\n\n\t\tif (this._specularSource) {\n\t\t\tw = this._specularSource.width;\n\t\t\th = this._specularSource.height;\n\t\t} else if (this._glossSource) {\n\t\t\tw = this._glossSource.width;\n\t\t\th = this._glossSource.height;\n\t\t} else {\n\t\t\tw = 1;\n\t\t\th = 1;\n\t\t}\n\n\t\tif (w != this._output.width && h != this._output.height) {\n\t\t\tthis._output.dispose();\n\t\t\tthis._output = new BitmapImage2D(w, h, false, 0xffffff);\n\t\t}\n\n\t\tthis._setSize(w, h);\n\t}\n}\n\nexport = SpecularImage2D;",
    "import IAudioChannel\t\t\t\t= require(\"awayjs-core/lib/managers/IAudioChannel\");\nimport AudioManager\t\t\t\t= require(\"awayjs-core/lib/managers/AudioManager\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n// TODO: Audio should probably be an interface containing play/stop/seek functionality\nclass WaveAudio extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset WaveAudio]\";\n\n\tprivate _audioChannel:IAudioChannel;\n\tprivate _volume:number = 1;\n\tprivate _buffer:ArrayBuffer;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn WaveAudio.assetType;\n\t}\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tif (this._audioChannel)\n\t\t\tthis._audioChannel.volume = this._volume;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\tif (this._audioChannel)\n\t\t\treturn this._audioChannel.currentTime;\n\n\t\treturn 0;\n\t}\n\n\tpublic get duration():number\n\t{\n\t\tif (this._audioChannel)\n\t\t\treturn this._audioChannel.duration;\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(buffer:ArrayBuffer)\n\t{\n\t\tsuper();\n\n\t\tthis._buffer = buffer;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.stop();\n\t}\n\n\tpublic play(offset:number, loop:boolean = false)\n\t{\n\t\tthis._audioChannel = AudioManager.getChannel(this._buffer.byteLength);\n\t\tthis._audioChannel.volume = this._volume;\n\t\tthis._audioChannel.play(this._buffer, offset, loop);\n\t}\n\n\tpublic stop()\n\t{\n\t\tif (this._audioChannel)\n\t\t\tthis._audioChannel.stop();\n\n\t\tdelete this._audioChannel;\n\t\tthis._audioChannel = null;\n\t}\n\n\tpublic clone()\n\t{\n\t\tvar newInstance:WaveAudio = new WaveAudio(this._buffer);\n\n\t\tnewInstance.name = this.name;\n\n\t\treturn newInstance;\n\t}\n}\n\nexport = WaveAudio;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass AbstractMethodError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\n\t}\n}\n\nexport = AbstractMethodError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass ArgumentError extends Error\n{\n\t/**\n\t * Create a new ArgumentError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"ArgumentError\", id);\n\t}\n}\n\nexport = ArgumentError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass DocumentError extends Error\n{\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\n\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\n\t{\n\t\tsuper(message, id);\n\t}\n}\n\nexport = DocumentError;",
    "class Error\n{\n\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\n\tprivate _name:string = '';  // Contains the name of the Error object.\n\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\n\t{\n\n\t\tthis._messsage = message;\n\t\tthis._name = name;\n\t\tthis._errorID = id;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get message():string\n\t{\n\n\t\treturn this._messsage;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set message(value:string)\n\t{\n\n\t\tthis._messsage = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get name():string\n\t{\n\n\t\treturn this._name;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set name(value:string)\n\t{\n\n\t\tthis._name = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get errorID():number\n\t{\n\n\t\treturn this._errorID;\n\n\t}\n\n}\n\nexport = Error;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass PartialImplementationError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(dependency:string = '', id:number = 0)\n\t{\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\n\t}\n}\n\nexport = PartialImplementationError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * RangeError is thrown when an index is accessed out of range of the number of\n * available indices on an Array.\n */\nclass RangeError extends Error\n{\n\t/**\n\t * Create a new RangeError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"RangeError\", id);\n\t}\n}\n\nexport = RangeError;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.AssetEvent\n */\nclass AssetEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_RENAME:string = 'assetRename';\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\n\n\t/**\n\t *\n\t */\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\n\n\tprivate _asset:IAsset;\n\tprivate _prevName:string;\n\n\t/**\n\t *\n\t */\n\tconstructor(type:string, asset:IAsset = null, prevName:string = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._asset = asset;\n\t\tthis._prevName = prevName || (this._asset? this._asset.name : null);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get asset():IAsset\n\t{\n\t\treturn this._asset;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetPrevName():string\n\t{\n\t\treturn this._prevName;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new AssetEvent(this.type, this.asset, this.assetPrevName);\n\t}\n}\n\nexport = AssetEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Base class for dispatching events\n*\n* @class away.events.EventDispatcher\n*\n*/\nclass EventDispatcher\n{\n\tprivate listeners:Array<Array<Function>> = new Array<Array<Function>>();\n\tprivate target:any;\n\n\tconstructor(target:any = null)\n\t{\n\t\tthis.target = target || this;\n\t}\n\n\t/**\n\t * Add an event listener\n\t * @method addEventListener\n\t * @param {String} Name of event to add a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tif (this.listeners[ type ] === undefined)\n\t\t\tthis.listeners[ type ] = new Array<Function>();\n\n\t\tif (this.getEventListenerIndex(type, listener) === -1)\n\t\t\tthis.listeners[ type ].push(listener);\n\t}\n\n\t/**\n\t * Remove an event listener\n\t * @method removeEventListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tvar index:number = this.getEventListenerIndex(type, listener);\n\n\t\tif (index !== -1)\n\t\t\tthis.listeners[ type ].splice(index, 1);\n\t}\n\n\t/**\n\t * Dispatch an event\n\t * @method dispatchEvent\n\t * @param {Event} Event to dispatch\n\t */\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\tvar listenerArray:Array<Function> = this.listeners[ event.type ];\n\n\t\tif (listenerArray !== undefined) {\n\t\t\tvar l:number = listenerArray.length;\n\n\t\t\tevent.target = this.target;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tlistenerArray[i](event);\n\t\t}\n\t}\n\n\t/**\n\t * get Event Listener Index in array. Returns -1 if no listener is added\n\t * @method getEventListenerIndex\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tprivate getEventListenerIndex(type:string, listener:Function):number\n\t{\n\t\tif (this.listeners[ type ] !== undefined) {\n\t\t\tvar a:Array<Function> = this.listeners[ type ];\n\t\t\tvar l:number = a.length;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tif (listener == a[i])\n\t\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * check if an object has an event listener assigned to it\n\t * @method hasListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic hasEventListener(type:string, listener?:Function):boolean\n\t{\n\t\tif (listener != null) {\n\t\t\treturn ( this.getEventListenerIndex(type, listener) !== -1 );\n\t\t} else {\n\t\t\tif (this.listeners[ type ] !== undefined)\n\t\t\t\treturn ( this.listeners[ type ].length > 0 );\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = EventDispatcher;",
    "class Event\n{\n\n\tpublic static COMPLETE:string = 'complete';\n\tpublic static OPEN:string = 'open';\n\n\tpublic static ENTER_FRAME:string = 'enterFrame';\n\tpublic static EXIT_FRAME:string = 'exitFrame';\n\n\n\tpublic static RESIZE:string = \"resize\";\n\tpublic static ERROR:string = \"error\";\n\tpublic static CHANGE:string = \"change\";\n\n\t/**\n\t * Type of event\n\t * @property type\n\t * @type String\n\t */\n\tpublic type:string = undefined;\n\n\t/**\n\t * Reference to target object\n\t * @property target\n\t * @type Object\n\t */\n\tpublic target:any = undefined;\n\n\tconstructor(type:string)\n\t{\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new Event(this.type);\n\t}\n}\n\nexport = Event;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.HTTPStatusEvent\n */\nclass HTTPStatusEvent extends Event\n{\n\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\n\n\tpublic status:number;\n\n\tconstructor(type:string, status:number = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis.status = status;\n\n\t}\n}\n\nexport = HTTPStatusEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass IOErrorEvent extends Event\n{\n\n\tpublic static IO_ERROR:string = \"ioError\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = IOErrorEvent;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LoaderEvent extends Event\n{\n\t/**\n\t * Dispatched when a resource and all of its dependencies is retrieved.\n\t */\n\tpublic static RESOURCE_COMPLETE:string = \"resourceComplete\";\n\n\tprivate _url:string;\n\tprivate _content:IAsset;\n\tprivate _assets:IAsset[];\n\n\t/**\n\t * Create a new LoaderEvent object.\n\t *\n\t * @param type The event type.\n\t * @param url The url of the loaded resource.\n\t * @param assets The assets of the loaded resource.\n\t */\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._url = url;\n\t\tthis._content = content;\n\t\tthis._assets = assets;\n\t}\n\n\t/**\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\n\t */\n\tpublic get content():IAsset\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The url of the loaded resource.\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t * The error string on loadError.\n\t */\n\tpublic get assets():IAsset[]\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new LoaderEvent(this.type, this._url, this._content, this._assets);\n\t}\n}\n\nexport = LoaderEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ParserEvent extends Event\n{\n\tprivate _message:string;\n\n\t/**\n\t * Dispatched when parsing of an asset completed.\n\t */\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\n\n\t/**\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\n\t * incorrectly formatted.)\n\t */\n\tpublic static PARSE_ERROR:string = 'parseError';\n\n\n\t/**\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\n\t * This is an internal event that should rarely (if ever) be listened for by\n\t * external classes.\n\t */\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\n\n\n\tconstructor(type:string, message:string = '')\n\t{\n\t\tsuper(type);\n\n\t\tthis._message = message;\n\t}\n\n\n\t/**\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\n\t */\n\tpublic get message():string\n\t{\n\t\treturn this._message;\n\t}\n\n\n\tpublic clone():Event\n\t{\n\t\treturn new ParserEvent(this.type, this.message);\n\t}\n}\n\nexport = ParserEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ProgressEvent extends Event\n{\n\tpublic static PROGRESS:string = \"progress\";\n\n\tpublic bytesLoaded:number;\n\n\tpublic bytesTotal:number;\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = ProgressEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionEvent extends Event\n{\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\n\n\tprivate _projection:IProjection;\n\n\tconstructor(type:string, projection:IProjection)\n\t{\n\t\tsuper(type);\n\t\tthis._projection = projection;\n\t}\n\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n}\n\nexport = ProjectionEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass TimerEvent extends Event\n{\n\n\tpublic static TIMER:string = \"timer\";\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = TimerEvent",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Box object is an area defined by its position, as indicated by its\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\n * height and depth.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n * <code>height</code> <code>depth</code> properties of the Box class are\n * independent of each other; changing the value of one property has no effect\n * on the others. However, the <code>right</code>, <code>bottom</code> and\n * <code>back</code> properties are integrally related to those six\n * properties. For example, if you change the value of the <code>right</code>\n * property, the value of the <code>width</code> property changes; if you\n * change the <code>bottom</code> property, the value of the\n * <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Box objects:</p>\n *\n * <ul>\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\n * </ul>\n *\n * <p>You can use the <code>new Box()</code> constructor to create a\n * Box object.</p>\n *\n * <p><b>Note:</b> The Box class does not define a cubic Shape\n * display object.\n */\nclass Box\n{\n\tprivate _size:Vector3D;\n\tprivate _bottomRightBack:Vector3D;\n\tprivate _topLeftFront:Vector3D;\n\n\t/**\n\t * The height of the box, in pixels. Changing the <code>height</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the box, in pixels. Changing the <code>width</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic depth:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>x</code> property of a Box object has no\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>y</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>z</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>z</code> property is equal to the value of the\n\t * <code>front</code> property.</p>\n\t */\n\tpublic z:number\n\n\t/**\n\t * The sum of the <code>z</code> and <code>height</code> properties.\n\t */\n\tpublic get back():number\n\t{\n\t\treturn this.z + this.depth;\n\t}\n\n\tpublic set back(val:number)\n\t{\n\t\tthis.depth = val - this.z;\n\t}\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\tpublic set bottom(val:number)\n\t{\n\t\tthis.height = val - this.y;\n\t}\n\n\t/**\n\t * The location of the Box object's bottom-right corner, determined by the\n\t * values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRightBack():Vector3D\n\t{\n\t\tif (this._bottomRightBack == null)\n\t\t\tthis._bottomRightBack = new Vector3D();\n\n\t\tthis._bottomRightBack.x = this.x + this.width;\n\t\tthis._bottomRightBack.y = this.y + this.height;\n\t\tthis._bottomRightBack.z = this.z + this.depth;\n\n\t\treturn this._bottomRightBack;\n\t}\n\n\t/**\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>front</code> property of a Box object has no effect on the\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\n\t * properties. However it does affect the <code>depth</code> property,\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\n\t * <code>depth</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get front():number\n\t{\n\t\treturn this.z;\n\t}\n\n\tpublic set front(val:number)\n\t{\n\t\tthis.depth += this.z - val;\n\t\tthis.z = val;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\n\t * <code>left</code> property of a Box object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\tpublic set left(val:number)\n\t{\n\t\tthis.width += this.x - val;\n\t\tthis.x = val;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\tpublic set right(val:number)\n\t{\n\t\tthis.width = val - this.x;\n\t}\n\n\t/**\n\t * The size of the Box object, expressed as a Vector3D object with the\n\t * values of the <code>width</code>, <code>height</code> and\n\t * <code>depth</code> properties.\n\t */\n\tpublic get size():Vector3D\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Vector3D();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\t\tthis._size.z = this.depth;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>top</code> property of a Box object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\tpublic set top(val:number)\n\t{\n\t\tthis.height += (this.y - val);\n\t\tthis.y = val;\n\t}\n\n\t/**\n\t * The location of the Box object's top-left-front corner, determined by the\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\n\t */\n\tpublic get topLeftFront():Vector3D\n\t{\n\t\tif (this._topLeftFront == null)\n\t\t\tthis._topLeftFront = new Vector3D();\n\n\t\tthis._topLeftFront.x = this.x;\n\t\tthis._topLeftFront.y = this.y;\n\t\tthis._topLeftFront.z = this.z;\n\n\t\treturn this._topLeftFront;\n\t}\n\n\t/**\n\t * Creates a new Box object with the top-left-front corner specified by the\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\n\t * parameters. If you call this public without parameters, a box with\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param width  The width of the box, in pixels.\n\t * @param height The height of the box, in pixels.\n\t * @param depth The depth of the box, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = depth;\n\t}\n\n\t/**\n\t * Returns a new Box object with the same values for the <code>x</code>,\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\n\t * and <code>depth</code> properties as the original Box object.\n\t *\n\t * @return A new Box object with the same values for the <code>x</code>,\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\n\t *         <code>height</code> and <code>depth</code> properties as the\n\t *         original Box object.\n\t */\n\tpublic clone():Box\n\t{\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number, z:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object. This method is similar to the\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\n\t * object as a parameter.\n\t *\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\n\t *                 <i>z</i> coordinates.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\n\t}\n\n\t/**\n\t * Determines whether the Box object specified by the <code>box</code>\n\t * parameter is contained within this Box object. A Box object is said to\n\t * contain another if the second Box object falls entirely within the\n\t * boundaries of the first.\n\t *\n\t * @param box The Box object being checked.\n\t * @return A value of <code>true</code> if the Box object that you specify\n\t *         is contained by this Box object; otherwise <code>false</code>.\n\t */\n\tpublic containsBox(box:Box):boolean\n\t{\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\n\t}\n\n\t/**\n\t * Copies all of box data from the source Box object into the calling\n\t * Box object.\n\t *\n\t * @param sourceBox The Box object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceBox:Box)\n\t{\n\t\tthis.x = sourceBox.x;\n\t\tthis.y = sourceBox.y;\n\t\tthis.z = sourceBox.z;\n\t\tthis.width = sourceBox.width;\n\t\tthis.height = sourceBox.height;\n\t\tthis.depth = sourceBox.depth;\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Box object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties of an object against\n\t * the same properties of this Box object.\n\t *\n\t * @param toCompare The box to compare to this Box object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\n\t *         properties as this Box object; otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Box):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\n\t}\n\n\t/**\n\t * Increases the size of the Box object by the specified amounts, in\n\t * pixels. The center point of the Box object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, to\n\t * the top and the bottom by the <code>dy</code> value, and to\n\t * the front and the back by the <code>dz</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the box:\n\t * @param dy The value to be added to the top and the bottom of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           height and position of the box:\n\t * @param dz The value to be added to the front and the back of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           depth and position of the box:\n\t */\n\tpublic inflate(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.z -= dz/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t\tthis.depth += dz/2;\n\t}\n\n\t/**\n\t * Increases the size of the Box object. This method is similar to the\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\n\t *              increase the horizontal dimension of the Box object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Box object.\n\t *              The <code>z</code> property is used to increase the\n\t *              longitudinal dimension of the Box object.\n\t */\n\tpublic inflatePoint(delta:Vector3D)\n\t{\n\t\tthis.x -= delta.x/2;\n\t\tthis.y -= delta.y/2;\n\t\tthis.z -= delta.z/2;\n\t\tthis.width += delta.x/2;\n\t\tthis.height += delta.y/2;\n\t\tthis.depth += delta.z/2;\n\t}\n\n\t/**\n\t * If the Box object specified in the <code>toIntersect</code> parameter\n\t * intersects with this Box object, returns the area of intersection\n\t * as a Box object. If the boxes do not intersect, this method returns an\n\t * empty Box object with its properties set to 0.\n\t *\n\t * @param toIntersect The Box object to compare against to see if it\n\t *                    intersects with this Box object.\n\t * @return A Box object that equals the area of intersection. If the\n\t *         boxes do not intersect, this method returns an empty Box\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\n\t *         <code>depth</code> properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Box):Box\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Box = new Box();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\n\t\t\tif (this.z > toIntersect.z) {\n\t\t\t\ti.z = this.z;\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\n\n\t\t\t\tif (i.depth > this.depth)\n\t\t\t\t\ti.depth = this.depth;\n\t\t\t} else {\n\t\t\t\ti.z = toIntersect.z;\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\n\n\t\t\t\tif (i.depth > toIntersect.depth)\n\t\t\t\t\ti.depth = toIntersect.depth;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Box();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Box object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code>, and <code>depth</code> properties of the specified\n\t * Box object to see if it intersects with this Box object.\n\t *\n\t * @param toIntersect The Box object to compare against this Box object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Box object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Box):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar halfExtentsX:number = this.width/2;\n\t\tvar halfExtentsY:number = this.height/2;\n\t\tvar halfExtentsZ:number = this.depth/2;\n\n\t\tvar centerX:number = this.x + halfExtentsX;\n\t\tvar centerY:number = this.y + halfExtentsY;\n\t\tvar centerZ:number = this.z + halfExtentsZ;\n\n\t\tvar px:number = position.x - centerX;\n\t\tvar py:number = position.y - centerY;\n\t\tvar pz:number = position.z - centerZ;\n\n\t\tvar vx:number = direction.x\n\t\tvar vy:number = direction.y\n\t\tvar vz:number = direction.z;\n\n\t\tvar ix:number;\n\t\tvar iy:number;\n\t\tvar iz:number;\n\t\tvar rayEntryDistance:number;\n\n\t\t// ray-plane tests\n\t\tvar intersects:boolean;\n\t\tif (vx < 0) {\n\t\t\trayEntryDistance = ( halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vx > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = -1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy < 0) {\n\t\t\trayEntryDistance = ( halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = -1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz < 0) {\n\t\t\trayEntryDistance = ( halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = -1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn intersects? rayEntryDistance : -1;\n\t}\n\n\t/**\n\t * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\n\t *\n\t * @param point The point for which to find the closest point on the Box\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\n\t * @return\n\t */\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar p:number;\n\n\t\tif (target == null)\n\t\t\ttarget = new Vector3D();\n\n\t\tp = point.x;\n\t\tif (p < this.x)\n\t\t\tp = this.x;\n\t\tif (p > this.x + this.width)\n\t\t\tp = this.x + this.width;\n\t\ttarget.x = p;\n\n\t\tp = point.y;\n\t\tif (p < this.y + this.height)\n\t\t\tp = this.y + this.height;\n\t\tif (p > this.y)\n\t\t\tp = this.y;\n\t\ttarget.y = p;\n\n\t\tp = point.z;\n\t\tif (p < this.z)\n\t\t\tp = this.z;\n\t\tif (p > this.z + this.depth)\n\t\t\tp = this.z + this.depth;\n\t\ttarget.z = p;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Determines whether or not this Box object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Box object's width, height or\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object, as determined by its\n\t * top-left-front corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object using a Vector3D object as a\n\t * parameter. This method is similar to the <code>Box.offset()</code>\n\t * method, except that it takes a Vector3D object as a parameter.\n\t *\n\t * @param position A Vector3D object to use to offset this Box object.\n\t */\n\tpublic offsetPosition(position:Vector3D)\n\t{\n\t\tthis.x += position.x;\n\t\tthis.y += position.y;\n\t\tthis.z += position.z;\n\t}\n\n\t/**\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\n\t * width, height or depth is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\n\t * <code>depth</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.depth = 0;\n\t}\n\n\t/**\n\t * Sets the members of Box to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param widtha  The width of the box, in pixels.\n\t * @param heighta The height of the box, in pixels.\n\t * @param deptha  The depth of the box, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t\tthis.depth = deptha;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal, vertical and\n\t * longitudinal positions and the width, height and depth of the Box object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\n\t}\n\n\t/**\n\t * Adds two boxes together to create a new Box object, by filling\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\n\t *\n\t * @param toUnion A Box object to add to this Box object.\n\t * @return A new Box object that is the union of the two boxes.\n\t */\n\tpublic union(toUnion:Box):Box\n\t{\n\t\tvar u:Box = new Box();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\tif (this.z < toUnion.z) {\n\t\t\tu.z = this.z;\n\t\t\tu.depth = toUnion.z - this.z + toUnion.depth;\n\n\t\t\tif (u.depth < this.depth)\n\t\t\t\tu.depth = this.depth;\n\t\t} else {\n\t\t\tu.z = toUnion.z;\n\t\t\tu.depth = this.z - toUnion.z + this.depth;\n\n\t\t\tif (u.depth < toUnion.depth)\n\t\t\t\tu.depth = toUnion.depth;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Box;",
    "import ColorUtils\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\n/**\n * The ColorTransform class lets you adjust the color values in a display\n * object. The color adjustment or <i>color transformation</i> can be applied\n * to all four channels: red, green, blue, and alpha transparency.\n *\n * <p>When a ColorTransform object is applied to a display object, a new value\n * for each color channel is calculated like this:</p>\n *\n * <ul>\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\n * <code>redOffset</code></li>\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\n * <code>greenOffset</code></li>\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\n * <code>blueOffset</code></li>\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\n * <code>alphaOffset</code></li>\n * </ul>\n *\n * <p>If any of the color channel values is greater than 255 after the\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\n *\n * <p>You can use ColorTransform objects in the following ways:</p>\n *\n * <ul>\n *   <li>In the <code>colorTransform</code> parameter of the\n * <code>colorTransform()</code> method of the BitmapData class</li>\n *   <li>As the <code>colorTransform</code> property of a Transform object\n * (which can be used as the <code>transform</code> property of a display\n * object)</li>\n * </ul>\n *\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\n * a ColorTransform object before you can call the methods of the\n * ColorTransform object.</p>\n *\n * <p>Color transformations do not apply to the background color of a movie\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\n * that are attached to the movie clip.</p>\n */\nclass ColorTransform\n{\n\t/**\n\t * A decimal value that is multiplied with the alpha transparency channel\n\t * value.\n\t *\n\t * <p>If you set the alpha transparency value of a display object directly by\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\n\t * affects the value of the <code>alphaMultiplier</code> property of that\n\t * display object's <code>transform.colorTransform</code> property.</p>\n\t */\n\tpublic alphaMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the alpha transparency channel\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\n\t * value.\n\t */\n    public alphaOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the blue channel value.\n\t */\n    public blueMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the blue channel value after it\n\t * has been multiplied by the <code>blueMultiplier</code> value.\n\t */\n    public blueOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the green channel value.\n\t */\n    public greenMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the green channel value after\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\n\t */\n    public greenOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the red channel value.\n\t */\n    public redMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the red channel value after it\n\t * has been multiplied by the <code>redMultiplier</code> value.\n\t */\n    public redOffset:number;\n\n\t/**\n\t * The RGB color value for a ColorTransform object.\n\t *\n\t * <p>When you set this property, it changes the three color offset values\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\n\t * multiplier values(<code>redMultiplier</code>,\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\n\t * alpha transparency multiplier and offset values do not change.</p>\n\t *\n\t * <p>When you pass a value for this property, use the format\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\n\t * hexadecimal digits that specify the offset of each color component. The 0x\n\t * tells the ActionScript compiler that the number is a hexadecimal\n\t * value.</p>\n\t */\n\tpublic get color():number\n\t{\n\t\treturn((this.redOffset << 16) | ( this.greenOffset << 8) | this.blueOffset);\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\n\n\t\tthis.redOffset = argb[1];  //(value >> 16) & 0xFF;\n\t\tthis.greenOffset = argb[2];  //(value >> 8) & 0xFF;\n\t\tthis.blueOffset = argb[3];  //value & 0xFF;\n\n\t\tthis.redMultiplier = 0;\n\t\tthis.greenMultiplier = 0;\n\t\tthis.blueMultiplier = 0;\n\t}\n\n\t/**\n\t * Creates a ColorTransform object for a display object with the specified\n\t * color channel values and alpha values.\n\t *\n\t * @param redMultiplier   The value for the red multiplier, in the range from\n\t *                        0 to 1.\n\t * @param greenMultiplier The value for the green multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\n\t *                        the range from 0 to 1.\n\t * @param redOffset       The offset value for the red color channel, in the\n\t *                        range from -255 to 255.\n\t * @param greenOffset     The offset value for the green color channel, in\n\t *                        the range from -255 to 255.\n\t * @param blueOffset      The offset for the blue color channel value, in the\n\t *                        range from -255 to 255.\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\n\t *                        the range from -255 to 255.\n\t */\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\n\t{\n\t\tthis.redMultiplier = redMultiplier;\n\t\tthis.greenMultiplier = greenMultiplier;\n\t\tthis.blueMultiplier = blueMultiplier;\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\t\tthis.redOffset = redOffset;\n\t\tthis.greenOffset = greenOffset;\n\t\tthis.blueOffset = blueOffset;\n\t\tthis.alphaOffset = alphaOffset;\n\t}\n\n    public clear()\n    {\n        this.redMultiplier = 1;\n        this.greenMultiplier = 1;\n        this.blueMultiplier = 1;\n        this.alphaMultiplier = 1;\n        this.redOffset = 0;\n        this.greenOffset = 0;\n        this.blueOffset = 0;\n        this.alphaOffset = 0;\n    }\n\n    public clone():ColorTransform\n    {\n        return new ColorTransform(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n    }\n\n    public copyFrom(source:ColorTransform)\n    {\n        this.redMultiplier = source.redMultiplier;\n        this.greenMultiplier = source.greenMultiplier;\n        this.blueMultiplier = source.blueMultiplier;\n        this.alphaMultiplier = source.alphaMultiplier;\n        this.redOffset = source.redOffset;\n        this.greenOffset = source.greenOffset;\n        this.blueOffset = source.blueOffset;\n        this.alphaOffset = source.alphaOffset;\n    }\n\n    public copyTo(destination:ColorTransform)\n    {\n        destination.copyFrom(this);\n    }\n\n    public prepend(ct:ColorTransform)\n    {\n        this.redOffset += ct.redOffset * this.redMultiplier;\n        this.greenOffset += ct.greenOffset * this.greenMultiplier;\n        this.blueOffset += ct.blueOffset * this.blueMultiplier;\n        this.alphaOffset += ct.alphaOffset * this.alphaMultiplier;\n\n        this.redMultiplier *= ct.redMultiplier;\n        this.greenMultiplier *= ct.greenMultiplier;\n        this.blueMultiplier *= ct.blueMultiplier;\n        this.alphaMultiplier *= ct.alphaMultiplier;\n    }\n}\n\nexport = ColorTransform;",
    "/**\n* MathConsts provides some commonly used mathematical constants\n*/\nclass MathConsts\n{\n\t/**\n\t * The amount to multiply with when converting radians to degrees.\n\t */\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\n\n\t/**\n\t * The amount to multiply with when converting degrees to radians.\n\t */\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\n}\n\nexport = MathConsts;",
    "import Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\n/**\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\n */\nclass Matrix3DUtils\n{\n\t/**\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\n\t */\n\tpublic static RAW_DATA_CONTAINER:Float32Array = new Float32Array(16);\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\n\t *\n\t * @param    quarternion    The quarterion object to convert.\n\t */\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\n\t{\n\t\tvar x:number = quarternion.x;\n\t\tvar y:number = quarternion.y;\n\t\tvar z:number = quarternion.z;\n\t\tvar w:number = quarternion.w;\n\n\t\tvar xx:number = x*x;\n\t\tvar xy:number = x*y;\n\t\tvar xz:number = x*z;\n\t\tvar xw:number = x*w;\n\n\t\tvar yy:number = y*y;\n\t\tvar yz:number = y*z;\n\t\tvar yw:number = y*w;\n\n\t\tvar zz:number = z*z;\n\t\tvar zw:number = z*w;\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\traw[0] = 1 - 2*(yy + zz);\n\t\traw[1] = 2*(xy + zw);\n\t\traw[2] = 2*(xz - yw);\n\t\traw[4] = 2*(xy - zw);\n\t\traw[5] = 1 - 2*(xx + zz);\n\t\traw[6] = 2*(yz + xw);\n\t\traw[8] = 2*(xz + yw);\n\t\traw[9] = 2*(yz - xw);\n\t\traw[10] = 1 - 2*(xx + yy);\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tif (m) {\n\t\t\tm.copyRawDataFrom(raw);\n\t\t\treturn m;\n\t\t} else\n\t\t\treturn new Matrix3D(raw);\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the forward vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The forward vector\n\t */\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(2, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the up vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The up vector\n\t */\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(1, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the right vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The right vector\n\t */\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(0, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\n\t */\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\n\t{\n\t\tvar r1:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar r2:Float32Array = m2.rawData;\n\t\tm1.copyRawDataTo(r1);\n\n\t\tfor (var i:number = 0; i < 16; ++i) {\n\t\t\tif (r1[i] != r2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D)\n\t{\n\t\tvar dirN:Vector3D;\n\t\tvar upN:Vector3D;\n\t\tvar lftN:Vector3D;\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tlftN = dir.crossProduct(up);\n\t\tlftN.normalize();\n\n\t\tupN = lftN.crossProduct(dir);\n\t\tupN.normalize();\n\t\tdirN = dir.clone();\n\t\tdirN.normalize();\n\n\t\traw[0] = lftN.x;\n\t\traw[1] = upN.x;\n\t\traw[2] = -dirN.x;\n\t\traw[3] = 0.0;\n\n\t\traw[4] = lftN.y;\n\t\traw[5] = upN.y;\n\t\traw[6] = -dirN.y;\n\t\traw[7] = 0.0;\n\n\t\traw[8] = lftN.z;\n\t\traw[9] = upN.z;\n\t\traw[10] = -dirN.z;\n\t\traw[11] = 0.0;\n\n\t\traw[12] = -lftN.dotProduct(pos);\n\t\traw[13] = -upN.dotProduct(pos);\n\t\traw[14] = dirN.dotProduct(pos);\n\t\traw[15] = 1.0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target === null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar ab2:number = -2*a*b;\n\t\tvar ac2:number = -2*a*c;\n\t\tvar bc2:number = -2*b*c;\n\t\t// reflection matrix\n\t\trawData[0] = 1 - 2*a*a;\n\t\trawData[4] = ab2;\n\t\trawData[8] = ac2;\n\t\trawData[12] = -2*a*d;\n\t\trawData[1] = ab2;\n\t\trawData[5] = 1 - 2*b*b;\n\t\trawData[9] = bc2;\n\t\trawData[13] = -2*b*d;\n\t\trawData[2] = ac2;\n\t\trawData[6] = bc2;\n\t\trawData[10] = 1 - 2*c*c;\n\t\trawData[14] = -2*c*d;\n\t\trawData[3] = 0;\n\t\trawData[7] = 0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar d:number = raw[12];\n\t\tvar h:number = raw[13];\n\t\tvar l:number = raw[14];\n\t\tvar p:number = raw[15];\n\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z + d;\n\t\tresult.y = e * x + f * y + g * z + h;\n\t\tresult.z = i * x + j * y + k * z + l;\n\t\tresult.w = m * x + n * y + o * z + p;\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z;\n\t\tresult.y = e * x + f * y + g * z;\n\t\tresult.z = i * x + j * y + k * z;\n\t\tresult.w = m * x + n * y + o * z;\n\t\treturn result;\n\t}\n\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif(!result)\n\t\t\tresult = new Vector3D();\n\n\t\ttransform.copyColumnTo(3, result);\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar outIndex:number = 0;\n\t\tvar length:number = vin.length;\n\t\tfor(var index:number = 0; index<length; index+=3) {\n\t\t\tvar x:number = vin[index];\n\t\t\tvar y:number = vin[index+1];\n\t\t\tvar z:number = vin[index+2];\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\n\t\t}\n\t}\n}\n\nexport = Matrix3DUtils;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Orientation3D\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\nclass Matrix3D\n{\n\t/**\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\n\t *\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\n\t * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\n\t */\n\tpublic rawData:Float32Array = new Float32Array(16);\n\n\tprivate static tempMatrix:Matrix3D = new Matrix3D();\n\tprivate static tempRawData:Float32Array = Matrix3D.tempMatrix.rawData;\n\n\tprivate _position:Vector3D;\n\n\tprivate _components:Array<Vector3D>;\n\n\t/**\n\t * Creates a Matrix3D object.\n\t */\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tif (v != null && v.length == 16) {\n\t\t\tthis.copyRawDataFrom(v);\n\t\t} else {\n\t\t\tthis.identity();\n\t\t}\n\t}\n\n\t/**\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\n\t */\n\tpublic append(lhs:Matrix3D)\n\t{\n\t\tvar lrd:Float32Array = lhs.rawData;\n\n\t\tvar m111:number = this.rawData[0];\n\t\tvar m112:number = this.rawData[1];\n\t\tvar m113:number = this.rawData[2];\n\t\tvar m114:number = this.rawData[3];\n\t\tvar m121:number = this.rawData[4];\n\t\tvar m122:number = this.rawData[5];\n\t\tvar m123:number = this.rawData[6];\n\t\tvar m124:number = this.rawData[7];\n\t\tvar m131:number = this.rawData[8];\n\t\tvar m132:number = this.rawData[9];\n\t\tvar m133:number = this.rawData[10];\n\t\tvar m134:number = this.rawData[11];\n\t\tvar m141:number = this.rawData[12];\n\t\tvar m142:number = this.rawData[13];\n\t\tvar m143:number = this.rawData[14];\n\t\tvar m144:number = this.rawData[15];\n\t\tvar m211:number = lrd[0];\n\t\tvar m212:number = lrd[1];\n\t\tvar m213:number = lrd[2];\n\t\tvar m214:number = lrd[3];\n\t\tvar m221:number = lrd[4];\n\t\tvar m222:number = lrd[5];\n\t\tvar m223:number = lrd[6];\n\t\tvar m224:number = lrd[7];\n\t\tvar m231:number = lrd[8];\n\t\tvar m232:number = lrd[9];\n\t\tvar m233:number = lrd[10];\n\t\tvar m234:number = lrd[11];\n\t\tvar m241:number = lrd[12];\n\t\tvar m242:number = lrd[13];\n\t\tvar m243:number = lrd[14];\n\t\tvar m244:number = lrd[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Appends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null )\n\t{\n\t\tthis.append(Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees));\n\t}\n\n\t/**\n\t * Appends an incremental skew change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendSkew(xSkew:number, ySkew:number, zSkew:number)\n\t{\n\t\tif(xSkew == 0 && ySkew == 0 && zSkew == 0) return;\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\traw[0] = 1;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = xSkew;\n\t\traw[5] = 1;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = ySkew;\n\t\traw[9] = zSkew;\n\t\traw[10] = 1;\n\t\traw[11] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = 0;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.append(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\n\t\t\treturn;\n\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = xScale;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = yScale;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = zScale;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.append(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic appendTranslation(x:number, y:number, z:number)\n\t{\n\t\tthis.rawData[12] += x;\n\t\tthis.rawData[13] += y;\n\t\tthis.rawData[14] += z;\n\t}\n\n\t/**\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\n\t */\n\tpublic clone():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.rawData);\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\n\t */\n\tpublic copyFrom(sourceMatrix3D:Matrix3D)\n\t{\n\t\tvar sourceRaw:Float32Array = sourceMatrix3D.rawData;\n\t\tvar len:number = sourceRaw.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = sourceRaw[c];\n\t}\n\n\tpublic copyRawDataFrom(vector:Float32Array, index:number = 0, transpose:boolean = false):void\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = vector.length - index;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = vector[c + index];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\tpublic copyRawDataTo(vector:Float32Array, index:number = 0, transpose:boolean = false)\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = this.rawData.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tvector[c + index ] = this.rawData[c];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies this Matrix3D object into a destination Matrix3D object.\n\t */\n\tpublic copyToMatrix3D(dest:Matrix3D)\n\t{\n\t\tthis.copyRawDataTo(dest.rawData);\n\t}\n\n\t/**\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\n\t */\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\n\t{\n\t\tvar q:Quaternion;\n\n\t\tif (this._components == null)\n\t\t\tthis._components = [new Vector3D(), new Vector3D(), new Vector3D(), new Vector3D()];\n\n\t\tvar colX:Vector3D = new Vector3D(this.rawData[0], this.rawData[1], this.rawData[2]);\n\t\tvar colY:Vector3D = new Vector3D(this.rawData[4], this.rawData[5], this.rawData[6]);\n\t\tvar colZ:Vector3D = new Vector3D(this.rawData[8], this.rawData[9], this.rawData[10]);\n\n\t\tvar pos:Vector3D = this._components[0];\n\t\tpos.x = this.rawData[12];\n\t\tpos.y = this.rawData[13];\n\t\tpos.z = this.rawData[14];\n\n\t\tvar scale:Vector3D = this._components[3];\n\t\tvar skew:Vector3D = this._components[2];\n\n\t\t//compute X scale factor and normalise colX\n\t\tscale.x = colX.length;\n\t\tcolX.scaleBy(1/scale.x);\n\n\t\t//compute XY shear factor and make colY orthogonal to colX\n\t\tskew.x = colX.dotProduct(colY);\n\t\tcolY = Vector3D.combine(colY, colX, 1, -skew.x);\n\n\t\t//compute Y scale factor and normalise colY\n\t\tscale.y = colY.length;\n\t\tcolY.scaleBy(1/scale.y);\n\t\tskew.x /= scale.y;\n\n\t\t//compute XZ and YZ shears and make colZ orthogonal to colX and colY\n\t\tskew.y = colX.dotProduct(colZ);\n\t\tcolZ = Vector3D.combine(colZ, colX, 1, -skew.y);\n\t\tskew.z = colY.dotProduct(colZ);\n\t\tcolZ = Vector3D.combine(colZ, colY, 1, -skew.z);\n\n\t\t//compute Z scale and normalise colZ\n\t\tscale.z = colZ.length;\n\t\tcolZ.scaleBy(1/scale.z);\n\t\tskew.y /= scale.z;\n\t\tskew.z /= scale.z;\n\n\t\t//at this point, the matrix (in cols) is orthonormal\n\t\t//check for a coordinate system flip. If the determinant is -1, negate the z scaling factor\n\t\tif (colX.dotProduct(colY.crossProduct(colZ)) < 0) {\n\t\t\tscale.z = -scale.z;\n\t\t\tcolZ.x = -colZ.x;\n\t\t\tcolZ.y = -colZ.y;\n\t\t\tcolZ.z = -colZ.z;\n\t\t}\n\n\t\tvar rot = this._components[1];\n\n\t\tswitch (orientationStyle) {\n\t\t\tcase Orientation3D.AXIS_ANGLE:\n\n\t\t\t\trot.w = Math.acos((colX.x + colY.y + colZ.z - 1)/2);\n\n\t\t\t\tvar len:number = Math.sqrt((colY.z - colZ.y)*(colY.z - colZ.y) + (colZ.x - colX.z)*(colZ.x - colX.z) + (colX.y - colY.x)*(colX.y - colY.x));\n\t\t\t\trot.x = (colY.z - colZ.y)/len;\n\t\t\t\trot.y = (colZ.x - colX.z)/len;\n\t\t\t\trot.z = (colX.y - colY.x)/len;\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.QUATERNION:\n\n\t\t\t\tvar tr = colX.x + colY.y + colZ.z;\n\n\t\t\t\tif (tr > 0) {\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\n\n\t\t\t\t\trot.x = (colY.z - colZ.y)/(4*rot.w);\n\t\t\t\t\trot.y = (colZ.x - colX.z)/(4*rot.w);\n\t\t\t\t\trot.z = (colX.y - colY.x)/(4*rot.w);\n\t\t\t\t} else if ((colX.x > colY.y) && (colX.x > colZ.z)) {\n\t\t\t\t\trot.x = Math.sqrt(1 + colX.x - colY.y - colZ.z)/2;\n\n\t\t\t\t\trot.w = (colY.z - colZ.y)/(4*rot.x);\n\t\t\t\t\trot.y = (colX.y + colY.x)/(4*rot.x);\n\t\t\t\t\trot.z = (colZ.x + colX.z)/(4*rot.x);\n\t\t\t\t} else if (colY.y > colZ.z) {\n\t\t\t\t\trot.y = Math.sqrt(1 + colY.y - colX.x - colZ.z)/2;\n\n\t\t\t\t\trot.x = (colX.y + colY.x)/(4*rot.y);\n\t\t\t\t\trot.w = (colZ.x - colX.z)/(4*rot.y);\n\t\t\t\t\trot.z = (colY.z + colZ.y)/(4*rot.y);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = Math.sqrt(1 + colZ.z - colX.x - colY.y)/2;\n\n\t\t\t\t\trot.x = (colZ.x + colX.z)/(4*rot.z);\n\t\t\t\t\trot.y = (colY.z + colZ.y)/(4*rot.z);\n\t\t\t\t\trot.w = (colX.y - colY.x)/(4*rot.z);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\n\t\t\t\trot.y = Math.asin(-colX.z);\n\n\t\t\t\t//var cos:number = Math.cos(rot.y);\n\n\t\t\t\tif (colX.z != 1 && colX.z != -1) {\n\t\t\t\t\trot.x = Math.atan2(colY.z, colZ.z);\n\t\t\t\t\trot.z = Math.atan2(colX.y, colX.x);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = 0;\n\t\t\t\t\trot.x = Math.atan2(colY.x, colY.y);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn this._components;\n\t}\n\n\t/**\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\n\t * coordinate to another.\n\t */\n\tpublic deltaTransformVector(v:Vector3D, t:Vector3D = null):Vector3D\n\t{\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\tif (!t)\n\t\t\tt = new Vector3D();\n\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8];\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9];\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10];\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11];\n\n\t\treturn t;\n\t}\n\n\t/**\n\t * Converts the current matrix to an identity or unit matrix.\n\t */\n\tpublic identity()\n\t{\n\t\tthis.rawData[0] = 1;\n\t\tthis.rawData[1] = 0;\n\t\tthis.rawData[2] = 0;\n\t\tthis.rawData[3] = 0;\n\t\tthis.rawData[4] = 0;\n\t\tthis.rawData[5] = 1;\n\t\tthis.rawData[6] = 0;\n\t\tthis.rawData[7] = 0;\n\t\tthis.rawData[8] = 0;\n\t\tthis.rawData[9] = 0;\n\t\tthis.rawData[10] = 1;\n\t\tthis.rawData[11] = 0;\n\t\tthis.rawData[12] = 0;\n\t\tthis.rawData[13] = 0;\n\t\tthis.rawData[14] = 0;\n\t\tthis.rawData[15] = 1;\n\t}\n\n\t/**\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\n\t */\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\n\t */\n\tpublic interpolateTo(toMat:Matrix3D, percent:number)\n\t{\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\n\t}\n\n\t/**\n\t * Inverts the current matrix.\n\t */\n\tpublic invert():boolean\n\t{\n\t\tvar d = this.determinant;\n\t\tvar invertable:boolean = Math.abs(d) > 0.00000000001;\n\n\t\tif (invertable) {\n\t\t\td = 1/d;\n\t\t\tvar m11:number = this.rawData[0];\n\t\t\tvar m12:number = this.rawData[1];\n\t\t\tvar m13:number = this.rawData[2];\n\t\t\tvar m14:number = this.rawData[3];\n\t\t\tvar m21:number = this.rawData[4];\n\t\t\tvar m22:number = this.rawData[5];\n\t\t\tvar m23:number = this.rawData[6];\n\t\t\tvar m24:number = this.rawData[7];\n\t\t\tvar m31:number = this.rawData[8];\n\t\t\tvar m32:number = this.rawData[9];\n\t\t\tvar m33:number = this.rawData[10];\n\t\t\tvar m34:number = this.rawData[11];\n\t\t\tvar m41:number = this.rawData[12];\n\t\t\tvar m42:number = this.rawData[13];\n\t\t\tvar m43:number = this.rawData[14];\n\t\t\tvar m44:number = this.rawData[15];\n\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\n\t\t}\n\t\treturn invertable;\n\t}\n\n\t/* TODO implement pointAt\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\n\t {\n\t }\n\t */\n\n\t/**\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\n\t */\n\tpublic prepend(rhs:Matrix3D)\n\t{\n\t\tvar m111:number = rhs.rawData[0];\n\t\tvar m112:number = rhs.rawData[1];\n\t\tvar m113:number = rhs.rawData[2];\n\t\tvar m114:number = rhs.rawData[3];\n\t\tvar m121:number = rhs.rawData[4];\n\t\tvar m122:number = rhs.rawData[5];\n\t\tvar m123:number = rhs.rawData[6];\n\t\tvar m124:number = rhs.rawData[7];\n\t\tvar m131:number = rhs.rawData[8];\n\t\tvar m132:number = rhs.rawData[9];\n\t\tvar m133:number = rhs.rawData[10];\n\t\tvar m134:number = rhs.rawData[11];\n\t\tvar m141:number = rhs.rawData[12];\n\t\tvar m142:number = rhs.rawData[13];\n\t\tvar m143:number = rhs.rawData[14];\n\t\tvar m144:number = rhs.rawData[15];\n\n\t\tvar m211:number = this.rawData[0];\n\t\tvar m212:number = this.rawData[1];\n\t\tvar m213:number = this.rawData[2];\n\t\tvar m214:number = this.rawData[3];\n\t\tvar m221:number = this.rawData[4];\n\t\tvar m222:number = this.rawData[5];\n\t\tvar m223:number = this.rawData[6];\n\t\tvar m224:number = this.rawData[7];\n\t\tvar m231:number = this.rawData[8];\n\t\tvar m232:number = this.rawData[9];\n\t\tvar m233:number = this.rawData[10];\n\t\tvar m234:number = this.rawData[11];\n\t\tvar m241:number = this.rawData[12];\n\t\tvar m242:number = this.rawData[13];\n\t\tvar m243:number = this.rawData[14];\n\t\tvar m244:number = this.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Prepends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\t/*\n\t\t if ( pivot != null )\n\t\t {\n\t\t var p:Vector3D = pivot;\n\t\t m.appendTranslation( p.x, p.y, p.z );\n\t\t }\n\t\t */\n\t\tthis.prepend(m);\n\t}\n\n\t/**\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic prependScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\n\t\t\treturn;\n\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = xScale;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = yScale;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = zScale;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.prepend(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic prependTranslation(x:number, y:number, z:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = 1;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = 1;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = 1;\n\t\traw[11] = 0;\n\n\t\traw[12] = x;\n\t\traw[13] = y;\n\t\traw[14] = z;\n\t\traw[15] = 1;\n\n\t\tthis.prepend(Matrix3D.tempMatrix);\n\t}\n\n\t// TODO orientationStyle\n\t/**\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\n\t */\n\tpublic recompose(components:Vector3D[]):boolean\n\t{\n\t\tif (components.length < 3)\n\t\t\treturn false;\n\n\t\tthis.identity();\n\t\tvar scale:Vector3D = components[3];\n\t\tif(scale.x !=1 || scale.y != 1 || scale.z != 1) this.appendScale(scale.x, scale.y, scale.z);\n\n\t\tvar skew:Vector3D = components[2];\n\t\tif(skew.x !=0 || skew.y != 0 || skew.z != 0)\tthis.appendSkew(skew.x, skew.y, skew.z);\n\n\t\tvar angle:number;\n\t\tvar rotation:Vector3D = components[1];\n\t\tangle = -rotation.x;\n\t\tif(angle != 0){\n\t\t\tvar sin:number = Math.sin(angle);\n\t\t\tvar cos:number = Math.cos(angle);\n\t\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\t\traw[0] = 1;\n\t\t\traw[1] = 0;\n\t\t\traw[2] = 0;\n\t\t\traw[3] = 0;\n\n\t\t\traw[4] = 0;\n\t\t\traw[5] = cos;\n\t\t\traw[6] = -sin;\n\t\t\traw[7] = 0;\n\n\t\t\traw[8] = 0;\n\t\t\traw[9] = sin;\n\t\t\traw[10] = cos;\n\t\t\traw[11] = 0;\n\n\t\t\traw[12] = 0;\n\t\t\traw[13] = 0;\n\t\t\traw[14] = 0;\n\t\t\traw[15] = 0;\n\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t}\n\t\tangle = -rotation.y;\n\t\tif(angle != 0){\n\t\t\tsin = Math.sin(angle);\n\t\t\tcos = Math.cos(angle);\n\t\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\t\traw[0] = cos;\n\t\t\traw[1] = 0;\n\t\t\traw[2] = sin;\n\t\t\traw[3] = 0;\n\n\t\t\traw[4] = 0;\n\t\t\traw[5] = 1;\n\t\t\traw[6] = 0;\n\t\t\traw[7] = 0;\n\n\t\t\traw[8] = -sin;\n\t\t\traw[9] = 0;\n\t\t\traw[10] = cos;\n\t\t\traw[11] = 0;\n\n\t\t\traw[12] = 0;\n\t\t\traw[13] = 0;\n\t\t\traw[14] = 0;\n\t\t\traw[15] = 0;\n\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t}\n\t\tangle = -rotation.z;\n\t\tif(angle != 0){\n\t\t\tsin = Math.sin(angle);\n\t\t\tcos = Math.cos(angle);\n\n\t\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\t\traw[0] = cos;\n\t\t\traw[1] = -sin;\n\t\t\traw[2] = 0;\n\t\t\traw[3] = 0;\n\n\t\t\traw[4] = sin;\n\t\t\traw[5] = cos;\n\t\t\traw[6] = 0;\n\t\t\traw[7] = 0;\n\n\t\t\traw[8] = 0;\n\t\t\traw[9] = 0;\n\t\t\traw[10] = 1;\n\t\t\traw[11] = 0;\n\n\t\t\traw[12] = 0;\n\t\t\traw[13] = 0;\n\t\t\traw[14] = 0;\n\t\t\traw[15] = 0;\n\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t}\n\n\t\tthis.position = components[0];\n\t\tthis.rawData[15] = 1;\n\n\t\treturn true;\n\t}\n\n\tpublic transformVector(v:Vector3D, t:Vector3D = null):Vector3D\n\t{\n\t\tif (v == null)\n\t\t\treturn t || new Vector3D();\n\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\tif (!t)\n\t\t\tt = new Vector3D();\n\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15];\n\n\t\treturn t;\n\t}\n\n\tpublic transformBox(b:Box, t:Box = null):Box\n\t{\n\t\tif (b == null)\n\t\t\treturn t || new Box();\n\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tmaxX = b.width + (minX = b.x);\n\t\tmaxY = b.height + (minY = b.y);\n\t\tmaxZ = b.depth + (minZ = b.z);\n\n\t\tif (!t)\n\t\t\tt = new Box();\n\n\t\t//TODO: take account of shear\n\t\tt.width = maxX*this.rawData[0] + maxY*this.rawData[4] + maxZ*this.rawData[8] + this.rawData[12] - (t.x = minX*this.rawData[0] + minY*this.rawData[4] + minZ*this.rawData[8] + this.rawData[12]);\n\t\tt.height = maxX*this.rawData[1] + maxY*this.rawData[5] + maxZ*this.rawData[9] + this.rawData[13] - (t.y = minX*this.rawData[1] + minY*this.rawData[5] + minZ*this.rawData[9] + this.rawData[13]);\n\t\tt.depth = maxX*this.rawData[2] + maxY*this.rawData[6] + maxZ*this.rawData[10] + this.rawData[14] - (t.z = minX*this.rawData[2] + minY*this.rawData[6] + minZ*this.rawData[10] + this.rawData[14]);\n\n\t\treturn t;\n\t}\n\n\t/**\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\n\t */\n\tpublic transformVectors(vin:number[], vout:number[])\n\t{\n\t\tvar i:number = 0;\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\n\n\t\twhile (i + 3 <= vin.length) {\n\t\t\tx = vin[i];\n\t\t\ty = vin[i + 1];\n\t\t\tz = vin[i + 2];\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\n\t */\n\tpublic transpose()\n\t{\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\tthis.copyRawDataTo(raw);\n\n\t\tthis.rawData[1] = raw[4];\n\t\tthis.rawData[2] = raw[8];\n\t\tthis.rawData[3] = raw[12];\n\t\tthis.rawData[4] = raw[1];\n\t\tthis.rawData[6] = raw[9];\n\t\tthis.rawData[7] = raw[13];\n\t\tthis.rawData[8] = raw[2];\n\t\tthis.rawData[9] = raw[6];\n\t\tthis.rawData[11] = raw[14];\n\t\tthis.rawData[12] = raw[3];\n\t\tthis.rawData[13] = raw[7];\n\t\tthis.rawData[14] = raw[11];\n\t}\n\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\n\t{\n\n\t\t// internal class use by rotations which have been tested\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tvar rad = degrees*( Math.PI/180 );\n\t\tvar c:number = Math.cos(rad);\n\t\tvar s:number = Math.sin(rad);\n\t\tvar t:number = 1 - c;\n\t\tvar tmp1:number, tmp2:number;\n\n\t\tm.rawData[0] = c + x*x*t;\n\t\tm.rawData[5] = c + y*y*t;\n\t\tm.rawData[10] = c + z*z*t;\n\n\t\ttmp1 = x*y*t;\n\t\ttmp2 = z*s;\n\t\tm.rawData[1] = tmp1 + tmp2;\n\t\tm.rawData[4] = tmp1 - tmp2;\n\t\ttmp1 = x*z*t;\n\t\ttmp2 = y*s;\n\t\tm.rawData[8] = tmp1 + tmp2;\n\t\tm.rawData[2] = tmp1 - tmp2;\n\t\ttmp1 = y*z*t;\n\t\ttmp2 = x*s;\n\t\tm.rawData[9] = tmp1 - tmp2;\n\t\tm.rawData[6] = tmp1 + tmp2;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * [read-only] A Number that determines whether a matrix is invertible.\n\t */\n\tpublic get determinant():number\n\t{\n\t\treturn ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\n\t}\n\n\t/**\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\n\t * transformation's frame of reference.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\tif (this._position == null)\n\t\t\tthis._position = new Vector3D();\n\n\t\tthis._position.x = this.rawData[12];\n\t\tthis._position.y = this.rawData[13];\n\t\tthis._position.z = this.rawData[14];\n\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis.rawData[12] = value.x;\n\t\tthis.rawData[13] = value.y;\n\t\tthis.rawData[14] = value.z;\n\t}\n\n\tpublic toFixed(decimalPlace:number):string\n\t{\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\n\t}\n}\n\nexport = Matrix3D;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\n/**\n * The Matrix class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n *\n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n *\n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n *\n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n *\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n *\n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n *\n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n *\n * <p>The Matrix class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n *\n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n *\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nclass Matrix\n{\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic d:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>x</i> axis.\n\t */\n\tpublic tx:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>y</i> axis.\n\t */\n\tpublic ty:number;\n\n\t/**\n\t * Creates a new Matrix object with the specified parameters. In matrix\n\t * notation, the properties are organized like this:\n\t *\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n\t * constructor, it creates an <i>identity matrix</i> with the following\n\t * values:</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @return A Matrix object.\n\t */\n\tpublic clone():Matrix\n\t{\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Concatenates a matrix with the current matrix, effectively combining the\n\t * geometric effects of the two. In mathematical terms, concatenating two\n\t * matrixes is the same as combining them using matrix multiplication.\n\t *\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n\t *\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\n\t * you want to concatenate two matrixes without altering either of the two\n\t * source matrixes, first copy the source matrix by using the\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\n\t *\n\t * @param matrix The matrix to be concatenated to the source matrix.\n\t */\n\tpublic concat(matrix:Matrix):void\n\t{\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\n\t * object.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t} else if (column == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (column == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix object into the Vector3D\n\t * object. The w element of the Vector3D object will not be changed.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\n\t\t} else if (column == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.c;\n\t\t\tvector3D.z = 0;\n\t\t} else if (column == 1) {\n\t\t\tvector3D.x = this.b;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = 0;\n\t\t} else {\n\t\t\tvector3D.x = this.tx;\n\t\t\tvector3D.y = this.ty;\n\t\t\tvector3D.z = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Point object into the\n\t * calling Matrix object.\n\t *\n\t * @param sourceMatrix The Matrix object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceMatrix:Matrix):void\n\t{\n\t\tthis.a = sourceMatrix.a;\n\t\tthis.b = sourceMatrix.b;\n\t\tthis.c = sourceMatrix.c;\n\t\tthis.d = sourceMatrix.d;\n\t\tthis.tx = sourceMatrix.tx;\n\t\tthis.ty = sourceMatrix.ty;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (row == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\n\t * The w element of the Vector3D object will not be changed.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.b;\n\t\t\tvector3D.z = this.tx;\n\t\t} else if (row == 1) {\n\t\t\tvector3D.x = this.c;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = this.ty;\n\t\t} else {\n\t\t\tvector3D.setTo(0, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Includes parameters for scaling, rotation, and translation. When applied\n\t * to a matrix it sets the matrix's values based on those parameters.\n\t *\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\n\t * matrix as you would if you applied the <code>identity()</code>,\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n\t * 100, 100)</code> has the same effect as the following:</p>\n\t *\n\t * @param scaleX   The factor by which to scale horizontally.\n\t * @param scaleY   The factor by which scale vertically.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The number of pixels to translate(move) to the right\n\t *                 along the <i>x</i> axis.\n\t * @param ty       The number of pixels to translate(move) down along the\n\t *                 <i>y</i> axis.\n\t */\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = scaleX;\n\t\tthis.d = scaleY;\n\t\tthis.b = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Creates the specific style of matrix expected by the\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n\t * methods of the Graphics class. Width and height are scaled to a\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\n\t * height.\n\t *\n\t * <p>For example, consider a gradient with the following\n\t * characteristics:</p>\n\t *\n\t * <ul>\n\t *   <li><code>GradientType.LINEAR</code></li>\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n\t * 255]</code></li>\n\t *   <li><code>SpreadMethod.PAD</code></li>\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n\t * </ul>\n\t *\n\t * <p>The following illustrations show gradients in which the matrix was\n\t * defined using the <code>createGradientBox()</code> method with different\n\t * parameter settings:</p>\n\t *\n\t * @param width    The width of the gradient box.\n\t * @param height   The height of the gradient box.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The distance, in pixels, to translate to the right along\n\t *                 the <i>x</i> axis. This value is offset by half of the\n\t *                 <code>width</code> parameter.\n\t * @param ty       The distance, in pixels, to translate down along the\n\t *                 <i>y</i> axis. This value is offset by half of the\n\t *                 <code>height</code> parameter.\n\t */\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = width/1638.4;\n\t\tthis.d = height/1638.4;\n\n\t\tif (rotation != 0.0) {\n\t\t\tvar cos = Math.cos(rotation);\n\t\t\tvar sin = Math.sin(rotation);\n\n\t\t\tthis.b = sin*this.d;\n\t\t\tthis.c = -sin*this.a;\n\t\t\tthis.a *= cos;\n\t\t\tthis.d *= cos;\n\t\t} else {\n\t\t\tthis.b = this.c = 0;\n\t\t}\n\n\t\tthis.tx = tx + width/2;\n\t\tthis.ty = ty + height/2;\n\t}\n\n\t/**\n\t * Given a point in the pretransform coordinate space, returns the\n\t * coordinates of that point after the transformation occurs. Unlike the\n\t * standard transformation applied using the <code>transformPoint()</code>\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\n\t * does not consider the translation parameters <code>tx</code> and\n\t * <code>ty</code>.\n\t *\n\t * @param point The point for which you want to get the result of the matrix\n\t *              transformation.\n\t * @return The point resulting from applying the matrix transformation.\n\t */\n\tpublic deltaTransformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\n\t}\n\n\t/**\n\t * Sets each matrix property to a value that causes a null transformation. An\n\t * object transformed by applying an identity matrix will be identical to the\n\t * original.\n\t *\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n\t * <code>ty</code>=0.</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t */\n\tpublic identity():void\n\t{\n\t\tthis.a = 1;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 1;\n\t\tthis.tx = 0;\n\t\tthis.ty = 0;\n\t}\n\n\t/**\n\t * Performs the opposite transformation of the original matrix. You can apply\n\t * an inverted matrix to an object to undo the transformation performed when\n\t * applying the original matrix.\n\t */\n\tpublic invert():void\n\t{\n\t\tvar norm = this.a*this.d - this.b*this.c;\n\n\t\tif (norm == 0) {\n\t\t\tthis.a = this.b = this.c = this.d = 0;\n\t\t\tthis.tx = -this.tx;\n\t\t\tthis.ty = -this.ty;\n\t\t} else {\n\t\t\tnorm = 1.0/norm;\n\t\t\tvar a1 = this.d*norm;\n\t\t\tthis.d = this.a*norm;\n\t\t\tthis.a = a1;\n\t\t\tthis.b *= -norm;\n\t\t\tthis.c *= -norm;\n\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\n\t\t\tthis.tx = tx1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @param matrix The matrix for which you want to get the result of the matrix\n\t *               transformation.\n\t * @return A Matrix object.\n\t */\n\tpublic multiply(matrix:Matrix):Matrix\n\t{\n\t\tvar result = new Matrix();\n\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Applies a rotation transformation to the Matrix object.\n\t *\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n\t * Matrix object. In matrix notation, this is the same as concatenating the\n\t * current matrix with the following:</p>\n\t *\n\t * @param angle The rotation angle in radians.\n\t */\n\tpublic rotate(angle:number):void\n\t{\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\n\t\tvar a1 = this.a*cos - this.b*sin;\n\t\tthis.b = this.a*sin + this.b*cos;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*cos - this.d*sin;\n\t\tthis.d = this.c*sin + this.d*cos;\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\n\t\tthis.ty = this.tx*sin + this.ty*cos;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n\t * <code>sy</code>.\n\t *\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\n\t * is the same as concatenating the current matrix with the following\n\t * matrix:</p>\n\t *\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\n\t */\n\tpublic scale(sx:number, sy:number):void\n\t{\n\t\tthis.a *= sx;\n\t\tthis.b *= sy;\n\n\t\tthis.c *= sx;\n\t\tthis.d *= sy;\n\n\t\tthis.tx *= sx;\n\t\tthis.ty *= sy;\n\t}\n\n\t/**\n\t * Sets the members of Matrix to the specified values.\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a text value listing the properties of the Matrix object.\n\t *\n\t * @return A string containing the values of the properties of the Matrix\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n\t}\n\n\t/**\n\t * Returns the result of applying the geometric transformation represented by\n\t * the Matrix object to the specified point.\n\t *\n\t * @param point The point for which you want to get the result of the Matrix\n\t *              transformation.\n\t * @return The point resulting from applying the Matrix transformation.\n\t */\n\tpublic transformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\n\t}\n\n\t/**\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n\t * by the <code>dx</code> and <code>dy</code> parameters.\n\t *\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\n\t *           pixels.\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\n\t */\n\tpublic translate(dx:number, dy:number):void\n\t{\n\t\tthis.tx += dx;\n\t\tthis.ty += dy;\n\t}\n}\n\nexport = Matrix;",
    "/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Orientation3D\n{\n\t/**\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\n\t * @type {string}\n\t */\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\n\n\t/**\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\n\t * @type {string}\n\t */\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\n\n\t/**\n\t * The quaternion orientation uses complex numbers.\n\t * @type {string}\n\t */\n\tpublic static QUATERNION:string = \"quaternion\";\n}\n\nexport = Orientation3D;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * <p>The PerspectiveProjection class provides an easy way to assign or modify\n * the perspective transformations of a display object and all of its\n * children. For more complex or custom perspective transformations, use the\n * Matrix3D class. While the PerspectiveProjection class provides basic\n * three-dimensional presentation properties, the Matrix3D class provides more\n * detailed control over the three-dimensional presentation of display objects.\n * </p>\n *\n * <p>Projection is a way of representing a three-dimensional object in a\n * two-dimensional space, like a cube projected onto a computer screen.\n * Perspective projection uses a viewing frustum (a rectangular pyramid) to\n * model and project a three-dimensional world and its objects on the screen.\n * The viewing frustum becomes increasingly wider as it moves further from the\n * origin of the viewpoint. The origin of the viewpoint could be a camera or\n * the eyes of an observer facing the screen. The projected perspective\n * produces the illusion of three dimensions with depth and distance, where\n * the objects closer to the screen appear larger than the objects farther\n * from the screen.</p>\n *\n * <p>A default PerspectiveProjection object is a framework defined for\n * perspective transformation of the root object, based on the field of view\n * and aspect ratio (dimensions) of the stage. The projection center, the\n * vanishing point, is set to the center of the stage, which means the\n * three-dimensional display objects disappear toward the center of the stage\n * as they move back in the z axis. The default viewpoint is at point (0,0)\n * looking down the positive z axis. The y-axis points down toward the bottom\n * of the screen. You can gain access to the root display object's perspective\n * projection settings and change the field of view and projection center\n * properties of the perspectiveProjection property through the root object's\n * <code>DisplayObject.transform</code> property.</p>\n *\n * <p>You can also set a different perspective projection setting for a\n * display object through the parent's perspective projection. First, create a\n * PerspectiveProjection object and set its <code>fieldOfView</code> and\n * <code>projectionCenter</code> properties. Next, assign the\n * PerspectiveProjection object to the parent display object using the\n * <code>DisplayObject.transform</code> property. The specified projection\n * matrix and transformation will then apply to all the display object's\n * three-dimensional children.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass PerspectiveProjection\n{\n\tprivate _matrix3D:Matrix3D;\n\n\t/**\n\t * Specifies an angle, as a degree between 0 and 180, for the field of\n\t * view in three dimensions. This value determines how strong the\n\t * perspective transformation and distortion apply to a\n\t * three-dimensional display object with a non-zero z-coordinate.\n\t *\n\t * <p>A degree close to 0 means that the screen's two-dimensional x-\n\t * and y-coordinates are roughly the same as the three-dimensional x-,\n\t * y-, and z-coordinates with little or no distortion. In other words,\n\t * for a small angle, a display object moving down the z axis appears\n\t * to stay near the same size and moves little.</p>\n\t *\n\t * <p>A value close to 180 degrees results in a fisheye projection effect:\n\t * positions with a z value smaller than 0 are magnified, while\n\t * positions with a z value larger than 0 are minimized. With a large\n\t * angle, a display object moving down the z axis appears to change\n\t * size quickly and moves a great distance. If the field of view is\n\t * set to 0 or 180, nothing is seen on the screen.</p>\n\t */\n\tpublic fieldOfView:number;\n\n\t/**\n\t * The distance between the eye or the viewpoint's origin (0,0,0) and\n\t * the display object located in the z axis. During the perspective\n\t * transformation, the <code>focalLength</code> is calculated\n\t * dynamically using the angle of the field of view and the stage's\n\t * aspect ratio (stage width divided by stage height).\n\t *\n\t * @see away.geom.PerspectiveProjection#fieldOfView\n\t */\n\tpublic focalLength:number;\n\n\t/**\n\t * A two-dimensional point representing the center of the projection,\n\t * the vanishing point for the display object.\n\t *\n\t * <p>The <code>projectionCenter</code> property is an offset to the\n\t * default registration point that is the upper left of the stage,\n\t * point (0,0). The default projection transformation center is in the\n\t * middle of the stage, which means the three-dimensional display\n\t * objects disappear toward the center of the stage as they move\n\t * backwards in the z axis.</p>\n\t */\n\tpublic projectionCenter:Point;\n\n\t/**\n\t * Creates an instance of a PerspectiveProjection object.\n\t */\n\tconstructor()\n\t{\n\n\t}\n\t/**\n\t * Returns the underlying Matrix3D object of the display object.\n\t *\n\t * <p>A display object, like the root object, can have a\n\t * PerspectiveProjection object without needing a Matrix3D property\n\t * defined for its transformations. In fact, use either a\n\t * PerspectiveProjection or a Matrix3D object to specify the\n\t * perspective transformation. If when using the PerspectiveProjection\n\t * object, a Matrix3D object was needed, the <code>toMatrix3D()</code>\n\t * method can retrieve the underlying Matrix3D object of the display\n\t * object. For example, the <code>toMatrix3D()</code> method can be\n\t * used with the <code>Utils3D.projectVectors()</code> method.</p>\n\t *\n\t * @see away.geom.Matrix3D\n\t */\n\tpublic toMatrix3D():Matrix3D\n\t{\n\t\treturn this._matrix3D;\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Plane3D\n{\n\t/**\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\n\t */\n\tpublic d:number;\n\n\tpublic _iAlignment:number;\n\n\t// indicates the alignment of the plane\n\tpublic static ALIGN_ANY:number = 0;\n\tpublic static ALIGN_XY_AXIS:number = 1;\n\tpublic static ALIGN_YZ_AXIS:number = 2;\n\tpublic static ALIGN_XZ_AXIS:number = 3;\n\n\t/**\n\t * Create a Plane3D with ABCD coefficients\n\t */\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\n\t\tif (a == 0 && b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (b == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (a == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\n\t * @param p0 Vector3D\n\t * @param p1 Vector3D\n\t * @param p2 Vector3D\n\t */\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D)\n\t{\n\t\tvar d1x:number = p1.x - p0.x;\n\t\tvar d1y:number = p1.y - p0.y;\n\t\tvar d1z:number = p1.z - p0.z;\n\n\t\tvar d2x:number = p2.x - p0.x;\n\t\tvar d2y:number = p2.y - p0.y;\n\t\tvar d2z:number = p2.z - p0.z;\n\n\t\tthis.a = d1y*d2z - d1z*d2y;\n\t\tthis.b = d1z*d2x - d1x*d2z;\n\t\tthis.c = d1x*d2y - d1y*d2x;\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\n\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\n\t * @param normal Vector3D\n\t * @param point  Vector3D\n\t */\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D)\n\t{\n\t\tthis.a = normal.x;\n\t\tthis.b = normal.y;\n\t\tthis.c = normal.z;\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Normalize this Plane3D\n\t * @return Plane3D This Plane3D.\n\t */\n\tpublic normalize():Plane3D\n\t{\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\n\t\tthis.a *= len;\n\t\tthis.b *= len;\n\t\tthis.c *= len;\n\t\tthis.d *= len;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the signed distance between this Plane3D and the point p.\n\t * @param p Vector3D\n\t * @returns Number\n\t */\n\tpublic distance(p:Vector3D):number\n\t{\n\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\n\n\t\t\treturn this.a*p.x - this.d;\n\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\n\t\t\treturn this.b*p.y - this.d;\n\t\t}\n\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\n\n\t\t\treturn this.c*p.z - this.d;\n\n\t\t} else {\n\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\n\t * @param p Vector3D\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\n\t */\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\n\t{\n\t\t// check NaN\n\t\tif (this.d != this.d)\n\t\t\treturn PlaneClassification.FRONT;\n\n\t\tvar len:number;\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\n\t\t\tlen = this.c*p.z - this.d; else\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\tif (len < -epsilon)\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\n\t\t\treturn PlaneClassification.FRONT; else\n\t\t\treturn PlaneClassification.INTERSECT;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\n\t}\n}\n\nexport = Plane3D;",
    "class PlaneClassification\n{\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\n\tpublic static BACK:number = 0;\n\tpublic static FRONT:number = 1;\n\n\tpublic static IN:number = 0;\n\tpublic static OUT:number = 1;\n\tpublic static INTERSECT:number = 2;\n\n}\n\nexport = PlaneClassification;",
    "/**\n * The Point object represents a location in a two-dimensional coordinate\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\n * represents the vertical axis.\n *\n * <p>The following code creates a point at(0,0):</p>\n *\n * <p>Methods and properties of the following classes use Point objects:</p>\n *\n * <ul>\n *   <li>BitmapData</li>\n *   <li>DisplayObject</li>\n *   <li>DisplayObjectContainer</li>\n *   <li>DisplacementMapFilter</li>\n *   <li>NativeWindow</li>\n *   <li>Matrix</li>\n *   <li>Rectangle</li>\n * </ul>\n *\n * <p>You can use the <code>new Point()</code> constructor to create a Point\n * object.</p>\n */\nclass Point\n{\n\t/**\n\t * The horizontal coordinate of the point. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The vertical coordinate of the point. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The length of the line segment from(0,0) to this point.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\n\t}\n\n\t/**\n\t * Creates a new point. If you pass no parameters to this method, a point is\n\t * created at(0,0).\n\t *\n\t * @param x The horizontal coordinate.\n\t * @param y The vertical coordinate.\n\t */\n\tconstructor(x:number = 0, y:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t/**\n\t * Adds the coordinates of another point to the coordinates of this point to\n\t * create a new point.\n\t *\n\t * @param v The point to be added.\n\t * @return The new point.\n\t */\n\tpublic add(v:Point):Point\n\t{\n\t\treturn new Point(this.x + v.x, this.y + v.y);\n\t}\n\n\t/**\n\t * Creates a copy of this Point object.\n\t *\n\t * @return The new Point object.\n\t */\n\tpublic clone():Point\n\t{\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\tpublic copyFrom(sourcePoint:Point)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether two points are equal. Two points are equal if they have\n\t * the same <i>x</i> and <i>y</i> values.\n\t *\n\t * @param toCompare The point to be compared.\n\t * @return A value of <code>true</code> if the object is equal to this Point\n\t *         object; <code>false</code> if it is not equal.\n\t */\n\tpublic equals(toCompare:Point):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\n\t}\n\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current point is\n\t *                 (0,5), and you normalize it to 1, the point returned is\n\t *                  at(0,1).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\treturn;\n\t\t}\n\t\tthrow \"Cannot divide by zero length.\";\n\t}\n\n\t/**\n\t * Offsets the Point object by the specified amount. The value of\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\n\t * value of <i>y</i> to create the new <i>y</i> value.\n\t *\n\t * @param dx The amount by which to offset the horizontal coordinate,\n\t *           <i>x</i>.\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\tpublic setTo(xa:number, ya:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t}\n\n\t/**\n\t * Subtracts the coordinates of another point from the coordinates of this\n\t * point to create a new point.\n\t *\n\t * @param v The point to be subtracted.\n\t * @return The new point.\n\t */\n\tpublic subtract(v:Point):Point\n\t{\n\t\treturn new Point(this.x - v.x, this.y - v.y);\n\t}\n\n\t/**\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\n\t *\n\t * @return The string representation of the coordinates.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\n\t}\n\n\t/**\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @return The distance between the first and second points.\n\t */\n\tpublic static distance(pt1:Point, pt2:Point):number\n\t{\n\t\tvar dx:number = pt2.x - pt1.x;\n\t\tvar dy:number = pt2.y - pt1.y;\n\n\t\treturn Math.sqrt(dx*dx + dy*dy);\n\t}\n\n\t/**\n\t * Determines a point between two specified points. The parameter\n\t * <code>f</code> determines where the new interpolated point is located\n\t * relative to the two end points specified by parameters <code>pt1</code>\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\n\t * point(parameter <code>pt2</code>).\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @param f   The level of interpolation between the two points. Indicates\n\t *            where the new point will be, along the line between\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\n\t *            <code>pt2</code> is returned.\n\t * @return The new, interpolated point.\n\t */\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\n\t{\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\n\t}\n\n\t/**\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\n\t *\n\t * @param len   The length coordinate of the polar pair.\n\t * @param angle The angle, in radians, of the polar pair.\n\t * @return The Cartesian point.\n\t */\n\tpublic static polar(len:number, angle:number):Point\n\t{\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\n\t}\n}\n\nexport = Point;\n",
    "class PoissonLookup\n{\n\tpublic static _distributions:Array<Array<number>>;\n\n\tpublic static initDistributions():void\n\t{\n\t\t// precalculated for best control\n\t\tthis._distributions = new Array<Array<number>>();\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\n\t}\n\n\tpublic static getDistribution(n:number /*int*/):Array<number>\n\t{\n\t\tif (!this._distributions)\n\t\t\tthis.initDistributions();\n\n\t\tif (n < 2 || n > 32)\n\t\t\treturn null;\n\n\t\treturn this._distributions[n - 1];\n\t}\n}\n\nexport = PoissonLookup;",
    "import Matrix3DUtils\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Orientation3D\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Matrix3D\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Quaternion\n{\n\t/**\n\t * The x value of the quaternion.\n\t */\n\tpublic x:number = 0;\n\n\t/**\n\t * The y value of the quaternion.\n\t */\n\tpublic y:number = 0;\n\n\t/**\n\t * The z value of the quaternion.\n\t */\n\tpublic z:number = 0;\n\n\t/**\n\t * The w value of the quaternion.\n\t */\n\tpublic w:number = 1;\n\n\t/**\n\t * Creates a new Quaternion object.\n\t * @param x The x value of the quaternion.\n\t * @param y The y value of the quaternion.\n\t * @param z The z value of the quaternion.\n\t * @param w The w value of the quaternion.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Returns the magnitude of the quaternion object.\n\t */\n\tpublic get magnitude():number\n\t{\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t}\n\n\t/**\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\n\t *\n\t * @param    qa    The first quaternion in the multiplication.\n\t * @param    qb    The second quaternion in the multiplication.\n\t */\n\tpublic multiply(qa:Quaternion, qb:Quaternion)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t}\n\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\n\t{\n\t\t//target ||= new Quaternion();\n\t\tif (target === null) {\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\n\t\tvar x2:number = vector.x;\n\t\tvar y2:number = vector.y;\n\t\tvar z2:number = vector.z;\n\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given rotation around a vector.\n\t *\n\t * @param    axis    The axis around which to rotate\n\t * @param    angle    The angle in radians of the rotation.\n\t */\n\tpublic fromAxisAngle(axis:Vector3D, angle:number)\n\t{\n\t\tvar sin_a:number = Math.sin(angle/2);\n\t\tvar cos_a:number = Math.cos(angle/2);\n\n\t\tthis.x = axis.x*sin_a;\n\t\tthis.y = axis.y*sin_a;\n\t\tthis.z = axis.z*sin_a;\n\t\tthis.w = cos_a;\n\n\t\tthis.normalize();\n\t}\n\n\t/**\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\n\n\t\t// shortest direction\n\t\tif (dot < 0) {\n\t\t\tdot = -dot;\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tif (dot < 0.95) {\n\t\t\t// interpolate angle linearly\n\t\t\tvar angle:number = Math.acos(dot);\n\t\t\tvar s:number = 1/Math.sin(angle);\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\n\t\t\tthis.w = w1*s1 + w2*s2;\n\t\t\tthis.x = x1*s1 + x2*s2;\n\t\t\tthis.y = y1*s1 + y2*s2;\n\t\t\tthis.z = z1*s1 + z2*s2;\n\t\t} else {\n\t\t\t// nearly identical angle, interpolate linearly\n\t\t\tthis.w = w1 + t*(w2 - w1);\n\t\t\tthis.x = x1 + t*(x2 - x1);\n\t\t\tthis.y = y1 + t*(y2 - y1);\n\t\t\tthis.z = z1 + t*(z2 - z1);\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\t\tthis.w *= len;\n\t\t\tthis.x *= len;\n\t\t\tthis.y *= len;\n\t\t\tthis.z *= len;\n\t\t}\n\t}\n\n\t/**\n\t * Linearly interpolates between two quaternions.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar len:number;\n\n\t\t// shortest direction\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tthis.w = w1 + t*(w2 - w1);\n\t\tthis.x = x1 + t*(x2 - x1);\n\t\tthis.y = y1 + t*(y2 - y1);\n\t\tthis.z = z1 + t*(z2 - z1);\n\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\tthis.w *= len;\n\t\tthis.x *= len;\n\t\tthis.y *= len;\n\t\tthis.z *= len;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given euler rotation.\n\t *\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\n\t * @param    az        The angle in radians of the rotation around the az axis.\n\t */\n\tpublic fromEulerAngles(ax:number, ay:number, az:number)\n\t{\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\n\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\n\t}\n\n\t/**\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\n\t * @return The Vector3D containing the Euler angles.\n\t */\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\n\t{\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Normalises the quaternion object.\n\t */\n\tpublic normalize(val:number = 1)\n\t{\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\n\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t\tthis.z *= mag;\n\t\tthis.w *= mag;\n\t}\n\n\t/**\n\t * Used to trace the values of a quaternion.\n\t *\n\t * @return A string representation of the quaternion object.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\n\t}\n\n\t/**\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\n\t * @return A Matrix3D object representing an equivalent rotation.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\trawData[0] = xx - yy - zz + ww;\n\t\trawData[4] = xy2 - zw2;\n\t\trawData[8] = xz2 + yw2;\n\t\trawData[12] = 0;\n\t\trawData[1] = xy2 + zw2;\n\t\trawData[5] = -xx + yy - zz + ww;\n\t\trawData[9] = yz2 - xw2;\n\t\trawData[13] = 0;\n\t\trawData[2] = xz2 - yw2;\n\t\trawData[6] = yz2 + xw2;\n\t\trawData[10] = -xx - yy + zz + ww;\n\t\trawData[14] = 0;\n\t\trawData[3] = 0.0;\n\t\trawData[7] = 0.0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\n\t\tif (!target)\n\t\t\treturn new Matrix3D(rawData);\n\t\telse\n\t\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\n\t */\n\tpublic fromMatrix(matrix:Matrix3D)\n\t{\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t}\n\n\t/**\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\n\t */\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false)\n\t{\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\ttarget[0] = xx - yy - zz + ww;\n\t\ttarget[1] = xy2 - zw2;\n\t\ttarget[2] = xz2 + yw2;\n\t\ttarget[4] = xy2 + zw2;\n\t\ttarget[5] = -xx + yy - zz + ww;\n\t\ttarget[6] = yz2 - xw2;\n\t\ttarget[8] = xz2 - yw2;\n\t\ttarget[9] = yz2 + xw2;\n\t\ttarget[10] = -xx - yy + zz + ww;\n\t\ttarget[3] = target[7] = target[11] = 0;\n\n\t\tif (!exclude4thRow) {\n\t\t\ttarget[12] = target[13] = target[14] = 0;\n\t\t\ttarget[15] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Clones the quaternion.\n\t * @return An exact duplicate of the current Quaternion.\n\t */\n\tpublic clone():Quaternion\n\t{\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Rotates a point.\n\t * @param vector The Vector3D object to be rotated.\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\n\t * @return A Vector3D object containing the rotated point.\n\t */\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\t// p*q'\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the data from a quaternion into this instance.\n\t * @param q The quaternion to copy from.\n\t */\n\tpublic copyFrom(q:Quaternion)\n\t{\n\t\tthis.x = q.x;\n\t\tthis.y = q.y;\n\t\tthis.z = q.z;\n\t\tthis.w = q.w;\n\t}\n}\n\nexport = Quaternion;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * A Rectangle object is an area defined by its position, as indicated by its\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the Rectangle class are independent of\n * each other; changing the value of one property has no effect on the others.\n * However, the <code>right</code> and <code>bottom</code> properties are\n * integrally related to those four properties. For example, if you change the\n * value of the <code>right</code> property, the value of the\n * <code>width</code> property changes; if you change the <code>bottom</code>\n * property, the value of the <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Rectangle objects:</p>\n *\n * <ul>\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\n * <code>merge()</code>, <code>paletteMap()</code>,\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\n * BitmapData class</li>\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\n * DisplayObject class</li>\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\n * class</li>\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\n * method of the Sprite class</li>\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\n * method of the PrintJob class</li>\n * </ul>\n *\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\n * Rectangle object.</p>\n *\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\n * display object. To draw a rectangular Shape object onscreen, use the\n * <code>drawRect()</code> method of the Graphics class.</p>\n */\nclass Rectangle\n{\n\tprivate _size:Point;\n\tprivate _bottomRight:Point;\n\tprivate _topLeft:Point;\n\n\t/**\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>x</code> property of a Rectangle object has no\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>y</code> property of a Rectangle object has no\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's bottom-right corner, determined by\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRight():Point\n\t{\n\t\tif (this._bottomRight == null)\n\t\t\tthis._bottomRight = new Point();\n\n\t\tthis._bottomRight.x = this.x + this.width;\n\t\tthis._bottomRight.y = this.y + this.height;\n\n\t\treturn this._bottomRight;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>left</code> property of a Rectangle object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\t/**\n\t * The size of the Rectangle object, expressed as a Point object with the\n\t * values of the <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic get size():Point\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Point();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>top</code> property of a Rectangle object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's top-left corner, determined by the\n\t * <i>x</i> and <i>y</i> coordinates of the point.\n\t */\n\tpublic get topLeft():Point\n\t{\n\t\tif (this._topLeft == null)\n\t\t\tthis._topLeft = new Point();\n\n\t\tthis._topLeft.x = this.x;\n\t\tthis._topLeft.y = this.y;\n\n\t\treturn this._topLeft;\n\t}\n\n\t/**\n\t * Creates a new Rectangle object with the top-left corner specified by the\n\t * <code>x</code> and <code>y</code> parameters and with the specified\n\t * <code>width</code> and <code>height</code> parameters. If you call this\n\t * public without parameters, a rectangle with <code>x</code>,\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\n\t * to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param width  The width of the rectangle, in pixels.\n\t * @param height The height of the rectangle, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\t/**\n\t * Returns a new Rectangle object with the same values for the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties as the original Rectangle object.\n\t *\n\t * @return A new Rectangle object with the same values for the\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\n\t *         <code>height</code> properties as the original Rectangle object.\n\t */\n\tpublic clone():Rectangle\n\t{\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object. This method is similar to the\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\n\t * object as a parameter.\n\t *\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\n\t *              coordinates.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(point:Point):boolean\n\t{\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n\t}\n\n\t/**\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\n\t * parameter is contained within this Rectangle object. A Rectangle object is\n\t * said to contain another if the second Rectangle object falls entirely\n\t * within the boundaries of the first.\n\t *\n\t * @param rect The Rectangle object being checked.\n\t * @return A value of <code>true</code> if the Rectangle object that you\n\t *         specify is contained by this Rectangle object; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic containsRect(rect:Rectangle):boolean\n\t{\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\n\t}\n\n\t/**\n\t * Copies all of rectangle data from the source Rectangle object into the\n\t * calling Rectangle object.\n\t *\n\t * @param sourceRect The Rectangle object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceRect:Rectangle)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Rectangle object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of an object against the same properties of\n\t * this Rectangle object.\n\t *\n\t * @param toCompare The rectangle to compare to this Rectangle object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\n\t *         and <code>height</code> properties as this Rectangle object;\n\t *         otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Rectangle):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object by the specified amounts, in\n\t * pixels. The center point of the Rectangle object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, and to\n\t * the top and the bottom by the <code>dy</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Rectangle\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the rectangle:\n\t * @param dy The value to be added to the top and the bottom of the\n\t *           Rectangle. The following equation is used to calculate the new\n\t *           height and position of the rectangle:\n\t */\n\tpublic inflate(dx:number, dy:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object. This method is similar to the\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param point The <code>x</code> property of this Point object is used to\n\t *              increase the horizontal dimension of the Rectangle object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Rectangle object.\n\t */\n\tpublic inflatePoint(point:Point)\n\t{\n\t\tthis.x -= point.x/2;\n\t\tthis.y -= point.y/2;\n\t\tthis.width += point.x/2;\n\t\tthis.height += point.y/2;\n\t}\n\n\t/**\n\t * If the Rectangle object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object, returns the area of\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\n\t * this method returns an empty Rectangle object with its properties set to\n\t * 0.\n\t *\n\t * @param toIntersect The Rectangle object to compare against to see if it\n\t *                    intersects with this Rectangle object.\n\t * @return A Rectangle object that equals the area of intersection. If the\n\t *         rectangles do not intersect, this method returns an empty\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\n\t *         properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Rectangle):Rectangle\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Rectangle = new Rectangle();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Rectangle();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of the specified Rectangle object to see if\n\t * it intersects with this Rectangle object.\n\t *\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\n\t *                    object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Rectangle object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Rectangle):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\n\t}\n\n\t/**\n\t * Determines whether or not this Rectangle object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Rectangle object's width or\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object, as determined by its\n\t * top-left corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object using a Point object as a\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\n\t * method, except that it takes a Point object as a parameter.\n\t *\n\t * @param point A Point object to use to offset this Rectangle object.\n\t */\n\tpublic offsetPoint(point:Point)\n\t{\n\t\tthis.x += point.x;\n\t\tthis.y += point.y;\n\t}\n\n\t/**\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n\t * empty if its width or height is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t}\n\n\t/**\n\t * Sets the members of Rectangle to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param widtha  The width of the rectangle, in pixels.\n\t * @param heighta The height of the rectangle, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal and vertical\n\t * positions and the width and height of the Rectangle object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\n\t *         <code>width</code>, and <code>height</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n\t}\n\n\t/**\n\t * Adds two rectangles together to create a new Rectangle object, by filling\n\t * in the horizontal and vertical space between the two rectangles.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\n\t * <code>0</code> as the height or width value, such as: <code>var\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\n\t *\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\n\t * @return A new Rectangle object that is the union of the two rectangles.\n\t */\n\tpublic union(toUnion:Rectangle):Rectangle\n\t{\n\t\tvar u:Rectangle = new Rectangle();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Rectangle;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Sphere\n{\n\t/**\n\t *\n\t */\n\tpublic x:number;\n\n\t/**\n\t *\n\t */\n\tpublic y:number;\n\n\t/**\n\t *\n\t */\n\tpublic z:number;\n\n\t/**\n\t *\n\t */\n\tpublic radius:number;\n\n\t/**\n\t * Create a Sphere with ABCD coefficients\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, radius:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.radius = radius;\n\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar px:number = position.x - this.x, py:number = position.y - this.y, pz:number = position.z - this.z;\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\n\t\tvar rayEntryDistance:number;\n\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\n\t\tvar c:number = px*px + py*py + pz*pz - this.radius*this.radius;\n\t\tvar det:number = b*b - 4*a*c;\n\n\t\tif (det >= 0) { // ray goes through sphere\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\n\t\t\tif (rayEntryDistance >= 0) {\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\n\t\t\t\ttargetNormal.normalize();\n\n\t\t\t\treturn rayEntryDistance;\n\t\t\t}\n\t\t}\n\n\t\t// ray misses sphere\n\t\treturn -1;\n\t}\n\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\tvar px:number = position.x - this.x;\n\t\tvar py:number = position.y - this.y;\n\t\tvar pz:number = position.z - this.z;\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\n\t\treturn distance <= this.radius;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\n\t}\n}\n\nexport = Sphere;",
    "import Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nclass UVTransform\n{\n\tprivate _uvMatrix:Matrix = new Matrix();\n\tprivate _uvMatrixDirty:boolean;\n\n\tprivate _rotation:number = 0;\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\tprivate _offsetU:number = 0;\n\tprivate _offsetV:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get offsetU():number\n\t{\n\t\treturn this._offsetU;\n\t}\n\n\tpublic set offsetU(value:number)\n\t{\n\t\tif (value == this._offsetU)\n\t\t\treturn;\n\n\t\tthis._offsetU = value;\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get offsetV():number\n\t{\n\t\treturn this._offsetV;\n\t}\n\n\tpublic set offsetV(value:number)\n\t{\n\t\tif (value == this._offsetV)\n\t\t\treturn;\n\n\t\tthis._offsetV = value;\n\t\tthis._uvMatrixDirty = true;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rotation():number\n\t{\n\t\treturn this._rotation;\n\t}\n\n\tpublic set rotation(value:number)\n\t{\n\t\tif (value == this._rotation)\n\t\t\treturn;\n\n\t\tthis._rotation = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (value == this._scaleU)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (value == this._scaleV)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get matrix():Matrix\n\t{\n\t\tif (this._uvMatrixDirty)\n\t\t\tthis.updateUVMatrix();\n\n\t\treturn this._uvMatrix;\n\t}\n\n\tconstructor()\n\t{\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate updateUVMatrix()\n\t{\n\t\tthis._uvMatrix.identity();\n\n\t\tif (this._rotation != 0)\n\t\t\tthis._uvMatrix.rotate(this._rotation);\n\n\t\tif (this._scaleU != 1 || this._scaleV != 1)\n\t\t\tthis._uvMatrix.scale(this._scaleU, this._scaleV);\n\n\t\tthis._uvMatrix.translate(this._offsetU, this._offsetV);\n\n\t\tthis._uvMatrixDirty = false;\n\t}\n}\n\nexport = UVTransform;",
    "/**\n * The Vector3D class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n *\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n *\n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nclass Vector3D\n{\n\t/**\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\n\t */\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\n\n\t/**\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\n\t */\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\n\n\t/**\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\n\t */\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\n\n\t/**\n\t * The first element of a Vector3D object, such as the x coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/*\n\t *The second element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The third element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic z:number;\n\n\t/**\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\n\t * and z properties) can hold data such as the angle of rotation. The\n\t * default value is 0.\n\t *\n\t * <p>Quaternion notation employs an angle as the fourth element in\n\t * its calculation of three-dimensional rotation. The w property can\n\t * be used to define the angle of rotation about the Vector3D object.\n\t * The combination of the rotation angle and the coordinates (x,y,z)\n\t * determines the display object's orientation.</p>\n\t *\n\t * <p>In addition, the w property can be used as a perspective warp\n\t * factor for a projected three-dimensional position or as a projection\n\t * transform value in representing a three-dimensional coordinate\n\t * projected into the two-dimensional space. For example, you can\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\n\t * property, that, when applied to a Vector3D object, produces a\n\t * transform value in the Vector3D object's fourth element (the w\n\t * property). Dividing the Vector3D object's other elements by the\n\t * transform value then produces a projected Vector3D object. You can\n\t * use the <code>Vector3D.project()</code> method to divide the first\n\t * three elements of a Vector3D object by its fourth element.</p>\n\t */\n\tpublic w:number;\n\n\t/**\n\t * The length, magnitude, of the current Vector3D object from the\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\n\t * property is ignored. A unit vector has a length or magnitude of\n\t * one.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.lengthSquared);\n\t}\n\n\t/**\n\t * The square of the length of the current Vector3D object, calculated\n\t * using the x, y, and z properties. The w property is ignored. Use the\n\t * <code>lengthSquared()</code> method whenever possible instead of the\n\t * slower <code>Math.sqrt()</code> method call of the\n\t * <code>Vector3D.length()</code> method.\n\t */\n\tpublic get lengthSquared():number\n\t{\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\n\t}\n\n\t/**\n\t * Creates an instance of a Vector3D object. If you do not specify a\n\t * parameter for the constructor, a Vector3D object is created with\n\t * the elements (0,0,0,0).\n\t *\n\t * @param x The first element, such as the x coordinate.\n\t * @param y The second element, such as the y coordinate.\n\t * @param z The third element, such as the z coordinate.\n\t * @param w An optional element for additional data such as the angle\n\t *          of rotation.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Adds the value of the x, y, and z elements of the current Vector3D\n\t * object to the values of the x, y, and z elements of another Vector3D\n\t * object. The <code>add()</code> method does not change the current\n\t * Vector3D object. Instead, it returns a new Vector3D object with\n\t * the new values.\n\t *\n\t * <p>The result of adding two vectors together is a resultant vector.\n\t * One way to visualize the result is by drawing a vector from the\n\t * origin or tail of the first vector to the end or head of the second\n\t * vector. The resultant vector is the distance between the origin\n\t * point of the first vector and the end point of the second vector.\n\t * </p>\n\t */\n\tpublic add(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\n\t}\n\n\t/**\n\t * Returns the angle in radians between two vectors. The returned angle\n\t * is the smallest radian the first Vector3D object rotates until it\n\t * aligns with the second Vector3D object.\n\t *\n\t * <p>The <code>angleBetween()</code> method is a static method. You\n\t * can use it directly as a method of the Vector3D class.</p>\n\t *\n\t * <p>To convert a degree to a radian, you can use the following\n\t * formula:</p>\n\t *\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\n\t *\n\t * @param a The first Vector3D object.\n\t * @param b The second Vector3D object.\n\t * @returns The angle between two Vector3D objects.\n\t */\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\n\t{\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is an exact copy of the current\n\t * Vector3D object.\n\t *\n\t * @returns A new Vector3D object that is a copy of the current\n\t * Vector3D object.\n\t */\n\tpublic clone():Vector3D\n\t{\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\n\t}\n\n\tpublic static combine(a:Vector3D, b:Vector3D, ascl:number, bscl:number):Vector3D\n\t{\n\t\treturn new Vector3D(a.x*ascl + b.x*bscl, a.y*ascl + b.y*bscl, a.z*ascl + b.z*bscl);\n\t}\n\n\t/**\n\t * Copies all of vector data from the source Vector3D object into the\n\t * calling Vector3D object.\n\t *\n\t * @param src The Vector3D object from which to copy the data.\n\t */\n\tpublic copyFrom(src:Vector3D):void\n\t{\n\t\tthis.x = src.x;\n\t\tthis.y = src.y;\n\t\tthis.z = src.z;\n\t\tthis.w = src.w;\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is perpendicular (at a right\n\t * angle) to the current Vector3D and another Vector3D object. If the\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\n\t * Vector3D objects are parallel to each other.\n\t *\n\t * <p>You can use the normalized cross product of two vertices of a\n\t * polygon surface with the normalized vector of the camera or eye\n\t * viewpoint to get a dot product. The value of the dot product can\n\t * identify whether a surface of a three-dimensional object is hidden\n\t * from the viewpoint.</p>\n\t *\n\t * @param a A second Vector3D object.\n\t * @returns A new Vector3D object that is perpendicular to the current\n\t *          Vector3D object and the Vector3D object specified as the\n\t *          parameter.\n\t */\n\tpublic crossProduct(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\n\t}\n\n\t/**\n\t * Decrements the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of\n\t * specified Vector3D object. Unlike the\n\t * <code>Vector3D.subtract()</code> method, the\n\t * <code>decrementBy()</code> method changes the current Vector3D\n\t * object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object containing the values to subtract from\n\t *          the current Vector3D object.\n\t */\n\tpublic decrementBy(a:Vector3D)\n\t{\n\t\tthis.x -= a.x;\n\t\tthis.y -= a.y;\n\t\tthis.z -= a.z;\n\t}\n\n\t/**\n\t * Returns the distance between two Vector3D objects. The\n\t * <code>distance()</code> method is a static method. You can use it\n\t * directly as a method of the Vector3D class to get the Euclidean\n\t * distance between two three-dimensional points.\n\t *\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\n\t * @returns The distance between two Vector3D objects.\n\t */\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\n\t{\n\t\tvar x:number = (pt1.x - pt2.x);\n\t\tvar y:number = (pt1.y - pt2.y);\n\t\tvar z:number = (pt1.z - pt2.z);\n\t\treturn Math.sqrt(x*x + y*y + z*z);\n\t}\n\n\t/**\n\t * If the current Vector3D object and the one specified as the\n\t * parameter are unit vertices, this method returns the cosine of the\n\t * angle between the two vertices. Unit vertices are vertices that\n\t * point to the same direction but their length is one. They remove the\n\t * length of the vector as a factor in the result. You can use the\n\t * <code>normalize()</code> method to convert a vector to a unit\n\t * vector.\n\t *\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\n\t * vertices. It is also used in backface culling or lighting\n\t * calculations. Backface culling is a procedure for determining which\n\t * surfaces are hidden from the viewpoint. You can use the normalized\n\t * vertices from the camera, or eye, viewpoint and the cross product of\n\t * the vertices of a polygon surface to get the dot product. If the dot\n\t * product is less than zero, then the surface is facing the camera or\n\t * the viewer. If the two unit vertices are perpendicular to each\n\t * other, they are orthogonal and the dot product is zero. If the two\n\t * vertices are parallel to each other, the dot product is one.</p>\n\t *\n\t * @param a The second Vector3D object.\n\t * @returns A scalar which is the dot product of the current Vector3D\n\t *          object and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#crossProduct()\n\t * @see away.geom.Vector3D#normalize()\n\t */\n\tpublic dotProduct(a:Vector3D):number\n\t{\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\n\t}\n\n\t/**\n\t * Determines whether two Vector3D objects are equal by comparing the\n\t * x, y, and z elements of the current Vector3D object with a\n\t * specified Vector3D object. If the values of these elements are the\n\t * same, the two Vector3D objects are equal. If the second optional\n\t * parameter is set to true, all four elements of the Vector3D objects,\n\t * including the w property, are compared.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is equal\n\t *          to the current Vector3D object; false if it is not equal.\n\t */\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\n\t}\n\n\t/**\n\t * Increments the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of a\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n\t * method, the <code>incrementBy()</code> method changes the current\n\t * Vector3D object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object to be added to the current Vector3D\n\t *          object.\n\t */\n\tpublic incrementBy(a:Vector3D)\n\t{\n\t\tthis.x += a.x;\n\t\tthis.y += a.y;\n\t\tthis.z += a.z;\n\t}\n\n\t/**\n\t * Compares the elements of the current Vector3D object with the\n\t * elements of a specified Vector3D object to determine whether they\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\n\t * value of all the elements of the two vertices are equal, or the\n\t * result of the comparison is within the tolerance range. The\n\t * difference between two elements must be less than the number\n\t * specified as the tolerance parameter. If the third optional\n\t * parameter is set to <code>true</code>, all four elements of the\n\t * Vector3D objects, including the <code>w</code> property, are\n\t * compared. Otherwise, only the x, y, and z elements are included in\n\t * the comparison.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param tolerance A number determining the tolerance factor. If the\n\t *                  difference between the values of the Vector3D\n\t *                  element specified in the toCompare parameter and\n\t *                  the current Vector3D element is less than the\n\t *                  tolerance number, the two values are considered\n\t *                  nearly equal.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is nearly\n\t *          equal to the current Vector3D object; false if it is not\n\t *          equal.\n\t *\n\t * @see away.geom.Vector3D#equals()\n\t */\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\n\t{\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n\t}\n\n\t/**\n\t * Sets the current Vector3D object to its inverse. The inverse object\n\t * is also considered the opposite of the original object. The value of\n\t * the x, y, and z properties of the current Vector3D object is changed\n\t * to -x, -y, and -z.\n\t */\n\tpublic negate():void\n\t{\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t\tthis.z = -this.z;\n\t}\n\n\t/**\n\t * Converts a Vector3D object to a unit vector by dividing the first\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\n\t * are vertices that have a direction but their length is one. They\n\t * simplify vector calculations by removing length as a factor.\n\t */\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current\n\t *                  Vector3D object is (0,3,4), and you normalize it to\n\t *                  1, the point returned is at(0,0.6,0.8).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\tthis.z *= invLength;\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\n\t * <code>z</code> properties of the current Vector3D object by the\n\t * value of its <code>w</code> property.\n\t *\n\t * <p>If the current Vector3D object is the result of multiplying a\n\t * Vector3D object by a projection Matrix3D object, the w property can\n\t * hold the transform value. The <code>project()</code> method then can\n\t * complete the projection by dividing the elements by the\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n\t * property to create a projection Matrix3D object.</p>\n\t */\n\tpublic project():void\n\t{\n\t\tthis.x /= this.w;\n\t\tthis.y /= this.w;\n\t\tthis.z /= this.w;\n\t}\n\n\t/**\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\n\t * number specified in the parameter. For example, if the vector is\n\t * scaled by ten, the result is a vector that is ten times longer. The\n\t * scalar can also change the direction of the vector. Multiplying the\n\t * vector by a negative number reverses its direction.\n\t *\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\n\n\t */\n\tpublic scaleBy(s:number):void\n\t{\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\t\tthis.z *= s;\n\t}\n\n\t/**\n\t * Sets the members of Vector3D to the specified values\n\t *\n\t * @param xa The first element, such as the x coordinate.\n\t * @param ya The second element, such as the y coordinate.\n\t * @param za The third element, such as the z coordinate.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number):void\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t}\n\n\t/**\n\t * Subtracts the value of the x, y, and z elements of the current\n\t * Vector3D object from the values of the x, y, and z elements of\n\t * another Vector3D object. The <code>subtract()</code> method does not\n\t * change the current Vector3D object. Instead, this method returns a\n\t * new Vector3D object with the new values.\n\t *\n\t * @param a The Vector3D object to be subtracted from the current\n\t *          Vector3D object.\n\t * @returns A new Vector3D object that is the difference between the\n\t *          current Vector3D and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#decrementBy()\n\t */\n\tpublic subtract(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n\t}\n\n\t/**\n\t * Returns a string representation of the current Vector3D object. The\n\t * string contains the values of the x, y, and z properties.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n\t}\n}\n\nexport = Vector3D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nclass AssetBase extends EventDispatcher\n{\n\tpublic static ID_COUNT:number = 0;\n\n\tprivate _originalName:string;\n\tprivate _namespace:string;\n\tprivate _name:string;\n\tprivate _id:number;\n\tprivate _full_path:Array<string>;\n\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\n\n\tconstructor(name:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._id = AssetBase.ID_COUNT++;\n\n\t\tif (name == null)\n\t\t\tname = 'null';\n\n\t\tthis._name = name;\n\t\tthis._originalName = name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * The original name used for this asset in the resource (e.g. file) in which\n\t * it was found. This may not be the same as <code>name</code>, which may\n\t * have changed due to of a name conflict.\n\t */\n\tpublic get originalName():string\n\t{\n\t\treturn this._originalName;\n\t}\n\n\t/**\n\t * A unique id for the asset, used to identify assets in an associative array\n\t */\n\tpublic get id():number\n\t{\n\t\treturn this._id;\n\t}\n\n\tpublic get name():string\n\t{\n\t\treturn this._name;\n\t}\n\n\tpublic set name(val:string)\n\t{\n\t\tvar prev:string;\n\n\t\tprev = this._name;\n\t\tthis._name = val;\n\n\t\tif (this._name == null)\n\t\t\tthis._name = 'null';\n\n\t\tthis.updateFullPath();\n\n\t\t//if (hasEventListener(AssetEvent.ASSET_RENAME))\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_RENAME, <IAsset> this, prev));\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get assetNamespace():string\n\t{\n\t\treturn this._namespace;\n\t}\n\n\tpublic get assetFullPath():Array<string>\n\t{\n\t\treturn this._full_path;\n\t}\n\n\tpublic assetPathEquals(name:string, ns:string):boolean\n\t{\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\n\t}\n\n\n\tpublic isAsset(assetClass:IAssetClass):boolean\n\t{\n\t\treturn this.assetType == assetClass.assetType;\n\t}\n\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\n\t{\n\n\t\tthis._name = name? name : 'null';\n\t\tthis._namespace = ns? ns : AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (overrideOriginal)\n\t\t\tthis._originalName = this._name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\tprivate updateFullPath():void\n\t{\n\t\tthis._full_path = [ this._namespace, this._name ];\n\t}\n}\n\nexport = AssetBase;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibrary\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport LoaderSession\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport ConflictStrategy\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategy\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\n * Its purpose is to create a container for 3D data management, both before and after parsing.\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\n */\nclass AssetLibraryBundle extends EventDispatcher\n{\n\tpublic static _iInstances:Object = new Object();\n\n\tprivate _loaderSessions:Array<LoaderSession>;\n\tprivate _strategy:ConflictStrategyBase;\n\tprivate _strategyPreference:string;\n\tprivate _assets:Array<IAsset>;\n\tprivate _assetDictionary:Object;\n\tprivate _assetDictDirty:boolean;\n\tprivate _loaderSessionsGarbage:Array<LoaderSession> = new Array<LoaderSession>();\n\tprivate _gcTimeoutIID:number;\n\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\t/**\n\t * Creates a new <code>AssetLibraryBundle</code> object.\n\t *\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\n\t\tthis._assetDictionary = new Object();\n\t\tthis._loaderSessions = new Array<LoaderSession>();\n\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\n\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibrary as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\tif (!key)\n\t\t\tkey = 'default';\n\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\n\n\t\treturn AssetLibraryBundle._iInstances[key];\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParsers(parserClasses:Object[])\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\n\t * is used which means that a numeric suffix is appended to one of the assets. The\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\n\t * be renamed.\n\t *\n\t * @see naming.ConflictStrategy\n\t * @see AssetLibrary.conflictPrecedence\n\t */\n\tpublic get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn this._strategy;\n\t}\n\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\n\t\tif (!val)\n\t\t\tthrow new Error('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\n\n\t\tthis._strategy = val.create();\n\n\t}\n\n\t/**\n\t * Defines which asset should have precedence when resolving a naming conflict between\n\t * two assets of which one has just been renamed by the user or by a parser. By default\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\n\t *\n\t * This property is ignored for conflict strategies that do not actually rename an\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\n\t *\n\t * @see away.library.ConflictPrecedence\n\t * @see away.library.ConflictStrategy\n\t */\n\tpublic get conflictPrecedence():string\n\t{\n\t\treturn this._strategyPreference;\n\t}\n\n\tpublic set conflictPrecedence(val:string)\n\t{\n\t\tthis._strategyPreference = val;\n\t}\n\n\t/**\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\n\t * namespace. A \"null\" filter value means no filter of that type is used.\n\t *\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\n\t * null to not filter on asset type.\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\n\t * included in the iteration or not. This needs to be a function that takes a single\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\n\t *\n\t * @see away.library.AssetType\n\t */\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis.getLoaderSession().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads a resource from existing data in memory.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis.getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tpublic getLoaderSession():LoaderSession\n\t{\n\t\tvar loader:LoaderSession = new LoaderSession();\n\n\t\tthis._loaderSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader;\n\t}\n\t\n\tpublic disposeLoaderSession(loader:LoaderSession)\n\t{\n\t\tvar index:number = this._loaderSessions.indexOf(loader);\n\t\tthis._loaderSessions.splice(index, 1);\n\n\t\t// Add loader to a garbage array - for a collection sweep and kill\n\t\tthis._loaderSessionsGarbage.push(loader);\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\treturn null;\n\n\t\treturn this._assetDictionary[ns][name];\n\n\t}\n\tpublic getAllAssets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\t/**\n\t * Adds an asset to the asset library, first making sure that it's name is unique\n\t * using the method defined by the <code>conflictStrategy</code> and\n\t * <code>conflictPrecedence</code> properties.\n\t */\n\tpublic addAsset(asset:IAsset)\n\t{\n\t\tvar ns:string;\n\t\tvar old:IAsset;\n\n\t\t// Bail if asset has already been added.\n\t\tif (this._assets.indexOf(asset) >= 0)\n\t\t\treturn;\n\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\n\t\tns = asset.assetNamespace || AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (old != null)\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\n\n\t\t//create unique-id (for now this is used in AwayBuilder only\n\t\t//asset.id = IDUtil.createUID();\n\n\t\t// Add it\n\t\tthis._assets.push(asset);\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\tthis._assetDictionary[ns] = new Object();\n\n\t\tthis._assetDictionary[ns][asset.name] = asset;\n\n\t\tasset.addEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\t}\n\n\t/**\n\t * Removes an asset from the library, and optionally disposes that asset by calling\n\t * it's disposeAsset() method (which for most assets is implemented as a default\n\t * version of that type's dispose() method.\n\t *\n\t * @param asset The asset which should be removed from this library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tvar idx:number;\n\n\t\tthis.removeAssetFromDict(asset);\n\n\t\tasset.removeEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\n\t\tidx = this._assets.indexOf(asset);\n\n\t\tif (idx >= 0)\n\t\t\tthis._assets.splice(idx, 1);\n\n\t\tif (dispose)\n\t\t\tasset.dispose();\n\t}\n\n\t/**\n\t * Removes an asset which is specified using name and namespace.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\tvar asset:IAsset = this.getAsset(name, ns);\n\n\t\tif (asset)\n\t\t\tthis.removeAsset(asset, dispose);\n\n\t\treturn asset;\n\t}\n\n\t/**\n\t * Removes all assets from the asset library, optionally disposing them as they\n\t * are removed.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAllAssets(dispose:boolean = true)\n\t{\n\t\tif (dispose) {\n\t\t\tvar asset:IAsset;\n\t\t\tvar len:number = this._assets.length;\n\t\t\tfor (var c:number = 0; c < len; c++) {\n\t\t\t\tasset = this._assets[c];\n\t\t\t\tasset.dispose();\n\t\t\t}\n\t\t}\n\n\t\tthis._assets.length = 0;\n\t\tthis.rehashAssetDict();\n\t}\n\n\t/**\n\t * Removes all assets belonging to a particular namespace (null for default)\n\t * from the asset library, and optionall disposes them by calling their\n\t * disposeAsset() method.\n\t *\n\t * @param ns The namespace from which all assets should be removed.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tvar idx:number = 0;\n\t\tvar asset:IAsset;\n\t\tvar old_assets:IAsset[];\n\n\t\t// Empty the assets vector after having stored a copy of it.\n\t\t// The copy will be filled with all assets which weren't removed.\n\t\told_assets = this._assets.concat();\n\t\tthis._assets.length = 0;\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tvar len:number = old_assets.length;\n\t\tfor (var d:number = 0; d < len; d++) {\n\t\t\tasset = old_assets[d];\n\n\t\t\t// Remove from dict if in the supplied namespace. If not,\n\t\t\t// transfer over to the new vector.\n\t\t\tif (asset.assetNamespace == ns) {\n\t\t\t\tif (dispose)\n\t\t\t\t\tasset.dispose();\n\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\n\t\t\t\t// test that is not needed since we know that the namespace\n\t\t\t\t// will be empty when loop finishes.\n\t\t\t\tthis.removeAssetFromDict(asset, false);\n\t\t\t} else {\n\t\t\t\tthis._assets[idx++] = asset;\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t for each (asset in old_assets) {\n\t\t // Remove from dict if in the supplied namespace. If not,\n\t\t // transfer over to the new vector.\n\t\t if (asset.assetNamespace == ns) {\n\t\t if (dispose)\n\t\t asset.dispose();\n\n\t\t // Remove asset from dictionary, but don't try to auto-remove\n\t\t // the namespace, which will trigger an unnecessarily expensive\n\t\t // test that is not needed since we know that the namespace\n\t\t // will be empty when loop finishes.\n\t\t removeAssetFromDict(asset, false);\n\t\t } else\n\t\t _assets[idx++] = asset;\n\n\t\t }\n\t\t */\n\n\t\t// Remove empty namespace\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\n\t\t\tdelete this._assetDictionary[ns];\n\t}\n\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true)\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\n\n\t\t\tif (autoRemoveEmptyNamespace) {\n\n\t\t\t\tvar key:string;\n\t\t\t\tvar empty:boolean = true;\n\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (empty)\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic stopAllLoaderSessions()\n\t{\n\t\tvar len:number = this._loaderSessions.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis.killloaderSession(this._loaderSessions[i]);\n\n\t\tthis._loaderSessions = new Array<LoaderSession>();\n\t}\n\n\tprivate rehashAssetDict()\n\t{\n\t\tvar asset:IAsset;\n\n\t\tthis._assetDictionary = {};\n\n\t\tvar len:number = this._assets.length;\n\t\tfor (var c:number = 0; c < len; c++) {\n\t\t\tasset = this._assets[c];\n\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\n\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\n\n\t\t}\n\n\t\tthis._assetDictDirty = false;\n\n\t}\n\n\t/**\n\t * Called when a an error occurs during loading.\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing.\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Only add asset to library the first time.\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\n\t\t\tthis.addAsset(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tvar loader:LoaderSession = <LoaderSession> event.target;\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis.disposeLoaderSession(loader);\n\t}\n\n\tprivate loaderSessionGC():void\n\t{\n\t\tvar loader:LoaderSession;\n\n\t\twhile (this._loaderSessionsGarbage.length > 0) {\n\t\t\tloader = this._loaderSessionsGarbage.pop();\n\t\t\tthis.killloaderSession(loader);\n\t\t}\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate killloaderSession(loader:LoaderSession)\n\t{\n\t\tloader.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t\tloader.stop();\n\t}\n\n\t/**\n\t * Called when unespected error occurs\n\t */\n\t/*\n\t private onResourceError() : void\n\t {\n\t var msg:string = \"Unexpected parser error\";\n\t if(hasEventListener(LoaderEvent.DEPENDENCY_ERROR)){\n\t var re:LoaderEvent = new LoaderEvent(LoaderEvent.DEPENDENCY_ERROR, \"\");\n\t dispatchEvent(re);\n\t } else{\n\t throw new Error(msg);\n\t }\n\t }\n\t */\n\n\tprivate onAssetRename(event:AssetEvent)\n\t{\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\n\n\t\tif (old != null) {\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\n\t\t} else {\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\n\n\t\t\tif (dict == null)\n\t\t\t\treturn;\n\n\t\t\tdict[event.assetPrevName] = null;\n\t\t\tdict[event.asset.name] = event.asset;\n\t\t}\n\t}\n\n\tprivate onAssetConflictResolved(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event.clone());\n\t}\n}\n\nexport = AssetLibraryBundle;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass AssetLibraryIterator\n{\n\n\tprivate  _assets:Array<IAsset>;\n\tprivate _filtered:Array<IAsset>;\n\n\tprivate _idx:number;\n\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tthis._assets = assets;\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\tpublic get currentAsset():IAsset\n\t{\n\t\t// Return current, or null if no current\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\n\t}\n\n\tpublic get numAssets():number\n\t{\n\t\treturn this._filtered.length;\n\t}\n\n\tpublic next():IAsset\n\t{\n\t\tvar next:IAsset = null;\n\n\t\tif (this._idx < this._filtered.length)\n\t\t\tnext = this._filtered[this._idx];\n\n\t\tthis._idx++;\n\n\t\treturn next;\n\t}\n\n\tpublic reset()\n\t{\n\t\tthis._idx = 0;\n\t}\n\n\tpublic setIndex(index:number)\n\t{\n\t\tthis._idx = index;\n\t}\n\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tif (assetTypeFilter || namespaceFilter) {\n\n\t\t\tvar idx:number;\n\t\t\tvar asset:IAsset;\n\n\n\t\t\tidx = 0;\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\n\n\t\t\tvar l:number = this._assets.length;\n\n\t\t\tfor (var c:number = 0; c < l; c++) {\n\n\t\t\t\tasset = <IAsset> this._assets[c];\n\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._filtered[idx++] = asset;\n\n\t\t\t}\n\n\t\t\t/*\n\t\t\t for each (asset in _assets) {\n\t\t\t // Skip this assets if filtering on type and this is wrong type\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\n\t\t\t if (filterFunc != null && !filterFunc(asset))\n\t\t\t continue;\n\n\t\t\t _filtered[idx++] = asset;\n\t\t\t }\n\t\t\t */\n\n\t\t} else {\n\t\t\tthis._filtered = this._assets;\n\t\t}\n\t}\n}\n\nexport = AssetLibraryIterator;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibraryBundle\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport LoaderSession\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\n */\nclass AssetLibrary\n{\n\t/**\n\t * Creates a new <code>AssetLibrary</code> object.\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t//*/\n\t/**\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibraryBundle as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\treturn AssetLibraryBundle.getInstance(key);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParser(parserClass)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Short-hand for conflictStrategy property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictStrategy\n\t */\n\tpublic static get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\n\t}\n\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\n\t}\n\n\t/**\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictPrecedence\n\t */\n\tpublic static get conflictPrecedence():string\n\t{\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\n\t}\n\n\tpublic static set conflictPrecedence(val:string)\n\t{\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\n\t}\n\n\t/**\n\t * Short-hand for createIterator() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.createIterator()\n\t */\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Short-hand for load() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.load()\n\t */\n\tpublic static load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tAssetLibrary.getBundle().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Short-hand for loadData() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.loadData()\n\t */\n\tpublic static loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tAssetLibrary.getBundle().loadData(data, context, ns, parser);\n\t}\n\n\tpublic static stopLoad()\n\t{\n\t\tAssetLibrary.getBundle().stopAllLoaderSessions();\n\t}\n\n\tpublic static getLoaderSession():LoaderSession\n\t{\n\t\treturn AssetLibrary.getBundle().getLoaderSession();\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAllAssets():Array<IAsset>\n\t{\n\t\treturn AssetLibrary.getBundle().getAllAssets();\n\t}\n\n\t/**\n\t * Short-hand for addEventListener() method on default asset library bundle.\n\t */\n\tpublic static addEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for removeEventListener() method on default asset library bundle.\n\t */\n\tpublic static removeEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for hasEventListener() method on default asset library bundle.\n\n\t public static hasEventListener(type:string):boolean\n\t {\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\n\t}\n\n\t public static willTrigger(type:string):boolean\n\t {\n\t\treturn getBundle().willTrigger(type);\n\t}\n\t */\n\n\t/**\n\t * Short-hand for addAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.addAsset()\n\t */\n\tpublic static addAsset(asset:IAsset)\n\t{\n\t\tAssetLibrary.getBundle().addAsset(asset);\n\t}\n\n\t/**\n\t * Short-hand for removeAsset() method on default asset library bundle.\n\t *\n\t * @param asset The asset which should be removed from the library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAsset()\n\t */\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAssetByName()\n\t */\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAllAssets()\n\t */\n\tpublic static removeAllAssets(dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\n\t */\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\n\t}\n}\n\nexport = AssetLibrary;",
    "/**\n * Enumaration class for precedence when resolving naming conflicts in the library.\n *\n * @see away.library.AssetLibrary.conflictPrecedence\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategy\n */\nclass ConflictPrecedence\n{\n\t/**\n\t * Signals that in a conflict, the previous owner of the conflicting name\n\t * should be favored (and keep it's name) and that the newly renamed asset\n\t * is reverted to a non-conflicting name.\n\t */\n\tpublic static FAVOR_OLD:string = 'favorOld';\n\n\t/**\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\n\t * it's newly defined name) and that the previous owner of that name gets\n\t * renamed to a non-conflicting name.\n\t */\n\tpublic static FAVOR_NEW:string = 'favorNew';\n}\n\nexport = ConflictPrecedence;",
    "import ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\n/**\n * Abstract base class for naming conflict resolution classes. Extend this to create a\n * strategy class which the asset library can use to resolve asset naming conflicts, or\n * use one of the bundled concrete strategy classes:\n *\n * <ul>\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\n * </ul>\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.ConflictStrategy\n * @see away.library.IgnoreConflictStrategy\n * @see away.library.ErrorConflictStrategy\n * @see away.library.NumSuffixConflictStrategy\n */\nclass ConflictStrategyBase\n{\n\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\n\t * classes.\n\t */\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\n\t * would break any state caching that happens inside the strategy class.\n\t */\n\tpublic create():ConflictStrategyBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\n\t * the conflict resolution by applying the new names and dispatching the correct events.\n\t */\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar loser_prev_name:string;\n\t\tvar winner:IAsset;\n\t\tvar loser:IAsset;\n\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\n\n\t\tloser_prev_name = loser.name;\n\n\t\tassetsDictionary[winner.name] = winner;\n\t\tassetsDictionary[nonConflictingName] = loser;\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\n\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\n\t}\n}\n\nexport = ConflictStrategyBase;",
    "import ConflictStrategyBase\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport ErrorConflictStrategy\t\t= require(\"awayjs-core/lib/library/ErrorConflictStrategy\");\nimport IgnoreConflictStrategy\t\t= require(\"awayjs-core/lib/library/IgnoreConflictStrategy\");\nimport NumSuffixConflictStrategy\t= require(\"awayjs-core/lib/library/NumSuffixConflictStrategy\");\n\n/**\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\n * property on an AssetLibrary to define how that library resolves naming conflicts.\n *\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategyBase\n */\nclass ConflictStrategy\n{\n\t/**\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\n\t * a numeric suffix appended to the base name.\n\t */\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\n\n\t/**\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\n\t */\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\n\n\t/**\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\n\t * to have the library automatically rename assets to avoid such conflicts.\n\t */\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\n\n\tconstructor(include?:ConflictStrategyBase)\n\t{\n\t\t//TODO: find out why typescript d.ts files do not include this class\n\t}\n}\n\nexport = ConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass ErrorConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new Error('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new ErrorConflictStrategy();\n\t}\n}\n\nexport = ErrorConflictStrategy;",
    "class IDUtil\n{\n\t/**\n\t *  @private\n\t *  Char codes for 0123456789ABCDEF\n\t */\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\n\n\t/**\n\t *  Generates a UID (unique identifier) based on ActionScript's\n\t *  pseudo-random number generator and the current time.\n\t *\n\t *  <p>The UID has the form\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\n\t *\n\t *  <p>This UID will not be truly globally unique; but it is the best\n\t *  we can do without player support for UID generation.</p>\n\t *\n\t *  @return The newly-generated UID.\n\t *\n\t *  @langversion 3.0\n\t *  @playerversion Flash 9\n\t *  @playerversion AIR 1.1\n\t *  @productversion Flex 3\n\t */\n\tpublic static createUID():string\n\t{\n\t\tvar uid = new Array(36);\n\t\tvar index:number = 0;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\t\tfor (j = 0; j < 4; j++)\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\t\t}\n\n\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\tvar time:number = new Date().getTime();\n\t\t// Note: time is the number of milliseconds since 1970,\n\t\t// which is currently more than one trillion.\n\t\t// We use the low 8 hex digits of this number in the UID.\n\t\t// Just in case the system clock has been reset to\n\t\t// Jan 1-4, 1970 (in which case this number could have only\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\n\t\t// before taking the low digits.\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = timeString.charCodeAt(i);\n\n\t\tfor (i = 0; i < 4; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\treturn String.fromCharCode.apply(null, uid);\n\t}\n\n\t/**\n\t * Returns the decimal representation of a hex digit.\n\t * @private\n\n\t private static getDigit(hex:string):number\n\t {\n\t\tswitch (hex) {\n\t\t\tcase \"A\":\n\t\t\tcase \"a\":\n\t\t\t\treturn 10;\n\t\t\tcase \"B\":\n\t\t\tcase \"b\":\n\t\t\t\treturn 11;\n\t\t\tcase \"C\":\n\t\t\tcase \"c\":\n\t\t\t\treturn 12;\n\t\t\tcase \"D\":\n\t\t\tcase \"d\":\n\t\t\t\treturn 13;\n\t\t\tcase \"E\":\n\t\t\tcase \"e\":\n\t\t\t\treturn 14;\n\t\t\tcase \"F\":\n\t\t\tcase \"f\":\n\t\t\t\treturn 15;\n\t\t\tdefault:\n\t\t\t\treturn new uint(hex);\n\t\t}\n\t}\n\t */\n\n}\n\nexport = IDUtil;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass IgnoreConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\t// Do nothing, ignore the fact that there is a conflict.\n\t\treturn;\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new IgnoreConflictStrategy();\n\t}\n}\n\nexport = IgnoreConflictStrategy;",
    "class LoaderContext\n{\n\tpublic static UNDEFINED:number = 0;\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\n\tpublic static MULTIPASS_MATERIALS:number = 2;\n\n\tprivate _includeDependencies:boolean;\n\tprivate _dependencyBaseUrl:string;\n\tprivate _embeddedDataByUrl:Object;\n\tprivate _remappedUrls:Object;\n\tprivate _materialMode:number;\n\n\tprivate _overrideAbsPath:boolean;\n\tprivate _overrideFullUrls:boolean;\n\n\t/**\n\t * LoaderContext provides configuration for the LoaderSession load() and parse() operations.\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\n\t * embedded data.\n\t *\n\t * @see away.loading.LoaderSession\n\t */\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\n\t{\n\t\tthis._includeDependencies = includeDependencies;\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\n\t\tthis._embeddedDataByUrl = {};\n\t\tthis._remappedUrls = {};\n\t\tthis._materialMode = LoaderContext.UNDEFINED;\n\t}\n\n\t/**\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\n\t * parseData() operations) should be automatically loaded. Defaults to true.\n\t */\n\tpublic get includeDependencies():boolean\n\t{\n\t\treturn this._includeDependencies;\n\t}\n\n\tpublic set includeDependencies(val:boolean)\n\t{\n\t\tthis._includeDependencies = val;\n\t}\n\n\t/**\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\n\t * Options:\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\n\t *\n\t */\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic set materialMode(materialMode:number)\n\t{\n\t\tthis._materialMode = materialMode;\n\t}\n\n\t/**\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\n\t * Absolute paths will not be affected by the value of this property.\n\t */\n\tpublic get dependencyBaseUrl():string\n\t{\n\t\treturn this._dependencyBaseUrl;\n\t}\n\n\tpublic set dependencyBaseUrl(val:string)\n\t{\n\t\tthis._dependencyBaseUrl = val;\n\t}\n\n\t/**\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideAbsolutePaths():boolean\n\t{\n\t\treturn this._overrideAbsPath;\n\t}\n\n\tpublic set overrideAbsolutePaths(val:boolean)\n\t{\n\t\tthis._overrideAbsPath = val;\n\t}\n\n\t/**\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideFullURLs():boolean\n\t{\n\t\treturn this._overrideFullUrls;\n\t}\n\n\tpublic set overrideFullURLs(val:boolean)\n\t{\n\t\tthis._overrideFullUrls = val;\n\t}\n\n\t/**\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\n\t * expected by the loaded file.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param newUrl The URL from which away.should load the resource instead.\n\t *\n\t * @see mapUrlToData()\n\t */\n\tpublic mapUrl(originalUrl:string, newUrl:string)\n\t{\n\t\tthis._remappedUrls[originalUrl] = newUrl;\n\t}\n\n\t/**\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\n\t */\n\tpublic mapUrlToData(originalUrl:string, data:any)\n\t{\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether embedded data has been mapped to a particular URL.\n\t */\n\tpublic _iHasDataForUrl(url:string):boolean\n\t{\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns embedded data for a particular URL.\n\t */\n\tpublic _iGetDataForUrl(url:string):any\n\t{\n\t\treturn this._embeddedDataByUrl[url];\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether a replacement URL has been mapped to a particular URL.\n\t */\n\tpublic _iHasMappingForUrl(url:string):boolean\n\t{\n\t\treturn this._remappedUrls.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns new (replacement) URL for a particular original URL.\n\t */\n\tpublic _iGetRemappedUrl(originalUrl:string):string\n\t{\n\t\treturn this._remappedUrls[originalUrl];\n\t}\n}\n\nexport = LoaderContext;",
    "import LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport Image2DParser\t\t\t= require(\"awayjs-core/lib/parsers/Image2DParser\");\nimport ImageCubeParser\t\t\t= require(\"awayjs-core/lib/parsers/ImageCubeParser\");\nimport TextureAtlasParser\t\t= require(\"awayjs-core/lib/parsers/TextureAtlasParser\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport WaveAudioParser\t\t\t= require(\"awayjs-core/lib/parsers/WaveAudioParser\");\n\n\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n/**\n * Dispatched when an image asset dimensions are not a power of 2\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * LoaderSession can load any file format that away.supports (or for which a third-party parser\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\n * and for when the resource (or it's dependencies) have been loaded.\n *\n * The LoaderSession will not make assets available in any other way than through the dispatched\n * events. To store assets and make them available at any point from any module in an application,\n * use the AssetLibrary to load and manage assets.\n *\n * @see away.library.AssetLibrary\n */\nclass LoaderSession extends EventDispatcher\n{\n\tprivate _context:LoaderContext;\n\tprivate _uri:string;\n\tprivate _materialMode:number;\n\n\tprivate _errorHandlers:Array<Function>;\n\tprivate _parseErrorHandlers:Array<Function>;\n\n\tprivate _stack:Array<ResourceDependency>;\n\tprivate _baseDependency:ResourceDependency;\n\tprivate _currentDependency:ResourceDependency;\n\tprivate _namespace:string;\n\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\n\tprivate _onLoadCompleteDelegate:(event:Event) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\n\t// Image parser only parser that is added by default, to save file size.\n\tprivate static _parsers:Array<any> = new Array<any>(Image2DParser, ImageCubeParser, TextureAtlasParser, WaveAudioParser);\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parser The parser class to enable.\n\t *\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parser)\n\t{\n\t\tif (LoaderSession._parsers.indexOf(parser) < 0)\n\t\t\tLoaderSession._parsers.push(parser);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * LoaderSession can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parsers A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parsers:Array<Object>)\n\t{\n\t\tfor (var c:number = 0; c < parsers.length; c++)\n\t\t\tLoaderSession.enableParser(parsers[ c ]);\n\t}\n\n\t/**\n\t * Returns the base dependency of the loader\n\t */\n\tpublic get baseDependency():ResourceDependency\n\t{\n\t\treturn this._baseDependency;\n\t}\n\n\t/**\n\t * Create a new ResourceLoadSession object.\n\t */\n\tconstructor(materialMode:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = materialMode;\n\n\t\tthis._stack = new Array<ResourceDependency>();\n\t\tthis._errorHandlers = new Array<Function>();\n\t\tthis._parseErrorHandlers = new Array<Function>();\n\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t\tthis._onLoadCompleteDelegate = (event:Event) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\n\t */\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\n\t\tthis._context = context;\n\t\tthis._namespace = ns;\n\n\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\n\t\tthis.retrieveDependency(this._baseDependency);\n\t}\n\n\t/**\n\t * Loads a resource from already loaded data.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\n\t */\n\tpublic loadData(data:any, id:string, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._uri = id;\n\t\tthis._context = context;\n\t\tthis._namespace = ns;\n\n\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\n\t\tthis.retrieveDependency(this._baseDependency);\n\t}\n\n\t/**\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\n\t * stack when complete and continues on the top set.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveNext(parser:ParserBase = null)\n\t{\n\t\tif (this._currentDependency.dependencies.length) {\n\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\n\n\t\t\tthis._stack.push(this._currentDependency);\n\t\t\tthis.retrieveDependency(next);\n\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\n\n\t\t\tthis._currentDependency.parser._iResumeParsing();\n\t\t\tthis._stack.pop();\n\n\t\t} else if (this._stack.length) {\n\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\n\n\t\t\tthis._currentDependency = this._stack.pop();\n\n\t\t\tif (prev._iSuccess)\n\t\t\t\tprev.resolve();\n\n\t\t\tthis.retrieveNext(parser);\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.RESOURCE_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a single dependency.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveDependency(dependency:ResourceDependency)\n\t{\n\t\tvar data:any;\n\n\t\tif (this._context && this._context.materialMode != 0)\n\t\t\tthis._materialMode = this._context.materialMode;\n\n\t\tthis._currentDependency = dependency;\n\n\t\tdependency._iLoader = new URLLoader();\n\n\t\tthis.addEventListeners(dependency._iLoader);\n\n\t\t// Get already loaded (or mapped) data if available\n\t\tdata = dependency.data;\n\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\n\n\t\tif (data) {\n\t\t\tif (data.constructor === Function)\n\t\t\t\tdata = new data();\n\n\t\t\tdependency._iSetData(data);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// No need to parse. The parent parser is expecting this\n\t\t\t\t// to be raw data so it can be passed directly.\n\t\t\t\tdependency.resolve();\n\n\t\t\t\t// Move on to next dependency\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\tthis.parseDependency(dependency);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// Resolve URL and start loading\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// Always use binary for raw data loading\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t} else {\n\n\t\t\t\tif (!dependency.parser)\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\n\n\t\t\t\tif (dependency.parser) {\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\n\t\t\t\t} else {\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\n\t\t\t\t\t// file type check will determine format after load, and if\n\t\t\t\t\t// binary, a text load will have broken the file data.\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdependency._iLoader.load(dependency.request);\n\t\t}\n\t}\n\n\tprivate joinUrl(base:string, end:string):string\n\t{\n\t\tif (end.charAt(0) == '/' || end.charAt(0) == '\\\\')\n\t\t\tend = end.substr(1);\n\n\t\tif (end.charAt(0) == '.')\n\t\t\tend = end.substr(2);\n\n\t\tif (base.length == 0)\n\t\t\treturn end;\n\n\t\tif (base.charAt(base.length - 1) == '/' || base.charAt(base.length - 1) == '\\\\')\n\t\t\tbase = base.substr(0, base.length - 1);\n\n\t\treturn base.concat('/', end);\n\n\t}\n\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\n\t{\n\t\tvar scheme_re:RegExp;\n\t\tvar base:string;\n\t\tvar url:string = dependency.request.url;\n\n\t\t// Has the user re-mapped this URL?\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\n\t\t\treturn this._context._iGetRemappedUrl(url);\n\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\n\t\t// We will not try to resolve this since the user can probably be\n\t\t// thrusted to know this URL better than our automatic resolver. :)\n\t\tif (url == this._uri)\n\t\t\treturn url;\n\n\n\t\t// Absolute URL? Check if starts with slash or a URL\n\t\t// scheme definition (e.g. ftp://, http://, file://)\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\n\n\t\tif (url.charAt(0) == '/') {\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\n\t\t\t\treturn url;\n\t\t} else if (scheme_re.test(url)) {\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\n\t\t\tif (this._context && this._context.overrideFullURLs) {\n\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\n\t\t\t}\n\t\t}\n\n\t\t// Since not absolute, just get rid of base file name to find it's\n\t\t// folder and then concatenate dynamic URL\n\t\tif (this._context && this._context.dependencyBaseUrl) {\n\t\t\tbase = this._context.dependencyBaseUrl;\n\t\t\treturn this.joinUrl(base, url);\n\t\t} else {\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\n\t\t\treturn this.joinUrl(base, url);\n\t\t}\n\t}\n\n\tprivate retrieveParserDependencies()\n\t{\n\t\tif (!this._currentDependency)\n\t\t\treturn;\n\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies;\n\t\tvar i:number, len:number = parserDependancies.length;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\n\n\t\t// Since more dependencies might be added eventually, empty this\n\t\t// list so that the same dependency isn't retrieved more than once.\n\t\tparserDependancies.length = 0;\n\n\t\tthis._stack.push(this._currentDependency);\n\n\t\tthis.retrieveNext();\n\t}\n\n\tprivate resolveParserDependencies()\n\t{\n\t\tthis._currentDependency._iSuccess = true;\n\n\t\t// Retrieve any last dependencies remaining on this parser, or\n\t\t// if none exists, just move on.\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\n\t\t\tthis.retrieveParserDependencies();\n\t\telse\n\t\t\tthis.retrieveNext();\n\t}\n\n\t/**\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadError(event:IOErrorEvent)\n\t{\n\t\tvar handled:boolean;\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\t\tvar loader:URLLoader = <URLLoader> event.target;//TODO: keep on eye on this one\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR )) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when LoaderSession does have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._errorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\n\n\t\t\t\tthis._currentDependency.resolveFailure();\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\t// Either this was the base file (last left in the stack) or\n\t\t\t\t// default behavior was prevented by the handlers, and hence\n\t\t\t\t// there is nothing more to do than clean up and bail.\n\t\t\t\tthis.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Error event was not handled by listeners directly on LoaderSession or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error();\n\t\t}\n\t}\n\n\t/**\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\n\t * @param event\n\t */\n\tprivate onParseError(event:ParserEvent)\n\t{\n\t\tvar handled:boolean;\n\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\n\t\tvar loader:URLLoader = <URLLoader>event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when LoaderSession does\n\t\t\t// have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\t\t\tthis.retrieveNext();\n\t\t} else {\n\t\t\t// Error event was not handled by listeners directly on LoaderSession or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error(event.message);\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Add loaded asset to list of assets retrieved as part\n\t\t// of the current dependency. This list will be inspected\n\t\t// by the parent parser when dependency is resolved\n\t\tif (this._currentDependency)\n\t\t\tthis._currentDependency.assets.push(event.asset);\n\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\n\n\t\tif (!this._currentDependency.suppresAssetEvents)\n\t\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate onReadyForDependencies(event:ParserEvent)\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tif (this._context && !this._context.includeDependencies)\n\t\t\tparser._iResumeParsing();\n\t\telse\n\t\t\tthis.retrieveParserDependencies();\n\t}\n\n\t/**\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tvar loader:URLLoader = <URLLoader> event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\t// Resolve this dependency\n\t\tthis._currentDependency._iSetData(loader.data);\n\n\t\tif (this._currentDependency.retrieveAsRawData) {\n\t\t\t// No need to parse this data, which should be returned as is\n\t\t\tthis.resolveParserDependencies();\n\t\t} else {\n\t\t\tthis.parseDependency(this._currentDependency);\n\t\t}\n\t}\n\n\t/**\n\t * Called when parsing is complete.\n\t */\n\tprivate onParseComplete(event:ParserEvent):void\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\n\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\t/**\n\t * Called when an image is too large or it's dimensions are not a power of 2\n\t * @param event\n\t */\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate addEventListeners(loader:URLLoader)\n\t{\n\t\tloader.addEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.addEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tprivate removeEventListeners(loader:URLLoader)\n\t{\n\t\tloader.removeEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.removeEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis.dispose();\n\t}\n\n\tprivate dispose()\n\t{\n\t\tthis._errorHandlers = null;\n\t\tthis._parseErrorHandlers = null;\n\t\tthis._context = null;\n\t\tthis._stack = null;\n\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\n\n\t\tthis._currentDependency = null;\n\n\t}\n\n\t/**\n\t * @private\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\n\t * add error event listeners to the LoaderSession instance. This system is used instead of\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\n\t * that if hasEventListener() returns true, it's client code that's listening for the\n\t * event. Secondly, functions added as error handler through this custom method are\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\n\t * whether they in turn had any client code listening for the event.) If no handlers\n\t * return true, the LoaderSession knows that the event wasn't handled and will throw an RTE.\n\t */\n\n\tpublic _iAddParseErrorHandler(handler)\n\t{\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\n\t\t\tthis._parseErrorHandlers.push(handler);\n\t}\n\n\tpublic _iAddErrorHandler(handler)\n\t{\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\n\t\t\tthis._errorHandlers.push(handler);\n\t}\n\n\n\t/**\n\t * Guesses the parser to be used based on the file contents.\n\t * @param data The data to be parsed.\n\t * @param uri The url or id of the object to be parsed.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromData(data:any):ParserBase\n\t{\n\t\tvar len:number = LoaderSession._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--)\n\t\t\tif (LoaderSession._parsers[i].supportsData(data))\n\t\t\t\treturn new LoaderSession._parsers[i]();\n\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Initiates parsing of the loaded dependency.\n\t *\n\t * @param The dependency to be parsed.\n\t */\n\tprivate parseDependency(dependency:ResourceDependency):void\n\t{\n\t\tvar parser:ParserBase = dependency.parser;\n\n\t\t// If no parser has been defined, try to find one by letting\n\t\t// all plugged in parsers inspect the actual data.\n\t\tif (!parser)\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\n\n\t\tif (parser) {\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t\tif (dependency.request && dependency.request.url)\n\t\t\t\tparser._iFileName = dependency.request.url;\n\n\t\t\tparser.materialMode = this._materialMode;\n\n\t\t\tparser.parseAsync(dependency.data);\n\n\t\t} else {\n\t\t\tvar handled:boolean;\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\";\n\t\t\tvar event:ParserEvent = new ParserEvent(ParserEvent.PARSE_ERROR, message);\n\t\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\t\tthis.dispatchEvent(event);\n\t\t\t\thandled = true;\n\t\t\t} else {\n\t\t\t\t// TODO: Consider not doing this even when LoaderSession does\n\t\t\t\t// have it's own LOAD_ERROR listener\n\t\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tif (!handled)\n\t\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t\t}\n\n\t\t\tif (handled) {\n\t\t\t\tthis.retrieveNext();\n\t\t\t} else {\n\t\t\t\t// Error event was not handled by listeners directly on LoaderSession or\n\t\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Guesses the parser to be used based on the file extension.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromSuffix(url:string):ParserBase\n\t{\n\t\t// Get rid of query string if any and extract extension\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\n\n\t\tvar len:number = LoaderSession._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\n\t\t\tvar parserClass:any = LoaderSession._parsers[i];\n\t\t\tif (parserClass.supportsType(fileExtension))\n\t\t\t\treturn new parserClass();\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport = LoaderSession;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass NumSuffixConflictStrategy extends ConflictStrategyBase\n{\n\tprivate _separator:string;\n\tprivate _next_suffix:Object;\n\n\tconstructor(separator:string = '.')\n\t{\n\t\tsuper();\n\n\t\tthis._separator = separator;\n\t\tthis._next_suffix = {};\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar orig:string;\n\t\tvar new_name:string;\n\t\tvar base:string;\n\t\tvar suffix:number;\n\n\t\torig = changedAsset.name;\n\n\t\tif (orig.indexOf(this._separator) >= 0) {\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\n\t\t\t// use entire name as base\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\n\n\t\t\tif (isNaN(suffix)) {\n\t\t\t\tbase = orig;\n\t\t\t\tsuffix = 0;\n\t\t\t}\n\n\t\t} else {\n\t\t\tbase = orig;\n\t\t\tsuffix = 0;\n\t\t}\n\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\n\n\t\t\tsuffix = this._next_suffix[base];\n\n\t\t}\n\n\t\t// Find the first suffixed name that does\n\t\t// not collide with other names.\n\t\tdo {\n\n\t\t\tsuffix++;\n\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\n\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\n\n\t\tthis._next_suffix[ base ] = suffix;\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\n\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new NumSuffixConflictStrategy(this._separator);\n\t}\n}\n\nexport = NumSuffixConflictStrategy;",
    "import StreamingAudioChannel\t= require(\"awayjs-core/lib/managers/StreamingAudioChannel\");\nimport WebAudioChannel\t\t\t= require(\"awayjs-core/lib/managers/WebAudioChannel\");\nimport IAudioChannel\t\t\t= require(\"awayjs-core/lib/managers/IAudioChannel\");\nimport IAudioChannelClass\t\t= require(\"awayjs-core/lib/managers/IAudioChannelClass\");\n\nclass AudioManager\n{\n\tpublic static getChannel(byteLength:number):IAudioChannel\n\t{\n\t\t//choose best audio channel by bytelength\n\t\tvar channelClass:IAudioChannelClass = (byteLength > 50000)? StreamingAudioChannel : WebAudioChannel;\n\n\t\tvar i:number = 0;\n\t\twhile(channelClass._channels[i] && channelClass._channels[i].isPlaying())\n\t\t\ti++;\n\n\t\tif (i == channelClass.maxChannels) {\n\t\t\t//pick the oldest channel to reuse, ignoring looping channels\n\t\t\tvar len:number = channelClass._channels.length;\n\t\t\tfor (var j:number = 0; j < len; j++) {\n\t\t\t\tif (!channelClass._channels[j].isLooping()) {\n\t\t\t\t\tchannelClass._channels.push(channelClass._channels.splice(j, 1)[0]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar channel:IAudioChannel = channelClass._channels[channelClass.maxChannels - 1];\n\t\t\tchannel.stop();\n\t\t\treturn channel;\n\t\t}\n\n\t\treturn channelClass._channels[i] || (channelClass._channels[i] = new channelClass());\n\t}\n\n\n}\n\nexport = AudioManager;",
    "\nclass StreamingAudioChannel\n{\n\tpublic static maxChannels:number = 4;\n\n\tpublic static _channels:Array<StreamingAudioChannel> = new Array<StreamingAudioChannel>();\n\n\tprivate _sourceOpenDelegate:(event) => void;\n\tprivate _updateEndDelegate:(event) => void;\n\tprivate _sourceBuffer:SourceBuffer;\n\tprivate _sourceDirty:boolean;\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _isQueuing:boolean;\n\tprivate _isOpening:boolean;\n\tprivate _buffer:ArrayBuffer;\n\tprivate _offset:number;\n\tprivate _volume:number;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\t\n\tprivate _audio:HTMLAudioElement;\n\t\n\tprivate _mediaSource:MediaSource;\n\tprivate _urlString:string;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime - this._startTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._audio.volume = this._volume;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._sourceOpenDelegate = (event) => this._sourceOpen(event);\n\t\tthis._updateEndDelegate = (event) => this._updateEnd(event);\n\n\t\tthis._audio = new Audio();\n\t\tthis._audio.ontimeupdate = (event) => this._onTimeUpdate(event);\n\n\t\tthis._updateSource();\n\n\t}\n\t\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false)\n\t{\n\t\tthis._isPlaying = true;\n\n\t\tif (this._isLooping || this._isLooping != loop) {\n\t\t\tthis._isLooping = loop;\n\t\t\tthis._sourceDirty = true;\n\t\t}\n\n\t\tif (this._sourceDirty)\n\t\t\tthis._updateSource();\n\n\t\tthis._buffer = buffer;\n\t\tthis._offset = offset;\n\n\t\tif (!this._isQueuing && !this._isOpening)\n\t\t\tthis._queueBuffer();\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t}\n\t\n\tprivate _sourceOpen(event)\n\t{\n\t\tthis._isOpening = false;\n\n\t\tthis._sourceBuffer = this._mediaSource.addSourceBuffer('audio/mpeg');\n\t\tthis._sourceBuffer.addEventListener(\"updateend\", this._updateEndDelegate);\n\n\t\tif (this._isPlaying)\n\t\t\tthis._queueBuffer();\n\t}\n\n\tprivate _queueBuffer()\n\t{\n\t\tthis._isQueuing = true;\n\n\t\tthis._startTime = this._sourceBuffer.timestampOffset;\n\t\tthis._sourceBuffer.appendBuffer(this._buffer);\n\t}\n\n\tprivate _updateEnd(event)\n\t{\n\t\tthis._isQueuing = false;\n\n\t\tif (this._isLooping)\n\t\t\tthis._mediaSource.endOfStream();\n\n\t\tthis._duration = this._sourceBuffer.timestampOffset - this._startTime;\n\n\t\tthis._audio.currentTime = this._startTime + this._offset;\n\t\tthis._audio.play();\n\t}\n\n\tprivate _onTimeUpdate(event)\n\t{\n\t\t//TODO: more accurate end detection\n\t\tif (this._duration < this._audio.currentTime - this._startTime + 0.1) {\n\t\t\tthis.stop();\n\t\t}\n\t}\n\n\tprivate _updateSource()\n\t{\n\t\tif(this._mediaSource)\n\t\t\tthis._disposeSource();\n\n\t\tthis._isQueuing = false;\n\t\tthis._isOpening = true;\n\n\t\tthis._mediaSource = new MediaSource();\n\t\tthis._mediaSource.addEventListener(\"sourceopen\", this._sourceOpenDelegate);\n\t\tthis._urlString = URL.createObjectURL(this._mediaSource);\n\t\tthis._audio.src = this._urlString;\n\t\tthis._audio.loop = this._isLooping;\n\n\t\tthis._sourceDirty = false;\n\t}\n\n\tprivate _disposeSource()\n\t{\n\t\tif (!this._isOpening) {\n\t\t\tif (this._sourceBuffer.timestampOffset)\n\t\t\t\tthis._sourceBuffer.remove(0, this._sourceBuffer.timestampOffset);\n\n\t\t\tthis._sourceBuffer.removeEventListener(\"updateend\", this._updateEndDelegate);\n\t\t\tthis._mediaSource.removeSourceBuffer(this._sourceBuffer);\n\t\t\tdelete this._sourceBuffer;\n\t\t\tthis._sourceBuffer = null;\n\t\t}\n\n\t\tthis._mediaSource.removeEventListener(\"sourceopen\", this._sourceOpenDelegate);\n\t\tURL.revokeObjectURL(this._urlString);\n\t\tdelete this._mediaSource;\n\t\tthis._mediaSource = null;\n\t}\n}\n\nexport = StreamingAudioChannel;",
    "\nclass WebAudioChannel\n{\n\tpublic static maxChannels:number = 32;\n\n\tpublic static _channels:Array<WebAudioChannel> = new Array<WebAudioChannel>();\n\n\tprivate static _audioCtx;\n\tprivate _audioCtx;\n\n\tprivate _gainNode;\n\tprivate _source;\n\t\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\n\tprivate _isDecoded:boolean = false;\n\tprivate _currentTime:number;\n\tprivate _volume:number = 1;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\n\tprivate _onEndedDelegate : (event:any) => void;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn this._currentTime;\n\n\t\treturn this._audioCtx.currentTime - this._startTime;\n\t}\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._gainNode.gain.value = this._volume;\n\t}\n\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audioCtx = WebAudioChannel._audioCtx || (WebAudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n\t\t\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode.gain.value = this._volume;\n\n\t\tthis._gainNode.connect(this._audioCtx.destination);\n\n\t\tthis._onEndedDelegate = (event) => this._onEnded(event);\n\t}\n\t\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false)\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._currentTime = offset;\n\n\t\tthis._isDecoded = false;\n\n\t\tthis._audioCtx.decodeAudioData(buffer, (buffer) => this._onDecodeComplete(buffer), (event) => this._onError(event));\n\t}\n\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tif (this._isDecoded) {\n\t\t\tthis._currentTime = this._audioCtx.currentTime - this._startTime;\n\t\t\tthis._source.stop(this._audioCtx.currentTime);\n\t\t}\n\n\t\tif (this._source)\n\t\t\tthis._disposeSource();\n\t}\n\n\tpublic _onDecodeComplete(buffer)\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isDecoded = true;\n\n\t\tif (this._source)\n\t\t\tthis._disposeSource();\n\n\t\tthis._source = this._audioCtx.createBufferSource();\n\n\t\tthis._source.loop = this._isLooping;\n\t\tthis._source.connect(this._gainNode);\n\n\t\tthis._source.buffer = buffer;\n\t\tthis._duration = buffer.duration;\n\n\t\tthis._startTime = this._audioCtx.currentTime - this._currentTime;\n\t\tthis._source.addEventListener(\"ended\", this._onEndedDelegate);\n\t\tthis._source.start(this._audioCtx.currentTime, this._currentTime);\n\t}\n\n\tpublic _onError(event)\n\t{\n\t}\n\n\tprivate _onEnded(event):void\n\t{\n\t\tthis.stop();\n\t}\n\n\tprivate _disposeSource()\n\t{\n\t\t//clean up\n\t\tthis._source.removeEventListener(\"ended\", this._onEndedDelegate);\n\t\tthis._source.disconnect();\n\t\tdelete this._source.buffer;\n\t\tdelete this._source;\n\t\tthis._source = null;\n\t}\n}\n\nexport = WebAudioChannel;",
    "class CrossDomainPolicy\n{\n\tpublic static ANONYMOUS:string = 'anonymous';\n\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\n}\n\nexport = CrossDomainPolicy;\n",
    "class URLLoaderDataFormat\n{\n\t/**\n\t * TEXT\n\t * @type {string}\n\t */\n\tpublic static TEXT:string = \"text\";\n\n\t/**\n\t * Variables / Value Pairs\n\t * @type {string}\n\t */\n\tpublic static VARIABLES:string = \"variables\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BLOB:string = \"blob\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BINARY:string = \"binary\";\n}\n\nexport = URLLoaderDataFormat;",
    "import URLLoaderDataFormat\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\nimport URLVariables\t\t\t\t\t= require(\"awayjs-core/lib/net/URLVariables\");\nimport AwayEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport HTTPStatusEvent\t\t\t\t= require(\"awayjs-core/lib/events/HTTPStatusEvent\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport AwayProgressEvent\t\t\t= require(\"awayjs-core/lib/events/ProgressEvent\");\n\n/**\n * The URLLoader is used to load a single file, as part of a resource.\n *\n * While URLLoader can be used directly, e.g. to create a third-party asset\n * management system, it's recommended to use any of the classes Loader3D, LoaderSession\n * and AssetLibrary instead in most cases.\n *\n * @see LoaderSession\n * @see away.library.AssetLibrary\n */\nclass URLLoader extends EventDispatcher\n{\n\tprivate _XHR:XMLHttpRequest;\n\tprivate _bytesLoaded:number = 0;\n\tprivate _bytesTotal:number = 0;\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\n\tprivate _loadError:boolean = false;\n\n\tprivate _request:URLRequest;\n\tprivate _data:any;\n\n\tprivate _loadStartEvent:AwayEvent;\n\tprivate _loadErrorEvent:IOErrorEvent;\n\tprivate _loadCompleteEvent:AwayEvent;\n\tprivate _progressEvent:AwayProgressEvent;\n\n\t/**\n\t * Creates a new URLLoader object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get url():string\n\t{\n\n\t\treturn this._request? this._request.url : '';\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\n\t/**\n\t *\n\t * URLLoaderDataFormat.BINARY\n\t * URLLoaderDataFormat.TEXT\n\t * URLLoaderDataFormat.VARIABLES\n\t *\n\t * @param format\n\t */\n\tpublic set dataFormat(format:string)\n\t{\n\t\tthis._dataFormat = format;\n\t}\n\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesLoaded():number\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesTotal():number\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * Load a resource from a file.\n\t *\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\n\t */\n\tpublic load(request:URLRequest):void\n\t{\n\t\tthis._request = request;\n\n\t\tthis.initXHR();\n\n\t\tif (request.method === URLRequestMethod.POST)\n\t\t\tthis.postRequest(request);\n\t\telse\n\t\t\tthis.getRequest(request);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic close():void\n\t{\n\t\tthis._XHR.abort();\n\t\tthis.disposeXHR();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tif (this._XHR)\n\t\t\tthis._XHR.abort();\n\n\t\tthis.disposeXHR();\n\n\t\tthis._data = null;\n\t\tthis._dataFormat = null;\n\t\tthis._bytesLoaded = null;\n\t\tthis._bytesTotal = null;\n\t}\n\n\t/**\n\t *\n\t * @param xhr\n\t * @param responseType\n\t */\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\n\t{\n\t\tswitch (responseType) {\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\txhr.responseType = responseType;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\txhr.responseType = '';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate getRequest(request:URLRequest):void\n\t{\n\t\ttry {\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\t\t\tthis._XHR.send(); // No data to send\n\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate postRequest(request:URLRequest):void\n\t{\n\t\tthis._loadError = false;\n\n\t\tthis._XHR.open(request.method, request.url, request.async);\n\n\t\tif (request.data != null) {\n\t\t\tif (request.data instanceof URLVariables) {\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\n\n\t\t\t\ttry {\n\t\t\t\t\tthis._XHR.responseType = 'text';\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\n\t\t\t\tif (request.data)\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\n\t\t\t\telse\n\t\t\t\t\tthis._XHR.send(); // no data to send\n\t\t\t}\n\t\t} else {\n\t\t\tthis._XHR.send(); // No data to send\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * @param error {XMLHttpRequestException}\n\t */\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\n\t{\n\t\tswitch (error.code) {\n\n\t\t/******************************************************************************************************************************************************************************************************\n\t\t *\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\n\t\t *\n\t\t ******************************************************************************************************************************************************************************************************/\n\n\t\t\tcase 101:\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initXHR()\n\t{\n\t\tif (!this._XHR) {\n\t\t\tthis._XHR = new XMLHttpRequest();\n\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate disposeXHR()\n\t{\n\t\tif (this._XHR !== null) {\n\t\t\tthis._XHR.onloadstart = null;\n\t\t\tthis._XHR.onprogress = null;\n\t\t\tthis._XHR.onabort = null;\n\t\t\tthis._XHR.onerror = null;\n\t\t\tthis._XHR.onload = null;\n\t\t\tthis._XHR.ontimeout = null;\n\t\t\tthis._XHR.onloadend = null;\n\t\t\tthis._XHR = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decodeURLVariables(source:string):Object\n\t{\n\t\tvar result:Object = new Object();\n\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\n\t\treturn result;\n\t}\n\n\t// XMLHttpRequest - Event Handlers\n\n\t/**\n\t * When XHR state changes\n\t * @param event\n\t */\n\tprivate onReadyStateChange(event:Event)\n\t{\n\t\tif (this._XHR.readyState == 4) {\n\t\t\tif (this._XHR.status == 404) {\n\t\t\t\tthis._loadError = true;\n\n\t\t\t\tif (!this._loadErrorEvent)\n\t\t\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new HTTPStatusEvent(HTTPStatusEvent.HTTP_STATUS, this._XHR.status));\n\t\t}\n\t}\n\n\t/**\n\t * When the request has completed, regardless of whether or not it was successful.\n\t * @param event\n\t */\n\tprivate onLoadEnd(event:ProgressEvent)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\t}\n\n\t/**\n\t * When the author specified timeout has passed before the request could complete.\n\t * @param event\n\t */\n\tprivate onTimeOut(event:Event)\n\t{\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\n\t}\n\n\t/**\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t * @param event\n\t */\n\tprivate onAbort(event:UIEvent)\n\t{\n\t\t// TODO: investigate whether this needs to be an IOError\n\t}\n\n\t/**\n\t * While loading and sending data.\n\t * @param event\n\t */\n\tprivate onProgress(event:ProgressEvent)\n\t{\n\t\tif (!this._progressEvent)\n\t\t\tthis._progressEvent = new AwayProgressEvent(AwayProgressEvent.PROGRESS);\n\n\t\tthis._progressEvent.bytesTotal = event.total;\n\t\tthis._progressEvent.bytesLoaded = event.loaded;\n\n\t\tthis.dispatchEvent(this._progressEvent);\n\t}\n\n\t/**\n\t * When the request starts.\n\t * @param event\n\t */\n\tprivate onLoadStart(event:ProgressEvent)\n\t{\n\t\tif (!this._loadStartEvent)\n\t\t\tthis._loadStartEvent = new AwayEvent(AwayEvent.OPEN);\n\n\t\tthis.dispatchEvent(this._loadStartEvent);\n\t}\n\n\t/**\n\t * When the request has successfully completed.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\n\t\tswitch (this._dataFormat) {\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\tthis._data = this._XHR.response;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!this._loadCompleteEvent)\n\t\t\tthis._loadCompleteEvent = new AwayEvent(AwayEvent.COMPLETE);\n\n\t\tthis.dispatchEvent(this._loadCompleteEvent);\n\t}\n\n\t/**\n\t * When the request has failed. ( due to network issues ).\n\t * @param event\n\t */\n\tprivate onLoadError(event:Event)\n\t{\n\t\tthis._loadError = true;\n\n\t\tif (!this._loadErrorEvent)\n\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t}\n}\n\nexport = URLLoader;",
    "class URLRequestMethod\n{\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static POST:string = 'POST';\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static GET:string = 'GET';\n}\n\nexport = URLRequestMethod;",
    "import URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\n\nclass URLRequest\n{\n\t/*\n\t * The MIME content type of the content in the the data property.\n\t * @type {string}\n\t */\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\n\n\t/**\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\n\t *\n\t */\n\tpublic data:any;\n\n\t/**\n\t *\n\t * away.net.URLRequestMethod.GET\n\t * away.net.URLRequestMethod.POST\n\t *\n\t * @type {string}\n\t */\n\tpublic method:string = URLRequestMethod.GET;\n\n\t/**\n\t * Use asynchronous XMLHttpRequest\n\t * @type {boolean}\n\t */\n\tpublic async:boolean = true;\n\n\t/**\n\t *\n\t */\n\tprivate _url:string;\n\n\t/**\n\n\t * @param url\n\t */\n\tconstructor(url:string = null)\n\t{\n\t\tthis._url = url;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set url(value:string)\n\t{\n\t\tthis._url = value;\n\t}\n\n\t/**\n\t * dispose\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.data = null;\n\t\tthis._url = null;\n\t}\n}\n\nexport = URLRequest;",
    "class URLVariables\n{\n\tprivate _variables:Object = new Object();\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tconstructor(source:string = null)\n\t{\n\t\tif (source !== null)\n\t\t\tthis.decode(source);\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decode(source:string):void\n\t{\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic toString():string\n\t{\n\t\treturn '';\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get variables():Object\n\t{\n\t\treturn this._variables;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get formData():FormData\n\t{\n\t\tvar fd:FormData = new FormData();\n\n\t\tfor (var s in this._variables)\n\t\t\tfd.append(s, this._variables[s]);\n\n\t\treturn fd;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic set variables(obj:Object)\n\t{\n\t\tthis._variables = obj;\n\t}\n}\n\nexport = URLVariables;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\n/**\n * Image2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nclass Image2DParser extends ParserBase\n{\n\tprivate _startedParsing:boolean;\n\tprivate _doneParsing:boolean;\n\tprivate _loadingImage:boolean;\n\tprivate _htmlImageElement:HTMLImageElement;\n\n\t/**\n\t * Creates a new Image2DParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\n\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\n\t\tif (data  instanceof HTMLImageElement)\n\t\t\treturn true;\n\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tba.position = 0;\n\n\t\tif (ba.readUnsignedShort() == 0xffd8)\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\n\n\t\tba.position = 0;\n\t\tif (ba.readShort() == 0x424D)\n\t\t\treturn true; // BMP\n\n\t\tba.position = 1;\n\t\tif (ba.readUTFBytes(3) == 'PNG')\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'ATF')\n\t\t\treturn true;\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tvar asset:BitmapImage2D;\n\t\tvar sizeError:boolean = false;\n\n\t\tif (this._loadingImage) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else if (this._htmlImageElement) {\n\t\t\tif (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t}\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\n\t\t\tvar htmlImageElement:HTMLImageElement = <HTMLImageElement> this.data;\n\t\t\tif (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\n\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\n\n\t\t\tvar ba:ByteArray = this.data;\n\t\t\tba.position = 0;\n\t\t\tvar htmlImageElement:HTMLImageElement = ParserUtils.byteArrayToImage(this.data);\n\n\t\t\tif (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\n\n\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\n\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\n\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\tthis._loadingImage = true;\n\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\n\t\t{\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\n\t\t}\n\n\t\tthis._pContent = asset;\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tpublic onLoadComplete(event)\n\t{\n\t\tthis._loadingImage = false;\n\t}\n}\n\nexport = Image2DParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\n\n/**\n * ImageCubeParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nclass ImageCubeParser extends ParserBase\n{\n\tprivate static posX:string = 'posX';\n\tprivate static negX:string = 'negX';\n\tprivate static posY:string = 'posY';\n\tprivate static negY:string = 'negY';\n\tprivate static posZ:string = 'posZ';\n\tprivate static negZ:string = 'negZ';\n\n\tprivate _imgDependencyDictionary:Object;\n\n\t/**\n\t * Creates a new ImageCubeParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"cube\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar obj = JSON.parse(data);\n\n\t\t\tif (obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\n\t\t\tvar asset:BitmapImageCube = new BitmapImageCube(this._getBitmapImage2D(ImageCubeParser.posX).width);\n\n\t\t\tasset.draw(BitmapImageCube.posX, this._getBitmapImage2D(ImageCubeParser.posX));\n\t\t\tasset.draw(BitmapImageCube.negX, this._getBitmapImage2D(ImageCubeParser.negX));\n\t\t\tasset.draw(BitmapImageCube.posY, this._getBitmapImage2D(ImageCubeParser.posY));\n\t\t\tasset.draw(BitmapImageCube.negY, this._getBitmapImage2D(ImageCubeParser.negY));\n\t\t\tasset.draw(BitmapImageCube.posZ, this._getBitmapImage2D(ImageCubeParser.posZ));\n\t\t\tasset.draw(BitmapImageCube.negZ, this._getBitmapImage2D(ImageCubeParser.negZ));\n\n\t\t\t//clear dictionary\n\t\t\tthis._imgDependencyDictionary = null;\n\n\t\t\tasset.name = this._iFileName;\n\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\ttry {\n\t\t\tvar json:any = JSON.parse(this.data);\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\n\t\t\tvar rec:any;\n\n\t\t\tif (data.length != 6)\n\t\t\t\tthis._pDieWithError('ImageCubeParser: Error - cube texture should have exactly 6 images');\n\n\t\t\tif (json) {\n\t\t\t\tthis._imgDependencyDictionary = new Object();\n\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\n\t\t\t\t\trec = data[c];\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\n\t\t\t\t}\n\n\t\t\t\tif (!this._validateCubeData()) {\n\n\t\t\t\t\tthis._pDieWithError(\"ImageCubeParser: JSON data error - cubes require id of:   \\n\" + ImageCubeParser.posX + ', ' + ImageCubeParser.negX + ',  \\n' + ImageCubeParser.posY + ', ' + ImageCubeParser.negY + ',  \\n' + ImageCubeParser.posZ + ', ' + ImageCubeParser.negZ);\n\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate _validateCubeData():boolean\n\t{\n\t\treturn  ( this._imgDependencyDictionary[ ImageCubeParser.posX ] != null && this._imgDependencyDictionary[ ImageCubeParser.negX ] != null && this._imgDependencyDictionary[ ImageCubeParser.posY ] != null && this._imgDependencyDictionary[ ImageCubeParser.negY ] != null && this._imgDependencyDictionary[ ImageCubeParser.posZ ] != null && this._imgDependencyDictionary[ ImageCubeParser.negZ ] != null );\n\t}\n\n\tprivate _getBitmapImage2D(name:string):BitmapImage2D\n\t{\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\n\n\t\tif (dependency)\n\t\t\treturn <BitmapImage2D> dependency.assets[0];\n\n\t\treturn null;\n\t}\n\n}\n\nexport = ImageCubeParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport Timer\t\t\t\t\t= require(\"awayjs-core/lib/utils/Timer\");\nimport getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\n/**\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\n * supported by away.\n *\n * If used by <code>LoaderSession</code> to automatically determine the parser type, two public static methods should\n * be implemented, with the following signatures:\n *\n * <code>public static supportsType(extension : string) : boolean</code>\n * Indicates whether or not a given file extension is supported by the parser.\n *\n * <code>public static supportsData(data : *) : boolean</code>\n * Tests whether a data block can be parsed by the parser.\n *\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\n * handle regardless of whether the object was loaded or not.\n *\n * @see LoaderSession\n */\nclass ParserBase extends EventDispatcher\n{\n\tpublic _isParsing:boolean;\n\tpublic _iFileName:string;\n\tprivate _dataFormat:string;\n\tprivate _data:any;\n\tprivate _frameLimit:number;\n\tprivate _lastFrameTime:number;\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\n\tpublic _pContent:IAsset;\n\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// Needs to be implemented in all Parsers (\n\t//<code>public static supportsType(extension : string) : boolean</code>\n\t//* Indicates whether or not a given file extension is supported by the parser.\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate _dependencies:Array<ResourceDependency>;\n\tprivate _parsingPaused:boolean;\n\tprivate _parsingComplete:boolean;\n\tprivate _parsingFailure:boolean;\n\tprivate _timer:Timer;\n\tprivate _materialMode:number;\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\n\t */\n\tpublic static PARSING_DONE:boolean = true;\n\t/* Protected */\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\n\t */\n\tpublic static MORE_TO_PARSE:boolean = false;\n\t/* Protected */\n\n\n\tpublic get content():IAsset\n\t{\n\t\treturn this._pContent;\n\t}\n\n\t/**\n\t * Creates a new ParserBase object\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\n\t *\n\t * @see away.loading.parsers.ParserDataFormat\n\t */\n\tconstructor(format:string)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = 0;\n\t\tthis._dataFormat = format;\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\n\t}\n\n\t/**\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\n\t */\n\n\tpublic isBitmapImage2DValid(bitmapImage2D:BitmapImage2D):boolean\n\t{\n\t\tvar isValid:boolean = ImageUtils.isImage2DValid(bitmapImage2D);\n\n\t\tif (!isValid) {\n\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tpublic set parsingFailure(b:boolean)\n\t{\n\t\tthis._parsingFailure = b;\n\t}\n\n\tpublic get parsingFailure():boolean\n\t{\n\t\treturn this._parsingFailure;\n\t}\n\n\tpublic get parsingPaused():boolean\n\t{\n\t\treturn this._parsingPaused;\n\t}\n\n\tpublic get parsingComplete():boolean\n\t{\n\t\treturn this._parsingComplete;\n\t}\n\n\tpublic set materialMode(newMaterialMode:number)\n\t{\n\t\tthis._materialMode = newMaterialMode;\n\t}\n\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\n\t */\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\n\t * next frame.\n\t *\n\t * @param data The untyped data object in which the loaded data resides.\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\n\t * actual time spent on a frame can exceed this number since time-checks can\n\t * only be performed between logical sections of the parsing procedure.\n\t */\n\tpublic parseAsync(data:any, frameLimit:number = 30)\n\t{\n\t\tthis._data = data;\n\t\tthis._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\n\t * dependency should be a member of the dependencies property.\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\treturn asset.name;\n\t}\n\n\tpublic _iResumeParsing()\n\t{\n\t\tthis._parsingPaused = false;\n\n\t\tif (this._timer)\n\t\t\tthis._timer.start();\n\n\t\t//get started!\n\t\tif (!this._isParsing)\n\t\t\tthis._pOnInterval();\n\t}\n\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null)\n\t{\n\t\tvar type_event:string;\n\t\tvar type_name:string;\n\n\t\tif (name != null)\n\t\t\tasset.name = name;\n\n\t\t// If the asset has no name, give it\n\t\t// a per-type default name.\n\t\tif (!asset.name)\n\t\t\tasset.name = asset.assetType;\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\n\t}\n\n\t/**\n\t * Parse the next block of data.\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pDieWithError(message:string = 'Unknown parsing error')\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t\tthis._timer = null;\n\t\t}\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t}\n\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false, sub_id:number=0):ResourceDependency\n\t{\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents, sub_id);\n\t\tthis._dependencies.push(dependency);\n\n\t\treturn dependency;\n\t}\n\n\tpublic _pPauseAndRetrieveDependencies()\n\t{\n\t\tthis._pPauseParsing();\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\n\t}\n\n\tpublic _pPauseParsing()\n\t{\n\t\tif (this._timer)\n\t\t\tthis._timer.stop();\n\n\t\tthis._parsingPaused = true;\n\t}\n\n\t/**\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\n\t */\n\tpublic _pHasTime():boolean\n\t{\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\n\t}\n\n\t/**\n\t * Called when the parsing pause interval has passed and parsing can proceed.\n\t */\n\tpublic _pOnInterval(event:TimerEvent = null)\n\t{\n\t\tthis._lastFrameTime = getTimer();\n\t\tthis._isParsing = true;\n\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\n\t\t\tthis._pFinishParsing();\n\n\t\tthis._isParsing = false;\n\t}\n\n\t/**\n\t * Initializes the parsing of data.\n\t * @param frameLimit The maximum duration of a parsing session.\n\t */\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tthis._frameLimit = frameLimit;\n\t\tthis._timer = new Timer(this._frameLimit, 0);\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\tthis._timer.start();\n\n\t\t//get started!\n\t\tthis._pOnInterval();\n\t}\n\n\t/**\n\t * Finish parsing the data.\n\t */\n\tpublic _pFinishParsing()\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t}\n\n\t\tthis._timer = null;\n\t\tthis._parsingComplete = true;\n\t\tthis._isParsing = false;\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetTextData():string\n\t{\n\t\treturn ParserUtils.toString(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetByteData():ByteArray\n\t{\n\t\treturn ParserUtils.toByteArray(this._data);\n\t}\n}\n\nexport = ParserBase;",
    "/**\n * An enumeration providing values to describe the data format of parsed data.\n */\nclass ParserDataFormat\n{\n\t/**\n\t * Describes the format of a binary file.\n\t */\n\tpublic static BINARY:string = \"binary\";\n\n\t/**\n\t * Describes the format of a plain text file.\n\t */\n\tpublic static PLAIN_TEXT:string = \"plainText\";\n\n\t/**\n\t * Describes the format of an image file\n\t */\n\tpublic static IMAGE:string = \"image\";\n\n}\n\nexport = ParserDataFormat;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport WaveAudio\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass ParserUtils\n{\n\tprivate static arrayBufferToBase64(data:ArrayBuffer, mimeType:string)\n\t{\n\t\tvar byteStr:string = '';\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\n\t\tvar len:number = bytes.byteLength;\n\n\t\tfor (var i = 0; i < len; i++)\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\n\n\t\tvar base64Image:string = window.btoa(byteStr);\n\t\treturn 'data:' + mimeType + ';base64,' + base64Image;\n\t}\n\n\tpublic static arrayBufferToAudio(data:ArrayBuffer, fileType:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'audio/' + fileType);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an ArrayBuffer to a base64 string\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\tpublic static byteArrayToAudio(data:ByteArray, filetype:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'audio/' + filetype);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an Blob to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a Blob\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static blobToImage(data:Blob):HTMLImageElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an Blob to audio - returns an HTMLAudioElement\n\t *\n\t * @param audio data as a Blob\n\t *\n\t * @return HTMLAudioElement\n\t *\n\t */\n\tpublic static blobToAudio(data:Blob):HTMLAudioElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static imageToBitmapImage2D(img:HTMLImageElement):BitmapImage2D\n\t{\n\t\tvar bitmapData:BitmapImage2D = new BitmapImage2D(img.width, img.height, true);\n\t\tbitmapData.draw(img);\n\n\t\treturn bitmapData;\n\t}\n\n\t/**\n\t * Returns a object as ByteArray, if possible.\n\t *\n\t * @param data The object to return as ByteArray\n\t *\n\t * @return The ByteArray or null\n\t *\n\t */\n\tpublic static toByteArray(data:any):ByteArray\n\t{\n\t\tvar b:ByteArray = new ByteArray();\n\t\tb.setArrayBuffer(data);\n\t\treturn b;\n\t}\n\n\t/**\n\t * Returns a object as String, if possible.\n\t *\n\t * @param data The object to return as String\n\t * @param length The length of the returned String\n\t *\n\t * @return The String or null\n\t *\n\t */\n\tpublic static toString(data:any, length:number = 0):string\n\t{\n\n\t\tif (typeof data === 'string') {\n\t\t\tvar s:string = <string> data;\n\n\t\t\tif (s['substr'] != null)\n\t\t\t\treturn s.substr(0, s.length);\n\t\t}\n\n\t\tif (data instanceof ByteArray) {\n\t\t\tvar ba:ByteArray = <ByteArray> data;\n\t\t\tba.position = 0;\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\n\t\t}\n\n\t\treturn null;\n\n\t\t/*\n\t\t var ba:ByteArray;\n\n\t\t length ||= uint.MAX_VALUE;\n\n\t\t if (data is String)\n\t\t return String(data).substr(0, length);\n\n\t\t ba = toByteArray(data);\n\t\t if (ba) {\n\t\t ba.position = 0;\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\n\t\t }\n\n\t\t return null;\n\n\t\t */\n\n\t}\n}\n\nexport = ParserUtils;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\n * required by a parser, used by ResourceLoadSession.\n *\n */\nclass ResourceDependency\n{\n\tprivate _id:string;\n\tprivate _sub_id:number;\n\n\tprivate _request:URLRequest;\n\tprivate _assets:Array<IAsset>;\n\tprivate _parser:ParserBase;\n\tprivate _parentParser:ParserBase;\n\tprivate _data:any;\n\tprivate _retrieveAsRawData:boolean;\n\tprivate _suppressAssetEvents:boolean;\n\tprivate _dependencies:Array<ResourceDependency>;\n\n\tpublic _iLoader:URLLoader;\n\tpublic _iSuccess:boolean;\n\n\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false, sub_id:number=0)\n\t{\n\t\tthis._id = id;\n\t\tthis._sub_id = sub_id;\n\t\tthis._request = request;\n\t\tthis._data = data;\n\t\tthis._parser = parser;\n\t\tthis._parentParser = parentParser;\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\n\t\tthis._assets = new Array<IAsset>();\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get id():string\n\t{\n\t\treturn this._id;\n\t}\n\tpublic get sub_id():number\n\t{\n\t\treturn this._sub_id;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get request():URLRequest\n\t{\n\t\treturn this._request;\n\t}\n\n\t/**\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parser():ParserBase\n\t{\n\t\treturn this._parser;\n\t}\n\n\t/**\n\t * The parser which is dependent on this ResourceDependency object.\n\t */\n\tpublic get parentParser():ParserBase\n\t{\n\t\treturn this._parentParser;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get retrieveAsRawData():boolean\n\t{\n\t\treturn this._retrieveAsRawData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get suppresAssetEvents():boolean\n\t{\n\t\treturn this._suppressAssetEvents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * @private\n\t * Method to set data after having already created the dependency object, e.g. after load.\n\t */\n\tpublic _iSetData(data:any):void\n\t{\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t */\n\tpublic _iSetParser(parser:ParserBase):void\n\t{\n\t\tthis._parser = parser;\n\t}\n\n\t/**\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\n\t * to its intended parent. The dependency should be a member of the dependencies property.\n\t */\n\tpublic resolve():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependency(this);\n\t}\n\n\t/**\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\n\t */\n\tpublic resolveFailure():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\n\t}\n\n\t/**\n\t * Resolve the dependencies name\n\t */\n\tpublic resolveName(asset:IAsset):string\n\t{\n\t\tif (this._parentParser)\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\n\n\t\treturn asset.name;\n\t}\n}\n\nexport = ResourceDependency;",
    "import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport XmlUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/XmlUtils\");\n\n/**\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nclass TextureAtlasParser extends ParserBase\n{\n\tprivate _doc:Node;\n\tprivate _imagePath:string;\n\tprivate _imageData:BitmapImage2D;\n\tprivate _subTextureNodes:NodeList;\n\tprivate _parseState:number = 0;\n\n\t/**\n\t * Creates a new TextureAtlasParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"xml\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar content:string = ParserUtils.toString(data);\n\t\t\tif(content.indexOf(\"TextureAtlas\") != -1 || content.indexOf(\"textureatlas\") != -1)\n\t\t\t\treturn true;\n\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif(resourceDependency.assets.length) {\n\t\t\tthis._imageData = <BitmapImage2D> resourceDependency.assets[0];\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_SUBTEXTURES;\n\t\t} else {\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar nodes:NodeList;\n\n\t\tswitch(this._parseState) {\n\t\t\tcase TextureAtlasParserState.PARSE_XML:\n\t\t\t\ttry {\n\t\t\t\t\tthis._doc = XmlUtils.getChildrenWithTag(XmlUtils.strToXml(this._pGetTextData()), \"TextureAtlas\")[0];\n\n\t\t\t\t\tthis._imagePath = XmlUtils.readAttributeValue(this._doc, \"imagePath\");\n\n\t\t\t\t\tthis._subTextureNodes = XmlUtils.getChildrenWithTag(this._doc, \"SubTexture\");\n\n\t\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_IMAGE;\n\n\t\t\t\t} catch(Error) {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_IMAGE:\n\t\t\t\tif (this._imagePath){\n\t\t\t\t\tthis._pAddDependency(this._imagePath, new URLRequest(this._imagePath));\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t\t} else {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_SUBTEXTURES:\n\t\t\t\tvar bitmap:Sampler2D;\n\t\t\t\tvar element:Node;\n\t\t\t\tvar x:string;\n\t\t\t\tvar y:string;\n\t\t\t\tvar width:string;\n\t\t\t\tvar height:string;\n\t\t\t\tvar len:number = this._subTextureNodes.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\telement = this._subTextureNodes[i];\n\t\t\t\t\tbitmap = new Sampler2D(this._imageData);\n\n\t\t\t\t\t//setup subtexture rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"x\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"y\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"width\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"height\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tbitmap.imageRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n\n\t\t\t\t\t//setup frame rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"frameX\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"frameY\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"frameWidth\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"frameHeight\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tbitmap.frameRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n\n\t\t\t\t\tthis._pFinalizeAsset(bitmap, XmlUtils.readAttributeValue(element, \"name\"));\n\t\t\t\t}\n\n\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_COMPLETE:\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n}\n\nexport = TextureAtlasParser;\n\nclass TextureAtlasParserState {\n\tpublic static PARSE_XML:number = 0;\n\tpublic static PARSE_IMAGE:number = 1;\n\tpublic static PARSE_SUBTEXTURES:number = 2;\n\tpublic static PARSE_COMPLETE:number = 3;\n}",
    "import WaveAudio\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass WaveAudioParser extends ParserBase\n{\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"wav\" || extension == \"mp3\" || extension == \"ogg\";\n\n\t}\n\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tvar filetype : string = WaveAudioParser.parseFileType(ba);\n\t\treturn filetype? true : false;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//clear content\n\t\tdelete this._pContent;\n\t\tthis._pContent = null;\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this.data instanceof ByteArray) { // Parse a ByteArray\n\t\t\tthis._pContent = new WaveAudio(this.data.arraybytes);\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\t\t\tthis._pContent = new WaveAudio(this.data);\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate static parseFileType(ba:ByteArray):string\n\t{\n\t\tba.position = 0;\n\n\t\tba.position = 0;\n\t\tif (ba.readUnsignedShort() & 0xFFE0) {\n\t\t\treturn 'mp3'; // test for MP3 syncword\n\t\t}\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'RIFF')\n\t\t\treturn 'wav';\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'OggS')\n\t\t\treturn 'ogg';\n\n\t\tba.position = 0;\n\n\t\treturn null;\n\t}\n}\n\nexport = WaveAudioParser;",
    "/**\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\n *\n * @see away.projections.PerspectiveLens#coordinateSystem\n */\nclass CoordinateSystem\n{\n\t/**\n\t * Default option, projects to a left-handed coordinate system\n\t */\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\n\n\t/**\n\t * Projects to a right-handed coordinate system\n\t */\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\n}\n\nexport = CoordinateSystem;",
    "import PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass FreeMatrixProjection extends ProjectionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._pNear = value;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._pFar = value;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._pAspectRatio = value;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.pInvalidateMatrix();\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = FreeMatrixProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass ObliqueNearPlaneProjection extends ProjectionBase\n{\n\n\tprivate _baseProjection:IProjection;\n\tprivate _plane:Plane3D;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\n\t{\n\t\tsuper();\n\t\tthis.baseProjection = baseProjection;\n\t\tthis.plane = plane;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\t}\n\n\t//@override\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._baseProjection.frustumCorners;\n\t}\n\n\t//@override\n\tpublic get near():number\n\t{\n\t\treturn this._baseProjection.near;\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._baseProjection.near = value;\n\t}\n\n\t//@override\n\tpublic get far():number\n\t{\n\t\treturn this._baseProjection.far;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._baseProjection.far = value;\n\t}\n\n\t//@override\n\tpublic get iAspectRatio():number\n\t{\n\t\treturn this._baseProjection._iAspectRatio;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._baseProjection._iAspectRatio = value;\n\t}\n\n\tpublic get plane():Plane3D\n\t{\n\t\treturn this._plane;\n\t}\n\n\tpublic set plane(value:Plane3D)\n\t{\n\t\tthis._plane = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic set baseProjection(value:IProjection)\n\t{\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis._baseProjection = value;\n\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\n\n\t\tvar cx:number = this._plane.a;\n\t\tvar cy:number = this._plane.b;\n\t\tvar cz:number = this._plane.c;\n\t\tvar cw:number = -this._plane.d + .05;\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\n\t\tinverse.invert();\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\t\tthis._pMatrix.copyRowTo(3, p);\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n}\n\nexport = ObliqueNearPlaneProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicOffCenterProjection extends ProjectionBase\n{\n\n\tprivate _minX:number;\n\tprivate _maxX:number;\n\tprivate _minY:number;\n\tprivate _maxY:number;\n\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\n\t{\n\t\tsuper();\n\t\tthis._minX = minX;\n\t\tthis._maxX = maxX;\n\t\tthis._minY = minY;\n\t\tthis._maxY = maxY;\n\t}\n\n\tpublic get minX():number\n\t{\n\t\treturn this._minX;\n\t}\n\n\tpublic set minX(value:number)\n\t{\n\t\tthis._minX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxX():number\n\t{\n\t\treturn this._maxX;\n\t}\n\n\tpublic set maxX(value:number)\n\t{\n\t\tthis._maxX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get minY():number\n\t{\n\t\treturn this._minY;\n\t}\n\n\tpublic set minY(value:number)\n\t{\n\t\tthis._minY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxY():number\n\t{\n\t\treturn this._maxY;\n\t}\n\n\tpublic set maxY(value:number)\n\t{\n\t\tthis._maxY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar w:number = 1/(this._maxX - this._minX);\n\t\tvar h:number = 1/(this._maxY - this._minY);\n\t\tvar d:number = 1/(this._pFar - this._pNear);\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(this._maxX + this._minX)*w;\n\t\traw[13] = -(this._maxY + this._minY)*h;\n\t\traw[14] = -this._pNear*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = OrthographicOffCenterProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicProjection extends ProjectionBase\n{\n\n\tprivate _projectionHeight:number;\n\tprivate _xMax:number;\n\tprivate _yMax:number;\n\n\tconstructor(projectionHeight:number = 500)\n\t{\n\t\tsuper();\n\t\tthis._projectionHeight = projectionHeight;\n\t}\n\n\tpublic get projectionHeight():number\n\t{\n\t\treturn this._projectionHeight;\n\t}\n\n\tpublic set projectionHeight(value:number)\n\t{\n\t\tif (value == this._projectionHeight) {\n\t\t\treturn;\n\t\t}\n\t\tthis._projectionHeight = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.projectionHeight = this._projectionHeight;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tthis._yMax = this._projectionHeight*.5;\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\n\t\t\t// assume symmetric frustum\n\n\t\t\tleft = -this._xMax;\n\t\t\tright = this._xMax;\n\t\t\ttop = -this._yMax;\n\t\t\tbottom = this._yMax;\n\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\n\t\t\traw[5] = 2/this._projectionHeight;\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\n\t\t\traw[15] = 1;\n\n\t\t} else {\n\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\n\n\t\t\tleft = center - xWidth;\n\t\t\tright = center + xWidth;\n\t\t\ttop = middle - yHgt;\n\t\t\tbottom = middle + yHgt;\n\n\t\t\traw[0] = 2*1/(right - left);\n\t\t\traw[5] = -2*1/(top - bottom);\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\n\t\t\traw[12] = (right + left)/(right - left);\n\t\t\traw[13] = (bottom + top)/(bottom - top);\n\t\t\traw[14] = this._pNear/(this.near - this.far);\n\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\t\traw[15] = 1;\n\t\t}\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport= OrthographicProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport CoordinateSystem\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass PerspectiveProjection extends ProjectionBase\n{\n\tprivate _fieldOfView:number = 60;\n\tprivate _focalLength:number = 1000;\n\tprivate _hFieldOfView:number = 60;\n\tprivate _hFocalLength:number = 1000;\n\tprivate _preserveAspectRatio:boolean = true;\n\tprivate _preserveFocalLength:boolean = false;\n\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper(coordinateSystem);\n\t\tthis.fieldOfView = fieldOfView;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveAspectRatio():boolean\n\t{\n\t\treturn this._preserveAspectRatio;\n\t}\n\n\tpublic set preserveAspectRatio(value:boolean)\n\t{\n\t\tif (this._preserveAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._preserveAspectRatio = value;\n\n\t\tif (this._preserveAspectRatio)\n\t\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveFocalLength():boolean\n\t{\n\t\treturn this._preserveFocalLength;\n\t}\n\n\tpublic set preserveFocalLength(value:boolean)\n\t{\n\t\tif (this._preserveFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._preserveFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get fieldOfView():number\n\t{\n\t\treturn this._fieldOfView;\n\t}\n\n\tpublic set fieldOfView(value:number)\n\t{\n\t\tif (this._fieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._fieldOfView = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get focalLength():number\n\t{\n\t\treturn this._focalLength;\n\t}\n\n\tpublic set focalLength(value:number)\n\t{\n\t\tif (this._focalLength == value)\n\t\t\treturn;\n\n\t\tthis._focalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFieldOfView():number\n\t{\n\t\treturn this._hFieldOfView;\n\t}\n\n\tpublic set hFieldOfView(value:number)\n\t{\n\t\tif (this._hFieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._hFieldOfView = value;\n\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFocalLength():number\n\t{\n\t\treturn this._hFocalLength;\n\t}\n\n\tpublic set hFocalLength(value:number)\n\t{\n\t\tif (this._hFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._hFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\n\t\tv.x *= sZ;\n\t\tv.y *= sZ;\n\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tif (this._preserveFocalLength) {\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\n\t\t} else {\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\n\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\t\t\telse\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\n\t\t}\n\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\t// assume scissored frustum\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\n\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\n\t\tright = center;\n\t\ttop = middle;\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\n\n\t\traw[0] = 2/(right - left);\n\t\traw[5] = 2/(bottom - top);\n\t\traw[8] = (right + left)/(right - left);\n\t\traw[9] = (bottom + top)/(bottom - top);\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\n\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\n\t\t\traw[5] = -raw[5];\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\n\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\n\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\n\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionBase extends EventDispatcher implements IProjection\n{\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\tpublic _pViewPort:Rectangle = new Rectangle();\n\tpublic _pNear:number = 20;\n\tpublic _pFar:number = 3000;\n\tpublic _pAspectRatio:number = 1;\n\n\tpublic _pMatrixInvalid:boolean = true;\n\tpublic _pFrustumCorners:number[] = [];\n\tpublic _pCoordinateSystem:string;\n\tpublic _pOriginX:number = 0.5;\n\tpublic _pOriginY:number = 0.5;\n\n\tprivate _unprojection:Matrix3D;\n\tprivate _unprojectionInvalid:boolean = true;\n\n\tconstructor(coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper();\n\n\t\tthis.coordinateSystem = coordinateSystem;\n\t}\n\n\t/**\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\n\t */\n\tpublic get coordinateSystem():string\n\t{\n\t\treturn this._pCoordinateSystem;\n\t}\n\n\tpublic set coordinateSystem(value:string)\n\t{\n\t\tif (this._pCoordinateSystem == value)\n\t\t\treturn;\n\n\t\tthis._pCoordinateSystem = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._pFrustumCorners;\n\t}\n\n\tpublic set frustumCorners(frustumCorners:number[])\n\t{\n\t\tthis._pFrustumCorners = frustumCorners;\n\t}\n\n\tpublic get matrix():Matrix3D\n\t{\n\t\tif (this._pMatrixInvalid) {\n\t\t\tthis.pUpdateMatrix();\n\t\t\tthis._pMatrixInvalid = false;\n\t\t}\n\t\treturn this._pMatrix;\n\t}\n\n\tpublic set matrix(value:Matrix3D)\n\t{\n\t\tthis._pMatrix = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get near():number\n\t{\n\t\treturn this._pNear;\n\t}\n\n\tpublic set near(value:number)\n\t{\n\t\tif (value == this._pNear) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pNear = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get originX():number\n\t{\n\t\treturn this._pOriginX;\n\t}\n\n\tpublic set originX(value:number)\n\t{\n\t\tif (this._pOriginX == value)\n\t\t\treturn;\n\n\t\tthis._pOriginX = value;\n\t}\n\n\tpublic get originY():number\n\t{\n\t\treturn this._pOriginY;\n\t}\n\n\tpublic set originY(value:number)\n\t{\n\t\tif (this._pOriginY == value)\n\t\t\treturn;\n\n\t\tthis._pOriginY = value;\n\t}\n\n\tpublic get far():number\n\t{\n\t\treturn this._pFar;\n\t}\n\n\tpublic set far(value:number)\n\t{\n\t\tif (value == this._pFar) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pFar = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\n\t\tv.x = v.x/v.w;\n\t\tv.y = -v.y/v.w;\n\n\t\t//z is unaffected by transform\n\t\tv.z = point3d.z;\n\n\t\treturn v;\n\t}\n\n\tpublic get unprojectionMatrix():Matrix3D\n\t{\n\t\tif (this._unprojectionInvalid) {\n\t\t\tif (!this._unprojection)\n\t\t\t\tthis._unprojection = new Matrix3D();\n\n\t\t\tthis._unprojection.copyFrom(this.matrix);\n\t\t\tthis._unprojection.invert();\n\t\t\tthis._unprojectionInvalid = false;\n\t\t}\n\t\treturn this._unprojection;\n\t}\n\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():ProjectionBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iAspectRatio():number\n\t{\n\t\treturn this._pAspectRatio;\n\t}\n\n\tpublic set _iAspectRatio(value:number)\n\t{\n\t\tif (this._pAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._pAspectRatio = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic pInvalidateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = true;\n\t\tthis._unprojectionInvalid = true;\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\n\t}\n\n\tpublic pUpdateMatrix()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pScissorRect.x = x;\n\t\tthis._pScissorRect.y = y;\n\t\tthis._pScissorRect.width = width;\n\t\tthis._pScissorRect.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pViewPort.x = x;\n\t\tthis._pViewPort.y = y;\n\t\tthis._pViewPort.width = width;\n\t\tthis._pViewPort.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n}\n\nexport = ProjectionBase;",
    "class Keyboard\n{\n\t/**\n\t * Constant associated with the key code value for the A key (65).\n\t */\n\tpublic static A:number /*uint*/ = 65;\n\n\t/**\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\n\t */\n\tpublic static ALTERNATE:number /*uint*/ = 18;\n\n\t/**\n\t * Select the audio mode\n\t */\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\n\n\t/**\n\t * Constant associated with the key code value for the B key (66).\n\t */\n\tpublic static B:number /*uint*/ = 66;\n\n\t/**\n\t * Return to previous page in application\n\t */\n\tpublic static BACK:number /*uint*/ = 0x01000016;\n\n\t/**\n\t * Constant associated with the key code value for the ` key (192).\n\t */\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\n\n\t/**\n\t * Constant associated with the key code value for the \\ key (220).\n\t */\n\tpublic static BACKSLASH:number /*uint*/ = 220;\n\n\t/**\n\t * Constant associated with the key code value for the Backspace key (8).\n\t */\n\tpublic static BACKSPACE:number /*uint*/ = 8;\n\n\t/**\n\t * Blue function key button\n\t */\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\n\n\t/**\n\t * Constant associated with the key code value for the C key (67).\n\t */\n\tpublic static C:number /*uint*/ = 67;\n\n\t/**\n\t * Constant associated with the key code value for the Caps Lock key (20).\n\t */\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\n\n\t/**\n\t * Channel down\n\t */\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Channel up\n\t */\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Constant associated with the key code value for the , key (188).\n\t */\n\tpublic static COMMA:number /*uint*/ = 188;\n\n\t/**\n\t * Constant associated with the Mac command key (15). This constant is\n\t * currently only used for setting menu key equivalents.\n\t */\n\tpublic static COMMAND:number /*uint*/ = 15;\n\n\t/**\n\t * Constant associated with the key code value for the Control key (17).\n\t */\n\tpublic static CONTROL:number /*uint*/ = 17;\n\n\t/**\n\t * An array containing all the defined key name constants.\n\t */\n\tpublic static CharCodeStrings:Array<any>;\n\n\t/**\n\t * Constant associated with the key code value for the D key (68).\n\t */\n\tpublic static D:number /*uint*/ = 68;\n\n\t/**\n\t * Constant associated with the key code value for the Delete key (46).\n\t */\n\tpublic static DELETE:number /*uint*/ = 46;\n\n\t/**\n\t * Constant associated with the key code value for the Down Arrow key (40).\n\t */\n\tpublic static DOWN:number /*uint*/ = 40;\n\n\t/**\n\t * Engage DVR application mode\n\t */\n\tpublic static DVR:number /*uint*/ = 0x01000019;\n\n\t/**\n\t * Constant associated with the key code value for the E key (69).\n\t */\n\tpublic static E:number /*uint*/ = 69;\n\n\t/**\n\t * Constant associated with the key code value for the End key (35).\n\t */\n\tpublic static END:number /*uint*/ = 35;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key (13).\n\t */\n\tpublic static ENTER:number /*uint*/ = 13;\n\n\t/**\n\t * Constant associated with the key code value for the = key (187).\n\t */\n\tpublic static EQUAL:number /*uint*/ = 187;\n\n\t/**\n\t * Constant associated with the key code value for the Escape key (27).\n\t */\n\tpublic static ESCAPE:number /*uint*/ = 27;\n\n\t/**\n\t * Exits current application mode\n\t */\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\n\n\t/**\n\t * Constant associated with the key code value for the F key (70).\n\t */\n\tpublic static F:number /*uint*/ = 70;\n\n\t/**\n\t * Constant associated with the key code value for the F1 key (112).\n\t */\n\tpublic static F1:number /*uint*/ = 112;\n\n\t/**\n\t * Constant associated with the key code value for the F10 key (121).\n\t */\n\tpublic static F10:number /*uint*/ = 121;\n\n\t/**\n\t * Constant associated with the key code value for the F11 key (122).\n\t */\n\tpublic static F11:number /*uint*/ = 122;\n\n\t/**\n\t * Constant associated with the key code value for the F12 key (123).\n\t */\n\tpublic static F12:number /*uint*/ = 123;\n\n\t/**\n\t * Constant associated with the key code value for the F13 key (124).\n\t */\n\tpublic static F13:number /*uint*/ = 124;\n\n\t/**\n\t * Constant associated with the key code value for the F14 key (125).\n\t */\n\tpublic static F14:number /*uint*/ = 125;\n\n\t/**\n\t * Constant associated with the key code value for the F15 key (126).\n\t */\n\tpublic static F15:number /*uint*/ = 126;\n\n\t/**\n\t * Constant associated with the key code value for the F2 key (113).\n\t */\n\tpublic static F2:number /*uint*/ = 113;\n\n\t/**\n\t * Constant associated with the key code value for the F3 key (114).\n\t */\n\tpublic static F3:number /*uint*/ = 114;\n\n\t/**\n\t * Constant associated with the key code value for the F4 key (115).\n\t */\n\tpublic static F4:number /*uint*/ = 115;\n\n\t/**\n\t * Constant associated with the key code value for the F5 key (116).\n\t */\n\tpublic static F5:number /*uint*/ = 116;\n\n\t/**\n\t * Constant associated with the key code value for the F6 key (117).\n\t */\n\tpublic static F6:number /*uint*/ = 117;\n\n\t/**\n\t * Constant associated with the key code value for the F7 key (118).\n\t */\n\tpublic static F7:number /*uint*/ = 118;\n\n\t/**\n\t * Constant associated with the key code value for the F8 key (119).\n\t */\n\tpublic static F8:number /*uint*/ = 119;\n\n\t/**\n\t * Constant associated with the key code value for the F9 key (120).\n\t */\n\tpublic static F9:number /*uint*/ = 120;\n\n\t/**\n\t * Engage fast-forward transport mode\n\t */\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\n\n\t/**\n\t * Constant associated with the key code value for the G key (71).\n\t */\n\tpublic static G:number /*uint*/ = 71;\n\n\t/**\n\t * Green function key button\n\t */\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\n\n\t/**\n\t * Engage program guide\n\t */\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\n\n\t/**\n\t * Constant associated with the key code value for the H key (72).\n\t */\n\tpublic static H:number /*uint*/ = 72;\n\n\t/**\n\t * Engage help application or context-sensitive help\n\t */\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\n\n\t/**\n\t * Constant associated with the key code value for the Home key (36).\n\t */\n\tpublic static HOME:number /*uint*/ = 36;\n\n\t/**\n\t * Constant associated with the key code value for the I key (73).\n\t */\n\tpublic static I:number /*uint*/ = 73;\n\n\t/**\n\t * Info button\n\t */\n\tpublic static INFO:number /*uint*/ = 0x01000013;\n\n\t/**\n\t * Cycle input\n\t */\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\n\n\t/**\n\t * Constant associated with the key code value for the Insert key (45).\n\t */\n\tpublic static INSERT:number /*uint*/ = 45;\n\n\t/**\n\t * Constant associated with the key code value for the J key (74).\n\t */\n\tpublic static J:number /*uint*/ = 74;\n\n\t/**\n\t * Constant associated with the key code value for the K key (75).\n\t */\n\tpublic static K:number /*uint*/ = 75;\n\n\t/**\n\t * The Begin key\n\t */\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\n\n\t/**\n\t * The Break key\n\t */\n\tpublic static KEYNAME_BREAK:string = \"Break\";\n\n\t/**\n\t * The Clear Display key\n\t */\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\n\n\t/**\n\t * The Clear Line key\n\t */\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\n\n\t/**\n\t * The Delete key\n\t */\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\n\n\t/**\n\t * The Delete Character key\n\t */\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\n\n\t/**\n\t * The Delete Line key\n\t */\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\n\n\t/**\n\t * The down arrow\n\t */\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\n\n\t/**\n\t * The End key\n\t */\n\tpublic static KEYNAME_END:string = \"End\";\n\n\t/**\n\t * The Execute key\n\t */\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\n\n\t/**\n\t * The F1 key\n\t */\n\tpublic static KEYNAME_F1:string = \"F1\";\n\n\t/**\n\t * The F10 key\n\t */\n\tpublic static KEYNAME_F10:string = \"F10\";\n\n\t/**\n\t * The F11 key\n\t */\n\tpublic static KEYNAME_F11:string = \"F11\";\n\n\t/**\n\t * The F12 key\n\t */\n\tpublic static KEYNAME_F12:string = \"F12\";\n\n\t/**\n\t * The F13 key\n\t */\n\tpublic static KEYNAME_F13:string = \"F13\";\n\n\t/**\n\t * The F14 key\n\t */\n\tpublic static KEYNAME_F14:string = \"F14\";\n\n\t/**\n\t * The F15 key\n\t */\n\tpublic static KEYNAME_F15:string = \"F15\";\n\n\t/**\n\t * The F16 key\n\t */\n\tpublic static KEYNAME_F16:string = \"F16\";\n\n\t/**\n\t * The F17 key\n\t */\n\tpublic static KEYNAME_F17:string = \"F17\";\n\n\t/**\n\t * The F18 key\n\t */\n\tpublic static KEYNAME_F18:string = \"F18\";\n\n\t/**\n\t * The F19 key\n\t */\n\tpublic static KEYNAME_F19:string = \"F19\";\n\n\t/**\n\t * The F2 key\n\t */\n\tpublic static KEYNAME_F2:string = \"F2\";\n\n\t/**\n\t * The F20 key\n\t */\n\tpublic static KEYNAME_F20:string = \"F20\";\n\n\t/**\n\t * The F21 key\n\t */\n\tpublic static KEYNAME_F21:string = \"F21\";\n\n\t/**\n\t * The F22 key\n\t */\n\tpublic static KEYNAME_F22:string = \"F22\";\n\n\t/**\n\t * The F23 key\n\t */\n\tpublic static KEYNAME_F23:string = \"F23\";\n\n\t/**\n\t * The F24 key\n\t */\n\tpublic static KEYNAME_F24:string = \"F24\";\n\n\t/**\n\t * The F25 key\n\t */\n\tpublic static KEYNAME_F25:string = \"F25\";\n\n\t/**\n\t * The F26 key\n\t */\n\tpublic static KEYNAME_F26:string = \"F26\";\n\n\t/**\n\t * The F27 key\n\t */\n\tpublic static KEYNAME_F27:string = \"F27\";\n\n\t/**\n\t * The F28 key\n\t */\n\tpublic static KEYNAME_F28:string = \"F28\";\n\n\t/**\n\t * The F29 key\n\t */\n\tpublic static KEYNAME_F29:string = \"F29\";\n\n\t/**\n\t * The F3 key\n\t */\n\tpublic static KEYNAME_F3:string = \"F3\";\n\n\t/**\n\t * The F30 key\n\t */\n\tpublic static KEYNAME_F30:string = \"F30\";\n\n\t/**\n\t * The F31 key\n\t */\n\tpublic static KEYNAME_F31:string = \"F31\";\n\n\t/**\n\t * The F32 key\n\t */\n\tpublic static KEYNAME_F32:string = \"F32\";\n\n\t/**\n\t * The F33 key\n\t */\n\tpublic static KEYNAME_F33:string = \"F33\";\n\n\t/**\n\t * The F34 key\n\t */\n\tpublic static KEYNAME_F34:string = \"F34\";\n\n\t/**\n\t * The F35 key\n\t */\n\tpublic static KEYNAME_F35:string = \"F35\";\n\n\t/**\n\t * The F4 key\n\t */\n\tpublic static KEYNAME_F4:string = \"F4\";\n\n\t/**\n\t * The F5 key\n\t */\n\tpublic static KEYNAME_F5:string = \"F5\";\n\n\t/**\n\t * The F6 key\n\t */\n\tpublic static KEYNAME_F6:string = \"F6\";\n\n\t/**\n\t * The F7 key\n\t */\n\tpublic static KEYNAME_F7:string = \"F7\";\n\n\t/**\n\t * The F8 key\n\t */\n\tpublic static KEYNAME_F8:string = \"F8\";\n\n\t/**\n\t * The F9 key\n\t */\n\tpublic static KEYNAME_F9:string = \"F9\";\n\n\t/**\n\t * The Find key\n\t */\n\tpublic static KEYNAME_FIND:string = \"Find\";\n\n\t/**\n\t * The Help key\n\t */\n\tpublic static KEYNAME_HELP:string = \"Help\";\n\n\t/**\n\t * The Home key\n\t */\n\tpublic static KEYNAME_HOME:string = \"Home\";\n\n\t/**\n\t * The Insert key\n\t */\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\n\n\t/**\n\t * The Insert Character key\n\t */\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\n\n\t/**\n\t * The Insert Line key\n\t */\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\n\n\t/**\n\t * The left arrow\n\t */\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\n\n\t/**\n\t * The Menu key\n\t */\n\tpublic static KEYNAME_MENU:string = \"Menu\";\n\n\t/**\n\t * The Mode Switch key\n\t */\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\n\n\t/**\n\t * The Next key\n\t */\n\tpublic static KEYNAME_NEXT:string = \"Next\";\n\n\t/**\n\t * The Page Down key\n\t */\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\n\n\t/**\n\t * The Page Up key\n\t */\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\n\n\t/**\n\t * The Pause key\n\t */\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\n\n\t/**\n\t * The Previous key\n\t */\n\tpublic static KEYNAME_PREV:string = \"Prev\";\n\n\t/**\n\t * The PRINT key\n\t */\n\tpublic static KEYNAME_PRINT:string = \"Print\";\n\n\t/**\n\t * The PRINT Screen\n\t */\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\n\n\t/**\n\t * The Redo key\n\t */\n\tpublic static KEYNAME_REDO:string = \"Redo\";\n\n\t/**\n\t * The Reset key\n\t */\n\tpublic static KEYNAME_RESET:string = \"Reset\";\n\n\t/**\n\t * The right arrow\n\t */\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\n\n\t/**\n\t * The Scroll Lock key\n\t */\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\n\n\t/**\n\t * The Select key\n\t */\n\tpublic static KEYNAME_SELECT:string = \"Select\";\n\n\t/**\n\t * The Stop key\n\t */\n\tpublic static KEYNAME_STOP:string = \"Stop\";\n\n\t/**\n\t * The System Request key\n\t */\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\n\n\t/**\n\t * The System key\n\t */\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\n\n\t/**\n\t * The Undo key\n\t */\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\n\n\t/**\n\t * The up arrow\n\t */\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\n\n\t/**\n\t * The User key\n\t */\n\tpublic static KEYNAME_USER:string = \"User\";\n\n\t/**\n\t * Constant associated with the key code value for the L key (76).\n\t */\n\tpublic static L:number /*uint*/ = 76;\n\n\t/**\n\t * Watch last channel or show watched\n\t */\n\tpublic static LAST:number /*uint*/ = 0x01000011;\n\n\t/**\n\t * Constant associated with the key code value for the Left Arrow key (37).\n\t */\n\tpublic static LEFT:number /*uint*/ = 37;\n\n\t/**\n\t * Constant associated with the key code value for the [ key (219).\n\t */\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\n\n\t/**\n\t * Return to live [position in broadcast]\n\t */\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\n\n\t/**\n\t * Constant associated with the key code value for the M key (77).\n\t */\n\tpublic static M:number /*uint*/ = 77;\n\n\t/**\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\n\t */\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\n\n\t/**\n\t * Engage menu\n\t */\n\tpublic static MENU:number /*uint*/ = 0x01000012;\n\n\t/**\n\t * Constant associated with the key code value for the - key (189).\n\t */\n\tpublic static MINUS:number /*uint*/ = 189;\n\n\t/**\n\t * Constant associated with the key code value for the N key (78).\n\t */\n\tpublic static N:number /*uint*/ = 78;\n\n\t/**\n\t * Skip to next track or chapter\n\t */\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\n\n\t/**\n\t * Constant associated with the key code value for the 0 key (48).\n\t */\n\tpublic static NUMBER_0:number /*uint*/ = 48;\n\n\t/**\n\t * Constant associated with the key code value for the 1 key (49).\n\t */\n\tpublic static NUMBER_1:number /*uint*/ = 49;\n\n\t/**\n\t * Constant associated with the key code value for the 2 key (50).\n\t */\n\tpublic static NUMBER_2:number /*uint*/ = 50;\n\n\t/**\n\t * Constant associated with the key code value for the 3 key (51).\n\t */\n\tpublic static NUMBER_3:number /*uint*/ = 51;\n\n\t/**\n\t * Constant associated with the key code value for the 4 key (52).\n\t */\n\tpublic static NUMBER_4:number /*uint*/ = 52;\n\n\t/**\n\t * Constant associated with the key code value for the 5 key (53).\n\t */\n\tpublic static NUMBER_5:number /*uint*/ = 53;\n\n\t/**\n\t * Constant associated with the key code value for the 6 key (54).\n\t */\n\tpublic static NUMBER_6:number /*uint*/ = 54;\n\n\t/**\n\t * Constant associated with the key code value for the 7 key (55).\n\t */\n\tpublic static NUMBER_7:number /*uint*/ = 55;\n\n\t/**\n\t * Constant associated with the key code value for the 8 key (56).\n\t */\n\tpublic static NUMBER_8:number /*uint*/ = 56;\n\n\t/**\n\t * Constant associated with the key code value for the 9 key (57).\n\t */\n\tpublic static NUMBER_9:number /*uint*/ = 57;\n\n\t/**\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\n\t */\n\tpublic static NUMPAD:number /*uint*/ = 21;\n\n\t/**\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\n\t */\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\n\n\t/**\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\n\t */\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\n\n\t/**\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\n\t */\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\n\n\t/**\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\n\t */\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\n\n\t/**\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\n\t */\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\n\n\t/**\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\n\t */\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\n\n\t/**\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\n\t */\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\n\n\t/**\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\n\t */\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\n\n\t/**\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\n\t */\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\n\n\t/**\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\n\t */\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\n\n\t/**\n\t * Constant associated with the key code value for the addition key on the number pad (107).\n\t */\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\n\n\t/**\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\n\t */\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\n\n\t/**\n\t * Constant associated with the key code value for the division key on the number pad (111).\n\t */\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\n\t */\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\n\n\t/**\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\n\t */\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\n\n\t/**\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\n\t */\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\n\n\t/**\n\t * Constant associated with the key code value for the O key (79).\n\t */\n\tpublic static O:number /*uint*/ = 79;\n\n\t/**\n\t * Constant associated with the key code value for the P key (80).\n\t */\n\tpublic static P:number /*uint*/ = 80;\n\n\t/**\n\t * Constant associated with the key code value for the Page Down key (34).\n\t */\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\n\n\t/**\n\t * Constant associated with the key code value for the Page Up key (33).\n\t */\n\tpublic static PAGE_UP:number /*uint*/ = 33;\n\n\t/**\n\t * Engage pause transport mode\n\t */\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\n\n\t/**\n\t * Constant associated with the key code value for the . key (190).\n\t */\n\tpublic static PERIOD:number /*uint*/ = 190;\n\n\t/**\n\t * Engage play transport mode\n\t */\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\n\n\t/**\n\t * Skip to previous track or chapter\n\t */\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\n\n\t/**\n\t * Constant associated with the key code value for the Q key (81).\n\t */\n\tpublic static Q:number /*uint*/ = 81;\n\n\t/**\n\t * Constant associated with the key code value for the ' key (222).\n\t */\n\tpublic static QUOTE:number /*uint*/ = 222;\n\n\t/**\n\t * Constant associated with the key code value for the R key (82).\n\t */\n\tpublic static R:number /*uint*/ = 82;\n\n\t/**\n\t * Record item or engage record transport mode\n\t */\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\n\n\t/**\n\t * Red function key button\n\t */\n\tpublic static RED:number /*uint*/ = 0x01000000;\n\n\t/**\n\t * Engage rewind transport mode\n\t */\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\n\n\t/**\n\t * Constant associated with the key code value for the Right Arrow key (39).\n\t */\n\tpublic static RIGHT:number /*uint*/ = 39;\n\n\t/**\n\t * Constant associated with the key code value for the ] key (221).\n\t */\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\n\n\t/**\n\t * Constant associated with the key code value for the S key (83).\n\t */\n\tpublic static S:number /*uint*/ = 83;\n\n\t/**\n\t * Search button\n\t */\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\n\n\t/**\n\t * Constant associated with the key code value for the ; key (186).\n\t */\n\tpublic static SEMICOLON:number /*uint*/ = 186;\n\n\t/**\n\t * Engage setup application or menu\n\t */\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\n\n\t/**\n\t * Constant associated with the key code value for the Shift key (16).\n\t */\n\tpublic static SHIFT:number /*uint*/ = 16;\n\n\t/**\n\t * Quick skip backward (usually 7-10 seconds)\n\t */\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\n\n\t/**\n\t * Quick skip ahead (usually 30 seconds)\n\t */\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\n\n\t/**\n\t * Constant associated with the key code value for the / key (191).\n\t */\n\tpublic static SLASH:number /*uint*/ = 191;\n\n\t/**\n\t * Constant associated with the key code value for the Spacebar (32).\n\t */\n\tpublic static SPACE:number /*uint*/ = 32;\n\n\t/**\n\t * Engage stop transport mode\n\t */\n\tpublic static STOP:number /*uint*/ = 0x01000009;\n\n\t/**\n\t * Toggle subtitles\n\t */\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\n\n\t/**\n\t * Constant associated with the key code value for the T key (84).\n\t */\n\tpublic static T:number /*uint*/ = 84;\n\n\t/**\n\t * Constant associated with the key code value for the Tab key (9).\n\t */\n\tpublic static TAB:number /*uint*/ = 9;\n\n\t/**\n\t * Constant associated with the key code value for the U key (85).\n\t */\n\tpublic static U:number /*uint*/ = 85;\n\n\t/**\n\t * Constant associated with the key code value for the Up Arrow key (38).\n\t */\n\tpublic static UP:number /*uint*/ = 38;\n\n\t/**\n\t * Constant associated with the key code value for the V key (86).\n\t */\n\tpublic static V:number /*uint*/ = 86;\n\n\t/**\n\t * Engage video-on-demand\n\t */\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\n\n\t/**\n\t * Constant associated with the key code value for the W key (87).\n\t */\n\tpublic static W:number /*uint*/ = 87;\n\n\t/**\n\t * Constant associated with the key code value for the X key (88).\n\t */\n\tpublic static X:number /*uint*/ = 88;\n\n\t/**\n\t * Constant associated with the key code value for the Y key (89).\n\t */\n\tpublic static Y:number /*uint*/ = 89;\n\n\t/**\n\t * Yellow function key button\n\t */\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\n\n\t/**\n\t * Constant associated with the key code value for the Z key (90).\n\t */\n\tpublic static Z:number /*uint*/ = 90;\n\n}\n\nexport = Keyboard;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\nclass BitmapImageUtils\n{\n\tpublic static _fillRect(context:CanvasRenderingContext2D, rect:Rectangle, color:number, transparent:boolean)\n\t{\n\t\tif (color == 0x0 && transparent) {\n\t\t\tcontext.clearRect(rect.x, rect.y, rect.width, rect.height);\n\t\t} else {\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\t\tif (transparent)\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\n\t\t\telse\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\n\n\t\t\tcontext.fillRect(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\t}\n\n\tpublic static _copyPixels(context:CanvasRenderingContext2D, bmpd:HTMLElement, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tcontext.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t}\n\n\tpublic static _draw(context:CanvasRenderingContext2D, source:HTMLElement, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean)\n\t{\n\t\tcontext.save();\n\n\t\tif (matrix != null)\n\t\t\tcontext.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\n\t\tif (clipRect != null)\n\t\t\tcontext.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\n\t\telse\n\t\t\tcontext.drawImage(source, 0, 0);\n\n\t\tcontext.restore();\n\t}\n}\n\nexport = BitmapImageUtils;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nclass ByteArrayBase\n{\n\tpublic position:number = 0;\n\tpublic length:number = 0;\n\tpublic _mode:string = \"\";\n\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\n\t}\n\n\tpublic compareEqual(other, count)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (count > other.length - other.position)\n\t\t\tcount = other.length - other.position;\n\t\tvar co0 = count;\n\t\tvar r = true;\n\t\twhile (r && count >= 4) {\n\t\t\tcount -= 4;\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\n\t\t}\n\t\twhile (r && count >= 1) {\n\t\t\tcount--;\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\n\t\t}\n\t\tvar c0;\n\t\tthis.position -= (c0 - count);\n\t\tother.position -= (c0 - count);\n\t\treturn r;\n\t}\n\n\tpublic writeBase64String(s:string)\n\t{\n\t\tfor (var i:number = 0; i < s.length; i++) {\n\t\t\tvar v = s.charAt(i);\n\t\t}\n\t}\n\n\tpublic dumpToConsole()\n\t{\n\t\tvar oldpos = this.position;\n\t\tthis.position = 0;\n\t\tvar nstep:number = 8;\n\n\t\tfunction asHexString(x, digits)\n\t\t{\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\n\t\t\tvar sh:string = \"\";\n\t\t\tfor (var d:number = 0; d < digits; d++) {\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\n\t\t\t}\n\t\t\treturn sh;\n\t\t}\n\n\t\tfor (var i = 0; i < this.length; i += nstep) {\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\n\t\t\t}\n\t\t\tconsole.log(s);\n\t\t}\n\t\tthis.position = oldpos;\n\t}\n\n\tpublic readBase64String(count:number)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (!(count > 0)) return \"\";\n\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\n\t}\n\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self)\n\t{ // return base64 string of the next count bytes\n\t\tvar r = \"\";\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\n\t\tvar base64Key = ByteArrayBase.Base64Key;\n\t\twhile (count >= 3) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\n\t\t\tenc4 = b2 & 63;\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\n\t\t\tcount -= 3;\n\t\t}\n\t\t// pad\n\t\tif (count == 2) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\n\t\t} else if (count == 1) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\n\t\t}\n\t\treturn r;\n\t}\n}\n\nexport = ByteArrayBase;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArrayBuffer extends ByteArrayBase\n{\n\n\t/*\n\t public maxlength:number = 0;\n\t public arraybytes; //ArrayBuffer\n\t public unalignedarraybytestemp; //ArrayBuffer\n\t */\n\n\tpublic _bytes:number[];\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._bytes = [];\n\t\tthis._mode = \"Array\";\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[this.position++] = bi & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tif (this.position + 2 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\n\t\tthis.position += 2;\n\t\treturn r;\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tif (this.position + 4 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\n\t\tthis.position += 4;\n\t\treturn r >>> 0;\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\t// this is crazy slow and silly, but as a fallback...\n\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\t// don't handle inf/nan yet\n\t\t// special case zero\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\t// remove the sign, after this we only deal with positive numbers\n\t\tvar sign:number = 0;\n\t\tif (x < 0) {\n\t\t\tx = -x;\n\t\t\tsign = 1;\n\t\t} else {\n\t\t\tsign = 0;\n\t\t}\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\n\t\texponent = Math.floor(exponent);\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\n\t\tvar mantissa = Math.floor(x) - 0x800000;\n\t\texponent = exponent + 127;\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\n\t\tif (x >>> 31 != 0) {\n\t\t\ty = -y;\n\t\t}\n\t\treturn y;\n\t}\n\n\t/*\n\t public ensureWriteableSpace( n:number )\n\t {\n\t this.ensureSpace( n + this.position );\n\t }\n\n\t private ensureSpace( n:number )\n\t {\n\t if ( n > this.maxlength ) {\n\t var newmaxlength:number = (n+255)&(~255);\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t newview.set(view);      // memcpy\n\t this.arraybytes = newarraybuffer;\n\t this.maxlength = newmaxlength;\n\t }\n\t }\n\t */\n}\n\nexport = ByteArrayBuffer;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArray extends ByteArrayBase\n{\n\tpublic maxlength:number;\n\tpublic arraybytes; //ArrayBuffer\n\tpublic unalignedarraybytestemp; //ArrayBuffer\n\n\tconstructor(maxlength:number = 4)\n\t{\n\t\tsuper();\n\t\tthis._mode = \"Typed array\";\n\t\tthis.maxlength = Math.max((maxlength + 255) & (~255), 4);\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\n\t}\n\n\tpublic ensureWriteableSpace(n:number)\n\t{\n\t\tthis.ensureSpace(n + this.position);\n\t}\n\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\n\t{\n\t\tthis.ensureSpace(aBuffer.byteLength);\n\n\t\tthis.length = aBuffer.byteLength;\n\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\n\n\t\tlocalInt8View.set(inInt8AView);\n\n\t\tthis.position = 0;\n\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\treturn ( this.length ) - ( this.position );\n\t}\n\n\tpublic ensureSpace(n:number)\n\t{\n\t\tif (n > this.maxlength) {\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t\t\tnewview.set(view);      // memcpy\n\t\t\tthis.arraybytes = newarraybuffer;\n\t\t\tthis.maxlength = newmaxlength;\n\t\t}\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\n\t\tvar view = new Int8Array(this.arraybytes);\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte()\n\t{\n\t\tif (this.position >= this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view = new Int8Array(this.arraybytes);\n\n\t\treturn view[ this.position++ ];\n\t}\n\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0)\n\t{\n\t\tif (length == null)\n\t\t\tlength = bytes.length;\n\n\t\tbytes.ensureWriteableSpace(offset + length);\n\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\n\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\n\n\t\tthis.position += length;\n\n\t\tif (length + offset > bytes.length)\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUnsignedByte()\n\t{\n\t\tif (this.position >= this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\treturn view[this.position++];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(2);\n\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview2.set(view3);\n\t\t}\n\n\t\tthis.position += 2;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUTFBytes(len:number):string\n\t{\n\t\tvar value:string = \"\";\n\t\tvar max:number = this.position + len;\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\n\t\t// utf8-encode\n\t\twhile (this.position < max) {\n\n\t\t\tvar c:number = data.getUint8(this.position++);\n\n\t\t\tif (c < 0x80) {\n\n\t\t\t\tif (c == 0) break;\n\t\t\t\tvalue += String.fromCharCode(c);\n\n\t\t\t} else if (c < 0xE0) {\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else if (c < 0xF0) {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvar c3 = data.getUint8(this.position++);\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic readInt():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar int:number = data.getInt32(this.position, true);\n\n\t\tthis.position += 4;\n\n\t\treturn int;\n\t}\n\n\tpublic readShort():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar short:number = data.getInt16(this.position, true);\n\n\t\tthis.position += 2;\n\n\t\treturn short;\n\t}\n\n\tpublic readDouble():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar double:number = data.getFloat64(this.position, true);\n\n\t\tthis.position += 8;\n\n\t\treturn double;\n\t}\n\n\tpublic readUnsignedShort()\n\t{\n\t\tif (this.position > this.length + 2)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 1;\n\t\t\tthis.position += 2;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 2;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffffffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUnsignedInt()\n\t{\n\t\tif (this.position > this.length + 4)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = b;\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = b;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readFloat()\n\t{\n\t\tif (this.position > this.length + 4)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tif ((this.position & 3) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tvar pa = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[pa];\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[ 0 ];\n\t\t}\n\t}\n}\n\nexport = ByteArray;",
    "class CSS\n{\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number)\n\t{\n\t\telement.style.width = width + \"px\";\n\t\telement.style.height = height + \"px\";\n\t\telement[\"width\"] = width;\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementWidth(element:HTMLElement, width:number)\n\t{\n\t\telement.style.width = width + \"px\";\n\t\telement[\"width\"] = width;\n\t}\n\n\tpublic static setElementHeight(element:HTMLElement, height:number)\n\t{\n\t\telement.style.height = height + \"px\";\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementX(element:HTMLElement, x:number)\n\t{\n\t\telement.style.position = 'absolute';\n\t\telement.style.left = x + \"px\";\n\t}\n\n\tpublic static setElementY(element:HTMLElement, y:number)\n\t{\n\t\telement.style.position = 'absolute';\n\t\telement.style.top = y + \"px\";\n\t}\n\n\tpublic static getElementVisibility(element:HTMLElement):boolean\n\t{\n\t\treturn element.style.visibility == 'visible';\n\t}\n\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean)\n\t{\n\t\tif (visible) {\n\t\t\telement.style.visibility = 'visible';\n\t\t} else {\n\t\t\telement.style.visibility = 'hidden';\n\t\t}\n\t}\n\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number)\n\t{\n\t\tif (element instanceof HTMLCanvasElement) {\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\n\t\t\tcontext.globalAlpha = alpha;\n\t\t}\n\t}\n\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false)\n\t{\n\t\tif (absolute) {\n\t\t\telement.style.position = \"absolute\";\n\t\t} else {\n\t\t\telement.style.position = \"relative\";\n\t\t}\n\n\t\telement.style.left = x + \"px\";\n\t\telement.style.top = y + \"px\";\n\t}\n}\n\nexport = CSS;",
    "/**\n *\n */\nclass ColorUtils\n{\n\tpublic static float32ColorToARGB(float32Color:number):number[]\n\t{\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24;\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\n\t\tvar b:number = float32Color & 0xff;\n\t\tvar result:number[] = [ a, r , g , b ];\n\n\t\treturn result;\n\t}\n\n\tpublic static ARGBtoFloat32(a:number, r:number, g:number, b:number):number\n\t{\n\t\treturn ((a << 24) | (r << 16) | (g << 8) | b);\n\t}\n\n\tprivate static componentToHex(c:number):string\n\t{\n\t\tvar hex = c.toString(16);\n\t\treturn hex.length == 1? \"0\" + hex : hex;\n\t}\n\n\tpublic static RGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n\n\tpublic static ARGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n}\n\nexport = ColorUtils;",
    "import PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\n\n/**\n *\n */\nclass Debug\n{\n\tpublic static THROW_ERRORS:boolean = true;\n\tpublic static ENABLE_LOG:boolean = true;\n\tpublic static LOG_PI_ERRORS:boolean = true;\n\n\tprivate static keyword:string = null;\n\n\tpublic static breakpoint():void\n\t{\n\t\tDebug['break']();\n\t}\n\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true)\n\t{\n\t\tif (!enable)\n\t\t\tDebug.keyword = null;\n\t\telse\n\t\t\tDebug.keyword = str;\n\t}\n\n\tpublic static throwPIR(clss:string, fnc:string, msg:string)\n\t{\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\n\n\t\tif (Debug.THROW_ERRORS) {\n\t\t\tif (Debug.keyword) {\n\t\t\t\tvar e:string = clss + fnc + msg;\n\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\n\t\t}\n\t}\n\n\tprivate static logPIR(clss:string, fnc:string, msg:string = '')\n\t{\n\t\tif (Debug.LOG_PI_ERRORS)\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\n\t}\n\n\tpublic static log(...args:any[])\n\t{\n\t\tif (Debug.ENABLE_LOG)\n\t\t\tconsole.log(args);\n\t}\n}\n\nexport = Debug;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nclass ImageUtils\n{\n\tprivate static MAX_SIZE:number = 2048;\n\n\tpublic static isImage2DValid(image2D:Image2D):boolean\n\t{\n\t\tif (image2D == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image2D.width) && ImageUtils.isDimensionValid(image2D.height);\n\t}\n\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\n\t{\n\t\tif (image == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image.width) && ImageUtils.isDimensionValid(image.height);\n\t}\n\n\tpublic static isDimensionValid(d:number):boolean\n\t{\n\t\treturn d >= 1 && d <= ImageUtils.MAX_SIZE && ImageUtils.isPowerOfTwo(d);\n\t}\n\n\tpublic static isPowerOfTwo(value:number):boolean\n\t{\n\t\treturn value? ((value & -value) == value) : false;\n\t}\n\n\tpublic static getBestPowerOf2(value:number):number\n\t{\n\t\tvar p:number = 1;\n\n\t\twhile (p < value)\n\t\t\tp <<= 1;\n\n\t\tif (p > ImageUtils.MAX_SIZE)\n\t\t\tp = ImageUtils.MAX_SIZE;\n\n\t\treturn p;\n\t}\n}\n\nexport = ImageUtils",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\nclass MipmapGenerator\n{\n\tprivate static _mipMaps = [];\n\tprivate static _mipMapUses = [];\n\n\tprivate static _matrix:Matrix = new Matrix();\n\tprivate static _rect:Rectangle = new Rectangle();\n\tprivate static _source:BitmapImage2D;\n\n\t/**\n\t * Uploads a BitmapImage2D with mip maps to a target Texture object.\n\t * @param source The source to upload.\n\t * @param target The target Texture to upload to.\n\t * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\n\t * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\n\t */\n\tpublic static _generateMipMaps(source:HTMLElement, output?:Array<BitmapImage2D>, alpha?:boolean);\n\tpublic static _generateMipMaps(source:BitmapImage2D, output?:Array<BitmapImage2D>, alpha?:boolean);\n\tpublic static _generateMipMaps(source:any, output?:Array<BitmapImage2D>, alpha:boolean = false)\n\t{\n\t\tvar w:number = source.width;\n\t\tvar h:number = source.height;\n\t\tvar i:number = 0;\n\n\t\tvar mipmap:BitmapImage2D;\n\n\t\tMipmapGenerator._rect.width = w;\n\t\tMipmapGenerator._rect.height = h;\n\n\t\t//use (OR) to create non-square texture mipmaps\n\t\twhile (w >= 1 || h >= 1) {\n\n\t\t\tmipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\n\n\t\t\tif (alpha)\n\t\t\t\tmipmap.fillRect(MipmapGenerator._rect, 0);\n\n\t\t\tMipmapGenerator._matrix.a = MipmapGenerator._rect.width/source.width;\n\t\t\tMipmapGenerator._matrix.d = MipmapGenerator._rect.height/source.height;\n\n\t\t\tmipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\n\n\t\t\tw >>= 1;\n\t\t\th >>= 1;\n\n\t\t\tMipmapGenerator._rect.width = w > 1? w : 1;\n\t\t\tMipmapGenerator._rect.height = h > 1? h : 1;\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate static _getMipmapHolder(mipMapHolder:BitmapImage2D, newW:number, newH:number):BitmapImage2D\n\t{\n\t\tif (mipMapHolder) {\n\t\t\tif (mipMapHolder.width == newW && mipMapHolder.height == newH)\n\t\t\t\treturn mipMapHolder;\n\n\t\t\tMipmapGenerator._freeMipMapHolder(mipMapHolder);\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW]) {\n\t\t\tMipmapGenerator._mipMaps[newW] = [];\n\t\t\tMipmapGenerator._mipMapUses[newW] = [];\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW][newH]) {\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapImage2D(newW, newH, true);\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = 1;\n\t\t} else {\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH];\n\t\t}\n\n\t\treturn mipMapHolder;\n\t}\n\n\tpublic static _freeMipMapHolder(mipMapHolder:BitmapImage2D)\n\t{\n\t\tvar holderWidth:number = mipMapHolder.width;\n\t\tvar holderHeight:number = mipMapHolder.height;\n\n\t\tif (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\n\t\t}\n\t}\n}\n\nexport = MipmapGenerator;",
    "import getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nclass RequestAnimationFrame\n{\n\tprivate _callback:Function;\n\tprivate _callbackContext:Object;\n\tprivate _active:boolean = false;\n\tprivate _rafUpdateFunction:any;\n\tprivate _prevTime:number;\n\tprivate _dt:number;\n\tprivate _currentTime:number;\n\tprivate _argsArray:Array<any> = new Array();\n\tprivate _getTimer:Function;\n\n\tconstructor(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._getTimer = getTimer;\n\n\t\tthis.setCallback(callback, callbackContext);\n\n\t\tthis._rafUpdateFunction = () => {\n\t\t\tif (this._active)\n\t\t\t\tthis._tick();\n\t\t}\n\n\t\tthis._argsArray.push(this._dt);\n\t}\n\n\t// Public\n\n\t/**\n\t *\n\t * @param callback\n\t * @param callbackContext\n\t */\n\tpublic setCallback(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._callback = callback;\n\t\tthis._callbackContext = callbackContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic start()\n\t{\n\t\tthis._prevTime = this._getTimer();\n\t\tthis._active = true;\n\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\t\t} else {\n\t\t\tif (window['mozRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\n\t\t\telse if (window['webkitRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\n\t\t\telse if (window['oRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic stop()\n\t{\n\t\tthis._active = false;\n\t}\n\n\t// Get / Set\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic get active():boolean\n\t{\n\t\treturn this._active;\n\t}\n\n\t// Private\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _tick():void\n\t{\n\t\tthis._currentTime = this._getTimer();\n\t\tthis._dt = this._currentTime - this._prevTime;\n\t\tthis._argsArray[0] = this._dt;\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\n\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\n\t\tthis._prevTime = this._currentTime;\n\t}\n\n\n}\n\nexport = RequestAnimationFrame;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\n\nclass Timer extends EventDispatcher\n{\n\tprivate _delay:number;\n\tprivate _repeatCount:number = 0;\n\tprivate _currentCount:number = 0;\n\tprivate _iid:number;\n\tprivate _running:boolean = false;\n\n\tconstructor(delay:number, repeatCount:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._delay = delay;\n\t\tthis._repeatCount = repeatCount;\n\n\t\tif (isNaN(delay) || delay < 0)\n\t\t\tthrow new Error(\"Delay is negative or not a number\");\n\t}\n\n\tpublic get currentCount():number\n\t{\n\t\treturn this._currentCount;\n\t}\n\n\tpublic get delay():number\n\t{\n\t\treturn this._delay;\n\t}\n\n\tpublic set delay(value:number)\n\t{\n\t\tthis._delay = value;\n\n\t\tif (this._running) {\n\t\t\tthis.stop();\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\tpublic get repeatCount():number\n\t{\n\t\treturn this._repeatCount;\n\t}\n\n\tpublic set repeatCount(value:number)\n\t{\n\t\tthis._repeatCount = value;\n\t}\n\n\tpublic reset():void\n\t{\n\t\tif (this._running)\n\t\t\tthis.stop();\n\n\t\tthis._currentCount = 0;\n\t}\n\n\tpublic get running():boolean\n\t{\n\t\treturn this._running;\n\t}\n\n\tpublic start():void\n\t{\n\t\tthis._running = true;\n\t\tclearInterval(this._iid);\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\n\t}\n\n\tpublic stop():void\n\t{\n\t\tthis._running = false;\n\t\tclearInterval(this._iid);\n\t}\n\n\tprivate tick():void\n\t{\n\t\tthis._currentCount++;\n\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\n\n\t\t\tthis.stop();\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t}\n\t}\n}\n\nexport = Timer;",
    "class XmlUtils {\n\n\tpublic static getChildrenWithTag(node:Node, tag:string):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(node) {\n\t\t\tvar num:number = node.childNodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = node.childNodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.nodeName == tag) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static filterListByParam(nodes:NodeList, paramName:string, paramValue):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(nodes) {\n\t\t\tvar num:number = nodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = nodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.attributes.getNamedItem(paramName).value == paramValue) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static strToXml(str:string):Node {\n\t\tvar parser:DOMParser = new DOMParser();\n\t\tvar node:Node = parser.parseFromString(str, \"text/xml\");\n\t\treturn node;\n\t}\n\n\tpublic static nodeToString(node:Node):string {\n\t\tif(!node) return \"\";\n\t\tvar str = (new XMLSerializer()).serializeToString(node);\n\t\treturn str;\n\t}\n\n\tpublic static readAttributeValue(node:Node, attrName:string):string {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn \"\";\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\tif(!attribute) {\n\t\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", attribute does not exist.\");\n\t\t\treturn \"\";\n\t\t}\n\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", value: \" + attribute.value);\n\t\treturn attribute.value;\n\t}\n\n\tpublic static writeAttributeValue(node:Node, attrName:string, attrValue:string) {\n\t\tvar attribute:Attr = new Attr();\n\t\tattribute.name = attrName;\n\t\tattribute.value = attrValue;\n\t\tattribute = node.attributes.setNamedItem(attribute);\n\t\tconsole.log(\"XmlUltils - writeAttributeValue() - name: \" + attribute.name + \", value: \" + attribute.value);\n\t}\n\n\tpublic static hasAttribute(node:Node, attrName:string):boolean {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\treturn attribute != null;\n\t}\n}\nexport = XmlUtils;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "/**\n *\n *\n * @returns {number}\n */\nfunction getTimer():number\n{\n\t// number milliseconds of 1970/01/01\n\t// this different to AS3 implementation which gets the number of milliseconds\n\t// since instance of Flash player was initialised\n\treturn Date.now();\n}\n\nexport = getTimer;"
  ],
  "sourceRoot": ""
}