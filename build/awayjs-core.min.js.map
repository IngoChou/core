{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-core.js",
    "../index.ts",
    "lib/lib/attributes/AttributesBuffer.ts",
    "lib/lib/attributes/AttributesView.ts",
    "lib/lib/attributes/Byte1Attributes.ts",
    "lib/lib/attributes/Byte2Attributes.ts",
    "lib/lib/attributes/Byte3Attributes.ts",
    "lib/lib/attributes/Byte4Attributes.ts",
    "lib/lib/attributes/Float1Attributes.ts",
    "lib/lib/attributes/Float2Attributes.ts",
    "lib/lib/attributes/Float3Attributes.ts",
    "lib/lib/attributes/Float4Attributes.ts",
    "lib/lib/attributes/Short2Attributes.ts",
    "lib/lib/attributes/Short3Attributes.ts",
    "lib/attributes.ts",
    "lib/lib/audio/WaveAudio.ts",
    "lib/audio.ts",
    "lib/lib/errors/AbstractMethodError.ts",
    "lib/lib/errors/ArgumentError.ts",
    "lib/lib/errors/DocumentError.ts",
    "lib/lib/errors/ErrorBase.ts",
    "lib/lib/errors/PartialImplementationError.ts",
    "lib/lib/errors/RangeError.ts",
    "lib/errors.ts",
    "lib/lib/events/AssetEvent.ts",
    "lib/lib/events/EventBase.ts",
    "lib/lib/events/EventDispatcher.ts",
    "lib/lib/events/LoaderEvent.ts",
    "lib/lib/events/ParserEvent.ts",
    "lib/lib/events/ProjectionEvent.ts",
    "lib/lib/events/TimerEvent.ts",
    "lib/lib/events/URLLoaderEvent.ts",
    "lib/events.ts",
    "lib/lib/geom/Box.ts",
    "lib/lib/geom/ColorTransform.ts",
    "lib/lib/geom/MathConsts.ts",
    "lib/lib/geom/Matrix3DUtils.ts",
    "lib/lib/geom/Matrix3D.ts",
    "lib/lib/geom/Matrix.ts",
    "lib/lib/geom/Orientation3D.ts",
    "lib/lib/geom/Plane3D.ts",
    "lib/lib/geom/PlaneClassification.ts",
    "lib/lib/geom/Point.ts",
    "lib/lib/geom/PoissonLookup.ts",
    "lib/lib/geom/Quaternion.ts",
    "lib/lib/geom/Rectangle.ts",
    "lib/lib/geom/Sphere.ts",
    "lib/lib/geom/Vector3D.ts",
    "lib/geom.ts",
    "lib/lib/image/BitmapImage2D.ts",
    "lib/lib/image/BitmapImageChannel.ts",
    "lib/lib/image/BitmapImageCube.ts",
    "lib/lib/image/BlendMode.ts",
    "lib/lib/image/CPUCanvas.ts",
    "lib/lib/image/CPURenderingContext2D.ts",
    "lib/lib/image/Image2D.ts",
    "lib/lib/image/ImageBase.ts",
    "lib/lib/image/ImageCube.ts",
    "lib/lib/image/ImageData.ts",
    "lib/lib/image/Sampler2D.ts",
    "lib/lib/image/SamplerBase.ts",
    "lib/lib/image/SamplerCube.ts",
    "lib/lib/image/SpecularImage2D.ts",
    "lib/image.ts",
    "lib/lib/library/AbstractionBase.ts",
    "lib/lib/library/AssetBase.ts",
    "lib/lib/library/AssetLibraryBundle.ts",
    "lib/lib/library/AssetLibraryIterator.ts",
    "lib/lib/library/AssetLibrary.ts",
    "lib/lib/library/ConflictPrecedence.ts",
    "lib/lib/library/ConflictStrategyBase.ts",
    "lib/lib/library/ConflictStrategy.ts",
    "lib/lib/library/ErrorConflictStrategy.ts",
    "lib/lib/library/IDUtil.ts",
    "lib/lib/library/IgnoreConflictStrategy.ts",
    "lib/lib/library/LoaderContext.ts",
    "lib/lib/library/LoaderInfo.ts",
    "lib/lib/library/Loader.ts",
    "lib/lib/library/NumSuffixConflictStrategy.ts",
    "lib/library.ts",
    "lib/lib/managers/AudioChannel.ts",
    "lib/lib/managers/AudioManager.ts",
    "lib/lib/managers/EventAudioChannel.ts",
    "lib/lib/managers/StreamingAudioChannel.ts",
    "lib/lib/managers/WebAudioChannel.ts",
    "lib/managers.ts",
    "lib/lib/net/CrossDomainPolicy.ts",
    "lib/lib/net/URLLoaderDataFormat.ts",
    "lib/lib/net/URLLoader.ts",
    "lib/lib/net/URLRequestMethod.ts",
    "lib/lib/net/URLRequest.ts",
    "lib/lib/net/URLVariables.ts",
    "lib/net.ts",
    "lib/lib/parsers/Image2DParser.ts",
    "lib/lib/parsers/ImageCubeParser.ts",
    "lib/lib/parsers/ParserBase.ts",
    "lib/lib/parsers/ParserDataFormat.ts",
    "lib/lib/parsers/ParserUtils.ts",
    "lib/lib/parsers/ResourceDependency.ts",
    "lib/lib/parsers/TextureAtlasParser.ts",
    "lib/lib/parsers/WaveAudioParser.ts",
    "lib/parsers.ts",
    "lib/lib/projections/CoordinateSystem.ts",
    "lib/lib/projections/FreeMatrixProjection.ts",
    "lib/lib/projections/ObliqueNearPlaneProjection.ts",
    "lib/lib/projections/OrthographicOffCenterProjection.ts",
    "lib/lib/projections/OrthographicProjection.ts",
    "lib/lib/projections/PerspectiveProjection.ts",
    "lib/lib/projections/ProjectionBase.ts",
    "lib/projections.ts",
    "lib/lib/ui/Keyboard.ts",
    "lib/ui.ts",
    "lib/lib/utils/BitmapImageUtils.ts",
    "lib/lib/utils/ByteArrayBase.ts",
    "lib/lib/utils/ByteArrayBuffer.ts",
    "lib/lib/utils/ByteArray.ts",
    "lib/lib/utils/CSS.ts",
    "lib/lib/utils/ColorUtils.ts",
    "lib/lib/utils/Debug.ts",
    "lib/lib/utils/Extensions.ts",
    "lib/lib/utils/ImageUtils.ts",
    "lib/lib/utils/MipmapGenerator.ts",
    "lib/lib/utils/RequestAnimationFrame.ts",
    "lib/lib/utils/Timer.ts",
    "lib/lib/utils/XmlUtils.ts",
    "lib/lib/utils/getTimer.ts",
    "lib/utils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    1,
    "module",
    "attributes",
    "audio",
    "errors",
    "events",
    "geom",
    "image",
    "library",
    "managers",
    "net",
    "parsers",
    "projections",
    "ui",
    "utils",
    "Loader",
    "enableParser",
    "Image2DParser",
    "ImageCubeParser",
    "TextureAtlasParser",
    "WaveAudioParser",
    "./lib/attributes",
    "./lib/audio",
    "./lib/errors",
    "./lib/events",
    "./lib/geom",
    "./lib/image",
    "./lib/library",
    "./lib/managers",
    "./lib/net",
    "./lib/parsers",
    "./lib/projections",
    "./lib/ui",
    "./lib/utils",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "Object",
    "create",
    "AssetBase_1",
    "AttributesBuffer",
    "_super",
    "stride",
    "count",
    "_count",
    "_stride",
    "_newStride",
    "_viewVOs",
    "Array",
    "_buffer",
    "ArrayBuffer",
    "_bufferView",
    "Uint8Array",
    "byteLength",
    "defineProperty",
    "get",
    "assetType",
    "enumerable",
    "configurable",
    "_lengthDirty",
    "_updateLength",
    "set",
    "value",
    "resize",
    "_contentDirty",
    "buffer",
    "invalidate",
    "clear",
    "clone",
    "attributesBuffer",
    "bufferView",
    "len",
    "view",
    "_internalClone",
    "getView",
    "index",
    "_setAttributes",
    "viewIndex",
    "arrayBufferView",
    "offset",
    "array",
    "viewVO",
    "vLength",
    "vOffset",
    "vCount",
    "subarray",
    "_getLocalArrayBuffer",
    "localBuffer",
    "localBufferView",
    "_addView",
    "ViewVO",
    "push",
    "_index",
    "_removeView",
    "splice",
    "dispose",
    "_getOffset",
    "j",
    "newLength",
    "newBuffer",
    "newView",
    "vOldOffset",
    "oldOffset",
    "Math",
    "min",
    "AssetBase",
    "size",
    "dimensions",
    "../library/AssetBase",
    "awayjs-core/lib/attributes/AttributesView",
    "AttributesBuffer_1",
    "AttributesView",
    "arrayClass",
    "attributesBufferCount",
    "unsigned",
    "_arrayClass",
    "_size",
    "BYTES_PER_ELEMENT",
    "_dimensions",
    "_attributesBuffer",
    "_unsigned",
    "values",
    "_localArrayBuffer",
    "_cloneCache",
    "cloneCache",
    "../attributes/AttributesBuffer",
    "awayjs-core/lib/attributes/Byte1Attributes",
    "AttributesView_1",
    "Byte1Attributes",
    "attributesBufferLength",
    "Int8Array",
    "../attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte2Attributes",
    "Byte2Attributes",
    "awayjs-core/lib/attributes/Byte3Attributes",
    "Byte3Attributes",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "Float1Attributes",
    "Float32Array",
    "awayjs-core/lib/attributes/Float2Attributes",
    "Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "Float3Attributes",
    "awayjs-core/lib/attributes/Float4Attributes",
    "Float4Attributes",
    "awayjs-core/lib/attributes/Short2Attributes",
    "Short2Attributes",
    "Uint16Array",
    "Int16Array",
    "awayjs-core/lib/attributes/Short3Attributes",
    "Short3Attributes",
    "awayjs-core/lib/attributes",
    "Byte1Attributes_1",
    "Byte2Attributes_1",
    "Byte3Attributes_1",
    "Byte4Attributes_1",
    "Float1Attributes_1",
    "Float2Attributes_1",
    "Float3Attributes_1",
    "Float4Attributes_1",
    "Short2Attributes_1",
    "Short3Attributes_1",
    "./attributes/AttributesBuffer",
    "./attributes/AttributesView",
    "./attributes/Byte1Attributes",
    "./attributes/Byte2Attributes",
    "./attributes/Byte3Attributes",
    "./attributes/Byte4Attributes",
    "./attributes/Float1Attributes",
    "./attributes/Float2Attributes",
    "./attributes/Float3Attributes",
    "./attributes/Float4Attributes",
    "./attributes/Short2Attributes",
    "./attributes/Short3Attributes",
    "awayjs-core/lib/audio/WaveAudio",
    "AudioManager_1",
    "WaveAudio",
    "_volume",
    "_audioChannel",
    "volume",
    "currentTime",
    "duration",
    "stop",
    "play",
    "loop",
    "AudioManager",
    "getChannel",
    "id",
    "newInstance",
    "name",
    "../managers/AudioManager",
    "awayjs-core/lib/audio",
    "WaveAudio_1",
    "./audio/WaveAudio",
    "awayjs-core/lib/errors/AbstractMethodError",
    "ErrorBase_1",
    "AbstractMethodError",
    "message",
    "ErrorBase",
    "../errors/ErrorBase",
    "awayjs-core/lib/errors/ArgumentError",
    "ArgumentError",
    "awayjs-core/lib/errors/DocumentError",
    "DocumentError",
    "DOCUMENT_DOES_NOT_EXIST",
    "awayjs-core/lib/errors/ErrorBase",
    "_name",
    "_errorID",
    "_messsage",
    "awayjs-core/lib/errors/PartialImplementationError",
    "PartialImplementationError",
    "dependency",
    "awayjs-core/lib/errors/RangeError",
    "RangeError",
    "awayjs-core/lib/errors",
    "AbstractMethodError_1",
    "ArgumentError_1",
    "DocumentError_1",
    "PartialImplementationError_1",
    "RangeError_1",
    "./errors/AbstractMethodError",
    "./errors/ArgumentError",
    "./errors/DocumentError",
    "./errors/ErrorBase",
    "./errors/PartialImplementationError",
    "./errors/RangeError",
    "awayjs-core/lib/events/AssetEvent",
    "EventBase_1",
    "AssetEvent",
    "type",
    "asset",
    "prevName",
    "_asset",
    "_prevName",
    "INVALIDATE",
    "DISPOSE",
    "CLEAR",
    "RENAME",
    "ENTER_FRAME",
    "EXIT_FRAME",
    "ASSET_CONFLICT_RESOLVED",
    "ASSET_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "EventBase",
    "../events/EventBase",
    "awayjs-core/lib/events/EventBase",
    "undefined",
    "target",
    "awayjs-core/lib/events/EventDispatcher",
    "EventDispatcher",
    "listenerObjects",
    "addEventListener",
    "listener",
    "ListenerObject",
    "removeEventListener",
    "numListeners",
    "dispatchEvent",
    "event",
    "hasEventListener",
    "getEventListenerIndex",
    "listeners",
    "default",
    "awayjs-core/lib/events/IEventDispatcher",
    "awayjs-core/lib/events/LoaderEvent",
    "LoaderEvent",
    "url",
    "content",
    "assets",
    "_url",
    "_content",
    "_assets",
    "LOAD_COMPLETE",
    "awayjs-core/lib/events/ParserEvent",
    "ParserEvent",
    "_message",
    "PARSE_COMPLETE",
    "PARSE_ERROR",
    "READY_FOR_DEPENDENCIES",
    "awayjs-core/lib/events/ProjectionEvent",
    "ProjectionEvent",
    "projection",
    "_projection",
    "MATRIX_CHANGED",
    "awayjs-core/lib/events/TimerEvent",
    "TimerEvent",
    "TIMER",
    "TIMER_COMPLETE",
    "awayjs-core/lib/events/URLLoaderEvent",
    "URLLoaderEvent",
    "urlLoader",
    "_urlLoader",
    "HTTP_STATUS",
    "LOAD_ERROR",
    "LOAD_PROGRESS",
    "LOAD_START",
    "awayjs-core/lib/events",
    "AssetEvent_1",
    "EventDispatcher_1",
    "LoaderEvent_1",
    "ParserEvent_1",
    "ProjectionEvent_1",
    "TimerEvent_1",
    "URLLoaderEvent_1",
    "./events/AssetEvent",
    "./events/EventBase",
    "./events/EventDispatcher",
    "./events/LoaderEvent",
    "./events/ParserEvent",
    "./events/ProjectionEvent",
    "./events/TimerEvent",
    "./events/URLLoaderEvent",
    "awayjs-core/lib/geom/Box",
    "Vector3D_1",
    "Box",
    "x",
    "y",
    "z",
    "width",
    "height",
    "depth",
    "val",
    "_bottomRightBack",
    "Vector3D",
    "_topLeftFront",
    "contains",
    "containsPoint",
    "position",
    "containsBox",
    "box",
    "copyFrom",
    "sourceBox",
    "equals",
    "toCompare",
    "inflate",
    "dx",
    "dy",
    "dz",
    "inflatePoint",
    "delta",
    "intersection",
    "toIntersect",
    "intersects",
    "rayIntersection",
    "direction",
    "targetNormal",
    "halfExtentsX",
    "halfExtentsY",
    "halfExtentsZ",
    "centerX",
    "centerY",
    "centerZ",
    "px",
    "py",
    "pz",
    "vx",
    "vy",
    "vz",
    "ix",
    "iy",
    "iz",
    "rayEntryDistance",
    "closestPointToPoint",
    "point",
    "isEmpty",
    "offsetPosition",
    "setEmpty",
    "setBoundIdentity",
    "Number",
    "MAX_VALUE",
    "setTo",
    "xa",
    "ya",
    "za",
    "widtha",
    "heighta",
    "deptha",
    "toString",
    "union",
    "toUnion",
    "../geom/Vector3D",
    "awayjs-core/lib/geom/ColorTransform",
    "ColorUtils_1",
    "ColorTransform",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "argb",
    "ColorUtils",
    "float32ColorToARGB",
    "source",
    "copyTo",
    "destination",
    "prepend",
    "ct",
    "_isRenderable",
    "Boolean",
    "../utils/ColorUtils",
    "awayjs-core/lib/geom/MathConsts",
    "MathConsts",
    "RADIANS_TO_DEGREES",
    "PI",
    "DEGREES_TO_RADIANS",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "Matrix3D_1",
    "Matrix3DUtils",
    "quaternion2matrix",
    "quarternion",
    "m",
    "w",
    "xx",
    "xy",
    "xz",
    "xw",
    "yy",
    "yz",
    "yw",
    "zz",
    "zw",
    "raw",
    "RAW_DATA_CONTAINER",
    "copyRawDataFrom",
    "Matrix3D",
    "getForward",
    "v",
    "copyColumnTo",
    "normalize",
    "getUp",
    "getRight",
    "compare",
    "m1",
    "m2",
    "r1",
    "r2",
    "rawData",
    "copyRawDataTo",
    "lookAt",
    "matrix",
    "pos",
    "dir",
    "up",
    "dirN",
    "upN",
    "lftN",
    "crossProduct",
    "dotProduct",
    "reflection",
    "plane",
    "c",
    "ab2",
    "ac2",
    "bc2",
    "transformVector",
    "vector",
    "result",
    "g",
    "k",
    "h",
    "deltaTransformVector",
    "getTranslation",
    "transform",
    "deltaTransformVectors",
    "vin",
    "vout",
    "outIndex",
    "CALCULATION_MATRIX",
    "../geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3D",
    "Box_1",
    "MathConsts_1",
    "Orientation3D_1",
    "_position",
    "_positionDirty",
    "identity",
    "append",
    "lhs",
    "lrd",
    "m111",
    "m112",
    "m113",
    "m114",
    "m121",
    "m122",
    "m123",
    "m124",
    "m131",
    "m132",
    "m133",
    "m134",
    "m141",
    "m142",
    "m143",
    "m144",
    "m211",
    "m212",
    "m213",
    "m214",
    "m221",
    "m222",
    "m223",
    "m224",
    "m231",
    "m232",
    "m233",
    "m234",
    "m241",
    "m242",
    "m243",
    "m244",
    "appendRotation",
    "degrees",
    "axis",
    "getAxisRotation",
    "appendSkew",
    "xSkew",
    "ySkew",
    "zSkew",
    "tempRawData",
    "tempMatrix",
    "appendScale",
    "xScale",
    "yScale",
    "zScale",
    "appendTranslation",
    "copyColumnFrom",
    "column",
    "vector3D",
    "sourceRaw",
    "targetRaw",
    "transpose",
    "copyRowFrom",
    "row",
    "copyRowTo",
    "decompose",
    "orientationStyle",
    "q",
    "_components",
    "colX",
    "colY",
    "colZ",
    "scale",
    "skew",
    "scaleBy",
    "combine",
    "rot",
    "Orientation3D",
    "AXIS_ANGLE",
    "acos",
    "sqrt",
    "QUATERNION",
    "tr",
    "EULER_ANGLES",
    "asin",
    "atan2",
    "interpolate",
    "thisMat",
    "toMat",
    "percent",
    "interpolateTo",
    "invert",
    "determinant",
    "invertable",
    "abs",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "m41",
    "m42",
    "m43",
    "m44",
    "rhs",
    "prependRotation",
    "prependScale",
    "prependTranslation",
    "recompose",
    "components",
    "sin",
    "cos",
    "rotation",
    "angle",
    "transformBox",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "transformVectors",
    "rad",
    "tmp1",
    "tmp2",
    "invalidatePosition",
    "toFixed",
    "decimalPlace",
    "magnitude",
    "pow",
    "round",
    "../errors/ArgumentError",
    "../geom/Box",
    "../geom/MathConsts",
    "../geom/Orientation3D",
    "awayjs-core/lib/geom/Matrix",
    "Point_1",
    "Matrix",
    "tx",
    "ty",
    "concat",
    "a1",
    "c1",
    "tx1",
    "sourceMatrix",
    "createBox",
    "scaleX",
    "scaleY",
    "createGradientBox",
    "deltaTransformPoint",
    "Point",
    "norm",
    "multiply",
    "rotate",
    "sx",
    "sy",
    "transformPoint",
    "translate",
    "../geom/Point",
    "awayjs-core/lib/geom/Orientation3D",
    "awayjs-core/lib/geom/Plane3D",
    "PlaneClassification_1",
    "Plane3D",
    "_iAlignment",
    "ALIGN_XY_AXIS",
    "ALIGN_YZ_AXIS",
    "ALIGN_XZ_AXIS",
    "ALIGN_ANY",
    "fromPoints",
    "p0",
    "p1",
    "p2",
    "d1x",
    "d1y",
    "d1z",
    "d2x",
    "d2y",
    "d2z",
    "fromNormalAndPoint",
    "normal",
    "distance",
    "classifyPoint",
    "epsilon",
    "PlaneClassification",
    "FRONT",
    "BACK",
    "INTERSECT",
    "../geom/PlaneClassification",
    "awayjs-core/lib/geom/PlaneClassification",
    "IN",
    "OUT",
    "awayjs-core/lib/geom/Point",
    "add",
    "sourcePoint",
    "thickness",
    "invLength",
    "subtract",
    "pt1",
    "pt2",
    "polar",
    "awayjs-core/lib/geom/PoissonLookup",
    "PoissonLookup",
    "initDistributions",
    "_distributions",
    "getDistribution",
    "awayjs-core/lib/geom/Quaternion",
    "Matrix3DUtils_1",
    "Quaternion",
    "qa",
    "qb",
    "w1",
    "x1",
    "y1",
    "z1",
    "w2",
    "x2",
    "y2",
    "z2",
    "multiplyVector",
    "fromAxisAngle",
    "sin_a",
    "cos_a",
    "slerp",
    "dot",
    "s1",
    "s2",
    "lerp",
    "fromEulerAngles",
    "ax",
    "ay",
    "az",
    "halfX",
    "halfY",
    "halfZ",
    "cosX",
    "sinX",
    "cosY",
    "sinY",
    "cosZ",
    "sinZ",
    "toEulerAngles",
    "mag",
    "toMatrix3D",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "ww",
    "fromMatrix",
    "toRawData",
    "exclude4thRow",
    "rotatePoint",
    "../geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Rectangle",
    "Rectangle",
    "_bottomRight",
    "_topLeft",
    "containsRect",
    "rect",
    "sourceRect",
    "offsetPoint",
    "awayjs-core/lib/geom/Sphere",
    "Sphere",
    "radius",
    "det",
    "sqrtDet",
    "awayjs-core/lib/geom/Vector3D",
    "lengthSquared",
    "angleBetween",
    "ascl",
    "bscl",
    "src",
    "decrementBy",
    "allFour",
    "incrementBy",
    "nearEquals",
    "tolerance",
    "negate",
    "project",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "awayjs-core/lib/geom",
    "ColorTransform_1",
    "Matrix_1",
    "Plane3D_1",
    "PoissonLookup_1",
    "Quaternion_1",
    "Rectangle_1",
    "Sphere_1",
    "./geom/Box",
    "./geom/ColorTransform",
    "./geom/MathConsts",
    "./geom/Matrix",
    "./geom/Matrix3D",
    "./geom/Matrix3DUtils",
    "./geom/Orientation3D",
    "./geom/Plane3D",
    "./geom/PlaneClassification",
    "./geom/Point",
    "./geom/PoissonLookup",
    "./geom/Quaternion",
    "./geom/Rectangle",
    "./geom/Sphere",
    "./geom/Vector3D",
    "awayjs-core/lib/image/BitmapImage2D",
    "Image2D_1",
    "BitmapImageUtils_1",
    "CPUCanvas_1",
    "BitmapImage2D",
    "transparent",
    "fillColor",
    "powerOfTwo",
    "_locked",
    "_transparent",
    "document",
    "_imageCanvas",
    "createElement",
    "CPUCanvas",
    "_context",
    "getContext",
    "fillRect",
    "_rect",
    "_imageDataDirty",
    "draw",
    "colorTransform",
    "_imageData",
    "getImageData",
    "data",
    "putImageData",
    "copyChannel",
    "sourceBitmap",
    "destPoint",
    "sourceChannel",
    "destChannel",
    "imageData",
    "sourceData",
    "destData",
    "sourceOffset",
    "log",
    "destOffset",
    "sourceIndex",
    "destIndex",
    "copyPixels",
    "destRect",
    "getCanvas",
    "BitmapImageUtils",
    "_copyPixels",
    "blendMode",
    "clipRect",
    "smoothing",
    "_draw",
    "color",
    "_fillRect",
    "getPixel",
    "pixelData",
    "getPixel32",
    "getPixelData",
    "imagePixel",
    "setPixelData",
    "lock",
    "setArray",
    "inputArray",
    "setPixel",
    "setPixel32",
    "setPixels",
    "input",
    "unlock",
    "_setSize",
    "Image2D",
    "../image/CPUCanvas",
    "../image/Image2D",
    "../utils/BitmapImageUtils",
    "awayjs-core/lib/image/BitmapImageChannel",
    "BitmapImageChannel",
    "ALPHA",
    "BLUE",
    "GREEN",
    "RED",
    "awayjs-core/lib/image/BitmapImageCube",
    "BitmapImage2D_1",
    "ImageCube_1",
    "BitmapImageCube",
    "side",
    "inputByteArray",
    "readUnsignedInt",
    "posX",
    "negX",
    "posY",
    "negY",
    "posZ",
    "negZ",
    "ImageCube",
    "../geom/Rectangle",
    "../image/BitmapImage2D",
    "../image/ImageCube",
    "awayjs-core/lib/image/BlendMode",
    "BlendMode",
    "ADD",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "NORMAL",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "SUBTRACT",
    "awayjs-core/lib/image/CPUCanvas",
    "CPURenderingContext2D_1",
    "ImageData_1",
    "reset",
    "contextId",
    "args",
    "_i",
    "arguments",
    "CPURenderingContext2D",
    "ImageData",
    "../image/CPURenderingContext2D",
    "../image/ImageData",
    "awayjs-core/lib/image/CPURenderingContext2D",
    "cpuCanvas",
    "point2",
    "restore",
    "setTransform",
    "save",
    "arc",
    "startAngle",
    "endAngle",
    "anticlockwise",
    "measureText",
    "text",
    "isPointInPath",
    "fillRule",
    "quadraticCurveTo",
    "cpx",
    "cpy",
    "imagedata",
    "dirtyX",
    "dirtyY",
    "dirtyWidth",
    "dirtyHeight",
    "fillText",
    "maxWidth",
    "createRadialGradient",
    "x0",
    "y0",
    "r0",
    "ellipse",
    "radiusX",
    "radiusY",
    "lineTo",
    "getLineDash",
    "fill",
    "createImageData",
    "imageDataOrSw",
    "sh",
    "createPattern",
    "repetition",
    "closePath",
    "clip",
    "clearRect",
    "moveTo",
    "sw",
    "applyPixel32",
    "floor",
    "copyPixel32",
    "fromX",
    "fromY",
    "fromIndex",
    "fillStyle",
    "parsedFillStyle",
    "colorStrings",
    "substring",
    "lastIndexOf",
    "split",
    "parsedA",
    "parseFloat",
    "parsedR",
    "parseInt",
    "parsedG",
    "parsedB",
    "bezierCurveTo",
    "cp1x",
    "cp1y",
    "cp2x",
    "cp2y",
    "drawImage",
    "offsetX",
    "offsetY",
    "canvasOffsetX",
    "canvasOffsetY",
    "canvasImageWidth",
    "canvasImageHeight",
    "indexOf",
    "bitmap",
    "drawBitmap",
    "htmlImage",
    "htmlCanvas",
    "htmlContext",
    "htmlImageData",
    "resultBitmap",
    "passBitmap",
    "canvas",
    "canvasImageData",
    "sampleBilinear",
    "sampleBox",
    "sample",
    "stroke",
    "strokeRect",
    "setLineDash",
    "segments",
    "strokeText",
    "beginPath",
    "arcTo",
    "createLinearGradient",
    "texture",
    "texelSizeX",
    "texelSizeY",
    "color00",
    "color10",
    "color01",
    "color11",
    "interColor0",
    "interpolateColor",
    "interColor1",
    "area",
    "xsize",
    "ysize",
    "toY",
    "ceil",
    "max",
    "toX",
    "../geom/Matrix",
    "awayjs-core/lib/image/IImageCanvas",
    "awayjs-core/lib/image/Image2D",
    "ImageBase_1",
    "ImageUtils_1",
    "_powerOfTwo",
    "_testDimensions",
    "ImageUtils",
    "isDimensionValid",
    "ImageBase",
    "../image/ImageBase",
    "../utils/ImageUtils",
    "awayjs-core/lib/image/ImageBase",
    "_pFormat",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-core/lib/image/ImageData",
    "awayjs-core/lib/image/Sampler2D",
    "SamplerBase_1",
    "Sampler2D",
    "repeat",
    "smooth",
    "mipmap",
    "_repeat",
    "_updateRect",
    "_imageRect",
    "_frameRect",
    "SamplerBase",
    "../image/SamplerBase",
    "awayjs-core/lib/image/SamplerBase",
    "_smooth",
    "_mipmap",
    "awayjs-core/lib/image/SamplerCube",
    "SamplerCube",
    "awayjs-core/lib/image/SpecularImage2D",
    "BitmapImageChannel_1",
    "SpecularImage2D",
    "specularSource",
    "glossSource",
    "_specularSource",
    "_glossSource",
    "_output",
    "_testSize",
    "origin",
    "../image/BitmapImageChannel",
    "awayjs-core/lib/image",
    "BitmapImageCube_1",
    "BlendMode_1",
    "Sampler2D_1",
    "SamplerCube_1",
    "SpecularImage2D_1",
    "./image/BitmapImage2D",
    "./image/BitmapImageChannel",
    "./image/BitmapImageCube",
    "./image/BlendMode",
    "./image/CPUCanvas",
    "./image/CPURenderingContext2D",
    "./image/Image2D",
    "./image/ImageBase",
    "./image/ImageCube",
    "./image/ImageData",
    "./image/Sampler2D",
    "./image/SamplerBase",
    "./image/SamplerCube",
    "./image/SpecularImage2D",
    "awayjs-core/lib/library/AbstractionBase",
    "AbstractionBase",
    "pool",
    "_this",
    "_invalid",
    "_pool",
    "_onClearDelegate",
    "onClear",
    "_onInvalidateDelegate",
    "onInvalidate",
    "clearAbstraction",
    "../events/AssetEvent",
    "../events/EventDispatcher",
    "awayjs-core/lib/library/AssetBase",
    "_id",
    "ID_COUNT",
    "_originalName",
    "updateFullPath",
    "prev",
    "_namespace",
    "_full_path",
    "assetPathEquals",
    "ns",
    "isAsset",
    "assetClass",
    "resetAssetPath",
    "overrideOriginal",
    "DEFAULT_NAMESPACE",
    "../errors/AbstractMethodError",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "AssetLibraryIterator_1",
    "Loader_1",
    "ConflictPrecedence_1",
    "ConflictStrategy_1",
    "AssetLibraryBundle",
    "_loaderSessionsGarbage",
    "_assetDictionary",
    "_loaderSessions",
    "conflictStrategy",
    "ConflictStrategy",
    "IGNORE",
    "conflictPrecedence",
    "ConflictPrecedence",
    "FAVOR_NEW",
    "_onAssetRenameDelegate",
    "onAssetRename",
    "_onAssetConflictResolvedDelegate",
    "onAssetConflictResolved",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "getInstance",
    "key",
    "_iInstances",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "_strategy",
    "_strategyPreference",
    "createIterator",
    "assetTypeFilter",
    "namespaceFilter",
    "filterFunc",
    "AssetLibraryIterator",
    "load",
    "req",
    "context",
    "parser",
    "getLoader",
    "loadData",
    "loader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "disposeLoader",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "getAsset",
    "_assetDictDirty",
    "rehashAssetDict",
    "getAllAssets",
    "addAsset",
    "old",
    "assetNamespace",
    "resolveConflict",
    "removeAsset",
    "idx",
    "removeAssetFromDict",
    "removeAssetByName",
    "removeAllAssets",
    "removeNamespaceAssets",
    "old_assets",
    "autoRemoveEmptyNamespace",
    "empty",
    "stopAllLoaders",
    "killloaderSession",
    "pop",
    "clearTimeout",
    "dict",
    "../events/LoaderEvent",
    "../events/ParserEvent",
    "../events/URLLoaderEvent",
    "../library/AssetLibraryIterator",
    "../library/ConflictPrecedence",
    "../library/ConflictStrategy",
    "../library/Loader",
    "awayjs-core/lib/library/AssetLibraryIterator",
    "filter",
    "_idx",
    "_filtered",
    "next",
    "setIndex",
    "awayjs-core/lib/library/AssetLibrary",
    "AssetLibraryBundle_1",
    "AssetLibrary",
    "getBundle",
    "stopLoad",
    "../library/AssetLibraryBundle",
    "awayjs-core/lib/library/ConflictPrecedence",
    "FAVOR_OLD",
    "awayjs-core/lib/library/ConflictStrategyBase",
    "ConflictStrategyBase",
    "changedAsset",
    "oldAsset",
    "assetsDictionary",
    "precedence",
    "_pUpdateNames",
    "nonConflictingName",
    "newAsset",
    "loser_prev_name",
    "winner",
    "loser",
    "awayjs-core/lib/library/ConflictStrategy",
    "ErrorConflictStrategy_1",
    "IgnoreConflictStrategy_1",
    "NumSuffixConflictStrategy_1",
    "include",
    "APPEND_NUM_SUFFIX",
    "NumSuffixConflictStrategy",
    "IgnoreConflictStrategy",
    "THROW_ERROR",
    "ErrorConflictStrategy",
    "../library/ErrorConflictStrategy",
    "../library/IgnoreConflictStrategy",
    "../library/NumSuffixConflictStrategy",
    "awayjs-core/lib/library/ErrorConflictStrategy",
    "ConflictStrategyBase_1",
    "assetFullPath",
    "../library/ConflictStrategyBase",
    "awayjs-core/lib/library/IAbstractionPool",
    "awayjs-core/lib/library/IAssetClass",
    "awayjs-core/lib/library/IAsset",
    "awayjs-core/lib/library/IDUtil",
    "IDUtil",
    "createUID",
    "uid",
    "ALPHA_CHAR_CODES",
    "random",
    "time",
    "Date",
    "getTime",
    "timeString",
    "toUpperCase",
    "substr",
    "charCodeAt",
    "String",
    "fromCharCode",
    "apply",
    "awayjs-core/lib/library/IgnoreConflictStrategy",
    "awayjs-core/lib/library/LoaderContext",
    "LoaderContext",
    "includeDependencies",
    "dependencyBaseUrl",
    "_includeDependencies",
    "_dependencyBaseUrl",
    "_embeddedDataByUrl",
    "_remappedUrls",
    "_materialMode",
    "UNDEFINED",
    "materialMode",
    "_overrideAbsPath",
    "_overrideFullUrls",
    "mapUrl",
    "originalUrl",
    "newUrl",
    "mapUrlToData",
    "_iHasDataForUrl",
    "_iGetDataForUrl",
    "_iHasMappingForUrl",
    "_iGetRemappedUrl",
    "SINGLEPASS_MATERIALS",
    "MULTIPASS_MATERIALS",
    "awayjs-core/lib/library/LoaderInfo",
    "LoaderInfo",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_contentType",
    "_loader",
    "awayjs-core/lib/library/Loader",
    "URLLoader_1",
    "URLLoaderDataFormat_1",
    "ResourceDependency_1",
    "_stack",
    "_errorHandlers",
    "_parseErrorHandlers",
    "_onReadyForDependenciesDelegate",
    "onReadyForDependencies",
    "_onParseCompleteDelegate",
    "onParseComplete",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_parsers",
    "_baseDependency",
    "_loaderInfo",
    "_uri",
    "replace",
    "ResourceDependency",
    "retrieveDependency",
    "retrieveNext",
    "_currentDependency",
    "dependencies",
    "parsingPaused",
    "_iResumeParsing",
    "_iSuccess",
    "resolve",
    "_iLoader",
    "URLLoader",
    "addEventListeners",
    "request",
    "Function",
    "_iSetData",
    "retrieveAsRawData",
    "parseDependency",
    "resolveDependencyUrl",
    "dataFormat",
    "URLLoaderDataFormat",
    "BINARY",
    "_iSetParser",
    "getParserFromSuffix",
    "joinUrl",
    "base",
    "end",
    "charAt",
    "scheme_re",
    "RegExp",
    "overrideAbsolutePaths",
    "test",
    "overrideFullURLs",
    "noscheme_url",
    "retrieveParserDependencies",
    "parserDependancies",
    "resolveParserDependencies",
    "handled",
    "isDependency",
    "removeEventListeners",
    "resolveFailure",
    "suppresAssetEvents",
    "resolveName",
    "handler",
    "getParserFromData",
    "supportsData",
    "_iFileName",
    "parseAsync",
    "fileExtension",
    "toLowerCase",
    "supportsType",
    "../net/URLLoader",
    "../net/URLLoaderDataFormat",
    "../parsers/ResourceDependency",
    "awayjs-core/lib/library/NumSuffixConflictStrategy",
    "separator",
    "_separator",
    "_next_suffix",
    "orig",
    "new_name",
    "suffix",
    "isNaN",
    "awayjs-core/lib/library",
    "AbstractionBase_1",
    "AssetLibrary_1",
    "IDUtil_1",
    "LoaderContext_1",
    "LoaderInfo_1",
    "./library/AbstractionBase",
    "./library/AssetBase",
    "./library/AssetLibrary",
    "./library/AssetLibraryBundle",
    "./library/AssetLibraryIterator",
    "./library/ConflictPrecedence",
    "./library/ConflictStrategy",
    "./library/ConflictStrategyBase",
    "./library/ErrorConflictStrategy",
    "./library/IDUtil",
    "./library/IgnoreConflictStrategy",
    "./library/Loader",
    "./library/LoaderContext",
    "./library/LoaderInfo",
    "./library/NumSuffixConflictStrategy",
    "awayjs-core/lib/managers/AudioChannel",
    "AudioChannel",
    "_isPlaying",
    "_isLooping",
    "_audioCtx",
    "window",
    "_gainNode",
    "createGain",
    "connect",
    "_audio",
    "Audio",
    "onended",
    "_onEnded",
    "createMediaElementSource",
    "gain",
    "isPlaying",
    "isLooping",
    "isDecoding",
    "pause",
    "maxChannels",
    "_channels",
    "awayjs-core/lib/managers/AudioManager",
    "StreamingAudioChannel_1",
    "WebAudioChannel_1",
    "channelClass",
    "StreamingAudioChannel",
    "WebAudioChannel",
    "channel",
    "../managers/StreamingAudioChannel",
    "../managers/WebAudioChannel",
    "awayjs-core/lib/managers/EventAudioChannel",
    "ParserUtils_1",
    "EventAudioChannel",
    "_startTime",
    "ontimeupdate",
    "_onTimeUpdate",
    "_duration",
    "_base64Cache",
    "ParserUtils",
    "arrayBufferToBase64",
    "../parsers/ParserUtils",
    "awayjs-core/lib/managers/IAudioChannelClass",
    "awayjs-core/lib/managers/IAudioChannel",
    "awayjs-core/lib/managers/StreamingAudioChannel",
    "_sourceOpenDelegate",
    "_sourceOpen",
    "_updateEndDelegate",
    "_updateEnd",
    "_updateSource",
    "_sourceDirty",
    "_offset",
    "_isQueuing",
    "_isOpening",
    "_queueBuffer",
    "_mediaSource",
    "activeSourceBuffers",
    "console",
    "_sourceBuffer",
    "addSourceBuffer",
    "timestampOffset",
    "appendBuffer",
    "endOfStream",
    "_disposeSource",
    "MediaSource",
    "_urlString",
    "URL",
    "createObjectURL",
    "remove",
    "removeSourceBuffer",
    "revokeObjectURL",
    "awayjs-core/lib/managers/WebAudioChannel",
    "_isDecoding",
    "_onEndedDelegate",
    "_currentTime",
    "_decodeCache",
    "_onDecodeComplete",
    "_errorCache",
    "decodeAudioData",
    "_onError",
    "_source",
    "createBufferSource",
    "start",
    "error",
    "disconnect",
    "awayjs-core/lib/managers",
    "./managers/AudioManager",
    "./managers/StreamingAudioChannel",
    "./managers/WebAudioChannel",
    "awayjs-core/lib/net/CrossDomainPolicy",
    "CrossDomainPolicy",
    "ANONYMOUS",
    "USE_CREDENTIALS",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "TEXT",
    "VARIABLES",
    "BLOB",
    "ARRAY_BUFFER",
    "awayjs-core/lib/net/URLLoader",
    "URLRequestMethod_1",
    "URLVariables_1",
    "_dataFormat",
    "_loadError",
    "_request",
    "_data",
    "format",
    "initXHR",
    "method",
    "URLRequestMethod",
    "POST",
    "postRequest",
    "getRequest",
    "isSupported",
    "close",
    "_XHR",
    "abort",
    "disposeXHR",
    "setResponseType",
    "xhr",
    "responseType",
    "open",
    "async",
    "send",
    "handleXmlHttpRequestException",
    "URLVariables",
    "urlVars",
    "formData",
    "XMLHttpRequest",
    "onloadstart",
    "onLoadStart",
    "onprogress",
    "onProgress",
    "onabort",
    "onAbort",
    "onerror",
    "onload",
    "ontimeout",
    "onTimeOut",
    "onloadend",
    "onLoadEnd",
    "onreadystatechange",
    "onReadyStateChange",
    "decodeURLVariables",
    "join",
    "tokens",
    "re",
    "exec",
    "decodeURIComponent",
    "readyState",
    "_status",
    "status",
    "_loadErrorEvent",
    "_statusEvent",
    "total",
    "loaded",
    "_progressEvent",
    "_loadStartEvent",
    "responseText",
    "response",
    "_loadCompleteEvent",
    "../net/URLRequestMethod",
    "../net/URLVariables",
    "awayjs-core/lib/net/URLRequestMethod",
    "GET",
    "awayjs-core/lib/net/URLRequest",
    "URLRequest",
    "awayjs-core/lib/net/URLVariables",
    "_variables",
    "decode",
    "obj",
    "fd",
    "FormData",
    "awayjs-core/lib/net",
    "CrossDomainPolicy_1",
    "URLRequest_1",
    "./net/CrossDomainPolicy",
    "./net/URLLoader",
    "./net/URLLoaderDataFormat",
    "./net/URLRequest",
    "./net/URLRequestMethod",
    "./net/URLVariables",
    "awayjs-core/lib/parsers/Image2DParser",
    "ParserBase_1",
    "ByteArray_1",
    "extension",
    "HTMLImageElement",
    "ByteArray",
    "ba",
    "readUnsignedShort",
    "readShort",
    "readUTFBytes",
    "readByte",
    "_pProceedParsing",
    "sizeError",
    "_loadingImage",
    "ParserBase",
    "MORE_TO_PARSE",
    "_htmlImageElement",
    "imageToBitmapImage2D",
    "_pFinalizeAsset",
    "htmlImageElement",
    "byteArrayToImage",
    "complete",
    "arrayBufferToImage",
    "Blob",
    "blobToImage",
    "_pContent",
    "PARSING_DONE",
    "../parsers/ParserBase",
    "../utils/ByteArray",
    "awayjs-core/lib/parsers/ImageCubeParser",
    "JSON",
    "parse",
    "_iResolveDependency",
    "resourceDependency",
    "_iResolveDependencyFailure",
    "_imgDependencyDictionary",
    "_getBitmapImage2D",
    "json",
    "rec",
    "_pDieWithError",
    "_pAddDependency",
    "_validateCubeData",
    "_pPauseAndRetrieveDependencies",
    "../image/BitmapImageCube",
    "../net/URLRequest",
    "awayjs-core/lib/parsers/ParserBase",
    "Timer_1",
    "getTimer_1",
    "_dependencies",
    "_pOnIntervalDelegate",
    "_pOnInterval",
    "isBitmapImage2DValid",
    "bitmapImage2D",
    "isValid",
    "isImage2DValid",
    "_parsingFailure",
    "_parsingPaused",
    "_parsingComplete",
    "newMaterialMode",
    "frameLimit",
    "_pStartParsing",
    "_iResolveDependencyName",
    "_timer",
    "_isParsing",
    "type_event",
    "type_name",
    "suppressErrorEvents",
    "sub_id",
    "_pPauseParsing",
    "_pHasTime",
    "getTimer",
    "_lastFrameTime",
    "_frameLimit",
    "_pFinishParsing",
    "Timer",
    "_pGetTextData",
    "_pGetByteData",
    "toByteArray",
    "_pGetData",
    "../events/TimerEvent",
    "../utils/Timer",
    "../utils/getTimer",
    "awayjs-core/lib/parsers/ParserDataFormat",
    "ParserDataFormat",
    "PLAIN_TEXT",
    "IMAGE",
    "awayjs-core/lib/parsers/ParserUtils",
    "mimeType",
    "byteStr",
    "bytes",
    "base64Image",
    "btoa",
    "arrayBufferToAudio",
    "fileType",
    "str",
    "img",
    "Image",
    "arraybytes",
    "byteArrayToAudio",
    "filetype",
    "URLObj",
    "blobToAudio",
    "bitmapData",
    "setArrayBuffer",
    "getBytesAvailable",
    "awayjs-core/lib/parsers/ResourceDependency",
    "parentParser",
    "suppressAssetEvents",
    "_sub_id",
    "_parser",
    "_parentParser",
    "_retrieveAsRawData",
    "_suppressAssetEvents",
    "awayjs-core/lib/parsers/TextureAtlasParser",
    "XmlUtils_1",
    "_parseState",
    "TextureAtlasParserState",
    "PARSE_SUBTEXTURES",
    "nodes",
    "PARSE_XML",
    "_doc",
    "XmlUtils",
    "getChildrenWithTag",
    "strToXml",
    "_imagePath",
    "readAttributeValue",
    "_subTextureNodes",
    "PARSE_IMAGE",
    "sampler",
    "element",
    "imageRect",
    "frameRect",
    "../image/Sampler2D",
    "../utils/XmlUtils",
    "awayjs-core/lib/parsers/WaveAudioParser",
    "parseFileType",
    "../audio/WaveAudio",
    "awayjs-core/lib/parsers",
    "Image2DParser_1",
    "ImageCubeParser_1",
    "ParserDataFormat_1",
    "TextureAtlasParser_1",
    "WaveAudioParser_1",
    "./parsers/Image2DParser",
    "./parsers/ImageCubeParser",
    "./parsers/ParserBase",
    "./parsers/ParserDataFormat",
    "./parsers/ParserUtils",
    "./parsers/ResourceDependency",
    "./parsers/TextureAtlasParser",
    "./parsers/WaveAudioParser",
    "awayjs-core/lib/projections/CoordinateSystem",
    "CoordinateSystem",
    "LEFT_HANDED",
    "RIGHT_HANDED",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "PerspectiveProjection_1",
    "ProjectionBase_1",
    "FreeMatrixProjection",
    "_pMatrix",
    "PerspectiveProjection",
    "_pNear",
    "_pFar",
    "_pAspectRatio",
    "pInvalidateMatrix",
    "pUpdateMatrix",
    "_pMatrixInvalid",
    "ProjectionBase",
    "../projections/PerspectiveProjection",
    "../projections/ProjectionBase",
    "awayjs-core/lib/projections/IProjection",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection",
    "ObliqueNearPlaneProjection",
    "baseProjection",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_baseProjection",
    "frustumCorners",
    "near",
    "far",
    "_iAspectRatio",
    "_plane",
    "cx",
    "cy",
    "cz",
    "cw",
    "signX",
    "signY",
    "inverse",
    "../events/ProjectionEvent",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "OrthographicOffCenterProjection",
    "_minX",
    "_maxX",
    "_minY",
    "_maxY",
    "unproject",
    "nX",
    "nY",
    "sZ",
    "unprojectionMatrix",
    "_pFrustumCorners",
    "awayjs-core/lib/projections/OrthographicProjection",
    "OrthographicProjection",
    "projectionHeight",
    "_projectionHeight",
    "_yMax",
    "_xMax",
    "left",
    "right",
    "top",
    "bottom",
    "_pScissorRect",
    "_pViewPort",
    "xWidth",
    "yHgt",
    "center",
    "middle",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "CoordinateSystem_1",
    "fieldOfView",
    "coordinateSystem",
    "_fieldOfView",
    "_focalLength",
    "_hFieldOfView",
    "_hFocalLength",
    "_preserveAspectRatio",
    "_preserveFocalLength",
    "tan",
    "_pCoordinateSystem",
    "atan",
    "tanMinX",
    "_pOriginX",
    "tanMaxX",
    "tanMinY",
    "_pOriginY",
    "tanMaxY",
    "../projections/CoordinateSystem",
    "awayjs-core/lib/projections/ProjectionBase",
    "_unprojectionInvalid",
    "point3d",
    "_unprojection",
    "_iUpdateScissorRect",
    "_iUpdateViewport",
    "awayjs-core/lib/projections",
    "FreeMatrixProjection_1",
    "ObliqueNearPlaneProjection_1",
    "OrthographicOffCenterProjection_1",
    "OrthographicProjection_1",
    "./projections/CoordinateSystem",
    "./projections/FreeMatrixProjection",
    "./projections/ObliqueNearPlaneProjection",
    "./projections/OrthographicOffCenterProjection",
    "./projections/OrthographicProjection",
    "./projections/PerspectiveProjection",
    "./projections/ProjectionBase",
    "awayjs-core/lib/ui/Keyboard",
    "Keyboard",
    "A",
    "ALTERNATE",
    "AUDIO",
    "B",
    "BACKQUOTE",
    "BACKSLASH",
    "BACKSPACE",
    "C",
    "CAPS_LOCK",
    "CHANNEL_DOWN",
    "CHANNEL_UP",
    "COMMA",
    "COMMAND",
    "CONTROL",
    "D",
    "DELETE",
    "DOWN",
    "DVR",
    "E",
    "END",
    "ENTER",
    "EQUAL",
    "ESCAPE",
    "EXIT",
    "F",
    "F1",
    "F10",
    "F11",
    "F12",
    "F13",
    "F14",
    "F15",
    "F2",
    "F3",
    "F4",
    "F5",
    "F6",
    "F7",
    "F8",
    "F9",
    "FAST_FORWARD",
    "G",
    "GUIDE",
    "H",
    "HELP",
    "HOME",
    "I",
    "INFO",
    "INPUT",
    "INSERT",
    "J",
    "K",
    "KEYNAME_BEGIN",
    "KEYNAME_BREAK",
    "KEYNAME_CLEARDISPLAY",
    "KEYNAME_CLEARLINE",
    "KEYNAME_DELETE",
    "KEYNAME_DELETECHAR",
    "KEYNAME_DELETELINE",
    "KEYNAME_DOWNARROW",
    "KEYNAME_END",
    "KEYNAME_EXECUTE",
    "KEYNAME_F1",
    "KEYNAME_F10",
    "KEYNAME_F11",
    "KEYNAME_F12",
    "KEYNAME_F13",
    "KEYNAME_F14",
    "KEYNAME_F15",
    "KEYNAME_F16",
    "KEYNAME_F17",
    "KEYNAME_F18",
    "KEYNAME_F19",
    "KEYNAME_F2",
    "KEYNAME_F20",
    "KEYNAME_F21",
    "KEYNAME_F22",
    "KEYNAME_F23",
    "KEYNAME_F24",
    "KEYNAME_F25",
    "KEYNAME_F26",
    "KEYNAME_F27",
    "KEYNAME_F28",
    "KEYNAME_F29",
    "KEYNAME_F3",
    "KEYNAME_F30",
    "KEYNAME_F31",
    "KEYNAME_F32",
    "KEYNAME_F33",
    "KEYNAME_F34",
    "KEYNAME_F35",
    "KEYNAME_F4",
    "KEYNAME_F5",
    "KEYNAME_F6",
    "KEYNAME_F7",
    "KEYNAME_F8",
    "KEYNAME_F9",
    "KEYNAME_FIND",
    "KEYNAME_HELP",
    "KEYNAME_HOME",
    "KEYNAME_INSERT",
    "KEYNAME_INSERTCHAR",
    "KEYNAME_INSERTLINE",
    "KEYNAME_LEFTARROW",
    "KEYNAME_MENU",
    "KEYNAME_MODESWITCH",
    "KEYNAME_NEXT",
    "KEYNAME_PAGEDOWN",
    "KEYNAME_PAGEUP",
    "KEYNAME_PAUSE",
    "KEYNAME_PREV",
    "KEYNAME_PRINT",
    "KEYNAME_PRINTSCREEN",
    "KEYNAME_REDO",
    "KEYNAME_RESET",
    "KEYNAME_RIGHTARROW",
    "KEYNAME_SCROLLLOCK",
    "KEYNAME_SELECT",
    "KEYNAME_STOP",
    "KEYNAME_SYSREQ",
    "KEYNAME_SYSTEM",
    "KEYNAME_UNDO",
    "KEYNAME_UPARROW",
    "KEYNAME_USER",
    "L",
    "LAST",
    "LEFT",
    "LEFTBRACKET",
    "LIVE",
    "M",
    "MASTER_SHELL",
    "MENU",
    "MINUS",
    "N",
    "NEXT",
    "NUMBER_0",
    "NUMBER_1",
    "NUMBER_2",
    "NUMBER_3",
    "NUMBER_4",
    "NUMBER_5",
    "NUMBER_6",
    "NUMBER_7",
    "NUMBER_8",
    "NUMBER_9",
    "NUMPAD",
    "NUMPAD_0",
    "NUMPAD_1",
    "NUMPAD_2",
    "NUMPAD_3",
    "NUMPAD_4",
    "NUMPAD_5",
    "NUMPAD_6",
    "NUMPAD_7",
    "NUMPAD_8",
    "NUMPAD_9",
    "NUMPAD_ADD",
    "NUMPAD_DECIMAL",
    "NUMPAD_DIVIDE",
    "NUMPAD_ENTER",
    "NUMPAD_MULTIPLY",
    "NUMPAD_SUBTRACT",
    "O",
    "P",
    "PAGE_DOWN",
    "PAGE_UP",
    "PAUSE",
    "PERIOD",
    "PLAY",
    "PREVIOUS",
    "Q",
    "QUOTE",
    "R",
    "RECORD",
    "REWIND",
    "RIGHT",
    "RIGHTBRACKET",
    "S",
    "SEARCH",
    "SEMICOLON",
    "SETUP",
    "SHIFT",
    "SKIP_BACKWARD",
    "SKIP_FORWARD",
    "SLASH",
    "SPACE",
    "STOP",
    "SUBTITLE",
    "T",
    "TAB",
    "U",
    "UP",
    "V",
    "VOD",
    "W",
    "X",
    "Y",
    "YELLOW",
    "Z",
    "awayjs-core/lib/ui",
    "Keyboard_1",
    "./ui/Keyboard",
    "awayjs-core/lib/utils/BitmapImageUtils",
    "bmpd",
    "awayjs-core/lib/utils/ByteArrayBase",
    "ByteArrayBase",
    "_mode",
    "writeByte",
    "writeUnsignedByte",
    "readUnsignedByte",
    "writeUnsignedShort",
    "writeUnsignedInt",
    "writeFloat",
    "toFloatBits",
    "readFloat",
    "fromFloatBits",
    "compareEqual",
    "other",
    "co0",
    "c0",
    "writeBase64String",
    "dumpToConsole",
    "oldpos",
    "nstep",
    "asHexString",
    "digits",
    "lut",
    "readBase64String",
    "internalGetBase64String",
    "getUnsignedByteFunc",
    "self",
    "b0",
    "b1",
    "b2",
    "enc1",
    "enc2",
    "enc3",
    "enc4",
    "base64Key",
    "Base64Key",
    "awayjs-core/lib/utils/ByteArrayBuffer",
    "ByteArrayBase_1",
    "ByteArrayBuffer",
    "bi",
    "sign",
    "exponent",
    "mantissa",
    "../utils/ByteArrayBase",
    "awayjs-core/lib/utils/ByteArray",
    "maxlength",
    "unalignedarraybytestemp",
    "ensureWriteableSpace",
    "ensureSpace",
    "aBuffer",
    "inInt8AView",
    "localInt8View",
    "newmaxlength",
    "newarraybuffer",
    "newview",
    "readBytes",
    "byteView",
    "localByteView",
    "view2",
    "view3",
    "DataView",
    "getUint8",
    "c2",
    "c3",
    "readInt",
    "int",
    "getInt32",
    "short",
    "getInt16",
    "readDouble",
    "double",
    "getFloat64",
    "pa",
    "Uint32Array",
    "awayjs-core/lib/utils/CSS",
    "CSS",
    "setElementSize",
    "style",
    "setElementWidth",
    "setElementHeight",
    "setElementX",
    "setElementY",
    "getElementVisibility",
    "visibility",
    "setElementVisibility",
    "visible",
    "setElementAlpha",
    "alpha",
    "HTMLCanvasElement",
    "globalAlpha",
    "setElementPosition",
    "absolute",
    "awayjs-core/lib/utils/ColorUtils",
    "float32Color",
    "ARGBtoFloat32",
    "componentToHex",
    "hex",
    "RGBToHexString",
    "ARGBToHexString",
    "awayjs-core/lib/utils/Debug",
    "Debug",
    "breakpoint",
    "throwPIROnKeyWordOnly",
    "enable",
    "keyword",
    "throwPIR",
    "clss",
    "fnc",
    "msg",
    "logPIR",
    "THROW_ERRORS",
    "LOG_PI_ERRORS",
    "ENABLE_LOG",
    "../errors/PartialImplementationError",
    "awayjs-core/lib/utils/Extensions",
    "Extensions",
    "SIMD",
    "awayjs-core/lib/utils/IArrayBufferViewClass",
    "awayjs-core/lib/utils/ImageUtils",
    "image2D",
    "isHTMLImageElementValid",
    "MAX_SIZE",
    "isPowerOfTwo",
    "getBestPowerOf2",
    "awayjs-core/lib/utils/MipmapGenerator",
    "MipmapGenerator",
    "_generateMipMaps",
    "output",
    "_getMipmapHolder",
    "_matrix",
    "bitmapImage",
    "downsampleImage",
    "mipMapHolder",
    "newW",
    "newH",
    "_freeMipMapHolder",
    "_mipMaps",
    "_mipMapUses",
    "holderWidth",
    "holderHeight",
    "destBitmap",
    "BoxFilter",
    "xkernel",
    "PolyphaseKernel",
    "ykernel",
    "tempBitmap",
    "iscale",
    "kernelLength",
    "kernelWidth",
    "kernelWindowSize",
    "sumR",
    "sumG",
    "sumB",
    "sumA",
    "windowSize",
    "colorR",
    "colorG",
    "colorB",
    "colorA",
    "valueAt",
    "srcLength",
    "dstLength",
    "samples",
    "sum",
    "isamples",
    "evaluate",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "RequestAnimationFrame",
    "callback",
    "callbackContext",
    "_active",
    "_argsArray",
    "_getTimer",
    "setCallback",
    "_rafUpdateFunction",
    "_tick",
    "_dt",
    "_callback",
    "_callbackContext",
    "_prevTime",
    "requestAnimationFrame",
    "awayjs-core/lib/utils/Timer",
    "delay",
    "repeatCount",
    "_repeatCount",
    "_currentCount",
    "_running",
    "_delay",
    "clearInterval",
    "_iid",
    "setInterval",
    "tick",
    "awayjs-core/lib/utils/XmlUtils",
    "node",
    "tag",
    "fragment",
    "createDocumentFragment",
    "num",
    "childNodes",
    "child",
    "nodeName",
    "appendChild",
    "filterListByParam",
    "paramName",
    "paramValue",
    "getNamedItem",
    "DOMParser",
    "parseFromString",
    "nodeToString",
    "XMLSerializer",
    "serializeToString",
    "attrName",
    "attrs",
    "attribute",
    "writeAttributeValue",
    "attrValue",
    "createAttribute",
    "setNamedItem",
    "hasAttribute",
    "awayjs-core/lib/utils/getTimer",
    "now",
    "awayjs-core/lib/utils",
    "ByteArrayBuffer_1",
    "CSS_1",
    "Debug_1",
    "Extensions_1",
    "MipmapGenerator_1",
    "RequestAnimationFrame_1",
    "./utils/BitmapImageUtils",
    "./utils/ByteArray",
    "./utils/ByteArrayBase",
    "./utils/ByteArrayBuffer",
    "./utils/CSS",
    "./utils/ColorUtils",
    "./utils/Debug",
    "./utils/Extensions",
    "./utils/ImageUtils",
    "./utils/MipmapGenerator",
    "./utils/RequestAnimationFrame",
    "./utils/Timer",
    "./utils/XmlUtils",
    "./utils/getTimer"
  ],
  "mappings": "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",
  "file": "awayjs-core.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\nvar attributes = require(\"./lib/attributes\");\nexports.attributes = attributes;\nvar audio = require(\"./lib/audio\");\nexports.audio = audio;\nvar errors = require(\"./lib/errors\");\nexports.errors = errors;\nvar events = require(\"./lib/events\");\nexports.events = events;\nvar geom = require(\"./lib/geom\");\nexports.geom = geom;\nvar image = require(\"./lib/image\");\nexports.image = image;\nvar library = require(\"./lib/library\");\nexports.library = library;\nvar managers = require(\"./lib/managers\");\nexports.managers = managers;\nvar net = require(\"./lib/net\");\nexports.net = net;\nvar parsers = require(\"./lib/parsers\");\nexports.parsers = parsers;\nvar projections = require(\"./lib/projections\");\nexports.projections = projections;\nvar ui = require(\"./lib/ui\");\nexports.ui = ui;\nvar utils = require(\"./lib/utils\");\nexports.utils = utils;\nlibrary.Loader.enableParser(parsers.Image2DParser);\nlibrary.Loader.enableParser(parsers.ImageCubeParser);\nlibrary.Loader.enableParser(parsers.TextureAtlasParser);\nlibrary.Loader.enableParser(parsers.WaveAudioParser);\n\n},{\"./lib/attributes\":\"awayjs-core/lib/attributes\",\"./lib/audio\":\"awayjs-core/lib/audio\",\"./lib/errors\":\"awayjs-core/lib/errors\",\"./lib/events\":\"awayjs-core/lib/events\",\"./lib/geom\":\"awayjs-core/lib/geom\",\"./lib/image\":\"awayjs-core/lib/image\",\"./lib/library\":\"awayjs-core/lib/library\",\"./lib/managers\":\"awayjs-core/lib/managers\",\"./lib/net\":\"awayjs-core/lib/net\",\"./lib/parsers\":\"awayjs-core/lib/parsers\",\"./lib/projections\":\"awayjs-core/lib/projections\",\"./lib/ui\":\"awayjs-core/lib/ui\",\"./lib/utils\":\"awayjs-core/lib/utils\"}],\"awayjs-core/lib/attributes/AttributesBuffer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"../library/AssetBase\");\nvar AttributesBuffer = (function (_super) {\n    __extends(AttributesBuffer, _super);\n    /**\n     *\n     */\n    function AttributesBuffer(stride, count) {\n        if (stride === void 0) { stride = 0; }\n        if (count === void 0) { count = 0; }\n        _super.call(this);\n        this._count = 0;\n        this._stride = 0;\n        this._newStride = 0;\n        this._viewVOs = new Array();\n        this._stride = this._newStride = stride;\n        this._count = count;\n        this._buffer = new ArrayBuffer(this._stride * this._count);\n        this._bufferView = new Uint8Array(this._buffer, 0, this._buffer.byteLength);\n    }\n    Object.defineProperty(AttributesBuffer.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return AttributesBuffer.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesBuffer.prototype, \"stride\", {\n        get: function () {\n            if (this._lengthDirty)\n                this._updateLength();\n            return this._stride;\n        },\n        set: function (value) {\n            if (this._newStride == value)\n                return;\n            this._newStride = value;\n            this.resize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesBuffer.prototype, \"count\", {\n        get: function () {\n            return this._count;\n        },\n        set: function (value) {\n            if (this._count == value)\n                return;\n            this._count = value;\n            this.resize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesBuffer.prototype, \"buffer\", {\n        get: function () {\n            if (this._lengthDirty)\n                this._updateLength();\n            this._contentDirty = false;\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesBuffer.prototype, \"bufferView\", {\n        get: function () {\n            if (this._lengthDirty)\n                this._updateLength();\n            this._contentDirty = false;\n            return this._bufferView;\n        },\n        set: function (value) {\n            this._bufferView = value;\n            this._buffer = this._bufferView.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesBuffer.prototype, \"length\", {\n        get: function () {\n            return this._count * this.stride;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    AttributesBuffer.prototype.invalidate = function () {\n        if (this._contentDirty)\n            return;\n        _super.prototype.invalidate.call(this);\n        this._contentDirty = true;\n    };\n    /**\n     *\n     * @private\n     */\n    AttributesBuffer.prototype.resize = function () {\n        if (this._lengthDirty)\n            return;\n        this.clear();\n        this._lengthDirty = true;\n        //dispose buffer if stride is 0\n        if (!this._newStride) {\n            this._buffer = null;\n            this._bufferView = null;\n        }\n    };\n    AttributesBuffer.prototype.clone = function () {\n        var attributesBuffer = new AttributesBuffer(this._stride, this._count);\n        attributesBuffer.bufferView = new Uint8Array(this.bufferView.buffer);\n        var len = this._viewVOs.length;\n        for (var i = 0; i < len; i++)\n            this._viewVOs[i].view._internalClone(attributesBuffer);\n        return attributesBuffer;\n    };\n    AttributesBuffer.prototype.getView = function (index) {\n        if (index < this._viewVOs.length)\n            return this._viewVOs[index].view;\n        return null;\n    };\n    AttributesBuffer.prototype._setAttributes = function (viewIndex, arrayBufferView, offset) {\n        if (offset === void 0) { offset = 0; }\n        var array = (arrayBufferView instanceof Uint8Array) ? arrayBufferView : new Uint8Array(arrayBufferView.buffer);\n        var viewVO = this._viewVOs[viewIndex];\n        var vLength = viewVO.length;\n        var vOffset = viewVO.offset;\n        var vCount = array.length / vLength;\n        //make sure there is enough space in the buffer\n        if (this.count < vCount + offset)\n            this.count = vCount + offset;\n        if (this._lengthDirty)\n            this._updateLength();\n        //fast path for separate buffers\n        if (this._viewVOs.length == 1) {\n            this._bufferView.set(array);\n        }\n        else {\n            for (var i = 0; i < vCount; i++)\n                this._bufferView.set(array.subarray(i * vLength, (i + 1) * vLength), (i + offset) * this._stride + vOffset);\n        }\n        this.invalidate();\n    };\n    AttributesBuffer.prototype._getLocalArrayBuffer = function (viewIndex) {\n        var viewVO = this._viewVOs[viewIndex];\n        var vLength = viewVO.length;\n        var vOffset = viewVO.offset;\n        if (this._lengthDirty)\n            this._updateLength();\n        //fast path for separate buffers\n        if (this._viewVOs.length == 1)\n            return this._buffer;\n        var localBuffer = new ArrayBuffer(this._count * vLength);\n        var localBufferView = new Uint8Array(localBuffer);\n        for (var i = 0; i < this._count; i++)\n            localBufferView.set(this._bufferView.subarray(i * this._stride + vOffset, i * this._stride + vOffset + vLength), i * vLength);\n        return localBuffer;\n    };\n    AttributesBuffer.prototype._addView = function (view) {\n        var viewVO = new ViewVO(view);\n        var len = this._viewVOs.length;\n        viewVO.offset = len ? this._viewVOs[len - 1].offset + this._viewVOs[len - 1].length : 0;\n        this._viewVOs.push(viewVO);\n        if (this._newStride < viewVO.offset + viewVO.length) {\n            this._newStride = viewVO.offset + viewVO.length;\n            this.resize();\n        }\n        view._index = len;\n    };\n    AttributesBuffer.prototype._removeView = function (view) {\n        var viewIndex = view._index;\n        var viewVO = this._viewVOs.splice(viewIndex, 1)[0];\n        var len = this._viewVOs.length;\n        viewVO.dispose();\n        for (var i = viewIndex; i < len; i++) {\n            viewVO = this._viewVOs[i];\n            viewVO.offset = i ? this._viewVOs[i - 1].offset + this._viewVOs[i - 1].length : 0;\n            viewVO.view._index = i;\n        }\n        this._newStride = viewVO.offset + viewVO.length;\n        this.resize();\n    };\n    AttributesBuffer.prototype._getOffset = function (viewIndex) {\n        return this._viewVOs[viewIndex].offset;\n    };\n    AttributesBuffer.prototype._updateLength = function () {\n        this._lengthDirty = false;\n        var i;\n        var j;\n        var len = this._viewVOs.length;\n        var newLength = this._newStride * this._count;\n        if (!this._buffer || this._buffer.byteLength != newLength) {\n            var newBuffer = new ArrayBuffer(newLength);\n            var newView = new Uint8Array(newBuffer, 0, newBuffer.byteLength);\n            var viewVO;\n            var vLength;\n            var vOffset;\n            var vOldOffset;\n            if (this._stride != this._newStride) {\n                for (i = 0; i < len; i++) {\n                    viewVO = this._viewVOs[i];\n                    vLength = viewVO.length;\n                    vOffset = viewVO.offset;\n                    vOldOffset = viewVO.oldOffset;\n                    for (j = 0; j < this._count; j++)\n                        if (vOldOffset != null)\n                            newView.set(new Uint8Array(this._buffer, j * this._stride + vOldOffset, vLength), j * this._newStride + vOffset);\n                    viewVO.oldOffset = viewVO.offset;\n                }\n                this._stride = this._newStride;\n            }\n            else {\n                newView.set(new Uint8Array(this._buffer, 0, Math.min(newLength, this._buffer.byteLength))); //TODO: bypass quantisation of bytearray on instantiation\n            }\n            this._buffer = newBuffer;\n            this._bufferView = newView;\n        }\n    };\n    AttributesBuffer.assetType = \"[assets AttributesBuffer]\";\n    return AttributesBuffer;\n}(AssetBase_1.AssetBase));\nexports.AttributesBuffer = AttributesBuffer;\nvar ViewVO = (function () {\n    function ViewVO(view) {\n        this.view = view;\n        this.length = view.size * view.dimensions;\n    }\n    ViewVO.prototype.dispose = function () {\n        this.view = null;\n    };\n    ViewVO.prototype.clone = function () {\n        return new ViewVO(this.view);\n    };\n    return ViewVO;\n}());\n\n},{\"../library/AssetBase\":\"awayjs-core/lib/library/AssetBase\"}],\"awayjs-core/lib/attributes/AttributesView\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesBuffer_1 = require(\"../attributes/AttributesBuffer\");\nvar AssetBase_1 = require(\"../library/AssetBase\");\nvar AttributesView = (function (_super) {\n    __extends(AttributesView, _super);\n    function AttributesView(arrayClass, dimensions, attributesBufferCount, unsigned) {\n        if (attributesBufferCount === void 0) { attributesBufferCount = 0; }\n        if (unsigned === void 0) { unsigned = false; }\n        _super.call(this);\n        this._arrayClass = arrayClass;\n        this._size = arrayClass.BYTES_PER_ELEMENT;\n        this._dimensions = dimensions;\n        this._attributesBuffer = (attributesBufferCount instanceof AttributesBuffer_1.AttributesBuffer) ? attributesBufferCount : new AttributesBuffer_1.AttributesBuffer(this._dimensions * this._size, attributesBufferCount);\n        this._attributesBuffer._addView(this);\n        this._unsigned = unsigned;\n    }\n    Object.defineProperty(AttributesView.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return AttributesView.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesView.prototype, \"buffer\", {\n        get: function () {\n            return this._attributesBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesView.prototype, \"size\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._size;\n        },\n        set: function (value) {\n            if (this._size == value)\n                return;\n            this._size = value;\n            this._attributesBuffer._removeView(this);\n            this._attributesBuffer._addView(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesView.prototype, \"dimensions\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._dimensions;\n        },\n        set: function (value) {\n            if (this._dimensions == value)\n                return;\n            this._dimensions = value;\n            //reset view\n            this._attributesBuffer._removeView(this);\n            this._attributesBuffer._addView(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesView.prototype, \"unsigned\", {\n        get: function () {\n            return this._unsigned;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesView.prototype, \"count\", {\n        get: function () {\n            return this._attributesBuffer.count;\n        },\n        set: function (value) {\n            this._attributesBuffer.count = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesView.prototype, \"offset\", {\n        get: function () {\n            return this._attributesBuffer._getOffset(this._index);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesView.prototype, \"length\", {\n        get: function () {\n            return this._attributesBuffer.count * this._dimensions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AttributesView.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        this._attributesBuffer._setAttributes(this._index, (values instanceof Array) ? new (this._arrayClass)(values) : values, offset);\n        this._localArrayBuffer = null;\n    };\n    AttributesView.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (!this._localArrayBuffer)\n            this._localArrayBuffer = this._attributesBuffer._getLocalArrayBuffer(this._index);\n        var len = this._dimensions * this._size;\n        return new (this._arrayClass)(this._localArrayBuffer, offset * len, count * this._dimensions);\n    };\n    AttributesView.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new AttributesView(this._arrayClass, this._dimensions, attributesBuffer, this._unsigned));\n    };\n    AttributesView.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        if (attributesBuffer)\n            this._internalClone(attributesBuffer);\n        if (!this._cloneCache)\n            this._attributesBuffer.clone();\n        var cloneCache = this._cloneCache;\n        this._cloneCache = null;\n        return cloneCache;\n    };\n    /**\n     * @inheritDoc\n     */\n    AttributesView.prototype.dispose = function () {\n        if (!this._attributesBuffer)\n            return;\n        this._attributesBuffer._removeView(this);\n        this._attributesBuffer = null;\n        this._localArrayBuffer = null;\n    };\n    AttributesView.assetType = \"[attributes AttributesView]\";\n    return AttributesView;\n}(AssetBase_1.AssetBase));\nexports.AttributesView = AttributesView;\n\n},{\"../attributes/AttributesBuffer\":\"awayjs-core/lib/attributes/AttributesBuffer\",\"../library/AssetBase\":\"awayjs-core/lib/library/AssetBase\"}],\"awayjs-core/lib/attributes/Byte1Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\nvar Byte1Attributes = (function (_super) {\n    __extends(Byte1Attributes, _super);\n    function Byte1Attributes(attributesBufferLength, unsigned) {\n        if (unsigned === void 0) { unsigned = true; }\n        _super.call(this, unsigned ? Uint8Array : Int8Array, 1, attributesBufferLength, unsigned);\n    }\n    Object.defineProperty(Byte1Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Byte1Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Byte1Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Byte1Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Byte1Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Byte1Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n    };\n    Byte1Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Byte1Attributes.assetType = \"[attributes Byte1Attributes]\";\n    return Byte1Attributes;\n}(AttributesView_1.AttributesView));\nexports.Byte1Attributes = Byte1Attributes;\n\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Byte2Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\nvar Byte2Attributes = (function (_super) {\n    __extends(Byte2Attributes, _super);\n    function Byte2Attributes(attributesBufferLength, unsigned) {\n        if (unsigned === void 0) { unsigned = true; }\n        _super.call(this, unsigned ? Uint8Array : Int8Array, 2, attributesBufferLength, unsigned);\n    }\n    Object.defineProperty(Byte2Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Byte2Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Byte2Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Byte2Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Byte2Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Byte2Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n    };\n    Byte2Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Byte2Attributes.assetType = \"[attributes Byte2Attributes]\";\n    return Byte2Attributes;\n}(AttributesView_1.AttributesView));\nexports.Byte2Attributes = Byte2Attributes;\n\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Byte3Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\nvar Byte3Attributes = (function (_super) {\n    __extends(Byte3Attributes, _super);\n    function Byte3Attributes(attributesBufferLength, unsigned) {\n        if (unsigned === void 0) { unsigned = true; }\n        _super.call(this, unsigned ? Uint8Array : Int8Array, 3, attributesBufferLength, unsigned);\n    }\n    Object.defineProperty(Byte3Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Byte3Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Byte3Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Byte3Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Byte3Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Byte3Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n    };\n    Byte3Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Byte3Attributes.assetType = \"[attributes Byte3Attributes]\";\n    return Byte3Attributes;\n}(AttributesView_1.AttributesView));\nexports.Byte3Attributes = Byte3Attributes;\n\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Byte4Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\nvar Byte4Attributes = (function (_super) {\n    __extends(Byte4Attributes, _super);\n    function Byte4Attributes(attributesBufferLength, unsigned) {\n        if (unsigned === void 0) { unsigned = true; }\n        _super.call(this, unsigned ? Uint8Array : Int8Array, 4, attributesBufferLength, unsigned);\n    }\n    Object.defineProperty(Byte4Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Byte4Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Byte4Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Byte4Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Byte4Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Byte4Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n    };\n    Byte4Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Byte4Attributes.assetType = \"[attributes Byte4Attributes]\";\n    return Byte4Attributes;\n}(AttributesView_1.AttributesView));\nexports.Byte4Attributes = Byte4Attributes;\n\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Float1Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\nvar Float1Attributes = (function (_super) {\n    __extends(Float1Attributes, _super);\n    function Float1Attributes(attributesBufferLength) {\n        _super.call(this, Float32Array, 1, attributesBufferLength);\n    }\n    Object.defineProperty(Float1Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Float1Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Float1Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Float1Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Float1Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Float1Attributes(attributesBuffer));\n    };\n    Float1Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Float1Attributes.assetType = \"[attributes Float1Attributes]\";\n    return Float1Attributes;\n}(AttributesView_1.AttributesView));\nexports.Float1Attributes = Float1Attributes;\n\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Float2Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\nvar Float2Attributes = (function (_super) {\n    __extends(Float2Attributes, _super);\n    function Float2Attributes(attributesBufferLength) {\n        _super.call(this, Float32Array, 2, attributesBufferLength);\n    }\n    Object.defineProperty(Float2Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Float2Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Float2Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Float2Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Float2Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Float2Attributes(attributesBuffer));\n    };\n    Float2Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Float2Attributes.assetType = \"[attributes Float2Attributes]\";\n    return Float2Attributes;\n}(AttributesView_1.AttributesView));\nexports.Float2Attributes = Float2Attributes;\n\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Float3Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\nvar Float3Attributes = (function (_super) {\n    __extends(Float3Attributes, _super);\n    function Float3Attributes(attributesBufferLength) {\n        _super.call(this, Float32Array, 3, attributesBufferLength);\n    }\n    Object.defineProperty(Float3Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Float3Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Float3Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Float3Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Float3Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Float3Attributes(attributesBuffer));\n    };\n    Float3Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Float3Attributes.assetType = \"[attributes Float3Attributes]\";\n    return Float3Attributes;\n}(AttributesView_1.AttributesView));\nexports.Float3Attributes = Float3Attributes;\n\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Float4Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\nvar Float4Attributes = (function (_super) {\n    __extends(Float4Attributes, _super);\n    function Float4Attributes(attributesBufferLength) {\n        _super.call(this, Float32Array, 4, attributesBufferLength);\n    }\n    Object.defineProperty(Float4Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Float4Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Float4Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Float4Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Float4Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Float4Attributes(attributesBuffer));\n    };\n    Float4Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Float4Attributes.assetType = \"[attributes Float4Attributes]\";\n    return Float4Attributes;\n}(AttributesView_1.AttributesView));\nexports.Float4Attributes = Float4Attributes;\n\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Short2Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\nvar Short2Attributes = (function (_super) {\n    __extends(Short2Attributes, _super);\n    function Short2Attributes(attributesBufferLength, unsigned) {\n        if (unsigned === void 0) { unsigned = true; }\n        _super.call(this, unsigned ? Uint16Array : Int16Array, 2, attributesBufferLength, unsigned);\n    }\n    Object.defineProperty(Short2Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Short2Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Short2Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Short2Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Short2Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Short2Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n    };\n    Short2Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Short2Attributes.assetType = \"[attributes Short2Attributes]\";\n    return Short2Attributes;\n}(AttributesView_1.AttributesView));\nexports.Short2Attributes = Short2Attributes;\n\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Short3Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"../attributes/AttributesView\");\nvar Short3Attributes = (function (_super) {\n    __extends(Short3Attributes, _super);\n    function Short3Attributes(attributesBufferLength, unsigned) {\n        if (unsigned === void 0) { unsigned = true; }\n        _super.call(this, unsigned ? Uint16Array : Int16Array, 3, attributesBufferLength, unsigned);\n    }\n    Object.defineProperty(Short3Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Short3Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Short3Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Short3Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Short3Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Short3Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n    };\n    Short3Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Short3Attributes.assetType = \"[attributes Short3Attributes]\";\n    return Short3Attributes;\n}(AttributesView_1.AttributesView));\nexports.Short3Attributes = Short3Attributes;\n\n},{\"../attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes\":[function(require,module,exports){\n\"use strict\";\nvar AttributesView_1 = require(\"./attributes/AttributesView\");\nexports.AttributesView = AttributesView_1.AttributesView;\nvar AttributesBuffer_1 = require(\"./attributes/AttributesBuffer\");\nexports.AttributesBuffer = AttributesBuffer_1.AttributesBuffer;\nvar Byte1Attributes_1 = require(\"./attributes/Byte1Attributes\");\nexports.Byte1Attributes = Byte1Attributes_1.Byte1Attributes;\nvar Byte2Attributes_1 = require(\"./attributes/Byte2Attributes\");\nexports.Byte2Attributes = Byte2Attributes_1.Byte2Attributes;\nvar Byte3Attributes_1 = require(\"./attributes/Byte3Attributes\");\nexports.Byte3Attributes = Byte3Attributes_1.Byte3Attributes;\nvar Byte4Attributes_1 = require(\"./attributes/Byte4Attributes\");\nexports.Byte4Attributes = Byte4Attributes_1.Byte4Attributes;\nvar Float1Attributes_1 = require(\"./attributes/Float1Attributes\");\nexports.Float1Attributes = Float1Attributes_1.Float1Attributes;\nvar Float2Attributes_1 = require(\"./attributes/Float2Attributes\");\nexports.Float2Attributes = Float2Attributes_1.Float2Attributes;\nvar Float3Attributes_1 = require(\"./attributes/Float3Attributes\");\nexports.Float3Attributes = Float3Attributes_1.Float3Attributes;\nvar Float4Attributes_1 = require(\"./attributes/Float4Attributes\");\nexports.Float4Attributes = Float4Attributes_1.Float4Attributes;\nvar Short2Attributes_1 = require(\"./attributes/Short2Attributes\");\nexports.Short2Attributes = Short2Attributes_1.Short2Attributes;\nvar Short3Attributes_1 = require(\"./attributes/Short3Attributes\");\nexports.Short3Attributes = Short3Attributes_1.Short3Attributes;\n\n},{\"./attributes/AttributesBuffer\":\"awayjs-core/lib/attributes/AttributesBuffer\",\"./attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\",\"./attributes/Byte1Attributes\":\"awayjs-core/lib/attributes/Byte1Attributes\",\"./attributes/Byte2Attributes\":\"awayjs-core/lib/attributes/Byte2Attributes\",\"./attributes/Byte3Attributes\":\"awayjs-core/lib/attributes/Byte3Attributes\",\"./attributes/Byte4Attributes\":\"awayjs-core/lib/attributes/Byte4Attributes\",\"./attributes/Float1Attributes\":\"awayjs-core/lib/attributes/Float1Attributes\",\"./attributes/Float2Attributes\":\"awayjs-core/lib/attributes/Float2Attributes\",\"./attributes/Float3Attributes\":\"awayjs-core/lib/attributes/Float3Attributes\",\"./attributes/Float4Attributes\":\"awayjs-core/lib/attributes/Float4Attributes\",\"./attributes/Short2Attributes\":\"awayjs-core/lib/attributes/Short2Attributes\",\"./attributes/Short3Attributes\":\"awayjs-core/lib/attributes/Short3Attributes\"}],\"awayjs-core/lib/audio/WaveAudio\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AudioManager_1 = require(\"../managers/AudioManager\");\nvar AssetBase_1 = require(\"../library/AssetBase\");\n// TODO: Audio should probably be an interface containing play/stop/seek functionality\nvar WaveAudio = (function (_super) {\n    __extends(WaveAudio, _super);\n    /**\n     *\n     */\n    function WaveAudio(buffer) {\n        _super.call(this);\n        this._volume = 1;\n        this._buffer = buffer;\n    }\n    Object.defineProperty(WaveAudio.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return WaveAudio.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WaveAudio.prototype, \"volume\", {\n        get: function () {\n            return this._volume;\n        },\n        set: function (value) {\n            if (this._volume == value)\n                return;\n            this._volume = value;\n            if (this._audioChannel)\n                this._audioChannel.volume = this._volume;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WaveAudio.prototype, \"currentTime\", {\n        get: function () {\n            if (this._audioChannel)\n                return this._audioChannel.currentTime;\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WaveAudio.prototype, \"duration\", {\n        get: function () {\n            if (this._audioChannel)\n                return this._audioChannel.duration;\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WaveAudio.prototype.dispose = function () {\n        this.stop();\n    };\n    WaveAudio.prototype.play = function (offset, loop) {\n        if (loop === void 0) { loop = false; }\n        this._audioChannel = AudioManager_1.AudioManager.getChannel(this._buffer.byteLength);\n        if (this._audioChannel) {\n            this._audioChannel.volume = this._volume;\n            this._audioChannel.play(this._buffer, offset, loop, this.id);\n        }\n    };\n    WaveAudio.prototype.stop = function () {\n        if (this._audioChannel)\n            this._audioChannel.stop();\n        delete this._audioChannel;\n        this._audioChannel = null;\n    };\n    WaveAudio.prototype.clone = function () {\n        var newInstance = new WaveAudio(this._buffer);\n        newInstance.name = this.name;\n        return newInstance;\n    };\n    WaveAudio.assetType = \"[asset WaveAudio]\";\n    return WaveAudio;\n}(AssetBase_1.AssetBase));\nexports.WaveAudio = WaveAudio;\n\n},{\"../library/AssetBase\":\"awayjs-core/lib/library/AssetBase\",\"../managers/AudioManager\":\"awayjs-core/lib/managers/AudioManager\"}],\"awayjs-core/lib/audio\":[function(require,module,exports){\n\"use strict\";\nvar WaveAudio_1 = require(\"./audio/WaveAudio\");\nexports.WaveAudio = WaveAudio_1.WaveAudio;\n\n},{\"./audio/WaveAudio\":\"awayjs-core/lib/audio/WaveAudio\"}],\"awayjs-core/lib/errors/AbstractMethodError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nvar AbstractMethodError = (function (_super) {\n    __extends(AbstractMethodError, _super);\n    /**\n     * Create a new AbstractMethodError.\n     * @param message An optional message to override the default error message.\n     * @param id The id of the error.\n     */\n    function AbstractMethodError(message, id) {\n        if (message === void 0) { message = null; }\n        if (id === void 0) { id = 0; }\n        _super.call(this, message || \"An abstract method was called! Either an instance of an abstract export class was created, or an abstract method was not overridden by the subclass.\", id);\n    }\n    return AbstractMethodError;\n}(ErrorBase_1.ErrorBase));\nexports.AbstractMethodError = AbstractMethodError;\n\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors/ArgumentError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nvar ArgumentError = (function (_super) {\n    __extends(ArgumentError, _super);\n    /**\n     * Create a new ArgumentError.\n     *\n     * @param message An optional message to override the default error message.\n     * @param id The id of the error.\n     */\n    function ArgumentError(message, id) {\n        if (message === void 0) { message = null; }\n        if (id === void 0) { id = 0; }\n        _super.call(this, message || \"ArgumentError\", id);\n    }\n    return ArgumentError;\n}(ErrorBase_1.ErrorBase));\nexports.ArgumentError = ArgumentError;\n\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors/DocumentError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\nvar DocumentError = (function (_super) {\n    __extends(DocumentError, _super);\n    function DocumentError(message, id) {\n        if (message === void 0) { message = \"DocumentError\"; }\n        if (id === void 0) { id = 0; }\n        _super.call(this, message, id);\n    }\n    DocumentError.DOCUMENT_DOES_NOT_EXIST = \"documentDoesNotExist\";\n    return DocumentError;\n}(ErrorBase_1.ErrorBase));\nexports.DocumentError = DocumentError;\n\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors/ErrorBase\":[function(require,module,exports){\n\"use strict\";\nvar ErrorBase = (function () {\n    function ErrorBase(message, id, _name) {\n        if (message === void 0) { message = ''; }\n        if (id === void 0) { id = 0; }\n        if (_name === void 0) { _name = ''; }\n        this._errorID = 0; //Contains the reference number associated with the specific error message.\n        this._messsage = ''; //Contains the message associated with the Error object.\n        this._name = ''; // Contains the name of the Error object.\n        this._messsage = message;\n        this._name = name;\n        this._errorID = id;\n    }\n    Object.defineProperty(ErrorBase.prototype, \"message\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return this._messsage;\n        },\n        /**\n         *\n         * @param value\n         */\n        set: function (value) {\n            this._messsage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ErrorBase.prototype, \"name\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return this._name;\n        },\n        /**\n         *\n         * @param value\n         */\n        set: function (value) {\n            this._name = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ErrorBase.prototype, \"errorID\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._errorID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ErrorBase;\n}());\nexports.ErrorBase = ErrorBase;\n\n},{}],\"awayjs-core/lib/errors/PartialImplementationError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nvar PartialImplementationError = (function (_super) {\n    __extends(PartialImplementationError, _super);\n    /**\n     * Create a new AbstractMethodError.\n     * @param message An optional message to override the default error message.\n     * @param id The id of the error.\n     */\n    function PartialImplementationError(dependency, id) {\n        if (dependency === void 0) { dependency = ''; }\n        if (id === void 0) { id = 0; }\n        _super.call(this, \"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\n    }\n    return PartialImplementationError;\n}(ErrorBase_1.ErrorBase));\nexports.PartialImplementationError = PartialImplementationError;\n\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors/RangeError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\n/**\n * RangeError is thrown when an index is accessed out of range of the number of\n * available indices on an Array.\n */\nvar RangeError = (function (_super) {\n    __extends(RangeError, _super);\n    /**\n     * Create a new RangeError.\n     *\n     * @param message An optional message to override the default error message.\n     * @param id The id of the error.\n     */\n    function RangeError(message, id) {\n        if (message === void 0) { message = null; }\n        if (id === void 0) { id = 0; }\n        _super.call(this, message || \"RangeError\", id);\n    }\n    return RangeError;\n}(ErrorBase_1.ErrorBase));\nexports.RangeError = RangeError;\n\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors\":[function(require,module,exports){\n\"use strict\";\nvar AbstractMethodError_1 = require(\"./errors/AbstractMethodError\");\nexports.AbstractMethodError = AbstractMethodError_1.AbstractMethodError;\nvar ArgumentError_1 = require(\"./errors/ArgumentError\");\nexports.ArgumentError = ArgumentError_1.ArgumentError;\nvar DocumentError_1 = require(\"./errors/DocumentError\");\nexports.DocumentError = DocumentError_1.DocumentError;\nvar ErrorBase_1 = require(\"./errors/ErrorBase\");\nexports.ErrorBase = ErrorBase_1.ErrorBase;\nvar PartialImplementationError_1 = require(\"./errors/PartialImplementationError\");\nexports.PartialImplementationError = PartialImplementationError_1.PartialImplementationError;\nvar RangeError_1 = require(\"./errors/RangeError\");\nexports.RangeError = RangeError_1.RangeError;\n\n},{\"./errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"./errors/ArgumentError\":\"awayjs-core/lib/errors/ArgumentError\",\"./errors/DocumentError\":\"awayjs-core/lib/errors/DocumentError\",\"./errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\",\"./errors/PartialImplementationError\":\"awayjs-core/lib/errors/PartialImplementationError\",\"./errors/RangeError\":\"awayjs-core/lib/errors/RangeError\"}],\"awayjs-core/lib/events/AssetEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"../events/EventBase\");\n/**\n * @export class away.events.AssetEvent\n */\nvar AssetEvent = (function (_super) {\n    __extends(AssetEvent, _super);\n    /**\n     *\n     */\n    function AssetEvent(type, asset, prevName) {\n        if (prevName === void 0) { prevName = null; }\n        _super.call(this, type);\n        this._asset = asset;\n        this._prevName = prevName || this._asset.name;\n    }\n    Object.defineProperty(AssetEvent.prototype, \"asset\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._asset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetEvent.prototype, \"prevName\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._prevName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    AssetEvent.prototype.clone = function () {\n        return new AssetEvent(this.type, this._asset, this._prevName);\n    };\n    /**\n     * Dispatched when the content of an asset is invalidated\n     */\n    AssetEvent.INVALIDATE = \"invalidate\";\n    /**\n     * Dispatched when an asset is diposed\n     */\n    AssetEvent.DISPOSE = \"dispose\";\n    /**\n     * Dispatched when an asset is cleared\n     */\n    AssetEvent.CLEAR = \"clear\";\n    /**\n     *\n     */\n    AssetEvent.RENAME = 'rename';\n    /**\n     *\n     */\n    AssetEvent.ENTER_FRAME = 'enterFrame';\n    /**\n     *\n     */\n    AssetEvent.EXIT_FRAME = 'exitFrame';\n    /**\n     *\n     */\n    AssetEvent.ASSET_CONFLICT_RESOLVED = 'assetConflictResolved';\n    /**\n     * Dispatched when the loading of an asset and all of its dependencies is complete.\n     */\n    AssetEvent.ASSET_COMPLETE = \"assetComplete\";\n    /**\n     *\n     */\n    AssetEvent.TEXTURE_SIZE_ERROR = 'textureSizeError';\n    return AssetEvent;\n}(EventBase_1.EventBase));\nexports.AssetEvent = AssetEvent;\n\n},{\"../events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/EventBase\":[function(require,module,exports){\n\"use strict\";\nvar EventBase = (function () {\n    function EventBase(type) {\n        /**\n         * Type of event\n         * @property type\n         * @type String\n         */\n        this.type = undefined;\n        /**\n         * Reference to target object\n         * @property target\n         * @type Object\n         */\n        this.target = undefined;\n        this.type = type;\n    }\n    /**\n     * Clones the current event.\n     * @return An exact duplicate of the current event.\n     */\n    EventBase.prototype.clone = function () {\n        return new EventBase(this.type);\n    };\n    return EventBase;\n}());\nexports.EventBase = EventBase;\n\n},{}],\"awayjs-core/lib/events/EventDispatcher\":[function(require,module,exports){\n\"use strict\";\n/**\n * Base export class for dispatching events\n*\n* @export class away.events.EventDispatcher\n*\n*/\nvar EventDispatcher = (function () {\n    function EventDispatcher(target) {\n        if (target === void 0) { target = null; }\n        this.listenerObjects = new Array();\n        this.target = target || this;\n    }\n    /**\n     * Add an event listener\n     * @method addEventListener\n     * @param {String} Name of event to add a listener for\n     * @param {Function} Callback function\n     */\n    EventDispatcher.prototype.addEventListener = function (type, listener) {\n        var l = this.listenerObjects[type];\n        if (l === undefined)\n            l = this.listenerObjects[type] = new ListenerObject();\n        l.addEventListener(listener);\n    };\n    /**\n     * Remove an event listener\n     * @method removeEventListener\n     * @param {String} Name of event to remove a listener for\n     * @param {Function} Callback function\n     */\n    EventDispatcher.prototype.removeEventListener = function (type, listener) {\n        var l = this.listenerObjects[type];\n        if (l) {\n            l.removeEventListener(listener);\n            if (l.numListeners == 0)\n                delete this.listenerObjects[type];\n        }\n    };\n    /**\n     * Dispatch an event\n     * @method dispatchEvent\n     * @param {Event} Event to dispatch\n     */\n    EventDispatcher.prototype.dispatchEvent = function (event) {\n        var l = this.listenerObjects[event.type];\n        if (l) {\n            event.target = this.target;\n            l.dispatchEvent(event);\n        }\n    };\n    /**\n     * check if an object has an event listener assigned to it\n     * @method hasListener\n     * @param {String} Name of event to remove a listener for\n     * @param {Function} Callback function\n     */\n    EventDispatcher.prototype.hasEventListener = function (type, listener) {\n        if (this.listenerObjects[type] === undefined)\n            return false;\n        if (listener != null)\n            return this.listenerObjects[type].getEventListenerIndex(listener) !== -1;\n        return this.listenerObjects[type].numListeners > 0;\n    };\n    return EventDispatcher;\n}());\nexports.EventDispatcher = EventDispatcher;\nvar ListenerObject = (function () {\n    function ListenerObject() {\n        this.index = 0;\n        this.listeners = new Array();\n        this.numListeners = 0;\n    }\n    ListenerObject.prototype.addEventListener = function (listener) {\n        //check if listener already added\n        if (this.getEventListenerIndex(listener) !== -1)\n            return;\n        this.listeners.push(listener);\n        this.numListeners++;\n    };\n    ListenerObject.prototype.removeEventListener = function (listener) {\n        //check if listener exists\n        var index = this.getEventListenerIndex(listener);\n        if (index === -1)\n            return;\n        this.listeners.splice(index, 1);\n        if (index <= this.index)\n            this.index--;\n        this.numListeners--;\n    };\n    ListenerObject.prototype.dispatchEvent = function (event) {\n        var len = this.numListeners;\n        for (this.index = 0; this.index < len && this.index < this.numListeners; this.index++)\n            this.listeners[this.index](event);\n    };\n    /**\n     * get Event Listener Index in array. Returns -1 if no listener is added\n     * @method getEventListenerIndex\n     * @param {String} Name of event to remove a listener for\n     * @param {Function} Callback function\n     */\n    ListenerObject.prototype.getEventListenerIndex = function (listener) {\n        for (var index = 0; index < this.numListeners; index++)\n            if (listener == this.listeners[index])\n                return index;\n        return -1;\n    };\n    return ListenerObject;\n}());\nexports.ListenerObject = ListenerObject;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = EventDispatcher;\n\n},{}],\"awayjs-core/lib/events/IEventDispatcher\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/events/LoaderEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"../events/EventBase\");\nvar LoaderEvent = (function (_super) {\n    __extends(LoaderEvent, _super);\n    /**\n     * Create a new LoaderEvent object.\n     *\n     * @param type The event type.\n     * @param url The url of the loaded resource.\n     * @param assets The assets of the loaded resource.\n     */\n    function LoaderEvent(type, url, content, assets) {\n        if (url === void 0) { url = null; }\n        if (content === void 0) { content = null; }\n        if (assets === void 0) { assets = null; }\n        _super.call(this, type);\n        this._url = url;\n        this._content = content;\n        this._assets = assets;\n    }\n    Object.defineProperty(LoaderEvent.prototype, \"content\", {\n        /**\n         * The content returned if the resource has been loaded inside a <code>Loader</code> object.\n         */\n        get: function () {\n            return this._content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderEvent.prototype, \"url\", {\n        /**\n         * The url of the loaded resource.\n         */\n        get: function () {\n            return this._url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderEvent.prototype, \"assets\", {\n        /**\n         * The error string on loadError.\n         */\n        get: function () {\n            return this._assets;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the current event.\n     * @return An exact duplicate of the current event.\n     */\n    LoaderEvent.prototype.clone = function () {\n        return new LoaderEvent(this.type, this._url, this._content, this._assets);\n    };\n    /**\n     * Dispatched when the loading of a session and all of its dependencies is complete.\n     */\n    LoaderEvent.LOAD_COMPLETE = \"loadComplete\";\n    return LoaderEvent;\n}(EventBase_1.EventBase));\nexports.LoaderEvent = LoaderEvent;\n\n},{\"../events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/ParserEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"../events/EventBase\");\nvar ParserEvent = (function (_super) {\n    __extends(ParserEvent, _super);\n    function ParserEvent(type, message) {\n        if (message === void 0) { message = ''; }\n        _super.call(this, type);\n        this._message = message;\n    }\n    Object.defineProperty(ParserEvent.prototype, \"message\", {\n        /**\n         * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\n         */\n        get: function () {\n            return this._message;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParserEvent.prototype.clone = function () {\n        return new ParserEvent(this.type, this._message);\n    };\n    /**\n     * Dispatched when parsing of an asset completed.\n     */\n    ParserEvent.PARSE_COMPLETE = 'parseComplete';\n    /**\n     * Dispatched when an error occurs while parsing the data (e.g. because it's\n     * incorrectly formatted.)\n     */\n    ParserEvent.PARSE_ERROR = 'parseError';\n    /**\n     * Dispatched when a parser is ready to have dependencies retrieved and resolved.\n     * This is an internal event that should rarely (if ever) be listened for by\n     * external classes.\n     */\n    ParserEvent.READY_FOR_DEPENDENCIES = 'readyForDependencies';\n    return ParserEvent;\n}(EventBase_1.EventBase));\nexports.ParserEvent = ParserEvent;\n\n},{\"../events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/ProjectionEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"../events/EventBase\");\nvar ProjectionEvent = (function (_super) {\n    __extends(ProjectionEvent, _super);\n    function ProjectionEvent(type, projection) {\n        _super.call(this, type);\n        this._projection = projection;\n    }\n    Object.defineProperty(ProjectionEvent.prototype, \"projection\", {\n        get: function () {\n            return this._projection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProjectionEvent.MATRIX_CHANGED = \"matrixChanged\";\n    return ProjectionEvent;\n}(EventBase_1.EventBase));\nexports.ProjectionEvent = ProjectionEvent;\n\n},{\"../events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/TimerEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"../events/EventBase\");\nvar TimerEvent = (function (_super) {\n    __extends(TimerEvent, _super);\n    function TimerEvent(type) {\n        _super.call(this, type);\n    }\n    /**\n     *\n     */\n    TimerEvent.TIMER = \"timer\";\n    /**\n     *\n     */\n    TimerEvent.TIMER_COMPLETE = \"timerComplete\";\n    return TimerEvent;\n}(EventBase_1.EventBase));\nexports.TimerEvent = TimerEvent;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TimerEvent;\n\n},{\"../events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/URLLoaderEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"../events/EventBase\");\nvar URLLoaderEvent = (function (_super) {\n    __extends(URLLoaderEvent, _super);\n    function URLLoaderEvent(type, urlLoader) {\n        _super.call(this, type);\n        this._urlLoader = urlLoader;\n    }\n    Object.defineProperty(URLLoaderEvent.prototype, \"urlLoader\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._urlLoader;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    URLLoaderEvent.prototype.clone = function () {\n        return new URLLoaderEvent(this.type, this._urlLoader);\n    };\n    URLLoaderEvent.HTTP_STATUS = \"httpStatus\";\n    URLLoaderEvent.LOAD_ERROR = \"loadError\";\n    URLLoaderEvent.LOAD_PROGRESS = \"loadProgress\";\n    URLLoaderEvent.LOAD_START = \"loadStart\";\n    URLLoaderEvent.LOAD_COMPLETE = \"loadComplete\";\n    return URLLoaderEvent;\n}(EventBase_1.EventBase));\nexports.URLLoaderEvent = URLLoaderEvent;\n\n},{\"../events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events\":[function(require,module,exports){\n\"use strict\";\nvar AssetEvent_1 = require(\"./events/AssetEvent\");\nexports.AssetEvent = AssetEvent_1.AssetEvent;\nvar EventBase_1 = require(\"./events/EventBase\");\nexports.EventBase = EventBase_1.EventBase;\nvar EventDispatcher_1 = require(\"./events/EventDispatcher\");\nexports.EventDispatcher = EventDispatcher_1.EventDispatcher;\nvar LoaderEvent_1 = require(\"./events/LoaderEvent\");\nexports.LoaderEvent = LoaderEvent_1.LoaderEvent;\nvar ParserEvent_1 = require(\"./events/ParserEvent\");\nexports.ParserEvent = ParserEvent_1.ParserEvent;\nvar ProjectionEvent_1 = require(\"./events/ProjectionEvent\");\nexports.ProjectionEvent = ProjectionEvent_1.ProjectionEvent;\nvar TimerEvent_1 = require(\"./events/TimerEvent\");\nexports.TimerEvent = TimerEvent_1.TimerEvent;\nvar URLLoaderEvent_1 = require(\"./events/URLLoaderEvent\");\nexports.URLLoaderEvent = URLLoaderEvent_1.URLLoaderEvent;\n\n},{\"./events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"./events/EventBase\":\"awayjs-core/lib/events/EventBase\",\"./events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"./events/LoaderEvent\":\"awayjs-core/lib/events/LoaderEvent\",\"./events/ParserEvent\":\"awayjs-core/lib/events/ParserEvent\",\"./events/ProjectionEvent\":\"awayjs-core/lib/events/ProjectionEvent\",\"./events/TimerEvent\":\"awayjs-core/lib/events/TimerEvent\",\"./events/URLLoaderEvent\":\"awayjs-core/lib/events/URLLoaderEvent\"}],\"awayjs-core/lib/geom/Box\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"../geom/Vector3D\");\n/**\n * A Box object is an area defined by its position, as indicated by its\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\n * height and depth.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n * <code>height</code> <code>depth</code> properties of the Box export class are\n * independent of each other; changing the value of one property has no effect\n * on the others. However, the <code>right</code>, <code>bottom</code> and\n * <code>back</code> properties are integrally related to those six\n * properties. For example, if you change the value of the <code>right</code>\n * property, the value of the <code>width</code> property changes; if you\n * change the <code>bottom</code> property, the value of the\n * <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Box objects:</p>\n *\n * <ul>\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\n * </ul>\n *\n * <p>You can use the <code>new Box()</code> constructor to create a\n * Box object.</p>\n *\n * <p><b>Note:</b> The Box export class does not define a cubic Shape\n * display object.\n */\nvar Box = (function () {\n    /**\n     * Creates a new Box object with the top-left-front corner specified by the\n     * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\n     * specified <code>width</code>, <code>height</code> and <code>depth</code>\n     * parameters. If you call this public without parameters, a box with\n     * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n     * <code>height</code> and <code>depth</code> properties set to 0 is created.\n     *\n     * @param x      The <i>x</i> coordinate of the top-left-front corner of the\n     *               box.\n     * @param y      The <i>y</i> coordinate of the top-left-front corner of the\n     *               box.\n     * @param z      The <i>z</i> coordinate of the top-left-front corner of the\n     *               box.\n     * @param width  The width of the box, in pixels.\n     * @param height The height of the box, in pixels.\n     * @param depth The depth of the box, in pixels.\n     */\n    function Box(x, y, z, width, height, depth) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (width === void 0) { width = 0; }\n        if (height === void 0) { height = 0; }\n        if (depth === void 0) { depth = 0; }\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n    }\n    Object.defineProperty(Box.prototype, \"back\", {\n        /**\n         * The sum of the <code>z</code> and <code>height</code> properties.\n         */\n        get: function () {\n            return this.z + this.depth;\n        },\n        set: function (val) {\n            this.depth = val - this.z;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"bottom\", {\n        /**\n         * The sum of the <code>y</code> and <code>height</code> properties.\n         */\n        get: function () {\n            return this.y + this.height;\n        },\n        set: function (val) {\n            this.height = val - this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"bottomRightBack\", {\n        /**\n         * The location of the Box object's bottom-right corner, determined by the\n         * values of the <code>right</code> and <code>bottom</code> properties.\n         */\n        get: function () {\n            if (this._bottomRightBack == null)\n                this._bottomRightBack = new Vector3D_1.Vector3D();\n            this._bottomRightBack.x = this.x + this.width;\n            this._bottomRightBack.y = this.y + this.height;\n            this._bottomRightBack.z = this.z + this.depth;\n            return this._bottomRightBack;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"front\", {\n        /**\n         * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\n         * the <code>front</code> property of a Box object has no effect on the\n         * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\n         * properties. However it does affect the <code>depth</code> property,\n         * whereas changing the <code>z</code> value does <i>not</i> affect the\n         * <code>depth</code> property.\n         *\n         * <p>The value of the <code>left</code> property is equal to the value of\n         * the <code>x</code> property.</p>\n         */\n        get: function () {\n            return this.z;\n        },\n        set: function (val) {\n            this.depth += this.z - val;\n            this.z = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"left\", {\n        /**\n         * The <i>x</i> coordinate of the top-left corner of the box. Changing the\n         * <code>left</code> property of a Box object has no effect on the\n         * <code>y</code> and <code>height</code> properties. However it does affect\n         * the <code>width</code> property, whereas changing the <code>x</code> value\n         * does <i>not</i> affect the <code>width</code> property.\n         *\n         * <p>The value of the <code>left</code> property is equal to the value of\n         * the <code>x</code> property.</p>\n         */\n        get: function () {\n            return this.x;\n        },\n        set: function (val) {\n            this.width += this.x - val;\n            this.x = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"right\", {\n        /**\n         * The sum of the <code>x</code> and <code>width</code> properties.\n         */\n        get: function () {\n            return this.x + this.width;\n        },\n        set: function (val) {\n            this.width = val - this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"size\", {\n        /**\n         * The size of the Box object, expressed as a Vector3D object with the\n         * values of the <code>width</code>, <code>height</code> and\n         * <code>depth</code> properties.\n         */\n        get: function () {\n            if (this._size == null)\n                this._size = new Vector3D_1.Vector3D();\n            this._size.x = this.width;\n            this._size.y = this.height;\n            this._size.z = this.depth;\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"top\", {\n        /**\n         * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\n         * the <code>top</code> property of a Box object has no effect on the\n         * <code>x</code> and <code>width</code> properties. However it does affect\n         * the <code>height</code> property, whereas changing the <code>y</code>\n         * value does <i>not</i> affect the <code>height</code> property.\n         *\n         * <p>The value of the <code>top</code> property is equal to the value of the\n         * <code>y</code> property.</p>\n         */\n        get: function () {\n            return this.y;\n        },\n        set: function (val) {\n            this.height += (this.y - val);\n            this.y = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"topLeftFront\", {\n        /**\n         * The location of the Box object's top-left-front corner, determined by the\n         * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\n         */\n        get: function () {\n            if (this._topLeftFront == null)\n                this._topLeftFront = new Vector3D_1.Vector3D();\n            this._topLeftFront.x = this.x;\n            this._topLeftFront.y = this.y;\n            this._topLeftFront.z = this.z;\n            return this._topLeftFront;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a new Box object with the same values for the <code>x</code>,\n     * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\n     * and <code>depth</code> properties as the original Box object.\n     *\n     * @return A new Box object with the same values for the <code>x</code>,\n     *         <code>y</code>, <code>z</code>, <code>width</code>,\n     *         <code>height</code> and <code>depth</code> properties as the\n     *         original Box object.\n     */\n    Box.prototype.clone = function () {\n        return new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\n    };\n    /**\n     * Determines whether the specified position is contained within the cubic\n     * region defined by this Box object.\n     *\n     * @param x The <i>x</i> coordinate(horizontal component) of the position.\n     * @param y The <i>y</i> coordinate(vertical component) of the position.\n     * @param z The <i>z</i> coordinate(longitudinal component) of the position.\n     * @return A value of <code>true</code> if the Box object contains the\n     *         specified position; otherwise <code>false</code>.\n     */\n    Box.prototype.contains = function (x, y, z) {\n        return (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\n    };\n    /**\n     * Determines whether the specified position is contained within the cubic\n     * region defined by this Box object. This method is similar to the\n     * <code>Box.contains()</code> method, except that it takes a Vector3D\n     * object as a parameter.\n     *\n     * @param position The position, as represented by its <i>x</i>, <i>y</i> and\n     *                 <i>z</i> coordinates.\n     * @return A value of <code>true</code> if the Box object contains the\n     *         specified position; otherwise <code>false</code>.\n     */\n    Box.prototype.containsPoint = function (position) {\n        return (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\n    };\n    /**\n     * Determines whether the Box object specified by the <code>box</code>\n     * parameter is contained within this Box object. A Box object is said to\n     * contain another if the second Box object falls entirely within the\n     * boundaries of the first.\n     *\n     * @param box The Box object being checked.\n     * @return A value of <code>true</code> if the Box object that you specify\n     *         is contained by this Box object; otherwise <code>false</code>.\n     */\n    Box.prototype.containsBox = function (box) {\n        return (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth);\n    };\n    /**\n     * Copies all of box data from the source Box object into the calling\n     * Box object.\n     *\n     * @param sourceBox The Box object from which to copy the data.\n     */\n    Box.prototype.copyFrom = function (sourceBox) {\n        this.x = sourceBox.x;\n        this.y = sourceBox.y;\n        this.z = sourceBox.z;\n        this.width = sourceBox.width;\n        this.height = sourceBox.height;\n        this.depth = sourceBox.depth;\n    };\n    /**\n     * Determines whether the object specified in the <code>toCompare</code>\n     * parameter is equal to this Box object. This method compares the\n     * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n     * <code>height</code> and <code>depth</code> properties of an object against\n     * the same properties of this Box object.\n     *\n     * @param toCompare The box to compare to this Box object.\n     * @return A value of <code>true</code> if the object has exactly the same\n     *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\n     *         <code>width</code>, <code>height</code> and <code>depth</code>\n     *         properties as this Box object; otherwise <code>false</code>.\n     */\n    Box.prototype.equals = function (toCompare) {\n        return (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth);\n    };\n    /**\n     * Increases the size of the Box object by the specified amounts, in\n     * pixels. The center point of the Box object stays the same, and its\n     * size increases to the left and right by the <code>dx</code> value, to\n     * the top and the bottom by the <code>dy</code> value, and to\n     * the front and the back by the <code>dz</code> value.\n     *\n     * @param dx The value to be added to the left and the right of the Box\n     *           object. The following equation is used to calculate the new\n     *           width and position of the box:\n     * @param dy The value to be added to the top and the bottom of the Box\n     *           object. The following equation is used to calculate the new\n     *           height and position of the box:\n     * @param dz The value to be added to the front and the back of the Box\n     *           object. The following equation is used to calculate the new\n     *           depth and position of the box:\n     */\n    Box.prototype.inflate = function (dx, dy, dz) {\n        this.x -= dx / 2;\n        this.y -= dy / 2;\n        this.z -= dz / 2;\n        this.width += dx / 2;\n        this.height += dy / 2;\n        this.depth += dz / 2;\n    };\n    /**\n     * Increases the size of the Box object. This method is similar to the\n     * <code>Box.inflate()</code> method except it takes a Vector3D object as\n     * a parameter.\n     *\n     * <p>The following two code examples give the same result:</p>\n     *\n     * @param delta The <code>x</code> property of this Vector3D object is used to\n     *              increase the horizontal dimension of the Box object.\n     *              The <code>y</code> property is used to increase the vertical\n     *              dimension of the Box object.\n     *              The <code>z</code> property is used to increase the\n     *              longitudinal dimension of the Box object.\n     */\n    Box.prototype.inflatePoint = function (delta) {\n        this.x -= delta.x / 2;\n        this.y -= delta.y / 2;\n        this.z -= delta.z / 2;\n        this.width += delta.x / 2;\n        this.height += delta.y / 2;\n        this.depth += delta.z / 2;\n    };\n    /**\n     * If the Box object specified in the <code>toIntersect</code> parameter\n     * intersects with this Box object, returns the area of intersection\n     * as a Box object. If the boxes do not intersect, this method returns an\n     * empty Box object with its properties set to 0.\n     *\n     * @param toIntersect The Box object to compare against to see if it\n     *                    intersects with this Box object.\n     * @return A Box object that equals the area of intersection. If the\n     *         boxes do not intersect, this method returns an empty Box\n     *         object; that is, a box with its <code>x</code>, <code>y</code>,\n     *         <code>z</code>, <code>width</code>,  <code>height</code>, and\n     *         <code>depth</code> properties set to 0.\n     */\n    Box.prototype.intersection = function (toIntersect) {\n        if (this.intersects(toIntersect)) {\n            var i = new Box();\n            if (this.x > toIntersect.x) {\n                i.x = this.x;\n                i.width = toIntersect.x - this.x + toIntersect.width;\n                if (i.width > this.width)\n                    i.width = this.width;\n            }\n            else {\n                i.x = toIntersect.x;\n                i.width = this.x - toIntersect.x + this.width;\n                if (i.width > toIntersect.width)\n                    i.width = toIntersect.width;\n            }\n            if (this.y > toIntersect.y) {\n                i.y = this.y;\n                i.height = toIntersect.y - this.y + toIntersect.height;\n                if (i.height > this.height)\n                    i.height = this.height;\n            }\n            else {\n                i.y = toIntersect.y;\n                i.height = this.y - toIntersect.y + this.height;\n                if (i.height > toIntersect.height)\n                    i.height = toIntersect.height;\n            }\n            if (this.z > toIntersect.z) {\n                i.z = this.z;\n                i.depth = toIntersect.z - this.z + toIntersect.depth;\n                if (i.depth > this.depth)\n                    i.depth = this.depth;\n            }\n            else {\n                i.z = toIntersect.z;\n                i.depth = this.z - toIntersect.z + this.depth;\n                if (i.depth > toIntersect.depth)\n                    i.depth = toIntersect.depth;\n            }\n            return i;\n        }\n        return new Box();\n    };\n    /**\n     * Determines whether the object specified in the <code>toIntersect</code>\n     * parameter intersects with this Box object. This method checks the\n     * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n     * <code>height</code>, and <code>depth</code> properties of the specified\n     * Box object to see if it intersects with this Box object.\n     *\n     * @param toIntersect The Box object to compare against this Box object.\n     * @return A value of <code>true</code> if the specified object intersects\n     *         with this Box object; otherwise <code>false</code>.\n     */\n    Box.prototype.intersects = function (toIntersect) {\n        return (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\n    };\n    Box.prototype.rayIntersection = function (position, direction, targetNormal) {\n        if (this.containsPoint(position))\n            return 0;\n        var halfExtentsX = this.width / 2;\n        var halfExtentsY = this.height / 2;\n        var halfExtentsZ = this.depth / 2;\n        var centerX = this.x + halfExtentsX;\n        var centerY = this.y + halfExtentsY;\n        var centerZ = this.z + halfExtentsZ;\n        var px = position.x - centerX;\n        var py = position.y - centerY;\n        var pz = position.z - centerZ;\n        var vx = direction.x;\n        var vy = direction.y;\n        var vz = direction.z;\n        var ix;\n        var iy;\n        var iz;\n        var rayEntryDistance;\n        // ray-plane tests\n        var intersects;\n        if (vx < 0) {\n            rayEntryDistance = (halfExtentsX - px) / vx;\n            if (rayEntryDistance > 0) {\n                iy = py + rayEntryDistance * vy;\n                iz = pz + rayEntryDistance * vz;\n                if (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n                    targetNormal.x = 1;\n                    targetNormal.y = 0;\n                    targetNormal.z = 0;\n                    intersects = true;\n                }\n            }\n        }\n        if (!intersects && vx > 0) {\n            rayEntryDistance = (-halfExtentsX - px) / vx;\n            if (rayEntryDistance > 0) {\n                iy = py + rayEntryDistance * vy;\n                iz = pz + rayEntryDistance * vz;\n                if (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n                    targetNormal.x = -1;\n                    targetNormal.y = 0;\n                    targetNormal.z = 0;\n                    intersects = true;\n                }\n            }\n        }\n        if (!intersects && vy < 0) {\n            rayEntryDistance = (halfExtentsY - py) / vy;\n            if (rayEntryDistance > 0) {\n                ix = px + rayEntryDistance * vx;\n                iz = pz + rayEntryDistance * vz;\n                if (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n                    targetNormal.x = 0;\n                    targetNormal.y = 1;\n                    targetNormal.z = 0;\n                    intersects = true;\n                }\n            }\n        }\n        if (!intersects && vy > 0) {\n            rayEntryDistance = (-halfExtentsY - py) / vy;\n            if (rayEntryDistance > 0) {\n                ix = px + rayEntryDistance * vx;\n                iz = pz + rayEntryDistance * vz;\n                if (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n                    targetNormal.x = 0;\n                    targetNormal.y = -1;\n                    targetNormal.z = 0;\n                    intersects = true;\n                }\n            }\n        }\n        if (!intersects && vz < 0) {\n            rayEntryDistance = (halfExtentsZ - pz) / vz;\n            if (rayEntryDistance > 0) {\n                ix = px + rayEntryDistance * vx;\n                iy = py + rayEntryDistance * vy;\n                if (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n                    targetNormal.x = 0;\n                    targetNormal.y = 0;\n                    targetNormal.z = 1;\n                    intersects = true;\n                }\n            }\n        }\n        if (!intersects && vz > 0) {\n            rayEntryDistance = (-halfExtentsZ - pz) / vz;\n            if (rayEntryDistance > 0) {\n                ix = px + rayEntryDistance * vx;\n                iy = py + rayEntryDistance * vy;\n                if (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n                    targetNormal.x = 0;\n                    targetNormal.y = 0;\n                    targetNormal.z = -1;\n                    intersects = true;\n                }\n            }\n        }\n        return intersects ? rayEntryDistance : -1;\n    };\n    /**\n     * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\n     *\n     * @param point The point for which to find the closest point on the Box\n     * @param target An optional Vector3D to store the result to prevent creating a new object.\n     * @return\n     */\n    Box.prototype.closestPointToPoint = function (point, target) {\n        if (target === void 0) { target = null; }\n        var p;\n        if (target == null)\n            target = new Vector3D_1.Vector3D();\n        p = point.x;\n        if (p < this.x)\n            p = this.x;\n        if (p > this.x + this.width)\n            p = this.x + this.width;\n        target.x = p;\n        p = point.y;\n        if (p < this.y + this.height)\n            p = this.y + this.height;\n        if (p > this.y)\n            p = this.y;\n        target.y = p;\n        p = point.z;\n        if (p < this.z)\n            p = this.z;\n        if (p > this.z + this.depth)\n            p = this.z + this.depth;\n        target.z = p;\n        return target;\n    };\n    /**\n     * Determines whether or not this Box object is empty.\n     *\n     * @return A value of <code>true</code> if the Box object's width, height or\n     *         depth is less than or equal to 0; otherwise <code>false</code>.\n     */\n    Box.prototype.isEmpty = function () {\n        return (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\n    };\n    /**\n     * Adjusts the location of the Box object, as determined by its\n     * top-left-front corner, by the specified amounts.\n     *\n     * @param dx Moves the <i>x</i> value of the Box object by this amount.\n     * @param dy Moves the <i>y</i> value of the Box object by this amount.\n     * @param dz Moves the <i>z</i> value of the Box object by this amount.\n     */\n    Box.prototype.offset = function (dx, dy, dz) {\n        this.x += dx;\n        this.y += dy;\n        this.z += dz;\n    };\n    /**\n     * Adjusts the location of the Box object using a Vector3D object as a\n     * parameter. This method is similar to the <code>Box.offset()</code>\n     * method, except that it takes a Vector3D object as a parameter.\n     *\n     * @param position A Vector3D object to use to offset this Box object.\n     */\n    Box.prototype.offsetPosition = function (position) {\n        this.x += position.x;\n        this.y += position.y;\n        this.z += position.z;\n    };\n    /**\n     * Sets all of the Box object's properties to 0. A Box object is empty if its\n     * width, height or depth is less than or equal to 0.\n     *\n     * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n     * <code>z</code>, <code>width</code>, <code>height</code>, and\n     * <code>depth</code> properties to 0.</p>\n     *\n     */\n    Box.prototype.setEmpty = function () {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.width = 0;\n        this.height = 0;\n        this.depth = 0;\n    };\n    Box.prototype.setBoundIdentity = function () {\n        this.x = Number.MAX_VALUE / 2;\n        this.y = Number.MAX_VALUE / 2;\n        this.z = Number.MAX_VALUE / 2;\n        this.width = -Number.MAX_VALUE;\n        this.height = -Number.MAX_VALUE;\n        this.depth = -Number.MAX_VALUE;\n    };\n    /**\n     * Sets the members of Box to the specified values\n     *\n     * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\n     *                box.\n     * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\n     *                box.\n     * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\n     *                box.\n     * @param widtha  The width of the box, in pixels.\n     * @param heighta The height of the box, in pixels.\n     * @param deptha  The depth of the box, in pixels.\n     */\n    Box.prototype.setTo = function (xa, ya, za, widtha, heighta, deptha) {\n        this.x = xa;\n        this.y = ya;\n        this.z = za;\n        this.width = widtha;\n        this.height = heighta;\n        this.depth = deptha;\n    };\n    /**\n     * Builds and returns a string that lists the horizontal, vertical and\n     * longitudinal positions and the width, height and depth of the Box object.\n     *\n     * @return A string listing the value of each of the following properties of\n     *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\n     *         <code>width</code>, <code>height</code>, and <code>depth</code>.\n     */\n    Box.prototype.toString = function () {\n        return \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\n    };\n    /**\n     * Adds two boxes together to create a new Box object, by filling\n     * in the horizontal, vertical and longitudinal space between the two boxes.\n     *\n     * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\n     * <code>0</code> as the height, width or depth value, such as: <code>var\n     * box2:Box = new Box(300,300,300,50,50,0);</code></p>\n     *\n     * @param toUnion A Box object to add to this Box object.\n     * @return A new Box object that is the union of the two boxes.\n     */\n    Box.prototype.union = function (toUnion, target) {\n        if (target === void 0) { target = null; }\n        var width;\n        var height;\n        var depth;\n        if (target == null)\n            target = new Box();\n        if (this.x < toUnion.x) {\n            width = toUnion.x - this.x + toUnion.width;\n            target.x = this.x;\n            target.width = (width < this.width) ? this.width : width;\n        }\n        else {\n            width = this.x - toUnion.x + this.width;\n            target.x = toUnion.x;\n            target.width = (width < toUnion.width) ? toUnion.width : width;\n        }\n        if (this.y < toUnion.y) {\n            height = toUnion.y - this.y + toUnion.height;\n            target.y = this.y;\n            target.height = (height < this.height) ? this.height : height;\n        }\n        else {\n            height = this.y - toUnion.y + this.height;\n            target.y = toUnion.y;\n            target.height = (height < toUnion.height) ? toUnion.height : height;\n        }\n        if (this.z < toUnion.z) {\n            depth = toUnion.z - this.z + toUnion.depth;\n            target.z = this.z;\n            target.depth = (depth < this.depth) ? this.depth : depth;\n        }\n        else {\n            depth = this.z - toUnion.z + this.depth;\n            target.z = toUnion.z;\n            target.depth = (depth < toUnion.depth) ? toUnion.depth : depth;\n        }\n        return target;\n    };\n    return Box;\n}());\nexports.Box = Box;\n\n},{\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/geom/ColorTransform\":[function(require,module,exports){\n\"use strict\";\nvar ColorUtils_1 = require(\"../utils/ColorUtils\");\n/**\n * The ColorTransform export class lets you adjust the color values in a display\n * object. The color adjustment or <i>color transformation</i> can be applied\n * to all four channels: red, green, blue, and alpha transparency.\n *\n * <p>When a ColorTransform object is applied to a display object, a new value\n * for each color channel is calculated like this:</p>\n *\n * <ul>\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\n * <code>redOffset</code></li>\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\n * <code>greenOffset</code></li>\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\n * <code>blueOffset</code></li>\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\n * <code>alphaOffset</code></li>\n * </ul>\n *\n * <p>If any of the color channel values is greater than 255 after the\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\n *\n * <p>You can use ColorTransform objects in the following ways:</p>\n *\n * <ul>\n *   <li>In the <code>colorTransform</code> parameter of the\n * <code>colorTransform()</code> method of the BitmapData class</li>\n *   <li>As the <code>colorTransform</code> property of a Transform object\n * (which can be used as the <code>transform</code> property of a display\n * object)</li>\n * </ul>\n *\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\n * a ColorTransform object before you can call the methods of the\n * ColorTransform object.</p>\n *\n * <p>Color transformations do not apply to the background color of a movie\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\n * that are attached to the movie clip.</p>\n */\nvar ColorTransform = (function () {\n    /**\n     * Creates a ColorTransform object for a display object with the specified\n     * color channel values and alpha values.\n     *\n     * @param redMultiplier   The value for the red multiplier, in the range from\n     *                        0 to 1.\n     * @param greenMultiplier The value for the green multiplier, in the range\n     *                        from 0 to 1.\n     * @param blueMultiplier  The value for the blue multiplier, in the range\n     *                        from 0 to 1.\n     * @param alphaMultiplier The value for the alpha transparency multiplier, in\n     *                        the range from 0 to 1.\n     * @param redOffset       The offset value for the red color channel, in the\n     *                        range from -255 to 255.\n     * @param greenOffset     The offset value for the green color channel, in\n     *                        the range from -255 to 255.\n     * @param blueOffset      The offset for the blue color channel value, in the\n     *                        range from -255 to 255.\n     * @param alphaOffset     The offset for alpha transparency channel value, in\n     *                        the range from -255 to 255.\n     */\n    function ColorTransform(redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset) {\n        if (redMultiplier === void 0) { redMultiplier = 1; }\n        if (greenMultiplier === void 0) { greenMultiplier = 1; }\n        if (blueMultiplier === void 0) { blueMultiplier = 1; }\n        if (alphaMultiplier === void 0) { alphaMultiplier = 1; }\n        if (redOffset === void 0) { redOffset = 0; }\n        if (greenOffset === void 0) { greenOffset = 0; }\n        if (blueOffset === void 0) { blueOffset = 0; }\n        if (alphaOffset === void 0) { alphaOffset = 0; }\n        this.redMultiplier = redMultiplier;\n        this.greenMultiplier = greenMultiplier;\n        this.blueMultiplier = blueMultiplier;\n        this.alphaMultiplier = alphaMultiplier;\n        this.redOffset = redOffset;\n        this.greenOffset = greenOffset;\n        this.blueOffset = blueOffset;\n        this.alphaOffset = alphaOffset;\n    }\n    Object.defineProperty(ColorTransform.prototype, \"color\", {\n        /**\n         * The RGB color value for a ColorTransform object.\n         *\n         * <p>When you set this property, it changes the three color offset values\n         * (<code>redOffset</code>, <code>greenOffset</code>, and\n         * <code>blueOffset</code>) accordingly, and it sets the three color\n         * multiplier values(<code>redMultiplier</code>,\n         * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\n         * alpha transparency multiplier and offset values do not change.</p>\n         *\n         * <p>When you pass a value for this property, use the format\n         * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\n         * hexadecimal digits that specify the offset of each color component. The 0x\n         * tells the ActionScript compiler that the number is a hexadecimal\n         * value.</p>\n         */\n        get: function () {\n            return ((this.redOffset << 16) | (this.greenOffset << 8) | this.blueOffset);\n        },\n        set: function (value) {\n            var argb = ColorUtils_1.ColorUtils.float32ColorToARGB(value);\n            this.redOffset = argb[1]; //(value >> 16) & 0xFF;\n            this.greenOffset = argb[2]; //(value >> 8) & 0xFF;\n            this.blueOffset = argb[3]; //value & 0xFF;\n            this.redMultiplier = 0;\n            this.greenMultiplier = 0;\n            this.blueMultiplier = 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ColorTransform.prototype.clear = function () {\n        this.redMultiplier = 1;\n        this.greenMultiplier = 1;\n        this.blueMultiplier = 1;\n        this.alphaMultiplier = 1;\n        this.redOffset = 0;\n        this.greenOffset = 0;\n        this.blueOffset = 0;\n        this.alphaOffset = 0;\n    };\n    ColorTransform.prototype.clone = function () {\n        return new ColorTransform(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n    };\n    ColorTransform.prototype.copyFrom = function (source) {\n        this.redMultiplier = source.redMultiplier;\n        this.greenMultiplier = source.greenMultiplier;\n        this.blueMultiplier = source.blueMultiplier;\n        this.alphaMultiplier = source.alphaMultiplier;\n        this.redOffset = source.redOffset;\n        this.greenOffset = source.greenOffset;\n        this.blueOffset = source.blueOffset;\n        this.alphaOffset = source.alphaOffset;\n    };\n    ColorTransform.prototype.copyTo = function (destination) {\n        destination.copyFrom(this);\n    };\n    ColorTransform.prototype.prepend = function (ct) {\n        this.redOffset += ct.redOffset * this.redMultiplier;\n        this.greenOffset += ct.greenOffset * this.greenMultiplier;\n        this.blueOffset += ct.blueOffset * this.blueMultiplier;\n        this.alphaOffset += ct.alphaOffset * this.alphaMultiplier;\n        this.redMultiplier *= ct.redMultiplier;\n        this.greenMultiplier *= ct.greenMultiplier;\n        this.blueMultiplier *= ct.blueMultiplier;\n        this.alphaMultiplier *= ct.alphaMultiplier;\n    };\n    ColorTransform.prototype._isRenderable = function () {\n        return Boolean(this.alphaMultiplier) || this.alphaOffset > 0;\n    };\n    return ColorTransform;\n}());\nexports.ColorTransform = ColorTransform;\n\n},{\"../utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\"}],\"awayjs-core/lib/geom/MathConsts\":[function(require,module,exports){\n\"use strict\";\n/**\n* MathConsts provides some commonly used mathematical constants\n*/\nvar MathConsts = (function () {\n    function MathConsts() {\n    }\n    /**\n     * The amount to multiply with when converting radians to degrees.\n     */\n    MathConsts.RADIANS_TO_DEGREES = 180 / Math.PI;\n    /**\n     * The amount to multiply with when converting degrees to radians.\n     */\n    MathConsts.DEGREES_TO_RADIANS = Math.PI / 180;\n    return MathConsts;\n}());\nexports.MathConsts = MathConsts;\n\n},{}],\"awayjs-core/lib/geom/Matrix3DUtils\":[function(require,module,exports){\n\"use strict\";\nvar Matrix3D_1 = require(\"../geom/Matrix3D\");\nvar Vector3D_1 = require(\"../geom/Vector3D\");\n/**\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\n */\nvar Matrix3DUtils = (function () {\n    function Matrix3DUtils() {\n    }\n    /**\n     * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\n     *\n     * @param    quarternion    The quarterion object to convert.\n     */\n    Matrix3DUtils.quaternion2matrix = function (quarternion, m) {\n        if (m === void 0) { m = null; }\n        var x = quarternion.x;\n        var y = quarternion.y;\n        var z = quarternion.z;\n        var w = quarternion.w;\n        var xx = x * x;\n        var xy = x * y;\n        var xz = x * z;\n        var xw = x * w;\n        var yy = y * y;\n        var yz = y * z;\n        var yw = y * w;\n        var zz = z * z;\n        var zw = z * w;\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\n        raw[0] = 1 - 2 * (yy + zz);\n        raw[1] = 2 * (xy + zw);\n        raw[2] = 2 * (xz - yw);\n        raw[4] = 2 * (xy - zw);\n        raw[5] = 1 - 2 * (xx + zz);\n        raw[6] = 2 * (yz + xw);\n        raw[8] = 2 * (xz + yw);\n        raw[9] = 2 * (yz - xw);\n        raw[10] = 1 - 2 * (xx + yy);\n        raw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\n        raw[15] = 1;\n        if (m) {\n            m.copyRawDataFrom(raw);\n            return m;\n        }\n        else\n            return new Matrix3D_1.Matrix3D(raw);\n    };\n    /**\n     * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\n     * @param    m        The Matrix3D object to use to get the forward vector\n     * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n     * @return            The forward vector\n     */\n    Matrix3DUtils.getForward = function (m, v) {\n        if (v === void 0) { v = null; }\n        if (v === null)\n            v = new Vector3D_1.Vector3D(0.0, 0.0, 0.0);\n        m.copyColumnTo(2, v);\n        v.normalize();\n        return v;\n    };\n    /**\n     * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\n     * @param    m        The Matrix3D object to use to get the up vector\n     * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n     * @return            The up vector\n     */\n    Matrix3DUtils.getUp = function (m, v) {\n        if (v === void 0) { v = null; }\n        if (v === null)\n            v = new Vector3D_1.Vector3D(0.0, 0.0, 0.0);\n        m.copyColumnTo(1, v);\n        v.normalize();\n        return v;\n    };\n    /**\n     * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\n     * @param    m        The Matrix3D object to use to get the right vector\n     * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n     * @return            The right vector\n     */\n    Matrix3DUtils.getRight = function (m, v) {\n        if (v === void 0) { v = null; }\n        //v ||= new Vector3D(0.0, 0.0, 0.0);\n        if (v === null) {\n            v = new Vector3D_1.Vector3D(0.0, 0.0, 0.0);\n        }\n        m.copyColumnTo(0, v);\n        v.normalize();\n        return v;\n    };\n    /**\n     * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\n     */\n    Matrix3DUtils.compare = function (m1, m2) {\n        var r1 = Matrix3DUtils.RAW_DATA_CONTAINER;\n        var r2 = m2.rawData;\n        m1.copyRawDataTo(r1);\n        for (var i = 0; i < 16; ++i) {\n            if (r1[i] != r2[i])\n                return false;\n        }\n        return true;\n    };\n    Matrix3DUtils.lookAt = function (matrix, pos, dir, up) {\n        var dirN;\n        var upN;\n        var lftN;\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\n        lftN = dir.crossProduct(up);\n        lftN.normalize();\n        upN = lftN.crossProduct(dir);\n        upN.normalize();\n        dirN = dir.clone();\n        dirN.normalize();\n        raw[0] = lftN.x;\n        raw[1] = upN.x;\n        raw[2] = -dirN.x;\n        raw[3] = 0.0;\n        raw[4] = lftN.y;\n        raw[5] = upN.y;\n        raw[6] = -dirN.y;\n        raw[7] = 0.0;\n        raw[8] = lftN.z;\n        raw[9] = upN.z;\n        raw[10] = -dirN.z;\n        raw[11] = 0.0;\n        raw[12] = -lftN.dotProduct(pos);\n        raw[13] = -upN.dotProduct(pos);\n        raw[14] = dirN.dotProduct(pos);\n        raw[15] = 1.0;\n        matrix.copyRawDataFrom(raw);\n    };\n    Matrix3DUtils.reflection = function (plane, target) {\n        if (target === void 0) { target = null; }\n        if (target === null)\n            target = new Matrix3D_1.Matrix3D();\n        var a = plane.a, b = plane.b, c = plane.c, d = plane.d;\n        var rawData = Matrix3DUtils.RAW_DATA_CONTAINER;\n        var ab2 = -2 * a * b;\n        var ac2 = -2 * a * c;\n        var bc2 = -2 * b * c;\n        // reflection matrix\n        rawData[0] = 1 - 2 * a * a;\n        rawData[4] = ab2;\n        rawData[8] = ac2;\n        rawData[12] = -2 * a * d;\n        rawData[1] = ab2;\n        rawData[5] = 1 - 2 * b * b;\n        rawData[9] = bc2;\n        rawData[13] = -2 * b * d;\n        rawData[2] = ac2;\n        rawData[6] = bc2;\n        rawData[10] = 1 - 2 * c * c;\n        rawData[14] = -2 * c * d;\n        rawData[3] = 0;\n        rawData[7] = 0;\n        rawData[11] = 0;\n        rawData[15] = 1;\n        target.copyRawDataFrom(rawData);\n        return target;\n    };\n    Matrix3DUtils.transformVector = function (matrix, vector, result) {\n        if (result === void 0) { result = null; }\n        if (!result)\n            result = new Vector3D_1.Vector3D();\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\n        matrix.copyRawDataTo(raw);\n        var a = raw[0];\n        var e = raw[1];\n        var i = raw[2];\n        var m = raw[3];\n        var b = raw[4];\n        var f = raw[5];\n        var j = raw[6];\n        var n = raw[7];\n        var c = raw[8];\n        var g = raw[9];\n        var k = raw[10];\n        var o = raw[11];\n        var d = raw[12];\n        var h = raw[13];\n        var l = raw[14];\n        var p = raw[15];\n        var x = vector.x;\n        var y = vector.y;\n        var z = vector.z;\n        result.x = a * x + b * y + c * z + d;\n        result.y = e * x + f * y + g * z + h;\n        result.z = i * x + j * y + k * z + l;\n        result.w = m * x + n * y + o * z + p;\n        return result;\n    };\n    Matrix3DUtils.deltaTransformVector = function (matrix, vector, result) {\n        if (result === void 0) { result = null; }\n        if (!result)\n            result = new Vector3D_1.Vector3D();\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\n        matrix.copyRawDataTo(raw);\n        var a = raw[0];\n        var e = raw[1];\n        var i = raw[2];\n        var m = raw[3];\n        var b = raw[4];\n        var f = raw[5];\n        var j = raw[6];\n        var n = raw[7];\n        var c = raw[8];\n        var g = raw[9];\n        var k = raw[10];\n        var o = raw[11];\n        var x = vector.x;\n        var y = vector.y;\n        var z = vector.z;\n        result.x = a * x + b * y + c * z;\n        result.y = e * x + f * y + g * z;\n        result.z = i * x + j * y + k * z;\n        result.w = m * x + n * y + o * z;\n        return result;\n    };\n    Matrix3DUtils.getTranslation = function (transform, result) {\n        if (result === void 0) { result = null; }\n        if (!result)\n            result = new Vector3D_1.Vector3D();\n        transform.copyColumnTo(3, result);\n        return result;\n    };\n    Matrix3DUtils.deltaTransformVectors = function (matrix, vin, vout) {\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\n        matrix.copyRawDataTo(raw);\n        var a = raw[0];\n        var e = raw[1];\n        var i = raw[2];\n        var m = raw[3];\n        var b = raw[4];\n        var f = raw[5];\n        var j = raw[6];\n        var n = raw[7];\n        var c = raw[8];\n        var g = raw[9];\n        var k = raw[10];\n        var o = raw[11];\n        var outIndex = 0;\n        var length = vin.length;\n        for (var index = 0; index < length; index += 3) {\n            var x = vin[index];\n            var y = vin[index + 1];\n            var z = vin[index + 2];\n            vout[outIndex++] = a * x + b * y + c * z;\n            vout[outIndex++] = e * x + f * y + g * z;\n            vout[outIndex++] = i * x + j * y + k * z;\n        }\n    };\n    /**\n     * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\n     */\n    Matrix3DUtils.RAW_DATA_CONTAINER = new Float32Array(16);\n    //public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n    Matrix3DUtils.CALCULATION_MATRIX = new Matrix3D_1.Matrix3D();\n    return Matrix3DUtils;\n}());\nexports.Matrix3DUtils = Matrix3DUtils;\n\n},{\"../geom/Matrix3D\":\"awayjs-core/lib/geom/Matrix3D\",\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/geom/Matrix3D\":[function(require,module,exports){\n\"use strict\";\nvar Box_1 = require(\"../geom/Box\");\nvar MathConsts_1 = require(\"../geom/MathConsts\");\nvar Orientation3D_1 = require(\"../geom/Orientation3D\");\nvar Vector3D_1 = require(\"../geom/Vector3D\");\nvar ArgumentError_1 = require(\"../errors/ArgumentError\");\nvar Matrix3D = (function () {\n    /**\n     * Creates a Matrix3D object.\n     */\n    function Matrix3D(v) {\n        if (v === void 0) { v = null; }\n        /**\n         * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\n         *\n         * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\n         * object must be invertible. If a non-invertible matrix is needed, create a subexport class of the Matrix3D object.</p>\n         */\n        this.rawData = new Float32Array(16);\n        this._position = new Vector3D_1.Vector3D();\n        this._positionDirty = true;\n        if (v != null && v.length == 16) {\n            this.copyRawDataFrom(v);\n        }\n        else {\n            this.identity();\n        }\n    }\n    /**\n     * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\n     */\n    Matrix3D.prototype.append = function (lhs) {\n        var lrd = lhs.rawData;\n        var m111 = this.rawData[0];\n        var m112 = this.rawData[1];\n        var m113 = this.rawData[2];\n        var m114 = this.rawData[3];\n        var m121 = this.rawData[4];\n        var m122 = this.rawData[5];\n        var m123 = this.rawData[6];\n        var m124 = this.rawData[7];\n        var m131 = this.rawData[8];\n        var m132 = this.rawData[9];\n        var m133 = this.rawData[10];\n        var m134 = this.rawData[11];\n        var m141 = this.rawData[12];\n        var m142 = this.rawData[13];\n        var m143 = this.rawData[14];\n        var m144 = this.rawData[15];\n        var m211 = lrd[0];\n        var m212 = lrd[1];\n        var m213 = lrd[2];\n        var m214 = lrd[3];\n        var m221 = lrd[4];\n        var m222 = lrd[5];\n        var m223 = lrd[6];\n        var m224 = lrd[7];\n        var m231 = lrd[8];\n        var m232 = lrd[9];\n        var m233 = lrd[10];\n        var m234 = lrd[11];\n        var m241 = lrd[12];\n        var m242 = lrd[13];\n        var m243 = lrd[14];\n        var m244 = lrd[15];\n        this.rawData[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;\n        this.rawData[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;\n        this.rawData[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;\n        this.rawData[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;\n        this.rawData[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;\n        this.rawData[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;\n        this.rawData[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;\n        this.rawData[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;\n        this.rawData[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;\n        this.rawData[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;\n        this.rawData[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;\n        this.rawData[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;\n        this.rawData[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;\n        this.rawData[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;\n        this.rawData[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;\n        this.rawData[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;\n        this._positionDirty = true;\n    };\n    /**\n     * Appends an incremental rotation to a Matrix3D object.\n     */\n    Matrix3D.prototype.appendRotation = function (degrees, axis) {\n        this.append(Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees));\n    };\n    /**\n     * Appends an incremental skew change along the x, y, and z axes to a Matrix3D object.\n     */\n    Matrix3D.prototype.appendSkew = function (xSkew, ySkew, zSkew) {\n        if (xSkew == 0 && ySkew == 0 && zSkew == 0)\n            return;\n        var raw = Matrix3D.tempRawData;\n        raw[0] = 1;\n        raw[1] = 0;\n        raw[2] = 0;\n        raw[3] = 0;\n        raw[4] = xSkew;\n        raw[5] = 1;\n        raw[6] = 0;\n        raw[7] = 0;\n        raw[8] = ySkew;\n        raw[9] = zSkew;\n        raw[10] = 1;\n        raw[11] = 0;\n        raw[12] = 0;\n        raw[13] = 0;\n        raw[14] = 0;\n        raw[15] = 1;\n        this.append(Matrix3D.tempMatrix);\n    };\n    /**\n     * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n     */\n    Matrix3D.prototype.appendScale = function (xScale, yScale, zScale) {\n        if (xScale == 1 && yScale == 1 && zScale == 1)\n            return;\n        var raw = Matrix3D.tempRawData;\n        raw[0] = xScale;\n        raw[1] = 0;\n        raw[2] = 0;\n        raw[3] = 0;\n        raw[4] = 0;\n        raw[5] = yScale;\n        raw[6] = 0;\n        raw[7] = 0;\n        raw[8] = 0;\n        raw[9] = 0;\n        raw[10] = zScale;\n        raw[11] = 0;\n        raw[12] = 0;\n        raw[13] = 0;\n        raw[14] = 0;\n        raw[15] = 1;\n        this.append(Matrix3D.tempMatrix);\n    };\n    /**\n     * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n     */\n    Matrix3D.prototype.appendTranslation = function (x, y, z) {\n        this.rawData[12] += x;\n        this.rawData[13] += y;\n        this.rawData[14] += z;\n        this._positionDirty = true;\n    };\n    /**\n     * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\n     */\n    Matrix3D.prototype.clone = function () {\n        return new Matrix3D(this.rawData);\n    };\n    /**\n     * Copies a Vector3D object into specific column of the calling Matrix3D object.\n     */\n    Matrix3D.prototype.copyColumnFrom = function (column, vector3D) {\n        switch (column) {\n            case 0:\n                this.rawData[0] = vector3D.x;\n                this.rawData[1] = vector3D.y;\n                this.rawData[2] = vector3D.z;\n                this.rawData[3] = vector3D.w;\n                break;\n            case 1:\n                this.rawData[4] = vector3D.x;\n                this.rawData[5] = vector3D.y;\n                this.rawData[6] = vector3D.z;\n                this.rawData[7] = vector3D.w;\n                break;\n            case 2:\n                this.rawData[8] = vector3D.x;\n                this.rawData[9] = vector3D.y;\n                this.rawData[10] = vector3D.z;\n                this.rawData[11] = vector3D.w;\n                break;\n            case 3:\n                this.rawData[12] = vector3D.x;\n                this.rawData[13] = vector3D.y;\n                this.rawData[14] = vector3D.z;\n                this.rawData[15] = vector3D.w;\n                break;\n            default:\n                throw new ArgumentError_1.ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n        }\n    };\n    /**\n     * Copies specific column of the calling Matrix3D object into the Vector3D object.\n     */\n    Matrix3D.prototype.copyColumnTo = function (column, vector3D) {\n        switch (column) {\n            case 0:\n                vector3D.x = this.rawData[0];\n                vector3D.y = this.rawData[1];\n                vector3D.z = this.rawData[2];\n                vector3D.w = this.rawData[3];\n                break;\n            case 1:\n                vector3D.x = this.rawData[4];\n                vector3D.y = this.rawData[5];\n                vector3D.z = this.rawData[6];\n                vector3D.w = this.rawData[7];\n                break;\n            case 2:\n                vector3D.x = this.rawData[8];\n                vector3D.y = this.rawData[9];\n                vector3D.z = this.rawData[10];\n                vector3D.w = this.rawData[11];\n                break;\n            case 3:\n                vector3D.x = this.rawData[12];\n                vector3D.y = this.rawData[13];\n                vector3D.z = this.rawData[14];\n                vector3D.w = this.rawData[15];\n                break;\n            default:\n                throw new ArgumentError_1.ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n        }\n    };\n    /**\n     * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\n     */\n    Matrix3D.prototype.copyFrom = function (source) {\n        var sourceRaw = source.rawData;\n        var len = sourceRaw.length;\n        for (var c = 0; c < len; c++)\n            this.rawData[c] = sourceRaw[c];\n    };\n    /**\n     * Copies this Matrix3D object into a destination Matrix3D object.\n     */\n    Matrix3D.prototype.copyTo = function (target) {\n        var targetRaw = target.rawData;\n        var len = this.rawData.length;\n        for (var c = 0; c < len; c++)\n            targetRaw[c] = this.rawData[c];\n    };\n    Matrix3D.prototype.copyRawDataFrom = function (vector, index, transpose) {\n        if (index === void 0) { index = 0; }\n        if (transpose === void 0) { transpose = false; }\n        if (transpose)\n            this.transpose();\n        var len = vector.length - index;\n        for (var c = 0; c < len; c++)\n            this.rawData[c] = vector[c + index];\n        if (transpose)\n            this.transpose();\n    };\n    Matrix3D.prototype.copyRawDataTo = function (vector, index, transpose) {\n        if (index === void 0) { index = 0; }\n        if (transpose === void 0) { transpose = false; }\n        if (transpose)\n            this.transpose();\n        var len = this.rawData.length;\n        for (var c = 0; c < len; c++)\n            vector[c + index] = this.rawData[c];\n        if (transpose)\n            this.transpose();\n    };\n    /**\n     * Copies a Vector3D object into specific row of the calling Matrix3D object.\n     */\n    Matrix3D.prototype.copyRowFrom = function (row, vector3D) {\n        switch (row) {\n            case 0:\n                this.rawData[0] = vector3D.x;\n                this.rawData[4] = vector3D.y;\n                this.rawData[8] = vector3D.z;\n                this.rawData[12] = vector3D.w;\n                break;\n            case 1:\n                this.rawData[1] = vector3D.x;\n                this.rawData[5] = vector3D.y;\n                this.rawData[9] = vector3D.z;\n                this.rawData[13] = vector3D.w;\n                break;\n            case 2:\n                this.rawData[2] = vector3D.x;\n                this.rawData[6] = vector3D.y;\n                this.rawData[10] = vector3D.z;\n                this.rawData[14] = vector3D.w;\n                break;\n            case 3:\n                this.rawData[3] = vector3D.x;\n                this.rawData[7] = vector3D.y;\n                this.rawData[11] = vector3D.z;\n                this.rawData[15] = vector3D.w;\n                break;\n            default:\n                throw new ArgumentError_1.ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n        }\n    };\n    /**\n     * Copies specific row of the calling Matrix3D object into the Vector3D object.\n     */\n    Matrix3D.prototype.copyRowTo = function (row, vector3D) {\n        switch (row) {\n            case 0:\n                vector3D.x = this.rawData[0];\n                vector3D.y = this.rawData[4];\n                vector3D.z = this.rawData[8];\n                vector3D.w = this.rawData[12];\n                break;\n            case 1:\n                vector3D.x = this.rawData[1];\n                vector3D.y = this.rawData[5];\n                vector3D.z = this.rawData[9];\n                vector3D.w = this.rawData[13];\n                break;\n            case 2:\n                vector3D.x = this.rawData[2];\n                vector3D.y = this.rawData[6];\n                vector3D.z = this.rawData[10];\n                vector3D.w = this.rawData[14];\n                break;\n            case 3:\n                vector3D.x = this.rawData[3];\n                vector3D.y = this.rawData[7];\n                vector3D.z = this.rawData[11];\n                vector3D.w = this.rawData[15];\n                break;\n            default:\n                throw new ArgumentError_1.ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n        }\n    };\n    /**\n     * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\n     */\n    Matrix3D.prototype.decompose = function (orientationStyle) {\n        if (orientationStyle === void 0) { orientationStyle = \"eulerAngles\"; }\n        var q;\n        if (this._components == null)\n            this._components = [null, new Vector3D_1.Vector3D(), new Vector3D_1.Vector3D(), new Vector3D_1.Vector3D()];\n        var colX = new Vector3D_1.Vector3D(this.rawData[0], this.rawData[1], this.rawData[2]);\n        var colY = new Vector3D_1.Vector3D(this.rawData[4], this.rawData[5], this.rawData[6]);\n        var colZ = new Vector3D_1.Vector3D(this.rawData[8], this.rawData[9], this.rawData[10]);\n        var scale = this._components[3];\n        var skew = this._components[2];\n        //compute X scale factor and normalise colX\n        scale.x = colX.length;\n        colX.scaleBy(1 / scale.x);\n        //compute XY shear factor and make colY orthogonal to colX\n        skew.x = colX.dotProduct(colY);\n        colY = Vector3D_1.Vector3D.combine(colY, colX, 1, -skew.x);\n        //compute Y scale factor and normalise colY\n        scale.y = colY.length;\n        colY.scaleBy(1 / scale.y);\n        skew.x /= scale.y;\n        //compute XZ and YZ shears and make colZ orthogonal to colX and colY\n        skew.y = colX.dotProduct(colZ);\n        colZ = Vector3D_1.Vector3D.combine(colZ, colX, 1, -skew.y);\n        skew.z = colY.dotProduct(colZ);\n        colZ = Vector3D_1.Vector3D.combine(colZ, colY, 1, -skew.z);\n        //compute Z scale and normalise colZ\n        scale.z = colZ.length;\n        colZ.scaleBy(1 / scale.z);\n        skew.y /= scale.z;\n        skew.z /= scale.z;\n        //at this point, the matrix (in cols) is orthonormal\n        //check for a coordinate system flip. If the determinant is -1, negate the z scaling factor\n        if (colX.dotProduct(colY.crossProduct(colZ)) < 0) {\n            scale.z = -scale.z;\n            colZ.x = -colZ.x;\n            colZ.y = -colZ.y;\n            colZ.z = -colZ.z;\n        }\n        var rot = this._components[1];\n        switch (orientationStyle) {\n            case Orientation3D_1.Orientation3D.AXIS_ANGLE:\n                rot.w = Math.acos((colX.x + colY.y + colZ.z - 1) / 2);\n                var len = Math.sqrt((colY.z - colZ.y) * (colY.z - colZ.y) + (colZ.x - colX.z) * (colZ.x - colX.z) + (colX.y - colY.x) * (colX.y - colY.x));\n                rot.x = (colY.z - colZ.y) / len;\n                rot.y = (colZ.x - colX.z) / len;\n                rot.z = (colX.y - colY.x) / len;\n                break;\n            case Orientation3D_1.Orientation3D.QUATERNION:\n                var tr = colX.x + colY.y + colZ.z;\n                if (tr > 0) {\n                    rot.w = Math.sqrt(1 + tr) / 2;\n                    rot.x = (colY.z - colZ.y) / (4 * rot.w);\n                    rot.y = (colZ.x - colX.z) / (4 * rot.w);\n                    rot.z = (colX.y - colY.x) / (4 * rot.w);\n                }\n                else if ((colX.x > colY.y) && (colX.x > colZ.z)) {\n                    rot.x = Math.sqrt(1 + colX.x - colY.y - colZ.z) / 2;\n                    rot.w = (colY.z - colZ.y) / (4 * rot.x);\n                    rot.y = (colX.y + colY.x) / (4 * rot.x);\n                    rot.z = (colZ.x + colX.z) / (4 * rot.x);\n                }\n                else if (colY.y > colZ.z) {\n                    rot.y = Math.sqrt(1 + colY.y - colX.x - colZ.z) / 2;\n                    rot.x = (colX.y + colY.x) / (4 * rot.y);\n                    rot.w = (colZ.x - colX.z) / (4 * rot.y);\n                    rot.z = (colY.z + colZ.y) / (4 * rot.y);\n                }\n                else {\n                    rot.z = Math.sqrt(1 + colZ.z - colX.x - colY.y) / 2;\n                    rot.x = (colZ.x + colX.z) / (4 * rot.z);\n                    rot.y = (colY.z + colZ.y) / (4 * rot.z);\n                    rot.w = (colX.y - colY.x) / (4 * rot.z);\n                }\n                break;\n            case Orientation3D_1.Orientation3D.EULER_ANGLES:\n                rot.y = Math.asin(-colX.z);\n                //var cos:number = Math.cos(rot.y);\n                if (colX.z != 1 && colX.z != -1) {\n                    rot.x = Math.atan2(colY.z, colZ.z);\n                    rot.z = Math.atan2(colX.y, colX.x);\n                }\n                else {\n                    rot.z = 0;\n                    rot.x = Math.atan2(colY.x, colY.y);\n                }\n                break;\n        }\n        this._components[0] = this.position;\n        return this._components;\n    };\n    /**\n     * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\n     * coordinate to another.\n     */\n    Matrix3D.prototype.deltaTransformVector = function (v, t) {\n        if (t === void 0) { t = null; }\n        var x = v.x;\n        var y = v.y;\n        var z = v.z;\n        if (!t)\n            t = new Vector3D_1.Vector3D();\n        t.x = x * this.rawData[0] + y * this.rawData[4] + z * this.rawData[8];\n        t.y = x * this.rawData[1] + y * this.rawData[5] + z * this.rawData[9];\n        t.z = x * this.rawData[2] + y * this.rawData[6] + z * this.rawData[10];\n        t.w = x * this.rawData[3] + y * this.rawData[7] + z * this.rawData[11];\n        return t;\n    };\n    /**\n     * Converts the current matrix to an identity or unit matrix.\n     */\n    Matrix3D.prototype.identity = function () {\n        this.rawData[0] = 1;\n        this.rawData[1] = 0;\n        this.rawData[2] = 0;\n        this.rawData[3] = 0;\n        this.rawData[4] = 0;\n        this.rawData[5] = 1;\n        this.rawData[6] = 0;\n        this.rawData[7] = 0;\n        this.rawData[8] = 0;\n        this.rawData[9] = 0;\n        this.rawData[10] = 1;\n        this.rawData[11] = 0;\n        this.rawData[12] = 0;\n        this.rawData[13] = 0;\n        this.rawData[14] = 0;\n        this.rawData[15] = 1;\n        this._positionDirty = true;\n    };\n    /**\n     * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\n     */\n    Matrix3D.interpolate = function (thisMat, toMat, percent) {\n        var m = new Matrix3D();\n        for (var i = 0; i < 16; ++i)\n            m.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i]) * percent;\n        return m;\n    };\n    /**\n     * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\n     */\n    Matrix3D.prototype.interpolateTo = function (toMat, percent) {\n        for (var i = 0; i < 16; ++i)\n            this.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i]) * percent;\n    };\n    /**\n     * Inverts the current matrix.\n     */\n    Matrix3D.prototype.invert = function () {\n        var d = this.determinant;\n        var invertable = Math.abs(d) > 0.00000000001;\n        if (invertable) {\n            d = 1 / d;\n            var m11 = this.rawData[0];\n            var m12 = this.rawData[1];\n            var m13 = this.rawData[2];\n            var m14 = this.rawData[3];\n            var m21 = this.rawData[4];\n            var m22 = this.rawData[5];\n            var m23 = this.rawData[6];\n            var m24 = this.rawData[7];\n            var m31 = this.rawData[8];\n            var m32 = this.rawData[9];\n            var m33 = this.rawData[10];\n            var m34 = this.rawData[11];\n            var m41 = this.rawData[12];\n            var m42 = this.rawData[13];\n            var m43 = this.rawData[14];\n            var m44 = this.rawData[15];\n            this.rawData[0] = d * (m22 * (m33 * m44 - m43 * m34) - m32 * (m23 * m44 - m43 * m24) + m42 * (m23 * m34 - m33 * m24));\n            this.rawData[1] = -d * (m12 * (m33 * m44 - m43 * m34) - m32 * (m13 * m44 - m43 * m14) + m42 * (m13 * m34 - m33 * m14));\n            this.rawData[2] = d * (m12 * (m23 * m44 - m43 * m24) - m22 * (m13 * m44 - m43 * m14) + m42 * (m13 * m24 - m23 * m14));\n            this.rawData[3] = -d * (m12 * (m23 * m34 - m33 * m24) - m22 * (m13 * m34 - m33 * m14) + m32 * (m13 * m24 - m23 * m14));\n            this.rawData[4] = -d * (m21 * (m33 * m44 - m43 * m34) - m31 * (m23 * m44 - m43 * m24) + m41 * (m23 * m34 - m33 * m24));\n            this.rawData[5] = d * (m11 * (m33 * m44 - m43 * m34) - m31 * (m13 * m44 - m43 * m14) + m41 * (m13 * m34 - m33 * m14));\n            this.rawData[6] = -d * (m11 * (m23 * m44 - m43 * m24) - m21 * (m13 * m44 - m43 * m14) + m41 * (m13 * m24 - m23 * m14));\n            this.rawData[7] = d * (m11 * (m23 * m34 - m33 * m24) - m21 * (m13 * m34 - m33 * m14) + m31 * (m13 * m24 - m23 * m14));\n            this.rawData[8] = d * (m21 * (m32 * m44 - m42 * m34) - m31 * (m22 * m44 - m42 * m24) + m41 * (m22 * m34 - m32 * m24));\n            this.rawData[9] = -d * (m11 * (m32 * m44 - m42 * m34) - m31 * (m12 * m44 - m42 * m14) + m41 * (m12 * m34 - m32 * m14));\n            this.rawData[10] = d * (m11 * (m22 * m44 - m42 * m24) - m21 * (m12 * m44 - m42 * m14) + m41 * (m12 * m24 - m22 * m14));\n            this.rawData[11] = -d * (m11 * (m22 * m34 - m32 * m24) - m21 * (m12 * m34 - m32 * m14) + m31 * (m12 * m24 - m22 * m14));\n            this.rawData[12] = -d * (m21 * (m32 * m43 - m42 * m33) - m31 * (m22 * m43 - m42 * m23) + m41 * (m22 * m33 - m32 * m23));\n            this.rawData[13] = d * (m11 * (m32 * m43 - m42 * m33) - m31 * (m12 * m43 - m42 * m13) + m41 * (m12 * m33 - m32 * m13));\n            this.rawData[14] = -d * (m11 * (m22 * m43 - m42 * m23) - m21 * (m12 * m43 - m42 * m13) + m41 * (m12 * m23 - m22 * m13));\n            this.rawData[15] = d * (m11 * (m22 * m33 - m32 * m23) - m21 * (m12 * m33 - m32 * m13) + m31 * (m12 * m23 - m22 * m13));\n        }\n        this._positionDirty = true;\n        return invertable;\n    };\n    /* TODO implement pointAt\n     public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\n     {\n     }\n     */\n    /**\n     * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\n     */\n    Matrix3D.prototype.prepend = function (rhs) {\n        var m111 = rhs.rawData[0];\n        var m112 = rhs.rawData[1];\n        var m113 = rhs.rawData[2];\n        var m114 = rhs.rawData[3];\n        var m121 = rhs.rawData[4];\n        var m122 = rhs.rawData[5];\n        var m123 = rhs.rawData[6];\n        var m124 = rhs.rawData[7];\n        var m131 = rhs.rawData[8];\n        var m132 = rhs.rawData[9];\n        var m133 = rhs.rawData[10];\n        var m134 = rhs.rawData[11];\n        var m141 = rhs.rawData[12];\n        var m142 = rhs.rawData[13];\n        var m143 = rhs.rawData[14];\n        var m144 = rhs.rawData[15];\n        var m211 = this.rawData[0];\n        var m212 = this.rawData[1];\n        var m213 = this.rawData[2];\n        var m214 = this.rawData[3];\n        var m221 = this.rawData[4];\n        var m222 = this.rawData[5];\n        var m223 = this.rawData[6];\n        var m224 = this.rawData[7];\n        var m231 = this.rawData[8];\n        var m232 = this.rawData[9];\n        var m233 = this.rawData[10];\n        var m234 = this.rawData[11];\n        var m241 = this.rawData[12];\n        var m242 = this.rawData[13];\n        var m243 = this.rawData[14];\n        var m244 = this.rawData[15];\n        this.rawData[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;\n        this.rawData[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;\n        this.rawData[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;\n        this.rawData[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;\n        this.rawData[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;\n        this.rawData[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;\n        this.rawData[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;\n        this.rawData[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;\n        this.rawData[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;\n        this.rawData[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;\n        this.rawData[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;\n        this.rawData[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;\n        this.rawData[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;\n        this.rawData[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;\n        this.rawData[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;\n        this.rawData[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;\n        this._positionDirty = true;\n    };\n    /**\n     * Prepends an incremental rotation to a Matrix3D object.\n     */\n    Matrix3D.prototype.prependRotation = function (degrees, axis) {\n        var m = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n        /*\n         if ( pivot != null )\n         {\n         var p:Vector3D = pivot;\n         m.appendTranslation( p.x, p.y, p.z );\n         }\n         */\n        this.prepend(m);\n    };\n    /**\n     * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n     */\n    Matrix3D.prototype.prependScale = function (xScale, yScale, zScale) {\n        if (xScale == 1 && yScale == 1 && zScale == 1)\n            return;\n        var raw = Matrix3D.tempRawData;\n        raw[0] = xScale;\n        raw[1] = 0;\n        raw[2] = 0;\n        raw[3] = 0;\n        raw[4] = 0;\n        raw[5] = yScale;\n        raw[6] = 0;\n        raw[7] = 0;\n        raw[8] = 0;\n        raw[9] = 0;\n        raw[10] = zScale;\n        raw[11] = 0;\n        raw[12] = 0;\n        raw[13] = 0;\n        raw[14] = 0;\n        raw[15] = 1;\n        this.prepend(Matrix3D.tempMatrix);\n    };\n    /**\n     * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n     */\n    Matrix3D.prototype.prependTranslation = function (x, y, z) {\n        var raw = Matrix3D.tempRawData;\n        raw[0] = 1;\n        raw[1] = 0;\n        raw[2] = 0;\n        raw[3] = 0;\n        raw[4] = 0;\n        raw[5] = 1;\n        raw[6] = 0;\n        raw[7] = 0;\n        raw[8] = 0;\n        raw[9] = 0;\n        raw[10] = 1;\n        raw[11] = 0;\n        raw[12] = x;\n        raw[13] = y;\n        raw[14] = z;\n        raw[15] = 1;\n        this.prepend(Matrix3D.tempMatrix);\n    };\n    // TODO orientationStyle\n    /**\n     * Sets the transformation matrix's translation, rotation, and scale settings.\n     */\n    Matrix3D.prototype.recompose = function (components) {\n        var pos = components[0] || this.position;\n        this.identity();\n        var scale = components[3];\n        if (scale && (scale.x != 1 || scale.y != 1 || scale.z != 1))\n            this.appendScale(scale.x, scale.y, scale.z);\n        var skew = components[2];\n        if (skew && (skew.x != 0 || skew.y != 0 || skew.z != 0))\n            this.appendSkew(skew.x, skew.y, skew.z);\n        var sin;\n        var cos;\n        var raw = Matrix3D.tempRawData;\n        raw[12] = 0;\n        raw[13] = 0;\n        raw[14] = 0;\n        raw[15] = 0;\n        var rotation = components[1];\n        if (rotation) {\n            var angle = -rotation.x;\n            if (angle != 0) {\n                sin = Math.sin(angle);\n                cos = Math.cos(angle);\n                raw[0] = 1;\n                raw[1] = 0;\n                raw[2] = 0;\n                raw[3] = 0;\n                raw[4] = 0;\n                raw[5] = cos;\n                raw[6] = -sin;\n                raw[7] = 0;\n                raw[8] = 0;\n                raw[9] = sin;\n                raw[10] = cos;\n                raw[11] = 0;\n                this.append(Matrix3D.tempMatrix);\n            }\n            angle = -rotation.y;\n            if (angle != 0) {\n                sin = Math.sin(angle);\n                cos = Math.cos(angle);\n                raw[0] = cos;\n                raw[1] = 0;\n                raw[2] = sin;\n                raw[3] = 0;\n                raw[4] = 0;\n                raw[5] = 1;\n                raw[6] = 0;\n                raw[7] = 0;\n                raw[8] = -sin;\n                raw[9] = 0;\n                raw[10] = cos;\n                raw[11] = 0;\n                this.append(Matrix3D.tempMatrix);\n            }\n            angle = -rotation.z;\n            if (angle != 0) {\n                sin = Math.sin(angle);\n                cos = Math.cos(angle);\n                raw[0] = cos;\n                raw[1] = -sin;\n                raw[2] = 0;\n                raw[3] = 0;\n                raw[4] = sin;\n                raw[5] = cos;\n                raw[6] = 0;\n                raw[7] = 0;\n                raw[8] = 0;\n                raw[9] = 0;\n                raw[10] = 1;\n                raw[11] = 0;\n                this.append(Matrix3D.tempMatrix);\n            }\n        }\n        this.rawData[12] = pos.x;\n        this.rawData[13] = pos.y;\n        this.rawData[14] = pos.z;\n        if (components[0])\n            this._positionDirty = true;\n        this.rawData[15] = 1;\n        return true;\n    };\n    Matrix3D.prototype.transformVector = function (v, t) {\n        if (t === void 0) { t = null; }\n        if (v == null)\n            return t || new Vector3D_1.Vector3D();\n        var x = v.x;\n        var y = v.y;\n        var z = v.z;\n        if (!t)\n            t = new Vector3D_1.Vector3D();\n        t.x = x * this.rawData[0] + y * this.rawData[4] + z * this.rawData[8] + this.rawData[12];\n        t.y = x * this.rawData[1] + y * this.rawData[5] + z * this.rawData[9] + this.rawData[13];\n        t.z = x * this.rawData[2] + y * this.rawData[6] + z * this.rawData[10] + this.rawData[14];\n        t.w = x * this.rawData[3] + y * this.rawData[7] + z * this.rawData[11] + this.rawData[15];\n        return t;\n    };\n    Matrix3D.prototype.transformBox = function (b, t) {\n        if (t === void 0) { t = null; }\n        if (b == null)\n            return t || new Box_1.Box();\n        var minX, minY, minZ;\n        var maxX, maxY, maxZ;\n        maxX = b.width + (minX = b.x);\n        maxY = b.height + (minY = b.y);\n        maxZ = b.depth + (minZ = b.z);\n        if (!t)\n            t = new Box_1.Box();\n        //TODO: take account of shear\n        t.width = maxX * this.rawData[0] + maxY * this.rawData[4] + maxZ * this.rawData[8] + this.rawData[12] - (t.x = minX * this.rawData[0] + minY * this.rawData[4] + minZ * this.rawData[8] + this.rawData[12]);\n        t.height = maxX * this.rawData[1] + maxY * this.rawData[5] + maxZ * this.rawData[9] + this.rawData[13] - (t.y = minX * this.rawData[1] + minY * this.rawData[5] + minZ * this.rawData[9] + this.rawData[13]);\n        t.depth = maxX * this.rawData[2] + maxY * this.rawData[6] + maxZ * this.rawData[10] + this.rawData[14] - (t.z = minX * this.rawData[2] + minY * this.rawData[6] + minZ * this.rawData[10] + this.rawData[14]);\n        return t;\n    };\n    /**\n     * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\n     */\n    Matrix3D.prototype.transformVectors = function (vin, vout) {\n        var i = 0;\n        var x = 0, y = 0, z = 0;\n        while (i + 3 <= vin.length) {\n            x = vin[i];\n            y = vin[i + 1];\n            z = vin[i + 2];\n            vout[i] = x * this.rawData[0] + y * this.rawData[4] + z * this.rawData[8] + this.rawData[12];\n            vout[i + 1] = x * this.rawData[1] + y * this.rawData[5] + z * this.rawData[9] + this.rawData[13];\n            vout[i + 2] = x * this.rawData[2] + y * this.rawData[6] + z * this.rawData[10] + this.rawData[14];\n            i += 3;\n        }\n    };\n    /**\n     * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\n     */\n    Matrix3D.prototype.transpose = function () {\n        var raw = Matrix3D.tempRawData;\n        this.copyRawDataTo(raw);\n        this.rawData[1] = raw[4];\n        this.rawData[2] = raw[8];\n        this.rawData[3] = raw[12];\n        this.rawData[4] = raw[1];\n        this.rawData[6] = raw[9];\n        this.rawData[7] = raw[13];\n        this.rawData[8] = raw[2];\n        this.rawData[9] = raw[6];\n        this.rawData[11] = raw[14];\n        this.rawData[12] = raw[3];\n        this.rawData[13] = raw[7];\n        this.rawData[14] = raw[11];\n        this._positionDirty = true;\n    };\n    Matrix3D.getAxisRotation = function (x, y, z, degrees) {\n        // internal export class use by rotations which have been tested\n        var m = new Matrix3D();\n        var rad = degrees * MathConsts_1.MathConsts.DEGREES_TO_RADIANS;\n        var c = Math.cos(rad);\n        var s = Math.sin(rad);\n        var t = 1 - c;\n        var tmp1, tmp2;\n        m.rawData[0] = c + x * x * t;\n        m.rawData[5] = c + y * y * t;\n        m.rawData[10] = c + z * z * t;\n        tmp1 = x * y * t;\n        tmp2 = z * s;\n        m.rawData[1] = tmp1 + tmp2;\n        m.rawData[4] = tmp1 - tmp2;\n        tmp1 = x * z * t;\n        tmp2 = y * s;\n        m.rawData[8] = tmp1 + tmp2;\n        m.rawData[2] = tmp1 - tmp2;\n        tmp1 = y * z * t;\n        tmp2 = x * s;\n        m.rawData[9] = tmp1 - tmp2;\n        m.rawData[6] = tmp1 + tmp2;\n        return m;\n    };\n    Object.defineProperty(Matrix3D.prototype, \"determinant\", {\n        /**\n         * [read-only] A Number that determines whether a matrix is invertible.\n         */\n        get: function () {\n            return ((this.rawData[0] * this.rawData[5] - this.rawData[4] * this.rawData[1]) * (this.rawData[10] * this.rawData[15] - this.rawData[14] * this.rawData[11]) - (this.rawData[0] * this.rawData[9] - this.rawData[8] * this.rawData[1]) * (this.rawData[6] * this.rawData[15] - this.rawData[14] * this.rawData[7]) + (this.rawData[0] * this.rawData[13] - this.rawData[12] * this.rawData[1]) * (this.rawData[6] * this.rawData[11] - this.rawData[10] * this.rawData[7]) + (this.rawData[4] * this.rawData[9] - this.rawData[8] * this.rawData[5]) * (this.rawData[2] * this.rawData[15] - this.rawData[14] * this.rawData[3]) - (this.rawData[4] * this.rawData[13] - this.rawData[12] * this.rawData[5]) * (this.rawData[2] * this.rawData[11] - this.rawData[10] * this.rawData[3]) + (this.rawData[8] * this.rawData[13] - this.rawData[12] * this.rawData[9]) * (this.rawData[2] * this.rawData[7] - this.rawData[6] * this.rawData[3]));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix3D.prototype, \"position\", {\n        /**\n         * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\n         * transformation's frame of reference.\n         */\n        get: function () {\n            if (this._positionDirty) {\n                this._positionDirty = false;\n                this._position.x = this.rawData[12];\n                this._position.y = this.rawData[13];\n                this._position.z = this.rawData[14];\n            }\n            return this._position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Matrix3D.prototype.invalidatePosition = function () {\n        this._positionDirty = true;\n    };\n    Matrix3D.prototype.toFixed = function (decimalPlace) {\n        var magnitude = Math.pow(10, decimalPlace);\n        return \"matrix3d(\" + Math.round(this.rawData[0] * magnitude) / magnitude + \",\" + Math.round(this.rawData[1] * magnitude) / magnitude + \",\" + Math.round(this.rawData[2] * magnitude) / magnitude + \",\" + Math.round(this.rawData[3] * magnitude) / magnitude + \",\" + Math.round(this.rawData[4] * magnitude) / magnitude + \",\" + Math.round(this.rawData[5] * magnitude) / magnitude + \",\" + Math.round(this.rawData[6] * magnitude) / magnitude + \",\" + Math.round(this.rawData[7] * magnitude) / magnitude + \",\" + Math.round(this.rawData[8] * magnitude) / magnitude + \",\" + Math.round(this.rawData[9] * magnitude) / magnitude + \",\" + Math.round(this.rawData[10] * magnitude) / magnitude + \",\" + Math.round(this.rawData[11] * magnitude) / magnitude + \",\" + Math.round(this.rawData[12] * magnitude) / magnitude + \",\" + Math.round(this.rawData[13] * magnitude) / magnitude + \",\" + Math.round(this.rawData[14] * magnitude) / magnitude + \",\" + Math.round(this.rawData[15] * magnitude) / magnitude + \")\";\n    };\n    Matrix3D.prototype.toString = function () {\n        return \"matrix3d(\" + Math.round(this.rawData[0] * 1000) / 1000 + \",\" + Math.round(this.rawData[1] * 1000) / 1000 + \",\" + Math.round(this.rawData[2] * 1000) / 1000 + \",\" + Math.round(this.rawData[3] * 1000) / 1000 + \",\" + Math.round(this.rawData[4] * 1000) / 1000 + \",\" + Math.round(this.rawData[5] * 1000) / 1000 + \",\" + Math.round(this.rawData[6] * 1000) / 1000 + \",\" + Math.round(this.rawData[7] * 1000) / 1000 + \",\" + Math.round(this.rawData[8] * 1000) / 1000 + \",\" + Math.round(this.rawData[9] * 1000) / 1000 + \",\" + Math.round(this.rawData[10] * 1000) / 1000 + \",\" + Math.round(this.rawData[11] * 1000) / 1000 + \",\" + Math.round(this.rawData[12] * 1000) / 1000 + \",\" + Math.round(this.rawData[13] * 1000) / 1000 + \",\" + Math.round(this.rawData[14] * 1000) / 1000 + \",\" + Math.round(this.rawData[15] * 1000) / 1000 + \")\";\n    };\n    Matrix3D.tempMatrix = new Matrix3D();\n    Matrix3D.tempRawData = Matrix3D.tempMatrix.rawData;\n    return Matrix3D;\n}());\nexports.Matrix3D = Matrix3D;\n\n},{\"../errors/ArgumentError\":\"awayjs-core/lib/errors/ArgumentError\",\"../geom/Box\":\"awayjs-core/lib/geom/Box\",\"../geom/MathConsts\":\"awayjs-core/lib/geom/MathConsts\",\"../geom/Orientation3D\":\"awayjs-core/lib/geom/Orientation3D\",\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/geom/Matrix\":[function(require,module,exports){\n\"use strict\";\nvar Point_1 = require(\"../geom/Point\");\nvar ArgumentError_1 = require(\"../errors/ArgumentError\");\n/**\n * The Matrix export class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n *\n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n *\n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n *\n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n *\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n *\n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix export class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n *\n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n *\n * <p>The Matrix export class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n *\n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n *\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nvar Matrix = (function () {\n    /**\n     * Creates a new Matrix object with the specified parameters. In matrix\n     * notation, the properties are organized like this:\n     *\n     * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n     * constructor, it creates an <i>identity matrix</i> with the following\n     * values:</p>\n     *\n     * <p>In matrix notation, the identity matrix looks like this:</p>\n     *\n     * @param a  The value that affects the positioning of pixels along the\n     *           <i>x</i> axis when scaling or rotating an image.\n     * @param b  The value that affects the positioning of pixels along the\n     *           <i>y</i> axis when rotating or skewing an image.\n     * @param c  The value that affects the positioning of pixels along the\n     *           <i>x</i> axis when rotating or skewing an image.\n     * @param d  The value that affects the positioning of pixels along the\n     *           <i>y</i> axis when scaling or rotating an image..\n     * @param tx The distance by which to translate each point along the <i>x</i>\n     *           axis.\n     * @param ty The distance by which to translate each point along the <i>y</i>\n     *           axis.\n     */\n    function Matrix(a, b, c, d, tx, ty) {\n        if (a === void 0) { a = 1; }\n        if (b === void 0) { b = 0; }\n        if (c === void 0) { c = 0; }\n        if (d === void 0) { d = 1; }\n        if (tx === void 0) { tx = 0; }\n        if (ty === void 0) { ty = 0; }\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n    }\n    /**\n     * Returns a new Matrix object that is a clone of this matrix, with an exact\n     * copy of the contained object.\n     *\n     * @return A Matrix object.\n     */\n    Matrix.prototype.clone = function () {\n        return new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n    };\n    /**\n     * Concatenates a matrix with the current matrix, effectively combining the\n     * geometric effects of the two. In mathematical terms, concatenating two\n     * matrixes is the same as combining them using matrix multiplication.\n     *\n     * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n     * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n     * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n     * transforms <code>m1</code> into a matrix that scales an object by a factor\n     * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n     *\n     * <p>This method replaces the source matrix with the concatenated matrix. If\n     * you want to concatenate two matrixes without altering either of the two\n     * source matrixes, first copy the source matrix by using the\n     * <code>clone()</code> method, as shown in the Class Examples section.</p>\n     *\n     * @param matrix The matrix to be concatenated to the source matrix.\n     */\n    Matrix.prototype.concat = function (matrix) {\n        var a1 = this.a * matrix.a + this.b * matrix.c;\n        this.b = this.a * matrix.b + this.b * matrix.d;\n        this.a = a1;\n        var c1 = this.c * matrix.a + this.d * matrix.c;\n        this.d = this.c * matrix.b + this.d * matrix.d;\n        this.c = c1;\n        var tx1 = this.tx * matrix.a + this.ty * matrix.c + matrix.tx;\n        this.ty = this.tx * matrix.b + this.ty * matrix.d + matrix.ty;\n        this.tx = tx1;\n    };\n    /**\n     * Copies a Vector3D object into specific column of the calling Matrix3D\n     * object.\n     *\n     * @param column   The column from which to copy the data from.\n     * @param vector3D The Vector3D object from which to copy the data.\n     */\n    Matrix.prototype.copyColumnFrom = function (column, vector3D) {\n        if (column > 2) {\n            throw \"Column \" + column + \" out of bounds (2)\";\n        }\n        else if (column == 0) {\n            this.a = vector3D.x;\n            this.c = vector3D.y;\n        }\n        else if (column == 1) {\n            this.b = vector3D.x;\n            this.d = vector3D.y;\n        }\n        else {\n            this.tx = vector3D.x;\n            this.ty = vector3D.y;\n        }\n    };\n    /**\n     * Copies specific column of the calling Matrix object into the Vector3D\n     * object. The w element of the Vector3D object will not be changed.\n     *\n     * @param column   The column from which to copy the data from.\n     * @param vector3D The Vector3D object from which to copy the data.\n     */\n    Matrix.prototype.copyColumnTo = function (column, vector3D) {\n        if (column > 2) {\n            throw new ArgumentError_1.ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\n        }\n        else if (column == 0) {\n            vector3D.x = this.a;\n            vector3D.y = this.c;\n            vector3D.z = 0;\n        }\n        else if (column == 1) {\n            vector3D.x = this.b;\n            vector3D.y = this.d;\n            vector3D.z = 0;\n        }\n        else {\n            vector3D.x = this.tx;\n            vector3D.y = this.ty;\n            vector3D.z = 1;\n        }\n    };\n    /**\n     * Copies all of the matrix data from the source Point object into the\n     * calling Matrix object.\n     *\n     * @param sourceMatrix The Matrix object from which to copy the data.\n     */\n    Matrix.prototype.copyFrom = function (sourceMatrix) {\n        this.a = sourceMatrix.a;\n        this.b = sourceMatrix.b;\n        this.c = sourceMatrix.c;\n        this.d = sourceMatrix.d;\n        this.tx = sourceMatrix.tx;\n        this.ty = sourceMatrix.ty;\n    };\n    /**\n     * Copies a Vector3D object into specific row of the calling Matrix object.\n     *\n     * @param row      The row from which to copy the data from.\n     * @param vector3D The Vector3D object from which to copy the data.\n     */\n    Matrix.prototype.copyRowFrom = function (row, vector3D) {\n        if (row > 2) {\n            throw new ArgumentError_1.ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n        }\n        else if (row == 0) {\n            this.a = vector3D.x;\n            this.c = vector3D.y;\n        }\n        else if (row == 1) {\n            this.b = vector3D.x;\n            this.d = vector3D.y;\n        }\n        else {\n            this.tx = vector3D.x;\n            this.ty = vector3D.y;\n        }\n    };\n    /**\n     * Copies specific row of the calling Matrix object into the Vector3D object.\n     * The w element of the Vector3D object will not be changed.\n     *\n     * @param row      The row from which to copy the data from.\n     * @param vector3D The Vector3D object from which to copy the data.\n     */\n    Matrix.prototype.copyRowTo = function (row, vector3D) {\n        if (row > 2) {\n            throw new ArgumentError_1.ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n        }\n        else if (row == 0) {\n            vector3D.x = this.a;\n            vector3D.y = this.b;\n            vector3D.z = this.tx;\n        }\n        else if (row == 1) {\n            vector3D.x = this.c;\n            vector3D.y = this.d;\n            vector3D.z = this.ty;\n        }\n        else {\n            vector3D.setTo(0, 0, 1);\n        }\n    };\n    /**\n     * Includes parameters for scaling, rotation, and translation. When applied\n     * to a matrix it sets the matrix's values based on those parameters.\n     *\n     * <p>Using the <code>createBox()</code> method lets you obtain the same\n     * matrix as you would if you applied the <code>identity()</code>,\n     * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n     * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n     * 100, 100)</code> has the same effect as the following:</p>\n     *\n     * @param scaleX   The factor by which to scale horizontally.\n     * @param scaleY   The factor by which scale vertically.\n     * @param rotation The amount to rotate, in radians.\n     * @param tx       The number of pixels to translate(move) to the right\n     *                 along the <i>x</i> axis.\n     * @param ty       The number of pixels to translate(move) down along the\n     *                 <i>y</i> axis.\n     */\n    Matrix.prototype.createBox = function (scaleX, scaleY, rotation, tx, ty) {\n        if (rotation === void 0) { rotation = 0; }\n        if (tx === void 0) { tx = 0; }\n        if (ty === void 0) { ty = 0; }\n        this.a = scaleX;\n        this.d = scaleY;\n        this.b = rotation;\n        this.tx = tx;\n        this.ty = ty;\n    };\n    /**\n     * Creates the specific style of matrix expected by the\n     * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n     * methods of the Graphics class. Width and height are scaled to a\n     * <code>scaleX</code>/<code>scaleY</code> pair and the\n     * <code>tx</code>/<code>ty</code> values are offset by half the width and\n     * height.\n     *\n     * <p>For example, consider a gradient with the following\n     * characteristics:</p>\n     *\n     * <ul>\n     *   <li><code>GradientType.LINEAR</code></li>\n     *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n     * 255]</code></li>\n     *   <li><code>SpreadMethod.PAD</code></li>\n     *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n     * </ul>\n     *\n     * <p>The following illustrations show gradients in which the matrix was\n     * defined using the <code>createGradientBox()</code> method with different\n     * parameter settings:</p>\n     *\n     * @param width    The width of the gradient box.\n     * @param height   The height of the gradient box.\n     * @param rotation The amount to rotate, in radians.\n     * @param tx       The distance, in pixels, to translate to the right along\n     *                 the <i>x</i> axis. This value is offset by half of the\n     *                 <code>width</code> parameter.\n     * @param ty       The distance, in pixels, to translate down along the\n     *                 <i>y</i> axis. This value is offset by half of the\n     *                 <code>height</code> parameter.\n     */\n    Matrix.prototype.createGradientBox = function (width, height, rotation, tx, ty) {\n        if (rotation === void 0) { rotation = 0; }\n        if (tx === void 0) { tx = 0; }\n        if (ty === void 0) { ty = 0; }\n        this.a = width / 1638.4;\n        this.d = height / 1638.4;\n        if (rotation != 0.0) {\n            var cos = Math.cos(rotation);\n            var sin = Math.sin(rotation);\n            this.b = sin * this.d;\n            this.c = -sin * this.a;\n            this.a *= cos;\n            this.d *= cos;\n        }\n        else {\n            this.b = this.c = 0;\n        }\n        this.tx = tx + width / 2;\n        this.ty = ty + height / 2;\n    };\n    /**\n     * Given a point in the pretransform coordinate space, returns the\n     * coordinates of that point after the transformation occurs. Unlike the\n     * standard transformation applied using the <code>transformPoint()</code>\n     * method, the <code>deltaTransformPoint()</code> method's transformation\n     * does not consider the translation parameters <code>tx</code> and\n     * <code>ty</code>.\n     *\n     * @param point The point for which you want to get the result of the matrix\n     *              transformation.\n     * @return The point resulting from applying the matrix transformation.\n     */\n    Matrix.prototype.deltaTransformPoint = function (point) {\n        return new Point_1.Point(point.x * this.a + point.y * this.c, point.x * this.b + point.y * this.d);\n    };\n    /**\n     * Sets each matrix property to a value that causes a null transformation. An\n     * object transformed by applying an identity matrix will be identical to the\n     * original.\n     *\n     * <p>After calling the <code>identity()</code> method, the resulting matrix\n     * has the following properties: <code>a</code>=1, <code>b</code>=0,\n     * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n     * <code>ty</code>=0.</p>\n     *\n     * <p>In matrix notation, the identity matrix looks like this:</p>\n     *\n     */\n    Matrix.prototype.identity = function () {\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.tx = 0;\n        this.ty = 0;\n    };\n    /**\n     * Performs the opposite transformation of the original matrix. You can apply\n     * an inverted matrix to an object to undo the transformation performed when\n     * applying the original matrix.\n     */\n    Matrix.prototype.invert = function () {\n        var norm = this.a * this.d - this.b * this.c;\n        if (norm == 0) {\n            this.a = this.b = this.c = this.d = 0;\n            this.tx = -this.tx;\n            this.ty = -this.ty;\n        }\n        else {\n            norm = 1.0 / norm;\n            var a1 = this.d * norm;\n            this.d = this.a * norm;\n            this.a = a1;\n            this.b *= -norm;\n            this.c *= -norm;\n            var tx1 = -this.a * this.tx - this.c * this.ty;\n            this.ty = -this.b * this.tx - this.d * this.ty;\n            this.tx = tx1;\n        }\n    };\n    /**\n     * Returns a new Matrix object that is a clone of this matrix, with an exact\n     * copy of the contained object.\n     *\n     * @param matrix The matrix for which you want to get the result of the matrix\n     *               transformation.\n     * @return A Matrix object.\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var result = new Matrix();\n        result.a = this.a * matrix.a + this.b * matrix.c;\n        result.b = this.a * matrix.b + this.b * matrix.d;\n        result.c = this.c * matrix.a + this.d * matrix.c;\n        result.d = this.c * matrix.b + this.d * matrix.d;\n        result.tx = this.tx * matrix.a + this.ty * matrix.c + matrix.tx;\n        result.ty = this.tx * matrix.b + this.ty * matrix.d + matrix.ty;\n        return result;\n    };\n    /**\n     * Applies a rotation transformation to the Matrix object.\n     *\n     * <p>The <code>rotate()</code> method alters the <code>a</code>,\n     * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n     * Matrix object. In matrix notation, this is the same as concatenating the\n     * current matrix with the following:</p>\n     *\n     * @param angle The rotation angle in radians.\n     */\n    Matrix.prototype.rotate = function (angle) {\n        var cos = Math.cos(angle);\n        var sin = Math.sin(angle);\n        var a1 = this.a * cos - this.b * sin;\n        this.b = this.a * sin + this.b * cos;\n        this.a = a1;\n        var c1 = this.c * cos - this.d * sin;\n        this.d = this.c * sin + this.d * cos;\n        this.c = c1;\n        var tx1 = this.tx * cos - this.ty * sin;\n        this.ty = this.tx * sin + this.ty * cos;\n        this.tx = tx1;\n    };\n    /**\n     * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n     * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n     * <code>sy</code>.\n     *\n     * <p>The <code>scale()</code> method alters the <code>a</code> and\n     * <code>d</code> properties of the Matrix object. In matrix notation, this\n     * is the same as concatenating the current matrix with the following\n     * matrix:</p>\n     *\n     * @param sx A multiplier used to scale the object along the <i>x</i> axis.\n     * @param sy A multiplier used to scale the object along the <i>y</i> axis.\n     */\n    Matrix.prototype.scale = function (sx, sy) {\n        this.a *= sx;\n        this.b *= sy;\n        this.c *= sx;\n        this.d *= sy;\n        this.tx *= sx;\n        this.ty *= sy;\n    };\n    /**\n     * Sets the members of Matrix to the specified values.\n     *\n     * @param a  The value that affects the positioning of pixels along the\n     *           <i>x</i> axis when scaling or rotating an image.\n     * @param b  The value that affects the positioning of pixels along the\n     *           <i>y</i> axis when rotating or skewing an image.\n     * @param c  The value that affects the positioning of pixels along the\n     *           <i>x</i> axis when rotating or skewing an image.\n     * @param d  The value that affects the positioning of pixels along the\n     *           <i>y</i> axis when scaling or rotating an image..\n     * @param tx The distance by which to translate each point along the <i>x</i>\n     *           axis.\n     * @param ty The distance by which to translate each point along the <i>y</i>\n     *           axis.\n     */\n    Matrix.prototype.setTo = function (a, b, c, d, tx, ty) {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n    };\n    /**\n     * Returns a text value listing the properties of the Matrix object.\n     *\n     * @return A string containing the values of the properties of the Matrix\n     *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n     *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n     */\n    Matrix.prototype.toString = function () {\n        return \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n    };\n    /**\n     * Returns the result of applying the geometric transformation represented by\n     * the Matrix object to the specified point.\n     *\n     * @param point The point for which you want to get the result of the Matrix\n     *              transformation.\n     * @return The point resulting from applying the Matrix transformation.\n     */\n    Matrix.prototype.transformPoint = function (point) {\n        return new Point_1.Point(point.x * this.a + point.y * this.c + this.tx, point.x * this.b + point.y * this.d + this.ty);\n    };\n    /**\n     * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n     * by the <code>dx</code> and <code>dy</code> parameters.\n     *\n     * @param dx The amount of movement along the <i>x</i> axis to the right, in\n     *           pixels.\n     * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\n     */\n    Matrix.prototype.translate = function (dx, dy) {\n        this.tx += dx;\n        this.ty += dy;\n    };\n    return Matrix;\n}());\nexports.Matrix = Matrix;\n\n},{\"../errors/ArgumentError\":\"awayjs-core/lib/errors/ArgumentError\",\"../geom/Point\":\"awayjs-core/lib/geom/Point\"}],\"awayjs-core/lib/geom/Orientation3D\":[function(require,module,exports){\n\"use strict\";\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nvar Orientation3D = (function () {\n    function Orientation3D() {\n    }\n    /**\n     * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\n     * @type {string}\n     */\n    Orientation3D.AXIS_ANGLE = \"axisAngle\";\n    /**\n     * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\n     * @type {string}\n     */\n    Orientation3D.EULER_ANGLES = \"eulerAngles\";\n    /**\n     * The quaternion orientation uses complex numbers.\n     * @type {string}\n     */\n    Orientation3D.QUATERNION = \"quaternion\";\n    return Orientation3D;\n}());\nexports.Orientation3D = Orientation3D;\n\n},{}],\"awayjs-core/lib/geom/Plane3D\":[function(require,module,exports){\n\"use strict\";\nvar PlaneClassification_1 = require(\"../geom/PlaneClassification\");\nvar Plane3D = (function () {\n    /**\n     * Create a Plane3D with ABCD coefficients\n     */\n    function Plane3D(a, b, c, d) {\n        if (a === void 0) { a = 0; }\n        if (b === void 0) { b = 0; }\n        if (c === void 0) { c = 0; }\n        if (d === void 0) { d = 0; }\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        if (a == 0 && b == 0) {\n            this._iAlignment = Plane3D.ALIGN_XY_AXIS;\n        }\n        else if (b == 0 && c == 0) {\n            this._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n        }\n        else if (a == 0 && c == 0) {\n            this._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n        }\n        else {\n            this._iAlignment = Plane3D.ALIGN_ANY;\n        }\n    }\n    /**\n     * Fills this Plane3D with the coefficients from 3 points in 3d space.\n     * @param p0 Vector3D\n     * @param p1 Vector3D\n     * @param p2 Vector3D\n     */\n    Plane3D.prototype.fromPoints = function (p0, p1, p2) {\n        var d1x = p1.x - p0.x;\n        var d1y = p1.y - p0.y;\n        var d1z = p1.z - p0.z;\n        var d2x = p2.x - p0.x;\n        var d2y = p2.y - p0.y;\n        var d2z = p2.z - p0.z;\n        this.a = d1y * d2z - d1z * d2y;\n        this.b = d1z * d2x - d1x * d2z;\n        this.c = d1x * d2y - d1y * d2x;\n        this.d = this.a * p0.x + this.b * p0.y + this.c * p0.z;\n        // not using epsilon, since a plane is infinite and a small incorrection can grow very large\n        if (this.a == 0 && this.b == 0) {\n            this._iAlignment = Plane3D.ALIGN_XY_AXIS;\n        }\n        else if (this.b == 0 && this.c == 0) {\n            this._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n        }\n        else if (this.a == 0 && this.c == 0) {\n            this._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n        }\n        else {\n            this._iAlignment = Plane3D.ALIGN_ANY;\n        }\n    };\n    /**\n     * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\n     * @param normal Vector3D\n     * @param point  Vector3D\n     */\n    Plane3D.prototype.fromNormalAndPoint = function (normal, point) {\n        this.a = normal.x;\n        this.b = normal.y;\n        this.c = normal.z;\n        this.d = this.a * point.x + this.b * point.y + this.c * point.z;\n        if (this.a == 0 && this.b == 0) {\n            this._iAlignment = Plane3D.ALIGN_XY_AXIS;\n        }\n        else if (this.b == 0 && this.c == 0) {\n            this._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n        }\n        else if (this.a == 0 && this.c == 0) {\n            this._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n        }\n        else {\n            this._iAlignment = Plane3D.ALIGN_ANY;\n        }\n    };\n    /**\n     * Normalize this Plane3D\n     * @return Plane3D This Plane3D.\n     */\n    Plane3D.prototype.normalize = function () {\n        var len = 1 / Math.sqrt(this.a * this.a + this.b * this.b + this.c * this.c);\n        this.a *= len;\n        this.b *= len;\n        this.c *= len;\n        this.d *= len;\n        return this;\n    };\n    /**\n     * Returns the signed distance between this Plane3D and the point p.\n     * @param p Vector3D\n     * @returns Number\n     */\n    Plane3D.prototype.distance = function (p) {\n        if (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\n            return this.a * p.x - this.d;\n        }\n        else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\n            return this.b * p.y - this.d;\n        }\n        else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\n            return this.c * p.z - this.d;\n        }\n        else {\n            return this.a * p.x + this.b * p.y + this.c * p.z - this.d;\n        }\n    };\n    /**\n     * Classify a point against this Plane3D. (in front, back or intersecting)\n     * @param p Vector3D\n     * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\n     */\n    Plane3D.prototype.classifyPoint = function (p, epsilon) {\n        if (epsilon === void 0) { epsilon = 0.01; }\n        // check NaN\n        if (this.d != this.d)\n            return PlaneClassification_1.PlaneClassification.FRONT;\n        var len;\n        if (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\n            len = this.a * p.x - this.d;\n        else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\n            len = this.b * p.y - this.d;\n        else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\n            len = this.c * p.z - this.d;\n        else\n            len = this.a * p.x + this.b * p.y + this.c * p.z - this.d;\n        if (len < -epsilon)\n            return PlaneClassification_1.PlaneClassification.BACK;\n        else if (len > epsilon)\n            return PlaneClassification_1.PlaneClassification.FRONT;\n        else\n            return PlaneClassification_1.PlaneClassification.INTERSECT;\n    };\n    Plane3D.prototype.toString = function () {\n        return \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\n    };\n    // indicates the alignment of the plane\n    Plane3D.ALIGN_ANY = 0;\n    Plane3D.ALIGN_XY_AXIS = 1;\n    Plane3D.ALIGN_YZ_AXIS = 2;\n    Plane3D.ALIGN_XZ_AXIS = 3;\n    return Plane3D;\n}());\nexports.Plane3D = Plane3D;\n\n},{\"../geom/PlaneClassification\":\"awayjs-core/lib/geom/PlaneClassification\"}],\"awayjs-core/lib/geom/PlaneClassification\":[function(require,module,exports){\n\"use strict\";\nvar PlaneClassification = (function () {\n    function PlaneClassification() {\n    }\n    // \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\n    PlaneClassification.BACK = 0;\n    PlaneClassification.FRONT = 1;\n    PlaneClassification.IN = 0;\n    PlaneClassification.OUT = 1;\n    PlaneClassification.INTERSECT = 2;\n    return PlaneClassification;\n}());\nexports.PlaneClassification = PlaneClassification;\n\n},{}],\"awayjs-core/lib/geom/Point\":[function(require,module,exports){\n\"use strict\";\n/**\n * The Point object represents a location in a two-dimensional coordinate\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\n * represents the vertical axis.\n *\n * <p>The following code creates a point at(0,0):</p>\n *\n * <p>Methods and properties of the following classes use Point objects:</p>\n *\n * <ul>\n *   <li>BitmapData</li>\n *   <li>DisplayObject</li>\n *   <li>DisplayObjectContainer</li>\n *   <li>DisplacementMapFilter</li>\n *   <li>NativeWindow</li>\n *   <li>Matrix</li>\n *   <li>Rectangle</li>\n * </ul>\n *\n * <p>You can use the <code>new Point()</code> constructor to create a Point\n * object.</p>\n */\nvar Point = (function () {\n    /**\n     * Creates a new point. If you pass no parameters to this method, a point is\n     * created at(0,0).\n     *\n     * @param x The horizontal coordinate.\n     * @param y The vertical coordinate.\n     */\n    function Point(x, y) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        this.x = x;\n        this.y = y;\n    }\n    Object.defineProperty(Point.prototype, \"length\", {\n        /**\n         * The length of the line segment from(0,0) to this point.\n         */\n        get: function () {\n            return Math.sqrt(this.x * this.x + this.y * this.y);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds the coordinates of another point to the coordinates of this point to\n     * create a new point.\n     *\n     * @param v The point to be added.\n     * @return The new point.\n     */\n    Point.prototype.add = function (v) {\n        return new Point(this.x + v.x, this.y + v.y);\n    };\n    /**\n     * Creates a copy of this Point object.\n     *\n     * @return The new Point object.\n     */\n    Point.prototype.clone = function () {\n        return new Point(this.x, this.y);\n    };\n    Point.prototype.copyFrom = function (sourcePoint) {\n    };\n    /**\n     * Determines whether two points are equal. Two points are equal if they have\n     * the same <i>x</i> and <i>y</i> values.\n     *\n     * @param toCompare The point to be compared.\n     * @return A value of <code>true</code> if the object is equal to this Point\n     *         object; <code>false</code> if it is not equal.\n     */\n    Point.prototype.equals = function (toCompare) {\n        return (this.x == toCompare.x && this.y == toCompare.y);\n    };\n    /**\n     * Scales the line segment between(0,0) and the current point to a set\n     * length.\n     *\n     * @param thickness The scaling value. For example, if the current point is\n     *                 (0,5), and you normalize it to 1, the point returned is\n     *                  at(0,1).\n     */\n    Point.prototype.normalize = function (thickness) {\n        if (thickness === void 0) { thickness = 1; }\n        if (this.length != 0) {\n            var invLength = thickness / this.length;\n            this.x *= invLength;\n            this.y *= invLength;\n            return;\n        }\n        throw \"Cannot divide by zero length.\";\n    };\n    /**\n     * Offsets the Point object by the specified amount. The value of\n     * <code>dx</code> is added to the original value of <i>x</i> to create the\n     * new <i>x</i> value. The value of <code>dy</code> is added to the original\n     * value of <i>y</i> to create the new <i>y</i> value.\n     *\n     * @param dx The amount by which to offset the horizontal coordinate,\n     *           <i>x</i>.\n     * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\n     */\n    Point.prototype.offset = function (dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    };\n    Point.prototype.setTo = function (xa, ya) {\n        this.x = xa;\n        this.y = ya;\n    };\n    /**\n     * Subtracts the coordinates of another point from the coordinates of this\n     * point to create a new point.\n     *\n     * @param v The point to be subtracted.\n     * @return The new point.\n     */\n    Point.prototype.subtract = function (v) {\n        return new Point(this.x - v.x, this.y - v.y);\n    };\n    /**\n     * Returns a string that contains the values of the <i>x</i> and <i>y</i>\n     * coordinates. The string has the form <code>\"(x=<i>x</i>,\n     * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\n     * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\n     *\n     * @return The string representation of the coordinates.\n     */\n    Point.prototype.toString = function () {\n        return \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\n    };\n    /**\n     * Returns the distance between <code>pt1</code> and <code>pt2</code>.\n     *\n     * @param pt1 The first point.\n     * @param pt2 The second point.\n     * @return The distance between the first and second points.\n     */\n    Point.distance = function (pt1, pt2) {\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    };\n    /**\n     * Determines a point between two specified points. The parameter\n     * <code>f</code> determines where the new interpolated point is located\n     * relative to the two end points specified by parameters <code>pt1</code>\n     * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\n     * is to <code>1.0</code>, the closer the interpolated point is to the first\n     * point(parameter <code>pt1</code>). The closer the value of the parameter\n     * <code>f</code> is to 0, the closer the interpolated point is to the second\n     * point(parameter <code>pt2</code>).\n     *\n     * @param pt1 The first point.\n     * @param pt2 The second point.\n     * @param f   The level of interpolation between the two points. Indicates\n     *            where the new point will be, along the line between\n     *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\n     *            <code>pt1</code> is returned; if <code>f</code>=0,\n     *            <code>pt2</code> is returned.\n     * @return The new, interpolated point.\n     */\n    Point.interpolate = function (pt1, pt2, f) {\n        return new Point(pt2.x + (pt1.x - pt2.x) * f, pt2.y + (pt1.y - pt2.y) * f);\n    };\n    /**\n     * Converts a pair of polar coordinates to a Cartesian point coordinate.\n     *\n     * @param len   The length coordinate of the polar pair.\n     * @param angle The angle, in radians, of the polar pair.\n     * @return The Cartesian point.\n     */\n    Point.polar = function (len, angle) {\n        return new Point(len * Math.cos(angle), len * Math.sin(angle));\n    };\n    return Point;\n}());\nexports.Point = Point;\n\n},{}],\"awayjs-core/lib/geom/PoissonLookup\":[function(require,module,exports){\n\"use strict\";\nvar PoissonLookup = (function () {\n    function PoissonLookup() {\n    }\n    PoissonLookup.initDistributions = function () {\n        // precalculated for best control\n        this._distributions = new Array();\n        this._distributions[0] = new Array(0.3082841, 0.4320919);\n        this._distributions[1] = new Array(0.3082841, 0.4320919, -0.2274942, -0.6640266);\n        this._distributions[2] = new Array(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\n        this._distributions[3] = new Array(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\n        this._distributions[4] = new Array(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\n        this._distributions[5] = new Array(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\n        this._distributions[6] = new Array(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\n        this._distributions[7] = new Array(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\n        this._distributions[8] = new Array(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\n        this._distributions[9] = new Array(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\n        this._distributions[10] = new Array(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\n        this._distributions[11] = new Array(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\n        this._distributions[12] = new Array(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\n        this._distributions[13] = new Array(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\n        this._distributions[14] = new Array(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\n        this._distributions[15] = new Array(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\n        this._distributions[16] = new Array(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\n        this._distributions[17] = new Array(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\n        this._distributions[18] = new Array(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\n        this._distributions[19] = new Array(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\n        this._distributions[20] = new Array(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\n        this._distributions[21] = new Array(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\n        this._distributions[22] = new Array(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\n        this._distributions[23] = new Array(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\n        this._distributions[24] = new Array(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\n        this._distributions[25] = new Array(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\n        this._distributions[26] = new Array(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\n        this._distributions[27] = new Array(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\n        this._distributions[28] = new Array(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\n        this._distributions[29] = new Array(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\n        this._distributions[30] = new Array(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\n        this._distributions[31] = new Array(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\n    };\n    PoissonLookup.getDistribution = function (n /*int*/) {\n        if (!this._distributions)\n            this.initDistributions();\n        if (n < 2 || n > 32)\n            return null;\n        return this._distributions[n - 1];\n    };\n    return PoissonLookup;\n}());\nexports.PoissonLookup = PoissonLookup;\n\n},{}],\"awayjs-core/lib/geom/Quaternion\":[function(require,module,exports){\n\"use strict\";\nvar Matrix3DUtils_1 = require(\"../geom/Matrix3DUtils\");\nvar Orientation3D_1 = require(\"../geom/Orientation3D\");\nvar Matrix3D_1 = require(\"../geom/Matrix3D\");\nvar Vector3D_1 = require(\"../geom/Vector3D\");\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nvar Quaternion = (function () {\n    /**\n     * Creates a new Quaternion object.\n     * @param x The x value of the quaternion.\n     * @param y The y value of the quaternion.\n     * @param z The z value of the quaternion.\n     * @param w The w value of the quaternion.\n     */\n    function Quaternion(x, y, z, w) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (w === void 0) { w = 1; }\n        /**\n         * The x value of the quaternion.\n         */\n        this.x = 0;\n        /**\n         * The y value of the quaternion.\n         */\n        this.y = 0;\n        /**\n         * The z value of the quaternion.\n         */\n        this.z = 0;\n        /**\n         * The w value of the quaternion.\n         */\n        this.w = 1;\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n    Object.defineProperty(Quaternion.prototype, \"magnitude\", {\n        /**\n         * Returns the magnitude of the quaternion object.\n         */\n        get: function () {\n            return Math.sqrt(this.w * this.w + this.x * this.x + this.y * this.y + this.z * this.z);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Fills the quaternion object with the result from a multiplication of two quaternion objects.\n     *\n     * @param    qa    The first quaternion in the multiplication.\n     * @param    qb    The second quaternion in the multiplication.\n     */\n    Quaternion.prototype.multiply = function (qa, qb) {\n        var w1 = qa.w, x1 = qa.x, y1 = qa.y, z1 = qa.z;\n        var w2 = qb.w, x2 = qb.x, y2 = qb.y, z2 = qb.z;\n        this.w = w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2;\n        this.x = w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2;\n        this.y = w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2;\n        this.z = w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2;\n    };\n    Quaternion.prototype.multiplyVector = function (vector, target) {\n        if (target === void 0) { target = null; }\n        //target ||= new Quaternion();\n        if (target === null) {\n            target = new Quaternion();\n        }\n        var x2 = vector.x;\n        var y2 = vector.y;\n        var z2 = vector.z;\n        target.w = -this.x * x2 - this.y * y2 - this.z * z2;\n        target.x = this.w * x2 + this.y * z2 - this.z * y2;\n        target.y = this.w * y2 - this.x * z2 + this.z * x2;\n        target.z = this.w * z2 + this.x * y2 - this.y * x2;\n        return target;\n    };\n    /**\n     * Fills the quaternion object with values representing the given rotation around a vector.\n     *\n     * @param    axis    The axis around which to rotate\n     * @param    angle    The angle in radians of the rotation.\n     */\n    Quaternion.prototype.fromAxisAngle = function (axis, angle) {\n        var sin_a = Math.sin(angle / 2);\n        var cos_a = Math.cos(angle / 2);\n        this.x = axis.x * sin_a;\n        this.y = axis.y * sin_a;\n        this.z = axis.z * sin_a;\n        this.w = cos_a;\n        this.normalize();\n    };\n    /**\n     * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\n     * @param qa The first quaternion to interpolate.\n     * @param qb The second quaternion to interpolate.\n     * @param t The interpolation weight, a value between 0 and 1.\n     */\n    Quaternion.prototype.slerp = function (qa, qb, t) {\n        var w1 = qa.w, x1 = qa.x, y1 = qa.y, z1 = qa.z;\n        var w2 = qb.w, x2 = qb.x, y2 = qb.y, z2 = qb.z;\n        var dot = w1 * w2 + x1 * x2 + y1 * y2 + z1 * z2;\n        // shortest direction\n        if (dot < 0) {\n            dot = -dot;\n            w2 = -w2;\n            x2 = -x2;\n            y2 = -y2;\n            z2 = -z2;\n        }\n        if (dot < 0.95) {\n            // interpolate angle linearly\n            var angle = Math.acos(dot);\n            var s = 1 / Math.sin(angle);\n            var s1 = Math.sin(angle * (1 - t)) * s;\n            var s2 = Math.sin(angle * t) * s;\n            this.w = w1 * s1 + w2 * s2;\n            this.x = x1 * s1 + x2 * s2;\n            this.y = y1 * s1 + y2 * s2;\n            this.z = z1 * s1 + z2 * s2;\n        }\n        else {\n            // nearly identical angle, interpolate linearly\n            this.w = w1 + t * (w2 - w1);\n            this.x = x1 + t * (x2 - x1);\n            this.y = y1 + t * (y2 - y1);\n            this.z = z1 + t * (z2 - z1);\n            var len = 1.0 / Math.sqrt(this.w * this.w + this.x * this.x + this.y * this.y + this.z * this.z);\n            this.w *= len;\n            this.x *= len;\n            this.y *= len;\n            this.z *= len;\n        }\n    };\n    /**\n     * Linearly interpolates between two quaternions.\n     * @param qa The first quaternion to interpolate.\n     * @param qb The second quaternion to interpolate.\n     * @param t The interpolation weight, a value between 0 and 1.\n     */\n    Quaternion.prototype.lerp = function (qa, qb, t) {\n        var w1 = qa.w, x1 = qa.x, y1 = qa.y, z1 = qa.z;\n        var w2 = qb.w, x2 = qb.x, y2 = qb.y, z2 = qb.z;\n        var len;\n        // shortest direction\n        if (w1 * w2 + x1 * x2 + y1 * y2 + z1 * z2 < 0) {\n            w2 = -w2;\n            x2 = -x2;\n            y2 = -y2;\n            z2 = -z2;\n        }\n        this.w = w1 + t * (w2 - w1);\n        this.x = x1 + t * (x2 - x1);\n        this.y = y1 + t * (y2 - y1);\n        this.z = z1 + t * (z2 - z1);\n        len = 1.0 / Math.sqrt(this.w * this.w + this.x * this.x + this.y * this.y + this.z * this.z);\n        this.w *= len;\n        this.x *= len;\n        this.y *= len;\n        this.z *= len;\n    };\n    /**\n     * Fills the quaternion object with values representing the given euler rotation.\n     *\n     * @param    ax        The angle in radians of the rotation around the ax axis.\n     * @param    ay        The angle in radians of the rotation around the ay axis.\n     * @param    az        The angle in radians of the rotation around the az axis.\n     */\n    Quaternion.prototype.fromEulerAngles = function (ax, ay, az) {\n        var halfX = ax * .5, halfY = ay * .5, halfZ = az * .5;\n        var cosX = Math.cos(halfX), sinX = Math.sin(halfX);\n        var cosY = Math.cos(halfY), sinY = Math.sin(halfY);\n        var cosZ = Math.cos(halfZ), sinZ = Math.sin(halfZ);\n        this.w = cosX * cosY * cosZ + sinX * sinY * sinZ;\n        this.x = sinX * cosY * cosZ - cosX * sinY * sinZ;\n        this.y = cosX * sinY * cosZ + sinX * cosY * sinZ;\n        this.z = cosX * cosY * sinZ - sinX * sinY * cosZ;\n    };\n    /**\n     * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\n     * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\n     * @return The Vector3D containing the Euler angles.\n     */\n    Quaternion.prototype.toEulerAngles = function (target) {\n        if (target === void 0) { target = null; }\n        //target ||= new Vector3D();\n        if (target === null) {\n            target = new Vector3D_1.Vector3D();\n        }\n        target.x = Math.atan2(2 * (this.w * this.x + this.y * this.z), 1 - 2 * (this.x * this.x + this.y * this.y));\n        target.y = Math.asin(2 * (this.w * this.y - this.z * this.x));\n        target.z = Math.atan2(2 * (this.w * this.z + this.x * this.y), 1 - 2 * (this.y * this.y + this.z * this.z));\n        return target;\n    };\n    /**\n     * Normalises the quaternion object.\n     */\n    Quaternion.prototype.normalize = function (val) {\n        if (val === void 0) { val = 1; }\n        var mag = val / Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        this.x *= mag;\n        this.y *= mag;\n        this.z *= mag;\n        this.w *= mag;\n    };\n    /**\n     * Used to trace the values of a quaternion.\n     *\n     * @return A string representation of the quaternion object.\n     */\n    Quaternion.prototype.toString = function () {\n        return \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\n    };\n    /**\n     * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\n     * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\n     * @return A Matrix3D object representing an equivalent rotation.\n     */\n    Quaternion.prototype.toMatrix3D = function (target) {\n        if (target === void 0) { target = null; }\n        var rawData = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\n        var xy2 = 2.0 * this.x * this.y, xz2 = 2.0 * this.x * this.z, xw2 = 2.0 * this.x * this.w;\n        var yz2 = 2.0 * this.y * this.z, yw2 = 2.0 * this.y * this.w, zw2 = 2.0 * this.z * this.w;\n        var xx = this.x * this.x, yy = this.y * this.y, zz = this.z * this.z, ww = this.w * this.w;\n        rawData[0] = xx - yy - zz + ww;\n        rawData[4] = xy2 - zw2;\n        rawData[8] = xz2 + yw2;\n        rawData[12] = 0;\n        rawData[1] = xy2 + zw2;\n        rawData[5] = -xx + yy - zz + ww;\n        rawData[9] = yz2 - xw2;\n        rawData[13] = 0;\n        rawData[2] = xz2 - yw2;\n        rawData[6] = yz2 + xw2;\n        rawData[10] = -xx - yy + zz + ww;\n        rawData[14] = 0;\n        rawData[3] = 0.0;\n        rawData[7] = 0.0;\n        rawData[11] = 0;\n        rawData[15] = 1;\n        if (!target)\n            return new Matrix3D_1.Matrix3D(rawData);\n        else\n            target.copyRawDataFrom(rawData);\n        return target;\n    };\n    /**\n     * Extracts a quaternion rotation matrix out of a given Matrix3D object.\n     * @param matrix The Matrix3D out of which the rotation will be extracted.\n     */\n    Quaternion.prototype.fromMatrix = function (matrix) {\n        var v = matrix.decompose(Orientation3D_1.Orientation3D.QUATERNION)[1];\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n        this.w = v.w;\n    };\n    /**\n     * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\n     * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\n     * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\n     */\n    Quaternion.prototype.toRawData = function (target, exclude4thRow) {\n        if (exclude4thRow === void 0) { exclude4thRow = false; }\n        var xy2 = 2.0 * this.x * this.y, xz2 = 2.0 * this.x * this.z, xw2 = 2.0 * this.x * this.w;\n        var yz2 = 2.0 * this.y * this.z, yw2 = 2.0 * this.y * this.w, zw2 = 2.0 * this.z * this.w;\n        var xx = this.x * this.x, yy = this.y * this.y, zz = this.z * this.z, ww = this.w * this.w;\n        target[0] = xx - yy - zz + ww;\n        target[1] = xy2 - zw2;\n        target[2] = xz2 + yw2;\n        target[4] = xy2 + zw2;\n        target[5] = -xx + yy - zz + ww;\n        target[6] = yz2 - xw2;\n        target[8] = xz2 - yw2;\n        target[9] = yz2 + xw2;\n        target[10] = -xx - yy + zz + ww;\n        target[3] = target[7] = target[11] = 0;\n        if (!exclude4thRow) {\n            target[12] = target[13] = target[14] = 0;\n            target[15] = 1;\n        }\n    };\n    /**\n     * Clones the quaternion.\n     * @return An exact duplicate of the current Quaternion.\n     */\n    Quaternion.prototype.clone = function () {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    };\n    /**\n     * Rotates a point.\n     * @param vector The Vector3D object to be rotated.\n     * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\n     * @return A Vector3D object containing the rotated point.\n     */\n    Quaternion.prototype.rotatePoint = function (vector, target) {\n        if (target === void 0) { target = null; }\n        var x1, y1, z1, w1;\n        var x2 = vector.x, y2 = vector.y, z2 = vector.z;\n        //target ||= new Vector3D();\n        if (target === null) {\n            target = new Vector3D_1.Vector3D();\n        }\n        // p*q'\n        w1 = -this.x * x2 - this.y * y2 - this.z * z2;\n        x1 = this.w * x2 + this.y * z2 - this.z * y2;\n        y1 = this.w * y2 - this.x * z2 + this.z * x2;\n        z1 = this.w * z2 + this.x * y2 - this.y * x2;\n        target.x = -w1 * this.x + x1 * this.w - y1 * this.z + z1 * this.y;\n        target.y = -w1 * this.y + x1 * this.z + y1 * this.w - z1 * this.x;\n        target.z = -w1 * this.z - x1 * this.y + y1 * this.x + z1 * this.w;\n        return target;\n    };\n    /**\n     * Copies the data from a quaternion into this instance.\n     * @param q The quaternion to copy from.\n     */\n    Quaternion.prototype.copyFrom = function (q) {\n        this.x = q.x;\n        this.y = q.y;\n        this.z = q.z;\n        this.w = q.w;\n    };\n    return Quaternion;\n}());\nexports.Quaternion = Quaternion;\n\n},{\"../geom/Matrix3D\":\"awayjs-core/lib/geom/Matrix3D\",\"../geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"../geom/Orientation3D\":\"awayjs-core/lib/geom/Orientation3D\",\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/geom/Rectangle\":[function(require,module,exports){\n\"use strict\";\nvar Point_1 = require(\"../geom/Point\");\n/**\n * A Rectangle object is an area defined by its position, as indicated by its\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the Rectangle export class are independent of\n * each other; changing the value of one property has no effect on the others.\n * However, the <code>right</code> and <code>bottom</code> properties are\n * integrally related to those four properties. For example, if you change the\n * value of the <code>right</code> property, the value of the\n * <code>width</code> property changes; if you change the <code>bottom</code>\n * property, the value of the <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Rectangle objects:</p>\n *\n * <ul>\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\n * <code>merge()</code>, <code>paletteMap()</code>,\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\n * BitmapData class</li>\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\n * DisplayObject class</li>\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\n * class</li>\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\n * method of the Sprite class</li>\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\n * method of the PrintJob class</li>\n * </ul>\n *\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\n * Rectangle object.</p>\n *\n * <p><b>Note:</b> The Rectangle export class does not define a rectangular Shape\n * display object. To draw a rectangular Shape object onscreen, use the\n * <code>drawRect()</code> method of the Graphics class.</p>\n */\nvar Rectangle = (function () {\n    /**\n     * Creates a new Rectangle object with the top-left corner specified by the\n     * <code>x</code> and <code>y</code> parameters and with the specified\n     * <code>width</code> and <code>height</code> parameters. If you call this\n     * public without parameters, a rectangle with <code>x</code>,\n     * <code>y</code>, <code>width</code>, and <code>height</code> properties set\n     * to 0 is created.\n     *\n     * @param x      The <i>x</i> coordinate of the top-left corner of the\n     *               rectangle.\n     * @param y      The <i>y</i> coordinate of the top-left corner of the\n     *               rectangle.\n     * @param width  The width of the rectangle, in pixels.\n     * @param height The height of the rectangle, in pixels.\n     */\n    function Rectangle(x, y, width, height) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (width === void 0) { width = 0; }\n        if (height === void 0) { height = 0; }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rectangle.prototype, \"bottom\", {\n        /**\n         * The sum of the <code>y</code> and <code>height</code> properties.\n         */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"bottomRight\", {\n        /**\n         * The location of the Rectangle object's bottom-right corner, determined by\n         * the values of the <code>right</code> and <code>bottom</code> properties.\n         */\n        get: function () {\n            if (this._bottomRight == null)\n                this._bottomRight = new Point_1.Point();\n            this._bottomRight.x = this.x + this.width;\n            this._bottomRight.y = this.y + this.height;\n            return this._bottomRight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"left\", {\n        /**\n         * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n         * the <code>left</code> property of a Rectangle object has no effect on the\n         * <code>y</code> and <code>height</code> properties. However it does affect\n         * the <code>width</code> property, whereas changing the <code>x</code> value\n         * does <i>not</i> affect the <code>width</code> property.\n         *\n         * <p>The value of the <code>left</code> property is equal to the value of\n         * the <code>x</code> property.</p>\n         */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"right\", {\n        /**\n         * The sum of the <code>x</code> and <code>width</code> properties.\n         */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * The size of the Rectangle object, expressed as a Point object with the\n         * values of the <code>width</code> and <code>height</code> properties.\n         */\n        get: function () {\n            if (this._size == null)\n                this._size = new Point_1.Point();\n            this._size.x = this.width;\n            this._size.y = this.height;\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"top\", {\n        /**\n         * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n         * the <code>top</code> property of a Rectangle object has no effect on the\n         * <code>x</code> and <code>width</code> properties. However it does affect\n         * the <code>height</code> property, whereas changing the <code>y</code>\n         * value does <i>not</i> affect the <code>height</code> property.\n         *\n         * <p>The value of the <code>top</code> property is equal to the value of the\n         * <code>y</code> property.</p>\n         */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * The location of the Rectangle object's top-left corner, determined by the\n         * <i>x</i> and <i>y</i> coordinates of the point.\n         */\n        get: function () {\n            if (this._topLeft == null)\n                this._topLeft = new Point_1.Point();\n            this._topLeft.x = this.x;\n            this._topLeft.y = this.y;\n            return this._topLeft;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a new Rectangle object with the same values for the\n     * <code>x</code>, <code>y</code>, <code>width</code>, and\n     * <code>height</code> properties as the original Rectangle object.\n     *\n     * @return A new Rectangle object with the same values for the\n     *         <code>x</code>, <code>y</code>, <code>width</code>, and\n     *         <code>height</code> properties as the original Rectangle object.\n     */\n    Rectangle.prototype.clone = function () {\n        return new Rectangle(this.x, this.y, this.width, this.height);\n    };\n    /**\n     * Determines whether the specified point is contained within the rectangular\n     * region defined by this Rectangle object.\n     *\n     * @param x The <i>x</i> coordinate(horizontal position) of the point.\n     * @param y The <i>y</i> coordinate(vertical position) of the point.\n     * @return A value of <code>true</code> if the Rectangle object contains the\n     *         specified point; otherwise <code>false</code>.\n     */\n    Rectangle.prototype.contains = function (x, y) {\n        return (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\n    };\n    /**\n     * Determines whether the specified point is contained within the rectangular\n     * region defined by this Rectangle object. This method is similar to the\n     * <code>Rectangle.contains()</code> method, except that it takes a Point\n     * object as a parameter.\n     *\n     * @param point The point, as represented by its <i>x</i> and <i>y</i>\n     *              coordinates.\n     * @return A value of <code>true</code> if the Rectangle object contains the\n     *         specified point; otherwise <code>false</code>.\n     */\n    Rectangle.prototype.containsPoint = function (point) {\n        return (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n    };\n    /**\n     * Determines whether the Rectangle object specified by the <code>rect</code>\n     * parameter is contained within this Rectangle object. A Rectangle object is\n     * said to contain another if the second Rectangle object falls entirely\n     * within the boundaries of the first.\n     *\n     * @param rect The Rectangle object being checked.\n     * @return A value of <code>true</code> if the Rectangle object that you\n     *         specify is contained by this Rectangle object; otherwise\n     *         <code>false</code>.\n     */\n    Rectangle.prototype.containsRect = function (rect) {\n        return (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height);\n    };\n    /**\n     * Copies all of rectangle data from the source Rectangle object into the\n     * calling Rectangle object.\n     *\n     * @param sourceRect The Rectangle object from which to copy the data.\n     */\n    Rectangle.prototype.copyFrom = function (sourceRect) {\n    };\n    /**\n     * Determines whether the object specified in the <code>toCompare</code>\n     * parameter is equal to this Rectangle object. This method compares the\n     * <code>x</code>, <code>y</code>, <code>width</code>, and\n     * <code>height</code> properties of an object against the same properties of\n     * this Rectangle object.\n     *\n     * @param toCompare The rectangle to compare to this Rectangle object.\n     * @return A value of <code>true</code> if the object has exactly the same\n     *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\n     *         and <code>height</code> properties as this Rectangle object;\n     *         otherwise <code>false</code>.\n     */\n    Rectangle.prototype.equals = function (toCompare) {\n        return (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height);\n    };\n    /**\n     * Increases the size of the Rectangle object by the specified amounts, in\n     * pixels. The center point of the Rectangle object stays the same, and its\n     * size increases to the left and right by the <code>dx</code> value, and to\n     * the top and the bottom by the <code>dy</code> value.\n     *\n     * @param dx The value to be added to the left and the right of the Rectangle\n     *           object. The following equation is used to calculate the new\n     *           width and position of the rectangle:\n     * @param dy The value to be added to the top and the bottom of the\n     *           Rectangle. The following equation is used to calculate the new\n     *           height and position of the rectangle:\n     */\n    Rectangle.prototype.inflate = function (dx, dy) {\n        this.x -= dx / 2;\n        this.y -= dy / 2;\n        this.width += dx / 2;\n        this.height += dy / 2;\n    };\n    /**\n     * Increases the size of the Rectangle object. This method is similar to the\n     * <code>Rectangle.inflate()</code> method except it takes a Point object as\n     * a parameter.\n     *\n     * <p>The following two code examples give the same result:</p>\n     *\n     * @param point The <code>x</code> property of this Point object is used to\n     *              increase the horizontal dimension of the Rectangle object.\n     *              The <code>y</code> property is used to increase the vertical\n     *              dimension of the Rectangle object.\n     */\n    Rectangle.prototype.inflatePoint = function (point) {\n        this.x -= point.x / 2;\n        this.y -= point.y / 2;\n        this.width += point.x / 2;\n        this.height += point.y / 2;\n    };\n    /**\n     * If the Rectangle object specified in the <code>toIntersect</code>\n     * parameter intersects with this Rectangle object, returns the area of\n     * intersection as a Rectangle object. If the rectangles do not intersect,\n     * this method returns an empty Rectangle object with its properties set to\n     * 0.\n     *\n     * @param toIntersect The Rectangle object to compare against to see if it\n     *                    intersects with this Rectangle object.\n     * @return A Rectangle object that equals the area of intersection. If the\n     *         rectangles do not intersect, this method returns an empty\n     *         Rectangle object; that is, a rectangle with its <code>x</code>,\n     *         <code>y</code>, <code>width</code>, and <code>height</code>\n     *         properties set to 0.\n     */\n    Rectangle.prototype.intersection = function (toIntersect) {\n        if (this.intersects(toIntersect)) {\n            var i = new Rectangle();\n            if (this.x > toIntersect.x) {\n                i.x = this.x;\n                i.width = toIntersect.x - this.x + toIntersect.width;\n                if (i.width > this.width)\n                    i.width = this.width;\n            }\n            else {\n                i.x = toIntersect.x;\n                i.width = this.x - toIntersect.x + this.width;\n                if (i.width > toIntersect.width)\n                    i.width = toIntersect.width;\n            }\n            if (this.y > toIntersect.y) {\n                i.y = this.y;\n                i.height = toIntersect.y - this.y + toIntersect.height;\n                if (i.height > this.height)\n                    i.height = this.height;\n            }\n            else {\n                i.y = toIntersect.y;\n                i.height = this.y - toIntersect.y + this.height;\n                if (i.height > toIntersect.height)\n                    i.height = toIntersect.height;\n            }\n            return i;\n        }\n        return new Rectangle();\n    };\n    /**\n     * Determines whether the object specified in the <code>toIntersect</code>\n     * parameter intersects with this Rectangle object. This method checks the\n     * <code>x</code>, <code>y</code>, <code>width</code>, and\n     * <code>height</code> properties of the specified Rectangle object to see if\n     * it intersects with this Rectangle object.\n     *\n     * @param toIntersect The Rectangle object to compare against this Rectangle\n     *                    object.\n     * @return A value of <code>true</code> if the specified object intersects\n     *         with this Rectangle object; otherwise <code>false</code>.\n     */\n    Rectangle.prototype.intersects = function (toIntersect) {\n        return (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\n    };\n    /**\n     * Determines whether or not this Rectangle object is empty.\n     *\n     * @return A value of <code>true</code> if the Rectangle object's width or\n     *         height is less than or equal to 0; otherwise <code>false</code>.\n     */\n    Rectangle.prototype.isEmpty = function () {\n        return (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n    };\n    /**\n     * Adjusts the location of the Rectangle object, as determined by its\n     * top-left corner, by the specified amounts.\n     *\n     * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\n     * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\n     */\n    Rectangle.prototype.offset = function (dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    };\n    /**\n     * Adjusts the location of the Rectangle object using a Point object as a\n     * parameter. This method is similar to the <code>Rectangle.offset()</code>\n     * method, except that it takes a Point object as a parameter.\n     *\n     * @param point A Point object to use to offset this Rectangle object.\n     */\n    Rectangle.prototype.offsetPoint = function (point) {\n        this.x += point.x;\n        this.y += point.y;\n    };\n    /**\n     * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n     * empty if its width or height is less than or equal to 0.\n     *\n     * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n     * <code>width</code>, and <code>height</code> properties to 0.</p>\n     *\n     */\n    Rectangle.prototype.setEmpty = function () {\n        this.x = 0;\n        this.y = 0;\n        this.width = 0;\n        this.height = 0;\n    };\n    /**\n     * Sets the members of Rectangle to the specified values\n     *\n     * @param xa      The <i>x</i> coordinate of the top-left corner of the\n     *                rectangle.\n     * @param ya      The <i>y</i> coordinate of the top-left corner of the\n     *                rectangle.\n     * @param widtha  The width of the rectangle, in pixels.\n     * @param heighta The height of the rectangle, in pixels.\n     */\n    Rectangle.prototype.setTo = function (xa, ya, widtha, heighta) {\n        this.x = xa;\n        this.y = ya;\n        this.width = widtha;\n        this.height = heighta;\n    };\n    /**\n     * Builds and returns a string that lists the horizontal and vertical\n     * positions and the width and height of the Rectangle object.\n     *\n     * @return A string listing the value of each of the following properties of\n     *         the Rectangle object: <code>x</code>, <code>y</code>,\n     *         <code>width</code>, and <code>height</code>.\n     */\n    Rectangle.prototype.toString = function () {\n        return \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n    };\n    /**\n     * Adds two rectangles together to create a new Rectangle object, by filling\n     * in the horizontal and vertical space between the two rectangles.\n     *\n     * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\n     * <code>0</code> as the height or width value, such as: <code>var\n     * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\n     *\n     * @param toUnion A Rectangle object to add to this Rectangle object.\n     * @return A new Rectangle object that is the union of the two rectangles.\n     */\n    Rectangle.prototype.union = function (toUnion) {\n        var u = new Rectangle();\n        if (this.x < toUnion.x) {\n            u.x = this.x;\n            u.width = toUnion.x - this.x + toUnion.width;\n            if (u.width < this.width)\n                u.width = this.width;\n        }\n        else {\n            u.x = toUnion.x;\n            u.width = this.x - toUnion.x + this.width;\n            if (u.width < toUnion.width)\n                u.width = toUnion.width;\n        }\n        if (this.y < toUnion.y) {\n            u.y = this.y;\n            u.height = toUnion.y - this.y + toUnion.height;\n            if (u.height < this.height)\n                u.height = this.height;\n        }\n        else {\n            u.y = toUnion.y;\n            u.height = this.y - toUnion.y + this.height;\n            if (u.height < toUnion.height)\n                u.height = toUnion.height;\n        }\n        return u;\n    };\n    return Rectangle;\n}());\nexports.Rectangle = Rectangle;\n\n},{\"../geom/Point\":\"awayjs-core/lib/geom/Point\"}],\"awayjs-core/lib/geom/Sphere\":[function(require,module,exports){\n\"use strict\";\nvar Sphere = (function () {\n    /**\n     * Create a Sphere with ABCD coefficients\n     */\n    function Sphere(x, y, z, radius) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (radius === void 0) { radius = 0; }\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.radius = radius;\n    }\n    Sphere.prototype.rayIntersection = function (position, direction, targetNormal) {\n        if (this.containsPoint(position))\n            return 0;\n        var px = position.x - this.x, py = position.y - this.y, pz = position.z - this.z;\n        var vx = direction.x, vy = direction.y, vz = direction.z;\n        var rayEntryDistance;\n        var a = vx * vx + vy * vy + vz * vz;\n        var b = 2 * (px * vx + py * vy + pz * vz);\n        var c = px * px + py * py + pz * pz - this.radius * this.radius;\n        var det = b * b - 4 * a * c;\n        if (det >= 0) {\n            var sqrtDet = Math.sqrt(det);\n            rayEntryDistance = (-b - sqrtDet) / (2 * a);\n            if (rayEntryDistance >= 0) {\n                targetNormal.x = px + rayEntryDistance * vx;\n                targetNormal.y = py + rayEntryDistance * vy;\n                targetNormal.z = pz + rayEntryDistance * vz;\n                targetNormal.normalize();\n                return rayEntryDistance;\n            }\n        }\n        // ray misses sphere\n        return -1;\n    };\n    Sphere.prototype.containsPoint = function (position) {\n        var px = position.x - this.x;\n        var py = position.y - this.y;\n        var pz = position.z - this.z;\n        var distance = Math.sqrt(px * px + py * py + pz * pz);\n        return distance <= this.radius;\n    };\n    Sphere.prototype.toString = function () {\n        return \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\n    };\n    return Sphere;\n}());\nexports.Sphere = Sphere;\n\n},{}],\"awayjs-core/lib/geom/Vector3D\":[function(require,module,exports){\n\"use strict\";\n/**\n * The Vector3D export class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n *\n * <p>The Vector3D export class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n *\n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nvar Vector3D = (function () {\n    /**\n     * Creates an instance of a Vector3D object. If you do not specify a\n     * parameter for the constructor, a Vector3D object is created with\n     * the elements (0,0,0,0).\n     *\n     * @param x The first element, such as the x coordinate.\n     * @param y The second element, such as the y coordinate.\n     * @param z The third element, such as the z coordinate.\n     * @param w An optional element for additional data such as the angle\n     *          of rotation.\n     */\n    function Vector3D(x, y, z, w) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (w === void 0) { w = 0; }\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n    Object.defineProperty(Vector3D.prototype, \"length\", {\n        /**\n         * The length, magnitude, of the current Vector3D object from the\n         * origin (0,0,0) to the object's x, y, and z coordinates. The w\n         * property is ignored. A unit vector has a length or magnitude of\n         * one.\n         */\n        get: function () {\n            return Math.sqrt(this.lengthSquared);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Vector3D.prototype, \"lengthSquared\", {\n        /**\n         * The square of the length of the current Vector3D object, calculated\n         * using the x, y, and z properties. The w property is ignored. Use the\n         * <code>lengthSquared()</code> method whenever possible instead of the\n         * slower <code>Math.sqrt()</code> method call of the\n         * <code>Vector3D.length()</code> method.\n         */\n        get: function () {\n            return this.x * this.x + this.y * this.y + this.z * this.z;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds the value of the x, y, and z elements of the current Vector3D\n     * object to the values of the x, y, and z elements of another Vector3D\n     * object. The <code>add()</code> method does not change the current\n     * Vector3D object. Instead, it returns a new Vector3D object with\n     * the new values.\n     *\n     * <p>The result of adding two vectors together is a resultant vector.\n     * One way to visualize the result is by drawing a vector from the\n     * origin or tail of the first vector to the end or head of the second\n     * vector. The resultant vector is the distance between the origin\n     * point of the first vector and the end point of the second vector.\n     * </p>\n     */\n    Vector3D.prototype.add = function (a) {\n        return new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w);\n    };\n    /**\n     * Returns the angle in radians between two vectors. The returned angle\n     * is the smallest radian the first Vector3D object rotates until it\n     * aligns with the second Vector3D object.\n     *\n     * <p>The <code>angleBetween()</code> method is a static method. You\n     * can use it directly as a method of the Vector3D class.</p>\n     *\n     * <p>To convert a degree to a radian, you can use the following\n     * formula:</p>\n     *\n     * <p><code>radian = Math.PI/180 * degree</code></p>\n     *\n     * @param a The first Vector3D object.\n     * @param b The second Vector3D object.\n     * @returns The angle between two Vector3D objects.\n     */\n    Vector3D.angleBetween = function (a, b) {\n        return Math.acos(a.dotProduct(b) / (a.length * b.length));\n    };\n    /**\n     * Returns a new Vector3D object that is an exact copy of the current\n     * Vector3D object.\n     *\n     * @returns A new Vector3D object that is a copy of the current\n     * Vector3D object.\n     */\n    Vector3D.prototype.clone = function () {\n        return new Vector3D(this.x, this.y, this.z, this.w);\n    };\n    Vector3D.combine = function (a, b, ascl, bscl) {\n        return new Vector3D(a.x * ascl + b.x * bscl, a.y * ascl + b.y * bscl, a.z * ascl + b.z * bscl);\n    };\n    /**\n     * Copies all of vector data from the source Vector3D object into the\n     * calling Vector3D object.\n     *\n     * @param src The Vector3D object from which to copy the data.\n     */\n    Vector3D.prototype.copyFrom = function (src) {\n        this.x = src.x;\n        this.y = src.y;\n        this.z = src.z;\n        this.w = src.w;\n    };\n    /**\n     * Returns a new Vector3D object that is perpendicular (at a right\n     * angle) to the current Vector3D and another Vector3D object. If the\n     * returned Vector3D object's coordinates are (0,0,0), then the two\n     * Vector3D objects are parallel to each other.\n     *\n     * <p>You can use the normalized cross product of two vertices of a\n     * polygon surface with the normalized vector of the camera or eye\n     * viewpoint to get a dot product. The value of the dot product can\n     * identify whether a surface of a three-dimensional object is hidden\n     * from the viewpoint.</p>\n     *\n     * @param a A second Vector3D object.\n     * @returns A new Vector3D object that is perpendicular to the current\n     *          Vector3D object and the Vector3D object specified as the\n     *          parameter.\n     */\n    Vector3D.prototype.crossProduct = function (a, t) {\n        if (t === void 0) { t = null; }\n        if (t == null)\n            t = new Vector3D();\n        t.x = this.y * a.z - this.z * a.y;\n        t.y = this.z * a.x - this.x * a.z;\n        t.z = this.x * a.y - this.y * a.x;\n        return t;\n    };\n    /**\n     * Decrements the value of the x, y, and z elements of the current\n     * Vector3D object by the values of the x, y, and z elements of\n     * specified Vector3D object. Unlike the\n     * <code>Vector3D.subtract()</code> method, the\n     * <code>decrementBy()</code> method changes the current Vector3D\n     * object and does not return a new Vector3D object.\n     *\n     * @param a The Vector3D object containing the values to subtract from\n     *          the current Vector3D object.\n     */\n    Vector3D.prototype.decrementBy = function (a) {\n        this.x -= a.x;\n        this.y -= a.y;\n        this.z -= a.z;\n    };\n    /**\n     * Returns the distance between two Vector3D objects. The\n     * <code>distance()</code> method is a static method. You can use it\n     * directly as a method of the Vector3D export class to get the Euclidean\n     * distance between two three-dimensional points.\n     *\n     * @param pt1 A Vector3D object as the first three-dimensional point.\n     * @param pt2 A Vector3D object as the second three-dimensional point.\n     * @returns The distance between two Vector3D objects.\n     */\n    Vector3D.distance = function (pt1, pt2) {\n        var x = (pt1.x - pt2.x);\n        var y = (pt1.y - pt2.y);\n        var z = (pt1.z - pt2.z);\n        return Math.sqrt(x * x + y * y + z * z);\n    };\n    /**\n     * If the current Vector3D object and the one specified as the\n     * parameter are unit vertices, this method returns the cosine of the\n     * angle between the two vertices. Unit vertices are vertices that\n     * point to the same direction but their length is one. They remove the\n     * length of the vector as a factor in the result. You can use the\n     * <code>normalize()</code> method to convert a vector to a unit\n     * vector.\n     *\n     * <p>The <code>dotProduct()</code> method finds the angle between two\n     * vertices. It is also used in backface culling or lighting\n     * calculations. Backface culling is a procedure for determining which\n     * surfaces are hidden from the viewpoint. You can use the normalized\n     * vertices from the camera, or eye, viewpoint and the cross product of\n     * the vertices of a polygon surface to get the dot product. If the dot\n     * product is less than zero, then the surface is facing the camera or\n     * the viewer. If the two unit vertices are perpendicular to each\n     * other, they are orthogonal and the dot product is zero. If the two\n     * vertices are parallel to each other, the dot product is one.</p>\n     *\n     * @param a The second Vector3D object.\n     * @returns A scalar which is the dot product of the current Vector3D\n     *          object and the specified Vector3D object.\n     *\n     * @see away.geom.Vector3D#crossProduct()\n     * @see away.geom.Vector3D#normalize()\n     */\n    Vector3D.prototype.dotProduct = function (a) {\n        return this.x * a.x + this.y * a.y + this.z * a.z;\n    };\n    /**\n     * Determines whether two Vector3D objects are equal by comparing the\n     * x, y, and z elements of the current Vector3D object with a\n     * specified Vector3D object. If the values of these elements are the\n     * same, the two Vector3D objects are equal. If the second optional\n     * parameter is set to true, all four elements of the Vector3D objects,\n     * including the w property, are compared.\n     */\n    /**\n     *\n     * @param toCompare The Vector3D object to be compared with the current\n     *                  Vector3D object.\n     * @param allFour   An optional parameter that specifies whether the w\n     *                  property of the Vector3D objects is used in the\n     *                  comparison.\n     * @returns A value of true if the specified Vector3D object is equal\n     *          to the current Vector3D object; false if it is not equal.\n     */\n    Vector3D.prototype.equals = function (toCompare, allFour) {\n        if (allFour === void 0) { allFour = false; }\n        return (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w));\n    };\n    /**\n     * Increments the value of the x, y, and z elements of the current\n     * Vector3D object by the values of the x, y, and z elements of a\n     * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n     * method, the <code>incrementBy()</code> method changes the current\n     * Vector3D object and does not return a new Vector3D object.\n     *\n     * @param a The Vector3D object to be added to the current Vector3D\n     *          object.\n     */\n    Vector3D.prototype.incrementBy = function (a) {\n        this.x += a.x;\n        this.y += a.y;\n        this.z += a.z;\n    };\n    /**\n     * Compares the elements of the current Vector3D object with the\n     * elements of a specified Vector3D object to determine whether they\n     * are nearly equal. The two Vector3D objects are nearly equal if the\n     * value of all the elements of the two vertices are equal, or the\n     * result of the comparison is within the tolerance range. The\n     * difference between two elements must be less than the number\n     * specified as the tolerance parameter. If the third optional\n     * parameter is set to <code>true</code>, all four elements of the\n     * Vector3D objects, including the <code>w</code> property, are\n     * compared. Otherwise, only the x, y, and z elements are included in\n     * the comparison.\n     */\n    /**\n     *\n     * @param toCompare The Vector3D object to be compared with the current\n     *                  Vector3D object.\n     * @param tolerance A number determining the tolerance factor. If the\n     *                  difference between the values of the Vector3D\n     *                  element specified in the toCompare parameter and\n     *                  the current Vector3D element is less than the\n     *                  tolerance number, the two values are considered\n     *                  nearly equal.\n     * @param allFour   An optional parameter that specifies whether the w\n     *                  property of the Vector3D objects is used in the\n     *                  comparison.\n     * @returns A value of true if the specified Vector3D object is nearly\n     *          equal to the current Vector3D object; false if it is not\n     *          equal.\n     *\n     * @see away.geom.Vector3D#equals()\n     */\n    Vector3D.prototype.nearEquals = function (toCompare, tolerance, allFour) {\n        if (allFour === void 0) { allFour = true; }\n        return ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n    };\n    /**\n     * Sets the current Vector3D object to its inverse. The inverse object\n     * is also considered the opposite of the original object. The value of\n     * the x, y, and z properties of the current Vector3D object is changed\n     * to -x, -y, and -z.\n     */\n    Vector3D.prototype.negate = function () {\n        this.x = -this.x;\n        this.y = -this.y;\n        this.z = -this.z;\n    };\n    /**\n     * Converts a Vector3D object to a unit vector by dividing the first\n     * three elements (x, y, z) by the length of the vector. Unit vertices\n     * are vertices that have a direction but their length is one. They\n     * simplify vector calculations by removing length as a factor.\n     */\n    /**\n     * Scales the line segment between(0,0) and the current point to a set\n     * length.\n     *\n     * @param thickness The scaling value. For example, if the current\n     *                  Vector3D object is (0,3,4), and you normalize it to\n     *                  1, the point returned is at(0,0.6,0.8).\n     */\n    Vector3D.prototype.normalize = function (thickness) {\n        if (thickness === void 0) { thickness = 1; }\n        if (this.length != 0) {\n            var invLength = thickness / this.length;\n            this.x *= invLength;\n            this.y *= invLength;\n            this.z *= invLength;\n            return;\n        }\n    };\n    /**\n     * Divides the value of the <code>x</code>, <code>y</code>, and\n     * <code>z</code> properties of the current Vector3D object by the\n     * value of its <code>w</code> property.\n     *\n     * <p>If the current Vector3D object is the result of multiplying a\n     * Vector3D object by a projection Matrix3D object, the w property can\n     * hold the transform value. The <code>project()</code> method then can\n     * complete the projection by dividing the elements by the\n     * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n     * property to create a projection Matrix3D object.</p>\n     */\n    Vector3D.prototype.project = function () {\n        this.x /= this.w;\n        this.y /= this.w;\n        this.z /= this.w;\n    };\n    /**\n     * Scales the current Vector3D object by a scalar, a magnitude. The\n     * Vector3D object's x, y, and z elements are multiplied by the scalar\n     * number specified in the parameter. For example, if the vector is\n     * scaled by ten, the result is a vector that is ten times longer. The\n     * scalar can also change the direction of the vector. Multiplying the\n     * vector by a negative number reverses its direction.\n     *\n     * @param s A multiplier (scalar) used to scale a Vector3D object.\n\n     */\n    Vector3D.prototype.scaleBy = function (s) {\n        this.x *= s;\n        this.y *= s;\n        this.z *= s;\n    };\n    /**\n     * Sets the members of Vector3D to the specified values\n     *\n     * @param xa The first element, such as the x coordinate.\n     * @param ya The second element, such as the y coordinate.\n     * @param za The third element, such as the z coordinate.\n     */\n    Vector3D.prototype.setTo = function (xa, ya, za) {\n        this.x = xa;\n        this.y = ya;\n        this.z = za;\n    };\n    /**\n     * Subtracts the value of the x, y, and z elements of the current\n     * Vector3D object from the values of the x, y, and z elements of\n     * another Vector3D object. The <code>subtract()</code> method does not\n     * change the current Vector3D object. Instead, this method returns a\n     * new Vector3D object with the new values.\n     *\n     * @param a The Vector3D object to be subtracted from the current\n     *          Vector3D object.\n     * @returns A new Vector3D object that is the difference between the\n     *          current Vector3D and the specified Vector3D object.\n     *\n     * @see away.geom.Vector3D#decrementBy()\n     */\n    Vector3D.prototype.subtract = function (a) {\n        return new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n    };\n    /**\n     * Returns a string representation of the current Vector3D object. The\n     * string contains the values of the x, y, and z properties.\n     */\n    Vector3D.prototype.toString = function () {\n        return \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n    };\n    /**\n     * The x axis defined as a Vector3D object with coordinates (1,0,0).\n     */\n    Vector3D.X_AXIS = new Vector3D(1, 0, 0);\n    /**\n     * The y axis defined as a Vector3D object with coordinates (0,1,0).\n     */\n    Vector3D.Y_AXIS = new Vector3D(0, 1, 0);\n    /**\n     * The z axis defined as a Vector3D object with coordinates (0,0,1).\n     */\n    Vector3D.Z_AXIS = new Vector3D(0, 0, 1);\n    return Vector3D;\n}());\nexports.Vector3D = Vector3D;\n\n},{}],\"awayjs-core/lib/geom\":[function(require,module,exports){\n\"use strict\";\nvar Box_1 = require(\"./geom/Box\");\nexports.Box = Box_1.Box;\nvar ColorTransform_1 = require(\"./geom/ColorTransform\");\nexports.ColorTransform = ColorTransform_1.ColorTransform;\nvar MathConsts_1 = require(\"./geom/MathConsts\");\nexports.MathConsts = MathConsts_1.MathConsts;\nvar Matrix_1 = require(\"./geom/Matrix\");\nexports.Matrix = Matrix_1.Matrix;\nvar Matrix3D_1 = require(\"./geom/Matrix3D\");\nexports.Matrix3D = Matrix3D_1.Matrix3D;\nvar Matrix3DUtils_1 = require(\"./geom/Matrix3DUtils\");\nexports.Matrix3DUtils = Matrix3DUtils_1.Matrix3DUtils;\nvar Orientation3D_1 = require(\"./geom/Orientation3D\");\nexports.Orientation3D = Orientation3D_1.Orientation3D;\nvar Plane3D_1 = require(\"./geom/Plane3D\");\nexports.Plane3D = Plane3D_1.Plane3D;\nvar PlaneClassification_1 = require(\"./geom/PlaneClassification\");\nexports.PlaneClassification = PlaneClassification_1.PlaneClassification;\nvar Point_1 = require(\"./geom/Point\");\nexports.Point = Point_1.Point;\nvar PoissonLookup_1 = require(\"./geom/PoissonLookup\");\nexports.PoissonLookup = PoissonLookup_1.PoissonLookup;\nvar Quaternion_1 = require(\"./geom/Quaternion\");\nexports.Quaternion = Quaternion_1.Quaternion;\nvar Rectangle_1 = require(\"./geom/Rectangle\");\nexports.Rectangle = Rectangle_1.Rectangle;\nvar Sphere_1 = require(\"./geom/Sphere\");\nexports.Sphere = Sphere_1.Sphere;\nvar Vector3D_1 = require(\"./geom/Vector3D\");\nexports.Vector3D = Vector3D_1.Vector3D;\n\n},{\"./geom/Box\":\"awayjs-core/lib/geom/Box\",\"./geom/ColorTransform\":\"awayjs-core/lib/geom/ColorTransform\",\"./geom/MathConsts\":\"awayjs-core/lib/geom/MathConsts\",\"./geom/Matrix\":\"awayjs-core/lib/geom/Matrix\",\"./geom/Matrix3D\":\"awayjs-core/lib/geom/Matrix3D\",\"./geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"./geom/Orientation3D\":\"awayjs-core/lib/geom/Orientation3D\",\"./geom/Plane3D\":\"awayjs-core/lib/geom/Plane3D\",\"./geom/PlaneClassification\":\"awayjs-core/lib/geom/PlaneClassification\",\"./geom/Point\":\"awayjs-core/lib/geom/Point\",\"./geom/PoissonLookup\":\"awayjs-core/lib/geom/PoissonLookup\",\"./geom/Quaternion\":\"awayjs-core/lib/geom/Quaternion\",\"./geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"./geom/Sphere\":\"awayjs-core/lib/geom/Sphere\",\"./geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/image/BitmapImage2D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Image2D_1 = require(\"../image/Image2D\");\nvar ColorUtils_1 = require(\"../utils/ColorUtils\");\nvar BitmapImageUtils_1 = require(\"../utils/BitmapImageUtils\");\nvar CPUCanvas_1 = require(\"../image/CPUCanvas\");\n/**\n * The BitmapImage2D export class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D export class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This export class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D export class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nvar BitmapImage2D = (function (_super) {\n    __extends(BitmapImage2D, _super);\n    /**\n     * Creates a BitmapImage2D object with a specified width and height. If you\n     * specify a value for the <code>fillColor</code> parameter, every pixel in\n     * the bitmap is set to that color.\n     *\n     * <p>By default, the bitmap is created as transparent, unless you pass\n     * the value <code>false</code> for the transparent parameter. After you\n     * create an opaque bitmap, you cannot change it to a transparent bitmap.\n     * Every pixel in an opaque bitmap uses only 24 bits of color channel\n     * information. If you define the bitmap as transparent, every pixel uses 32\n     * bits of color channel information, including an alpha transparency\n     * channel.</p>\n     *\n     * @param width       The width of the bitmap image in pixels.\n     * @param height      The height of the bitmap image in pixels.\n     * @param transparent Specifies whether the bitmap image supports per-pixel\n     *                    transparency. The default value is <code>true</code>\n     *                    (transparent). To create a fully transparent bitmap,\n     *                    set the value of the <code>transparent</code>\n     *                    parameter to <code>true</code> and the value of the\n     *                    <code>fillColor</code> parameter to 0x00000000(or to\n     *                    0). Setting the <code>transparent</code> property to\n     *                    <code>false</code> can result in minor improvements\n     *                    in rendering performance.\n     * @param fillColor   A 32-bit ARGB color value that you use to fill the\n     *                    bitmap image area. The default value is\n     *                    0xFFFFFFFF(solid white).\n     */\n    function BitmapImage2D(width, height, transparent, fillColor, powerOfTwo) {\n        if (transparent === void 0) { transparent = true; }\n        if (fillColor === void 0) { fillColor = null; }\n        if (powerOfTwo === void 0) { powerOfTwo = true; }\n        _super.call(this, width, height, powerOfTwo);\n        this._locked = false;\n        this._transparent = transparent;\n        if (document) {\n            this._imageCanvas = document.createElement(\"canvas\");\n        }\n        else {\n            this._imageCanvas = new CPUCanvas_1.CPUCanvas();\n        }\n        this._imageCanvas.width = width;\n        this._imageCanvas.height = height;\n        this._context = this._imageCanvas.getContext(\"2d\");\n        if (fillColor != null)\n            this.fillRect(this._rect, fillColor);\n    }\n    Object.defineProperty(BitmapImage2D.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return BitmapImage2D.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BitmapImage2D.prototype, \"transparent\", {\n        /**\n         * Defines whether the bitmap image supports per-pixel transparency. You can\n         * set this value only when you construct a BitmapImage2D object by passing in\n         * <code>true</code> for the <code>transparent</code> parameter of the\n         * constructor. Then, after you create a BitmapImage2D object, you can check\n         * whether it supports per-pixel transparency by determining if the value of\n         * the <code>transparent</code> property is <code>true</code>.\n         */\n        get: function () {\n            return this._transparent;\n        },\n        set: function (value) {\n            this._transparent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BitmapImage2D.prototype.invalidate = function () {\n        if (!this._imageDataDirty) {\n            this._imageDataDirty = true;\n            _super.prototype.invalidate.call(this);\n        }\n    };\n    /**\n     * Returns a new BitmapImage2D object that is a clone of the original instance\n     * with an exact copy of the contained bitmap.\n     *\n     * @return A new BitmapImage2D object that is identical to the original.\n     */\n    BitmapImage2D.prototype.clone = function () {\n        var t = new BitmapImage2D(this.width, this.height, this.transparent, null, this.powerOfTwo);\n        t.draw(this);\n        return t;\n    };\n    /**\n     * Adjusts the color values in a specified area of a bitmap image by using a\n     * <code>ColorTransform</code> object. If the rectangle matches the\n     * boundaries of the bitmap image, this method transforms the color values of\n     * the entire image.\n     *\n     * @param rect           A Rectangle object that defines the area of the\n     *                       image in which the ColorTransform object is applied.\n     * @param colorTransform A ColorTransform object that describes the color\n     *                       transformation values to apply.\n     */\n    BitmapImage2D.prototype.colorTransform = function (rect, colorTransform) {\n        if (!this._imageData)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        var data = this._imageData.data;\n        var i, j, index;\n        for (i = 0; i < rect.width; ++i) {\n            for (j = 0; j < rect.height; ++j) {\n                index = (i + rect.x + (j + rect.y) * this.width) * 4;\n                data[index] = data[index] * colorTransform.redMultiplier + colorTransform.redOffset;\n                data[index + 1] = data[index + 1] * colorTransform.greenMultiplier + colorTransform.greenOffset;\n                data[index + 2] = data[index + 2] * colorTransform.blueMultiplier + colorTransform.blueOffset;\n                data[index + 3] = data[index + 3] * colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n            }\n        }\n        if (!this._locked)\n            this._context.putImageData(this._imageData, 0, 0);\n        this.invalidate();\n    };\n    /**\n     * Transfers data from one channel of another BitmapImage2D object or the\n     * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n     * All of the data in the other channels in the destination BitmapImage2D object\n     * are preserved.\n     *\n     * <p>The source channel value and destination channel value can be one of\n     * following values: </p>\n     *\n     * <ul>\n     *   <li><code>BitmapImage2DChannel.RED</code></li>\n     *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n     *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n     *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n     * </ul>\n     *\n     * @param sourceBitmapImage2D The input bitmap image to use. The source image\n     *                         can be a different BitmapImage2D object or it can\n     *                         refer to the current BitmapImage2D object.\n     * @param sourceRect       The source Rectangle object. To copy only channel\n     *                         data from a smaller area within the bitmap,\n     *                         specify a source rectangle that is smaller than\n     *                         the overall size of the BitmapImage2D object.\n     * @param destPoint        The destination Point object that represents the\n     *                         upper-left corner of the rectangular area where\n     *                         the new channel data is placed. To copy only\n     *                         channel data from one area to a different area in\n     *                         the destination image, specify a point other than\n     *                        (0,0).\n     * @param sourceChannel    The source channel. Use a value from the\n     *                         BitmapImage2DChannel class\n     *                        (<code>BitmapImage2DChannel.RED</code>,\n     *                         <code>BitmapImage2DChannel.BLUE</code>,\n     *                         <code>BitmapImage2DChannel.GREEN</code>,\n     *                         <code>BitmapImage2DChannel.ALPHA</code>).\n     * @param destChannel      The destination channel. Use a value from the\n     *                         BitmapImage2DChannel class\n     *                        (<code>BitmapImage2DChannel.RED</code>,\n     *                         <code>BitmapImage2DChannel.BLUE</code>,\n     *                         <code>BitmapImage2DChannel.GREEN</code>,\n     *                         <code>BitmapImage2DChannel.ALPHA</code>).\n     * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n     */\n    BitmapImage2D.prototype.copyChannel = function (sourceBitmap, sourceRect, destPoint, sourceChannel, destChannel) {\n        var imageData = sourceBitmap.getImageData();\n        if (!this._imageData)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        var sourceData = sourceBitmap.getImageData().data;\n        var destData = this._imageData.data;\n        var sourceOffset = Math.round(Math.log(sourceChannel) / Math.log(2));\n        var destOffset = Math.round(Math.log(destChannel) / Math.log(2));\n        var i, j, sourceIndex, destIndex;\n        for (i = 0; i < sourceRect.width; ++i) {\n            for (j = 0; j < sourceRect.height; ++j) {\n                sourceIndex = (i + sourceRect.x + (j + sourceRect.y) * sourceBitmap.width) * 4;\n                destIndex = (i + destPoint.x + (j + destPoint.y) * this.width) * 4;\n                destData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n            }\n        }\n        if (!this._locked)\n            this._context.putImageData(this._imageData, 0, 0);\n        this.invalidate();\n    };\n    BitmapImage2D.prototype.copyPixels = function (source, sourceRect, destRect) {\n        if (source instanceof BitmapImage2D)\n            source = source.getCanvas();\n        if (this._locked && this._imageData)\n            this._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n        BitmapImageUtils_1.BitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n        this._imageData = null;\n        this.invalidate();\n    };\n    /**\n     * Frees memory that is used to store the BitmapImage2D object.\n     *\n     * <p>When the <code>dispose()</code> method is called on an image, the width\n     * and height of the image are set to 0. All subsequent calls to methods or\n     * properties of this BitmapImage2D instance fail, and an exception is thrown.\n     * </p>\n     *\n     * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n     * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n     * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n     * object is no longer usable and an exception may be thrown if\n     * you call functions on the BitmapImage2D object. However,\n     * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n     * object(approximately 128 bytes); the memory occupied by the actual\n     * BitmapImage2D object is released at the time the BitmapImage2D object is\n     * collected by the garbage collector.</p>\n     *\n     */\n    BitmapImage2D.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._context = null;\n        this._imageCanvas = null;\n        this._imageData = null;\n        this._rect = null;\n        this._transparent = null;\n        this._locked = null;\n    };\n    BitmapImage2D.prototype.draw = function (source, matrix, colorTransform, blendMode, clipRect, smoothing) {\n        if (source instanceof BitmapImage2D && source.getCanvas())\n            source = source.getCanvas();\n        if (this._locked && this._imageData)\n            this._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n        BitmapImageUtils_1.BitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n        this._imageData = null;\n        this.invalidate();\n    };\n    /**\n     * Fills a rectangular area of pixels with a specified ARGB color.\n     *\n     * @param rect  The rectangular area to fill.\n     * @param color The ARGB color value that fills the area. ARGB colors are\n     *              often specified in hexadecimal format; for example,\n     *              0xFF336699.\n     * @throws TypeError The rect is null.\n     */\n    BitmapImage2D.prototype.fillRect = function (rect, color) {\n        if (this._locked && this._imageData)\n            this._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n        BitmapImageUtils_1.BitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n        this._imageData = null;\n        this.invalidate();\n    };\n    /**\n     * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n     * object at a specific point(<i>x</i>, <i>y</i>). The\n     * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n     * alpha information is returned.\n     *\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n     * values. A premultiplied image pixel has the red, green, and blue color\n     * channel values already multiplied by the alpha data. For example, if the\n     * alpha value is 0, the values for the RGB channels are also 0, independent\n     * of their unmultiplied values. This loss of data can cause some problems\n     * when you perform operations. All BitmapImage2D methods take and return\n     * unmultiplied values. The internal pixel representation is converted from\n     * premultiplied to unmultiplied before it is returned as a value. During a\n     * set operation, the pixel value is premultiplied before the raw image pixel\n     * is set.</p>\n     *\n     * @param x The <i>x</i> position of the pixel.\n     * @param y The <i>y</i> position of the pixel.\n     * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n     *         <i>y</i>) coordinates are outside the bounds of the image, the\n     *         method returns 0.\n     */\n    BitmapImage2D.prototype.getPixel = function (x, y) {\n        var r;\n        var g;\n        var b;\n        var a;\n        if (!this._locked) {\n            var pixelData = this._context.getImageData(x, y, 1, 1);\n            r = pixelData.data[0];\n            g = pixelData.data[1];\n            b = pixelData.data[2];\n            a = pixelData.data[3];\n        }\n        else {\n            if (!this._imageData)\n                this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n            var index = (x + y * this._imageData.width) * 4;\n            r = this._imageData.data[index + 0];\n            g = this._imageData.data[index + 1];\n            b = this._imageData.data[index + 2];\n            a = this._imageData.data[index + 3];\n        }\n        //returns black if fully transparent\n        if (!a)\n            return 0x0;\n        return (r << 16) | (g << 8) | b;\n    };\n    /**\n     * Returns an ARGB color value that contains alpha channel data and RGB data.\n     * This method is similar to the <code>getPixel()</code> method, which\n     * returns an RGB color without alpha channel data.\n     *\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n     * values. A premultiplied image pixel has the red, green, and blue color\n     * channel values already multiplied by the alpha data. For example, if the\n     * alpha value is 0, the values for the RGB channels are also 0, independent\n     * of their unmultiplied values. This loss of data can cause some problems\n     * when you perform operations. All BitmapImage2D methods take and return\n     * unmultiplied values. The internal pixel representation is converted from\n     * premultiplied to unmultiplied before it is returned as a value. During a\n     * set operation, the pixel value is premultiplied before the raw image pixel\n     * is set.</p>\n     *\n     * @param x The <i>x</i> position of the pixel.\n     * @param y The <i>y</i> position of the pixel.\n     * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n     *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n     *         returned.\n     */\n    BitmapImage2D.prototype.getPixel32 = function (x, y) {\n        var r;\n        var g;\n        var b;\n        var a;\n        if (!this._locked) {\n            var pixelData = this._context.getImageData(x, y, 1, 1);\n            r = pixelData.data[0];\n            g = pixelData.data[1];\n            b = pixelData.data[2];\n            a = pixelData.data[3];\n        }\n        else {\n            if (!this._imageData)\n                this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n            var index = (x + y * this._imageData.width) * 4;\n            r = this._imageData.data[index + 0];\n            g = this._imageData.data[index + 1];\n            b = this._imageData.data[index + 2];\n            a = this._imageData.data[index + 3];\n        }\n        return (a << 24) | (r << 16) | (g << 8) | b;\n    };\n    BitmapImage2D.prototype.getPixelData = function (x, y, imagePixel) {\n        if (!this._imageData)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        var index = (x + y * this._imageData.width) * 4;\n        imagePixel[0] = this._imageData.data[index + 0];\n        imagePixel[1] = this._imageData.data[index + 1];\n        imagePixel[2] = this._imageData.data[index + 2];\n        imagePixel[3] = this._imageData.data[index + 3];\n    };\n    BitmapImage2D.prototype.setPixelData = function (x, y, imagePixel) {\n        if (!this._imageData)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        var index = (x + y * this._imageData.width) * 4;\n        this._imageData.data[index + 0] = imagePixel[0];\n        this._imageData.data[index + 1] = imagePixel[1];\n        this._imageData.data[index + 2] = imagePixel[2];\n        this._imageData.data[index + 3] = imagePixel[3];\n        this.invalidate();\n    };\n    /**\n     * Locks an image so that any objects that reference the BitmapImage2D object,\n     * such as Bitmap objects, are not updated when this BitmapImage2D object\n     * changes. To improve performance, use this method along with the\n     * <code>unlock()</code> method before and after numerous calls to the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method.\n     *\n     */\n    BitmapImage2D.prototype.lock = function () {\n        if (this._locked)\n            return;\n        this._locked = true;\n    };\n    /**\n     * Converts an Array into a rectangular region of pixel data. For each pixel,\n     * an Array element is read and written into the BitmapImage2D pixel. The data\n     * in the Array is expected to be 32-bit ARGB pixel values.\n     *\n     * @param rect        Specifies the rectangular region of the BitmapImage2D\n     *                    object.\n     * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n     *                    values to be used in the rectangular region.\n     * @throws RangeError The vector array is not large enough to read all the\n     *                    pixel data.\n     */\n    BitmapImage2D.prototype.setArray = function (rect, inputArray) {\n        if (!this._imageData)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        var i, j, index, argb;\n        for (i = 0; i < rect.width; ++i) {\n            for (j = 0; j < rect.height; ++j) {\n                argb = ColorUtils_1.ColorUtils.float32ColorToARGB(inputArray[i + j * rect.width]);\n                index = (i + rect.x + (j + rect.y) * this._imageData.width) * 4;\n                this._imageData.data[index + 0] = argb[1];\n                this._imageData.data[index + 1] = argb[2];\n                this._imageData.data[index + 2] = argb[3];\n                this._imageData.data[index + 3] = argb[0];\n            }\n        }\n        if (!this._locked)\n            this._context.putImageData(this._imageData, 0, 0);\n        this.invalidate();\n    };\n    /**\n     * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n     * value of the image pixel is preserved during this operation. The value of\n     * the RGB color parameter is treated as an unmultiplied color value.\n     *\n     * <p><b>Note:</b> To increase performance, when you use the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n     * call the <code>lock()</code> method before you call the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n     * the <code>unlock()</code> method when you have made all pixel changes.\n     * This process prevents objects that reference this BitmapImage2D instance from\n     * updating until you finish making the pixel changes.</p>\n     *\n     * @param x     The <i>x</i> position of the pixel whose value changes.\n     * @param y     The <i>y</i> position of the pixel whose value changes.\n     * @param color The resulting RGB color for the pixel.\n     */\n    BitmapImage2D.prototype.setPixel = function (x, y, color) {\n        var argb = ColorUtils_1.ColorUtils.float32ColorToARGB(color);\n        if (!this._imageData)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        var index = (x + y * this._imageData.width) * 4;\n        this._imageData.data[index + 0] = argb[1];\n        this._imageData.data[index + 1] = argb[2];\n        this._imageData.data[index + 2] = argb[3];\n        this._imageData.data[index + 3] = 0xFF;\n        if (!this._locked)\n            this._context.putImageData(this._imageData, 0, 0);\n        this.invalidate();\n    };\n    /**\n     * Sets the color and alpha transparency values of a single pixel of a\n     * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n     * method; the main difference is that the <code>setPixel32()</code> method\n     * takes an ARGB color value that contains alpha channel information.\n     *\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n     * values. A premultiplied image pixel has the red, green, and blue color\n     * channel values already multiplied by the alpha data. For example, if the\n     * alpha value is 0, the values for the RGB channels are also 0, independent\n     * of their unmultiplied values. This loss of data can cause some problems\n     * when you perform operations. All BitmapImage2D methods take and return\n     * unmultiplied values. The internal pixel representation is converted from\n     * premultiplied to unmultiplied before it is returned as a value. During a\n     * set operation, the pixel value is premultiplied before the raw image pixel\n     * is set.</p>\n     *\n     * <p><b>Note:</b> To increase performance, when you use the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n     * call the <code>lock()</code> method before you call the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n     * the <code>unlock()</code> method when you have made all pixel changes.\n     * This process prevents objects that reference this BitmapImage2D instance from\n     * updating until you finish making the pixel changes.</p>\n     *\n     * @param x     The <i>x</i> position of the pixel whose value changes.\n     * @param y     The <i>y</i> position of the pixel whose value changes.\n     * @param color The resulting ARGB color for the pixel. If the bitmap is\n     *              opaque(not transparent), the alpha transparency portion of\n     *              this color value is ignored.\n     */\n    BitmapImage2D.prototype.setPixel32 = function (x, y, color) {\n        var argb = ColorUtils_1.ColorUtils.float32ColorToARGB(color);\n        if (!this._imageData)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        var index = (x + y * this._imageData.width) * 4;\n        this._imageData.data[index + 0] = argb[1];\n        this._imageData.data[index + 1] = argb[2];\n        this._imageData.data[index + 2] = argb[3];\n        this._imageData.data[index + 3] = argb[0];\n        if (!this._locked)\n            this._context.putImageData(this._imageData, 0, 0);\n        this.invalidate();\n    };\n    /**\n     * Converts a byte array into a rectangular region of pixel data. For each\n     * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n     * the return value is written into the pixel. If the byte array ends before\n     * the full rectangle is written, the function returns. The data in the byte\n     * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n     * on the byte array before or after the pixels are read.\n     *\n     * @param rect           Specifies the rectangular region of the BitmapImage2D\n     *                       object.\n     * @param inputByteArray A ByteArray object that consists of 32-bit\n     *                       unmultiplied pixel values to be used in the\n     *                       rectangular region.\n     * @throws EOFError  The <code>inputByteArray</code> object does not include\n     *                   enough data to fill the area of the <code>rect</code>\n     *                   rectangle. The method fills as many pixels as possible\n     *                   before throwing the exception.\n     * @throws TypeError The rect or inputByteArray are null.\n     */\n    BitmapImage2D.prototype.setPixels = function (rect, input) {\n        if (!this._imageData)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        var i;\n        var w = this._imageData.width;\n        for (i = 0; i < rect.height; ++i)\n            this._imageData.data.set(input.subarray(i * w * 4, (i + 1) * w * 4), (rect.x + (i + rect.y) * w) * 4);\n        if (!this._locked)\n            this._context.putImageData(this._imageData, 0, 0);\n        this.invalidate();\n    };\n    /**\n     * Unlocks an image so that any objects that reference the BitmapImage2D object,\n     * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n     * To improve performance, use this method along with the <code>lock()</code>\n     * method before and after numerous calls to the <code>setPixel()</code> or\n     * <code>setPixel32()</code> method.\n     *\n     * @param changeRect The area of the BitmapImage2D object that has changed. If\n     *                   you do not specify a value for this parameter, the\n     *                   entire area of the BitmapImage2D object is considered\n     *                   changed.\n     */\n    BitmapImage2D.prototype.unlock = function () {\n        if (!this._locked)\n            return;\n        this._locked = false;\n        if (this._imageData)\n            this._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n    };\n    /**\n     *\n     * @returns {ImageData}\n     */\n    BitmapImage2D.prototype.getImageData = function () {\n        if (!this._imageData)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        return this._imageData;\n    };\n    /**\n     *\n     * @returns {HTMLCanvasElement}\n     */\n    BitmapImage2D.prototype.getCanvas = function () {\n        return this._imageCanvas;\n    };\n    /**\n     *\n     * @param width\n     * @param height\n     * @private\n     */\n    BitmapImage2D.prototype._setSize = function (width, height) {\n        if (this._locked)\n            this._context.putImageData(this._imageData, 0, 0);\n        if (this._imageCanvas) {\n            this._imageCanvas.width = width;\n            this._imageCanvas.height = height;\n        }\n        _super.prototype._setSize.call(this, width, height);\n        if (this._locked)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n    };\n    BitmapImage2D.assetType = \"[image BitmapImage2D]\";\n    return BitmapImage2D;\n}(Image2D_1.Image2D));\nexports.BitmapImage2D = BitmapImage2D;\n\n},{\"../image/CPUCanvas\":\"awayjs-core/lib/image/CPUCanvas\",\"../image/Image2D\":\"awayjs-core/lib/image/Image2D\",\"../utils/BitmapImageUtils\":\"awayjs-core/lib/utils/BitmapImageUtils\",\"../utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\"}],\"awayjs-core/lib/image/BitmapImageChannel\":[function(require,module,exports){\n\"use strict\";\nvar BitmapImageChannel = (function () {\n    function BitmapImageChannel() {\n    }\n    BitmapImageChannel.ALPHA = 8;\n    BitmapImageChannel.BLUE = 4;\n    BitmapImageChannel.GREEN = 2;\n    BitmapImageChannel.RED = 1;\n    return BitmapImageChannel;\n}());\nexports.BitmapImageChannel = BitmapImageChannel;\n\n},{}],\"awayjs-core/lib/image/BitmapImageCube\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BitmapImage2D_1 = require(\"../image/BitmapImage2D\");\nvar ImageCube_1 = require(\"../image/ImageCube\");\nvar Rectangle_1 = require(\"../geom/Rectangle\");\nvar ColorUtils_1 = require(\"../utils/ColorUtils\");\nvar BitmapImageUtils_1 = require(\"../utils/BitmapImageUtils\");\n/**\n * The BitmapImage2D export class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D export class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This export class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D export class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nvar BitmapImageCube = (function (_super) {\n    __extends(BitmapImageCube, _super);\n    /**\n     * Creates a BitmapImage2D object with a specified width and height. If you\n     * specify a value for the <code>fillColor</code> parameter, every pixel in\n     * the bitmap is set to that color.\n     *\n     * <p>By default, the bitmap is created as transparent, unless you pass\n     * the value <code>false</code> for the transparent parameter. After you\n     * create an opaque bitmap, you cannot change it to a transparent bitmap.\n     * Every pixel in an opaque bitmap uses only 24 bits of color channel\n     * information. If you define the bitmap as transparent, every pixel uses 32\n     * bits of color channel information, including an alpha transparency\n     * channel.</p>\n     *\n     * @param width       The width of the bitmap image in pixels.\n     * @param height      The height of the bitmap image in pixels.\n     * @param transparent Specifies whether the bitmap image supports per-pixel\n     *                    transparency. The default value is <code>true</code>\n     *                    (transparent). To create a fully transparent bitmap,\n     *                    set the value of the <code>transparent</code>\n     *                    parameter to <code>true</code> and the value of the\n     *                    <code>fillColor</code> parameter to 0x00000000(or to\n     *                    0). Setting the <code>transparent</code> property to\n     *                    <code>false</code> can result in minor improvements\n     *                    in rendering performance.\n     * @param fillColor   A 32-bit ARGB color value that you use to fill the\n     *                    bitmap image area. The default value is\n     *                    0xFFFFFFFF(solid white).\n     */\n    function BitmapImageCube(size, transparent, fillColor) {\n        if (transparent === void 0) { transparent = true; }\n        if (fillColor === void 0) { fillColor = null; }\n        _super.call(this, size);\n        this._imageCanvas = new Array(6);\n        this._context = new Array(6);\n        this._imageData = new Array(6);\n        this._locked = false;\n        this._transparent = transparent;\n        for (var i = 0; i < 6; i++) {\n            this._imageCanvas[i] = document.createElement(\"canvas\");\n            this._imageCanvas[i].width = size;\n            this._imageCanvas[i].height = size;\n            this._context[i] = this._imageCanvas[i].getContext(\"2d\");\n            if (fillColor != null)\n                this.fillRect(i, new Rectangle_1.Rectangle(0, 0, size, size), fillColor);\n        }\n    }\n    Object.defineProperty(BitmapImageCube.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return BitmapImageCube.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BitmapImageCube.prototype, \"transparent\", {\n        /**\n         * Defines whether the bitmap image supports per-pixel transparency. You can\n         * set this value only when you construct a BitmapImage2D object by passing in\n         * <code>true</code> for the <code>transparent</code> parameter of the\n         * constructor. Then, after you create a BitmapImage2D object, you can check\n         * whether it supports per-pixel transparency by determining if the value of\n         * the <code>transparent</code> property is <code>true</code>.\n         */\n        get: function () {\n            return this._transparent;\n        },\n        set: function (value) {\n            this._transparent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a new BitmapImage2D object that is a clone of the original instance\n     * with an exact copy of the contained bitmap.\n     *\n     * @return A new BitmapImage2D object that is identical to the original.\n     */\n    BitmapImageCube.prototype.clone = function () {\n        var t = new BitmapImageCube(this._size, this.transparent);\n        for (var i = 0; i < 6; i++) {\n            t.draw(i, this.getCanvas(i));\n        }\n        return t;\n    };\n    /**\n     * Adjusts the color values in a specified area of a bitmap image by using a\n     * <code>ColorTransform</code> object. If the rectangle matches the\n     * boundaries of the bitmap image, this method transforms the color values of\n     * the entire image.\n     *\n     * @param rect           A Rectangle object that defines the area of the\n     *                       image in which the ColorTransform object is applied.\n     * @param colorTransform A ColorTransform object that describes the color\n     *                       transformation values to apply.\n     */\n    BitmapImageCube.prototype.colorTransform = function (side, rect, colorTransform) {\n        if (!this._locked)\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        var data = this._imageData[side].data;\n        var i, j, index;\n        for (i = 0; i < rect.width; ++i) {\n            for (j = 0; j < rect.height; ++j) {\n                index = (i + rect.x + (j + rect.y) * this._size) * 4;\n                data[index] = data[index] * colorTransform.redMultiplier + colorTransform.redOffset;\n                data[index + 1] = data[index + 1] * colorTransform.greenMultiplier + colorTransform.greenOffset;\n                data[index + 2] = data[index + 2] * colorTransform.blueMultiplier + colorTransform.blueOffset;\n                data[index + 3] = data[index + 3] * colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n            }\n        }\n        if (!this._locked) {\n            this._context[side].putImageData(this._imageData[side], 0, 0);\n            this._imageData[side] = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Transfers data from one channel of another BitmapImage2D object or the\n     * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n     * All of the data in the other channels in the destination BitmapImage2D object\n     * are preserved.\n     *\n     * <p>The source channel value and destination channel value can be one of\n     * following values: </p>\n     *\n     * <ul>\n     *   <li><code>BitmapImage2DChannel.RED</code></li>\n     *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n     *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n     *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n     * </ul>\n     *\n     * @param sourceBitmapImage2D The input bitmap image to use. The source image\n     *                         can be a different BitmapImage2D object or it can\n     *                         refer to the current BitmapImage2D object.\n     * @param sourceRect       The source Rectangle object. To copy only channel\n     *                         data from a smaller area within the bitmap,\n     *                         specify a source rectangle that is smaller than\n     *                         the overall size of the BitmapImage2D object.\n     * @param destPoint        The destination Point object that represents the\n     *                         upper-left corner of the rectangular area where\n     *                         the new channel data is placed. To copy only\n     *                         channel data from one area to a different area in\n     *                         the destination image, specify a point other than\n     *                        (0,0).\n     * @param sourceChannel    The source channel. Use a value from the\n     *                         BitmapImage2DChannel class\n     *                        (<code>BitmapImage2DChannel.RED</code>,\n     *                         <code>BitmapImage2DChannel.BLUE</code>,\n     *                         <code>BitmapImage2DChannel.GREEN</code>,\n     *                         <code>BitmapImage2DChannel.ALPHA</code>).\n     * @param destChannel      The destination channel. Use a value from the\n     *                         BitmapImage2DChannel class\n     *                        (<code>BitmapImage2DChannel.RED</code>,\n     *                         <code>BitmapImage2DChannel.BLUE</code>,\n     *                         <code>BitmapImage2DChannel.GREEN</code>,\n     *                         <code>BitmapImage2DChannel.ALPHA</code>).\n     * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n     */\n    BitmapImageCube.prototype.copyChannel = function (side, sourceBitmap, sourceRect, destPoint, sourceChannel, destChannel) {\n        var imageData = sourceBitmap.getImageData();\n        if (!this._locked)\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        var sourceData = sourceBitmap.getImageData().data;\n        var destData = this._imageData[side].data;\n        var sourceOffset = Math.round(Math.log(sourceChannel) / Math.log(2));\n        var destOffset = Math.round(Math.log(destChannel) / Math.log(2));\n        var i, j, sourceIndex, destIndex;\n        for (i = 0; i < sourceRect.width; ++i) {\n            for (j = 0; j < sourceRect.height; ++j) {\n                sourceIndex = (i + sourceRect.x + (j + sourceRect.y) * sourceBitmap.width) * 4;\n                destIndex = (i + destPoint.x + (j + destPoint.y) * this._size) * 4;\n                destData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n            }\n        }\n        if (!this._locked) {\n            this._context[side].putImageData(this._imageData[side], 0, 0);\n            this._imageData[side] = null;\n        }\n        this.invalidate();\n    };\n    BitmapImageCube.prototype.copyPixels = function (side, source, sourceRect, destRect) {\n        if (source instanceof BitmapImage2D_1.BitmapImage2D)\n            source = source.getCanvas();\n        if (this._locked) {\n            // If canvas is locked:\n            //\n            //      1) copy image data back to canvas\n            //      2) draw object\n            //      3) read _imageData back out\n            this._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n            BitmapImageUtils_1.BitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        }\n        else {\n            BitmapImageUtils_1.BitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n        }\n        this.invalidate();\n    };\n    /**\n     * Frees memory that is used to store the BitmapImage2D object.\n     *\n     * <p>When the <code>dispose()</code> method is called on an image, the width\n     * and height of the image are set to 0. All subsequent calls to methods or\n     * properties of this BitmapImage2D instance fail, and an exception is thrown.\n     * </p>\n     *\n     * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n     * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n     * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n     * object is no longer usable and an exception may be thrown if\n     * you call functions on the BitmapImage2D object. However,\n     * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n     * object(approximately 128 bytes); the memory occupied by the actual\n     * BitmapImage2D object is released at the time the BitmapImage2D object is\n     * collected by the garbage collector.</p>\n     *\n     */\n    BitmapImageCube.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        for (var i = 0; i < 6; i++) {\n            this._context[i] = null;\n            this._imageCanvas[i] = null;\n            this._imageData[i] = null;\n        }\n        this._transparent = null;\n        this._locked = null;\n    };\n    BitmapImageCube.prototype.draw = function (side, source, matrix, colorTransform, blendMode, clipRect, smoothing) {\n        if (source instanceof BitmapImage2D_1.BitmapImage2D)\n            source = source.getCanvas();\n        if (this._locked) {\n            // If canvas is locked:\n            //\n            //      1) copy image data back to canvas\n            //      2) draw object\n            //      3) read _imageData back out\n            this._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n            BitmapImageUtils_1.BitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        }\n        else {\n            BitmapImageUtils_1.BitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n        }\n        this.invalidate();\n    };\n    /**\n     * Fills a rectangular area of pixels with a specified ARGB color.\n     *\n     * @param rect  The rectangular area to fill.\n     * @param color The ARGB color value that fills the area. ARGB colors are\n     *              often specified in hexadecimal format; for example,\n     *              0xFF336699.\n     * @throws TypeError The rect is null.\n     */\n    BitmapImageCube.prototype.fillRect = function (side, rect, color) {\n        if (this._locked) {\n            // If canvas is locked:\n            //\n            //      1) copy image data back to canvas\n            //      2) apply fill\n            //      3) read _imageData back out\n            if (this._imageData[side])\n                this._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n            BitmapImageUtils_1.BitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n            if (this._imageData[side])\n                this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        }\n        else {\n            BitmapImageUtils_1.BitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n        }\n        this.invalidate();\n    };\n    /**\n     * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n     * object at a specific point(<i>x</i>, <i>y</i>). The\n     * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n     * alpha information is returned.\n     *\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n     * values. A premultiplied image pixel has the red, green, and blue color\n     * channel values already multiplied by the alpha data. For example, if the\n     * alpha value is 0, the values for the RGB channels are also 0, independent\n     * of their unmultiplied values. This loss of data can cause some problems\n     * when you perform operations. All BitmapImage2D methods take and return\n     * unmultiplied values. The internal pixel representation is converted from\n     * premultiplied to unmultiplied before it is returned as a value. During a\n     * set operation, the pixel value is premultiplied before the raw image pixel\n     * is set.</p>\n     *\n     * @param x The <i>x</i> position of the pixel.\n     * @param y The <i>y</i> position of the pixel.\n     * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n     *         <i>y</i>) coordinates are outside the bounds of the image, the\n     *         method returns 0.\n     */\n    BitmapImageCube.prototype.getPixel = function (side, x, y) {\n        var r;\n        var g;\n        var b;\n        var a;\n        if (!this._locked) {\n            var pixelData = this._context[side].getImageData(x, y, 1, 1);\n            r = pixelData.data[0];\n            g = pixelData.data[1];\n            b = pixelData.data[2];\n            a = pixelData.data[3];\n        }\n        else {\n            var index = (x + y * this._size) * 4;\n            r = this._imageData[side].data[index + 0];\n            g = this._imageData[side].data[index + 1];\n            b = this._imageData[side].data[index + 2];\n            a = this._imageData[side].data[index + 3];\n        }\n        //returns black if fully transparent\n        if (!a)\n            return 0x0;\n        return (r << 16) | (g << 8) | b;\n    };\n    /**\n     * Returns an ARGB color value that contains alpha channel data and RGB data.\n     * This method is similar to the <code>getPixel()</code> method, which\n     * returns an RGB color without alpha channel data.\n     *\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n     * values. A premultiplied image pixel has the red, green, and blue color\n     * channel values already multiplied by the alpha data. For example, if the\n     * alpha value is 0, the values for the RGB channels are also 0, independent\n     * of their unmultiplied values. This loss of data can cause some problems\n     * when you perform operations. All BitmapImage2D methods take and return\n     * unmultiplied values. The internal pixel representation is converted from\n     * premultiplied to unmultiplied before it is returned as a value. During a\n     * set operation, the pixel value is premultiplied before the raw image pixel\n     * is set.</p>\n     *\n     * @param x The <i>x</i> position of the pixel.\n     * @param y The <i>y</i> position of the pixel.\n     * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n     *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n     *         returned.\n     */\n    BitmapImageCube.prototype.getPixel32 = function (side, x, y) {\n        var r;\n        var g;\n        var b;\n        var a;\n        if (!this._locked) {\n            var pixelData = this._context[side].getImageData(x, y, 1, 1);\n            r = pixelData.data[0];\n            g = pixelData.data[1];\n            b = pixelData.data[2];\n            a = pixelData.data[3];\n        }\n        else {\n            var index = (x + y * this._size) * 4;\n            r = this._imageData[side].data[index + 0];\n            g = this._imageData[side].data[index + 1];\n            b = this._imageData[side].data[index + 2];\n            a = this._imageData[side].data[index + 3];\n        }\n        return (a << 24) | (r << 16) | (g << 8) | b;\n    };\n    /**\n     * Locks an image so that any objects that reference the BitmapImage2D object,\n     * such as Bitmap objects, are not updated when this BitmapImage2D object\n     * changes. To improve performance, use this method along with the\n     * <code>unlock()</code> method before and after numerous calls to the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method.\n     *\n     */\n    BitmapImageCube.prototype.lock = function () {\n        if (this._locked)\n            return;\n        this._locked = true;\n        for (var i = 0; i < 6; i++)\n            this._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n    };\n    /**\n     * Converts an Array into a rectangular region of pixel data. For each pixel,\n     * an Array element is read and written into the BitmapImage2D pixel. The data\n     * in the Array is expected to be 32-bit ARGB pixel values.\n     *\n     * @param rect        Specifies the rectangular region of the BitmapImage2D\n     *                    object.\n     * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n     *                    values to be used in the rectangular region.\n     * @throws RangeError The vector array is not large enough to read all the\n     *                    pixel data.\n     */\n    BitmapImageCube.prototype.setArray = function (side, rect, inputArray) {\n        if (!this._locked)\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        var i, j, index, argb;\n        for (i = 0; i < rect.width; ++i) {\n            for (j = 0; j < rect.height; ++j) {\n                argb = ColorUtils_1.ColorUtils.float32ColorToARGB(inputArray[i + j * rect.width]);\n                index = (i + rect.x + (j + rect.y) * this._size) * 4;\n                this._imageData[side].data[index + 0] = argb[1];\n                this._imageData[side].data[index + 1] = argb[2];\n                this._imageData[side].data[index + 2] = argb[3];\n                this._imageData[side].data[index + 3] = argb[0];\n            }\n        }\n        if (!this._locked) {\n            this._context[side].putImageData(this._imageData[side], 0, 0);\n            this._imageData[side] = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n     * value of the image pixel is preserved during this operation. The value of\n     * the RGB color parameter is treated as an unmultiplied color value.\n     *\n     * <p><b>Note:</b> To increase performance, when you use the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n     * call the <code>lock()</code> method before you call the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n     * the <code>unlock()</code> method when you have made all pixel changes.\n     * This process prevents objects that reference this BitmapImage2D instance from\n     * updating until you finish making the pixel changes.</p>\n     *\n     * @param x     The <i>x</i> position of the pixel whose value changes.\n     * @param y     The <i>y</i> position of the pixel whose value changes.\n     * @param color The resulting RGB color for the pixel.\n     */\n    BitmapImageCube.prototype.setPixel = function (side, x, y, color) {\n        var argb = ColorUtils_1.ColorUtils.float32ColorToARGB(color);\n        if (!this._locked)\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        var index = (x + y * this._size) * 4;\n        this._imageData[side].data[index + 0] = argb[1];\n        this._imageData[side].data[index + 1] = argb[2];\n        this._imageData[side].data[index + 2] = argb[3];\n        this._imageData[side].data[index + 3] = 255;\n        if (!this._locked) {\n            this._context[side].putImageData(this._imageData[side], 0, 0);\n            this._imageData = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Sets the color and alpha transparency values of a single pixel of a\n     * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n     * method; the main difference is that the <code>setPixel32()</code> method\n     * takes an ARGB color value that contains alpha channel information.\n     *\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n     * values. A premultiplied image pixel has the red, green, and blue color\n     * channel values already multiplied by the alpha data. For example, if the\n     * alpha value is 0, the values for the RGB channels are also 0, independent\n     * of their unmultiplied values. This loss of data can cause some problems\n     * when you perform operations. All BitmapImage2D methods take and return\n     * unmultiplied values. The internal pixel representation is converted from\n     * premultiplied to unmultiplied before it is returned as a value. During a\n     * set operation, the pixel value is premultiplied before the raw image pixel\n     * is set.</p>\n     *\n     * <p><b>Note:</b> To increase performance, when you use the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n     * call the <code>lock()</code> method before you call the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n     * the <code>unlock()</code> method when you have made all pixel changes.\n     * This process prevents objects that reference this BitmapImage2D instance from\n     * updating until you finish making the pixel changes.</p>\n     *\n     * @param x     The <i>x</i> position of the pixel whose value changes.\n     * @param y     The <i>y</i> position of the pixel whose value changes.\n     * @param color The resulting ARGB color for the pixel. If the bitmap is\n     *              opaque(not transparent), the alpha transparency portion of\n     *              this color value is ignored.\n     */\n    BitmapImageCube.prototype.setPixel32 = function (side, x, y, color) {\n        var argb = ColorUtils_1.ColorUtils.float32ColorToARGB(color);\n        if (!this._locked)\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        var index = (x + y * this._size) * 4;\n        this._imageData[side].data[index + 0] = argb[1];\n        this._imageData[side].data[index + 1] = argb[2];\n        this._imageData[side].data[index + 2] = argb[3];\n        this._imageData[side].data[index + 3] = argb[0];\n        if (!this._locked) {\n            this._context[side].putImageData(this._imageData[side], 0, 0);\n            this._imageData[side] = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Converts a byte array into a rectangular region of pixel data. For each\n     * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n     * the return value is written into the pixel. If the byte array ends before\n     * the full rectangle is written, the function returns. The data in the byte\n     * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n     * on the byte array before or after the pixels are read.\n     *\n     * @param rect           Specifies the rectangular region of the BitmapImage2D\n     *                       object.\n     * @param inputByteArray A ByteArray object that consists of 32-bit\n     *                       unmultiplied pixel values to be used in the\n     *                       rectangular region.\n     * @throws EOFError  The <code>inputByteArray</code> object does not include\n     *                   enough data to fill the area of the <code>rect</code>\n     *                   rectangle. The method fills as many pixels as possible\n     *                   before throwing the exception.\n     * @throws TypeError The rect or inputByteArray are null.\n     */\n    BitmapImageCube.prototype.setPixels = function (side, rect, inputByteArray) {\n        if (!this._locked)\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        inputByteArray.position = 0;\n        var i, j, index;\n        for (i = 0; i < rect.width; ++i) {\n            for (j = 0; j < rect.height; ++j) {\n                index = (i + rect.x + (j + rect.y) * this._size) * 4;\n                this._imageData[side].data[index + 0] = inputByteArray.readUnsignedInt();\n                this._imageData[side].data[index + 1] = inputByteArray.readUnsignedInt();\n                this._imageData[side].data[index + 2] = inputByteArray.readUnsignedInt();\n                this._imageData[side].data[index + 3] = inputByteArray.readUnsignedInt();\n            }\n        }\n        if (!this._locked) {\n            this._context[side].putImageData(this._imageData[side], 0, 0);\n            this._imageData[side] = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Unlocks an image so that any objects that reference the BitmapImage2D object,\n     * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n     * To improve performance, use this method along with the <code>lock()</code>\n     * method before and after numerous calls to the <code>setPixel()</code> or\n     * <code>setPixel32()</code> method.\n     *\n     * @param changeRect The area of the BitmapImage2D object that has changed. If\n     *                   you do not specify a value for this parameter, the\n     *                   entire area of the BitmapImage2D object is considered\n     *                   changed.\n     */\n    BitmapImageCube.prototype.unlock = function () {\n        if (!this._locked)\n            return;\n        this._locked = false;\n        for (var i = 0; i < 6; i++) {\n            this._context[i].putImageData(this._imageData[i], 0, 0); // at coords 0,0\n            this._imageData[i] = null;\n        }\n    };\n    /**\n     *\n     * @returns {ImageData}\n     */\n    BitmapImageCube.prototype.getImageData = function (side) {\n        if (!this._locked)\n            return this._context[side].getImageData(0, 0, this._size, this._size);\n        return this._imageData[side];\n    };\n    /**\n     *\n     * @returns {HTMLCanvasElement}\n     */\n    BitmapImageCube.prototype.getCanvas = function (side) {\n        return this._imageCanvas[side];\n    };\n    /**\n     *\n     * @param width\n     * @param height\n     * @private\n     */\n    BitmapImageCube.prototype._setSize = function (size) {\n        _super.prototype._setSize.call(this, size);\n        for (var i = 0; i < 6; i++) {\n            if (this._locked)\n                this._context[i].putImageData(this._imageData[i], 0, 0);\n            this._imageCanvas[i].width = size;\n            this._imageCanvas[i].height = size;\n            if (this._locked)\n                this._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n        }\n    };\n    BitmapImageCube.assetType = \"[image BitmapImageCube]\";\n    BitmapImageCube.posX = 0;\n    BitmapImageCube.negX = 1;\n    BitmapImageCube.posY = 2;\n    BitmapImageCube.negY = 3;\n    BitmapImageCube.posZ = 4;\n    BitmapImageCube.negZ = 5;\n    return BitmapImageCube;\n}(ImageCube_1.ImageCube));\nexports.BitmapImageCube = BitmapImageCube;\n\n},{\"../geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"../image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\",\"../image/ImageCube\":\"awayjs-core/lib/image/ImageCube\",\"../utils/BitmapImageUtils\":\"awayjs-core/lib/utils/BitmapImageUtils\",\"../utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\"}],\"awayjs-core/lib/image/BlendMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * A export class that provides constant values for visual blend mode effects. These\n * constants are used in the following:\n * <ul>\n *   <li> The <code>blendMode</code> property of the\n * flash.display.DisplayObject class.</li>\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\n * method of the flash.display.BitmapData class</li>\n * </ul>\n */\nvar BlendMode = (function () {\n    function BlendMode() {\n    }\n    /**\n     * Adds the values of the constituent colors of the display object to the\n     * colors of its background, applying a ceiling of 0xFF. This setting is\n     * commonly used for animating a lightening dissolve between two objects.\n     *\n     * <p>For example, if the display object has a pixel with an RGB value of\n     * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\n     * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\n     * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\n     */\n    BlendMode.ADD = \"add\";\n    /**\n     * Applies the alpha value of each pixel of the display object to the\n     * background. This requires the <code>blendMode</code> property of the\n     * parent display object be set to\n     * <code>away.base.BlendMode.LAYER</code>.\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.ALPHA = \"alpha\";\n    /**\n     * Selects the darker of the constituent colors of the display object and the\n     * colors of the background(the colors with the smaller values). This\n     * setting is commonly used for superimposing type.\n     *\n     * <p>For example, if the display object has a pixel with an RGB value of\n     * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n     * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\n     * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.DARKEN = \"darken\";\n    /**\n     * Compares the constituent colors of the display object with the colors of\n     * its background, and subtracts the darker of the values of the two\n     * constituent colors from the lighter value. This setting is commonly used\n     * for more vibrant colors.\n     *\n     * <p>For example, if the display object has a pixel with an RGB value of\n     * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n     * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\n     * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\n     */\n    BlendMode.DIFFERENCE = \"difference\";\n    /**\n     * Erases the background based on the alpha value of the display object. This\n     * process requires that the <code>blendMode</code> property of the parent\n     * display object be set to <code>flash.display.BlendMode.LAYER</code>.\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.ERASE = \"erase\";\n    /**\n     * Adjusts the color of each pixel based on the darkness of the display\n     * object. If the display object is lighter than 50% gray, the display object\n     * and background colors are screened, which results in a lighter color. If\n     * the display object is darker than 50% gray, the colors are multiplied,\n     * which results in a darker color. This setting is commonly used for shading\n     * effects.\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.HARDLIGHT = \"hardlight\";\n    /**\n     * Inverts the background.\n     */\n    BlendMode.INVERT = \"invert\";\n    /**\n     * Forces the creation of a transparency group for the display object. This\n     * means that the display object is precomposed in a temporary buffer before\n     * it is processed further. The precomposition is done automatically if the\n     * display object is precached by means of bitmap caching or if the display\n     * object is a display object container that has at least one child object\n     * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.LAYER = \"layer\";\n    /**\n     * Selects the lighter of the constituent colors of the display object and\n     * the colors of the background(the colors with the larger values). This\n     * setting is commonly used for superimposing type.\n     *\n     * <p>For example, if the display object has a pixel with an RGB value of\n     * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n     * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\n     * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.LIGHTEN = \"lighten\";\n    /**\n     * Multiplies the values of the display object constituent colors by the\n     * constituent colors of the background color, and normalizes by dividing by\n     * 0xFF, resulting in darker colors. This setting is commonly used for\n     * shadows and depth effects.\n     *\n     * <p>For example, if a constituent color(such as red) of one pixel in the\n     * display object and the corresponding color of the pixel in the background\n     * both have the value 0x88, the multiplied result is 0x4840. Dividing by\n     * 0xFF yields a value of 0x48 for that constituent color, which is a darker\n     * shade than the color of the display object or the color of the\n     * background.</p>\n     */\n    BlendMode.MULTIPLY = \"multiply\";\n    /**\n     * The display object appears in front of the background. Pixel values of the\n     * display object override the pixel values of the background. Where the\n     * display object is transparent, the background is visible.\n     */\n    BlendMode.NORMAL = \"normal\";\n    /**\n     * Adjusts the color of each pixel based on the darkness of the background.\n     * If the background is lighter than 50% gray, the display object and\n     * background colors are screened, which results in a lighter color. If the\n     * background is darker than 50% gray, the colors are multiplied, which\n     * results in a darker color. This setting is commonly used for shading\n     * effects.\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.OVERLAY = \"overlay\";\n    /**\n     * Multiplies the complement(inverse) of the display object color by the\n     * complement of the background color, resulting in a bleaching effect. This\n     * setting is commonly used for highlights or to remove black areas of the\n     * display object.\n     */\n    BlendMode.SCREEN = \"screen\";\n    /**\n     * Uses a shader to define the blend between objects.\n     *\n     * <p>Setting the <code>blendShader</code> property to a Shader instance\n     * automatically sets the display object's <code>blendMode</code> property to\n     * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\n     * set to <code>BlendMode.SHADER</code> without first setting the\n     * <code>blendShader</code> property, the <code>blendMode</code> property is\n     * set to <code>BlendMode.NORMAL</code> instead. If the\n     * <code>blendShader</code> property is set(which sets the\n     * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\n     * later the value of the <code>blendMode</code> property is changed, the\n     * blend mode can be reset to use the blend shader simply by setting the\n     * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\n     * <code>blendShader</code> property does not need to be set again except to\n     * change the shader that's used to define the blend mode.</p>\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.SHADER = \"shader\";\n    /**\n     * Subtracts the values of the constituent colors in the display object from\n     * the values of the background color, applying a floor of 0. This setting is\n     * commonly used for animating a darkening dissolve between two objects.\n     *\n     * <p>For example, if the display object has a pixel with an RGB value of\n     * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\n     * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\n     * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\n     */\n    BlendMode.SUBTRACT = \"subtract\";\n    return BlendMode;\n}());\nexports.BlendMode = BlendMode;\n\n},{}],\"awayjs-core/lib/image/CPUCanvas\":[function(require,module,exports){\n\"use strict\";\nvar CPURenderingContext2D_1 = require(\"../image/CPURenderingContext2D\");\nvar ImageData_1 = require(\"../image/ImageData\");\nvar CPUCanvas = (function () {\n    function CPUCanvas() {\n        this.width = 1;\n        this.height = 1;\n        this.reset();\n    }\n    CPUCanvas.prototype.getContext = function (contextId) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return new CPURenderingContext2D_1.CPURenderingContext2D(this);\n    };\n    CPUCanvas.prototype.reset = function () {\n        if (!this.imageData) {\n            this.imageData = new ImageData_1.ImageData(this.width, this.height);\n        }\n        else {\n            this.imageData.width = this.width;\n            this.imageData.height = this.height;\n            if (this.imageData.data) {\n                //this.imageData.data.length = 0;\n                this.imageData.data = null;\n            }\n            this.imageData.data = new Uint8Array(this.width * this.height * 4);\n        }\n        for (var i = 0; i < this.width * this.height * 4; i += 4) {\n            this.imageData.data[i] = 255;\n            this.imageData.data[i + 1] = 255;\n            this.imageData.data[i + 2] = 255;\n            this.imageData.data[i + 3] = 255;\n        }\n    };\n    CPUCanvas.prototype.getImageData = function () {\n        if (this.imageData.width != this.width || this.imageData.height != this.height) {\n            this.reset();\n        }\n        return this.imageData;\n    };\n    return CPUCanvas;\n}());\nexports.CPUCanvas = CPUCanvas;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CPUCanvas;\n\n},{\"../image/CPURenderingContext2D\":\"awayjs-core/lib/image/CPURenderingContext2D\",\"../image/ImageData\":\"awayjs-core/lib/image/ImageData\"}],\"awayjs-core/lib/image/CPURenderingContext2D\":[function(require,module,exports){\n\"use strict\";\nvar BitmapImage2D_1 = require(\"../image/BitmapImage2D\");\nvar Matrix_1 = require(\"../geom/Matrix\");\nvar Point_1 = require(\"../geom/Point\");\n//TODO: implement all methods\nvar CPURenderingContext2D = (function () {\n    function CPURenderingContext2D(cpuCanvas) {\n        this.point = new Point_1.Point();\n        this.point2 = new Point_1.Point();\n        this.cpuCanvas = cpuCanvas;\n    }\n    CPURenderingContext2D.prototype.restore = function () {\n        this.matrix = null;\n    };\n    CPURenderingContext2D.prototype.setTransform = function (m11, m12, m21, m22, dx, dy) {\n        this.matrix = new Matrix_1.Matrix(m11, m12, m21, m22, dx, dy);\n    };\n    CPURenderingContext2D.prototype.save = function () {\n    };\n    CPURenderingContext2D.prototype.arc = function (x, y, radius, startAngle, endAngle, anticlockwise) {\n    };\n    CPURenderingContext2D.prototype.measureText = function (text) {\n        return undefined;\n    };\n    CPURenderingContext2D.prototype.isPointInPath = function (x, y, fillRule) {\n        return undefined;\n    };\n    CPURenderingContext2D.prototype.quadraticCurveTo = function (cpx, cpy, x, y) {\n    };\n    CPURenderingContext2D.prototype.putImageData = function (imagedata, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n    };\n    CPURenderingContext2D.prototype.rotate = function (angle) {\n    };\n    CPURenderingContext2D.prototype.fillText = function (text, x, y, maxWidth) {\n    };\n    CPURenderingContext2D.prototype.translate = function (x, y) {\n    };\n    CPURenderingContext2D.prototype.scale = function (x, y) {\n    };\n    CPURenderingContext2D.prototype.createRadialGradient = function (x0, y0, r0, x1, y1, r1) {\n        return undefined;\n    };\n    CPURenderingContext2D.prototype.ellipse = function (x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n    };\n    CPURenderingContext2D.prototype.lineTo = function (x, y) {\n    };\n    CPURenderingContext2D.prototype.getLineDash = function () {\n        return undefined;\n    };\n    CPURenderingContext2D.prototype.fill = function (fillRule) {\n    };\n    CPURenderingContext2D.prototype.createImageData = function (imageDataOrSw, sh) {\n        return undefined;\n    };\n    CPURenderingContext2D.prototype.createPattern = function (image, repetition) {\n        return undefined;\n    };\n    CPURenderingContext2D.prototype.closePath = function () {\n    };\n    CPURenderingContext2D.prototype.rect = function (x, y, w, h) {\n    };\n    CPURenderingContext2D.prototype.clip = function (fillRule) {\n    };\n    CPURenderingContext2D.prototype.clearRect = function (x, y, w, h) {\n        var imageData = this.cpuCanvas.getImageData();\n        for (var i = x; i < x + w; i++) {\n            for (var j = y; j < y + h; j++) {\n                var index = (i + j * imageData.width) * 4;\n                imageData.data[index] = 0;\n                imageData.data[index + 1] = 0;\n                imageData.data[index + 2] = 0;\n                imageData.data[index + 3] = 0;\n            }\n        }\n    };\n    CPURenderingContext2D.prototype.moveTo = function (x, y) {\n    };\n    CPURenderingContext2D.prototype.getImageData = function (sx, sy, sw, sh) {\n        //var result:ImageData = new ImageData(sw, sh);\n        //var i:number = 0;\n        //\n        //for (i = 0; i < sw * sh * 4; i += 4) {\n        //    result.data[i] = 255;\n        //    result.data[i + 1] = 255;\n        //    result.data[i + 2] = 255;\n        //    result.data[i + 3] = 255;\n        //}\n        //\n        //var imageData:ImageData = this.cpuCanvas.getImageData();\n        //for (i = sx; i < sx + sw; i++) {\n        //    for (var j:number = sy; j < sy + sh; j++) {\n        //        this.copyPixel32(result, i - sx, i - sy, imageData, i, j);\n        //    }\n        //}\n        return this.cpuCanvas.getImageData();\n    };\n    CPURenderingContext2D.prototype.applyPixel32 = function (target, x, y, color) {\n        //todo: blending support\n        x = Math.floor(x);\n        y = Math.floor(y);\n        if (x < 0 || x >= target.width || y >= target.height || y < 0)\n            return;\n        var index = (x + y * target.width) * 4;\n        //var alpha:number = color[3] / 255;\n        target.data[index] += color[0];\n        target.data[index + 1] += color[1];\n        target.data[index + 2] += color[2];\n        target.data[index + 3] += color[3];\n        //target.data[index] = color[0];\n        //target.data[index + 1] = color[1];\n        //target.data[index + 2] = color[2];\n        //target.data[index + 3] = color[3];\n        target.data[index] = target.data[index] & 0xFF;\n        target.data[index + 1] = target.data[index + 1] & 0xFF;\n        target.data[index + 2] = target.data[index + 2] & 0xFF;\n        target.data[index + 3] = target.data[index + 3] & 0xFF;\n    };\n    CPURenderingContext2D.prototype.copyPixel32 = function (target, x, y, source, fromX, fromY) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n        fromX = Math.floor(fromX);\n        fromY = Math.floor(fromY);\n        if (x < 0 || x >= target.width || y >= target.height || y < 0)\n            return;\n        if (fromX < 0 || fromX >= source.width || fromY >= source.height || fromY < 0)\n            return;\n        var index = (x + y * target.width) * 4;\n        var fromIndex = (fromX + fromY * source.width) * 4;\n        target.data[index] = source.data[fromIndex];\n        target.data[index + 1] = source.data[fromIndex + 1];\n        target.data[index + 2] = source.data[fromIndex + 2];\n        target.data[index + 3] = source.data[fromIndex + 3];\n    };\n    CPURenderingContext2D.prototype.fillRect = function (x, y, w, h) {\n        if (this.fillStyle) {\n            if (this.parsedFillStyle != this.fillStyle) {\n                var colorStrings = this.fillStyle.substring(5, this.fillStyle.lastIndexOf(\")\")).split(\",\");\n                this.parsedA = parseFloat(colorStrings[3]) * 255;\n                this.parsedR = parseInt(colorStrings[0]);\n                this.parsedG = parseInt(colorStrings[1]);\n                this.parsedB = parseInt(colorStrings[2]);\n                this.parsedFillStyle = this.fillStyle;\n            }\n            var imageData = this.cpuCanvas.getImageData();\n            for (var i = x; i < x + w; i++) {\n                for (var j = y; j < y + h; j++) {\n                    var index = (i + j * imageData.width) * 4;\n                    imageData.data[index] = this.parsedR;\n                    imageData.data[index + 1] = this.parsedG;\n                    imageData.data[index + 2] = this.parsedB;\n                    imageData.data[index + 3] = this.parsedA;\n                }\n            }\n        }\n    };\n    CPURenderingContext2D.prototype.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    };\n    CPURenderingContext2D.prototype.drawImage = function (image, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight) {\n        var b = image;\n        if (image.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\n            var bitmap = b;\n            bitmap.lock();\n            this.drawBitmap(bitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n            bitmap.unlock();\n        }\n        else if (image.constructor.toString().indexOf(\"HTMLImage\") > -1) {\n            var htmlImage = image;\n            var htmlCanvas = document.createElement(\"canvas\");\n            htmlCanvas.width = htmlImage.width;\n            htmlCanvas.height = htmlImage.height;\n            var htmlContext = htmlCanvas.getContext(\"2d\");\n            htmlContext.drawImage(htmlImage, 0, 0);\n            var htmlImageData = htmlContext.getImageData(0, 0, htmlImage.width, htmlImage.height);\n            var resultBitmap = new BitmapImage2D_1.BitmapImage2D(htmlImage.width, htmlImage.height, true, 0, false);\n            resultBitmap.getImageData().data = htmlImageData.data;\n            var passBitmap = resultBitmap;\n            this.drawImage(passBitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n        }\n        else if (image.constructor.toString().indexOf(\"CPUCanvas\") > -1) {\n            //\n            var canvas = b;\n            this.drawBitmap(canvas, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n        }\n    };\n    CPURenderingContext2D.prototype.drawBitmap = function (bitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight) {\n        if (!width || width == 0) {\n            width = bitmap.width;\n            height = bitmap.height;\n        }\n        if (!canvasOffsetX || canvasOffsetX == 0) {\n            canvasOffsetX = 0;\n            canvasOffsetY = 0;\n        }\n        if (!canvasImageWidth || canvasImageWidth == 0 || this.matrix) {\n            canvasImageWidth = width;\n            canvasImageHeight = height;\n        }\n        //console.log(\"CPURenderingContext2D:drawBitmap(width: \" + width + \" height: \" + height + \" canvasImageWidth: \" + canvasImageWidth + \" canvasImageHeight: \" + canvasImageHeight);\n        var sourceData = bitmap.getImageData();\n        var canvasImageData = this.cpuCanvas.getImageData();\n        if (this.matrix || (canvasImageWidth != width || canvasImageHeight != height)) {\n            var matrix = this.matrix;\n            if (!matrix) {\n                matrix = new Matrix_1.Matrix();\n                matrix.scale(canvasImageWidth / width, canvasImageHeight / height);\n            }\n            var scaleX = Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b);\n            var scaleY = Math.sqrt(matrix.c * matrix.c + matrix.d * matrix.d);\n            canvasImageWidth = width * scaleX;\n            canvasImageHeight = height * scaleY;\n            matrix.tx += canvasOffsetX;\n            matrix.ty += canvasOffsetY;\n            canvasOffsetX = Math.floor(matrix.tx);\n            canvasOffsetY = Math.floor(matrix.ty);\n            matrix.invert();\n            if (scaleX >= 1 || scaleY >= 1) {\n                var p = new Point_1.Point();\n                for (var i = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                    for (var j = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                        p.x = i;\n                        p.y = j;\n                        p = matrix.transformPoint(p);\n                        var color = CPURenderingContext2D.sampleBilinear(p.x, p.y, sourceData);\n                        this.applyPixel32(canvasImageData, i, j, color);\n                    }\n                }\n            }\n            else {\n                //decimate\n                var p1 = this.point;\n                var p2 = this.point2;\n                for (var i = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                    for (var j = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                        p1.x = i;\n                        p1.y = j;\n                        p1 = matrix.transformPoint(p1);\n                        p2.x = i + 1;\n                        p2.y = j + 1;\n                        p2 = matrix.transformPoint(p2);\n                        var color = CPURenderingContext2D.sampleBox(p1.x + offsetX, p1.y + offsetY, p2.x + offsetX, p2.y + offsetY, sourceData);\n                        this.applyPixel32(canvasImageData, i, j, color);\n                    }\n                }\n            }\n            matrix.invert();\n        }\n        else {\n            for (var i = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                for (var j = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                    var color = CPURenderingContext2D.sample(i - canvasOffsetX + offsetX, j - canvasOffsetY + offsetY, sourceData);\n                    this.applyPixel32(canvasImageData, i, j, color);\n                }\n            }\n        }\n    };\n    CPURenderingContext2D.prototype.transform = function (m11, m12, m21, m22, dx, dy) {\n    };\n    CPURenderingContext2D.prototype.stroke = function () {\n    };\n    CPURenderingContext2D.prototype.strokeRect = function (x, y, w, h) {\n    };\n    CPURenderingContext2D.prototype.setLineDash = function (segments) {\n    };\n    CPURenderingContext2D.prototype.strokeText = function (text, x, y, maxWidth) {\n    };\n    CPURenderingContext2D.prototype.beginPath = function () {\n    };\n    CPURenderingContext2D.prototype.arcTo = function (x1, y1, x2, y2, radius) {\n    };\n    CPURenderingContext2D.prototype.createLinearGradient = function (x0, y0, x1, y1) {\n        return undefined;\n    };\n    CPURenderingContext2D.sampleBilinear = function (u, v, texture, texelSizeX, texelSizeY) {\n        if (texelSizeX === void 0) { texelSizeX = 1; }\n        if (texelSizeY === void 0) { texelSizeY = 1; }\n        var color00 = CPURenderingContext2D.sample(u, v, texture);\n        var color10 = CPURenderingContext2D.sample(u + texelSizeX, v, texture);\n        var color01 = CPURenderingContext2D.sample(u, v + texelSizeY, texture);\n        var color11 = CPURenderingContext2D.sample(u + texelSizeX, v + texelSizeY, texture);\n        var a = u;\n        a = a - Math.floor(a);\n        var interColor0 = CPURenderingContext2D.interpolateColor(color00, color10, a);\n        var interColor1 = CPURenderingContext2D.interpolateColor(color01, color11, a);\n        var b = v;\n        b = b - Math.floor(b);\n        return CPURenderingContext2D.interpolateColor(interColor0, interColor1, b);\n    };\n    CPURenderingContext2D.sample = function (u, v, imageData) {\n        u = Math.floor(u);\n        v = Math.floor(v);\n        var result = [0, 0, 0, 0];\n        if (u < 0 || u >= imageData.width || v < 0 || v >= imageData.height) {\n            return result;\n        }\n        var index = (u + v * imageData.width) * 4;\n        result[0] = imageData.data[index];\n        result[1] = imageData.data[index + 1];\n        result[2] = imageData.data[index + 2];\n        result[3] = imageData.data[index + 3];\n        return result;\n    };\n    CPURenderingContext2D.sampleBox = function (x0, y0, x1, y1, texture) {\n        var area = 0; // -- total area accumulated in pixels\n        var result = [0, 0, 0, 0];\n        var x;\n        var y;\n        var xsize;\n        var ysize;\n        var fromY = Math.floor(y0);\n        var toY = Math.ceil(y1);\n        fromY = Math.max(Math.min(fromY, texture.height - 1), 0);\n        toY = Math.max(Math.min(toY, texture.height - 1), 0);\n        for (y = fromY; y < toY; y++) {\n            ysize = 1;\n            if (y < y0) {\n                ysize = ysize * (1.0 - (y0 - y));\n            }\n            if (y > y1) {\n                ysize = ysize * (1.0 - (y - y1));\n            }\n            var fromX = Math.floor(x0);\n            var toX = Math.ceil(x1);\n            fromX = Math.max(Math.min(fromX, texture.width - 1), 0);\n            toX = Math.max(Math.min(toX, texture.width - 1), 0);\n            for (x = fromX; x < toX; x++) {\n                xsize = ysize;\n                var color = CPURenderingContext2D.sample(x, y, texture);\n                if (x < x0) {\n                    xsize = xsize * (1.0 - (x0 - x));\n                }\n                if (x > x1) {\n                    xsize = xsize * (1.0 - (x - x1));\n                }\n                result[0] += color[0] * xsize;\n                result[1] += color[1] * xsize;\n                result[2] += color[2] * xsize;\n                result[3] += color[3] * xsize;\n                area = area + xsize;\n            }\n        }\n        result[0] /= area;\n        result[1] /= area;\n        result[2] /= area;\n        result[3] /= area;\n        result[0] = result[0] & 0xFF;\n        result[1] = result[1] & 0xFF;\n        result[2] = result[2] & 0xFF;\n        result[3] = result[3] & 0xFF;\n        return result;\n    };\n    CPURenderingContext2D.interpolateColor = function (source, target, a) {\n        var result = [];\n        result[0] = source[0] + (target[0] - source[0]) * a;\n        result[1] = source[1] + (target[1] - source[1]) * a;\n        result[2] = source[2] + (target[2] - source[2]) * a;\n        result[3] = source[3] + (target[3] - source[3]) * a;\n        return result;\n    };\n    return CPURenderingContext2D;\n}());\nexports.CPURenderingContext2D = CPURenderingContext2D;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CPURenderingContext2D;\n\n},{\"../geom/Matrix\":\"awayjs-core/lib/geom/Matrix\",\"../geom/Point\":\"awayjs-core/lib/geom/Point\",\"../image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\"}],\"awayjs-core/lib/image/IImageCanvas\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/image/Image2D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ImageBase_1 = require(\"../image/ImageBase\");\nvar Rectangle_1 = require(\"../geom/Rectangle\");\nvar ImageUtils_1 = require(\"../utils/ImageUtils\");\nvar Image2D = (function (_super) {\n    __extends(Image2D, _super);\n    /**\n     *\n     */\n    function Image2D(width, height, powerOfTwo) {\n        if (powerOfTwo === void 0) { powerOfTwo = true; }\n        _super.call(this);\n        this._powerOfTwo = true;\n        this._rect = new Rectangle_1.Rectangle(0, 0, width, height);\n        this._powerOfTwo = powerOfTwo;\n        this._testDimensions();\n    }\n    Object.defineProperty(Image2D.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Image2D.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Image2D.prototype, \"height\", {\n        /**\n         * The height of the image in pixels.\n         */\n        get: function () {\n            return this._rect.height;\n        },\n        set: function (value) {\n            if (this._rect.height == value)\n                return;\n            this._setSize(this._rect.width, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Image2D.prototype, \"rect\", {\n        /**\n         * The rectangle that defines the size and location of the bitmap image. The\n         * top and left of the rectangle are 0; the width and height are equal to the\n         * width and height in pixels of the BitmapData object.\n         */\n        get: function () {\n            return this._rect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Image2D.prototype, \"width\", {\n        /**\n         * The width of the bitmap image in pixels.\n         */\n        get: function () {\n            return this._rect.width;\n        },\n        set: function (value) {\n            if (this._rect.width == value)\n                return;\n            this._setSize(value, this._rect.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * @param width\n     * @param height\n     * @private\n     */\n    Image2D.prototype._setSize = function (width, height) {\n        if (this._rect.width != width || this._rect.height != height)\n            this.clear();\n        this._rect.width = width;\n        this._rect.height = height;\n        this._testDimensions();\n    };\n    /**\n     *\n     * @private\n     */\n    Image2D.prototype._testDimensions = function () {\n        if (this._powerOfTwo && (!ImageUtils_1.ImageUtils.isDimensionValid(this._rect.width) || !ImageUtils_1.ImageUtils.isDimensionValid(this._rect.height)))\n            throw new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n    };\n    Object.defineProperty(Image2D.prototype, \"powerOfTwo\", {\n        /**\n         * Enable POT texture size validation\n         * @returns {boolean}\n         */\n        get: function () {\n            return this._powerOfTwo;\n        },\n        set: function (value) {\n            if (this._powerOfTwo == value)\n                return;\n            this._powerOfTwo = value;\n            this._testDimensions();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Image2D.assetType = \"[image Image2D]\";\n    return Image2D;\n}(ImageBase_1.ImageBase));\nexports.Image2D = Image2D;\n\n},{\"../geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"../image/ImageBase\":\"awayjs-core/lib/image/ImageBase\",\"../utils/ImageUtils\":\"awayjs-core/lib/utils/ImageUtils\"}],\"awayjs-core/lib/image/ImageBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"../library/AssetBase\");\nvar ImageBase = (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     *\n     */\n    function ImageBase() {\n        _super.call(this);\n        this._pFormat = \"bgra\";\n    }\n    Object.defineProperty(ImageBase.prototype, \"format\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return this._pFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ImageBase;\n}(AssetBase_1.AssetBase));\nexports.ImageBase = ImageBase;\n\n},{\"../library/AssetBase\":\"awayjs-core/lib/library/AssetBase\"}],\"awayjs-core/lib/image/ImageCube\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ImageBase_1 = require(\"../image/ImageBase\");\nvar ImageUtils_1 = require(\"../utils/ImageUtils\");\nvar ImageCube = (function (_super) {\n    __extends(ImageCube, _super);\n    /**\n     *\n     */\n    function ImageCube(size) {\n        _super.call(this);\n        this._size = size;\n        this._testDimensions();\n    }\n    Object.defineProperty(ImageCube.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return ImageCube.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageCube.prototype, \"size\", {\n        /**\n         * The size of the cube bitmap in pixels.\n         */\n        get: function () {\n            return this._size;\n        },\n        set: function (value) {\n            if (this._size == value)\n                return;\n            this._setSize(this._size);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * @param width\n     * @param height\n     * @private\n     */\n    ImageCube.prototype._setSize = function (size) {\n        if (this._size != size)\n            this.clear();\n        this._size = size;\n        this._testDimensions();\n    };\n    /**\n     *\n     * @private\n     */\n    ImageCube.prototype._testDimensions = function () {\n        if (!ImageUtils_1.ImageUtils.isDimensionValid(this._size))\n            throw new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n    };\n    ImageCube.assetType = \"[image ImageCube]\";\n    return ImageCube;\n}(ImageBase_1.ImageBase));\nexports.ImageCube = ImageCube;\n\n},{\"../image/ImageBase\":\"awayjs-core/lib/image/ImageBase\",\"../utils/ImageUtils\":\"awayjs-core/lib/utils/ImageUtils\"}],\"awayjs-core/lib/image/ImageData\":[function(require,module,exports){\n\"use strict\";\nvar ImageData = (function () {\n    function ImageData(width, height) {\n        this.width = width;\n        this.height = height;\n        this.data = new Uint8Array(width * height * 4);\n    }\n    return ImageData;\n}());\nexports.ImageData = ImageData;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ImageData;\n\n},{}],\"awayjs-core/lib/image/Sampler2D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SamplerBase_1 = require(\"../image/SamplerBase\");\n/**\n * The Sampler2D export class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Sampler2D()</code> constructor.\n *\n * <p>The <code>Sampler2D()</code> constructor allows you to create a Sampler2D\n * object that contains a reference to a Image2D object. After you create a\n * Sampler2D object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Sampler2D object can share its Image2D reference among several Sampler2D\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Sampler2D objects that reference the same Image2D object,\n * multiple texture objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each texture\n * object instance.</p>\n\n */\nvar Sampler2D = (function (_super) {\n    __extends(Sampler2D, _super);\n    /**\n     *\n     * @param image2D\n     * @param smoothing\n     */\n    function Sampler2D(repeat, smooth, mipmap) {\n        if (repeat === void 0) { repeat = false; }\n        if (smooth === void 0) { smooth = false; }\n        if (mipmap === void 0) { mipmap = false; }\n        _super.call(this, smooth, mipmap);\n        this._repeat = repeat;\n        this._updateRect();\n    }\n    Object.defineProperty(Sampler2D.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Sampler2D.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sampler2D.prototype, \"repeat\", {\n        /**\n         * Controls whether or not the Sampler2D object is snapped to the nearest pixel.\n         * This value is ignored in the native and HTML5 targets.\n         * The PixelSnapping export class includes possible values:\n         * <ul>\n         *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n         *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n         * the nearest pixel, independent of transformation.</li>\n         *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n         * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n         * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n         * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n         * When targeting Flash Player, this value allows the image to be drawn as fast\n         * as possible using the internal vector renderer.</li>\n         * </ul>\n         */\n        //var pixelSnapping:PixelSnapping;\n        /**\n         * Controls whether or not the bitmap is smoothed when scaled. If\n         * <code>true</code>, the bitmap is smoothed when scaled. If\n         * <code>false</code>, the bitmap is not smoothed when scaled.\n         */\n        /**\n         *\n         */\n        get: function () {\n            return this._repeat;\n        },\n        set: function (value) {\n            if (this._repeat == value)\n                return;\n            this._repeat = value;\n            //TODO: update dependencies\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sampler2D.prototype, \"imageRect\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._imageRect;\n        },\n        set: function (value) {\n            if (this._imageRect == value)\n                return;\n            this._imageRect = value;\n            this._updateRect();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sampler2D.prototype, \"frameRect\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._frameRect;\n        },\n        set: function (value) {\n            if (this._frameRect == value)\n                return;\n            this._frameRect = value;\n            this._updateRect();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Sampler2D.prototype._updateRect = function () {\n    };\n    Sampler2D.assetType = \"[asset Sampler2D]\";\n    return Sampler2D;\n}(SamplerBase_1.SamplerBase));\nexports.Sampler2D = Sampler2D;\n\n},{\"../image/SamplerBase\":\"awayjs-core/lib/image/SamplerBase\"}],\"awayjs-core/lib/image/SamplerBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"../library/AssetBase\");\n/**\n *\n */\nvar SamplerBase = (function (_super) {\n    __extends(SamplerBase, _super);\n    /**\n     *\n     */\n    function SamplerBase(smooth, mipmap) {\n        if (smooth === void 0) { smooth = false; }\n        if (mipmap === void 0) { mipmap = false; }\n        _super.call(this);\n        this._smooth = smooth;\n        this._mipmap = mipmap;\n    }\n    Object.defineProperty(SamplerBase.prototype, \"smooth\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._smooth;\n        },\n        set: function (value) {\n            if (this._smooth == value)\n                return;\n            this._smooth = value;\n            //TODO: update dependencies\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SamplerBase.prototype, \"mipmap\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._mipmap;\n        },\n        set: function (value) {\n            if (this._mipmap == value)\n                return;\n            this._mipmap = value;\n            //TODO: update dependencies\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SamplerBase;\n}(AssetBase_1.AssetBase));\nexports.SamplerBase = SamplerBase;\n\n},{\"../library/AssetBase\":\"awayjs-core/lib/library/AssetBase\"}],\"awayjs-core/lib/image/SamplerCube\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SamplerBase_1 = require(\"../image/SamplerBase\");\n/**\n * The Bitmap export class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Bitmap()</code> constructor.\n *\n * <p>The <code>Bitmap()</code> constructor allows you to create a Bitmap\n * object that contains a reference to a BitmapData object. After you create a\n * Bitmap object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Bitmap object can share its BitmapData reference among several Bitmap\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Bitmap objects that reference the same BitmapData object,\n * multiple texture objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each texture\n * object instance.</p>\n\n */\nvar SamplerCube = (function (_super) {\n    __extends(SamplerCube, _super);\n    /**\n     *\n     * @param bitmapData\n     * @param smoothing\n     */\n    function SamplerCube(smooth, mipmap) {\n        if (smooth === void 0) { smooth = false; }\n        if (mipmap === void 0) { mipmap = false; }\n        _super.call(this, smooth, mipmap);\n    }\n    Object.defineProperty(SamplerCube.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return SamplerCube.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SamplerCube.assetType = \"[asset SamplerCube]\";\n    return SamplerCube;\n}(SamplerBase_1.SamplerBase));\nexports.SamplerCube = SamplerCube;\n\n},{\"../image/SamplerBase\":\"awayjs-core/lib/image/SamplerBase\"}],\"awayjs-core/lib/image/SpecularImage2D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BitmapImage2D_1 = require(\"../image/BitmapImage2D\");\nvar BitmapImageChannel_1 = require(\"../image/BitmapImageChannel\");\nvar Image2D_1 = require(\"../image/Image2D\");\nvar Point_1 = require(\"../geom/Point\");\n/**\n *\n */\nvar SpecularImage2D = (function (_super) {\n    __extends(SpecularImage2D, _super);\n    /**\n     *\n     */\n    function SpecularImage2D(specularSource, glossSource) {\n        if (specularSource === void 0) { specularSource = null; }\n        if (glossSource === void 0) { glossSource = null; }\n        _super.call(this, 1, 1);\n        this._specularSource = specularSource;\n        this._glossSource = glossSource;\n        this._output = new BitmapImage2D_1.BitmapImage2D(1, 1, false, 0xffffff);\n        this._testSize();\n    }\n    Object.defineProperty(SpecularImage2D.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return SpecularImage2D.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpecularImage2D.prototype, \"specularSource\", {\n        get: function () {\n            return this._specularSource;\n        },\n        set: function (value) {\n            if (this._specularSource == value)\n                return;\n            this._specularSource = value;\n            this.invalidate();\n            this._testSize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpecularImage2D.prototype, \"glossSource\", {\n        get: function () {\n            return this._glossSource;\n        },\n        set: function (value) {\n            if (this._glossSource == value)\n                return;\n            this._glossSource = value;\n            this.invalidate();\n            this._testSize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a new SpecularImage2D object that is a clone of the original instance\n     * with an exact copy of the contained bitmap.\n     *\n     * @return A new SpecularImage2D object that is identical to the original.\n     */\n    SpecularImage2D.prototype.clone = function () {\n        return new SpecularImage2D(this._specularSource, this._glossSource);\n    };\n    /**\n     * Frees memory that is used to store the SpecularImage2D object.\n     *\n     * <p>When the <code>dispose()</code> method is called on an image, the width\n     * and height of the image are set to 0. All subsequent calls to methods or\n     * properties of this SpecularImage2D instance fail, and an exception is thrown.\n     * </p>\n     *\n     * <p><code>SpecularImage2D.dispose()</code> releases the memory occupied by the\n     * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n     * memory). After using <code>SpecularImage2D.dispose()</code>, the SpecularImage2D\n     * object is no longer usable and an exception may be thrown if\n     * you call functions on the SpecularImage2D object. However,\n     * <code>SpecularImage2D.dispose()</code> does not garbage collect the SpecularImage2D\n     * object(approximately 128 bytes); the memory occupied by the actual\n     * SpecularImage2D object is released at the time the SpecularImage2D object is\n     * collected by the garbage collector.</p>\n     *\n     */\n    SpecularImage2D.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._rect = null;\n        this._output.dispose();\n    };\n    /**\n     *\n     * @returns {ImageData}\n     */\n    SpecularImage2D.prototype.getImageData = function () {\n        var origin = new Point_1.Point();\n        this._output.fillRect(this._rect, 0xffffff);\n        if (this._glossSource)\n            this._output.copyChannel(this._glossSource, this._rect, origin, BitmapImageChannel_1.BitmapImageChannel.GREEN, BitmapImageChannel_1.BitmapImageChannel.GREEN);\n        if (this._specularSource)\n            this._output.copyChannel(this._specularSource, this._rect, origin, BitmapImageChannel_1.BitmapImageChannel.RED, BitmapImageChannel_1.BitmapImageChannel.RED);\n        return this._output.getImageData();\n    };\n    /**\n     *\n     * @returns {HTMLCanvasElement}\n     */\n    SpecularImage2D.prototype.getCanvas = function () {\n        return this._output.getCanvas();\n    };\n    /**\n     *\n     * @param width\n     * @param height\n     * @private\n     */\n    SpecularImage2D.prototype._setSize = function (width, height) {\n        _super.prototype._setSize.call(this, width, height);\n        this._output._setSize(width, height);\n    };\n    SpecularImage2D.prototype._testSize = function () {\n        var w, h;\n        if (this._specularSource) {\n            w = this._specularSource.width;\n            h = this._specularSource.height;\n        }\n        else if (this._glossSource) {\n            w = this._glossSource.width;\n            h = this._glossSource.height;\n        }\n        else {\n            w = 1;\n            h = 1;\n        }\n        if (w != this._output.width && h != this._output.height) {\n            this._output.dispose();\n            this._output = new BitmapImage2D_1.BitmapImage2D(w, h, false, 0xffffff);\n        }\n        this._setSize(w, h);\n    };\n    SpecularImage2D.assetType = \"[asset SpecularImage2D]\";\n    return SpecularImage2D;\n}(Image2D_1.Image2D));\nexports.SpecularImage2D = SpecularImage2D;\n\n},{\"../geom/Point\":\"awayjs-core/lib/geom/Point\",\"../image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\",\"../image/BitmapImageChannel\":\"awayjs-core/lib/image/BitmapImageChannel\",\"../image/Image2D\":\"awayjs-core/lib/image/Image2D\"}],\"awayjs-core/lib/image\":[function(require,module,exports){\n\"use strict\";\nvar BitmapImage2D_1 = require(\"./image/BitmapImage2D\");\nexports.BitmapImage2D = BitmapImage2D_1.BitmapImage2D;\nvar BitmapImageChannel_1 = require(\"./image/BitmapImageChannel\");\nexports.BitmapImageChannel = BitmapImageChannel_1.BitmapImageChannel;\nvar BitmapImageCube_1 = require(\"./image/BitmapImageCube\");\nexports.BitmapImageCube = BitmapImageCube_1.BitmapImageCube;\nvar BlendMode_1 = require(\"./image/BlendMode\");\nexports.BlendMode = BlendMode_1.BlendMode;\nvar CPUCanvas_1 = require(\"./image/CPUCanvas\");\nexports.CPUCanvas = CPUCanvas_1.CPUCanvas;\nvar CPURenderingContext2D_1 = require(\"./image/CPURenderingContext2D\");\nexports.CPURenderingContext2D = CPURenderingContext2D_1.CPURenderingContext2D;\nvar Image2D_1 = require(\"./image/Image2D\");\nexports.Image2D = Image2D_1.Image2D;\nvar ImageBase_1 = require(\"./image/ImageBase\");\nexports.ImageBase = ImageBase_1.ImageBase;\nvar ImageCube_1 = require(\"./image/ImageCube\");\nexports.ImageCube = ImageCube_1.ImageCube;\nvar ImageData_1 = require(\"./image/ImageData\");\nexports.ImageData = ImageData_1.ImageData;\nvar Sampler2D_1 = require(\"./image/Sampler2D\");\nexports.Sampler2D = Sampler2D_1.Sampler2D;\nvar SamplerBase_1 = require(\"./image/SamplerBase\");\nexports.SamplerBase = SamplerBase_1.SamplerBase;\nvar SamplerCube_1 = require(\"./image/SamplerCube\");\nexports.SamplerCube = SamplerCube_1.SamplerCube;\nvar SpecularImage2D_1 = require(\"./image/SpecularImage2D\");\nexports.SpecularImage2D = SpecularImage2D_1.SpecularImage2D;\n\n},{\"./image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\",\"./image/BitmapImageChannel\":\"awayjs-core/lib/image/BitmapImageChannel\",\"./image/BitmapImageCube\":\"awayjs-core/lib/image/BitmapImageCube\",\"./image/BlendMode\":\"awayjs-core/lib/image/BlendMode\",\"./image/CPUCanvas\":\"awayjs-core/lib/image/CPUCanvas\",\"./image/CPURenderingContext2D\":\"awayjs-core/lib/image/CPURenderingContext2D\",\"./image/Image2D\":\"awayjs-core/lib/image/Image2D\",\"./image/ImageBase\":\"awayjs-core/lib/image/ImageBase\",\"./image/ImageCube\":\"awayjs-core/lib/image/ImageCube\",\"./image/ImageData\":\"awayjs-core/lib/image/ImageData\",\"./image/Sampler2D\":\"awayjs-core/lib/image/Sampler2D\",\"./image/SamplerBase\":\"awayjs-core/lib/image/SamplerBase\",\"./image/SamplerCube\":\"awayjs-core/lib/image/SamplerCube\",\"./image/SpecularImage2D\":\"awayjs-core/lib/image/SpecularImage2D\"}],\"awayjs-core/lib/library/AbstractionBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"../events/AssetEvent\");\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\n/**\n *\n * @export class away.pool.AbstractionBase\n */\nvar AbstractionBase = (function (_super) {\n    __extends(AbstractionBase, _super);\n    function AbstractionBase(asset, pool) {\n        var _this = this;\n        _super.call(this);\n        this._invalid = true;\n        this._asset = asset;\n        this._pool = pool;\n        this._onClearDelegate = function (event) { return _this.onClear(event); };\n        this._onInvalidateDelegate = function (event) { return _this.onInvalidate(event); };\n        this._asset.addEventListener(AssetEvent_1.AssetEvent.CLEAR, this._onClearDelegate);\n        this._asset.addEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onInvalidateDelegate);\n    }\n    /**\n     *\n     */\n    AbstractionBase.prototype.onClear = function (event) {\n        this._asset.removeEventListener(AssetEvent_1.AssetEvent.CLEAR, this._onClearDelegate);\n        this._asset.removeEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onInvalidateDelegate);\n        this._pool.clearAbstraction(this._asset);\n        this._pool = null;\n        this._asset = null;\n    };\n    /**\n     *\n     */\n    AbstractionBase.prototype.onInvalidate = function (event) {\n        this._invalid = true;\n    };\n    return AbstractionBase;\n}(EventDispatcher_1.EventDispatcher));\nexports.AbstractionBase = AbstractionBase;\n\n},{\"../events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\"}],\"awayjs-core/lib/library/AssetBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"../errors/AbstractMethodError\");\nvar AssetEvent_1 = require(\"../events/AssetEvent\");\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\nvar AssetBase = (function (_super) {\n    __extends(AssetBase, _super);\n    function AssetBase(name) {\n        if (name === void 0) { name = null; }\n        _super.call(this);\n        this._id = AssetBase.ID_COUNT++;\n        if (name == null)\n            name = 'null';\n        this._name = name;\n        this._originalName = name;\n        this.updateFullPath();\n    }\n    Object.defineProperty(AssetBase.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            throw new AbstractMethodError_1.AbstractMethodError();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetBase.prototype, \"originalName\", {\n        /**\n         * The original name used for this asset in the resource (e.g. file) in which\n         * it was found. This may not be the same as <code>name</code>, which may\n         * have changed due to of a name conflict.\n         */\n        get: function () {\n            return this._originalName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetBase.prototype, \"id\", {\n        /**\n         * A unique id for the asset, used to identify assets in an associative array\n         */\n        get: function () {\n            return this._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetBase.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        set: function (val) {\n            var prev;\n            prev = this._name;\n            this._name = val;\n            if (this._name == null)\n                this._name = 'null';\n            this.updateFullPath();\n            this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.RENAME, this, prev));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    AssetBase.prototype.invalidate = function () {\n        this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.INVALIDATE, this));\n    };\n    /**\n     * @inheritDoc\n     */\n    AssetBase.prototype.dispose = function () {\n        this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.DISPOSE, this));\n    };\n    AssetBase.prototype.clear = function () {\n        this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.CLEAR, this));\n    };\n    Object.defineProperty(AssetBase.prototype, \"assetNamespace\", {\n        get: function () {\n            return this._namespace;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetBase.prototype, \"assetFullPath\", {\n        get: function () {\n            return this._full_path;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AssetBase.prototype.assetPathEquals = function (name, ns) {\n        return (this._name == name && (!ns || this._namespace == ns));\n    };\n    AssetBase.prototype.isAsset = function (assetClass) {\n        return this.assetType == assetClass.assetType;\n    };\n    AssetBase.prototype.resetAssetPath = function (name, ns, overrideOriginal) {\n        if (ns === void 0) { ns = null; }\n        if (overrideOriginal === void 0) { overrideOriginal = true; }\n        this._name = name ? name : 'null';\n        this._namespace = ns ? ns : AssetBase.DEFAULT_NAMESPACE;\n        if (overrideOriginal)\n            this._originalName = this._name;\n        this.updateFullPath();\n    };\n    AssetBase.prototype.updateFullPath = function () {\n        this._full_path = [this._namespace, this._name];\n    };\n    AssetBase.ID_COUNT = 0;\n    AssetBase.DEFAULT_NAMESPACE = 'default';\n    return AssetBase;\n}(EventDispatcher_1.EventDispatcher));\nexports.AssetBase = AssetBase;\n\n},{\"../errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"../events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\"}],\"awayjs-core/lib/library/AssetLibraryBundle\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetLibraryIterator_1 = require(\"../library/AssetLibraryIterator\");\nvar Loader_1 = require(\"../library/Loader\");\nvar ConflictPrecedence_1 = require(\"../library/ConflictPrecedence\");\nvar ConflictStrategy_1 = require(\"../library/ConflictStrategy\");\nvar AssetBase_1 = require(\"../library/AssetBase\");\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\nvar AssetEvent_1 = require(\"../events/AssetEvent\");\nvar URLLoaderEvent_1 = require(\"../events/URLLoaderEvent\");\nvar LoaderEvent_1 = require(\"../events/LoaderEvent\");\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\nvar ParserEvent_1 = require(\"../events/ParserEvent\");\n/**\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\n * Its purpose is to create a container for 3D data management, both before and after parsing.\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\n */\nvar AssetLibraryBundle = (function (_super) {\n    __extends(AssetLibraryBundle, _super);\n    /**\n     * Creates a new <code>AssetLibraryBundle</code> object.\n     *\n     * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\n     */\n    function AssetLibraryBundle() {\n        var _this = this;\n        _super.call(this);\n        this._loaderSessionsGarbage = new Array();\n        this._assets = new Array(); //new Vector.<IAsset>;\n        this._assetDictionary = new Object();\n        this._loaderSessions = new Array();\n        this.conflictStrategy = ConflictStrategy_1.ConflictStrategy.IGNORE.create();\n        this.conflictPrecedence = ConflictPrecedence_1.ConflictPrecedence.FAVOR_NEW;\n        this._onAssetRenameDelegate = function (event) { return _this.onAssetRename(event); };\n        this._onAssetConflictResolvedDelegate = function (event) { return _this.onAssetConflictResolved(event); };\n        this._onResourceCompleteDelegate = function (event) { return _this.onResourceComplete(event); };\n        this._onTextureSizeErrorDelegate = function (event) { return _this.onTextureSizeError(event); };\n        this._onAssetCompleteDelegate = function (event) { return _this.onAssetComplete(event); };\n        this._onLoadErrorDelegate = function (event) { return _this.onLoadError(event); };\n        this._onParseErrorDelegate = function (event) { return _this.onParseError(event); };\n    }\n    /**\n     * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\n     * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\n     * pass a string key to this method to define which bundle should be returned. This is\n     * referred to as using the AssetLibrary as a multiton.\n     *\n     * @param key Defines which multiton instance should be returned.\n     * @return An instance of the asset library\n     */\n    AssetLibraryBundle.getInstance = function (key) {\n        if (key === void 0) { key = 'default'; }\n        if (!key)\n            key = 'default';\n        if (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\n            AssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\n        return AssetLibraryBundle._iInstances[key];\n    };\n    /**\n     *\n     */\n    AssetLibraryBundle.prototype.enableParser = function (parserClass) {\n        Loader_1.Loader.enableParser(parserClass);\n    };\n    /**\n     *\n     */\n    AssetLibraryBundle.prototype.enableParsers = function (parserClasses) {\n        Loader_1.Loader.enableParsers(parserClasses);\n    };\n    Object.defineProperty(AssetLibraryBundle.prototype, \"conflictStrategy\", {\n        /**\n         * Defines which strategy should be used for resolving naming conflicts, when two library\n         * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\n         * is used which means that a numeric suffix is appended to one of the assets. The\n         * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\n         * be renamed.\n         *\n         * @see naming.ConflictStrategy\n         * @see AssetLibrary.conflictPrecedence\n         */\n        get: function () {\n            return this._strategy;\n        },\n        set: function (val) {\n            if (!val)\n                throw new ErrorBase_1.ErrorBase('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\n            this._strategy = val.create();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetLibraryBundle.prototype, \"conflictPrecedence\", {\n        /**\n         * Defines which asset should have precedence when resolving a naming conflict between\n         * two assets of which one has just been renamed by the user or by a parser. By default\n         * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\n         * asset will keep it's new name while the older asset gets renamed to not conflict.\n         *\n         * This property is ignored for conflict strategies that do not actually rename an\n         * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\n         *\n         * @see away.library.ConflictPrecedence\n         * @see away.library.ConflictStrategy\n         */\n        get: function () {\n            return this._strategyPreference;\n        },\n        set: function (val) {\n            this._strategyPreference = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Create an AssetLibraryIterator instance that can be used to iterate over the assets\n     * in this asset library instance. The iterator can filter assets on asset type and/or\n     * namespace. A \"null\" filter value means no filter of that type is used.\n     *\n     * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\n     * null to not filter on asset type.\n     * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\n     * @param filterFunc Callback function to use when deciding whether an asset should be\n     * included in the iteration or not. This needs to be a function that takes a single\n     * parameter of type IAsset and returns a boolean where true means it should be included.\n     *\n     * @see away.library.AssetType\n     */\n    AssetLibraryBundle.prototype.createIterator = function (assetTypeFilter, namespaceFilter, filterFunc) {\n        if (assetTypeFilter === void 0) { assetTypeFilter = null; }\n        if (namespaceFilter === void 0) { namespaceFilter = null; }\n        if (filterFunc === void 0) { filterFunc = null; }\n        return new AssetLibraryIterator_1.AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\n    };\n    /**\n     * Loads a file and (optionally) all of its dependencies.\n     *\n     * @param req The URLRequest object containing the URL of the file to be loaded.\n     * @param context An optional context object providing additional parameters for loading\n     * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n     * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n     * @return A handle to the retrieved resource.\n     */\n    AssetLibraryBundle.prototype.load = function (req, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        this.getLoader().load(req, context, ns, parser);\n    };\n    /**\n     * Loads a resource from existing data in memory.\n     *\n     * @param data The data object containing all resource information.\n     * @param context An optional context object providing additional parameters for loading\n     * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n     * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n     * @return A handle to the retrieved resource.\n     */\n    AssetLibraryBundle.prototype.loadData = function (data, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        this.getLoader().loadData(data, '', context, ns, parser);\n    };\n    AssetLibraryBundle.prototype.getLoader = function () {\n        var loader = new Loader_1.Loader();\n        this._loaderSessions.push(loader);\n        loader.addEventListener(LoaderEvent_1.LoaderEvent.LOAD_COMPLETE, this._onResourceCompleteDelegate);\n        loader.addEventListener(AssetEvent_1.AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n        loader.addEventListener(AssetEvent_1.AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n        // Error are handled separately (see documentation for addErrorHandler)\n        loader._iAddErrorHandler(this._onLoadErrorDelegate);\n        loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n        return loader;\n    };\n    AssetLibraryBundle.prototype.disposeLoader = function (loader) {\n        var _this = this;\n        var index = this._loaderSessions.indexOf(loader);\n        this._loaderSessions.splice(index, 1);\n        // Add loader to a garbage array - for a collection sweep and kill\n        this._loaderSessionsGarbage.push(loader);\n        this._gcTimeoutIID = setTimeout(function () { _this.loaderSessionGC(); }, 100);\n    };\n    /**\n     *\n     */\n    AssetLibraryBundle.prototype.getAsset = function (name, ns) {\n        if (ns === void 0) { ns = null; }\n        if (this._assetDictDirty)\n            this.rehashAssetDict();\n        if (ns == null)\n            ns = AssetBase_1.AssetBase.DEFAULT_NAMESPACE;\n        if (!this._assetDictionary.hasOwnProperty(ns))\n            return null;\n        return this._assetDictionary[ns][name];\n    };\n    AssetLibraryBundle.prototype.getAllAssets = function () {\n        return this._assets;\n    };\n    /**\n     * Adds an asset to the asset library, first making sure that it's name is unique\n     * using the method defined by the <code>conflictStrategy</code> and\n     * <code>conflictPrecedence</code> properties.\n     */\n    AssetLibraryBundle.prototype.addAsset = function (asset) {\n        var ns;\n        var old;\n        // Bail if asset has already been added.\n        if (this._assets.indexOf(asset) >= 0)\n            return;\n        old = this.getAsset(asset.name, asset.assetNamespace);\n        ns = asset.assetNamespace || AssetBase_1.AssetBase.DEFAULT_NAMESPACE;\n        if (old != null)\n            this._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\n        //create unique-id (for now this is used in AwayBuilder only\n        //asset.id = IDUtil.createUID();\n        // Add it\n        this._assets.push(asset);\n        if (!this._assetDictionary.hasOwnProperty(ns))\n            this._assetDictionary[ns] = new Object();\n        this._assetDictionary[ns][asset.name] = asset;\n        asset.addEventListener(AssetEvent_1.AssetEvent.RENAME, this._onAssetRenameDelegate);\n        asset.addEventListener(AssetEvent_1.AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n    };\n    /**\n     * Removes an asset from the library, and optionally disposes that asset by calling\n     * it's disposeAsset() method (which for most assets is implemented as a default\n     * version of that type's dispose() method.\n     *\n     * @param asset The asset which should be removed from this library.\n     * @param dispose Defines whether the assets should also be disposed.\n     */\n    AssetLibraryBundle.prototype.removeAsset = function (asset, dispose) {\n        if (dispose === void 0) { dispose = true; }\n        var idx;\n        this.removeAssetFromDict(asset);\n        asset.removeEventListener(AssetEvent_1.AssetEvent.RENAME, this._onAssetRenameDelegate);\n        asset.removeEventListener(AssetEvent_1.AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n        idx = this._assets.indexOf(asset);\n        if (idx >= 0)\n            this._assets.splice(idx, 1);\n        if (dispose)\n            asset.dispose();\n    };\n    /**\n     * Removes an asset which is specified using name and namespace.\n     *\n     * @param name The name of the asset to be removed.\n     * @param ns The namespace to which the desired asset belongs.\n     * @param dispose Defines whether the assets should also be disposed.\n     *\n     * @see away.library.AssetLibrary.removeAsset()\n     */\n    AssetLibraryBundle.prototype.removeAssetByName = function (name, ns, dispose) {\n        if (ns === void 0) { ns = null; }\n        if (dispose === void 0) { dispose = true; }\n        var asset = this.getAsset(name, ns);\n        if (asset)\n            this.removeAsset(asset, dispose);\n        return asset;\n    };\n    /**\n     * Removes all assets from the asset library, optionally disposing them as they\n     * are removed.\n     *\n     * @param dispose Defines whether the assets should also be disposed.\n     */\n    AssetLibraryBundle.prototype.removeAllAssets = function (dispose) {\n        if (dispose === void 0) { dispose = true; }\n        if (dispose) {\n            var asset;\n            var len = this._assets.length;\n            for (var c = 0; c < len; c++) {\n                asset = this._assets[c];\n                asset.dispose();\n            }\n        }\n        this._assets.length = 0;\n        this.rehashAssetDict();\n    };\n    /**\n     * Removes all assets belonging to a particular namespace (null for default)\n     * from the asset library, and optionall disposes them by calling their\n     * disposeAsset() method.\n     *\n     * @param ns The namespace from which all assets should be removed.\n     * @param dispose Defines whether the assets should also be disposed.\n     *\n     * @see away.library.AssetLibrary.removeAsset()\n     */\n    AssetLibraryBundle.prototype.removeNamespaceAssets = function (ns, dispose) {\n        if (ns === void 0) { ns = null; }\n        if (dispose === void 0) { dispose = true; }\n        var idx = 0;\n        var asset;\n        var old_assets;\n        // Empty the assets vector after having stored a copy of it.\n        // The copy will be filled with all assets which weren't removed.\n        old_assets = this._assets.concat();\n        this._assets.length = 0;\n        if (ns == null)\n            ns = AssetBase_1.AssetBase.DEFAULT_NAMESPACE;\n        var len = old_assets.length;\n        for (var d = 0; d < len; d++) {\n            asset = old_assets[d];\n            // Remove from dict if in the supplied namespace. If not,\n            // transfer over to the new vector.\n            if (asset.assetNamespace == ns) {\n                if (dispose)\n                    asset.dispose();\n                // Remove asset from dictionary, but don't try to auto-remove\n                // the namespace, which will trigger an unnecessarily expensive\n                // test that is not needed since we know that the namespace\n                // will be empty when loop finishes.\n                this.removeAssetFromDict(asset, false);\n            }\n            else {\n                this._assets[idx++] = asset;\n            }\n        }\n        /*\n         for each (asset in old_assets) {\n         // Remove from dict if in the supplied namespace. If not,\n         // transfer over to the new vector.\n         if (asset.assetNamespace == ns) {\n         if (dispose)\n         asset.dispose();\n\n         // Remove asset from dictionary, but don't try to auto-remove\n         // the namespace, which will trigger an unnecessarily expensive\n         // test that is not needed since we know that the namespace\n         // will be empty when loop finishes.\n         removeAssetFromDict(asset, false);\n         } else\n         _assets[idx++] = asset;\n\n         }\n         */\n        // Remove empty namespace\n        if (this._assetDictionary.hasOwnProperty(ns))\n            delete this._assetDictionary[ns];\n    };\n    AssetLibraryBundle.prototype.removeAssetFromDict = function (asset, autoRemoveEmptyNamespace) {\n        if (autoRemoveEmptyNamespace === void 0) { autoRemoveEmptyNamespace = true; }\n        if (this._assetDictDirty)\n            this.rehashAssetDict();\n        if (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\n            if (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\n                delete this._assetDictionary[asset.assetNamespace][asset.name];\n            if (autoRemoveEmptyNamespace) {\n                var key;\n                var empty = true;\n                for (key in this._assetDictionary[asset.assetNamespace]) {\n                    empty = false;\n                    break;\n                }\n                if (empty)\n                    delete this._assetDictionary[asset.assetNamespace];\n            }\n        }\n    };\n    AssetLibraryBundle.prototype.stopAllLoaders = function () {\n        var len = this._loaderSessions.length;\n        for (var i = 0; i < len; i++)\n            this.killloaderSession(this._loaderSessions[i]);\n        this._loaderSessions = new Array();\n    };\n    AssetLibraryBundle.prototype.rehashAssetDict = function () {\n        var asset;\n        this._assetDictionary = {};\n        var len = this._assets.length;\n        for (var c = 0; c < len; c++) {\n            asset = this._assets[c];\n            if (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\n                this._assetDictionary[asset.assetNamespace] = {};\n            this._assetDictionary[asset.assetNamespace][asset.name] = asset;\n        }\n        this._assetDictDirty = false;\n    };\n    /**\n     * Called when a an error occurs during loading.\n     */\n    AssetLibraryBundle.prototype.onLoadError = function (event) {\n        if (this.hasEventListener(URLLoaderEvent_1.URLLoaderEvent.LOAD_ERROR)) {\n            this.dispatchEvent(event);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Called when a an error occurs during parsing.\n     */\n    AssetLibraryBundle.prototype.onParseError = function (event) {\n        if (this.hasEventListener(ParserEvent_1.ParserEvent.PARSE_ERROR)) {\n            this.dispatchEvent(event);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    AssetLibraryBundle.prototype.onAssetComplete = function (event) {\n        // Only add asset to library the first time.\n        if (event.type == AssetEvent_1.AssetEvent.ASSET_COMPLETE)\n            this.addAsset(event.asset);\n        this.dispatchEvent(event);\n    };\n    AssetLibraryBundle.prototype.onTextureSizeError = function (event) {\n        this.dispatchEvent(event);\n    };\n    /**\n     * Called when the resource and all of its dependencies was retrieved.\n     */\n    AssetLibraryBundle.prototype.onResourceComplete = function (event) {\n        var loader = event.target;\n        this.dispatchEvent(event);\n        this.disposeLoader(loader);\n    };\n    AssetLibraryBundle.prototype.loaderSessionGC = function () {\n        var loader;\n        while (this._loaderSessionsGarbage.length > 0) {\n            loader = this._loaderSessionsGarbage.pop();\n            this.killloaderSession(loader);\n        }\n        clearTimeout(this._gcTimeoutIID);\n        this._gcTimeoutIID = null;\n    };\n    AssetLibraryBundle.prototype.killloaderSession = function (loader) {\n        loader.removeEventListener(LoaderEvent_1.LoaderEvent.LOAD_COMPLETE, this._onResourceCompleteDelegate);\n        loader.removeEventListener(AssetEvent_1.AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n        loader.removeEventListener(AssetEvent_1.AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n        loader.stop();\n    };\n    AssetLibraryBundle.prototype.onAssetRename = function (event) {\n        var asset = event.target; // TODO: was ev.currentTarget - watch this var\n        var old = this.getAsset(asset.assetNamespace, asset.name);\n        if (old != null) {\n            this._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\n        }\n        else {\n            var dict = this._assetDictionary[event.asset.assetNamespace];\n            if (dict == null)\n                return;\n            dict[event.prevName] = null;\n            dict[event.asset.name] = event.asset;\n        }\n    };\n    AssetLibraryBundle.prototype.onAssetConflictResolved = function (event) {\n        this.dispatchEvent(event.clone());\n    };\n    AssetLibraryBundle._iInstances = new Object();\n    return AssetLibraryBundle;\n}(EventDispatcher_1.EventDispatcher));\nexports.AssetLibraryBundle = AssetLibraryBundle;\n\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\",\"../events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"../events/LoaderEvent\":\"awayjs-core/lib/events/LoaderEvent\",\"../events/ParserEvent\":\"awayjs-core/lib/events/ParserEvent\",\"../events/URLLoaderEvent\":\"awayjs-core/lib/events/URLLoaderEvent\",\"../library/AssetBase\":\"awayjs-core/lib/library/AssetBase\",\"../library/AssetLibraryIterator\":\"awayjs-core/lib/library/AssetLibraryIterator\",\"../library/ConflictPrecedence\":\"awayjs-core/lib/library/ConflictPrecedence\",\"../library/ConflictStrategy\":\"awayjs-core/lib/library/ConflictStrategy\",\"../library/Loader\":\"awayjs-core/lib/library/Loader\"}],\"awayjs-core/lib/library/AssetLibraryIterator\":[function(require,module,exports){\n\"use strict\";\nvar AssetLibraryIterator = (function () {\n    function AssetLibraryIterator(assets, assetTypeFilter, namespaceFilter, filterFunc) {\n        this._assets = assets;\n        this.filter(assetTypeFilter, namespaceFilter, filterFunc);\n    }\n    Object.defineProperty(AssetLibraryIterator.prototype, \"currentAsset\", {\n        get: function () {\n            // Return current, or null if no current\n            return (this._idx < this._filtered.length) ? this._filtered[this._idx] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetLibraryIterator.prototype, \"numAssets\", {\n        get: function () {\n            return this._filtered.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AssetLibraryIterator.prototype.next = function () {\n        var next = null;\n        if (this._idx < this._filtered.length)\n            next = this._filtered[this._idx];\n        this._idx++;\n        return next;\n    };\n    AssetLibraryIterator.prototype.reset = function () {\n        this._idx = 0;\n    };\n    AssetLibraryIterator.prototype.setIndex = function (index) {\n        this._idx = index;\n    };\n    AssetLibraryIterator.prototype.filter = function (assetTypeFilter, namespaceFilter, filterFunc) {\n        if (assetTypeFilter || namespaceFilter) {\n            var idx;\n            var asset;\n            idx = 0;\n            this._filtered = new Array(); //new Vector.<IAsset>;\n            var l = this._assets.length;\n            for (var c = 0; c < l; c++) {\n                asset = this._assets[c];\n                // Skip this assets if filtering on type and this is wrong type\n                if (assetTypeFilter && asset.assetType != assetTypeFilter)\n                    continue;\n                // Skip this asset if filtering on namespace and this is wrong namespace\n                if (namespaceFilter && asset.assetNamespace != namespaceFilter)\n                    continue;\n                // Skip this asset if a filter func has been provided and it returns false\n                if (filterFunc != null && !filterFunc(asset))\n                    continue;\n                this._filtered[idx++] = asset;\n            }\n        }\n        else {\n            this._filtered = this._assets;\n        }\n    };\n    return AssetLibraryIterator;\n}());\nexports.AssetLibraryIterator = AssetLibraryIterator;\n\n},{}],\"awayjs-core/lib/library/AssetLibrary\":[function(require,module,exports){\n\"use strict\";\nvar AssetLibraryBundle_1 = require(\"../library/AssetLibraryBundle\");\nvar Loader_1 = require(\"../library/Loader\");\n/**\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\n */\nvar AssetLibrary = (function () {\n    /**\n     * Creates a new <code>AssetLibrary</code> object.\n     *\n     */\n    function AssetLibrary() {\n    }\n    //*/\n    /**\n     * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\n     * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\n     * pass a string key to this method to define which bundle should be returned. This is\n     * referred to as using the AssetLibraryBundle as a multiton.\n     *\n     * @param key Defines which multiton instance should be returned.\n     * @return An instance of the asset library\n     */\n    AssetLibrary.getBundle = function (key) {\n        if (key === void 0) { key = 'default'; }\n        return AssetLibraryBundle_1.AssetLibraryBundle.getInstance(key);\n    };\n    /**\n     *\n     */\n    AssetLibrary.enableParser = function (parserClass) {\n        Loader_1.Loader.enableParser(parserClass);\n    };\n    /**\n     *\n     */\n    AssetLibrary.enableParsers = function (parserClasses) {\n        Loader_1.Loader.enableParsers(parserClasses);\n    };\n    Object.defineProperty(AssetLibrary, \"conflictStrategy\", {\n        /**\n         * Short-hand for conflictStrategy property on default asset library bundle.\n         *\n         * @see AssetLibraryBundle.conflictStrategy\n         */\n        get: function () {\n            return AssetLibrary.getBundle().conflictStrategy;\n        },\n        set: function (val) {\n            AssetLibrary.getBundle().conflictStrategy = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetLibrary, \"conflictPrecedence\", {\n        /**\n         * Short-hand for conflictPrecedence property on default asset library bundle.\n         *\n         * @see AssetLibraryBundle.conflictPrecedence\n         */\n        get: function () {\n            return AssetLibrary.getBundle().conflictPrecedence;\n        },\n        set: function (val) {\n            AssetLibrary.getBundle().conflictPrecedence = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Short-hand for createIterator() method on default asset library bundle.\n     *\n     * @see AssetLibraryBundle.createIterator()\n     */\n    AssetLibrary.createIterator = function (assetTypeFilter, namespaceFilter, filterFunc) {\n        if (assetTypeFilter === void 0) { assetTypeFilter = null; }\n        if (namespaceFilter === void 0) { namespaceFilter = null; }\n        if (filterFunc === void 0) { filterFunc = null; }\n        return AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\n    };\n    /**\n     * Short-hand for load() method on default asset library bundle.\n     *\n     * @see AssetLibraryBundle.load()\n     */\n    AssetLibrary.load = function (req, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        AssetLibrary.getBundle().load(req, context, ns, parser);\n    };\n    /**\n     * Short-hand for loadData() method on default asset library bundle.\n     *\n     * @see AssetLibraryBundle.loadData()\n     */\n    AssetLibrary.loadData = function (data, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        AssetLibrary.getBundle().loadData(data, context, ns, parser);\n    };\n    AssetLibrary.stopLoad = function () {\n        AssetLibrary.getBundle().stopAllLoaders();\n    };\n    AssetLibrary.getLoader = function () {\n        return AssetLibrary.getBundle().getLoader();\n    };\n    /**\n     * Short-hand for getAsset() method on default asset library bundle.\n     *\n     * @see AssetLibraryBundle.getAsset()\n     */\n    AssetLibrary.getAsset = function (name, ns) {\n        if (ns === void 0) { ns = null; }\n        return AssetLibrary.getBundle().getAsset(name, ns);\n    };\n    /**\n     * Short-hand for getAsset() method on default asset library bundle.\n     *\n     * @see AssetLibraryBundle.getAsset()\n     */\n    AssetLibrary.getAllAssets = function () {\n        return AssetLibrary.getBundle().getAllAssets();\n    };\n    /**\n     * Short-hand for addEventListener() method on default asset library bundle.\n     */\n    AssetLibrary.addEventListener = function (type, listener) {\n        AssetLibrary.getBundle().addEventListener(type, listener);\n    };\n    /**\n     * Short-hand for removeEventListener() method on default asset library bundle.\n     */\n    AssetLibrary.removeEventListener = function (type, listener) {\n        AssetLibrary.getBundle().removeEventListener(type, listener);\n    };\n    /**\n     * Short-hand for hasEventListener() method on default asset library bundle.\n\n     public static hasEventListener(type:string):boolean\n     {\n        return AssetLibrary.getBundle().hasEventListener(type);\n    }\n\n     public static willTrigger(type:string):boolean\n     {\n        return getBundle().willTrigger(type);\n    }\n     */\n    /**\n     * Short-hand for addAsset() method on default asset library bundle.\n     *\n     * @see AssetLibraryBundle.addAsset()\n     */\n    AssetLibrary.addAsset = function (asset) {\n        AssetLibrary.getBundle().addAsset(asset);\n    };\n    /**\n     * Short-hand for removeAsset() method on default asset library bundle.\n     *\n     * @param asset The asset which should be removed from the library.\n     * @param dispose Defines whether the assets should also be disposed.\n     *\n     * @see AssetLibraryBundle.removeAsset()\n     */\n    AssetLibrary.removeAsset = function (asset, dispose) {\n        if (dispose === void 0) { dispose = true; }\n        AssetLibrary.getBundle().removeAsset(asset, dispose);\n    };\n    /**\n     * Short-hand for removeAssetByName() method on default asset library bundle.\n     *\n     * @param name The name of the asset to be removed.\n     * @param ns The namespace to which the desired asset belongs.\n     * @param dispose Defines whether the assets should also be disposed.\n     *\n     * @see AssetLibraryBundle.removeAssetByName()\n     */\n    AssetLibrary.removeAssetByName = function (name, ns, dispose) {\n        if (ns === void 0) { ns = null; }\n        if (dispose === void 0) { dispose = true; }\n        return AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\n    };\n    /**\n     * Short-hand for removeAllAssets() method on default asset library bundle.\n     *\n     * @param dispose Defines whether the assets should also be disposed.\n     *\n     * @see AssetLibraryBundle.removeAllAssets()\n     */\n    AssetLibrary.removeAllAssets = function (dispose) {\n        if (dispose === void 0) { dispose = true; }\n        AssetLibrary.getBundle().removeAllAssets(dispose);\n    };\n    /**\n     * Short-hand for removeNamespaceAssets() method on default asset library bundle.\n     *\n     * @see AssetLibraryBundle.removeNamespaceAssets()\n     */\n    AssetLibrary.removeNamespaceAssets = function (ns, dispose) {\n        if (ns === void 0) { ns = null; }\n        if (dispose === void 0) { dispose = true; }\n        AssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\n    };\n    return AssetLibrary;\n}());\nexports.AssetLibrary = AssetLibrary;\n\n},{\"../library/AssetLibraryBundle\":\"awayjs-core/lib/library/AssetLibraryBundle\",\"../library/Loader\":\"awayjs-core/lib/library/Loader\"}],\"awayjs-core/lib/library/ConflictPrecedence\":[function(require,module,exports){\n\"use strict\";\n/**\n * Enumaration export class for precedence when resolving naming conflicts in the library.\n *\n * @see away.library.AssetLibrary.conflictPrecedence\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategy\n */\nvar ConflictPrecedence = (function () {\n    function ConflictPrecedence() {\n    }\n    /**\n     * Signals that in a conflict, the previous owner of the conflicting name\n     * should be favored (and keep it's name) and that the newly renamed asset\n     * is reverted to a non-conflicting name.\n     */\n    ConflictPrecedence.FAVOR_OLD = 'favorOld';\n    /**\n     * Signales that in a conflict, the newly renamed asset is favored (and keeps\n     * it's newly defined name) and that the previous owner of that name gets\n     * renamed to a non-conflicting name.\n     */\n    ConflictPrecedence.FAVOR_NEW = 'favorNew';\n    return ConflictPrecedence;\n}());\nexports.ConflictPrecedence = ConflictPrecedence;\n\n},{}],\"awayjs-core/lib/library/ConflictStrategyBase\":[function(require,module,exports){\n\"use strict\";\nvar ConflictPrecedence_1 = require(\"../library/ConflictPrecedence\");\nvar AbstractMethodError_1 = require(\"../errors/AbstractMethodError\");\nvar AssetEvent_1 = require(\"../events/AssetEvent\");\n/**\n * Abstract base export class for naming conflict resolution classes. Extend this to create a\n * strategy export class which the asset library can use to resolve asset naming conflicts, or\n * use one of the bundled concrete strategy classes:\n *\n * <ul>\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\n * </ul>\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.ConflictStrategy\n * @see away.library.IgnoreConflictStrategy\n * @see away.library.ErrorConflictStrategy\n * @see away.library.NumSuffixConflictStrategy\n */\nvar ConflictStrategyBase = (function () {\n    function ConflictStrategyBase() {\n    }\n    /**\n     * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\n     * classes.\n     */\n    ConflictStrategyBase.prototype.resolveConflict = function (changedAsset, oldAsset, assetsDictionary, precedence) {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    /**\n     * Create instance of this conflict strategy. Used internally by the AssetLibrary to\n     * make sure the same strategy instance is not used in all AssetLibrary instances, which\n     * would break any state caching that happens inside the strategy class.\n     */\n    ConflictStrategyBase.prototype.create = function () {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    /**\n     * Provided as a convenience method for all conflict strategy classes, as a way to finalize\n     * the conflict resolution by applying the new names and dispatching the correct events.\n     */\n    ConflictStrategyBase.prototype._pUpdateNames = function (ns, nonConflictingName, oldAsset, newAsset, assetsDictionary, precedence) {\n        var loser_prev_name;\n        var winner;\n        var loser;\n        winner = (precedence === ConflictPrecedence_1.ConflictPrecedence.FAVOR_NEW) ? newAsset : oldAsset;\n        loser = (precedence === ConflictPrecedence_1.ConflictPrecedence.FAVOR_NEW) ? oldAsset : newAsset;\n        loser_prev_name = loser.name;\n        assetsDictionary[winner.name] = winner;\n        assetsDictionary[nonConflictingName] = loser;\n        loser.resetAssetPath(nonConflictingName, ns, false);\n        loser.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\n    };\n    return ConflictStrategyBase;\n}());\nexports.ConflictStrategyBase = ConflictStrategyBase;\n\n},{\"../errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"../events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"../library/ConflictPrecedence\":\"awayjs-core/lib/library/ConflictPrecedence\"}],\"awayjs-core/lib/library/ConflictStrategy\":[function(require,module,exports){\n\"use strict\";\nvar ErrorConflictStrategy_1 = require(\"../library/ErrorConflictStrategy\");\nvar IgnoreConflictStrategy_1 = require(\"../library/IgnoreConflictStrategy\");\nvar NumSuffixConflictStrategy_1 = require(\"../library/NumSuffixConflictStrategy\");\n/**\n * Enumeration export class for bundled conflict strategies. Set one of these values (or an\n * instance of a self-defined sub-export class of ConflictStrategyBase) to the conflictStrategy\n * property on an AssetLibrary to define how that library resolves naming conflicts.\n *\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategyBase\n */\nvar ConflictStrategy = (function () {\n    function ConflictStrategy(include) {\n        //TODO: find out why typescript d.ts files do not include this class\n    }\n    /**\n     * Specifies that in case of a naming conflict, one of the assets will be renamed and\n     * a numeric suffix appended to the base name.\n     */\n    ConflictStrategy.APPEND_NUM_SUFFIX = new NumSuffixConflictStrategy_1.NumSuffixConflictStrategy();\n    /**\n     * Specifies that naming conflicts should be ignored. This is not recommended in most\n     * cases, unless it can be 100% guaranteed that the application does not cause naming\n     * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\n     */\n    ConflictStrategy.IGNORE = new IgnoreConflictStrategy_1.IgnoreConflictStrategy();\n    /**\n     * Specifies that an error should be thrown if a naming conflict is discovered. Use this\n     * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\n     * to have the library automatically rename assets to avoid such conflicts.\n     */\n    ConflictStrategy.THROW_ERROR = new ErrorConflictStrategy_1.ErrorConflictStrategy();\n    return ConflictStrategy;\n}());\nexports.ConflictStrategy = ConflictStrategy;\n\n},{\"../library/ErrorConflictStrategy\":\"awayjs-core/lib/library/ErrorConflictStrategy\",\"../library/IgnoreConflictStrategy\":\"awayjs-core/lib/library/IgnoreConflictStrategy\",\"../library/NumSuffixConflictStrategy\":\"awayjs-core/lib/library/NumSuffixConflictStrategy\"}],\"awayjs-core/lib/library/ErrorConflictStrategy\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ConflictStrategyBase_1 = require(\"../library/ConflictStrategyBase\");\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\nvar ErrorConflictStrategy = (function (_super) {\n    __extends(ErrorConflictStrategy, _super);\n    function ErrorConflictStrategy() {\n        _super.call(this);\n    }\n    ErrorConflictStrategy.prototype.resolveConflict = function (changedAsset, oldAsset, assetsDictionary, precedence) {\n        throw new ErrorBase_1.ErrorBase('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\n    };\n    ErrorConflictStrategy.prototype.create = function () {\n        return new ErrorConflictStrategy();\n    };\n    return ErrorConflictStrategy;\n}(ConflictStrategyBase_1.ConflictStrategyBase));\nexports.ErrorConflictStrategy = ErrorConflictStrategy;\n\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\",\"../library/ConflictStrategyBase\":\"awayjs-core/lib/library/ConflictStrategyBase\"}],\"awayjs-core/lib/library/IAbstractionPool\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/library/IAssetClass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/library/IAsset\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/library/IDUtil\":[function(require,module,exports){\n\"use strict\";\nvar IDUtil = (function () {\n    function IDUtil() {\n    }\n    /**\n     *  Generates a UID (unique identifier) based on ActionScript's\n     *  pseudo-random number generator and the current time.\n     *\n     *  <p>The UID has the form\n     *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\n     *  where X is a hexadecimal digit (0-9, A-F).</p>\n     *\n     *  <p>This UID will not be truly globally unique; but it is the best\n     *  we can do without player support for UID generation.</p>\n     *\n     *  @return The newly-generated UID.\n     *\n     *  @langversion 3.0\n     *  @playerversion Flash 9\n     *  @playerversion AIR 1.1\n     *  @productversion Flex 3\n     */\n    IDUtil.createUID = function () {\n        var uid = new Array(36);\n        var index = 0;\n        var i;\n        var j;\n        for (i = 0; i < 8; i++)\n            uid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random() * 16)];\n        for (i = 0; i < 3; i++) {\n            uid[index++] = 45; // charCode for \"-\"\n            for (j = 0; j < 4; j++)\n                uid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random() * 16)];\n        }\n        uid[index++] = 45; // charCode for \"-\"\n        var time = new Date().getTime();\n        // Note: time is the number of milliseconds since 1970,\n        // which is currently more than one trillion.\n        // We use the low 8 hex digits of this number in the UID.\n        // Just in case the system clock has been reset to\n        // Jan 1-4, 1970 (in which case this number could have only\n        // 1-7 hex digits), we pad on the left with 7 zeros\n        // before taking the low digits.\n        var timeString = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\n        for (i = 0; i < 8; i++)\n            uid[index++] = timeString.charCodeAt(i);\n        for (i = 0; i < 4; i++)\n            uid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random() * 16)];\n        return String.fromCharCode.apply(null, uid);\n    };\n    /**\n     *  @private\n     *  Char codes for 0123456789ABCDEF\n     */\n    IDUtil.ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\n    return IDUtil;\n}());\nexports.IDUtil = IDUtil;\n\n},{}],\"awayjs-core/lib/library/IgnoreConflictStrategy\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ConflictStrategyBase_1 = require(\"../library/ConflictStrategyBase\");\nvar IgnoreConflictStrategy = (function (_super) {\n    __extends(IgnoreConflictStrategy, _super);\n    function IgnoreConflictStrategy() {\n        _super.call(this);\n    }\n    IgnoreConflictStrategy.prototype.resolveConflict = function (changedAsset, oldAsset, assetsDictionary, precedence) {\n        // Do nothing, ignore the fact that there is a conflict.\n        return;\n    };\n    IgnoreConflictStrategy.prototype.create = function () {\n        return new IgnoreConflictStrategy();\n    };\n    return IgnoreConflictStrategy;\n}(ConflictStrategyBase_1.ConflictStrategyBase));\nexports.IgnoreConflictStrategy = IgnoreConflictStrategy;\n\n},{\"../library/ConflictStrategyBase\":\"awayjs-core/lib/library/ConflictStrategyBase\"}],\"awayjs-core/lib/library/LoaderContext\":[function(require,module,exports){\n\"use strict\";\nvar LoaderContext = (function () {\n    /**\n     * LoaderContext provides configuration for the Loader load() and parse() operations.\n     * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\n     * embedded data.\n     *\n     * @see away.loading.Loader\n     */\n    function LoaderContext(includeDependencies, dependencyBaseUrl) {\n        if (includeDependencies === void 0) { includeDependencies = true; }\n        if (dependencyBaseUrl === void 0) { dependencyBaseUrl = null; }\n        this._includeDependencies = includeDependencies;\n        this._dependencyBaseUrl = dependencyBaseUrl || '';\n        this._embeddedDataByUrl = {};\n        this._remappedUrls = {};\n        this._materialMode = LoaderContext.UNDEFINED;\n    }\n    Object.defineProperty(LoaderContext.prototype, \"includeDependencies\", {\n        /**\n         * Defines whether dependencies (all files except the one at the URL given to the load() or\n         * parseData() operations) should be automatically loaded. Defaults to true.\n         */\n        get: function () {\n            return this._includeDependencies;\n        },\n        set: function (val) {\n            this._includeDependencies = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderContext.prototype, \"materialMode\", {\n        /**\n         * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\n         * Options:\n         * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\n         * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\n         * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\n         *\n         */\n        get: function () {\n            return this._materialMode;\n        },\n        set: function (materialMode) {\n            this._materialMode = materialMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderContext.prototype, \"dependencyBaseUrl\", {\n        /**\n         * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\n         * Absolute paths will not be affected by the value of this property.\n         */\n        get: function () {\n            return this._dependencyBaseUrl;\n        },\n        set: function (val) {\n            this._dependencyBaseUrl = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderContext.prototype, \"overrideAbsolutePaths\", {\n        /**\n         * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\n         * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\n         * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n         */\n        get: function () {\n            return this._overrideAbsPath;\n        },\n        set: function (val) {\n            this._overrideAbsPath = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderContext.prototype, \"overrideFullURLs\", {\n        /**\n         * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\n         * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\n         * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n         */\n        get: function () {\n            return this._overrideFullUrls;\n        },\n        set: function (val) {\n            this._overrideFullUrls = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Map a URL to another URL, so that files that are referred to by the original URL will instead\n     * be loaded from the new URL. Use this when your file structure does not match the one that is\n     * expected by the loaded file.\n     *\n     * @param originalUrl The original URL which is referenced in the loaded resource.\n     * @param newUrl The URL from which away.should load the resource instead.\n     *\n     * @see mapUrlToData()\n     */\n    LoaderContext.prototype.mapUrl = function (originalUrl, newUrl) {\n        this._remappedUrls[originalUrl] = newUrl;\n    };\n    /**\n     * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\n     * which it's referenced, the dependency data will be retrieved straight from the memory instead.\n     *\n     * @param originalUrl The original URL which is referenced in the loaded resource.\n     * @param data The embedded data. Can be ByteArray or a export class which can be used to create a bytearray.\n     */\n    LoaderContext.prototype.mapUrlToData = function (originalUrl, data) {\n        this._embeddedDataByUrl[originalUrl] = data;\n    };\n    /**\n     * @private\n     * Defines whether embedded data has been mapped to a particular URL.\n     */\n    LoaderContext.prototype._iHasDataForUrl = function (url) {\n        return this._embeddedDataByUrl.hasOwnProperty(url);\n    };\n    /**\n     * @private\n     * Returns embedded data for a particular URL.\n     */\n    LoaderContext.prototype._iGetDataForUrl = function (url) {\n        return this._embeddedDataByUrl[url];\n    };\n    /**\n     * @private\n     * Defines whether a replacement URL has been mapped to a particular URL.\n     */\n    LoaderContext.prototype._iHasMappingForUrl = function (url) {\n        return this._remappedUrls.hasOwnProperty(url);\n    };\n    /**\n     * @private\n     * Returns new (replacement) URL for a particular original URL.\n     */\n    LoaderContext.prototype._iGetRemappedUrl = function (originalUrl) {\n        return this._remappedUrls[originalUrl];\n    };\n    LoaderContext.UNDEFINED = 0;\n    LoaderContext.SINGLEPASS_MATERIALS = 1;\n    LoaderContext.MULTIPASS_MATERIALS = 2;\n    return LoaderContext;\n}());\nexports.LoaderContext = LoaderContext;\n\n},{}],\"awayjs-core/lib/library/LoaderInfo\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\n/**\n * The LoaderInfo export class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main export class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main export class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main export class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n *\n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nvar LoaderInfo = (function (_super) {\n    __extends(LoaderInfo, _super);\n    function LoaderInfo() {\n        _super.apply(this, arguments);\n    }\n    Object.defineProperty(LoaderInfo.prototype, \"bytes\", {\n        /**\n         * The bytes associated with a LoaderInfo object.\n         *\n         * @throws SecurityError If the object accessing this API is prevented from\n         *                       accessing the loaded object due to security\n         *                       restrictions. This situation can occur, for\n         *                       instance, when a Loader object attempts to access\n         *                       the <code>contentLoaderInfo.content</code> property\n         *                       and it is not granted security permission to access\n         *                       the loaded content.\n         *\n         *                       <p>For more information related to security, see the\n         *                       Flash Player Developer Center Topic: <a\n         *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n         *                       scope=\"external\">Security</a>.</p>\n         */\n        get: function () {\n            return this._bytes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderInfo.prototype, \"bytesLoaded\", {\n        /**\n         * The number of bytes that are loaded for the media. When this number equals\n         * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n         */\n        get: function () {\n            return this._bytesLoaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderInfo.prototype, \"bytesTotal\", {\n        /**\n         * The number of compressed bytes in the entire media file.\n         *\n         * <p>Before the first <code>progress</code> event is dispatched by this\n         * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n         * is 0. After the first <code>progress</code> event from the Loader object,\n         * <code>bytesTotal</code> reflects the actual number of bytes to be\n         * downloaded.</p>\n         */\n        get: function () {\n            return this._bytesTotal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderInfo.prototype, \"content\", {\n        /**\n         * The loaded object associated with this LoaderInfo object.\n         *\n         * @throws SecurityError If the object accessing this API is prevented from\n         *                       accessing the loaded object due to security\n         *                       restrictions. This situation can occur, for\n         *                       instance, when a Loader object attempts to access\n         *                       the <code>contentLoaderInfo.content</code> property\n         *                       and it is not granted security permission to access\n         *                       the loaded content.\n         *\n         *                       <p>For more information related to security, see the\n         *                       Flash Player Developer Center Topic: <a\n         *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n         *                       scope=\"external\">Security</a>.</p>\n         */\n        get: function () {\n            return this._content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderInfo.prototype, \"contentType\", {\n        /**\n         * The MIME type of the loaded file. The value is <code>null</code> if not\n         * enough of the file has loaded in order to determine the type. The\n         * following list gives the possible values:\n         * <ul>\n         *   <li><code>\"application/x-shockwave-flash\"</code></li>\n         *   <li><code>\"image/jpeg\"</code></li>\n         *   <li><code>\"image/gif\"</code></li>\n         *   <li><code>\"image/png\"</code></li>\n         * </ul>\n         */\n        get: function () {\n            return this._contentType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderInfo.prototype, \"loader\", {\n        /**\n         * The Loader object associated with this LoaderInfo object. If this\n         * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n         * of the main export class of the SWF file, no Loader object is associated.\n         *\n         * @throws SecurityError If the object accessing this API is prevented from\n         *                       accessing the Loader object because of security\n         *                       restrictions. This can occur, for instance, when a\n         *                       loaded SWF file attempts to access its\n         *                       <code>loaderInfo.loader</code> property and it is\n         *                       not granted security permission to access the\n         *                       loading SWF file.\n         *\n         *                       <p>For more information related to security, see the\n         *                       Flash Player Developer Center Topic: <a\n         *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n         *                       scope=\"external\">Security</a>.</p>\n         */\n        get: function () {\n            return this._loader;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderInfo.prototype, \"url\", {\n        /**\n         * The URL of the media being loaded.\n         *\n         * <p>Before the first <code>progress</code> event is dispatched by this\n         * LoaderInfo object's corresponding Loader object, the value of the\n         * <code>url</code> property might reflect only the initial URL specified in\n         * the call to the <code>load()</code> method of the Loader object. After the\n         * first <code>progress</code> event, the <code>url</code> property reflects\n         * the media's final URL, after any redirects and relative URLs are\n         * resolved.</p>\n         *\n         * <p>In some cases, the value of the <code>url</code> property is truncated;\n         * see the <code>isURLInaccessible</code> property for details.</p>\n         */\n        get: function () {\n            return this._url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LoaderInfo;\n}(EventDispatcher_1.EventDispatcher));\nexports.LoaderInfo = LoaderInfo;\n\n},{\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\"}],\"awayjs-core/lib/library/Loader\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar URLLoader_1 = require(\"../net/URLLoader\");\nvar URLLoaderDataFormat_1 = require(\"../net/URLLoaderDataFormat\");\nvar AssetEvent_1 = require(\"../events/AssetEvent\");\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\nvar URLLoaderEvent_1 = require(\"../events/URLLoaderEvent\");\nvar LoaderEvent_1 = require(\"../events/LoaderEvent\");\nvar ParserEvent_1 = require(\"../events/ParserEvent\");\nvar ResourceDependency_1 = require(\"../parsers/ResourceDependency\");\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n/**\n * Dispatched when an image asset dimensions are not a power of 2\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\n/**\n * Loader can load any file format that away.supports (or for which a third-party parser\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\n * and for when the resource (or it's dependencies) have been loaded.\n *\n * The Loader will not make assets available in any other way than through the dispatched\n * events. To store assets and make them available at any point from any module in an application,\n * use the AssetLibrary to load and manage assets.\n *\n * @see away.library.AssetLibrary\n */\nvar Loader = (function (_super) {\n    __extends(Loader, _super);\n    /**\n     * Create a new ResourceLoadSession object.\n     */\n    function Loader(materialMode) {\n        var _this = this;\n        if (materialMode === void 0) { materialMode = 0; }\n        _super.call(this);\n        this._materialMode = materialMode;\n        this._stack = new Array();\n        this._errorHandlers = new Array();\n        this._parseErrorHandlers = new Array();\n        this._onReadyForDependenciesDelegate = function (event) { return _this.onReadyForDependencies(event); };\n        this._onParseCompleteDelegate = function (event) { return _this.onParseComplete(event); };\n        this._onParseErrorDelegate = function (event) { return _this.onParseError(event); };\n        this._onLoadCompleteDelegate = function (event) { return _this.onLoadComplete(event); };\n        this._onLoadErrorDelegate = function (event) { return _this.onLoadError(event); };\n        this._onTextureSizeErrorDelegate = function (event) { return _this.onTextureSizeError(event); };\n        this._onAssetCompleteDelegate = function (event) { return _this.onAssetComplete(event); };\n    }\n    /**\n     * Enables a specific parser.\n     * When no specific parser is set for a loading/parsing opperation,\n     * loader3d can autoselect the correct parser to use.\n     * A parser must have been enabled, to be considered when autoselecting the parser.\n     *\n     * @param parser The parser export class to enable.\n     *\n     * @see away.parsers.Parsers\n     */\n    Loader.enableParser = function (parser) {\n        if (Loader._parsers.indexOf(parser) < 0)\n            Loader._parsers.push(parser);\n    };\n    /**\n     * Enables a list of parsers.\n     * When no specific parser is set for a loading/parsing opperation,\n     * Loader can autoselect the correct parser to use.\n     * A parser must have been enabled, to be considered when autoselecting the parser.\n     *\n     * @param parsers A Vector of parser classes to enable.\n     * @see away.parsers.Parsers\n     */\n    Loader.enableParsers = function (parsers) {\n        for (var c = 0; c < parsers.length; c++)\n            Loader.enableParser(parsers[c]);\n    };\n    Object.defineProperty(Loader.prototype, \"baseDependency\", {\n        /**\n         * Returns the base dependency of the loader\n         */\n        get: function () {\n            return this._baseDependency;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Loader.prototype, \"loaderInfo\", {\n        /**\n         * Returns a LoaderInfo object corresponding to the object being loaded.\n         * LoaderInfo objects are shared between the Loader object and the loaded\n         * content object. The LoaderInfo object supplies loading progress\n         * information and statistics about the loaded file.\n         *\n         * <p>Events related to the load are dispatched by the LoaderInfo object\n         * referenced by the <code>contentLoaderInfo</code> property of the Loader\n         * object. The <code>contentLoaderInfo</code> property is set to a valid\n         * LoaderInfo object, even before the content is loaded, so that you can add\n         * event listeners to the object prior to the load.</p>\n         *\n         * <p>To detect uncaught errors that happen in a loaded SWF, use the\n         * <code>Loader.uncaughtErrorEvents</code> property, not the\n         * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n         */\n        get: function () {\n            return this._loaderInfo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Loads a file and (optionally) all of its dependencies.\n     *\n     * @param req The URLRequest object containing the URL of the file to be loaded.\n     * @param context An optional context object providing additional parameters for loading\n     * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n     * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n     */\n    Loader.prototype.load = function (req, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        this._uri = req.url = req.url.replace(/\\\\/g, \"/\");\n        this._context = context;\n        this._namespace = ns;\n        this._baseDependency = new ResourceDependency_1.ResourceDependency('', req, null, parser, null);\n        this.retrieveDependency(this._baseDependency);\n    };\n    /**\n     * Loads a resource from already loaded data.\n     *\n     * @param data The data object containing all resource information.\n     * @param context An optional context object providing additional parameters for loading\n     * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n     * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n     */\n    Loader.prototype.loadData = function (data, id, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        this._uri = id;\n        this._context = context;\n        this._namespace = ns;\n        this._baseDependency = new ResourceDependency_1.ResourceDependency(id, null, data, parser, null);\n        this.retrieveDependency(this._baseDependency);\n    };\n    /**\n     * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\n     * stack when complete and continues on the top set.\n     * @param parser The parser that will translate the data into a usable resource.\n     */\n    Loader.prototype.retrieveNext = function (parser) {\n        if (parser === void 0) { parser = null; }\n        if (this._currentDependency.dependencies.length) {\n            var next = this._currentDependency.dependencies.pop();\n            this._stack.push(this._currentDependency);\n            this.retrieveDependency(next);\n        }\n        else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\n            this._currentDependency.parser._iResumeParsing();\n            this._stack.pop();\n        }\n        else if (this._stack.length) {\n            var prev = this._currentDependency;\n            this._currentDependency = this._stack.pop();\n            if (prev._iSuccess)\n                prev.resolve();\n            this.retrieveNext(parser);\n        }\n        else {\n            this.dispatchEvent(new LoaderEvent_1.LoaderEvent(LoaderEvent_1.LoaderEvent.LOAD_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\n        }\n    };\n    /**\n     * Retrieves a single dependency.\n     * @param parser The parser that will translate the data into a usable resource.\n     */\n    Loader.prototype.retrieveDependency = function (dependency) {\n        var data;\n        if (this._context && this._context.materialMode != 0)\n            this._materialMode = this._context.materialMode;\n        this._currentDependency = dependency;\n        dependency._iLoader = new URLLoader_1.URLLoader();\n        this.addEventListeners(dependency._iLoader);\n        // Get already loaded (or mapped) data if available\n        data = dependency.data;\n        if (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\n            data = this._context._iGetDataForUrl(dependency.request.url);\n        if (data) {\n            if (data.constructor === Function)\n                data = new data();\n            dependency._iSetData(data);\n            if (dependency.retrieveAsRawData) {\n                // No need to parse. The parent parser is expecting this\n                // to be raw data so it can be passed directly.\n                dependency.resolve();\n                // Move on to next dependency\n                this.retrieveNext();\n            }\n            else {\n                this.parseDependency(dependency);\n            }\n        }\n        else {\n            // Resolve URL and start loading\n            dependency.request.url = this.resolveDependencyUrl(dependency);\n            if (dependency.retrieveAsRawData) {\n                // Always use binary for raw data loading\n                dependency._iLoader.dataFormat = URLLoaderDataFormat_1.URLLoaderDataFormat.BINARY;\n            }\n            else {\n                if (!dependency.parser)\n                    dependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\n                if (dependency.parser) {\n                    dependency._iLoader.dataFormat = dependency.parser.dataFormat;\n                }\n                else {\n                    // Always use BINARY for unknown file formats. The thorough\n                    // file type check will determine format after load, and if\n                    // binary, a text load will have broken the file data.\n                    dependency._iLoader.dataFormat = URLLoaderDataFormat_1.URLLoaderDataFormat.BINARY;\n                }\n            }\n            dependency._iLoader.load(dependency.request);\n        }\n    };\n    Loader.prototype.joinUrl = function (base, end) {\n        if (end.charAt(0) == '/' || end.charAt(0) == '\\\\')\n            end = end.substr(1);\n        if (end.charAt(0) == '.')\n            end = end.substr(2);\n        if (base.length == 0)\n            return end;\n        if (base.charAt(base.length - 1) == '/' || base.charAt(base.length - 1) == '\\\\')\n            base = base.substr(0, base.length - 1);\n        return base.concat('/', end);\n    };\n    Loader.prototype.resolveDependencyUrl = function (dependency) {\n        var scheme_re;\n        var base;\n        var url = dependency.request.url;\n        // Has the user re-mapped this URL?\n        if (this._context && this._context._iHasMappingForUrl(url))\n            return this._context._iGetRemappedUrl(url);\n        // This is the \"base\" dependency, i.e. the actual requested asset.\n        // We will not try to resolve this since the user can probably be\n        // thrusted to know this URL better than our automatic resolver. :)\n        if (url == this._uri)\n            return url;\n        // Absolute URL? Check if starts with slash or a URL\n        // scheme definition (e.g. ftp://, http://, file://)\n        scheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\n        if (url.charAt(0) == '/') {\n            if (this._context && this._context.overrideAbsolutePaths)\n                return this.joinUrl(this._context.dependencyBaseUrl, url);\n            else\n                return url;\n        }\n        else if (scheme_re.test(url)) {\n            // If overriding full URLs, get rid of scheme (e.g. \"http://\")\n            // and replace with the dependencyBaseUrl defined by user.\n            if (this._context && this._context.overrideFullURLs) {\n                var noscheme_url = url.replace(scheme_re, ''); //url['replace'](scheme_re);\n                return this.joinUrl(this._context.dependencyBaseUrl, noscheme_url);\n            }\n        }\n        // Since not absolute, just get rid of base file name to find it's\n        // folder and then concatenate dynamic URL\n        if (this._context && this._context.dependencyBaseUrl) {\n            base = this._context.dependencyBaseUrl;\n            return this.joinUrl(base, url);\n        }\n        else {\n            base = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\n            return this.joinUrl(base, url);\n        }\n    };\n    Loader.prototype.retrieveParserDependencies = function () {\n        if (!this._currentDependency)\n            return;\n        var parserDependancies = this._currentDependency.parser.dependencies;\n        var i, len = parserDependancies.length;\n        for (i = 0; i < len; i++)\n            this._currentDependency.dependencies[i] = parserDependancies[i];\n        // Since more dependencies might be added eventually, empty this\n        // list so that the same dependency isn't retrieved more than once.\n        parserDependancies.length = 0;\n        this._stack.push(this._currentDependency);\n        this.retrieveNext();\n    };\n    Loader.prototype.resolveParserDependencies = function () {\n        this._currentDependency._iSuccess = true;\n        // Retrieve any last dependencies remaining on this parser, or\n        // if none exists, just move on.\n        if (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))\n            this.retrieveParserDependencies();\n        else\n            this.retrieveNext();\n    };\n    /**\n     * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\n     * @param event\n     */\n    Loader.prototype.onLoadError = function (event) {\n        var handled;\n        var isDependency = (this._currentDependency != this._baseDependency);\n        var loader = event.urlLoader;\n        this.removeEventListeners(loader);\n        if (this.hasEventListener(URLLoaderEvent_1.URLLoaderEvent.LOAD_ERROR)) {\n            this.dispatchEvent(event);\n            handled = true;\n        }\n        else {\n            // TODO: Consider not doing this even when Loader does have it's own LOAD_ERROR listener\n            var i, len = this._errorHandlers.length;\n            for (i = 0; i < len; i++)\n                if (!handled)\n                    handled = this._errorHandlers[i](event);\n        }\n        if (handled) {\n            //if (isDependency && ! event.isDefaultPrevented()) {\n            if (isDependency) {\n                this._currentDependency.resolveFailure();\n                this.retrieveNext();\n            }\n            else {\n                // Either this was the base file (last left in the stack) or\n                // default behavior was prevented by the handlers, and hence\n                // there is nothing more to do than clean up and bail.\n                this.dispose();\n                return;\n            }\n        }\n        else {\n            // Error event was not handled by listeners directly on Loader or\n            // on any of the subscribed loaders (in the list of error handlers.)\n            throw new Error();\n        }\n    };\n    /**\n     * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\n     * @param event\n     */\n    Loader.prototype.onParseError = function (event) {\n        var handled;\n        var isDependency = (this._currentDependency != this._baseDependency);\n        var loader = event.target;\n        this.removeEventListeners(loader);\n        if (this.hasEventListener(ParserEvent_1.ParserEvent.PARSE_ERROR)) {\n            this.dispatchEvent(event);\n            handled = true;\n        }\n        else {\n            // TODO: Consider not doing this even when Loader does\n            // have it's own LOAD_ERROR listener\n            var i, len = this._parseErrorHandlers.length;\n            for (i = 0; i < len; i++)\n                if (!handled)\n                    handled = this._parseErrorHandlers[i](event);\n        }\n        if (handled) {\n            this.retrieveNext();\n        }\n        else {\n            // Error event was not handled by listeners directly on Loader or\n            // on any of the subscribed loaders (in the list of error handlers.)\n            throw new Error(event.message);\n        }\n    };\n    Loader.prototype.onAssetComplete = function (event) {\n        // Add loaded asset to list of assets retrieved as part\n        // of the current dependency. This list will be inspected\n        // by the parent parser when dependency is resolved\n        if (this._currentDependency)\n            this._currentDependency.assets.push(event.asset);\n        event.asset.resetAssetPath(event.asset.name, this._namespace);\n        if (!this._currentDependency.suppresAssetEvents)\n            this.dispatchEvent(event);\n    };\n    Loader.prototype.onReadyForDependencies = function (event) {\n        var parser = event.target;\n        if (this._context && !this._context.includeDependencies)\n            parser._iResumeParsing();\n        else\n            this.retrieveParserDependencies();\n    };\n    /**\n     * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\n     * @param event\n     */\n    Loader.prototype.onLoadComplete = function (event) {\n        var loader = event.urlLoader;\n        this.removeEventListeners(loader);\n        // Resolve this dependency\n        this._currentDependency._iSetData(loader.data);\n        if (this._currentDependency.retrieveAsRawData) {\n            // No need to parse this data, which should be returned as is\n            this.resolveParserDependencies();\n        }\n        else {\n            this.parseDependency(this._currentDependency);\n        }\n    };\n    /**\n     * Called when parsing is complete.\n     */\n    Loader.prototype.onParseComplete = function (event) {\n        var parser = event.target;\n        this.resolveParserDependencies(); //resolve in front of removing listeners to allow any remaining asset events to propagate\n        parser.removeEventListener(ParserEvent_1.ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n        parser.removeEventListener(ParserEvent_1.ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n        parser.removeEventListener(ParserEvent_1.ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n        parser.removeEventListener(AssetEvent_1.AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n        parser.removeEventListener(AssetEvent_1.AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n    };\n    /**\n     * Called when an image is too large or it's dimensions are not a power of 2\n     * @param event\n     */\n    Loader.prototype.onTextureSizeError = function (event) {\n        event.asset.name = this._currentDependency.resolveName(event.asset);\n        this.dispatchEvent(event);\n    };\n    Loader.prototype.addEventListeners = function (loader) {\n        loader.addEventListener(URLLoaderEvent_1.URLLoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n        loader.addEventListener(URLLoaderEvent_1.URLLoaderEvent.LOAD_ERROR, this._onLoadErrorDelegate);\n    };\n    Loader.prototype.removeEventListeners = function (loader) {\n        loader.removeEventListener(URLLoaderEvent_1.URLLoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n        loader.removeEventListener(URLLoaderEvent_1.URLLoaderEvent.LOAD_ERROR, this._onLoadErrorDelegate);\n    };\n    Loader.prototype.stop = function () {\n        this.dispose();\n    };\n    Loader.prototype.dispose = function () {\n        this._errorHandlers = null;\n        this._parseErrorHandlers = null;\n        this._context = null;\n        this._stack = null;\n        if (this._currentDependency && this._currentDependency._iLoader)\n            this.removeEventListeners(this._currentDependency._iLoader);\n        this._currentDependency = null;\n    };\n    /**\n     * @private\n     * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\n     * add error event listeners to the Loader instance. This system is used instead of\n     * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\n     * that if hasEventListener() returns true, it's client code that's listening for the\n     * event. Secondly, functions added as error handler through this custom method are\n     * expected to return a boolean value indicating whether the event was handled (i.e.\n     * whether they in turn had any client code listening for the event.) If no handlers\n     * return true, the Loader knows that the event wasn't handled and will throw an RTE.\n     */\n    Loader.prototype._iAddParseErrorHandler = function (handler) {\n        if (this._parseErrorHandlers.indexOf(handler) < 0)\n            this._parseErrorHandlers.push(handler);\n    };\n    Loader.prototype._iAddErrorHandler = function (handler) {\n        if (this._errorHandlers.indexOf(handler) < 0)\n            this._errorHandlers.push(handler);\n    };\n    /**\n     * Guesses the parser to be used based on the file contents.\n     * @param data The data to be parsed.\n     * @param uri The url or id of the object to be parsed.\n     * @return An instance of the guessed parser.\n     */\n    Loader.prototype.getParserFromData = function (data) {\n        var len = Loader._parsers.length;\n        // go in reverse order to allow application override of default parser added in away.proper\n        for (var i = len - 1; i >= 0; i--)\n            if (Loader._parsers[i].supportsData(data))\n                return new Loader._parsers[i]();\n        return null;\n    };\n    /**\n     * Initiates parsing of the loaded dependency.\n     *\n     * @param The dependency to be parsed.\n     */\n    Loader.prototype.parseDependency = function (dependency) {\n        var parser = dependency.parser;\n        // If no parser has been defined, try to find one by letting\n        // all plugged in parsers inspect the actual data.\n        if (!parser)\n            dependency._iSetParser(parser = this.getParserFromData(dependency.data));\n        if (parser) {\n            parser.addEventListener(ParserEvent_1.ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n            parser.addEventListener(ParserEvent_1.ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n            parser.addEventListener(ParserEvent_1.ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n            parser.addEventListener(AssetEvent_1.AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n            parser.addEventListener(AssetEvent_1.AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n            if (dependency.request && dependency.request.url)\n                parser._iFileName = dependency.request.url;\n            parser.materialMode = this._materialMode;\n            parser.parseAsync(dependency.data);\n        }\n        else {\n            var handled;\n            var message = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\";\n            var event = new ParserEvent_1.ParserEvent(ParserEvent_1.ParserEvent.PARSE_ERROR, message);\n            if (this.hasEventListener(ParserEvent_1.ParserEvent.PARSE_ERROR)) {\n                this.dispatchEvent(event);\n                handled = true;\n            }\n            else {\n                // TODO: Consider not doing this even when Loader does\n                // have it's own LOAD_ERROR listener\n                var i, len = this._parseErrorHandlers.length;\n                for (i = 0; i < len; i++)\n                    if (!handled)\n                        handled = this._parseErrorHandlers[i](event);\n            }\n            if (handled) {\n                this.retrieveNext();\n            }\n            else {\n                // Error event was not handled by listeners directly on Loader or\n                // on any of the subscribed loaders (in the list of error handlers.)\n                throw new Error(message);\n            }\n        }\n    };\n    /**\n     * Guesses the parser to be used based on the file extension.\n     * @return An instance of the guessed parser.\n     */\n    Loader.prototype.getParserFromSuffix = function (url) {\n        // Get rid of query string if any and extract extension\n        var base = (url.indexOf('?') > 0) ? url.split('?')[0] : url;\n        var fileExtension = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\n        var len = Loader._parsers.length;\n        // go in reverse order to allow application override of default parser added in away.proper\n        for (var i = len - 1; i >= 0; i--) {\n            var parserClass = Loader._parsers[i];\n            if (parserClass.supportsType(fileExtension))\n                return new parserClass();\n        }\n        return null;\n    };\n    // Image parser only parser that is added by default, to save file size.\n    Loader._parsers = new Array();\n    return Loader;\n}(EventDispatcher_1.EventDispatcher));\nexports.Loader = Loader;\n\n},{\"../events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"../events/LoaderEvent\":\"awayjs-core/lib/events/LoaderEvent\",\"../events/ParserEvent\":\"awayjs-core/lib/events/ParserEvent\",\"../events/URLLoaderEvent\":\"awayjs-core/lib/events/URLLoaderEvent\",\"../net/URLLoader\":\"awayjs-core/lib/net/URLLoader\",\"../net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"../parsers/ResourceDependency\":\"awayjs-core/lib/parsers/ResourceDependency\"}],\"awayjs-core/lib/library/NumSuffixConflictStrategy\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ConflictStrategyBase_1 = require(\"../library/ConflictStrategyBase\");\nvar NumSuffixConflictStrategy = (function (_super) {\n    __extends(NumSuffixConflictStrategy, _super);\n    function NumSuffixConflictStrategy(separator) {\n        if (separator === void 0) { separator = '.'; }\n        _super.call(this);\n        this._separator = separator;\n        this._next_suffix = {};\n    }\n    NumSuffixConflictStrategy.prototype.resolveConflict = function (changedAsset, oldAsset, assetsDictionary, precedence) {\n        var orig;\n        var new_name;\n        var base;\n        var suffix;\n        orig = changedAsset.name;\n        if (orig.indexOf(this._separator) >= 0) {\n            // Name has an ocurrence of the separator, so get base name and suffix,\n            // unless suffix is non-numerical, in which case revert to zero and\n            // use entire name as base\n            base = orig.substring(0, orig.lastIndexOf(this._separator));\n            suffix = parseInt(orig.substring(base.length - 1));\n            if (isNaN(suffix)) {\n                base = orig;\n                suffix = 0;\n            }\n        }\n        else {\n            base = orig;\n            suffix = 0;\n        }\n        if (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\n            suffix = this._next_suffix[base];\n        }\n        // Find the first suffixed name that does\n        // not collide with other names.\n        do {\n            suffix++;\n            new_name = base.concat(this._separator, suffix.toString());\n        } while (assetsDictionary.hasOwnProperty(new_name));\n        this._next_suffix[base] = suffix;\n        this._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\n    };\n    NumSuffixConflictStrategy.prototype.create = function () {\n        return new NumSuffixConflictStrategy(this._separator);\n    };\n    return NumSuffixConflictStrategy;\n}(ConflictStrategyBase_1.ConflictStrategyBase));\nexports.NumSuffixConflictStrategy = NumSuffixConflictStrategy;\n\n},{\"../library/ConflictStrategyBase\":\"awayjs-core/lib/library/ConflictStrategyBase\"}],\"awayjs-core/lib/library\":[function(require,module,exports){\n\"use strict\";\nvar AbstractionBase_1 = require(\"./library/AbstractionBase\");\nexports.AbstractionBase = AbstractionBase_1.AbstractionBase;\nvar AssetBase_1 = require(\"./library/AssetBase\");\nexports.AssetBase = AssetBase_1.AssetBase;\nvar AssetLibrary_1 = require(\"./library/AssetLibrary\");\nexports.AssetLibrary = AssetLibrary_1.AssetLibrary;\nvar AssetLibraryBundle_1 = require(\"./library/AssetLibraryBundle\");\nexports.AssetLibraryBundle = AssetLibraryBundle_1.AssetLibraryBundle;\nvar AssetLibraryIterator_1 = require(\"./library/AssetLibraryIterator\");\nexports.AssetLibraryIterator = AssetLibraryIterator_1.AssetLibraryIterator;\nvar ConflictPrecedence_1 = require(\"./library/ConflictPrecedence\");\nexports.ConflictPrecedence = ConflictPrecedence_1.ConflictPrecedence;\nvar ConflictStrategy_1 = require(\"./library/ConflictStrategy\");\nexports.ConflictStrategy = ConflictStrategy_1.ConflictStrategy;\nvar ConflictStrategyBase_1 = require(\"./library/ConflictStrategyBase\");\nexports.ConflictStrategyBase = ConflictStrategyBase_1.ConflictStrategyBase;\nvar ErrorConflictStrategy_1 = require(\"./library/ErrorConflictStrategy\");\nexports.ErrorConflictStrategy = ErrorConflictStrategy_1.ErrorConflictStrategy;\nvar IDUtil_1 = require(\"./library/IDUtil\");\nexports.IDUtil = IDUtil_1.IDUtil;\nvar IgnoreConflictStrategy_1 = require(\"./library/IgnoreConflictStrategy\");\nexports.IgnoreConflictStrategy = IgnoreConflictStrategy_1.IgnoreConflictStrategy;\nvar Loader_1 = require(\"./library/Loader\");\nexports.Loader = Loader_1.Loader;\nvar LoaderContext_1 = require(\"./library/LoaderContext\");\nexports.LoaderContext = LoaderContext_1.LoaderContext;\nvar LoaderInfo_1 = require(\"./library/LoaderInfo\");\nexports.LoaderInfo = LoaderInfo_1.LoaderInfo;\nvar NumSuffixConflictStrategy_1 = require(\"./library/NumSuffixConflictStrategy\");\nexports.NumSuffixConflictStrategy = NumSuffixConflictStrategy_1.NumSuffixConflictStrategy;\n\n},{\"./library/AbstractionBase\":\"awayjs-core/lib/library/AbstractionBase\",\"./library/AssetBase\":\"awayjs-core/lib/library/AssetBase\",\"./library/AssetLibrary\":\"awayjs-core/lib/library/AssetLibrary\",\"./library/AssetLibraryBundle\":\"awayjs-core/lib/library/AssetLibraryBundle\",\"./library/AssetLibraryIterator\":\"awayjs-core/lib/library/AssetLibraryIterator\",\"./library/ConflictPrecedence\":\"awayjs-core/lib/library/ConflictPrecedence\",\"./library/ConflictStrategy\":\"awayjs-core/lib/library/ConflictStrategy\",\"./library/ConflictStrategyBase\":\"awayjs-core/lib/library/ConflictStrategyBase\",\"./library/ErrorConflictStrategy\":\"awayjs-core/lib/library/ErrorConflictStrategy\",\"./library/IDUtil\":\"awayjs-core/lib/library/IDUtil\",\"./library/IgnoreConflictStrategy\":\"awayjs-core/lib/library/IgnoreConflictStrategy\",\"./library/Loader\":\"awayjs-core/lib/library/Loader\",\"./library/LoaderContext\":\"awayjs-core/lib/library/LoaderContext\",\"./library/LoaderInfo\":\"awayjs-core/lib/library/LoaderInfo\",\"./library/NumSuffixConflictStrategy\":\"awayjs-core/lib/library/NumSuffixConflictStrategy\"}],\"awayjs-core/lib/managers/AudioChannel\":[function(require,module,exports){\n\"use strict\";\nvar AudioChannel = (function () {\n    function AudioChannel() {\n        var _this = this;\n        this._isPlaying = false;\n        this._isLooping = false;\n        this._audioCtx = AudioChannel._audioCtx || (AudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n        this._gainNode = this._audioCtx.createGain();\n        this._gainNode = this._audioCtx.createGain();\n        this._gainNode.connect(this._audioCtx.destination);\n        this._audio = new Audio();\n        this._audio.onended = function (event) { return _this._onEnded(event); };\n        this._audio[\"crossOrigin\"] = \"anonymous\";\n        var source = this._audioCtx.createMediaElementSource(this._audio);\n        source.connect(this._gainNode);\n    }\n    Object.defineProperty(AudioChannel.prototype, \"currentTime\", {\n        get: function () {\n            return this._audio.currentTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AudioChannel.prototype, \"volume\", {\n        get: function () {\n            return this._gainNode.gain.value;\n        },\n        set: function (value) {\n            this._gainNode.gain.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AudioChannel.prototype.isPlaying = function () {\n        return this._isPlaying;\n    };\n    AudioChannel.prototype.isLooping = function () {\n        return this._isLooping;\n    };\n    AudioChannel.prototype.isDecoding = function () {\n        return false;\n    };\n    AudioChannel.prototype.play = function (url, offset, loop) {\n        if (offset === void 0) { offset = 0; }\n        if (loop === void 0) { loop = false; }\n        this._isPlaying = true;\n        this._isLooping = loop;\n        this._audio.src = url;\n        this._audio.loop = loop;\n        this._audio.currentTime = offset;\n        this._audio.play();\n    };\n    AudioChannel.prototype.stop = function () {\n        this._audio.pause();\n        this._isPlaying = false;\n        this._isLooping = false;\n    };\n    AudioChannel.prototype._onEnded = function (event) {\n        this.stop();\n    };\n    AudioChannel.maxChannels = 16;\n    AudioChannel._channels = new Array();\n    return AudioChannel;\n}());\nexports.AudioChannel = AudioChannel;\n\n},{}],\"awayjs-core/lib/managers/AudioManager\":[function(require,module,exports){\n\"use strict\";\nvar StreamingAudioChannel_1 = require(\"../managers/StreamingAudioChannel\");\nvar WebAudioChannel_1 = require(\"../managers/WebAudioChannel\");\nvar AudioManager = (function () {\n    function AudioManager() {\n    }\n    AudioManager.getChannel = function (byteLength) {\n        //choose best audio channel by bytelength\n        var channelClass = (byteLength > 50000) ? StreamingAudioChannel_1.StreamingAudioChannel : WebAudioChannel_1.WebAudioChannel;\n        var i = 0;\n        while (channelClass._channels[i] && channelClass._channels[i].isPlaying())\n            i++;\n        if (i == channelClass.maxChannels) {\n            //pick the oldest channel to reuse, ignoring looping channels\n            var channel;\n            var len = channelClass._channels.length;\n            for (var j = 0; j < len; j++) {\n                channel = channelClass._channels[j];\n                if (!channel.isLooping() && !channel.isDecoding()) {\n                    channelClass._channels.push(channelClass._channels.splice(j, 1)[0]);\n                    channel.stop();\n                    return channel;\n                }\n            }\n            //do not return channel until one is freed up\n            return null;\n        }\n        return channelClass._channels[i] || (channelClass._channels[i] = new channelClass());\n    };\n    return AudioManager;\n}());\nexports.AudioManager = AudioManager;\n\n},{\"../managers/StreamingAudioChannel\":\"awayjs-core/lib/managers/StreamingAudioChannel\",\"../managers/WebAudioChannel\":\"awayjs-core/lib/managers/WebAudioChannel\"}],\"awayjs-core/lib/managers/EventAudioChannel\":[function(require,module,exports){\n\"use strict\";\nvar ParserUtils_1 = require(\"../parsers/ParserUtils\");\nvar EventAudioChannel = (function () {\n    function EventAudioChannel() {\n        var _this = this;\n        this._isPlaying = false;\n        this._isLooping = false;\n        this._startTime = 0;\n        this._audio = new Audio();\n        this._audio.ontimeupdate = function (event) { return _this._onTimeUpdate(event); };\n    }\n    Object.defineProperty(EventAudioChannel.prototype, \"duration\", {\n        get: function () {\n            return this._duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EventAudioChannel.prototype, \"currentTime\", {\n        get: function () {\n            return this._audio.currentTime - this._startTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EventAudioChannel.prototype, \"volume\", {\n        get: function () {\n            return this._volume;\n        },\n        set: function (value) {\n            if (this._volume == value)\n                return;\n            this._volume = value;\n            this._audio.volume = this._volume;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventAudioChannel.prototype.isPlaying = function () {\n        return this._isPlaying;\n    };\n    EventAudioChannel.prototype.isLooping = function () {\n        return this._isLooping;\n    };\n    EventAudioChannel.prototype.isDecoding = function () {\n        return false;\n    };\n    EventAudioChannel.prototype.play = function (buffer, offset, loop, id) {\n        if (offset === void 0) { offset = 0; }\n        if (loop === void 0) { loop = false; }\n        if (id === void 0) { id = 0; }\n        this._isPlaying = true;\n        this._isLooping = loop;\n        this._audio.src = EventAudioChannel._base64Cache[id] || (EventAudioChannel._base64Cache[id] = ParserUtils_1.ParserUtils.arrayBufferToBase64(buffer, \"audio/mp3\"));\n        this._audio.loop = this._isLooping;\n        this._audio.currentTime = offset;\n        this._audio.play();\n    };\n    EventAudioChannel.prototype.stop = function () {\n        this._audio.pause();\n        this._isPlaying = false;\n        this._isLooping = false;\n    };\n    EventAudioChannel.prototype._onTimeUpdate = function (event) {\n        //TODO: more accurate end detection\n        if (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\n            this.stop();\n    };\n    EventAudioChannel.maxChannels = 4;\n    EventAudioChannel._channels = new Array();\n    EventAudioChannel._base64Cache = new Object();\n    return EventAudioChannel;\n}());\nexports.EventAudioChannel = EventAudioChannel;\n\n},{\"../parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\"}],\"awayjs-core/lib/managers/IAudioChannelClass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/managers/IAudioChannel\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/managers/StreamingAudioChannel\":[function(require,module,exports){\n\"use strict\";\nvar StreamingAudioChannel = (function () {\n    function StreamingAudioChannel() {\n        var _this = this;\n        this._isPlaying = false;\n        this._isLooping = false;\n        this._startTime = 0;\n        this._sourceOpenDelegate = function (event) { return _this._sourceOpen(event); };\n        this._updateEndDelegate = function (event) { return _this._updateEnd(event); };\n        this._audio = new Audio();\n        this._audio.ontimeupdate = function (event) { return _this._onTimeUpdate(event); };\n        this._updateSource();\n    }\n    Object.defineProperty(StreamingAudioChannel.prototype, \"duration\", {\n        get: function () {\n            return this._duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StreamingAudioChannel.prototype, \"currentTime\", {\n        get: function () {\n            return this._audio.currentTime - this._startTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StreamingAudioChannel.prototype, \"volume\", {\n        get: function () {\n            return this._volume;\n        },\n        set: function (value) {\n            if (this._volume == value)\n                return;\n            this._volume = value;\n            this._audio.volume = this._volume;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StreamingAudioChannel.prototype.isPlaying = function () {\n        return this._isPlaying;\n    };\n    StreamingAudioChannel.prototype.isLooping = function () {\n        return this._isLooping;\n    };\n    StreamingAudioChannel.prototype.isDecoding = function () {\n        return false;\n    };\n    StreamingAudioChannel.prototype.play = function (buffer, offset, loop) {\n        if (offset === void 0) { offset = 0; }\n        if (loop === void 0) { loop = false; }\n        this._isPlaying = true;\n        if (this._isLooping || this._isLooping != loop) {\n            this._isLooping = loop;\n            this._sourceDirty = true;\n        }\n        if (this._sourceDirty)\n            this._updateSource();\n        this._buffer = buffer;\n        this._offset = offset;\n        if (!this._isQueuing && !this._isOpening)\n            this._queueBuffer();\n    };\n    StreamingAudioChannel.prototype.stop = function () {\n        this._audio.pause();\n        this._isPlaying = false;\n        this._isLooping = false;\n    };\n    StreamingAudioChannel.prototype._sourceOpen = function (event) {\n        this._isOpening = false;\n        //TODO: find out how in the name of all that is holy how this can be executed more than once on a MediaSource object\n        if (this._mediaSource.activeSourceBuffers.length) {\n            console.log(\"ERR: double sourceopen event called\");\n            return;\n        }\n        this._sourceBuffer = this._mediaSource.addSourceBuffer('audio/mpeg');\n        this._sourceBuffer.addEventListener(\"updateend\", this._updateEndDelegate);\n        if (this._isPlaying)\n            this._queueBuffer();\n    };\n    StreamingAudioChannel.prototype._queueBuffer = function () {\n        this._isQueuing = true;\n        this._startTime = this._sourceBuffer.timestampOffset;\n        this._sourceBuffer.appendBuffer(this._buffer);\n    };\n    StreamingAudioChannel.prototype._updateEnd = function (event) {\n        this._isQueuing = false;\n        if (this._isLooping)\n            this._mediaSource.endOfStream();\n        this._duration = this._sourceBuffer.timestampOffset - this._startTime;\n        this._audio.currentTime = this._startTime + this._offset;\n        this._audio.play();\n    };\n    StreamingAudioChannel.prototype._onTimeUpdate = function (event) {\n        //TODO: more accurate end detection\n        if (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\n            this.stop();\n    };\n    StreamingAudioChannel.prototype._updateSource = function () {\n        if (this._mediaSource)\n            this._disposeSource();\n        this._isQueuing = false;\n        this._isOpening = true;\n        this._mediaSource = new MediaSource();\n        this._mediaSource.addEventListener(\"sourceopen\", this._sourceOpenDelegate);\n        this._urlString = URL.createObjectURL(this._mediaSource);\n        this._audio.src = this._urlString;\n        this._audio.loop = this._isLooping;\n        this._sourceDirty = false;\n    };\n    StreamingAudioChannel.prototype._disposeSource = function () {\n        if (!this._isOpening) {\n            if (this._sourceBuffer.timestampOffset)\n                this._sourceBuffer.remove(0, this._sourceBuffer.timestampOffset);\n            this._sourceBuffer.removeEventListener(\"updateend\", this._updateEndDelegate);\n            this._mediaSource.removeSourceBuffer(this._sourceBuffer);\n            delete this._sourceBuffer;\n            this._sourceBuffer = null;\n        }\n        this._mediaSource.removeEventListener(\"sourceopen\", this._sourceOpenDelegate);\n        URL.revokeObjectURL(this._urlString);\n        delete this._mediaSource;\n        this._mediaSource = null;\n    };\n    StreamingAudioChannel.maxChannels = 4;\n    StreamingAudioChannel._channels = new Array();\n    return StreamingAudioChannel;\n}());\nexports.StreamingAudioChannel = StreamingAudioChannel;\n\n},{}],\"awayjs-core/lib/managers/WebAudioChannel\":[function(require,module,exports){\n\"use strict\";\nvar WebAudioChannel = (function () {\n    function WebAudioChannel() {\n        var _this = this;\n        this._isPlaying = false;\n        this._isLooping = false;\n        this._isDecoding = false;\n        this._volume = 1;\n        this._startTime = 0;\n        this._audioCtx = WebAudioChannel._audioCtx || (WebAudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n        this._gainNode = this._audioCtx.createGain();\n        this._gainNode.gain.value = this._volume;\n        this._gainNode.connect(this._audioCtx.destination);\n        this._onEndedDelegate = function (event) { return _this._onEnded(event); };\n    }\n    Object.defineProperty(WebAudioChannel.prototype, \"duration\", {\n        get: function () {\n            return this._duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebAudioChannel.prototype, \"currentTime\", {\n        get: function () {\n            return this._audioCtx.currentTime - this._startTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebAudioChannel.prototype, \"volume\", {\n        get: function () {\n            return this._volume;\n        },\n        set: function (value) {\n            if (this._volume == value)\n                return;\n            this._volume = value;\n            this._gainNode.gain.value = this._volume;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebAudioChannel.prototype.isPlaying = function () {\n        return this._isPlaying;\n    };\n    WebAudioChannel.prototype.isLooping = function () {\n        return this._isLooping;\n    };\n    WebAudioChannel.prototype.isDecoding = function () {\n        return this._isDecoding;\n    };\n    WebAudioChannel.prototype.play = function (buffer, offset, loop, id) {\n        var _this = this;\n        if (offset === void 0) { offset = 0; }\n        if (loop === void 0) { loop = false; }\n        if (id === void 0) { id = 0; }\n        this._isPlaying = true;\n        this._isLooping = loop;\n        this._currentTime = offset;\n        this._id = id;\n        this._isDecoding = true;\n        //fast path for short sounds\n        if (WebAudioChannel._decodeCache[id])\n            this._onDecodeComplete(WebAudioChannel._decodeCache[id]);\n        else if (!WebAudioChannel._errorCache[id])\n            this._audioCtx.decodeAudioData(buffer, function (buffer) { return _this._onDecodeComplete(buffer); }, function (event) { return _this._onError(event); });\n        else\n            this.stop();\n    };\n    WebAudioChannel.prototype.stop = function () {\n        if (!this._isPlaying)\n            return;\n        this._isPlaying = false;\n        this._isLooping = false;\n        this._isDecoding = false;\n        if (this._source)\n            this._disposeSource();\n    };\n    WebAudioChannel.prototype._onDecodeComplete = function (buffer) {\n        if (!this._isPlaying)\n            return;\n        this._isDecoding = false;\n        //if (buffer.duration < 2) //cache all buffers?\n        WebAudioChannel._decodeCache[this._id] = buffer;\n        if (this._source)\n            this._disposeSource();\n        this._source = this._audioCtx.createBufferSource();\n        this._source.loop = this._isLooping;\n        this._source.connect(this._gainNode);\n        this._source.buffer = buffer;\n        this._duration = buffer.duration;\n        this._startTime = this._audioCtx.currentTime - this._currentTime;\n        this._source.onended = this._onEndedDelegate;\n        try {\n            this._source.start(this._audioCtx.currentTime, this._currentTime);\n        }\n        catch (error) {\n            console.log(\"Error starting audio: \" + error);\n            this._disposeSource();\n        }\n    };\n    WebAudioChannel.prototype._onError = function (event) {\n        console.log(\"Error with decoding audio data\");\n        WebAudioChannel._errorCache[this._id] = true;\n        this.stop();\n    };\n    WebAudioChannel.prototype._onEnded = function (event) {\n        this.stop();\n    };\n    WebAudioChannel.prototype._disposeSource = function () {\n        //clean up\n        this._source.stop(this._audioCtx.currentTime);\n        this._source.onended = null;\n        this._source.disconnect();\n        delete this._source.buffer;\n        delete this._source;\n        this._source = null;\n    };\n    WebAudioChannel.maxChannels = 64;\n    WebAudioChannel._channels = new Array();\n    WebAudioChannel._decodeCache = new Object();\n    WebAudioChannel._errorCache = new Object();\n    return WebAudioChannel;\n}());\nexports.WebAudioChannel = WebAudioChannel;\n\n},{}],\"awayjs-core/lib/managers\":[function(require,module,exports){\n\"use strict\";\nvar AudioManager_1 = require(\"./managers/AudioManager\");\nexports.AudioManager = AudioManager_1.AudioManager;\nvar StreamingAudioChannel_1 = require(\"./managers/StreamingAudioChannel\");\nexports.StreamingAudioChannel = StreamingAudioChannel_1.StreamingAudioChannel;\nvar WebAudioChannel_1 = require(\"./managers/WebAudioChannel\");\nexports.WebAudioChannel = WebAudioChannel_1.WebAudioChannel;\n\n},{\"./managers/AudioManager\":\"awayjs-core/lib/managers/AudioManager\",\"./managers/StreamingAudioChannel\":\"awayjs-core/lib/managers/StreamingAudioChannel\",\"./managers/WebAudioChannel\":\"awayjs-core/lib/managers/WebAudioChannel\"}],\"awayjs-core/lib/net/CrossDomainPolicy\":[function(require,module,exports){\n\"use strict\";\nvar CrossDomainPolicy = (function () {\n    function CrossDomainPolicy() {\n    }\n    CrossDomainPolicy.ANONYMOUS = 'anonymous';\n    CrossDomainPolicy.USE_CREDENTIALS = 'use-credentials';\n    return CrossDomainPolicy;\n}());\nexports.CrossDomainPolicy = CrossDomainPolicy;\n\n},{}],\"awayjs-core/lib/net/URLLoaderDataFormat\":[function(require,module,exports){\n\"use strict\";\nvar URLLoaderDataFormat = (function () {\n    function URLLoaderDataFormat() {\n    }\n    /**\n     * TEXT\n     * @type {string}\n     */\n    URLLoaderDataFormat.TEXT = \"text\";\n    /**\n     * Variables / Value Pairs\n     * @type {string}\n     */\n    URLLoaderDataFormat.VARIABLES = \"variables\";\n    /**\n     *\n     * @type {string}\n     */\n    URLLoaderDataFormat.BLOB = \"blob\";\n    /**\n     *\n     * @type {string}\n     */\n    URLLoaderDataFormat.ARRAY_BUFFER = \"arraybuffer\";\n    /**\n     *\n     * @type {string}\n     */\n    URLLoaderDataFormat.BINARY = \"binary\";\n    return URLLoaderDataFormat;\n}());\nexports.URLLoaderDataFormat = URLLoaderDataFormat;\n\n},{}],\"awayjs-core/lib/net/URLLoader\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar URLLoaderDataFormat_1 = require(\"../net/URLLoaderDataFormat\");\nvar URLRequestMethod_1 = require(\"../net/URLRequestMethod\");\nvar URLVariables_1 = require(\"../net/URLVariables\");\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\nvar URLLoaderEvent_1 = require(\"../events/URLLoaderEvent\");\n/**\n * The URLLoader is used to load a single file, as part of a resource.\n *\n * While URLLoader can be used directly, e.g. to create a third-party asset\n * management system, it's recommended to use any of the classes Loader3D, Loader\n * and AssetLibrary instead in most cases.\n *\n * @see Loader\n * @see away.library.AssetLibrary\n */\nvar URLLoader = (function (_super) {\n    __extends(URLLoader, _super);\n    /**\n     * Creates a new URLLoader object.\n     */\n    function URLLoader() {\n        _super.call(this);\n        this._bytesLoaded = 0;\n        this._bytesTotal = 0;\n        this._dataFormat = URLLoaderDataFormat_1.URLLoaderDataFormat.TEXT;\n        this._loadError = false;\n    }\n    Object.defineProperty(URLLoader.prototype, \"url\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._request ? this._request.url : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URLLoader.prototype, \"data\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URLLoader.prototype, \"dataFormat\", {\n        get: function () {\n            return this._dataFormat;\n        },\n        /**\n         *\n         * URLLoaderDataFormat.BINARY\n         * URLLoaderDataFormat.TEXT\n         * URLLoaderDataFormat.VARIABLES\n         *\n         * @param format\n         */\n        set: function (format) {\n            this._dataFormat = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URLLoader.prototype, \"bytesLoaded\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._bytesLoaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URLLoader.prototype, \"bytesTotal\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._bytesTotal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Load a resource from a file.\n     *\n     * @param request The URLRequest object containing the URL of the object to be loaded.\n     */\n    URLLoader.prototype.load = function (request) {\n        this._request = request;\n        this.initXHR();\n        if (request.method === URLRequestMethod_1.URLRequestMethod.POST)\n            this.postRequest(request);\n        else\n            this.getRequest(request);\n    };\n    URLLoader.prototype.isSupported = function () {\n        return window != null;\n    };\n    /**\n     *\n     */\n    URLLoader.prototype.close = function () {\n        this._XHR.abort();\n        this.disposeXHR();\n    };\n    /**\n     *\n     */\n    URLLoader.prototype.dispose = function () {\n        if (this._XHR)\n            this._XHR.abort();\n        this.disposeXHR();\n    };\n    /**\n     *\n     * @param xhr\n     * @param responseType\n     */\n    URLLoader.prototype.setResponseType = function (xhr, responseType) {\n        switch (responseType) {\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.ARRAY_BUFFER:\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.BLOB:\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.TEXT:\n                xhr.responseType = responseType;\n                break;\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.VARIABLES:\n                xhr.responseType = URLLoaderDataFormat_1.URLLoaderDataFormat.TEXT;\n                break;\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.BINARY:\n                xhr.responseType = '';\n                break;\n            default:\n        }\n    };\n    /**\n     *\n     * @param request {URLRequest}\n     */\n    URLLoader.prototype.getRequest = function (request) {\n        try {\n            this._XHR.open(request.method, request.url, request.async);\n            this.setResponseType(this._XHR, this._dataFormat);\n            this._XHR.send(); // No data to send\n        }\n        catch (e /* <XMLHttpRequestException> */) {\n            this.handleXmlHttpRequestException(e);\n        }\n    };\n    /**\n     *\n     * @param request {URLRequest}\n     */\n    URLLoader.prototype.postRequest = function (request) {\n        this._loadError = false;\n        this._XHR.open(request.method, request.url, request.async);\n        if (request.data != null) {\n            if (request.data instanceof URLVariables_1.URLVariables) {\n                var urlVars = request.data;\n                try {\n                    this._XHR.responseType = 'text';\n                    this._XHR.send(urlVars.formData);\n                }\n                catch (e /* <XMLHttpRequestException> */) {\n                    this.handleXmlHttpRequestException(e);\n                }\n            }\n            else {\n                this.setResponseType(this._XHR, this._dataFormat);\n                if (request.data)\n                    this._XHR.send(request.data); // TODO: Test\n                else\n                    this._XHR.send(); // no data to send\n            }\n        }\n        else {\n            this._XHR.send(); // No data to send\n        }\n    };\n    /**\n     *\n     * @param error {XMLHttpRequestException}\n     */\n    URLLoader.prototype.handleXmlHttpRequestException = function (error /* <XMLHttpRequestException> */) {\n        switch (error.code) {\n            /******************************************************************************************************************************************************************************************************\n             *\n             *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\n             *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\n             *\n             ******************************************************************************************************************************************************************************************************/\n            case 101:\n                // Note: onLoadError event throws IO_ERROR event - this case is already Covered\n                break;\n        }\n    };\n    /**\n     *\n     */\n    URLLoader.prototype.initXHR = function () {\n        var _this = this;\n        if (!this._XHR) {\n            this._XHR = new XMLHttpRequest();\n            this._XHR.onloadstart = function (event) { return _this.onLoadStart(event); }; // loadstart\t        - When the request starts.\n            this._XHR.onprogress = function (event) { return _this.onProgress(event); }; // progress\t            - While loading and sending data.\n            this._XHR.onabort = function (event) { return _this.onAbort(event); }; // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n            this._XHR.onerror = function (event) { return _this.onLoadError(event); }; // error\t            - When the request has failed.\n            this._XHR.onload = function (event) { return _this.onLoadComplete(event); }; // load\t                - When the request has successfully completed.\n            this._XHR.ontimeout = function (event) { return _this.onTimeOut(event); }; // timeout\t            - When the author specified timeout has passed before the request could complete.\n            this._XHR.onloadend = function (event) { return _this.onLoadEnd(event); }; // loadend\t            - When the request has completed, regardless of whether or not it was successful.\n            this._XHR.onreadystatechange = function (event) { return _this.onReadyStateChange(event); }; // onreadystatechange   - When XHR state changes\n        }\n    };\n    /**\n     *\n     */\n    URLLoader.prototype.disposeXHR = function () {\n        if (this._XHR !== null) {\n            this._XHR.onloadstart = null;\n            this._XHR.onprogress = null;\n            this._XHR.onabort = null;\n            this._XHR.onerror = null;\n            this._XHR.onload = null;\n            this._XHR.ontimeout = null;\n            this._XHR.onloadend = null;\n            this._XHR = null;\n        }\n    };\n    /**\n     *\n     * @param source\n     */\n    URLLoader.prototype.decodeURLVariables = function (source) {\n        var result = new Object();\n        source = source.split(\"+\").join(\" \");\n        var tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n        while (tokens = re.exec(source))\n            result[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n        return result;\n    };\n    // XMLHttpRequest - Event Handlers\n    /**\n     * When XHR state changes\n     * @param event\n     */\n    URLLoader.prototype.onReadyStateChange = function (event) {\n        if (this._XHR.readyState == 4) {\n            this._status = this._XHR.status;\n            if (this._status == 404) {\n                this._loadError = true;\n                this.dispatchEvent(this._loadErrorEvent || (this._loadErrorEvent = new URLLoaderEvent_1.URLLoaderEvent(URLLoaderEvent_1.URLLoaderEvent.LOAD_ERROR, this)));\n            }\n            this.dispatchEvent(this._statusEvent || (this._statusEvent = new URLLoaderEvent_1.URLLoaderEvent(URLLoaderEvent_1.URLLoaderEvent.HTTP_STATUS, this)));\n        }\n    };\n    /**\n     * When the request has completed, regardless of whether or not it was successful.\n     * @param event\n     */\n    URLLoader.prototype.onLoadEnd = function (event) {\n        if (this._loadError === true)\n            return;\n    };\n    /**\n     * When the author specified timeout has passed before the request could complete.\n     * @param event\n     */\n    URLLoader.prototype.onTimeOut = function (event) {\n        //TODO: Timeout not currently implemented ( also not part of AS3 API )\n    };\n    /**\n     * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n     * @param event\n     */\n    URLLoader.prototype.onAbort = function (event) {\n        // TODO: investigate whether this needs to be an IOError\n    };\n    /**\n     * While loading and sending data.\n     * @param event\n     */\n    URLLoader.prototype.onProgress = function (event) {\n        this._bytesTotal = event.total;\n        this._bytesLoaded = event.loaded;\n        this.dispatchEvent(this._progressEvent || (this._progressEvent = new URLLoaderEvent_1.URLLoaderEvent(URLLoaderEvent_1.URLLoaderEvent.LOAD_PROGRESS, this)));\n    };\n    /**\n     * When the request starts.\n     * @param event\n     */\n    URLLoader.prototype.onLoadStart = function (event) {\n        this.dispatchEvent(this._loadStartEvent || (this._loadStartEvent = new URLLoaderEvent_1.URLLoaderEvent(URLLoaderEvent_1.URLLoaderEvent.LOAD_START, this)));\n    };\n    /**\n     * When the request has successfully completed.\n     * @param event\n     */\n    URLLoader.prototype.onLoadComplete = function (event) {\n        if (this._loadError === true)\n            return;\n        switch (this._dataFormat) {\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.TEXT:\n                this._data = this._XHR.responseText;\n                break;\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.VARIABLES:\n                this._data = this.decodeURLVariables(this._XHR.responseText);\n                break;\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.BLOB:\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.ARRAY_BUFFER:\n            case URLLoaderDataFormat_1.URLLoaderDataFormat.BINARY:\n                this._data = this._XHR.response;\n                break;\n            default:\n                this._data = this._XHR.responseText;\n                break;\n        }\n        this.dispatchEvent(this._loadCompleteEvent || (this._loadCompleteEvent = new URLLoaderEvent_1.URLLoaderEvent(URLLoaderEvent_1.URLLoaderEvent.LOAD_COMPLETE, this)));\n    };\n    /**\n     * When the request has failed. ( due to network issues ).\n     * @param event\n     */\n    URLLoader.prototype.onLoadError = function (event) {\n        this._loadError = true;\n        this.dispatchEvent(this._loadErrorEvent || (this._loadErrorEvent = new URLLoaderEvent_1.URLLoaderEvent(URLLoaderEvent_1.URLLoaderEvent.LOAD_ERROR, this)));\n    };\n    return URLLoader;\n}(EventDispatcher_1.EventDispatcher));\nexports.URLLoader = URLLoader;\n\n},{\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"../events/URLLoaderEvent\":\"awayjs-core/lib/events/URLLoaderEvent\",\"../net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"../net/URLRequestMethod\":\"awayjs-core/lib/net/URLRequestMethod\",\"../net/URLVariables\":\"awayjs-core/lib/net/URLVariables\"}],\"awayjs-core/lib/net/URLRequestMethod\":[function(require,module,exports){\n\"use strict\";\nvar URLRequestMethod = (function () {\n    function URLRequestMethod() {\n    }\n    /**\n     *\n     * @type {string}\n     */\n    URLRequestMethod.POST = 'POST';\n    /**\n     *\n     * @type {string}\n     */\n    URLRequestMethod.GET = 'GET';\n    return URLRequestMethod;\n}());\nexports.URLRequestMethod = URLRequestMethod;\n\n},{}],\"awayjs-core/lib/net/URLRequest\":[function(require,module,exports){\n\"use strict\";\nvar URLRequestMethod_1 = require(\"../net/URLRequestMethod\");\nvar URLRequest = (function () {\n    /**\n\n     * @param url\n     */\n    function URLRequest(url) {\n        if (url === void 0) { url = null; }\n        /**\n         *\n         * away.net.URLRequestMethod.GET\n         * away.net.URLRequestMethod.POST\n         *\n         * @type {string}\n         */\n        this.method = URLRequestMethod_1.URLRequestMethod.GET;\n        /**\n         * Use asynchronous XMLHttpRequest\n         * @type {boolean}\n         */\n        this.async = true;\n        this._url = url;\n    }\n    Object.defineProperty(URLRequest.prototype, \"url\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return this._url;\n        },\n        /**\n         *\n         * @param value\n         */\n        set: function (value) {\n            this._url = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * dispose\n     */\n    URLRequest.prototype.dispose = function () {\n        this.data = null;\n        this._url = null;\n    };\n    return URLRequest;\n}());\nexports.URLRequest = URLRequest;\n\n},{\"../net/URLRequestMethod\":\"awayjs-core/lib/net/URLRequestMethod\"}],\"awayjs-core/lib/net/URLVariables\":[function(require,module,exports){\n\"use strict\";\nvar URLVariables = (function () {\n    /**\n     *\n     * @param source\n     */\n    function URLVariables(source) {\n        if (source === void 0) { source = null; }\n        this._variables = new Object();\n        if (source !== null)\n            this.decode(source);\n    }\n    /**\n     *\n     * @param source\n     */\n    URLVariables.prototype.decode = function (source) {\n        source = source.split(\"+\").join(\" \");\n        var tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n        while (tokens = re.exec(source))\n            this._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n    };\n    /**\n     *\n     * @returns {string}\n     */\n    URLVariables.prototype.toString = function () {\n        return '';\n    };\n    Object.defineProperty(URLVariables.prototype, \"variables\", {\n        /**\n         *\n         * @returns {Object}\n         */\n        get: function () {\n            return this._variables;\n        },\n        /**\n         *\n         * @returns {Object}\n         */\n        set: function (obj) {\n            this._variables = obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URLVariables.prototype, \"formData\", {\n        /**\n         *\n         * @returns {Object}\n         */\n        get: function () {\n            var fd = new FormData();\n            for (var s in this._variables)\n                fd.append(s, this._variables[s]);\n            return fd;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return URLVariables;\n}());\nexports.URLVariables = URLVariables;\n\n},{}],\"awayjs-core/lib/net\":[function(require,module,exports){\n\"use strict\";\nvar CrossDomainPolicy_1 = require(\"./net/CrossDomainPolicy\");\nexports.CrossDomainPolicy = CrossDomainPolicy_1.CrossDomainPolicy;\nvar URLLoader_1 = require(\"./net/URLLoader\");\nexports.URLLoader = URLLoader_1.URLLoader;\nvar URLLoaderDataFormat_1 = require(\"./net/URLLoaderDataFormat\");\nexports.URLLoaderDataFormat = URLLoaderDataFormat_1.URLLoaderDataFormat;\nvar URLRequest_1 = require(\"./net/URLRequest\");\nexports.URLRequest = URLRequest_1.URLRequest;\nvar URLRequestMethod_1 = require(\"./net/URLRequestMethod\");\nexports.URLRequestMethod = URLRequestMethod_1.URLRequestMethod;\nvar URLVariables_1 = require(\"./net/URLVariables\");\nexports.URLVariables = URLVariables_1.URLVariables;\n\n},{\"./net/CrossDomainPolicy\":\"awayjs-core/lib/net/CrossDomainPolicy\",\"./net/URLLoader\":\"awayjs-core/lib/net/URLLoader\",\"./net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"./net/URLRequest\":\"awayjs-core/lib/net/URLRequest\",\"./net/URLRequestMethod\":\"awayjs-core/lib/net/URLRequestMethod\",\"./net/URLVariables\":\"awayjs-core/lib/net/URLVariables\"}],\"awayjs-core/lib/parsers/Image2DParser\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar URLLoaderDataFormat_1 = require(\"../net/URLLoaderDataFormat\");\nvar ParserBase_1 = require(\"../parsers/ParserBase\");\nvar ParserUtils_1 = require(\"../parsers/ParserUtils\");\nvar ByteArray_1 = require(\"../utils/ByteArray\");\n/**\n * Image2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nvar Image2DParser = (function (_super) {\n    __extends(Image2DParser, _super);\n    /**\n     * Creates a new Image2DParser object.\n     * @param uri The url or id of the data or file to be parsed.\n     * @param extra The holder for extra contextual data that the parser might need.\n     */\n    function Image2DParser() {\n        _super.call(this, URLLoaderDataFormat_1.URLLoaderDataFormat.BLOB);\n    }\n    /**\n     * Indicates whether or not a given file extension is supported by the parser.\n     * @param extension The file extension of a potential file to be parsed.\n     * @return Whether or not the given file type is supported.\n     */\n    Image2DParser.supportsType = function (extension) {\n        extension = extension.toLowerCase();\n        return extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\"; //|| extension == \"bmp\";//|| extension == \"atf\";\n    };\n    /**\n     * Tests whether a data block can be parsed by the parser.\n     * @param data The data block to potentially be parsed.\n     * @return Whether or not the given data is supported.\n     */\n    Image2DParser.supportsData = function (data) {\n        if (data instanceof HTMLImageElement)\n            return true;\n        if (!(data instanceof ByteArray_1.ByteArray))\n            return false;\n        var ba = data;\n        ba.position = 0;\n        if (ba.readUnsignedShort() == 0xd8ff)\n            return true; // JPEG, maybe check for \"JFIF\" as well?\n        ba.position = 0;\n        if (ba.readShort() == 0x424D)\n            return true; // BMP\n        ba.position = 1;\n        if (ba.readUTFBytes(3) == 'PNG')\n            return true;\n        ba.position = 0;\n        if (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\n            return true;\n        ba.position = 0;\n        if (ba.readUTFBytes(3) == 'ATF')\n            return true;\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Image2DParser.prototype._pProceedParsing = function () {\n        var _this = this;\n        var asset;\n        var sizeError = false;\n        if (this._loadingImage) {\n            return ParserBase_1.ParserBase.MORE_TO_PARSE;\n        }\n        else if (this._htmlImageElement) {\n            //if (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n            asset = ParserUtils_1.ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\n            this._pFinalizeAsset(asset, this._iFileName);\n        }\n        else if (this.data instanceof HTMLImageElement) {\n            var htmlImageElement = this.data;\n            //if (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\n            asset = ParserUtils_1.ParserUtils.imageToBitmapImage2D(htmlImageElement, false);\n            this._pFinalizeAsset(asset, this._iFileName);\n        }\n        else if (this.data instanceof ByteArray_1.ByteArray) {\n            var ba = this.data;\n            ba.position = 0;\n            this._htmlImageElement = ParserUtils_1.ParserUtils.byteArrayToImage(this.data);\n            if (!this._htmlImageElement.complete) {\n                this._htmlImageElement.onload = function (event) { return _this.onLoadComplete(event); };\n                this._loadingImage = true;\n                return ParserBase_1.ParserBase.MORE_TO_PARSE;\n            }\n            //if (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n            asset = ParserUtils_1.ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\n            this._pFinalizeAsset(asset, this._iFileName);\n        }\n        else if (this.data instanceof ArrayBuffer) {\n            this._htmlImageElement = ParserUtils_1.ParserUtils.arrayBufferToImage(this.data);\n            asset = ParserUtils_1.ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\n            this._pFinalizeAsset(asset, this._iFileName);\n        }\n        else if (this.data instanceof Blob) {\n            this._htmlImageElement = ParserUtils_1.ParserUtils.blobToImage(this.data);\n            this._htmlImageElement.onload = function (event) { return _this.onLoadComplete(event); };\n            this._loadingImage = true;\n            return ParserBase_1.ParserBase.MORE_TO_PARSE;\n        }\n        if (sizeError == true) {\n        }\n        this._pContent = asset;\n        return ParserBase_1.ParserBase.PARSING_DONE;\n    };\n    Image2DParser.prototype.onLoadComplete = function (event) {\n        this._loadingImage = false;\n    };\n    return Image2DParser;\n}(ParserBase_1.ParserBase));\nexports.Image2DParser = Image2DParser;\n\n},{\"../net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"../parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\",\"../parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\",\"../utils/ByteArray\":\"awayjs-core/lib/utils/ByteArray\"}],\"awayjs-core/lib/parsers/ImageCubeParser\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BitmapImageCube_1 = require(\"../image/BitmapImageCube\");\nvar URLLoaderDataFormat_1 = require(\"../net/URLLoaderDataFormat\");\nvar URLRequest_1 = require(\"../net/URLRequest\");\nvar ParserBase_1 = require(\"../parsers/ParserBase\");\n/**\n * ImageCubeParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nvar ImageCubeParser = (function (_super) {\n    __extends(ImageCubeParser, _super);\n    /**\n     * Creates a new ImageCubeParser object.\n     * @param uri The url or id of the data or file to be parsed.\n     * @param extra The holder for extra contextual data that the parser might need.\n     */\n    function ImageCubeParser() {\n        _super.call(this, URLLoaderDataFormat_1.URLLoaderDataFormat.TEXT);\n    }\n    /**\n     * Indicates whether or not a given file extension is supported by the parser.\n     * @param extension The file extension of a potential file to be parsed.\n     * @return Whether or not the given file type is supported.\n     */\n    ImageCubeParser.supportsType = function (extension) {\n        extension = extension.toLowerCase();\n        return extension == \"cube\";\n    };\n    /**\n     * Tests whether a data block can be parsed by the parser.\n     * @param data The data block to potentially be parsed.\n     * @return Whether or not the given data is supported.\n     */\n    ImageCubeParser.supportsData = function (data) {\n        try {\n            var obj = JSON.parse(data);\n            if (obj)\n                return true;\n            return false;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageCubeParser.prototype._iResolveDependency = function (resourceDependency) {\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageCubeParser.prototype._iResolveDependencyFailure = function (resourceDependency) {\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageCubeParser.prototype._pProceedParsing = function () {\n        if (this._imgDependencyDictionary != null) {\n            var asset = new BitmapImageCube_1.BitmapImageCube(this._getBitmapImage2D(ImageCubeParser.posX).width);\n            asset.draw(BitmapImageCube_1.BitmapImageCube.posX, this._getBitmapImage2D(ImageCubeParser.posX));\n            asset.draw(BitmapImageCube_1.BitmapImageCube.negX, this._getBitmapImage2D(ImageCubeParser.negX));\n            asset.draw(BitmapImageCube_1.BitmapImageCube.posY, this._getBitmapImage2D(ImageCubeParser.posY));\n            asset.draw(BitmapImageCube_1.BitmapImageCube.negY, this._getBitmapImage2D(ImageCubeParser.negY));\n            asset.draw(BitmapImageCube_1.BitmapImageCube.posZ, this._getBitmapImage2D(ImageCubeParser.posZ));\n            asset.draw(BitmapImageCube_1.BitmapImageCube.negZ, this._getBitmapImage2D(ImageCubeParser.negZ));\n            //clear dictionary\n            this._imgDependencyDictionary = null;\n            asset.name = this._iFileName;\n            this._pFinalizeAsset(asset, this._iFileName);\n            return ParserBase_1.ParserBase.PARSING_DONE;\n        }\n        try {\n            var json = JSON.parse(this.data);\n            var data = json.data;\n            var rec;\n            if (data.length != 6)\n                this._pDieWithError('ImageCubeParser: Error - cube texture should have exactly 6 images');\n            if (json) {\n                this._imgDependencyDictionary = new Object();\n                for (var c = 0; c < data.length; c++) {\n                    rec = data[c];\n                    this._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest_1.URLRequest(rec.image.toString()));\n                }\n                if (!this._validateCubeData()) {\n                    this._pDieWithError(\"ImageCubeParser: JSON data error - cubes require id of:   \\n\" + ImageCubeParser.posX + ', ' + ImageCubeParser.negX + ',  \\n' + ImageCubeParser.posY + ', ' + ImageCubeParser.negY + ',  \\n' + ImageCubeParser.posZ + ', ' + ImageCubeParser.negZ);\n                    return ParserBase_1.ParserBase.PARSING_DONE;\n                }\n                this._pPauseAndRetrieveDependencies();\n                return ParserBase_1.ParserBase.MORE_TO_PARSE;\n            }\n        }\n        catch (e) {\n            this._pDieWithError('CubeTexturePaser Error parsing JSON');\n        }\n        return ParserBase_1.ParserBase.PARSING_DONE;\n    };\n    ImageCubeParser.prototype._validateCubeData = function () {\n        return (this._imgDependencyDictionary[ImageCubeParser.posX] != null && this._imgDependencyDictionary[ImageCubeParser.negX] != null && this._imgDependencyDictionary[ImageCubeParser.posY] != null && this._imgDependencyDictionary[ImageCubeParser.negY] != null && this._imgDependencyDictionary[ImageCubeParser.posZ] != null && this._imgDependencyDictionary[ImageCubeParser.negZ] != null);\n    };\n    ImageCubeParser.prototype._getBitmapImage2D = function (name) {\n        var dependency = this._imgDependencyDictionary[name];\n        if (dependency)\n            return dependency.assets[0];\n        return null;\n    };\n    ImageCubeParser.posX = 'posX';\n    ImageCubeParser.negX = 'negX';\n    ImageCubeParser.posY = 'posY';\n    ImageCubeParser.negY = 'negY';\n    ImageCubeParser.posZ = 'posZ';\n    ImageCubeParser.negZ = 'negZ';\n    return ImageCubeParser;\n}(ParserBase_1.ParserBase));\nexports.ImageCubeParser = ImageCubeParser;\n\n},{\"../image/BitmapImageCube\":\"awayjs-core/lib/image/BitmapImageCube\",\"../net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"../net/URLRequest\":\"awayjs-core/lib/net/URLRequest\",\"../parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\"}],\"awayjs-core/lib/parsers/ParserBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"../errors/AbstractMethodError\");\nvar AssetEvent_1 = require(\"../events/AssetEvent\");\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\nvar ParserEvent_1 = require(\"../events/ParserEvent\");\nvar TimerEvent_1 = require(\"../events/TimerEvent\");\nvar ParserUtils_1 = require(\"../parsers/ParserUtils\");\nvar ResourceDependency_1 = require(\"../parsers/ResourceDependency\");\nvar ImageUtils_1 = require(\"../utils/ImageUtils\");\nvar Timer_1 = require(\"../utils/Timer\");\nvar getTimer_1 = require(\"../utils/getTimer\");\n/**\n * <code>ParserBase</code> provides an abstract base export class for objects that convert blocks of data to data structures\n * supported by away.\n *\n * If used by <code>Loader</code> to automatically determine the parser type, two public static methods should\n * be implemented, with the following signatures:\n *\n * <code>public static supportsType(extension : string) : boolean</code>\n * Indicates whether or not a given file extension is supported by the parser.\n *\n * <code>public static supportsData(data : *) : boolean</code>\n * Tests whether a data block can be parsed by the parser.\n *\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\n * handle regardless of whether the object was loaded or not.\n *\n * @see Loader\n */\nvar ParserBase = (function (_super) {\n    __extends(ParserBase, _super);\n    /**\n     * Creates a new ParserBase object\n     * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\n     *\n     * @see away.loading.parsers.ParserDataFormat\n     */\n    function ParserBase(format) {\n        var _this = this;\n        _super.call(this);\n        this._materialMode = 0;\n        this._dataFormat = format;\n        this._dependencies = new Array();\n        this._pOnIntervalDelegate = function (event) { return _this._pOnInterval(event); };\n    }\n    //----------------------------------------------------------------------------------------------------------------------------------------------------------------\n    // TODO: add error checking for the following ( could cause a problem if this function is not implemented )\n    //----------------------------------------------------------------------------------------------------------------------------------------------------------------\n    // Needs to be implemented in all Parsers (\n    //<code>public static supportsType(extension : string) : boolean</code>\n    //* Indicates whether or not a given file extension is supported by the parser.\n    //----------------------------------------------------------------------------------------------------------------------------------------------------------------\n    ParserBase.supportsType = function (extension) {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    Object.defineProperty(ParserBase.prototype, \"content\", {\n        /* Protected */\n        get: function () {\n            return this._pContent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Validates a bitmapData loaded before assigning to a default BitmapMaterial\n     */\n    ParserBase.prototype.isBitmapImage2DValid = function (bitmapImage2D) {\n        var isValid = ImageUtils_1.ImageUtils.isImage2DValid(bitmapImage2D);\n        if (!isValid) {\n            console.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\n        }\n        return isValid;\n    };\n    Object.defineProperty(ParserBase.prototype, \"parsingFailure\", {\n        get: function () {\n            return this._parsingFailure;\n        },\n        set: function (b) {\n            this._parsingFailure = b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserBase.prototype, \"parsingPaused\", {\n        get: function () {\n            return this._parsingPaused;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserBase.prototype, \"parsingComplete\", {\n        get: function () {\n            return this._parsingComplete;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserBase.prototype, \"materialMode\", {\n        get: function () {\n            return this._materialMode;\n        },\n        set: function (newMaterialMode) {\n            this._materialMode = newMaterialMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserBase.prototype, \"data\", {\n        get: function () {\n            return this._data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserBase.prototype, \"dataFormat\", {\n        /**\n         * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\n         */\n        get: function () {\n            return this._dataFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\n     * the parser will periodically stop parsing so that the AVM may proceed to the\n     * next frame.\n     *\n     * @param data The untyped data object in which the loaded data resides.\n     * @param frameLimit number of milliseconds of parsing allowed per frame. The\n     * actual time spent on a frame can exceed this number since time-checks can\n     * only be performed between logical sections of the parsing procedure.\n     */\n    ParserBase.prototype.parseAsync = function (data, frameLimit) {\n        if (frameLimit === void 0) { frameLimit = 30; }\n        this._data = data;\n        this._pStartParsing(frameLimit);\n    };\n    Object.defineProperty(ParserBase.prototype, \"dependencies\", {\n        /**\n         * A list of dependencies that need to be loaded and resolved for the object being parsed.\n         */\n        get: function () {\n            return this._dependencies;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\n     * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\n     * dependency should be a member of the dependencies property.\n     *\n     * @param resourceDependency The dependency to be resolved.\n     */\n    ParserBase.prototype._iResolveDependency = function (resourceDependency) {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    /**\n     * Resolve a dependency loading failure. Used by parser to eventually provide a default map\n     *\n     * @param resourceDependency The dependency to be resolved.\n     */\n    ParserBase.prototype._iResolveDependencyFailure = function (resourceDependency) {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    /**\n     * Resolve a dependency name\n     *\n     * @param resourceDependency The dependency to be resolved.\n     */\n    ParserBase.prototype._iResolveDependencyName = function (resourceDependency, asset) {\n        return asset.name;\n    };\n    ParserBase.prototype._iResumeParsing = function () {\n        this._parsingPaused = false;\n        if (this._timer)\n            this._timer.start();\n        //get started!\n        if (!this._isParsing)\n            this._pOnInterval();\n    };\n    ParserBase.prototype._pFinalizeAsset = function (asset, name) {\n        if (name === void 0) { name = null; }\n        var type_event;\n        var type_name;\n        if (name != null)\n            asset.name = name;\n        // If the asset has no name, give it\n        // a per-type default name.\n        if (!asset.name)\n            asset.name = asset.assetType;\n        this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.ASSET_COMPLETE, asset));\n    };\n    /**\n     * Parse the next block of data.\n     * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\n     * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\n     */\n    ParserBase.prototype._pProceedParsing = function () {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    ParserBase.prototype._pDieWithError = function (message) {\n        if (message === void 0) { message = 'Unknown parsing error'; }\n        if (this._timer) {\n            this._timer.removeEventListener(TimerEvent_1.TimerEvent.TIMER, this._pOnIntervalDelegate);\n            this._timer.stop();\n            this._timer = null;\n        }\n        this.dispatchEvent(new ParserEvent_1.ParserEvent(ParserEvent_1.ParserEvent.PARSE_ERROR, message));\n    };\n    ParserBase.prototype._pAddDependency = function (id, req, retrieveAsRawData, data, suppressErrorEvents, sub_id) {\n        if (retrieveAsRawData === void 0) { retrieveAsRawData = false; }\n        if (data === void 0) { data = null; }\n        if (suppressErrorEvents === void 0) { suppressErrorEvents = false; }\n        if (sub_id === void 0) { sub_id = 0; }\n        var dependency = new ResourceDependency_1.ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents, sub_id);\n        this._dependencies.push(dependency);\n        return dependency;\n    };\n    ParserBase.prototype._pPauseAndRetrieveDependencies = function () {\n        this._pPauseParsing();\n        this.dispatchEvent(new ParserEvent_1.ParserEvent(ParserEvent_1.ParserEvent.READY_FOR_DEPENDENCIES));\n    };\n    ParserBase.prototype._pPauseParsing = function () {\n        if (this._timer)\n            this._timer.stop();\n        this._parsingPaused = true;\n    };\n    /**\n     * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\n     * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\n     */\n    ParserBase.prototype._pHasTime = function () {\n        return ((getTimer_1.getTimer() - this._lastFrameTime) < this._frameLimit);\n    };\n    /**\n     * Called when the parsing pause interval has passed and parsing can proceed.\n     */\n    ParserBase.prototype._pOnInterval = function (event) {\n        if (event === void 0) { event = null; }\n        this._lastFrameTime = getTimer_1.getTimer();\n        this._isParsing = true;\n        if (this._pProceedParsing() && !this._parsingFailure)\n            this._pFinishParsing();\n        this._isParsing = false;\n    };\n    /**\n     * Initializes the parsing of data.\n     * @param frameLimit The maximum duration of a parsing session.\n     */\n    ParserBase.prototype._pStartParsing = function (frameLimit) {\n        this._frameLimit = frameLimit;\n        this._timer = new Timer_1.Timer(this._frameLimit, 0);\n        this._timer.addEventListener(TimerEvent_1.TimerEvent.TIMER, this._pOnIntervalDelegate);\n        this._timer.start();\n        //get started!\n        this._pOnInterval();\n    };\n    /**\n     * Finish parsing the data.\n     */\n    ParserBase.prototype._pFinishParsing = function () {\n        if (this._timer) {\n            this._timer.removeEventListener(TimerEvent_1.TimerEvent.TIMER, this._pOnIntervalDelegate);\n            this._timer.stop();\n        }\n        this._timer = null;\n        this._parsingComplete = true;\n        this._isParsing = false;\n        this.dispatchEvent(new ParserEvent_1.ParserEvent(ParserEvent_1.ParserEvent.PARSE_COMPLETE));\n    };\n    /**\n     *\n     * @returns {string}\n     * @private\n     */\n    ParserBase.prototype._pGetTextData = function () {\n        return ParserUtils_1.ParserUtils.toString(this._data);\n    };\n    /**\n     *\n     * @returns {ByteArray}\n     * @private\n     */\n    ParserBase.prototype._pGetByteData = function () {\n        return ParserUtils_1.ParserUtils.toByteArray(this._data);\n    };\n    /**\n     *\n     * @returns {any}\n     * @private\n     */\n    ParserBase.prototype._pGetData = function () {\n        return this._data;\n    };\n    /**\n     * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\n     */\n    ParserBase.PARSING_DONE = true;\n    /* Protected */\n    /**\n     * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\n     */\n    ParserBase.MORE_TO_PARSE = false;\n    return ParserBase;\n}(EventDispatcher_1.EventDispatcher));\nexports.ParserBase = ParserBase;\n\n},{\"../errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"../events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"../events/ParserEvent\":\"awayjs-core/lib/events/ParserEvent\",\"../events/TimerEvent\":\"awayjs-core/lib/events/TimerEvent\",\"../parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\",\"../parsers/ResourceDependency\":\"awayjs-core/lib/parsers/ResourceDependency\",\"../utils/ImageUtils\":\"awayjs-core/lib/utils/ImageUtils\",\"../utils/Timer\":\"awayjs-core/lib/utils/Timer\",\"../utils/getTimer\":\"awayjs-core/lib/utils/getTimer\"}],\"awayjs-core/lib/parsers/ParserDataFormat\":[function(require,module,exports){\n\"use strict\";\n/**\n * An enumeration providing values to describe the data format of parsed data.\n */\nvar ParserDataFormat = (function () {\n    function ParserDataFormat() {\n    }\n    /**\n     * Describes the format of a binary file.\n     */\n    ParserDataFormat.BINARY = \"binary\";\n    /**\n     * Describes the format of a plain text file.\n     */\n    ParserDataFormat.PLAIN_TEXT = \"plainText\";\n    /**\n     * Describes the format of an image file\n     */\n    ParserDataFormat.IMAGE = \"image\";\n    return ParserDataFormat;\n}());\nexports.ParserDataFormat = ParserDataFormat;\n\n},{}],\"awayjs-core/lib/parsers/ParserUtils\":[function(require,module,exports){\n\"use strict\";\nvar BitmapImage2D_1 = require(\"../image/BitmapImage2D\");\nvar ByteArray_1 = require(\"../utils/ByteArray\");\nvar ParserUtils = (function () {\n    function ParserUtils() {\n    }\n    ParserUtils.arrayBufferToBase64 = function (data, mimeType) {\n        var byteStr = '';\n        var bytes = new Uint8Array(data);\n        var len = bytes.byteLength;\n        for (var i = 0; i < len; i++)\n            byteStr += String.fromCharCode(bytes[i]);\n        var base64Image = window.btoa(byteStr);\n        return 'data:' + mimeType + ';base64,' + base64Image;\n    };\n    ParserUtils.arrayBufferToAudio = function (data, fileType) {\n        var str = ParserUtils.arrayBufferToBase64(data, 'audio/' + fileType);\n        var audio = new Audio();\n        audio.src = str;\n        return audio;\n    };\n    /**\n     * Converts an ArrayBuffer to a base64 string\n     *\n     * @param image data as a ByteArray\n     *\n     * @return HTMLImageElement\n     *\n     */\n    ParserUtils.arrayBufferToImage = function (data) {\n        var str = ParserUtils.arrayBufferToBase64(data, 'image/png');\n        var img = new Image();\n        img.src = str;\n        return img;\n    };\n    /**\n     * Converts an ByteArray to an Image - returns an HTMLImageElement\n     *\n     * @param image data as a ByteArray\n     *\n     * @return HTMLImageElement\n     *\n     */\n    ParserUtils.byteArrayToImage = function (data) {\n        var str = ParserUtils.arrayBufferToBase64(data.arraybytes, 'image/png');\n        var img = new Image();\n        img.src = str;\n        return img;\n    };\n    ParserUtils.byteArrayToAudio = function (data, filetype) {\n        var str = ParserUtils.arrayBufferToBase64(data.arraybytes, 'audio/' + filetype);\n        var audio = new Audio();\n        audio.src = str;\n        return audio;\n    };\n    /**\n     * Converts an Blob to an Image - returns an HTMLImageElement\n     *\n     * @param image data as a Blob\n     *\n     * @return HTMLImageElement\n     *\n     */\n    ParserUtils.blobToImage = function (data) {\n        var URLObj = window['URL'] || window['webkitURL'];\n        var src = URLObj.createObjectURL(data);\n        var img = new Image();\n        img.src = src;\n        return img;\n    };\n    /**\n     * Converts an Blob to audio - returns an HTMLAudioElement\n     *\n     * @param audio data as a Blob\n     *\n     * @return HTMLAudioElement\n     *\n     */\n    ParserUtils.blobToAudio = function (data) {\n        var URLObj = window['URL'] || window['webkitURL'];\n        var src = URLObj.createObjectURL(data);\n        var img = new Audio();\n        img.src = src;\n        return img;\n    };\n    /**\n     *\n     */\n    ParserUtils.imageToBitmapImage2D = function (img, powerOfTwo) {\n        if (powerOfTwo === void 0) { powerOfTwo = true; }\n        var bitmapData = new BitmapImage2D_1.BitmapImage2D(img.width, img.height, true, null, powerOfTwo);\n        bitmapData.draw(img);\n        return bitmapData;\n    };\n    /**\n     * Returns a object as ByteArray, if possible.\n     *\n     * @param data The object to return as ByteArray\n     *\n     * @return The ByteArray or null\n     *\n     */\n    ParserUtils.toByteArray = function (data) {\n        var b = new ByteArray_1.ByteArray();\n        b.setArrayBuffer(data);\n        return b;\n    };\n    /**\n     * Returns a object as String, if possible.\n     *\n     * @param data The object to return as String\n     * @param length The length of the returned String\n     *\n     * @return The String or null\n     *\n     */\n    ParserUtils.toString = function (data, length) {\n        if (length === void 0) { length = 0; }\n        if (typeof data === 'string') {\n            var s = data;\n            if (s['substr'] != null)\n                return s.substr(0, s.length);\n        }\n        if (data instanceof ByteArray_1.ByteArray) {\n            var ba = data;\n            ba.position = 0;\n            return ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\n        }\n        return null;\n        /*\n         var ba:ByteArray;\n\n         length ||= uint.MAX_VALUE;\n\n         if (data is String)\n         return String(data).substr(0, length);\n\n         ba = toByteArray(data);\n         if (ba) {\n         ba.position = 0;\n         return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\n         }\n\n         return null;\n\n         */\n    };\n    return ParserUtils;\n}());\nexports.ParserUtils = ParserUtils;\n\n},{\"../image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\",\"../utils/ByteArray\":\"awayjs-core/lib/utils/ByteArray\"}],\"awayjs-core/lib/parsers/ResourceDependency\":[function(require,module,exports){\n\"use strict\";\n/**\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\n * required by a parser, used by ResourceLoadSession.\n *\n */\nvar ResourceDependency = (function () {\n    function ResourceDependency(id, request, data, parser, parentParser, retrieveAsRawData, suppressAssetEvents, sub_id) {\n        if (retrieveAsRawData === void 0) { retrieveAsRawData = false; }\n        if (suppressAssetEvents === void 0) { suppressAssetEvents = false; }\n        if (sub_id === void 0) { sub_id = 0; }\n        this._id = id;\n        this._sub_id = sub_id;\n        this._request = request;\n        this._data = data;\n        this._parser = parser;\n        this._parentParser = parentParser;\n        this._retrieveAsRawData = retrieveAsRawData;\n        this._suppressAssetEvents = suppressAssetEvents;\n        this._assets = new Array();\n        this._dependencies = new Array();\n    }\n    Object.defineProperty(ResourceDependency.prototype, \"id\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"sub_id\", {\n        get: function () {\n            return this._sub_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"request\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._request;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"data\", {\n        /**\n         * The data containing the dependency to be parsed, if the resource was already loaded.\n         */\n        get: function () {\n            return this._data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"parser\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._parser;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"parentParser\", {\n        /**\n         * The parser which is dependent on this ResourceDependency object.\n         */\n        get: function () {\n            return this._parentParser;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"retrieveAsRawData\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._retrieveAsRawData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"suppresAssetEvents\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._suppressAssetEvents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"assets\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._assets;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"dependencies\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._dependencies;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * Method to set data after having already created the dependency object, e.g. after load.\n     */\n    ResourceDependency.prototype._iSetData = function (data) {\n        this._data = data;\n    };\n    /**\n     * @private\n     *\n     */\n    ResourceDependency.prototype._iSetParser = function (parser) {\n        this._parser = parser;\n    };\n    /**\n     * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\n     * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\n     * to its intended parent. The dependency should be a member of the dependencies property.\n     */\n    ResourceDependency.prototype.resolve = function () {\n        if (this._parentParser)\n            this._parentParser._iResolveDependency(this);\n    };\n    /**\n     * Resolve a dependency failure. For example, map loading failure from a 3d file\n     */\n    ResourceDependency.prototype.resolveFailure = function () {\n        if (this._parentParser)\n            this._parentParser._iResolveDependencyFailure(this);\n    };\n    /**\n     * Resolve the dependencies name\n     */\n    ResourceDependency.prototype.resolveName = function (asset) {\n        if (this._parentParser)\n            return this._parentParser._iResolveDependencyName(this, asset);\n        return asset.name;\n    };\n    return ResourceDependency;\n}());\nexports.ResourceDependency = ResourceDependency;\n\n},{}],\"awayjs-core/lib/parsers/TextureAtlasParser\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Sampler2D_1 = require(\"../image/Sampler2D\");\nvar Rectangle_1 = require(\"../geom/Rectangle\");\nvar URLLoaderDataFormat_1 = require(\"../net/URLLoaderDataFormat\");\nvar URLRequest_1 = require(\"../net/URLRequest\");\nvar ParserBase_1 = require(\"../parsers/ParserBase\");\nvar ParserUtils_1 = require(\"../parsers/ParserUtils\");\nvar XmlUtils_1 = require(\"../utils/XmlUtils\");\n/**\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nvar TextureAtlasParser = (function (_super) {\n    __extends(TextureAtlasParser, _super);\n    /**\n     * Creates a new TextureAtlasParser object.\n     * @param uri The url or id of the data or file to be parsed.\n     * @param extra The holder for extra contextual data that the parser might need.\n     */\n    function TextureAtlasParser() {\n        _super.call(this, URLLoaderDataFormat_1.URLLoaderDataFormat.TEXT);\n        this._parseState = 0;\n    }\n    /**\n     * Indicates whether or not a given file extension is supported by the parser.\n     * @param extension The file extension of a potential file to be parsed.\n     * @return Whether or not the given file type is supported.\n     */\n    TextureAtlasParser.supportsType = function (extension) {\n        extension = extension.toLowerCase();\n        return extension == \"xml\";\n    };\n    /**\n     * Tests whether a data block can be parsed by the parser.\n     * @param data The data block to potentially be parsed.\n     * @return Whether or not the given data is supported.\n     */\n    TextureAtlasParser.supportsData = function (data) {\n        try {\n            var content = ParserUtils_1.ParserUtils.toString(data);\n            if (content.indexOf(\"TextureAtlas\") != -1 || content.indexOf(\"textureatlas\") != -1)\n                return true;\n            return false;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TextureAtlasParser.prototype._iResolveDependency = function (resourceDependency) {\n        if (resourceDependency.assets.length) {\n            this._imageData = resourceDependency.assets[0];\n            this._pFinalizeAsset(this._imageData);\n            this._parseState = TextureAtlasParserState.PARSE_SUBTEXTURES;\n        }\n        else {\n            this._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TextureAtlasParser.prototype._iResolveDependencyFailure = function (resourceDependency) {\n        this._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n    };\n    /**\n     * @inheritDoc\n     */\n    TextureAtlasParser.prototype._pProceedParsing = function () {\n        var nodes;\n        switch (this._parseState) {\n            case TextureAtlasParserState.PARSE_XML:\n                try {\n                    this._doc = XmlUtils_1.XmlUtils.getChildrenWithTag(XmlUtils_1.XmlUtils.strToXml(this._pGetTextData()), \"TextureAtlas\")[0];\n                    this._imagePath = XmlUtils_1.XmlUtils.readAttributeValue(this._doc, \"imagePath\");\n                    this._subTextureNodes = XmlUtils_1.XmlUtils.getChildrenWithTag(this._doc, \"SubTexture\");\n                    this._parseState = TextureAtlasParserState.PARSE_IMAGE;\n                }\n                catch (Error) {\n                    return ParserBase_1.ParserBase.PARSING_DONE;\n                }\n                break;\n            case TextureAtlasParserState.PARSE_IMAGE:\n                if (this._imagePath) {\n                    this._pAddDependency(this._imagePath, new URLRequest_1.URLRequest(this._imagePath));\n                    this._pPauseAndRetrieveDependencies();\n                }\n                else {\n                    return ParserBase_1.ParserBase.PARSING_DONE;\n                }\n                break;\n            case TextureAtlasParserState.PARSE_SUBTEXTURES:\n                var sampler;\n                var element;\n                var x;\n                var y;\n                var width;\n                var height;\n                var len = this._subTextureNodes.length;\n                for (var i = 0; i < len; i++) {\n                    element = this._subTextureNodes[i];\n                    sampler = new Sampler2D_1.Sampler2D();\n                    //setup subtexture rect\n                    x = XmlUtils_1.XmlUtils.readAttributeValue(element, \"x\");\n                    y = XmlUtils_1.XmlUtils.readAttributeValue(element, \"y\");\n                    width = XmlUtils_1.XmlUtils.readAttributeValue(element, \"width\");\n                    height = XmlUtils_1.XmlUtils.readAttributeValue(element, \"height\");\n                    if (x || y || width || height)\n                        sampler.imageRect = new Rectangle_1.Rectangle(parseInt(x) / this._imageData.width, parseInt(y) / this._imageData.height, parseInt(width) / this._imageData.width, parseInt(height) / this._imageData.height);\n                    //setup frame rect\n                    x = XmlUtils_1.XmlUtils.readAttributeValue(element, \"frameX\");\n                    y = XmlUtils_1.XmlUtils.readAttributeValue(element, \"frameY\");\n                    width = XmlUtils_1.XmlUtils.readAttributeValue(element, \"frameWidth\");\n                    height = XmlUtils_1.XmlUtils.readAttributeValue(element, \"frameHeight\");\n                    if (x || y || width || height)\n                        sampler.frameRect = new Rectangle_1.Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n                    this._pFinalizeAsset(sampler, XmlUtils_1.XmlUtils.readAttributeValue(element, \"name\"));\n                }\n                this._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n                break;\n            case TextureAtlasParserState.PARSE_COMPLETE:\n                return ParserBase_1.ParserBase.PARSING_DONE;\n        }\n        return ParserBase_1.ParserBase.MORE_TO_PARSE;\n    };\n    return TextureAtlasParser;\n}(ParserBase_1.ParserBase));\nexports.TextureAtlasParser = TextureAtlasParser;\nvar TextureAtlasParserState = (function () {\n    function TextureAtlasParserState() {\n    }\n    TextureAtlasParserState.PARSE_XML = 0;\n    TextureAtlasParserState.PARSE_IMAGE = 1;\n    TextureAtlasParserState.PARSE_SUBTEXTURES = 2;\n    TextureAtlasParserState.PARSE_COMPLETE = 3;\n    return TextureAtlasParserState;\n}());\nexports.TextureAtlasParserState = TextureAtlasParserState;\n\n},{\"../geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"../image/Sampler2D\":\"awayjs-core/lib/image/Sampler2D\",\"../net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"../net/URLRequest\":\"awayjs-core/lib/net/URLRequest\",\"../parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\",\"../parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\",\"../utils/XmlUtils\":\"awayjs-core/lib/utils/XmlUtils\"}],\"awayjs-core/lib/parsers/WaveAudioParser\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar WaveAudio_1 = require(\"../audio/WaveAudio\");\nvar URLLoaderDataFormat_1 = require(\"../net/URLLoaderDataFormat\");\nvar ParserBase_1 = require(\"../parsers/ParserBase\");\nvar ByteArray_1 = require(\"../utils/ByteArray\");\nvar WaveAudioParser = (function (_super) {\n    __extends(WaveAudioParser, _super);\n    function WaveAudioParser() {\n        _super.call(this, URLLoaderDataFormat_1.URLLoaderDataFormat.BLOB);\n    }\n    WaveAudioParser.supportsType = function (extension) {\n        extension = extension.toLowerCase();\n        return extension == \"wav\" || extension == \"mp3\" || extension == \"ogg\";\n    };\n    WaveAudioParser.supportsData = function (data) {\n        if (!(data instanceof ByteArray_1.ByteArray))\n            return false;\n        var ba = data;\n        var filetype = WaveAudioParser.parseFileType(ba);\n        return filetype ? true : false;\n    };\n    WaveAudioParser.prototype._pStartParsing = function (frameLimit) {\n        //clear content\n        delete this._pContent;\n        this._pContent = null;\n        _super.prototype._pStartParsing.call(this, frameLimit);\n    };\n    WaveAudioParser.prototype._pProceedParsing = function () {\n        if (this.data instanceof ByteArray_1.ByteArray) {\n            this._pContent = new WaveAudio_1.WaveAudio(this.data.arraybytes);\n            this._pFinalizeAsset(this._pContent, this._iFileName);\n        }\n        else if (this.data instanceof ArrayBuffer) {\n            this._pContent = new WaveAudio_1.WaveAudio(this.data);\n            this._pFinalizeAsset(this._pContent, this._iFileName);\n        }\n        return ParserBase_1.ParserBase.PARSING_DONE;\n    };\n    WaveAudioParser.parseFileType = function (ba) {\n        ba.position = 0;\n        ba.position = 0;\n        if ((ba.readUnsignedShort() & 0xFFE0) == 0xFFE0) {\n            return 'mp3'; // test for MP3 syncword\n        }\n        ba.position = 0;\n        if (ba.readUTFBytes(4) == 'RIFF')\n            return 'wav';\n        ba.position = 0;\n        if (ba.readUTFBytes(4) == 'OggS')\n            return 'ogg';\n        ba.position = 0;\n        return null;\n    };\n    return WaveAudioParser;\n}(ParserBase_1.ParserBase));\nexports.WaveAudioParser = WaveAudioParser;\n\n},{\"../audio/WaveAudio\":\"awayjs-core/lib/audio/WaveAudio\",\"../net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"../parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\",\"../utils/ByteArray\":\"awayjs-core/lib/utils/ByteArray\"}],\"awayjs-core/lib/parsers\":[function(require,module,exports){\n\"use strict\";\nvar Image2DParser_1 = require(\"./parsers/Image2DParser\");\nexports.Image2DParser = Image2DParser_1.Image2DParser;\nvar ImageCubeParser_1 = require(\"./parsers/ImageCubeParser\");\nexports.ImageCubeParser = ImageCubeParser_1.ImageCubeParser;\nvar ParserBase_1 = require(\"./parsers/ParserBase\");\nexports.ParserBase = ParserBase_1.ParserBase;\nvar ParserDataFormat_1 = require(\"./parsers/ParserDataFormat\");\nexports.ParserDataFormat = ParserDataFormat_1.ParserDataFormat;\nvar ParserUtils_1 = require(\"./parsers/ParserUtils\");\nexports.ParserUtils = ParserUtils_1.ParserUtils;\nvar ResourceDependency_1 = require(\"./parsers/ResourceDependency\");\nexports.ResourceDependency = ResourceDependency_1.ResourceDependency;\nvar TextureAtlasParser_1 = require(\"./parsers/TextureAtlasParser\");\nexports.TextureAtlasParser = TextureAtlasParser_1.TextureAtlasParser;\nvar WaveAudioParser_1 = require(\"./parsers/WaveAudioParser\");\nexports.WaveAudioParser = WaveAudioParser_1.WaveAudioParser;\n\n},{\"./parsers/Image2DParser\":\"awayjs-core/lib/parsers/Image2DParser\",\"./parsers/ImageCubeParser\":\"awayjs-core/lib/parsers/ImageCubeParser\",\"./parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\",\"./parsers/ParserDataFormat\":\"awayjs-core/lib/parsers/ParserDataFormat\",\"./parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\",\"./parsers/ResourceDependency\":\"awayjs-core/lib/parsers/ResourceDependency\",\"./parsers/TextureAtlasParser\":\"awayjs-core/lib/parsers/TextureAtlasParser\",\"./parsers/WaveAudioParser\":\"awayjs-core/lib/parsers/WaveAudioParser\"}],\"awayjs-core/lib/projections/CoordinateSystem\":[function(require,module,exports){\n\"use strict\";\n/**\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\n *\n * @see away.projections.PerspectiveLens#coordinateSystem\n */\nvar CoordinateSystem = (function () {\n    function CoordinateSystem() {\n    }\n    /**\n     * Default option, projects to a left-handed coordinate system\n     */\n    CoordinateSystem.LEFT_HANDED = \"leftHanded\";\n    /**\n     * Projects to a right-handed coordinate system\n     */\n    CoordinateSystem.RIGHT_HANDED = \"rightHanded\";\n    return CoordinateSystem;\n}());\nexports.CoordinateSystem = CoordinateSystem;\n\n},{}],\"awayjs-core/lib/projections/FreeMatrixProjection\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PerspectiveProjection_1 = require(\"../projections/PerspectiveProjection\");\nvar ProjectionBase_1 = require(\"../projections/ProjectionBase\");\nvar FreeMatrixProjection = (function (_super) {\n    __extends(FreeMatrixProjection, _super);\n    function FreeMatrixProjection() {\n        _super.call(this);\n        this._pMatrix.copyFrom(new PerspectiveProjection_1.PerspectiveProjection().matrix);\n    }\n    Object.defineProperty(FreeMatrixProjection.prototype, \"near\", {\n        //@override\n        set: function (value) {\n            this._pNear = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FreeMatrixProjection.prototype, \"far\", {\n        //@override\n        set: function (value) {\n            this._pFar = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FreeMatrixProjection.prototype, \"iAspectRatio\", {\n        //@override\n        set: function (value) {\n            this._pAspectRatio = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    FreeMatrixProjection.prototype.clone = function () {\n        var clone = new FreeMatrixProjection();\n        clone._pMatrix.copyFrom(this._pMatrix);\n        clone._pNear = this._pNear;\n        clone._pFar = this._pFar;\n        clone._pAspectRatio = this._pAspectRatio;\n        clone.pInvalidateMatrix();\n        return clone;\n    };\n    //@override\n    FreeMatrixProjection.prototype.pUpdateMatrix = function () {\n        this._pMatrixInvalid = false;\n    };\n    return FreeMatrixProjection;\n}(ProjectionBase_1.ProjectionBase));\nexports.FreeMatrixProjection = FreeMatrixProjection;\n\n},{\"../projections/PerspectiveProjection\":\"awayjs-core/lib/projections/PerspectiveProjection\",\"../projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/IProjection\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/projections/ObliqueNearPlaneProjection\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"../geom/Vector3D\");\nvar ProjectionEvent_1 = require(\"../events/ProjectionEvent\");\nvar ProjectionBase_1 = require(\"../projections/ProjectionBase\");\nvar ObliqueNearPlaneProjection = (function (_super) {\n    __extends(ObliqueNearPlaneProjection, _super);\n    function ObliqueNearPlaneProjection(baseProjection, plane) {\n        var _this = this;\n        _super.call(this);\n        this.baseProjection = baseProjection;\n        this.plane = plane;\n        this._onProjectionMatrixChangedDelegate = function (event) { return _this.onProjectionMatrixChanged(event); };\n    }\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"frustumCorners\", {\n        //@override\n        get: function () {\n            return this._baseProjection.frustumCorners;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"near\", {\n        //@override\n        get: function () {\n            return this._baseProjection.near;\n        },\n        //@override\n        set: function (value) {\n            this._baseProjection.near = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"far\", {\n        //@override\n        get: function () {\n            return this._baseProjection.far;\n        },\n        //@override\n        set: function (value) {\n            this._baseProjection.far = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"iAspectRatio\", {\n        //@override\n        get: function () {\n            return this._baseProjection._iAspectRatio;\n        },\n        //@override\n        set: function (value) {\n            this._baseProjection._iAspectRatio = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"plane\", {\n        get: function () {\n            return this._plane;\n        },\n        set: function (value) {\n            this._plane = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"baseProjection\", {\n        set: function (value) {\n            if (this._baseProjection) {\n                this._baseProjection.removeEventListener(ProjectionEvent_1.ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n            }\n            this._baseProjection = value;\n            if (this._baseProjection) {\n                this._baseProjection.addEventListener(ProjectionEvent_1.ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n            }\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ObliqueNearPlaneProjection.prototype.onProjectionMatrixChanged = function (event) {\n        this.pInvalidateMatrix();\n    };\n    //@override\n    ObliqueNearPlaneProjection.prototype.pUpdateMatrix = function () {\n        this._pMatrix.copyFrom(this._baseProjection.matrix);\n        var cx = this._plane.a;\n        var cy = this._plane.b;\n        var cz = this._plane.c;\n        var cw = -this._plane.d + .05;\n        var signX = cx >= 0 ? 1 : -1;\n        var signY = cy >= 0 ? 1 : -1;\n        var p = new Vector3D_1.Vector3D(signX, signY, 1, 1);\n        var inverse = this._pMatrix.clone();\n        inverse.invert();\n        var q = inverse.transformVector(p);\n        this._pMatrix.copyRowTo(3, p);\n        var a = (q.x * p.x + q.y * p.y + q.z * p.z + q.w * p.w) / (cx * q.x + cy * q.y + cz * q.z + cw * q.w);\n        this._pMatrix.copyRowFrom(2, new Vector3D_1.Vector3D(cx * a, cy * a, cz * a, cw * a));\n    };\n    return ObliqueNearPlaneProjection;\n}(ProjectionBase_1.ProjectionBase));\nexports.ObliqueNearPlaneProjection = ObliqueNearPlaneProjection;\n\n},{\"../events/ProjectionEvent\":\"awayjs-core/lib/events/ProjectionEvent\",\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\",\"../projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/OrthographicOffCenterProjection\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"../geom/Matrix3DUtils\");\nvar Vector3D_1 = require(\"../geom/Vector3D\");\nvar ProjectionBase_1 = require(\"../projections/ProjectionBase\");\nvar OrthographicOffCenterProjection = (function (_super) {\n    __extends(OrthographicOffCenterProjection, _super);\n    function OrthographicOffCenterProjection(minX, maxX, minY, maxY) {\n        _super.call(this);\n        this._minX = minX;\n        this._maxX = maxX;\n        this._minY = minY;\n        this._maxY = maxY;\n    }\n    Object.defineProperty(OrthographicOffCenterProjection.prototype, \"minX\", {\n        get: function () {\n            return this._minX;\n        },\n        set: function (value) {\n            this._minX = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OrthographicOffCenterProjection.prototype, \"maxX\", {\n        get: function () {\n            return this._maxX;\n        },\n        set: function (value) {\n            this._maxX = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OrthographicOffCenterProjection.prototype, \"minY\", {\n        get: function () {\n            return this._minY;\n        },\n        set: function (value) {\n            this._minY = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OrthographicOffCenterProjection.prototype, \"maxY\", {\n        get: function () {\n            return this._maxY;\n        },\n        set: function (value) {\n            this._maxY = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    OrthographicOffCenterProjection.prototype.unproject = function (nX, nY, sZ) {\n        var v = new Vector3D_1.Vector3D(nX, -nY, sZ, 1.0);\n        v = this.unprojectionMatrix.transformVector(v);\n        //z is unaffected by transform\n        v.z = sZ;\n        return v;\n    };\n    //@override\n    OrthographicOffCenterProjection.prototype.clone = function () {\n        var clone = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\n        clone._pNear = this._pNear;\n        clone._pFar = this._pFar;\n        clone._pAspectRatio = this._pAspectRatio;\n        return clone;\n    };\n    //@override\n    OrthographicOffCenterProjection.prototype.pUpdateMatrix = function () {\n        var raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\n        var w = 1 / (this._maxX - this._minX);\n        var h = 1 / (this._maxY - this._minY);\n        var d = 1 / (this._pFar - this._pNear);\n        raw[0] = 2 * w;\n        raw[5] = 2 * h;\n        raw[10] = d;\n        raw[12] = -(this._maxX + this._minX) * w;\n        raw[13] = -(this._maxY + this._minY) * h;\n        raw[14] = -this._pNear * d;\n        raw[15] = 1;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n        this._pMatrix.copyRawDataFrom(raw);\n        this._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\n        this._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\n        this._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\n        this._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\n        this._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n        this._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n        this._pMatrixInvalid = false;\n    };\n    return OrthographicOffCenterProjection;\n}(ProjectionBase_1.ProjectionBase));\nexports.OrthographicOffCenterProjection = OrthographicOffCenterProjection;\n\n},{\"../geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\",\"../projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/OrthographicProjection\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"../geom/Matrix3DUtils\");\nvar Vector3D_1 = require(\"../geom/Vector3D\");\nvar ProjectionBase_1 = require(\"../projections/ProjectionBase\");\nvar OrthographicProjection = (function (_super) {\n    __extends(OrthographicProjection, _super);\n    function OrthographicProjection(projectionHeight) {\n        if (projectionHeight === void 0) { projectionHeight = 500; }\n        _super.call(this);\n        this._projectionHeight = projectionHeight;\n    }\n    Object.defineProperty(OrthographicProjection.prototype, \"projectionHeight\", {\n        get: function () {\n            return this._projectionHeight;\n        },\n        set: function (value) {\n            if (value == this._projectionHeight) {\n                return;\n            }\n            this._projectionHeight = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    OrthographicProjection.prototype.unproject = function (nX, nY, sZ) {\n        var v = new Vector3D_1.Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\n        v = this.unprojectionMatrix.transformVector(v);\n        //z is unaffected by transform\n        v.z = sZ;\n        return v;\n    };\n    //@override\n    OrthographicProjection.prototype.clone = function () {\n        var clone = new OrthographicProjection();\n        clone._pNear = this._pNear;\n        clone._pFar = this._pFar;\n        clone._pAspectRatio = this._pAspectRatio;\n        clone.projectionHeight = this._projectionHeight;\n        return clone;\n    };\n    //@override\n    OrthographicProjection.prototype.pUpdateMatrix = function () {\n        var raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\n        this._yMax = this._projectionHeight * .5;\n        this._xMax = this._yMax * this._pAspectRatio;\n        var left;\n        var right;\n        var top;\n        var bottom;\n        if (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\n            // assume symmetric frustum\n            left = -this._xMax;\n            right = this._xMax;\n            top = -this._yMax;\n            bottom = this._yMax;\n            raw[0] = 2 / (this._projectionHeight * this._pAspectRatio);\n            raw[5] = 2 / this._projectionHeight;\n            raw[10] = 1 / (this._pFar - this._pNear);\n            raw[14] = this._pNear / (this._pNear - this._pFar);\n            raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\n            raw[15] = 1;\n        }\n        else {\n            var xWidth = this._xMax * (this._pViewPort.width / this._pScissorRect.width);\n            var yHgt = this._yMax * (this._pViewPort.height / this._pScissorRect.height);\n            var center = this._xMax * (this._pScissorRect.x * 2 - this._pViewPort.width) / this._pScissorRect.width + this._xMax;\n            var middle = -this._yMax * (this._pScissorRect.y * 2 - this._pViewPort.height) / this._pScissorRect.height - this._yMax;\n            left = center - xWidth;\n            right = center + xWidth;\n            top = middle - yHgt;\n            bottom = middle + yHgt;\n            raw[0] = 2 * 1 / (right - left);\n            raw[5] = -2 * 1 / (top - bottom);\n            raw[10] = 1 / (this._pFar - this._pNear);\n            raw[12] = (right + left) / (right - left);\n            raw[13] = (bottom + top) / (bottom - top);\n            raw[14] = this._pNear / (this.near - this.far);\n            raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n            raw[15] = 1;\n        }\n        this._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\n        this._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\n        this._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\n        this._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\n        this._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n        this._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n        this._pMatrix.copyRawDataFrom(raw);\n        this._pMatrixInvalid = false;\n    };\n    return OrthographicProjection;\n}(ProjectionBase_1.ProjectionBase));\nexports.OrthographicProjection = OrthographicProjection;\n\n},{\"../geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\",\"../projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/PerspectiveProjection\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"../geom/Matrix3DUtils\");\nvar Vector3D_1 = require(\"../geom/Vector3D\");\nvar CoordinateSystem_1 = require(\"../projections/CoordinateSystem\");\nvar ProjectionBase_1 = require(\"../projections/ProjectionBase\");\nvar PerspectiveProjection = (function (_super) {\n    __extends(PerspectiveProjection, _super);\n    function PerspectiveProjection(fieldOfView, coordinateSystem) {\n        if (fieldOfView === void 0) { fieldOfView = 60; }\n        if (coordinateSystem === void 0) { coordinateSystem = \"leftHanded\"; }\n        _super.call(this, coordinateSystem);\n        this._fieldOfView = 60;\n        this._focalLength = 1000;\n        this._hFieldOfView = 60;\n        this._hFocalLength = 1000;\n        this._preserveAspectRatio = true;\n        this._preserveFocalLength = false;\n        this.fieldOfView = fieldOfView;\n    }\n    Object.defineProperty(PerspectiveProjection.prototype, \"preserveAspectRatio\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._preserveAspectRatio;\n        },\n        set: function (value) {\n            if (this._preserveAspectRatio == value)\n                return;\n            this._preserveAspectRatio = value;\n            if (this._preserveAspectRatio)\n                this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PerspectiveProjection.prototype, \"preserveFocalLength\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._preserveFocalLength;\n        },\n        set: function (value) {\n            if (this._preserveFocalLength == value)\n                return;\n            this._preserveFocalLength = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PerspectiveProjection.prototype, \"fieldOfView\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._fieldOfView;\n        },\n        set: function (value) {\n            if (this._fieldOfView == value)\n                return;\n            this._fieldOfView = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PerspectiveProjection.prototype, \"focalLength\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._focalLength;\n        },\n        set: function (value) {\n            if (this._focalLength == value)\n                return;\n            this._focalLength = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PerspectiveProjection.prototype, \"hFieldOfView\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._hFieldOfView;\n        },\n        set: function (value) {\n            if (this._hFieldOfView == value)\n                return;\n            this._hFieldOfView = value;\n            this._hFocalLength = 1 / Math.tan(this._hFieldOfView * Math.PI / 360);\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PerspectiveProjection.prototype, \"hFocalLength\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._hFocalLength;\n        },\n        set: function (value) {\n            if (this._hFocalLength == value)\n                return;\n            this._hFocalLength = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    PerspectiveProjection.prototype.unproject = function (nX, nY, sZ) {\n        var v = new Vector3D_1.Vector3D(nX, -nY, sZ, 1.0);\n        v.x *= sZ;\n        v.y *= sZ;\n        v = this.unprojectionMatrix.transformVector(v);\n        //z is unaffected by transform\n        v.z = sZ;\n        return v;\n    };\n    //@override\n    PerspectiveProjection.prototype.clone = function () {\n        var clone = new PerspectiveProjection(this._fieldOfView);\n        clone._pNear = this._pNear;\n        clone._pFar = this._pFar;\n        clone._pAspectRatio = this._pAspectRatio;\n        clone._pCoordinateSystem = this._pCoordinateSystem;\n        return clone;\n    };\n    //@override\n    PerspectiveProjection.prototype.pUpdateMatrix = function () {\n        var raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\n        if (this._preserveFocalLength) {\n            if (this._preserveAspectRatio)\n                this._hFocalLength = this._focalLength;\n            this._fieldOfView = Math.atan(0.5 * this._pScissorRect.height / this._focalLength) * 360 / Math.PI;\n            this._hFieldOfView = Math.atan(0.5 * this._pScissorRect.width / this._hFocalLength) * 360 / Math.PI;\n        }\n        else {\n            this._focalLength = 0.5 * this._pScissorRect.height / Math.tan(this._fieldOfView * Math.PI / 360);\n            if (this._preserveAspectRatio)\n                this._hFocalLength = this._focalLength;\n            else\n                this._hFocalLength = 0.5 * this._pScissorRect.width / Math.tan(this._hFieldOfView * Math.PI / 360);\n        }\n        var tanMinX = -this._pOriginX / this._hFocalLength;\n        var tanMaxX = (1 - this._pOriginX) / this._hFocalLength;\n        var tanMinY = -this._pOriginY / this._focalLength;\n        var tanMaxY = (1 - this._pOriginY) / this._focalLength;\n        var left;\n        var right;\n        var top;\n        var bottom;\n        // assume scissored frustum\n        var center = -((tanMinX - tanMaxX) * this._pScissorRect.x + tanMinX * this._pScissorRect.width);\n        var middle = ((tanMinY - tanMaxY) * this._pScissorRect.y + tanMinY * this._pScissorRect.height);\n        left = center - (tanMaxX - tanMinX) * this._pViewPort.width;\n        right = center;\n        top = middle;\n        bottom = middle + (tanMaxY - tanMinY) * this._pViewPort.height;\n        raw[0] = 2 / (right - left);\n        raw[5] = 2 / (bottom - top);\n        raw[8] = (right + left) / (right - left);\n        raw[9] = (bottom + top) / (bottom - top);\n        raw[10] = (this._pFar + this._pNear) / (this._pFar - this._pNear);\n        raw[11] = 1;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\n        raw[14] = -2 * this._pFar * this._pNear / (this._pFar - this._pNear);\n        if (this._pCoordinateSystem == CoordinateSystem_1.CoordinateSystem.RIGHT_HANDED)\n            raw[5] = -raw[5];\n        this._pMatrix.copyRawDataFrom(raw);\n        this._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear * left;\n        this._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear * right;\n        this._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear * top;\n        this._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear * bottom;\n        this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar * left;\n        this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar * right;\n        this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar * top;\n        this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar * bottom;\n        this._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n        this._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n        this._pMatrixInvalid = false;\n    };\n    return PerspectiveProjection;\n}(ProjectionBase_1.ProjectionBase));\nexports.PerspectiveProjection = PerspectiveProjection;\n\n},{\"../geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"../geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\",\"../projections/CoordinateSystem\":\"awayjs-core/lib/projections/CoordinateSystem\",\"../projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/ProjectionBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"../geom/Matrix3D\");\nvar Rectangle_1 = require(\"../geom/Rectangle\");\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\nvar ProjectionEvent_1 = require(\"../events/ProjectionEvent\");\nvar AbstractMethodError_1 = require(\"../errors/AbstractMethodError\");\nvar ProjectionBase = (function (_super) {\n    __extends(ProjectionBase, _super);\n    function ProjectionBase(coordinateSystem) {\n        if (coordinateSystem === void 0) { coordinateSystem = \"leftHanded\"; }\n        _super.call(this);\n        this._pMatrix = new Matrix3D_1.Matrix3D();\n        this._pScissorRect = new Rectangle_1.Rectangle();\n        this._pViewPort = new Rectangle_1.Rectangle();\n        this._pNear = 20;\n        this._pFar = 3000;\n        this._pAspectRatio = 1;\n        this._pMatrixInvalid = true;\n        this._pFrustumCorners = [];\n        this._pOriginX = 0.5;\n        this._pOriginY = 0.5;\n        this._unprojectionInvalid = true;\n        this.coordinateSystem = coordinateSystem;\n    }\n    Object.defineProperty(ProjectionBase.prototype, \"coordinateSystem\", {\n        /**\n         * The handedness of the coordinate system projection. The default is LEFT_HANDED.\n         */\n        get: function () {\n            return this._pCoordinateSystem;\n        },\n        set: function (value) {\n            if (this._pCoordinateSystem == value)\n                return;\n            this._pCoordinateSystem = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProjectionBase.prototype, \"frustumCorners\", {\n        get: function () {\n            return this._pFrustumCorners;\n        },\n        set: function (frustumCorners) {\n            this._pFrustumCorners = frustumCorners;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProjectionBase.prototype, \"matrix\", {\n        get: function () {\n            if (this._pMatrixInvalid) {\n                this.pUpdateMatrix();\n                this._pMatrixInvalid = false;\n            }\n            return this._pMatrix;\n        },\n        set: function (value) {\n            this._pMatrix = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProjectionBase.prototype, \"near\", {\n        get: function () {\n            return this._pNear;\n        },\n        set: function (value) {\n            if (value == this._pNear) {\n                return;\n            }\n            this._pNear = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProjectionBase.prototype, \"originX\", {\n        get: function () {\n            return this._pOriginX;\n        },\n        set: function (value) {\n            if (this._pOriginX == value)\n                return;\n            this._pOriginX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProjectionBase.prototype, \"originY\", {\n        get: function () {\n            return this._pOriginY;\n        },\n        set: function (value) {\n            if (this._pOriginY == value)\n                return;\n            this._pOriginY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProjectionBase.prototype, \"far\", {\n        get: function () {\n            return this._pFar;\n        },\n        set: function (value) {\n            if (value == this._pFar) {\n                return;\n            }\n            this._pFar = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProjectionBase.prototype.project = function (point3d) {\n        var v = this.matrix.transformVector(point3d);\n        v.x = v.x / v.w;\n        v.y = -v.y / v.w;\n        //z is unaffected by transform\n        v.z = point3d.z;\n        return v;\n    };\n    Object.defineProperty(ProjectionBase.prototype, \"unprojectionMatrix\", {\n        get: function () {\n            if (this._unprojectionInvalid) {\n                if (!this._unprojection)\n                    this._unprojection = new Matrix3D_1.Matrix3D();\n                this._unprojection.copyFrom(this.matrix);\n                this._unprojection.invert();\n                this._unprojectionInvalid = false;\n            }\n            return this._unprojection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProjectionBase.prototype.unproject = function (nX, nY, sZ) {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    ProjectionBase.prototype.clone = function () {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    Object.defineProperty(ProjectionBase.prototype, \"_iAspectRatio\", {\n        get: function () {\n            return this._pAspectRatio;\n        },\n        set: function (value) {\n            if (this._pAspectRatio == value)\n                return;\n            this._pAspectRatio = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProjectionBase.prototype.pInvalidateMatrix = function () {\n        this._pMatrixInvalid = true;\n        this._unprojectionInvalid = true;\n        this.dispatchEvent(new ProjectionEvent_1.ProjectionEvent(ProjectionEvent_1.ProjectionEvent.MATRIX_CHANGED, this));\n    };\n    ProjectionBase.prototype.pUpdateMatrix = function () {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    ProjectionBase.prototype._iUpdateScissorRect = function (x, y, width, height) {\n        this._pScissorRect.x = x;\n        this._pScissorRect.y = y;\n        this._pScissorRect.width = width;\n        this._pScissorRect.height = height;\n        this.pInvalidateMatrix();\n    };\n    ProjectionBase.prototype._iUpdateViewport = function (x, y, width, height) {\n        this._pViewPort.x = x;\n        this._pViewPort.y = y;\n        this._pViewPort.width = width;\n        this._pViewPort.height = height;\n        this.pInvalidateMatrix();\n    };\n    return ProjectionBase;\n}(EventDispatcher_1.EventDispatcher));\nexports.ProjectionBase = ProjectionBase;\n\n},{\"../errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"../events/ProjectionEvent\":\"awayjs-core/lib/events/ProjectionEvent\",\"../geom/Matrix3D\":\"awayjs-core/lib/geom/Matrix3D\",\"../geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\"}],\"awayjs-core/lib/projections\":[function(require,module,exports){\n\"use strict\";\nvar CoordinateSystem_1 = require(\"./projections/CoordinateSystem\");\nexports.CoordinateSystem = CoordinateSystem_1.CoordinateSystem;\nvar FreeMatrixProjection_1 = require(\"./projections/FreeMatrixProjection\");\nexports.FreeMatrixProjection = FreeMatrixProjection_1.FreeMatrixProjection;\nvar ObliqueNearPlaneProjection_1 = require(\"./projections/ObliqueNearPlaneProjection\");\nexports.ObliqueNearPlaneProjection = ObliqueNearPlaneProjection_1.ObliqueNearPlaneProjection;\nvar OrthographicOffCenterProjection_1 = require(\"./projections/OrthographicOffCenterProjection\");\nexports.OrthographicOffCenterProjection = OrthographicOffCenterProjection_1.OrthographicOffCenterProjection;\nvar OrthographicProjection_1 = require(\"./projections/OrthographicProjection\");\nexports.OrthographicProjection = OrthographicProjection_1.OrthographicProjection;\nvar PerspectiveProjection_1 = require(\"./projections/PerspectiveProjection\");\nexports.PerspectiveProjection = PerspectiveProjection_1.PerspectiveProjection;\nvar ProjectionBase_1 = require(\"./projections/ProjectionBase\");\nexports.ProjectionBase = ProjectionBase_1.ProjectionBase;\n\n},{\"./projections/CoordinateSystem\":\"awayjs-core/lib/projections/CoordinateSystem\",\"./projections/FreeMatrixProjection\":\"awayjs-core/lib/projections/FreeMatrixProjection\",\"./projections/ObliqueNearPlaneProjection\":\"awayjs-core/lib/projections/ObliqueNearPlaneProjection\",\"./projections/OrthographicOffCenterProjection\":\"awayjs-core/lib/projections/OrthographicOffCenterProjection\",\"./projections/OrthographicProjection\":\"awayjs-core/lib/projections/OrthographicProjection\",\"./projections/PerspectiveProjection\":\"awayjs-core/lib/projections/PerspectiveProjection\",\"./projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/ui/Keyboard\":[function(require,module,exports){\n\"use strict\";\nvar Keyboard = (function () {\n    function Keyboard() {\n    }\n    /**\n     * Constant associated with the key code value for the A key (65).\n     */\n    Keyboard.A = 65;\n    /**\n     * Constant associated with the key code value for the Alternate (Option) key  (18).\n     */\n    Keyboard.ALTERNATE = 18;\n    /**\n     * Select the audio mode\n     */\n    Keyboard.AUDIO = 0x01000017;\n    /**\n     * Constant associated with the key code value for the B key (66).\n     */\n    Keyboard.B = 66;\n    /**\n     * Return to previous page in application\n     */\n    Keyboard.BACK = 0x01000016;\n    /**\n     * Constant associated with the key code value for the ` key (192).\n     */\n    Keyboard.BACKQUOTE = 192;\n    /**\n     * Constant associated with the key code value for the \\ key (220).\n     */\n    Keyboard.BACKSLASH = 220;\n    /**\n     * Constant associated with the key code value for the Backspace key (8).\n     */\n    Keyboard.BACKSPACE = 8;\n    /**\n     * Blue function key button\n     */\n    Keyboard.BLUE = 0x01000003;\n    /**\n     * Constant associated with the key code value for the C key (67).\n     */\n    Keyboard.C = 67;\n    /**\n     * Constant associated with the key code value for the Caps Lock key (20).\n     */\n    Keyboard.CAPS_LOCK = 20;\n    /**\n     * Channel down\n     */\n    Keyboard.CHANNEL_DOWN = 0x01000005;\n    /**\n     * Channel up\n     */\n    Keyboard.CHANNEL_UP = 0x01000005;\n    /**\n     * Constant associated with the key code value for the , key (188).\n     */\n    Keyboard.COMMA = 188;\n    /**\n     * Constant associated with the Mac command key (15). This constant is\n     * currently only used for setting menu key equivalents.\n     */\n    Keyboard.COMMAND = 15;\n    /**\n     * Constant associated with the key code value for the Control key (17).\n     */\n    Keyboard.CONTROL = 17;\n    /**\n     * Constant associated with the key code value for the D key (68).\n     */\n    Keyboard.D = 68;\n    /**\n     * Constant associated with the key code value for the Delete key (46).\n     */\n    Keyboard.DELETE = 46;\n    /**\n     * Constant associated with the key code value for the Down Arrow key (40).\n     */\n    Keyboard.DOWN = 40;\n    /**\n     * Engage DVR application mode\n     */\n    Keyboard.DVR = 0x01000019;\n    /**\n     * Constant associated with the key code value for the E key (69).\n     */\n    Keyboard.E = 69;\n    /**\n     * Constant associated with the key code value for the End key (35).\n     */\n    Keyboard.END = 35;\n    /**\n     * Constant associated with the key code value for the Enter key (13).\n     */\n    Keyboard.ENTER = 13;\n    /**\n     * Constant associated with the key code value for the = key (187).\n     */\n    Keyboard.EQUAL = 187;\n    /**\n     * Constant associated with the key code value for the Escape key (27).\n     */\n    Keyboard.ESCAPE = 27;\n    /**\n     * Exits current application mode\n     */\n    Keyboard.EXIT = 0x01000015;\n    /**\n     * Constant associated with the key code value for the F key (70).\n     */\n    Keyboard.F = 70;\n    /**\n     * Constant associated with the key code value for the F1 key (112).\n     */\n    Keyboard.F1 = 112;\n    /**\n     * Constant associated with the key code value for the F10 key (121).\n     */\n    Keyboard.F10 = 121;\n    /**\n     * Constant associated with the key code value for the F11 key (122).\n     */\n    Keyboard.F11 = 122;\n    /**\n     * Constant associated with the key code value for the F12 key (123).\n     */\n    Keyboard.F12 = 123;\n    /**\n     * Constant associated with the key code value for the F13 key (124).\n     */\n    Keyboard.F13 = 124;\n    /**\n     * Constant associated with the key code value for the F14 key (125).\n     */\n    Keyboard.F14 = 125;\n    /**\n     * Constant associated with the key code value for the F15 key (126).\n     */\n    Keyboard.F15 = 126;\n    /**\n     * Constant associated with the key code value for the F2 key (113).\n     */\n    Keyboard.F2 = 113;\n    /**\n     * Constant associated with the key code value for the F3 key (114).\n     */\n    Keyboard.F3 = 114;\n    /**\n     * Constant associated with the key code value for the F4 key (115).\n     */\n    Keyboard.F4 = 115;\n    /**\n     * Constant associated with the key code value for the F5 key (116).\n     */\n    Keyboard.F5 = 116;\n    /**\n     * Constant associated with the key code value for the F6 key (117).\n     */\n    Keyboard.F6 = 117;\n    /**\n     * Constant associated with the key code value for the F7 key (118).\n     */\n    Keyboard.F7 = 118;\n    /**\n     * Constant associated with the key code value for the F8 key (119).\n     */\n    Keyboard.F8 = 119;\n    /**\n     * Constant associated with the key code value for the F9 key (120).\n     */\n    Keyboard.F9 = 120;\n    /**\n     * Engage fast-forward transport mode\n     */\n    Keyboard.FAST_FORWARD = 0x0100000A;\n    /**\n     * Constant associated with the key code value for the G key (71).\n     */\n    Keyboard.G = 71;\n    /**\n     * Green function key button\n     */\n    Keyboard.GREEN = 0x01000001;\n    /**\n     * Engage program guide\n     */\n    Keyboard.GUIDE = 0x01000014;\n    /**\n     * Constant associated with the key code value for the H key (72).\n     */\n    Keyboard.H = 72;\n    /**\n     * Engage help application or context-sensitive help\n     */\n    Keyboard.HELP = 0x0100001D;\n    /**\n     * Constant associated with the key code value for the Home key (36).\n     */\n    Keyboard.HOME = 36;\n    /**\n     * Constant associated with the key code value for the I key (73).\n     */\n    Keyboard.I = 73;\n    /**\n     * Info button\n     */\n    Keyboard.INFO = 0x01000013;\n    /**\n     * Cycle input\n     */\n    Keyboard.INPUT = 0x0100001B;\n    /**\n     * Constant associated with the key code value for the Insert key (45).\n     */\n    Keyboard.INSERT = 45;\n    /**\n     * Constant associated with the key code value for the J key (74).\n     */\n    Keyboard.J = 74;\n    /**\n     * Constant associated with the key code value for the K key (75).\n     */\n    Keyboard.K = 75;\n    /**\n     * The Begin key\n     */\n    Keyboard.KEYNAME_BEGIN = \"Begin\";\n    /**\n     * The Break key\n     */\n    Keyboard.KEYNAME_BREAK = \"Break\";\n    /**\n     * The Clear Display key\n     */\n    Keyboard.KEYNAME_CLEARDISPLAY = \"ClrDsp\";\n    /**\n     * The Clear Line key\n     */\n    Keyboard.KEYNAME_CLEARLINE = \"ClrLn\";\n    /**\n     * The Delete key\n     */\n    Keyboard.KEYNAME_DELETE = \"Delete\";\n    /**\n     * The Delete Character key\n     */\n    Keyboard.KEYNAME_DELETECHAR = \"DelChr\";\n    /**\n     * The Delete Line key\n     */\n    Keyboard.KEYNAME_DELETELINE = \"DelLn\";\n    /**\n     * The down arrow\n     */\n    Keyboard.KEYNAME_DOWNARROW = \"Down\";\n    /**\n     * The End key\n     */\n    Keyboard.KEYNAME_END = \"End\";\n    /**\n     * The Execute key\n     */\n    Keyboard.KEYNAME_EXECUTE = \"Exec\";\n    /**\n     * The F1 key\n     */\n    Keyboard.KEYNAME_F1 = \"F1\";\n    /**\n     * The F10 key\n     */\n    Keyboard.KEYNAME_F10 = \"F10\";\n    /**\n     * The F11 key\n     */\n    Keyboard.KEYNAME_F11 = \"F11\";\n    /**\n     * The F12 key\n     */\n    Keyboard.KEYNAME_F12 = \"F12\";\n    /**\n     * The F13 key\n     */\n    Keyboard.KEYNAME_F13 = \"F13\";\n    /**\n     * The F14 key\n     */\n    Keyboard.KEYNAME_F14 = \"F14\";\n    /**\n     * The F15 key\n     */\n    Keyboard.KEYNAME_F15 = \"F15\";\n    /**\n     * The F16 key\n     */\n    Keyboard.KEYNAME_F16 = \"F16\";\n    /**\n     * The F17 key\n     */\n    Keyboard.KEYNAME_F17 = \"F17\";\n    /**\n     * The F18 key\n     */\n    Keyboard.KEYNAME_F18 = \"F18\";\n    /**\n     * The F19 key\n     */\n    Keyboard.KEYNAME_F19 = \"F19\";\n    /**\n     * The F2 key\n     */\n    Keyboard.KEYNAME_F2 = \"F2\";\n    /**\n     * The F20 key\n     */\n    Keyboard.KEYNAME_F20 = \"F20\";\n    /**\n     * The F21 key\n     */\n    Keyboard.KEYNAME_F21 = \"F21\";\n    /**\n     * The F22 key\n     */\n    Keyboard.KEYNAME_F22 = \"F22\";\n    /**\n     * The F23 key\n     */\n    Keyboard.KEYNAME_F23 = \"F23\";\n    /**\n     * The F24 key\n     */\n    Keyboard.KEYNAME_F24 = \"F24\";\n    /**\n     * The F25 key\n     */\n    Keyboard.KEYNAME_F25 = \"F25\";\n    /**\n     * The F26 key\n     */\n    Keyboard.KEYNAME_F26 = \"F26\";\n    /**\n     * The F27 key\n     */\n    Keyboard.KEYNAME_F27 = \"F27\";\n    /**\n     * The F28 key\n     */\n    Keyboard.KEYNAME_F28 = \"F28\";\n    /**\n     * The F29 key\n     */\n    Keyboard.KEYNAME_F29 = \"F29\";\n    /**\n     * The F3 key\n     */\n    Keyboard.KEYNAME_F3 = \"F3\";\n    /**\n     * The F30 key\n     */\n    Keyboard.KEYNAME_F30 = \"F30\";\n    /**\n     * The F31 key\n     */\n    Keyboard.KEYNAME_F31 = \"F31\";\n    /**\n     * The F32 key\n     */\n    Keyboard.KEYNAME_F32 = \"F32\";\n    /**\n     * The F33 key\n     */\n    Keyboard.KEYNAME_F33 = \"F33\";\n    /**\n     * The F34 key\n     */\n    Keyboard.KEYNAME_F34 = \"F34\";\n    /**\n     * The F35 key\n     */\n    Keyboard.KEYNAME_F35 = \"F35\";\n    /**\n     * The F4 key\n     */\n    Keyboard.KEYNAME_F4 = \"F4\";\n    /**\n     * The F5 key\n     */\n    Keyboard.KEYNAME_F5 = \"F5\";\n    /**\n     * The F6 key\n     */\n    Keyboard.KEYNAME_F6 = \"F6\";\n    /**\n     * The F7 key\n     */\n    Keyboard.KEYNAME_F7 = \"F7\";\n    /**\n     * The F8 key\n     */\n    Keyboard.KEYNAME_F8 = \"F8\";\n    /**\n     * The F9 key\n     */\n    Keyboard.KEYNAME_F9 = \"F9\";\n    /**\n     * The Find key\n     */\n    Keyboard.KEYNAME_FIND = \"Find\";\n    /**\n     * The Help key\n     */\n    Keyboard.KEYNAME_HELP = \"Help\";\n    /**\n     * The Home key\n     */\n    Keyboard.KEYNAME_HOME = \"Home\";\n    /**\n     * The Insert key\n     */\n    Keyboard.KEYNAME_INSERT = \"Insert\";\n    /**\n     * The Insert Character key\n     */\n    Keyboard.KEYNAME_INSERTCHAR = \"InsChr\";\n    /**\n     * The Insert Line key\n     */\n    Keyboard.KEYNAME_INSERTLINE = \"LnsLn\";\n    /**\n     * The left arrow\n     */\n    Keyboard.KEYNAME_LEFTARROW = \"Left\";\n    /**\n     * The Menu key\n     */\n    Keyboard.KEYNAME_MENU = \"Menu\";\n    /**\n     * The Mode Switch key\n     */\n    Keyboard.KEYNAME_MODESWITCH = \"ModeSw\";\n    /**\n     * The Next key\n     */\n    Keyboard.KEYNAME_NEXT = \"Next\";\n    /**\n     * The Page Down key\n     */\n    Keyboard.KEYNAME_PAGEDOWN = \"PgDn\";\n    /**\n     * The Page Up key\n     */\n    Keyboard.KEYNAME_PAGEUP = \"PgUp\";\n    /**\n     * The Pause key\n     */\n    Keyboard.KEYNAME_PAUSE = \"Pause\";\n    /**\n     * The Previous key\n     */\n    Keyboard.KEYNAME_PREV = \"Prev\";\n    /**\n     * The PRINT key\n     */\n    Keyboard.KEYNAME_PRINT = \"Print\";\n    /**\n     * The PRINT Screen\n     */\n    Keyboard.KEYNAME_PRINTSCREEN = \"PrntScrn\";\n    /**\n     * The Redo key\n     */\n    Keyboard.KEYNAME_REDO = \"Redo\";\n    /**\n     * The Reset key\n     */\n    Keyboard.KEYNAME_RESET = \"Reset\";\n    /**\n     * The right arrow\n     */\n    Keyboard.KEYNAME_RIGHTARROW = \"Right\";\n    /**\n     * The Scroll Lock key\n     */\n    Keyboard.KEYNAME_SCROLLLOCK = \"ScrlLck\";\n    /**\n     * The Select key\n     */\n    Keyboard.KEYNAME_SELECT = \"Select\";\n    /**\n     * The Stop key\n     */\n    Keyboard.KEYNAME_STOP = \"Stop\";\n    /**\n     * The System Request key\n     */\n    Keyboard.KEYNAME_SYSREQ = \"SysReq\";\n    /**\n     * The System key\n     */\n    Keyboard.KEYNAME_SYSTEM = \"Sys\";\n    /**\n     * The Undo key\n     */\n    Keyboard.KEYNAME_UNDO = \"Undo\";\n    /**\n     * The up arrow\n     */\n    Keyboard.KEYNAME_UPARROW = \"Up\";\n    /**\n     * The User key\n     */\n    Keyboard.KEYNAME_USER = \"User\";\n    /**\n     * Constant associated with the key code value for the L key (76).\n     */\n    Keyboard.L = 76;\n    /**\n     * Watch last channel or show watched\n     */\n    Keyboard.LAST = 0x01000011;\n    /**\n     * Constant associated with the key code value for the Left Arrow key (37).\n     */\n    Keyboard.LEFT = 37;\n    /**\n     * Constant associated with the key code value for the [ key (219).\n     */\n    Keyboard.LEFTBRACKET = 219;\n    /**\n     * Return to live [position in broadcast]\n     */\n    Keyboard.LIVE = 0x01000010;\n    /**\n     * Constant associated with the key code value for the M key (77).\n     */\n    Keyboard.M = 77;\n    /**\n     * Engage \"Master Shell\" e.g. TiVo or other vendor button\n     */\n    Keyboard.MASTER_SHELL = 0x0100001E;\n    /**\n     * Engage menu\n     */\n    Keyboard.MENU = 0x01000012;\n    /**\n     * Constant associated with the key code value for the - key (189).\n     */\n    Keyboard.MINUS = 189;\n    /**\n     * Constant associated with the key code value for the N key (78).\n     */\n    Keyboard.N = 78;\n    /**\n     * Skip to next track or chapter\n     */\n    Keyboard.NEXT = 0x0100000E;\n    /**\n     * Constant associated with the key code value for the 0 key (48).\n     */\n    Keyboard.NUMBER_0 = 48;\n    /**\n     * Constant associated with the key code value for the 1 key (49).\n     */\n    Keyboard.NUMBER_1 = 49;\n    /**\n     * Constant associated with the key code value for the 2 key (50).\n     */\n    Keyboard.NUMBER_2 = 50;\n    /**\n     * Constant associated with the key code value for the 3 key (51).\n     */\n    Keyboard.NUMBER_3 = 51;\n    /**\n     * Constant associated with the key code value for the 4 key (52).\n     */\n    Keyboard.NUMBER_4 = 52;\n    /**\n     * Constant associated with the key code value for the 5 key (53).\n     */\n    Keyboard.NUMBER_5 = 53;\n    /**\n     * Constant associated with the key code value for the 6 key (54).\n     */\n    Keyboard.NUMBER_6 = 54;\n    /**\n     * Constant associated with the key code value for the 7 key (55).\n     */\n    Keyboard.NUMBER_7 = 55;\n    /**\n     * Constant associated with the key code value for the 8 key (56).\n     */\n    Keyboard.NUMBER_8 = 56;\n    /**\n     * Constant associated with the key code value for the 9 key (57).\n     */\n    Keyboard.NUMBER_9 = 57;\n    /**\n     * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\n     */\n    Keyboard.NUMPAD = 21;\n    /**\n     * Constant associated with the key code value for the number 0 key on the number pad (96).\n     */\n    Keyboard.NUMPAD_0 = 96;\n    /**\n     * Constant associated with the key code value for the number 1 key on the number pad (97).\n     */\n    Keyboard.NUMPAD_1 = 97;\n    /**\n     * Constant associated with the key code value for the number 2 key on the number pad (98).\n     */\n    Keyboard.NUMPAD_2 = 98;\n    /**\n     * Constant associated with the key code value for the number 3 key on the number pad (99).\n     */\n    Keyboard.NUMPAD_3 = 99;\n    /**\n     * Constant associated with the key code value for the number 4 key on the number pad (100).\n     */\n    Keyboard.NUMPAD_4 = 100;\n    /**\n     * Constant associated with the key code value for the number 5 key on the number pad (101).\n     */\n    Keyboard.NUMPAD_5 = 101;\n    /**\n     * Constant associated with the key code value for the number 6 key on the number pad (102).\n     */\n    Keyboard.NUMPAD_6 = 102;\n    /**\n     * Constant associated with the key code value for the number 7 key on the number pad (103).\n     */\n    Keyboard.NUMPAD_7 = 103;\n    /**\n     * Constant associated with the key code value for the number 8 key on the number pad (104).\n     */\n    Keyboard.NUMPAD_8 = 104;\n    /**\n     * Constant associated with the key code value for the number 9 key on the number pad (105).\n     */\n    Keyboard.NUMPAD_9 = 105;\n    /**\n     * Constant associated with the key code value for the addition key on the number pad (107).\n     */\n    Keyboard.NUMPAD_ADD = 107;\n    /**\n     * Constant associated with the key code value for the decimal key on the number pad (110).\n     */\n    Keyboard.NUMPAD_DECIMAL = 110;\n    /**\n     * Constant associated with the key code value for the division key on the number pad (111).\n     */\n    Keyboard.NUMPAD_DIVIDE = 111;\n    /**\n     * Constant associated with the key code value for the Enter key on the number pad (108).\n     */\n    Keyboard.NUMPAD_ENTER = 108;\n    /**\n     * Constant associated with the key code value for the multiplication key on the number pad (106).\n     */\n    Keyboard.NUMPAD_MULTIPLY = 106;\n    /**\n     * Constant associated with the key code value for the subtraction key on the number pad (109).\n     */\n    Keyboard.NUMPAD_SUBTRACT = 109;\n    /**\n     * Constant associated with the key code value for the O key (79).\n     */\n    Keyboard.O = 79;\n    /**\n     * Constant associated with the key code value for the P key (80).\n     */\n    Keyboard.P = 80;\n    /**\n     * Constant associated with the key code value for the Page Down key (34).\n     */\n    Keyboard.PAGE_DOWN = 34;\n    /**\n     * Constant associated with the key code value for the Page Up key (33).\n     */\n    Keyboard.PAGE_UP = 33;\n    /**\n     * Engage pause transport mode\n     */\n    Keyboard.PAUSE = 0x01000008;\n    /**\n     * Constant associated with the key code value for the . key (190).\n     */\n    Keyboard.PERIOD = 190;\n    /**\n     * Engage play transport mode\n     */\n    Keyboard.PLAY = 0x01000007;\n    /**\n     * Skip to previous track or chapter\n     */\n    Keyboard.PREVIOUS = 0x0100000F;\n    /**\n     * Constant associated with the key code value for the Q key (81).\n     */\n    Keyboard.Q = 81;\n    /**\n     * Constant associated with the key code value for the ' key (222).\n     */\n    Keyboard.QUOTE = 222;\n    /**\n     * Constant associated with the key code value for the R key (82).\n     */\n    Keyboard.R = 82;\n    /**\n     * Record item or engage record transport mode\n     */\n    Keyboard.RECORD = 0x01000006;\n    /**\n     * Red function key button\n     */\n    Keyboard.RED = 0x01000000;\n    /**\n     * Engage rewind transport mode\n     */\n    Keyboard.REWIND = 0x0100000B;\n    /**\n     * Constant associated with the key code value for the Right Arrow key (39).\n     */\n    Keyboard.RIGHT = 39;\n    /**\n     * Constant associated with the key code value for the ] key (221).\n     */\n    Keyboard.RIGHTBRACKET = 221;\n    /**\n     * Constant associated with the key code value for the S key (83).\n     */\n    Keyboard.S = 83;\n    /**\n     * Search button\n     */\n    Keyboard.SEARCH = 0x0100001F;\n    /**\n     * Constant associated with the key code value for the ; key (186).\n     */\n    Keyboard.SEMICOLON = 186;\n    /**\n     * Engage setup application or menu\n     */\n    Keyboard.SETUP = 0x0100001C;\n    /**\n     * Constant associated with the key code value for the Shift key (16).\n     */\n    Keyboard.SHIFT = 16;\n    /**\n     * Quick skip backward (usually 7-10 seconds)\n     */\n    Keyboard.SKIP_BACKWARD = 0x0100000D;\n    /**\n     * Quick skip ahead (usually 30 seconds)\n     */\n    Keyboard.SKIP_FORWARD = 0x0100000C;\n    /**\n     * Constant associated with the key code value for the / key (191).\n     */\n    Keyboard.SLASH = 191;\n    /**\n     * Constant associated with the key code value for the Spacebar (32).\n     */\n    Keyboard.SPACE = 32;\n    /**\n     * Engage stop transport mode\n     */\n    Keyboard.STOP = 0x01000009;\n    /**\n     * Toggle subtitles\n     */\n    Keyboard.SUBTITLE = 0x01000018;\n    /**\n     * Constant associated with the key code value for the T key (84).\n     */\n    Keyboard.T = 84;\n    /**\n     * Constant associated with the key code value for the Tab key (9).\n     */\n    Keyboard.TAB = 9;\n    /**\n     * Constant associated with the key code value for the U key (85).\n     */\n    Keyboard.U = 85;\n    /**\n     * Constant associated with the key code value for the Up Arrow key (38).\n     */\n    Keyboard.UP = 38;\n    /**\n     * Constant associated with the key code value for the V key (86).\n     */\n    Keyboard.V = 86;\n    /**\n     * Engage video-on-demand\n     */\n    Keyboard.VOD = 0x0100001A;\n    /**\n     * Constant associated with the key code value for the W key (87).\n     */\n    Keyboard.W = 87;\n    /**\n     * Constant associated with the key code value for the X key (88).\n     */\n    Keyboard.X = 88;\n    /**\n     * Constant associated with the key code value for the Y key (89).\n     */\n    Keyboard.Y = 89;\n    /**\n     * Yellow function key button\n     */\n    Keyboard.YELLOW = 0x01000002;\n    /**\n     * Constant associated with the key code value for the Z key (90).\n     */\n    Keyboard.Z = 90;\n    return Keyboard;\n}());\nexports.Keyboard = Keyboard;\n\n},{}],\"awayjs-core/lib/ui\":[function(require,module,exports){\n\"use strict\";\nvar Keyboard_1 = require(\"./ui/Keyboard\");\nexports.Keyboard = Keyboard_1.Keyboard;\n\n},{\"./ui/Keyboard\":\"awayjs-core/lib/ui/Keyboard\"}],\"awayjs-core/lib/utils/BitmapImageUtils\":[function(require,module,exports){\n\"use strict\";\nvar ColorUtils_1 = require(\"../utils/ColorUtils\");\nvar BitmapImageUtils = (function () {\n    function BitmapImageUtils() {\n    }\n    BitmapImageUtils._fillRect = function (context, rect, color, transparent) {\n        if (color == 0x0 && transparent) {\n            context.clearRect(rect.x, rect.y, rect.width, rect.height);\n        }\n        else {\n            var argb = ColorUtils_1.ColorUtils.float32ColorToARGB(color);\n            if (transparent)\n                context.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0] / 255 + ')';\n            else\n                context.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\n            context.fillRect(rect.x, rect.y, rect.width, rect.height);\n        }\n    };\n    BitmapImageUtils._copyPixels = function (context, bmpd, sourceRect, destRect) {\n        context.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n    };\n    BitmapImageUtils._draw = function (context, source, matrix, colorTransform, blendMode, clipRect, smoothing) {\n        context.save();\n        if (matrix != null)\n            context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n        if (clipRect != null)\n            context.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\n        else\n            context.drawImage(source, 0, 0);\n        context.restore();\n    };\n    return BitmapImageUtils;\n}());\nexports.BitmapImageUtils = BitmapImageUtils;\n\n},{\"../utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\"}],\"awayjs-core/lib/utils/ByteArrayBase\":[function(require,module,exports){\n\"use strict\";\nvar AbstractMethodError_1 = require(\"../errors/AbstractMethodError\");\nvar ByteArrayBase = (function () {\n    function ByteArrayBase() {\n        this.position = 0;\n        this.length = 0;\n        this._mode = \"\";\n    }\n    ByteArrayBase.prototype.writeByte = function (b) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.readByte = function () {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.writeUnsignedByte = function (b) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.readUnsignedByte = function () {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.writeUnsignedShort = function (b) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.readUnsignedShort = function () {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.writeUnsignedInt = function (b) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.readUnsignedInt = function () {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.writeFloat = function (b) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.toFloatBits = function (x) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.readFloat = function (b) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.fromFloatBits = function (x) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.getBytesAvailable = function () {\n        throw new AbstractMethodError_1.AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\n    };\n    ByteArrayBase.prototype.toString = function () {\n        return \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\n    };\n    ByteArrayBase.prototype.compareEqual = function (other, count) {\n        if (count == undefined || count > this.length - this.position)\n            count = this.length - this.position;\n        if (count > other.length - other.position)\n            count = other.length - other.position;\n        var co0 = count;\n        var r = true;\n        while (r && count >= 4) {\n            count -= 4;\n            if (this.readUnsignedInt() != other.readUnsignedInt())\n                r = false;\n        }\n        while (r && count >= 1) {\n            count--;\n            if (this.readUnsignedByte() != other.readUnsignedByte())\n                r = false;\n        }\n        var c0;\n        this.position -= (c0 - count);\n        other.position -= (c0 - count);\n        return r;\n    };\n    ByteArrayBase.prototype.writeBase64String = function (s) {\n        for (var i = 0; i < s.length; i++) {\n            var v = s.charAt(i);\n        }\n    };\n    ByteArrayBase.prototype.dumpToConsole = function () {\n        var oldpos = this.position;\n        this.position = 0;\n        var nstep = 8;\n        function asHexString(x, digits) {\n            var lut = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n            var sh = \"\";\n            for (var d = 0; d < digits; d++) {\n                sh = lut[(x >> (d << 2)) & 0xf] + sh;\n            }\n            return sh;\n        }\n        for (var i = 0; i < this.length; i += nstep) {\n            var s = asHexString(i, 4) + \":\";\n            for (var j = 0; j < nstep && i + j < this.length; j++) {\n                s += \" \" + asHexString(this.readUnsignedByte(), 2);\n            }\n            console.log(s);\n        }\n        this.position = oldpos;\n    };\n    ByteArrayBase.prototype.readBase64String = function (count) {\n        if (count == undefined || count > this.length - this.position)\n            count = this.length - this.position;\n        if (!(count > 0))\n            return \"\";\n        return ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\n    };\n    ByteArrayBase.internalGetBase64String = function (count, getUnsignedByteFunc, self) {\n        var r = \"\";\n        var b0, b1, b2, enc1, enc2, enc3, enc4;\n        var base64Key = ByteArrayBase.Base64Key;\n        while (count >= 3) {\n            b0 = getUnsignedByteFunc.apply(self);\n            b1 = getUnsignedByteFunc.apply(self);\n            b2 = getUnsignedByteFunc.apply(self);\n            enc1 = b0 >> 2;\n            enc2 = ((b0 & 3) << 4) | (b1 >> 4);\n            enc3 = ((b1 & 15) << 2) | (b2 >> 6);\n            enc4 = b2 & 63;\n            r += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\n            count -= 3;\n        }\n        // pad\n        if (count == 2) {\n            b0 = getUnsignedByteFunc.apply(self);\n            b1 = getUnsignedByteFunc.apply(self);\n            enc1 = b0 >> 2;\n            enc2 = ((b0 & 3) << 4) | (b1 >> 4);\n            enc3 = ((b1 & 15) << 2);\n            r += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\n        }\n        else if (count == 1) {\n            b0 = getUnsignedByteFunc.apply(self);\n            enc1 = b0 >> 2;\n            enc2 = ((b0 & 3) << 4);\n            r += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\n        }\n        return r;\n    };\n    ByteArrayBase.Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    return ByteArrayBase;\n}());\nexports.ByteArrayBase = ByteArrayBase;\n\n},{\"../errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\"}],\"awayjs-core/lib/utils/ByteArrayBuffer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ByteArrayBase_1 = require(\"../utils/ByteArrayBase\");\nvar ByteArrayBuffer = (function (_super) {\n    __extends(ByteArrayBuffer, _super);\n    function ByteArrayBuffer() {\n        _super.call(this);\n        this._bytes = [];\n        this._mode = \"Array\";\n    }\n    ByteArrayBuffer.prototype.writeByte = function (b) {\n        var bi = ~~b;\n        this._bytes[this.position++] = bi;\n        if (this.position > this.length) {\n            this.length = this.position;\n        }\n    };\n    ByteArrayBuffer.prototype.readByte = function () {\n        if (this.position >= this.length) {\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n        }\n        return this._bytes[this.position++];\n    };\n    ByteArrayBuffer.prototype.writeUnsignedByte = function (b) {\n        var bi = ~~b;\n        this._bytes[this.position++] = bi & 0xff;\n        if (this.position > this.length) {\n            this.length = this.position;\n        }\n    };\n    ByteArrayBuffer.prototype.readUnsignedByte = function () {\n        if (this.position >= this.length) {\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n        }\n        return this._bytes[this.position++];\n    };\n    ByteArrayBuffer.prototype.writeUnsignedShort = function (b) {\n        var bi = ~~b;\n        this._bytes[this.position++] = bi & 0xff;\n        this._bytes[this.position++] = (bi >> 8) & 0xff;\n        if (this.position > this.length) {\n            this.length = this.position;\n        }\n    };\n    ByteArrayBuffer.prototype.readUnsignedShort = function () {\n        if (this.position + 2 > this.length)\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n        var r = this._bytes[this.position] | (this._bytes[this.position + 1] << 8);\n        this.position += 2;\n        return r;\n    };\n    ByteArrayBuffer.prototype.writeUnsignedInt = function (b) {\n        var bi = ~~b;\n        this._bytes[this.position++] = bi & 0xff;\n        this._bytes[this.position++] = (bi >>> 8) & 0xff;\n        this._bytes[this.position++] = (bi >>> 16) & 0xff;\n        this._bytes[this.position++] = (bi >>> 24) & 0xff;\n        if (this.position > this.length) {\n            this.length = this.position;\n        }\n    };\n    ByteArrayBuffer.prototype.readUnsignedInt = function () {\n        if (this.position + 4 > this.length) {\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n        }\n        var r = this._bytes[this.position] | (this._bytes[this.position + 1] << 8) | (this._bytes[this.position + 2] << 16) | (this._bytes[this.position + 3] << 24);\n        this.position += 4;\n        return r >>> 0;\n    };\n    ByteArrayBuffer.prototype.writeFloat = function (b) {\n        // this is crazy slow and silly, but as a fallback...\n        this.writeUnsignedInt(this.toFloatBits(Number(b)));\n    };\n    ByteArrayBuffer.prototype.toFloatBits = function (x) {\n        // don't handle inf/nan yet\n        // special case zero\n        if (x == 0) {\n            return 0;\n        }\n        // remove the sign, after this we only deal with positive numbers\n        var sign = 0;\n        if (x < 0) {\n            x = -x;\n            sign = 1;\n        }\n        else {\n            sign = 0;\n        }\n        // a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\n        var exponent = Math.log(x) / Math.log(2); // rough exponent\n        exponent = Math.floor(exponent);\n        x = x * Math.pow(2, 23 - exponent); // normalize to 24 bits\n        var mantissa = Math.floor(x) - 0x800000;\n        exponent = exponent + 127;\n        return ((sign << 31) >>> 0) | (exponent << 23) | mantissa;\n    };\n    ByteArrayBuffer.prototype.readFloat = function (b) {\n        return this.fromFloatBits(this.readUnsignedInt());\n    };\n    ByteArrayBuffer.prototype.fromFloatBits = function (x) {\n        if (x == 0) {\n            return 0;\n        }\n        var exponent = (x >>> 23) & 0xff;\n        var mantissa = (x & 0x7fffff) | 0x800000;\n        var y = Math.pow(2, (exponent - 127) - 23) * mantissa;\n        if (x >>> 31 != 0) {\n            y = -y;\n        }\n        return y;\n    };\n    return ByteArrayBuffer;\n}(ByteArrayBase_1.ByteArrayBase));\nexports.ByteArrayBuffer = ByteArrayBuffer;\n\n},{\"../utils/ByteArrayBase\":\"awayjs-core/lib/utils/ByteArrayBase\"}],\"awayjs-core/lib/utils/ByteArray\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ByteArrayBase_1 = require(\"../utils/ByteArrayBase\");\nvar ByteArray = (function (_super) {\n    __extends(ByteArray, _super);\n    function ByteArray(maxlength) {\n        if (maxlength === void 0) { maxlength = 4; }\n        _super.call(this);\n        this._mode = \"Typed array\";\n        this.maxlength = Math.max((maxlength + 255) & (~255), 4);\n        this.arraybytes = new ArrayBuffer(this.maxlength);\n        this.unalignedarraybytestemp = new ArrayBuffer(16);\n    }\n    ByteArray.prototype.ensureWriteableSpace = function (n) {\n        this.ensureSpace(n + this.position);\n    };\n    ByteArray.prototype.setArrayBuffer = function (aBuffer) {\n        this.ensureSpace(aBuffer.byteLength);\n        this.length = aBuffer.byteLength;\n        var inInt8AView = new Int8Array(aBuffer);\n        var localInt8View = new Int8Array(this.arraybytes, 0, this.length);\n        localInt8View.set(inInt8AView);\n        this.position = 0;\n    };\n    ByteArray.prototype.getBytesAvailable = function () {\n        return (this.length) - (this.position);\n    };\n    ByteArray.prototype.ensureSpace = function (n) {\n        if (n > this.maxlength) {\n            var newmaxlength = (n + 255) & (~255);\n            var newarraybuffer = new ArrayBuffer(newmaxlength);\n            var view = new Uint8Array(this.arraybytes, 0, this.length);\n            var newview = new Uint8Array(newarraybuffer, 0, this.length);\n            newview.set(view); // memcpy\n            this.arraybytes = newarraybuffer;\n            this.maxlength = newmaxlength;\n        }\n    };\n    ByteArray.prototype.writeByte = function (b) {\n        this.ensureWriteableSpace(1);\n        var view = new Int8Array(this.arraybytes);\n        view[this.position++] = (~~b); // ~~ is cast to int in js...\n        if (this.position > this.length) {\n            this.length = this.position;\n        }\n    };\n    ByteArray.prototype.readByte = function () {\n        if (this.position >= this.length)\n            throw \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n        var view = new Int8Array(this.arraybytes);\n        return view[this.position++];\n    };\n    ByteArray.prototype.readBytes = function (bytes, offset, length) {\n        if (offset === void 0) { offset = 0; }\n        if (length === void 0) { length = 0; }\n        if (length == null)\n            length = bytes.length;\n        bytes.ensureWriteableSpace(offset + length);\n        var byteView = new Int8Array(bytes.arraybytes);\n        var localByteView = new Int8Array(this.arraybytes);\n        byteView.set(localByteView.subarray(this.position, this.position + length), offset);\n        this.position += length;\n        if (length + offset > bytes.length)\n            bytes.length += (length + offset) - bytes.length;\n    };\n    ByteArray.prototype.writeUnsignedByte = function (b) {\n        this.ensureWriteableSpace(1);\n        var view = new Uint8Array(this.arraybytes);\n        view[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\n        if (this.position > this.length)\n            this.length = this.position;\n    };\n    ByteArray.prototype.readUnsignedByte = function () {\n        if (this.position >= this.length)\n            throw \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n        var view = new Uint8Array(this.arraybytes);\n        return view[this.position++];\n    };\n    ByteArray.prototype.writeUnsignedShort = function (b) {\n        this.ensureWriteableSpace(2);\n        if ((this.position & 1) == 0) {\n            var view = new Uint16Array(this.arraybytes);\n            view[this.position >> 1] = (~~b) & 0xffff; // ~~ is cast to int in js...\n        }\n        else {\n            var view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n            view[0] = (~~b) & 0xffff;\n            var view2 = new Uint8Array(this.arraybytes, this.position, 2);\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n            view2.set(view3);\n        }\n        this.position += 2;\n        if (this.position > this.length)\n            this.length = this.position;\n    };\n    ByteArray.prototype.readUTFBytes = function (len) {\n        var value = \"\";\n        var max = this.position + len;\n        var data = new DataView(this.arraybytes);\n        // utf8-encode\n        while (this.position < max) {\n            var c = data.getUint8(this.position++);\n            if (c < 0x80) {\n                if (c == 0)\n                    break;\n                value += String.fromCharCode(c);\n            }\n            else if (c < 0xE0) {\n                value += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\n            }\n            else if (c < 0xF0) {\n                var c2 = data.getUint8(this.position++);\n                value += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\n            }\n            else {\n                var c2 = data.getUint8(this.position++);\n                var c3 = data.getUint8(this.position++);\n                value += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\n            }\n        }\n        return value;\n    };\n    ByteArray.prototype.readInt = function () {\n        var data = new DataView(this.arraybytes);\n        var int = data.getInt32(this.position, true);\n        this.position += 4;\n        return int;\n    };\n    ByteArray.prototype.readShort = function () {\n        var data = new DataView(this.arraybytes);\n        var short = data.getInt16(this.position, true);\n        this.position += 2;\n        return short;\n    };\n    ByteArray.prototype.readDouble = function () {\n        var data = new DataView(this.arraybytes);\n        var double = data.getFloat64(this.position, true);\n        this.position += 8;\n        return double;\n    };\n    ByteArray.prototype.readUnsignedShort = function () {\n        if (this.position > this.length + 2)\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n        if ((this.position & 1) == 0) {\n            var view = new Uint16Array(this.arraybytes);\n            var pa = this.position >> 1;\n            this.position += 2;\n            return view[pa];\n        }\n        else {\n            var view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n            var view2 = new Uint8Array(this.arraybytes, this.position, 2);\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n            view3.set(view2);\n            this.position += 2;\n            return view[0];\n        }\n    };\n    ByteArray.prototype.writeUnsignedInt = function (b) {\n        this.ensureWriteableSpace(4);\n        if ((this.position & 3) == 0) {\n            var view = new Uint32Array(this.arraybytes);\n            view[this.position >> 2] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\n        }\n        else {\n            var view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n            view[0] = (~~b) & 0xffffffff;\n            var view2 = new Uint8Array(this.arraybytes, this.position, 4);\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n            view2.set(view3);\n        }\n        this.position += 4;\n        if (this.position > this.length)\n            this.length = this.position;\n    };\n    ByteArray.prototype.readUnsignedInt = function () {\n        if (this.position > this.length + 4)\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n        if ((this.position & 3) == 0) {\n            var view = new Uint32Array(this.arraybytes);\n            var pa = this.position >> 2;\n            this.position += 4;\n            return view[pa];\n        }\n        else {\n            var view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n            var view2 = new Uint8Array(this.arraybytes, this.position, 4);\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n            view3.set(view2);\n            this.position += 4;\n            return view[0];\n        }\n    };\n    ByteArray.prototype.writeFloat = function (b) {\n        this.ensureWriteableSpace(4);\n        if ((this.position & 3) == 0) {\n            var view = new Float32Array(this.arraybytes);\n            view[this.position >> 2] = b;\n        }\n        else {\n            var view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n            view[0] = b;\n            var view2 = new Uint8Array(this.arraybytes, this.position, 4);\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n            view2.set(view3);\n        }\n        this.position += 4;\n        if (this.position > this.length)\n            this.length = this.position;\n    };\n    ByteArray.prototype.readFloat = function () {\n        if (this.position > this.length + 4)\n            throw \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n        if ((this.position & 3) == 0) {\n            var view = new Float32Array(this.arraybytes);\n            var pa = this.position >> 2;\n            this.position += 4;\n            return view[pa];\n        }\n        else {\n            var view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n            var view2 = new Uint8Array(this.arraybytes, this.position, 4);\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n            view3.set(view2);\n            this.position += 4;\n            return view[0];\n        }\n    };\n    return ByteArray;\n}(ByteArrayBase_1.ByteArrayBase));\nexports.ByteArray = ByteArray;\n\n},{\"../utils/ByteArrayBase\":\"awayjs-core/lib/utils/ByteArrayBase\"}],\"awayjs-core/lib/utils/CSS\":[function(require,module,exports){\n\"use strict\";\nvar CSS = (function () {\n    function CSS() {\n    }\n    CSS.setElementSize = function (element, width, height) {\n        if (!element)\n            return;\n        element.style.width = width + \"px\";\n        element.style.height = height + \"px\";\n        element[\"width\"] = width;\n        element[\"height\"] = height;\n    };\n    CSS.setElementWidth = function (element, width) {\n        if (!element)\n            return;\n        element.style.width = width + \"px\";\n        element[\"width\"] = width;\n    };\n    CSS.setElementHeight = function (element, height) {\n        if (!element)\n            return;\n        element.style.height = height + \"px\";\n        element[\"height\"] = height;\n    };\n    CSS.setElementX = function (element, x) {\n        if (!element)\n            return;\n        element.style.position = 'absolute';\n        element.style.left = x + \"px\";\n    };\n    CSS.setElementY = function (element, y) {\n        if (!element)\n            return;\n        element.style.position = 'absolute';\n        element.style.top = y + \"px\";\n    };\n    CSS.getElementVisibility = function (element) {\n        if (!element)\n            return false;\n        return element.style.visibility == 'visible';\n    };\n    CSS.setElementVisibility = function (element, visible) {\n        if (!element)\n            return;\n        if (visible) {\n            element.style.visibility = 'visible';\n        }\n        else {\n            element.style.visibility = 'hidden';\n        }\n    };\n    CSS.setElementAlpha = function (element, alpha) {\n        if (element instanceof HTMLCanvasElement) {\n            var context = element.getContext(\"2d\");\n            context.globalAlpha = alpha;\n        }\n    };\n    CSS.setElementPosition = function (element, x, y, absolute) {\n        if (absolute === void 0) { absolute = false; }\n        if (!element)\n            return;\n        if (absolute) {\n            element.style.position = \"absolute\";\n        }\n        else {\n            element.style.position = \"relative\";\n        }\n        element.style.left = x + \"px\";\n        element.style.top = y + \"px\";\n    };\n    return CSS;\n}());\nexports.CSS = CSS;\n\n},{}],\"awayjs-core/lib/utils/ColorUtils\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar ColorUtils = (function () {\n    function ColorUtils() {\n    }\n    ColorUtils.float32ColorToARGB = function (float32Color) {\n        var a = (float32Color & 0xff000000) >>> 24;\n        var r = (float32Color & 0xff0000) >>> 16;\n        var g = (float32Color & 0xff00) >>> 8;\n        var b = float32Color & 0xff;\n        var result = [a, r, g, b];\n        return result;\n    };\n    ColorUtils.ARGBtoFloat32 = function (a, r, g, b) {\n        return ((a << 24) | (r << 16) | (g << 8) | b);\n    };\n    ColorUtils.componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? \"0\" + hex : hex;\n    };\n    ColorUtils.RGBToHexString = function (argb) {\n        return \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n    };\n    ColorUtils.ARGBToHexString = function (argb) {\n        return \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n    };\n    return ColorUtils;\n}());\nexports.ColorUtils = ColorUtils;\n\n},{}],\"awayjs-core/lib/utils/Debug\":[function(require,module,exports){\n\"use strict\";\nvar PartialImplementationError_1 = require(\"../errors/PartialImplementationError\");\n/**\n *\n */\nvar Debug = (function () {\n    function Debug() {\n    }\n    Debug.breakpoint = function () {\n        Debug['break']();\n    };\n    Debug.throwPIROnKeyWordOnly = function (str, enable) {\n        if (enable === void 0) { enable = true; }\n        if (!enable)\n            Debug.keyword = null;\n        else\n            Debug.keyword = str;\n    };\n    Debug.throwPIR = function (clss, fnc, msg) {\n        Debug.logPIR('PartialImplementationError ' + clss, fnc, msg);\n        if (Debug.THROW_ERRORS) {\n            if (Debug.keyword) {\n                var e = clss + fnc + msg;\n                if (e.indexOf(Debug.keyword) == -1)\n                    return;\n            }\n            throw new PartialImplementationError_1.PartialImplementationError(clss + '.' + fnc + ': ' + msg);\n        }\n    };\n    Debug.logPIR = function (clss, fnc, msg) {\n        if (msg === void 0) { msg = ''; }\n        if (Debug.LOG_PI_ERRORS)\n            console.log(clss + '.' + fnc + ': ' + msg);\n    };\n    Debug.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (Debug.ENABLE_LOG)\n            console.log(args);\n    };\n    Debug.THROW_ERRORS = true;\n    Debug.ENABLE_LOG = true;\n    Debug.LOG_PI_ERRORS = true;\n    Debug.keyword = null;\n    return Debug;\n}());\nexports.Debug = Debug;\n\n},{\"../errors/PartialImplementationError\":\"awayjs-core/lib/errors/PartialImplementationError\"}],\"awayjs-core/lib/utils/Extensions\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar Extensions = (function () {\n    function Extensions() {\n    }\n    Extensions.SIMD = Boolean(typeof (SIMD) !== \"undefined\");\n    return Extensions;\n}());\nexports.Extensions = Extensions;\n\n},{}],\"awayjs-core/lib/utils/IArrayBufferViewClass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/utils/ImageUtils\":[function(require,module,exports){\n\"use strict\";\nvar ImageUtils = (function () {\n    function ImageUtils() {\n    }\n    ImageUtils.isImage2DValid = function (image2D) {\n        if (image2D == null)\n            return true;\n        return ImageUtils.isDimensionValid(image2D.width, image2D.powerOfTwo) && ImageUtils.isDimensionValid(image2D.height, image2D.powerOfTwo);\n    };\n    ImageUtils.isHTMLImageElementValid = function (image) {\n        if (image == null)\n            return true;\n        return ImageUtils.isDimensionValid(image.width) && ImageUtils.isDimensionValid(image.height);\n    };\n    ImageUtils.isDimensionValid = function (d, powerOfTwo) {\n        if (powerOfTwo === void 0) { powerOfTwo = true; }\n        return d >= 1 && d <= ImageUtils.MAX_SIZE && (!powerOfTwo || ImageUtils.isPowerOfTwo(d));\n    };\n    ImageUtils.isPowerOfTwo = function (value) {\n        return value ? ((value & -value) == value) : false;\n    };\n    ImageUtils.getBestPowerOf2 = function (value) {\n        var p = 1;\n        while (p < value)\n            p <<= 1;\n        if (p > ImageUtils.MAX_SIZE)\n            p = ImageUtils.MAX_SIZE;\n        return p;\n    };\n    ImageUtils.MAX_SIZE = 2048;\n    return ImageUtils;\n}());\nexports.ImageUtils = ImageUtils;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ImageUtils;\n\n},{}],\"awayjs-core/lib/utils/MipmapGenerator\":[function(require,module,exports){\n\"use strict\";\nvar BitmapImage2D_1 = require(\"../image/BitmapImage2D\");\nvar Matrix_1 = require(\"../geom/Matrix\");\nvar Rectangle_1 = require(\"../geom/Rectangle\");\nvar MipmapGenerator = (function () {\n    function MipmapGenerator() {\n    }\n    MipmapGenerator._generateMipMaps = function (source, output, alpha) {\n        if (alpha === void 0) { alpha = false; }\n        var w = source.width;\n        var h = source.height;\n        var i = 0;\n        var mipmap;\n        MipmapGenerator._rect.width = w;\n        MipmapGenerator._rect.height = h;\n        //use (OR) to create non-square texture mipmaps\n        while (w >= 1 || h >= 1) {\n            mipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\n            if (alpha)\n                mipmap.fillRect(MipmapGenerator._rect, 0);\n            MipmapGenerator._matrix.a = MipmapGenerator._rect.width / source.width;\n            MipmapGenerator._matrix.d = MipmapGenerator._rect.height / source.height;\n            //todo: add support for NPOT textures\n            if (document) {\n                mipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\n            }\n            else {\n                if (source.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\n                    //for BitmapImage2D\n                    var bitmapImage = source;\n                    bitmapImage.lock();\n                    mipmap.lock();\n                    this.downsampleImage(bitmapImage.getImageData(), mipmap.getImageData());\n                    mipmap.unlock();\n                    bitmapImage.unlock();\n                }\n                else if (source.constructor.toString().indexOf(\"CPUCanvas\") > -1) {\n                    this.downsampleImage(source.getImageData(), mipmap.getImageData());\n                }\n                else {\n                    //for imageData\n                    this.downsampleImage(source, mipmap.getImageData());\n                }\n            }\n            w >>= 1;\n            h >>= 1;\n            MipmapGenerator._rect.width = w > 1 ? w : 1;\n            MipmapGenerator._rect.height = h > 1 ? h : 1;\n            i++;\n        }\n    };\n    MipmapGenerator._getMipmapHolder = function (mipMapHolder, newW, newH) {\n        if (mipMapHolder) {\n            if (mipMapHolder.width == newW && mipMapHolder.height == newH)\n                return mipMapHolder;\n            MipmapGenerator._freeMipMapHolder(mipMapHolder);\n        }\n        if (!MipmapGenerator._mipMaps[newW]) {\n            MipmapGenerator._mipMaps[newW] = [];\n            MipmapGenerator._mipMapUses[newW] = [];\n        }\n        if (!MipmapGenerator._mipMaps[newW][newH]) {\n            mipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapImage2D_1.BitmapImage2D(newW, newH, true);\n            MipmapGenerator._mipMapUses[newW][newH] = 1;\n        }\n        else {\n            MipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\n            mipMapHolder = MipmapGenerator._mipMaps[newW][newH];\n        }\n        return mipMapHolder;\n    };\n    MipmapGenerator._freeMipMapHolder = function (mipMapHolder) {\n        var holderWidth = mipMapHolder.width;\n        var holderHeight = mipMapHolder.height;\n        if (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\n            MipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\n            MipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\n        }\n    };\n    MipmapGenerator.downsampleImage = function (bitmap, destBitmap) {\n        var box = new BoxFilter();\n        var xkernel = new PolyphaseKernel(box, bitmap.width, destBitmap.width, 4);\n        var ykernel = new PolyphaseKernel(box, bitmap.height, destBitmap.height, 4);\n        var tempBitmap = []; //destBitmap.width, bitmap.height\n        var scale = 0;\n        var iscale = 0;\n        var kernelLength = 0;\n        var kernelWidth = 0;\n        var kernelWindowSize = 0;\n        var sumR = 0;\n        var sumG = 0;\n        var sumB = 0;\n        var sumA = 0;\n        var center;\n        var left;\n        var i = 0;\n        var j = 0;\n        var index = 0;\n        for (var y = 0; y < bitmap.height; y++) {\n            kernelLength = xkernel.len;\n            scale = kernelLength / bitmap.width;\n            iscale = 1.0 / scale;\n            kernelWidth = xkernel.width;\n            kernelWindowSize = xkernel.windowSize;\n            for (i = 0; i < kernelLength; i++) {\n                center = (0.5 + i) * iscale;\n                left = Math.floor(center - kernelWidth);\n                sumR = 0;\n                sumG = 0;\n                sumB = 0;\n                sumA = 0;\n                for (var j = 0; j < kernelWindowSize; ++j) {\n                    index = (y * bitmap.width + (left + j)) * 4;\n                    var colorR = bitmap.data[index];\n                    var colorG = bitmap.data[index + 1];\n                    var colorB = bitmap.data[index + 2];\n                    var colorA = bitmap.data[index + 3];\n                    var value = xkernel.valueAt(i, j);\n                    sumR += value * colorR;\n                    sumG += value * colorG;\n                    sumB += value * colorB;\n                    sumA += value * colorA;\n                }\n                index = (y * destBitmap.width + i) * 4;\n                tempBitmap[index] = sumR;\n                tempBitmap[index + 1] = sumG;\n                tempBitmap[index + 2] = sumB;\n                tempBitmap[index + 3] = sumA;\n            }\n        }\n        for (var x = 0; x < destBitmap.width; x++) {\n            kernelLength = ykernel.len;\n            scale = kernelLength / bitmap.height;\n            iscale = 1.0 / scale;\n            kernelWidth = ykernel.width;\n            kernelWindowSize = ykernel.windowSize;\n            for (i = 0; i < kernelLength; i++) {\n                center = (0.5 + i) * iscale;\n                left = Math.floor(center - kernelWidth);\n                sumR = 0;\n                sumG = 0;\n                sumB = 0;\n                sumA = 0;\n                for (j = 0; j < kernelWindowSize; ++j) {\n                    index = ((j + left) * destBitmap.width + x) * 4;\n                    var colorR = tempBitmap[index];\n                    var colorG = tempBitmap[index + 1];\n                    var colorB = tempBitmap[index + 2];\n                    var colorA = tempBitmap[index + 3];\n                    var value = ykernel.valueAt(i, j);\n                    sumR += value * colorR;\n                    sumG += value * colorG;\n                    sumB += value * colorB;\n                    sumA += value * colorA;\n                }\n                index = (i * destBitmap.width + x) * 4;\n                destBitmap.data[index] = sumR;\n                destBitmap.data[index + 1] = sumG;\n                destBitmap.data[index + 2] = sumB;\n                destBitmap.data[index + 3] = sumA;\n            }\n        }\n        return destBitmap;\n    };\n    MipmapGenerator._mipMaps = [];\n    MipmapGenerator._mipMapUses = [];\n    MipmapGenerator._matrix = new Matrix_1.Matrix();\n    MipmapGenerator._rect = new Rectangle_1.Rectangle();\n    return MipmapGenerator;\n}());\nexports.MipmapGenerator = MipmapGenerator;\nvar PolyphaseKernel = (function () {\n    function PolyphaseKernel(f, srcLength, dstLength, samples) {\n        var scale = dstLength / srcLength;\n        var iscale = 1.0 / scale;\n        if (scale > 1) {\n            // Upsampling.\n            samples = 1;\n            scale = 1;\n        }\n        this.len = dstLength;\n        this.width = f.width * iscale;\n        this.windowSize = Math.ceil(this.width * 2);\n        this.data = [];\n        for (var i = 0; i < this.len; i++) {\n            var center = (0.5 + i) * iscale;\n            var left = Math.floor(center - this.width);\n            var total = 0.0;\n            for (var j = 0; j < this.windowSize; j++) {\n                var sample = f.sampleBox(left + j - center, scale, samples);\n                //printf(\"%f %X\\n\", sample, *(uint32 *)&sample);\n                this.data[i * this.windowSize + j] = sample;\n                total += sample;\n            }\n            // normalize weights.\n            for (var j = 0; j < this.windowSize; j++) {\n                this.data[i * this.windowSize + j] /= total;\n            }\n        }\n    }\n    PolyphaseKernel.prototype.valueAt = function (column, x) {\n        return this.data[column * this.windowSize + x];\n    };\n    return PolyphaseKernel;\n}());\nexports.PolyphaseKernel = PolyphaseKernel;\nvar BoxFilter = (function () {\n    function BoxFilter() {\n    }\n    Object.defineProperty(BoxFilter.prototype, \"width\", {\n        get: function () {\n            return 0.5;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BoxFilter.prototype.sampleBox = function (x, scale, samples) {\n        var sum = 0;\n        var isamples = 1.0 / samples;\n        for (var s = 0; s < samples; s++) {\n            var p = (x + (s + 0.5) * isamples) * scale;\n            var value = this.evaluate(p);\n            sum += value;\n        }\n        return sum * isamples;\n    };\n    BoxFilter.prototype.evaluate = function (x) {\n        if (Math.abs(x) <= this.width)\n            return 1.0;\n        else\n            return 0.0;\n    };\n    return BoxFilter;\n}());\nexports.BoxFilter = BoxFilter;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = MipmapGenerator;\n\n},{\"../geom/Matrix\":\"awayjs-core/lib/geom/Matrix\",\"../geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"../image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\"}],\"awayjs-core/lib/utils/RequestAnimationFrame\":[function(require,module,exports){\n\"use strict\";\nvar getTimer_1 = require(\"../utils/getTimer\");\nvar RequestAnimationFrame = (function () {\n    function RequestAnimationFrame(callback, callbackContext) {\n        var _this = this;\n        this._active = false;\n        this._argsArray = new Array();\n        this._getTimer = getTimer_1.getTimer;\n        this.setCallback(callback, callbackContext);\n        this._rafUpdateFunction = function () {\n            if (_this._active)\n                _this._tick();\n        };\n        this._argsArray.push(this._dt);\n    }\n    // Public\n    /**\n     *\n     * @param callback\n     * @param callbackContext\n     */\n    RequestAnimationFrame.prototype.setCallback = function (callback, callbackContext) {\n        this._callback = callback;\n        this._callbackContext = callbackContext;\n    };\n    /**\n     *\n     */\n    RequestAnimationFrame.prototype.start = function () {\n        this._prevTime = this._getTimer();\n        this._active = true;\n        if (window) {\n            if (window.requestAnimationFrame) {\n                window.requestAnimationFrame(this._rafUpdateFunction);\n            }\n            else {\n                if (window['mozRequestAnimationFrame'])\n                    window.requestAnimationFrame = window['mozRequestAnimationFrame'];\n                else if (window['webkitRequestAnimationFrame'])\n                    window.requestAnimationFrame = window['webkitRequestAnimationFrame'];\n                else if (window['oRequestAnimationFrame'])\n                    window.requestAnimationFrame = window['oRequestAnimationFrame'];\n            }\n        }\n    };\n    /**\n     *\n     */\n    RequestAnimationFrame.prototype.stop = function () {\n        this._active = false;\n    };\n    Object.defineProperty(RequestAnimationFrame.prototype, \"active\", {\n        // Get / Set\n        /**\n         *\n         * @returns {boolean}\n         */\n        get: function () {\n            return this._active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Private\n    /**\n     *\n     * @private\n     */\n    RequestAnimationFrame.prototype._tick = function () {\n        this._currentTime = this._getTimer();\n        this._dt = this._currentTime - this._prevTime;\n        this._argsArray[0] = this._dt;\n        this._callback.apply(this._callbackContext, this._argsArray);\n        window.requestAnimationFrame(this._rafUpdateFunction);\n        this._prevTime = this._currentTime;\n    };\n    return RequestAnimationFrame;\n}());\nexports.RequestAnimationFrame = RequestAnimationFrame;\n\n},{\"../utils/getTimer\":\"awayjs-core/lib/utils/getTimer\"}],\"awayjs-core/lib/utils/Timer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"../errors/ErrorBase\");\nvar EventDispatcher_1 = require(\"../events/EventDispatcher\");\nvar TimerEvent_1 = require(\"../events/TimerEvent\");\nvar Timer = (function (_super) {\n    __extends(Timer, _super);\n    function Timer(delay, repeatCount) {\n        if (repeatCount === void 0) { repeatCount = 0; }\n        _super.call(this);\n        this._repeatCount = 0;\n        this._currentCount = 0;\n        this._running = false;\n        this._delay = delay;\n        this._repeatCount = repeatCount;\n        if (isNaN(delay) || delay < 0)\n            throw new ErrorBase_1.ErrorBase(\"Delay is negative or not a number\");\n    }\n    Object.defineProperty(Timer.prototype, \"currentCount\", {\n        get: function () {\n            return this._currentCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Timer.prototype, \"delay\", {\n        get: function () {\n            return this._delay;\n        },\n        set: function (value) {\n            this._delay = value;\n            if (this._running) {\n                this.stop();\n                this.start();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Timer.prototype, \"repeatCount\", {\n        get: function () {\n            return this._repeatCount;\n        },\n        set: function (value) {\n            this._repeatCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Timer.prototype.reset = function () {\n        if (this._running)\n            this.stop();\n        this._currentCount = 0;\n    };\n    Object.defineProperty(Timer.prototype, \"running\", {\n        get: function () {\n            return this._running;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Timer.prototype.start = function () {\n        var _this = this;\n        this._running = true;\n        clearInterval(this._iid);\n        this._iid = setInterval(function () { return _this.tick(); }, this._delay);\n    };\n    Timer.prototype.stop = function () {\n        this._running = false;\n        clearInterval(this._iid);\n    };\n    Timer.prototype.tick = function () {\n        this._currentCount++;\n        if ((this._repeatCount > 0) && this._currentCount >= this._repeatCount) {\n            this.stop();\n            this.dispatchEvent(new TimerEvent_1.TimerEvent(TimerEvent_1.TimerEvent.TIMER));\n            this.dispatchEvent(new TimerEvent_1.TimerEvent(TimerEvent_1.TimerEvent.TIMER_COMPLETE));\n        }\n        else {\n            this.dispatchEvent(new TimerEvent_1.TimerEvent(TimerEvent_1.TimerEvent.TIMER));\n        }\n    };\n    return Timer;\n}(EventDispatcher_1.EventDispatcher));\nexports.Timer = Timer;\n\n},{\"../errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\",\"../events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"../events/TimerEvent\":\"awayjs-core/lib/events/TimerEvent\"}],\"awayjs-core/lib/utils/XmlUtils\":[function(require,module,exports){\n\"use strict\";\nvar XmlUtils = (function () {\n    function XmlUtils() {\n    }\n    XmlUtils.getChildrenWithTag = function (node, tag) {\n        var fragment = document.createDocumentFragment();\n        if (node) {\n            var num = node.childNodes.length;\n            for (var i = 0; i < num; i++) {\n                var child = node.childNodes[i];\n                if (child != null) {\n                    if (child.nodeName == tag) {\n                        fragment.appendChild(child);\n                    }\n                }\n            }\n        }\n        return fragment.childNodes;\n    };\n    XmlUtils.filterListByParam = function (nodes, paramName, paramValue) {\n        var fragment = document.createDocumentFragment();\n        if (nodes) {\n            var num = nodes.length;\n            for (var i = 0; i < num; i++) {\n                var child = nodes[i];\n                if (child != null) {\n                    if (child.attributes.getNamedItem(paramName).value == paramValue) {\n                        fragment.appendChild(child);\n                    }\n                }\n            }\n        }\n        return fragment.childNodes;\n    };\n    XmlUtils.strToXml = function (str) {\n        var parser = new DOMParser();\n        var node = parser.parseFromString(str, \"text/xml\");\n        return node;\n    };\n    XmlUtils.nodeToString = function (node) {\n        if (!node)\n            return \"\";\n        var str = (new XMLSerializer()).serializeToString(node);\n        return str;\n    };\n    XmlUtils.readAttributeValue = function (node, attrName) {\n        var attrs = node.attributes;\n        if (attrs == undefined) {\n            return \"\";\n        }\n        var attribute = attrs.getNamedItem(attrName);\n        if (!attribute) {\n            //console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", attribute does not exist.\";\n            return \"\";\n        }\n        //console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", value: \" + attribute.value);\n        return attribute.value;\n    };\n    XmlUtils.writeAttributeValue = function (node, attrName, attrValue) {\n        var attribute = document.createAttribute(attrName);\n        attribute.value = attrValue;\n        attribute = node.attributes.setNamedItem(attribute);\n        console.log(\"XmlUltils - writeAttributeValue() - name: \" + attribute.name + \", value: \" + attribute.value);\n    };\n    XmlUtils.hasAttribute = function (node, attrName) {\n        var attrs = node.attributes;\n        if (attrs == undefined) {\n            return false;\n        }\n        var attribute = attrs.getNamedItem(attrName);\n        return attribute != null;\n    };\n    return XmlUtils;\n}());\nexports.XmlUtils = XmlUtils;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = XmlUtils;\n\n},{}],\"awayjs-core/lib/utils/getTimer\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n *\n * @returns {number}\n */\nfunction getTimer() {\n    // number milliseconds of 1970/01/01\n    // this different to AS3 implementation which gets the number of milliseconds\n    // since instance of Flash player was initialised\n    return Date.now();\n}\nexports.getTimer = getTimer;\n\n},{}],\"awayjs-core/lib/utils\":[function(require,module,exports){\n\"use strict\";\nvar BitmapImageUtils_1 = require(\"./utils/BitmapImageUtils\");\nexports.BitmapImageUtils = BitmapImageUtils_1.BitmapImageUtils;\nvar ByteArray_1 = require(\"./utils/ByteArray\");\nexports.ByteArray = ByteArray_1.ByteArray;\nvar ByteArrayBase_1 = require(\"./utils/ByteArrayBase\");\nexports.ByteArrayBase = ByteArrayBase_1.ByteArrayBase;\nvar ByteArrayBuffer_1 = require(\"./utils/ByteArrayBuffer\");\nexports.ByteArrayBuffer = ByteArrayBuffer_1.ByteArrayBuffer;\nvar ColorUtils_1 = require(\"./utils/ColorUtils\");\nexports.ColorUtils = ColorUtils_1.ColorUtils;\nvar CSS_1 = require(\"./utils/CSS\");\nexports.CSS = CSS_1.CSS;\nvar Debug_1 = require(\"./utils/Debug\");\nexports.Debug = Debug_1.Debug;\nvar Extensions_1 = require(\"./utils/Extensions\");\nexports.Extensions = Extensions_1.Extensions;\nvar getTimer_1 = require(\"./utils/getTimer\");\nexports.getTimer = getTimer_1.getTimer;\nvar ImageUtils_1 = require(\"./utils/ImageUtils\");\nexports.ImageUtils = ImageUtils_1.ImageUtils;\nvar MipmapGenerator_1 = require(\"./utils/MipmapGenerator\");\nexports.MipmapGenerator = MipmapGenerator_1.MipmapGenerator;\nvar RequestAnimationFrame_1 = require(\"./utils/RequestAnimationFrame\");\nexports.RequestAnimationFrame = RequestAnimationFrame_1.RequestAnimationFrame;\nvar Timer_1 = require(\"./utils/Timer\");\nexports.Timer = Timer_1.Timer;\nvar XmlUtils_1 = require(\"./utils/XmlUtils\");\nexports.XmlUtils = XmlUtils_1.XmlUtils;\n\n},{\"./utils/BitmapImageUtils\":\"awayjs-core/lib/utils/BitmapImageUtils\",\"./utils/ByteArray\":\"awayjs-core/lib/utils/ByteArray\",\"./utils/ByteArrayBase\":\"awayjs-core/lib/utils/ByteArrayBase\",\"./utils/ByteArrayBuffer\":\"awayjs-core/lib/utils/ByteArrayBuffer\",\"./utils/CSS\":\"awayjs-core/lib/utils/CSS\",\"./utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\",\"./utils/Debug\":\"awayjs-core/lib/utils/Debug\",\"./utils/Extensions\":\"awayjs-core/lib/utils/Extensions\",\"./utils/ImageUtils\":\"awayjs-core/lib/utils/ImageUtils\",\"./utils/MipmapGenerator\":\"awayjs-core/lib/utils/MipmapGenerator\",\"./utils/RequestAnimationFrame\":\"awayjs-core/lib/utils/RequestAnimationFrame\",\"./utils/Timer\":\"awayjs-core/lib/utils/Timer\",\"./utils/XmlUtils\":\"awayjs-core/lib/utils/XmlUtils\",\"./utils/getTimer\":\"awayjs-core/lib/utils/getTimer\"}]},{},[1])\n\n",
    "import * as attributes\t\t\t\tfrom \"./lib/attributes\";\nimport * as audio\t\t\t\t\tfrom \"./lib/audio\";\nimport * as errors\t\t\t\t\tfrom \"./lib/errors\";\nimport * as events\t\t\t\t\tfrom \"./lib/events\";\nimport * as geom\t\t\t\t\tfrom \"./lib/geom\";\nimport * as image\t\t\t\t\tfrom \"./lib/image\";\nimport * as library\t\t\t\t\tfrom \"./lib/library\";\nimport * as managers\t\t\t\tfrom \"./lib/managers\";\nimport * as net\t\t\t\t\t\tfrom \"./lib/net\";\nimport * as parsers\t\t\t\t\tfrom \"./lib/parsers\";\nimport * as projections\t\t\t\tfrom \"./lib/projections\";\nimport * as ui\t\t\t\t\t\tfrom \"./lib/ui\";\nimport * as utils\t\t\t\t\tfrom \"./lib/utils\";\n\nlibrary.Loader.enableParser(parsers.Image2DParser);\nlibrary.Loader.enableParser(parsers.ImageCubeParser);\nlibrary.Loader.enableParser(parsers.TextureAtlasParser);\nlibrary.Loader.enableParser(parsers.WaveAudioParser);\n\nexport {\n\tattributes,\n\taudio,\n\terrors,\n\tevents,\n\tgeom,\n\timage,\n\tlibrary,\n\tmanagers,\n\tnet,\n\tparsers,\n\tprojections,\n\tui,\n\tutils\n}",
    "import {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\nimport {AssetBase}\t\t\t\tfrom \"../library/AssetBase\";\n\nexport class AttributesBuffer extends AssetBase\n{\n\tpublic static assetType:string = \"[assets AttributesBuffer]\";\n\t\n\tprivate _count:number = 0;\n\tprivate _stride:number = 0;\n\tprivate _newStride:number = 0;\n\n\tprivate _buffer:ArrayBuffer;\n\tprivate _bufferView:Uint8Array;\n\tprivate _contentDirty:boolean;\n\tprivate _lengthDirty:boolean;\n\tprivate _viewVOs:Array<ViewVO> = new Array<ViewVO>();\n\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesBuffer.assetType;\n\t}\n\n\tpublic get stride():number\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\treturn this._stride;\n\t}\n\n\tpublic set stride(value:number)\n\t{\n\t\tif (this._newStride == value)\n\t\t\treturn;\n\n\t\tthis._newStride = value;\n\n\t\tthis.resize();\n\t}\n\t\n\tpublic get count():number\n\t{\n\t\treturn this._count;\n\t}\n\t\n\tpublic set count(value:number)\n\t{\n\t\tif (this._count == value)\n\t\t\treturn;\n\t\t\n\t\tthis._count = value;\n\t\t\n\t\tthis.resize();\n\t}\n\n\n\tpublic get buffer():ArrayBuffer\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._buffer;\n\t}\n\n\n\tpublic get bufferView():Uint8Array\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._bufferView;\n\t}\n\n\tpublic set bufferView(value:Uint8Array)\n\t{\n\t\tthis._bufferView = value;\n\t\tthis._buffer = this._bufferView.buffer;\n\t}\n\n\tpublic get length():number\n\t{\n\t\treturn this._count*this.stride;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tconstructor(stride:number = 0, count:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._stride = this._newStride = stride;\n\t\tthis._count = count;\n\n\t\tthis._buffer = new ArrayBuffer(this._stride*this._count);\n\t\tthis._bufferView = new Uint8Array(this._buffer, 0, this._buffer.byteLength);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tif (this._contentDirty)\n\t\t\treturn;\n\n\t\tsuper.invalidate();\n\n\t\tthis._contentDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic resize():void\n\t{\n\t\tif (this._lengthDirty)\n\t\t\treturn;\n\n\t\tthis.clear();\n\n\t\tthis._lengthDirty = true;\n\n\t\t//dispose buffer if stride is 0\n\t\tif (!this._newStride) {\n\t\t\tthis._buffer = null;\n\t\t\tthis._bufferView = null;\n\t\t}\n\t}\n\n\tpublic clone():AttributesBuffer\n\t{\n\t\tvar attributesBuffer:AttributesBuffer = new AttributesBuffer(this._stride, this._count);\n\t\tattributesBuffer.bufferView = new Uint8Array(this.bufferView.buffer);\n\n\t\tvar len:number = this._viewVOs.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._viewVOs[i].view._internalClone(attributesBuffer);\n\n\t\treturn attributesBuffer;\n\t}\n\n\tpublic getView(index:number):AttributesView\n\t{\n\t\tif (index < this._viewVOs.length)\n\t\t\treturn this._viewVOs[index].view;\n\n\t\treturn null;\n\t}\n\n\tpublic _setAttributes(viewIndex:number, arrayBufferView:ArrayBufferView, offset:number = 0):void\n\t{\n\t\tvar array:Uint8Array = (arrayBufferView instanceof Uint8Array)? <Uint8Array> arrayBufferView : new Uint8Array(arrayBufferView.buffer);\n\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\t\tvar vCount:number = array.length/vLength;\n\n\t\t//make sure there is enough space in the buffer\n\t\tif (this.count < vCount + offset)\n\t\t\tthis.count = vCount + offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1) {\n\t\t\tthis._bufferView.set(array);\n\t\t} else {\n\t\t\tfor (var i:number = 0; i < vCount; i++)\n\t\t\t\tthis._bufferView.set(array.subarray(i*vLength, (i+1)*vLength), (i+offset)*this._stride + vOffset);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic _getLocalArrayBuffer(viewIndex:number):ArrayBuffer\n\t{\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1)\n\t\t\treturn this._buffer;\n\n\t\tvar localBuffer:ArrayBuffer = new ArrayBuffer(this._count*vLength);\n\t\tvar localBufferView:Uint8Array = new Uint8Array(localBuffer);\n\n\t\tfor (var i:number = 0; i < this._count; i++)\n\t\t\tlocalBufferView.set(this._bufferView.subarray(i*this._stride + vOffset, i*this._stride + vOffset + vLength), i*vLength);\n\n\t\treturn localBuffer;\n\t}\n\n\tpublic _addView(view:AttributesView):void\n\t{\n\t\tvar viewVO:ViewVO = new ViewVO(view);\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.offset = len? this._viewVOs[len - 1].offset + this._viewVOs[len - 1].length : 0;\n\n\t\tthis._viewVOs.push(viewVO);\n\n\t\tif (this._newStride < viewVO.offset + viewVO.length) {\n\t\t\tthis._newStride = viewVO.offset + viewVO.length;\n\t\t\tthis.resize();\n\t\t}\n\n\t\tview._index = len;\n\t}\n\n\tpublic _removeView(view:AttributesView):void\n\t{\n\t\tvar viewIndex:number = view._index;\n\t\tvar viewVO:ViewVO = this._viewVOs.splice(viewIndex, 1)[0];\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.dispose();\n\n\t\tfor (var i:number = viewIndex; i < len; i++) {\n\t\t\tviewVO = this._viewVOs[i];\n\t\t\tviewVO.offset = i? this._viewVOs[i - 1].offset + this._viewVOs[i - 1].length : 0;\n\t\t\tviewVO.view._index = i;\n\t\t}\n\n\t\tthis._newStride = viewVO.offset + viewVO.length;\n\n\t\tthis.resize();\n\t}\n\n\tpublic _getOffset(viewIndex:number):number\n\t{\n\t\treturn this._viewVOs[viewIndex].offset;\n\t}\n\n\tpublic _updateLength():void\n\t{\n\t\tthis._lengthDirty = false;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tvar newLength:number = this._newStride*this._count;\n\n\t\tif (!this._buffer || this._buffer.byteLength != newLength) {\n\t\t\tvar newBuffer:ArrayBuffer = new ArrayBuffer(newLength);\n\t\t\tvar newView:Uint8Array = new Uint8Array(newBuffer, 0, newBuffer.byteLength);\n\t\t\tvar viewVO:ViewVO;\n\t\t\tvar vLength:number;\n\t\t\tvar vOffset:number;\n\t\t\tvar vOldOffset:number;\n\n\t\t\tif (this._stride != this._newStride) {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tviewVO = this._viewVOs[i];\n\t\t\t\t\tvLength = viewVO.length;\n\t\t\t\t\tvOffset = viewVO.offset;\n\t\t\t\t\tvOldOffset = viewVO.oldOffset;\n\t\t\t\t\tfor (j = 0; j < this._count; j++)\n\t\t\t\t\t\tif (vOldOffset != null)\n\t\t\t\t\t\t\tnewView.set(new Uint8Array(this._buffer, j*this._stride + vOldOffset, vLength), j*this._newStride + vOffset);\n\n\t\t\t\t\tviewVO.oldOffset = viewVO.offset;\n\t\t\t\t}\n\n\t\t\t\tthis._stride = this._newStride;\n\t\t\t} else {\n\t\t\t\tnewView.set(new Uint8Array(this._buffer, 0, Math.min(newLength, this._buffer.byteLength))); //TODO: bypass quantisation of bytearray on instantiation\n\t\t\t}\n\n\t\t\tthis._buffer = newBuffer;\n\t\t\tthis._bufferView = newView;\n\t\t}\n\t}\n}\n\nclass ViewVO\n{\n\tpublic view:AttributesView;\n\n\tpublic length;\n\n\tpublic offset;\n\n\tpublic oldOffset;\n\n\tconstructor(view:AttributesView)\n\t{\n\t\tthis.view = view;\n\t\tthis.length = view.size*view.dimensions;\n\t}\n\n\tpublic dispose():void\n\t{\n\t\tthis.view = null;\n\t}\n\n\tpublic clone():ViewVO\n\t{\n\t\treturn new ViewVO(this.view);\n\t}\n}",
    "import {AttributesBuffer}\t\tfrom \"../attributes/AttributesBuffer\";\nimport {AssetBase}\t\t\t\tfrom \"../library/AssetBase\";\nimport {IArrayBufferViewClass}\tfrom \"../utils/IArrayBufferViewClass\";\n\nexport class AttributesView extends AssetBase\n{\n\tpublic static assetType:string = \"[attributes AttributesView]\";\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesView.assetType;\n\t}\n\n\tpublic _cloneCache:AttributesView;\n\tpublic _attributesBuffer:AttributesBuffer;\n\tpublic _bufferDirty:boolean;\n\tprivate _size:number;\n\tprivate _dimensions:number;\n\tprivate _unsigned:boolean;\n\n\tpublic _index:number;\n\tpublic _arrayClass:IArrayBufferViewClass;\n\n\tpublic _localArrayBuffer:ArrayBuffer;\n\n\tpublic normalized:boolean;\n\n\tpublic get buffer():AttributesBuffer\n\t{\n\t\treturn this._attributesBuffer;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._size = value;\n\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get dimensions():number\n\t{\n\t\treturn this._dimensions;\n\t}\n\n\tpublic set dimensions(value:number)\n\t{\n\t\tif (this._dimensions == value)\n\t\t\treturn;\n\n\t\tthis._dimensions = value;\n\n\t\t//reset view\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\tpublic get unsigned():boolean\n\t{\n\t\treturn this._unsigned;\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this._attributesBuffer.count;\n\t}\n\n\tpublic set count(value:number)\n\t{\n\t\tthis._attributesBuffer.count = value;\n\t}\n\n\tpublic get offset():number\n\t{\n\t\treturn this._attributesBuffer._getOffset(this._index);\n\t}\n\n\tpublic get length():number\n\t{\n\t\treturn this._attributesBuffer.count*this._dimensions;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, count?:number, unsigned?:boolean);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBufferCount:any = 0, unsigned:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._arrayClass = arrayClass;\n\t\tthis._size = arrayClass.BYTES_PER_ELEMENT;\n\t\tthis._dimensions = dimensions;\n\t\tthis._attributesBuffer = (attributesBufferCount instanceof AttributesBuffer)? <AttributesBuffer> attributesBufferCount : new AttributesBuffer(this._dimensions*this._size, attributesBufferCount);\n\n\t\tthis._attributesBuffer._addView(this);\n\n\t\tthis._unsigned = unsigned;\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic set(values:any, offset:number = 0):void\n\t{\n\t\tthis._attributesBuffer._setAttributes(this._index, (values instanceof Array)? new (this._arrayClass)(values) : <ArrayBufferView> values, offset);\n\n\t\tthis._localArrayBuffer = null;\n\t}\n\n\tpublic get(count:number, offset:number = 0):ArrayBufferView\n\t{\n\t\tif (!this._localArrayBuffer)\n\t\t\tthis._localArrayBuffer = this._attributesBuffer._getLocalArrayBuffer(this._index);\n\n\t\tvar len:number = this._dimensions*this._size;\n\t\treturn new (this._arrayClass)(this._localArrayBuffer, offset*len, count*this._dimensions);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):AttributesView\n\t{\n\t\treturn (this._cloneCache = new AttributesView(this._arrayClass, this._dimensions, attributesBuffer, this._unsigned));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):AttributesView\n\t{\n\t\tif (attributesBuffer)\n\t\t\tthis._internalClone(attributesBuffer);\n\n\t\tif (!this._cloneCache)\n\t\t\tthis._attributesBuffer.clone();\n\n\t\tvar cloneCache:AttributesView = this._cloneCache;\n\t\tthis._cloneCache = null;\n\n\t\treturn cloneCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose():void\n\t{\n\t\tif (!this._attributesBuffer)\n\t\t\treturn;\n\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer = null;\n\t\tthis._localArrayBuffer = null;\n\t}\n}",
    "import {AttributesBuffer}\t\tfrom \"../attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\n\nexport class Byte1Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Byte1Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Byte1Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint8Array : Int8Array, 1, attributesBufferLength, unsigned);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint8Array, offset?:number);\n\tpublic set(typedArray:Int8Array, offset?:number);\n\tpublic set(values:any, offset:number = 0):void\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint8Array;\n\tpublic get(count:number, offset?:number):Int8Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte1Attributes\n\t{\n\t\treturn (this._cloneCache = new Byte1Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte1Attributes\n\t{\n\t\treturn <Byte1Attributes> super.clone(attributesBuffer);\n\t}\n}",
    "import {AttributesBuffer}\t\tfrom \"../attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\n\nexport class Byte2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Byte2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Byte2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint8Array : Int8Array, 2, attributesBufferLength, unsigned);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint8Array, offset?:number);\n\tpublic set(typedArray:Int8Array, offset?:number);\n\tpublic set(values:any, offset:number = 0):void\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint8Array;\n\tpublic get(count:number, offset?:number):Int8Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte2Attributes\n\t{\n\t\treturn (this._cloneCache = new Byte2Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte2Attributes\n\t{\n\t\treturn <Byte2Attributes> super.clone(attributesBuffer);\n\t}\n}",
    "import {AttributesBuffer}\t\tfrom \"../attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\n\nexport class Byte3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Byte3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Byte3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint8Array : Int8Array, 3, attributesBufferLength, unsigned);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint8Array, offset?:number);\n\tpublic set(typedArray:Int8Array, offset?:number);\n\tpublic set(values:any, offset:number = 0):void\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint8Array;\n\tpublic get(count:number, offset?:number):Int8Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte3Attributes\n\t{\n\t\treturn (this._cloneCache = new Byte3Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte3Attributes\n\t{\n\t\treturn <Byte3Attributes> super.clone(attributesBuffer);\n\t}\n}",
    "import {AttributesBuffer}\t\tfrom \"../attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\n\nexport class Byte4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Byte4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Byte4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint8Array : Int8Array, 4, attributesBufferLength, unsigned);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(typedArray:Uint8Array, offset?:number);\n\tpublic set(typedArray:Int8Array, offset?:number);\n\tpublic set(values:any, offset:number = 0):void\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint8Array;\n\tpublic get(count:number, offset?:number):Int8Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte4Attributes\n\t{\n\t\treturn (this._cloneCache = new Byte4Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte4Attributes\n\t{\n\t\treturn <Byte4Attributes> super.clone(attributesBuffer);\n\t}\n}",
    "import {AttributesBuffer}\t\tfrom \"../attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\n\nexport class Float1Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float1Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float1Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 1, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0):void\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float1Attributes\n\t{\n\t\treturn (this._cloneCache = new Float1Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float1Attributes\n\t{\n\t\treturn <Float1Attributes> super.clone(attributesBuffer);\n\t}\n}",
    "import {AttributesBuffer}\t\tfrom \"../attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\n\nexport class Float2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 2, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0):void\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float2Attributes\n\t{\n\t\treturn (this._cloneCache = new Float2Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float2Attributes\n\t{\n\t\treturn <Float2Attributes> super.clone(attributesBuffer);\n\t}\n}",
    "import {AttributesBuffer}\t\t\tfrom \"../attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\n\nexport class Float3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 3, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0):void\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\treturn (this._cloneCache = new Float3Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float3Attributes\n\t{\n\t\treturn <Float3Attributes> super.clone(attributesBuffer);\n\t}\n}",
    "import {AttributesBuffer}\t\t\tfrom \"../attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\n\nexport class Float4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 4, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0):void\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float4Attributes\n\t{\n\t\treturn (this._cloneCache = new Float4Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float4Attributes\n\t{\n\t\treturn <Float4Attributes> super.clone(attributesBuffer);\n\t}\n}",
    "import {AttributesBuffer}\t\t\tfrom \"../attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\n\nexport class Short2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 2, attributesBufferLength, unsigned)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0):void\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short2Attributes\n\t{\n\t\treturn (this._cloneCache = new Short2Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short2Attributes\n\t{\n\t\treturn <Short2Attributes> super.clone(attributesBuffer);\n\t}\n}",
    "import {AttributesBuffer}\t\t\tfrom \"../attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\tfrom \"../attributes/AttributesView\";\n\nexport class Short3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 3, attributesBufferLength, unsigned)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0):void\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short3Attributes\n\t{\n\t\treturn (this._cloneCache = new Short3Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short3Attributes\n\t{\n\t\treturn <Short3Attributes> super.clone(attributesBuffer);\n\t}\n}",
    "export {AttributesView}\t\t\t\t\tfrom \"./attributes/AttributesView\";\nexport {AttributesBuffer}\t\t\t\tfrom \"./attributes/AttributesBuffer\";\nexport {Byte1Attributes}\t\t\t\tfrom \"./attributes/Byte1Attributes\";\nexport {Byte2Attributes}\t\t\t\tfrom \"./attributes/Byte2Attributes\";\nexport {Byte3Attributes}\t\t\t\tfrom \"./attributes/Byte3Attributes\";\nexport {Byte4Attributes}\t\t\t\tfrom \"./attributes/Byte4Attributes\";\nexport {Float1Attributes}\t\t\t\tfrom \"./attributes/Float1Attributes\";\nexport {Float2Attributes}\t\t\t\tfrom \"./attributes/Float2Attributes\";\nexport {Float3Attributes}\t\t\t\tfrom \"./attributes/Float3Attributes\";\nexport {Float4Attributes}\t\t\t\tfrom \"./attributes/Float4Attributes\";\nexport {Short2Attributes}\t\t\t\tfrom \"./attributes/Short2Attributes\";\nexport {Short3Attributes}\t\t\t\tfrom \"./attributes/Short3Attributes\";",
    "import {IAudioChannel}\t\t\t\tfrom \"../managers/IAudioChannel\";\nimport {AudioManager}\t\t\t\tfrom \"../managers/AudioManager\";\nimport {ColorTransform}\t\t\tfrom \"../geom/ColorTransform\";\nimport {Matrix}\t\t\t\t\tfrom \"../geom/Matrix\";\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {AssetBase}\t\t\t\tfrom \"../library/AssetBase\";\nimport {ParserUtils}\t\t\t\tfrom \"../parsers/ParserUtils\";\nimport {ColorUtils}\t\t\t\tfrom \"../utils/ColorUtils\";\n\n// TODO: Audio should probably be an interface containing play/stop/seek functionality\nexport class WaveAudio extends AssetBase\n{\n\tpublic static assetType:string = \"[asset WaveAudio]\";\n\n\tprivate _audioChannel:IAudioChannel;\n\tprivate _volume:number = 1;\n\tprivate _buffer:ArrayBuffer;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn WaveAudio.assetType;\n\t}\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tif (this._audioChannel)\n\t\t\tthis._audioChannel.volume = this._volume;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\tif (this._audioChannel)\n\t\t\treturn this._audioChannel.currentTime;\n\n\t\treturn 0;\n\t}\n\n\tpublic get duration():number\n\t{\n\t\tif (this._audioChannel)\n\t\t\treturn this._audioChannel.duration;\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(buffer:ArrayBuffer)\n\t{\n\t\tsuper();\n\n\t\tthis._buffer = buffer;\n\t}\n\n\tpublic dispose():void\n\t{\n\t\tthis.stop();\n\t}\n\n\tpublic play(offset:number, loop:boolean = false):void\n\t{\n\t\tthis._audioChannel = AudioManager.getChannel(this._buffer.byteLength);\n\n\t\tif (this._audioChannel) {\n\t\t\tthis._audioChannel.volume = this._volume;\n\t\t\tthis._audioChannel.play(this._buffer, offset, loop, this.id);\n\t\t}\n\t}\n\n\tpublic stop():void\n\t{\n\t\tif (this._audioChannel)\n\t\t\tthis._audioChannel.stop();\n\n\t\tdelete this._audioChannel;\n\t\tthis._audioChannel = null;\n\t}\n\n\tpublic clone():WaveAudio\n\t{\n\t\tvar newInstance:WaveAudio = new WaveAudio(this._buffer);\n\n\t\tnewInstance.name = this.name;\n\n\t\treturn newInstance;\n\t}\n}",
    "export {WaveAudio}\t\t\t\t\t\tfrom \"./audio/WaveAudio\";",
    "import {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nexport class AbstractMethodError extends ErrorBase\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract export class was created, or an abstract method was not overridden by the subclass.\", id);\n\t}\n}",
    "import {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nexport class ArgumentError extends ErrorBase\n{\n\t/**\n\t * Create a new ArgumentError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"ArgumentError\", id);\n\t}\n}",
    "import {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\n\nexport class DocumentError extends ErrorBase\n{\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\n\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\n\t{\n\t\tsuper(message, id);\n\t}\n}",
    "export class ErrorBase\n{\n\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\n\tprivate _name:string = '';  // Contains the name of the Error object.\n\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\n\t{\n\n\t\tthis._messsage = message;\n\t\tthis._name = name;\n\t\tthis._errorID = id;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get message():string\n\t{\n\t\treturn this._messsage;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set message(value:string)\n\t{\n\t\tthis._messsage = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get name():string\n\t{\n\n\t\treturn this._name;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set name(value:string)\n\t{\n\n\t\tthis._name = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get errorID():number\n\t{\n\n\t\treturn this._errorID;\n\n\t}\n\n}",
    "import {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nexport class PartialImplementationError extends ErrorBase\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(dependency:string = '', id:number = 0)\n\t{\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\n\t}\n}",
    "import {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\n\n/**\n * RangeError is thrown when an index is accessed out of range of the number of\n * available indices on an Array.\n */\nexport class RangeError extends ErrorBase\n{\n\t/**\n\t * Create a new RangeError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"RangeError\", id);\n\t}\n}",
    "export {AbstractMethodError}\t\t\tfrom \"./errors/AbstractMethodError\";\nexport {ArgumentError}\t\t\t\t\tfrom \"./errors/ArgumentError\";\nexport {DocumentError}\t\t\t\t\tfrom \"./errors/DocumentError\";\nexport {ErrorBase}\t\t\t\t\t\tfrom \"./errors/ErrorBase\";\nexport {PartialImplementationError}\t\tfrom \"./errors/PartialImplementationError\";\nexport {RangeError}\t\t\t\t\t\tfrom \"./errors/RangeError\";",
    "import {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {EventBase}\t\t\t\tfrom \"../events/EventBase\";\n\n/**\n * @export class away.events.AssetEvent\n */\nexport class AssetEvent extends EventBase\n{\n\t/**\n\t * Dispatched when the content of an asset is invalidated\n\t */\n\tpublic static INVALIDATE:string = \"invalidate\";\n\n\t/**\n\t * Dispatched when an asset is diposed\n\t */\n\tpublic static DISPOSE:string = \"dispose\";\n\n\t/**\n\t * Dispatched when an asset is cleared\n\t */\n\tpublic static CLEAR:string = \"clear\";\n\n\t/**\n\t *\n\t */\n\tpublic static RENAME:string = 'rename';\n\n\t/**\n\t *\n\t */\n\tpublic static ENTER_FRAME:string = 'enterFrame';\n\n\t/**\n\t *\n\t */\n\tpublic static EXIT_FRAME:string = 'exitFrame';\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\n\n\t/**\n\t * Dispatched when the loading of an asset and all of its dependencies is complete.\n\t */\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\n\n\t/**\n\t *\n\t */\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\n\n\tprivate _asset:IAsset;\n\tprivate _prevName:string;\n\n\t/**\n\t *\n\t */\n\tconstructor(type:string, asset:IAsset, prevName:string = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._asset = asset;\n\t\tthis._prevName = prevName || this._asset.name;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get asset():IAsset\n\t{\n\t\treturn this._asset;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get prevName():string\n\t{\n\t\treturn this._prevName;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():AssetEvent\n\t{\n\t\treturn new AssetEvent(this.type, this._asset, this._prevName);\n\t}\n}",
    "export class EventBase\n{\n\t/**\n\t * Type of event\n\t * @property type\n\t * @type String\n\t */\n\tpublic type:string = undefined;\n\n\t/**\n\t * Reference to target object\n\t * @property target\n\t * @type Object\n\t */\n\tpublic target:any = undefined;\n\n\tconstructor(type:string)\n\t{\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():EventBase\n\t{\n\t\treturn new EventBase(this.type);\n\t}\n}",
    "import {EventBase}\t\t\t\t\tfrom \"../events/EventBase\";\n\n/**\n * Base export class for dispatching events\n*\n* @export class away.events.EventDispatcher\n*\n*/\nexport class EventDispatcher\n{\n\tprivate listenerObjects:Array<ListenerObject> = new Array<ListenerObject>();\n\tprivate target:any;\n\n\tconstructor(target:any = null)\n\t{\n\t\tthis.target = target || this;\n\t}\n\n\t/**\n\t * Add an event listener\n\t * @method addEventListener\n\t * @param {String} Name of event to add a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void):void\n\t{\n\t\tvar l:ListenerObject = this.listenerObjects[type];\n\n\t\tif (l === undefined)\n\t\t\tl = this.listenerObjects[type] = new ListenerObject();\n\n\t\tl.addEventListener(listener);\n\t}\n\n\t/**\n\t * Remove an event listener\n\t * @method removeEventListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void):void\n\t{\n\t\tvar l:ListenerObject = this.listenerObjects[type];\n\n\t\tif (l) {\n\t\t\tl.removeEventListener(listener);\n\n\t\t\tif (l.numListeners == 0)\n\t\t\t\tdelete this.listenerObjects[type];\n\t\t}\n\t}\n\n\t/**\n\t * Dispatch an event\n\t * @method dispatchEvent\n\t * @param {Event} Event to dispatch\n\t */\n\tpublic dispatchEvent(event:EventBase):void\n\t{\n\t\tvar l:ListenerObject = this.listenerObjects[event.type];\n\n\t\tif (l) {\n\t\t\tevent.target = this.target;\n\t\t\tl.dispatchEvent(event);\n\t\t}\n\t}\n\n\t/**\n\t * check if an object has an event listener assigned to it\n\t * @method hasListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic hasEventListener(type:string, listener?:(event:EventBase) => void):boolean\n\t{\n\t\tif (this.listenerObjects[type] === undefined)\n\t\t\treturn false;\n\n\t\tif (listener != null)\n\t\t\treturn this.listenerObjects[type].getEventListenerIndex(listener) !== -1;\n\n\t\treturn this.listenerObjects[type].numListeners > 0;\n\t}\n}\n\nexport class ListenerObject\n{\n\tpublic index:number = 0;\n\n\tpublic listeners:Array<(event:EventBase) => void> = new Array<(event:EventBase) => void>();\n\n\tpublic numListeners:number = 0;\n\n\tpublic addEventListener(listener:(event:EventBase) => void):void\n\t{\n\t\t//check if listener already added\n\t\tif (this.getEventListenerIndex(listener) !== -1)\n\t\t\treturn;\n\n\t\tthis.listeners.push(listener);\n\t\tthis.numListeners++;\n\t}\n\n\tpublic removeEventListener(listener:(event:EventBase) => void):void\n\t{\n\t\t//check if listener exists\n\t\tvar index:number = this.getEventListenerIndex(listener);\n\n\t\tif (index === -1)\n\t\t\treturn;\n\n\t\tthis.listeners.splice(index, 1);\n\t\tif (index <= this.index)\n\t\t\tthis.index--;\n\n\t\tthis.numListeners--;\n\t}\n\n\tpublic dispatchEvent(event:EventBase):void\n\t{\n\t\tvar len:number = this.numListeners;\n\t\tfor (this.index = 0; this.index < len && this.index < this.numListeners; this.index++)\n\t\t\tthis.listeners[this.index](event);\n\t}\n\n\t/**\n\t * get Event Listener Index in array. Returns -1 if no listener is added\n\t * @method getEventListenerIndex\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic getEventListenerIndex(listener:(event:EventBase) => void):number\n\t{\n\t\tfor (var index:number = 0; index < this.numListeners; index++)\n\t\t\tif (listener == this.listeners[index])\n\t\t\t\treturn index;\n\n\t\treturn -1;\n\t}\n}\nexport default EventDispatcher;",
    "import {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {EventBase}\t\t\t\tfrom \"../events/EventBase\";\n\nexport class LoaderEvent extends EventBase\n{\n\t/**\n\t * Dispatched when the loading of a session and all of its dependencies is complete.\n\t */\n\tpublic static LOAD_COMPLETE:string = \"loadComplete\";\n\n\tprivate _url:string;\n\tprivate _content:IAsset;\n\tprivate _assets:IAsset[];\n\n\t/**\n\t * Create a new LoaderEvent object.\n\t *\n\t * @param type The event type.\n\t * @param url The url of the loaded resource.\n\t * @param assets The assets of the loaded resource.\n\t */\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._url = url;\n\t\tthis._content = content;\n\t\tthis._assets = assets;\n\t}\n\n\t/**\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\n\t */\n\tpublic get content():IAsset\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The url of the loaded resource.\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t * The error string on loadError.\n\t */\n\tpublic get assets():IAsset[]\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():LoaderEvent\n\t{\n\t\treturn new LoaderEvent(this.type, this._url, this._content, this._assets);\n\t}\n}",
    "import {EventBase}\t\t\t\tfrom \"../events/EventBase\";\n\nexport class ParserEvent extends EventBase\n{\n\tprivate _message:string;\n\n\t/**\n\t * Dispatched when parsing of an asset completed.\n\t */\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\n\n\t/**\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\n\t * incorrectly formatted.)\n\t */\n\tpublic static PARSE_ERROR:string = 'parseError';\n\n\n\t/**\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\n\t * This is an internal event that should rarely (if ever) be listened for by\n\t * external classes.\n\t */\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\n\n\n\tconstructor(type:string, message:string = '')\n\t{\n\t\tsuper(type);\n\n\t\tthis._message = message;\n\t}\n\n\n\t/**\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\n\t */\n\tpublic get message():string\n\t{\n\t\treturn this._message;\n\t}\n\n\n\tpublic clone():ParserEvent\n\t{\n\t\treturn new ParserEvent(this.type, this._message);\n\t}\n}",
    "import {EventBase}\t\t\t\tfrom \"../events/EventBase\";\nimport {IProjection}\t\t\t\tfrom \"../projections/IProjection\";\n\nexport class ProjectionEvent extends EventBase\n{\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\n\n\tprivate _projection:IProjection;\n\n\tconstructor(type:string, projection:IProjection)\n\t{\n\t\tsuper(type);\n\t\tthis._projection = projection;\n\t}\n\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n}",
    "import {EventBase}\t\t\t\tfrom \"../events/EventBase\";\n\nexport class TimerEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static TIMER:string = \"timer\";\n\n\t/**\n\t *\n\t */\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport default TimerEvent",
    "import {URLLoader}\t\t\t\tfrom \"../net/URLLoader\";\nimport {EventBase}\t\t\t\tfrom \"../events/EventBase\";\n\nexport class URLLoaderEvent extends EventBase\n{\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\n\n\tpublic static LOAD_ERROR:string = \"loadError\";\n\n\tpublic static LOAD_PROGRESS:string = \"loadProgress\";\n\n\tpublic static LOAD_START:string = \"loadStart\";\n\n\tpublic static LOAD_COMPLETE:string = \"loadComplete\";\n\n\tprivate _urlLoader:URLLoader;\n\n\tconstructor(type:string, urlLoader:URLLoader)\n\t{\n\t\tsuper(type);\n\n\t\tthis._urlLoader = urlLoader;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get urlLoader():URLLoader\n\t{\n\t\treturn this._urlLoader;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic clone():URLLoaderEvent\n\t{\n\t\treturn new URLLoaderEvent(this.type, this._urlLoader);\n\t}\n}",
    "export {AssetEvent}\t\t\t\t\t\tfrom \"./events/AssetEvent\";\nexport {EventBase}\t\t\t\t\t\tfrom \"./events/EventBase\";\nexport {EventDispatcher}\t\t\t\tfrom \"./events/EventDispatcher\";\nexport {IEventDispatcher}\t\t\t\tfrom \"./events/IEventDispatcher\";\nexport {LoaderEvent}\t\t\t\t\tfrom \"./events/LoaderEvent\";\nexport {ParserEvent}\t\t\t\t\tfrom \"./events/ParserEvent\";\nexport {ProjectionEvent}\t\t\t\tfrom \"./events/ProjectionEvent\";\nexport {TimerEvent}\t\t\t\t\t\tfrom \"./events/TimerEvent\";\nexport {URLLoaderEvent}\t\t\t\t\tfrom \"./events/URLLoaderEvent\";",
    "import {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\n\n/**\n * A Box object is an area defined by its position, as indicated by its\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\n * height and depth.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n * <code>height</code> <code>depth</code> properties of the Box export class are\n * independent of each other; changing the value of one property has no effect\n * on the others. However, the <code>right</code>, <code>bottom</code> and\n * <code>back</code> properties are integrally related to those six\n * properties. For example, if you change the value of the <code>right</code>\n * property, the value of the <code>width</code> property changes; if you\n * change the <code>bottom</code> property, the value of the\n * <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Box objects:</p>\n *\n * <ul>\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\n * </ul>\n *\n * <p>You can use the <code>new Box()</code> constructor to create a\n * Box object.</p>\n *\n * <p><b>Note:</b> The Box export class does not define a cubic Shape\n * display object.\n */\nexport class Box\n{\n\tprivate _size:Vector3D;\n\tprivate _bottomRightBack:Vector3D;\n\tprivate _topLeftFront:Vector3D;\n\n\t/**\n\t * The height of the box, in pixels. Changing the <code>height</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the box, in pixels. Changing the <code>width</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic depth:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>x</code> property of a Box object has no\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>y</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>z</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>z</code> property is equal to the value of the\n\t * <code>front</code> property.</p>\n\t */\n\tpublic z:number\n\n\t/**\n\t * The sum of the <code>z</code> and <code>height</code> properties.\n\t */\n\tpublic get back():number\n\t{\n\t\treturn this.z + this.depth;\n\t}\n\n\tpublic set back(val:number)\n\t{\n\t\tthis.depth = val - this.z;\n\t}\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\tpublic set bottom(val:number)\n\t{\n\t\tthis.height = val - this.y;\n\t}\n\n\t/**\n\t * The location of the Box object's bottom-right corner, determined by the\n\t * values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRightBack():Vector3D\n\t{\n\t\tif (this._bottomRightBack == null)\n\t\t\tthis._bottomRightBack = new Vector3D();\n\n\t\tthis._bottomRightBack.x = this.x + this.width;\n\t\tthis._bottomRightBack.y = this.y + this.height;\n\t\tthis._bottomRightBack.z = this.z + this.depth;\n\n\t\treturn this._bottomRightBack;\n\t}\n\n\t/**\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>front</code> property of a Box object has no effect on the\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\n\t * properties. However it does affect the <code>depth</code> property,\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\n\t * <code>depth</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get front():number\n\t{\n\t\treturn this.z;\n\t}\n\n\tpublic set front(val:number)\n\t{\n\t\tthis.depth += this.z - val;\n\t\tthis.z = val;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\n\t * <code>left</code> property of a Box object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\tpublic set left(val:number)\n\t{\n\t\tthis.width += this.x - val;\n\t\tthis.x = val;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\tpublic set right(val:number)\n\t{\n\t\tthis.width = val - this.x;\n\t}\n\n\t/**\n\t * The size of the Box object, expressed as a Vector3D object with the\n\t * values of the <code>width</code>, <code>height</code> and\n\t * <code>depth</code> properties.\n\t */\n\tpublic get size():Vector3D\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Vector3D();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\t\tthis._size.z = this.depth;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>top</code> property of a Box object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\tpublic set top(val:number)\n\t{\n\t\tthis.height += (this.y - val);\n\t\tthis.y = val;\n\t}\n\n\t/**\n\t * The location of the Box object's top-left-front corner, determined by the\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\n\t */\n\tpublic get topLeftFront():Vector3D\n\t{\n\t\tif (this._topLeftFront == null)\n\t\t\tthis._topLeftFront = new Vector3D();\n\n\t\tthis._topLeftFront.x = this.x;\n\t\tthis._topLeftFront.y = this.y;\n\t\tthis._topLeftFront.z = this.z;\n\n\t\treturn this._topLeftFront;\n\t}\n\n\t/**\n\t * Creates a new Box object with the top-left-front corner specified by the\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\n\t * parameters. If you call this public without parameters, a box with\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param width  The width of the box, in pixels.\n\t * @param height The height of the box, in pixels.\n\t * @param depth The depth of the box, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = depth;\n\t}\n\n\t/**\n\t * Returns a new Box object with the same values for the <code>x</code>,\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\n\t * and <code>depth</code> properties as the original Box object.\n\t *\n\t * @return A new Box object with the same values for the <code>x</code>,\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\n\t *         <code>height</code> and <code>depth</code> properties as the\n\t *         original Box object.\n\t */\n\tpublic clone():Box\n\t{\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number, z:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object. This method is similar to the\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\n\t * object as a parameter.\n\t *\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\n\t *                 <i>z</i> coordinates.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\n\t}\n\n\t/**\n\t * Determines whether the Box object specified by the <code>box</code>\n\t * parameter is contained within this Box object. A Box object is said to\n\t * contain another if the second Box object falls entirely within the\n\t * boundaries of the first.\n\t *\n\t * @param box The Box object being checked.\n\t * @return A value of <code>true</code> if the Box object that you specify\n\t *         is contained by this Box object; otherwise <code>false</code>.\n\t */\n\tpublic containsBox(box:Box):boolean\n\t{\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\n\t}\n\n\t/**\n\t * Copies all of box data from the source Box object into the calling\n\t * Box object.\n\t *\n\t * @param sourceBox The Box object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceBox:Box):void\n\t{\n\t\tthis.x = sourceBox.x;\n\t\tthis.y = sourceBox.y;\n\t\tthis.z = sourceBox.z;\n\t\tthis.width = sourceBox.width;\n\t\tthis.height = sourceBox.height;\n\t\tthis.depth = sourceBox.depth;\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Box object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties of an object against\n\t * the same properties of this Box object.\n\t *\n\t * @param toCompare The box to compare to this Box object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\n\t *         properties as this Box object; otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Box):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\n\t}\n\n\t/**\n\t * Increases the size of the Box object by the specified amounts, in\n\t * pixels. The center point of the Box object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, to\n\t * the top and the bottom by the <code>dy</code> value, and to\n\t * the front and the back by the <code>dz</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the box:\n\t * @param dy The value to be added to the top and the bottom of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           height and position of the box:\n\t * @param dz The value to be added to the front and the back of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           depth and position of the box:\n\t */\n\tpublic inflate(dx:number, dy:number, dz:number):void\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.z -= dz/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t\tthis.depth += dz/2;\n\t}\n\n\t/**\n\t * Increases the size of the Box object. This method is similar to the\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\n\t *              increase the horizontal dimension of the Box object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Box object.\n\t *              The <code>z</code> property is used to increase the\n\t *              longitudinal dimension of the Box object.\n\t */\n\tpublic inflatePoint(delta:Vector3D):void\n\t{\n\t\tthis.x -= delta.x/2;\n\t\tthis.y -= delta.y/2;\n\t\tthis.z -= delta.z/2;\n\t\tthis.width += delta.x/2;\n\t\tthis.height += delta.y/2;\n\t\tthis.depth += delta.z/2;\n\t}\n\n\t/**\n\t * If the Box object specified in the <code>toIntersect</code> parameter\n\t * intersects with this Box object, returns the area of intersection\n\t * as a Box object. If the boxes do not intersect, this method returns an\n\t * empty Box object with its properties set to 0.\n\t *\n\t * @param toIntersect The Box object to compare against to see if it\n\t *                    intersects with this Box object.\n\t * @return A Box object that equals the area of intersection. If the\n\t *         boxes do not intersect, this method returns an empty Box\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\n\t *         <code>depth</code> properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Box):Box\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Box = new Box();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\n\t\t\tif (this.z > toIntersect.z) {\n\t\t\t\ti.z = this.z;\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\n\n\t\t\t\tif (i.depth > this.depth)\n\t\t\t\t\ti.depth = this.depth;\n\t\t\t} else {\n\t\t\t\ti.z = toIntersect.z;\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\n\n\t\t\t\tif (i.depth > toIntersect.depth)\n\t\t\t\t\ti.depth = toIntersect.depth;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Box();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Box object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code>, and <code>depth</code> properties of the specified\n\t * Box object to see if it intersects with this Box object.\n\t *\n\t * @param toIntersect The Box object to compare against this Box object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Box object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Box):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar halfExtentsX:number = this.width/2;\n\t\tvar halfExtentsY:number = this.height/2;\n\t\tvar halfExtentsZ:number = this.depth/2;\n\n\t\tvar centerX:number = this.x + halfExtentsX;\n\t\tvar centerY:number = this.y + halfExtentsY;\n\t\tvar centerZ:number = this.z + halfExtentsZ;\n\n\t\tvar px:number = position.x - centerX;\n\t\tvar py:number = position.y - centerY;\n\t\tvar pz:number = position.z - centerZ;\n\n\t\tvar vx:number = direction.x;\n\t\tvar vy:number = direction.y;\n\t\tvar vz:number = direction.z;\n\n\t\tvar ix:number;\n\t\tvar iy:number;\n\t\tvar iz:number;\n\t\tvar rayEntryDistance:number;\n\n\t\t// ray-plane tests\n\t\tvar intersects:boolean;\n\t\tif (vx < 0) {\n\t\t\trayEntryDistance = ( halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vx > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = -1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy < 0) {\n\t\t\trayEntryDistance = ( halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = -1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz < 0) {\n\t\t\trayEntryDistance = ( halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = -1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn intersects? rayEntryDistance : -1;\n\t}\n\n\t/**\n\t * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\n\t *\n\t * @param point The point for which to find the closest point on the Box\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\n\t * @return\n\t */\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar p:number;\n\n\t\tif (target == null)\n\t\t\ttarget = new Vector3D();\n\n\t\tp = point.x;\n\t\tif (p < this.x)\n\t\t\tp = this.x;\n\t\tif (p > this.x + this.width)\n\t\t\tp = this.x + this.width;\n\t\ttarget.x = p;\n\n\t\tp = point.y;\n\t\tif (p < this.y + this.height)\n\t\t\tp = this.y + this.height;\n\t\tif (p > this.y)\n\t\t\tp = this.y;\n\t\ttarget.y = p;\n\n\t\tp = point.z;\n\t\tif (p < this.z)\n\t\t\tp = this.z;\n\t\tif (p > this.z + this.depth)\n\t\t\tp = this.z + this.depth;\n\t\ttarget.z = p;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Determines whether or not this Box object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Box object's width, height or\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object, as determined by its\n\t * top-left-front corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number, dz:number):void\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object using a Vector3D object as a\n\t * parameter. This method is similar to the <code>Box.offset()</code>\n\t * method, except that it takes a Vector3D object as a parameter.\n\t *\n\t * @param position A Vector3D object to use to offset this Box object.\n\t */\n\tpublic offsetPosition(position:Vector3D):void\n\t{\n\t\tthis.x += position.x;\n\t\tthis.y += position.y;\n\t\tthis.z += position.z;\n\t}\n\n\t/**\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\n\t * width, height or depth is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\n\t * <code>depth</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty():void\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.depth = 0;\n\t}\n\n\tpublic setBoundIdentity():void\n\t{\n\t\tthis.x = Number.MAX_VALUE/2;\n\t\tthis.y = Number.MAX_VALUE/2;\n\t\tthis.z = Number.MAX_VALUE/2;\n\t\tthis.width = -Number.MAX_VALUE;\n\t\tthis.height = -Number.MAX_VALUE;\n\t\tthis.depth = -Number.MAX_VALUE;\n\t}\n\n\t/**\n\t * Sets the members of Box to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param widtha  The width of the box, in pixels.\n\t * @param heighta The height of the box, in pixels.\n\t * @param deptha  The depth of the box, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number):void\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t\tthis.depth = deptha;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal, vertical and\n\t * longitudinal positions and the width, height and depth of the Box object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\n\t}\n\n\t/**\n\t * Adds two boxes together to create a new Box object, by filling\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\n\t *\n\t * @param toUnion A Box object to add to this Box object.\n\t * @return A new Box object that is the union of the two boxes.\n\t */\n\tpublic union(toUnion:Box, target:Box = null):Box\n\t{\n\t\tvar width:number;\n\t\tvar height:number;\n\t\tvar depth:number;\n\t\tif (target == null)\n\t\t\ttarget = new Box();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\twidth = toUnion.x - this.x + toUnion.width;\n\t\t\ttarget.x = this.x;\n\t\t\ttarget.width = (width < this.width)? this.width : width;\n\t\t} else {\n\t\t\twidth = this.x - toUnion.x + this.width;\n\t\t\ttarget.x = toUnion.x;\n\t\t\ttarget.width = (width < toUnion.width)? toUnion.width : width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\theight = toUnion.y - this.y + toUnion.height;\n\t\t\ttarget.y = this.y;\n\t\t\ttarget.height = (height < this.height)? this.height : height;\n\t\t} else {\n\t\t\theight = this.y - toUnion.y + this.height;\n\t\t\ttarget.y = toUnion.y;\n\t\t\ttarget.height = (height < toUnion.height)? toUnion.height : height;\n\t\t}\n\n\t\tif (this.z < toUnion.z) {\n\t\t\tdepth = toUnion.z - this.z + toUnion.depth;\n\t\t\ttarget.z = this.z;\n\t\t\ttarget.depth = (depth < this.depth)? this.depth : depth;\n\t\t} else {\n\t\t\tdepth = this.z - toUnion.z + this.depth;\n\t\t\ttarget.z = toUnion.z;\n\t\t\ttarget.depth = (depth < toUnion.depth)? toUnion.depth : depth;\n\t\t}\n\n\t\treturn target;\n\t}\n}",
    "import {ColorUtils}\t\t\tfrom \"../utils/ColorUtils\";\n\n/**\n * The ColorTransform export class lets you adjust the color values in a display\n * object. The color adjustment or <i>color transformation</i> can be applied\n * to all four channels: red, green, blue, and alpha transparency.\n *\n * <p>When a ColorTransform object is applied to a display object, a new value\n * for each color channel is calculated like this:</p>\n *\n * <ul>\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\n * <code>redOffset</code></li>\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\n * <code>greenOffset</code></li>\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\n * <code>blueOffset</code></li>\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\n * <code>alphaOffset</code></li>\n * </ul>\n *\n * <p>If any of the color channel values is greater than 255 after the\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\n *\n * <p>You can use ColorTransform objects in the following ways:</p>\n *\n * <ul>\n *   <li>In the <code>colorTransform</code> parameter of the\n * <code>colorTransform()</code> method of the BitmapData class</li>\n *   <li>As the <code>colorTransform</code> property of a Transform object\n * (which can be used as the <code>transform</code> property of a display\n * object)</li>\n * </ul>\n *\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\n * a ColorTransform object before you can call the methods of the\n * ColorTransform object.</p>\n *\n * <p>Color transformations do not apply to the background color of a movie\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\n * that are attached to the movie clip.</p>\n */\nexport class ColorTransform\n{\n\t/**\n\t * A decimal value that is multiplied with the alpha transparency channel\n\t * value.\n\t *\n\t * <p>If you set the alpha transparency value of a display object directly by\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\n\t * affects the value of the <code>alphaMultiplier</code> property of that\n\t * display object's <code>transform.colorTransform</code> property.</p>\n\t */\n\tpublic alphaMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the alpha transparency channel\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\n\t * value.\n\t */\n    public alphaOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the blue channel value.\n\t */\n    public blueMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the blue channel value after it\n\t * has been multiplied by the <code>blueMultiplier</code> value.\n\t */\n    public blueOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the green channel value.\n\t */\n    public greenMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the green channel value after\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\n\t */\n    public greenOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the red channel value.\n\t */\n    public redMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the red channel value after it\n\t * has been multiplied by the <code>redMultiplier</code> value.\n\t */\n    public redOffset:number;\n\n\t/**\n\t * The RGB color value for a ColorTransform object.\n\t *\n\t * <p>When you set this property, it changes the three color offset values\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\n\t * multiplier values(<code>redMultiplier</code>,\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\n\t * alpha transparency multiplier and offset values do not change.</p>\n\t *\n\t * <p>When you pass a value for this property, use the format\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\n\t * hexadecimal digits that specify the offset of each color component. The 0x\n\t * tells the ActionScript compiler that the number is a hexadecimal\n\t * value.</p>\n\t */\n\tpublic get color():number\n\t{\n\t\treturn((this.redOffset << 16) | ( this.greenOffset << 8) | this.blueOffset);\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\n\n\t\tthis.redOffset = argb[1];  //(value >> 16) & 0xFF;\n\t\tthis.greenOffset = argb[2];  //(value >> 8) & 0xFF;\n\t\tthis.blueOffset = argb[3];  //value & 0xFF;\n\n\t\tthis.redMultiplier = 0;\n\t\tthis.greenMultiplier = 0;\n\t\tthis.blueMultiplier = 0;\n\t}\n\n\t/**\n\t * Creates a ColorTransform object for a display object with the specified\n\t * color channel values and alpha values.\n\t *\n\t * @param redMultiplier   The value for the red multiplier, in the range from\n\t *                        0 to 1.\n\t * @param greenMultiplier The value for the green multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\n\t *                        the range from 0 to 1.\n\t * @param redOffset       The offset value for the red color channel, in the\n\t *                        range from -255 to 255.\n\t * @param greenOffset     The offset value for the green color channel, in\n\t *                        the range from -255 to 255.\n\t * @param blueOffset      The offset for the blue color channel value, in the\n\t *                        range from -255 to 255.\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\n\t *                        the range from -255 to 255.\n\t */\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\n\t{\n\t\tthis.redMultiplier = redMultiplier;\n\t\tthis.greenMultiplier = greenMultiplier;\n\t\tthis.blueMultiplier = blueMultiplier;\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\t\tthis.redOffset = redOffset;\n\t\tthis.greenOffset = greenOffset;\n\t\tthis.blueOffset = blueOffset;\n\t\tthis.alphaOffset = alphaOffset;\n\t}\n\n    public clear()\n    {\n        this.redMultiplier = 1;\n        this.greenMultiplier = 1;\n        this.blueMultiplier = 1;\n        this.alphaMultiplier = 1;\n        this.redOffset = 0;\n        this.greenOffset = 0;\n        this.blueOffset = 0;\n        this.alphaOffset = 0;\n    }\n\n    public clone():ColorTransform\n    {\n        return new ColorTransform(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n    }\n\n    public copyFrom(source:ColorTransform)\n    {\n        this.redMultiplier = source.redMultiplier;\n        this.greenMultiplier = source.greenMultiplier;\n        this.blueMultiplier = source.blueMultiplier;\n        this.alphaMultiplier = source.alphaMultiplier;\n        this.redOffset = source.redOffset;\n        this.greenOffset = source.greenOffset;\n        this.blueOffset = source.blueOffset;\n        this.alphaOffset = source.alphaOffset;\n    }\n\n    public copyTo(destination:ColorTransform)\n    {\n        destination.copyFrom(this);\n    }\n\n    public prepend(ct:ColorTransform)\n    {\n        this.redOffset += ct.redOffset * this.redMultiplier;\n        this.greenOffset += ct.greenOffset * this.greenMultiplier;\n        this.blueOffset += ct.blueOffset * this.blueMultiplier;\n        this.alphaOffset += ct.alphaOffset * this.alphaMultiplier;\n\n        this.redMultiplier *= ct.redMultiplier;\n        this.greenMultiplier *= ct.greenMultiplier;\n        this.blueMultiplier *= ct.blueMultiplier;\n        this.alphaMultiplier *= ct.alphaMultiplier;\n    }\n\t\n\tpublic _isRenderable():boolean\n\t{\n\t\treturn Boolean(this.alphaMultiplier) || this.alphaOffset > 0;\n\t}\n}",
    "/**\n* MathConsts provides some commonly used mathematical constants\n*/\nexport class MathConsts\n{\n\t/**\n\t * The amount to multiply with when converting radians to degrees.\n\t */\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\n\n\t/**\n\t * The amount to multiply with when converting degrees to radians.\n\t */\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\n}",
    "import {Quaternion}\t\t\t\tfrom \"../geom/Quaternion\";\nimport {Matrix3D}\t\t\t\t\tfrom \"../geom/Matrix3D\";\nimport {Plane3D}\t\t\t\t\tfrom \"../geom/Plane3D\";\nimport {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\n\n\n/**\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\n */\nexport class Matrix3DUtils\n{\n\t/**\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\n\t */\n\tpublic static RAW_DATA_CONTAINER:Float32Array = new Float32Array(16);\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\n\t *\n\t * @param    quarternion    The quarterion object to convert.\n\t */\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\n\t{\n\t\tvar x:number = quarternion.x;\n\t\tvar y:number = quarternion.y;\n\t\tvar z:number = quarternion.z;\n\t\tvar w:number = quarternion.w;\n\n\t\tvar xx:number = x*x;\n\t\tvar xy:number = x*y;\n\t\tvar xz:number = x*z;\n\t\tvar xw:number = x*w;\n\n\t\tvar yy:number = y*y;\n\t\tvar yz:number = y*z;\n\t\tvar yw:number = y*w;\n\n\t\tvar zz:number = z*z;\n\t\tvar zw:number = z*w;\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\traw[0] = 1 - 2*(yy + zz);\n\t\traw[1] = 2*(xy + zw);\n\t\traw[2] = 2*(xz - yw);\n\t\traw[4] = 2*(xy - zw);\n\t\traw[5] = 1 - 2*(xx + zz);\n\t\traw[6] = 2*(yz + xw);\n\t\traw[8] = 2*(xz + yw);\n\t\traw[9] = 2*(yz - xw);\n\t\traw[10] = 1 - 2*(xx + yy);\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tif (m) {\n\t\t\tm.copyRawDataFrom(raw);\n\t\t\treturn m;\n\t\t} else\n\t\t\treturn new Matrix3D(raw);\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the forward vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The forward vector\n\t */\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\tif (v === null)\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\tm.copyColumnTo(2, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the up vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The up vector\n\t */\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\tif (v === null)\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\tm.copyColumnTo(1, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the right vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The right vector\n\t */\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(0, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\n\t */\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\n\t{\n\t\tvar r1:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar r2:Float32Array = m2.rawData;\n\t\tm1.copyRawDataTo(r1);\n\n\t\tfor (var i:number = 0; i < 16; ++i) {\n\t\t\tif (r1[i] != r2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D):void\n\t{\n\t\tvar dirN:Vector3D;\n\t\tvar upN:Vector3D;\n\t\tvar lftN:Vector3D;\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tlftN = dir.crossProduct(up);\n\t\tlftN.normalize();\n\n\t\tupN = lftN.crossProduct(dir);\n\t\tupN.normalize();\n\t\tdirN = dir.clone();\n\t\tdirN.normalize();\n\n\t\traw[0] = lftN.x;\n\t\traw[1] = upN.x;\n\t\traw[2] = -dirN.x;\n\t\traw[3] = 0.0;\n\n\t\traw[4] = lftN.y;\n\t\traw[5] = upN.y;\n\t\traw[6] = -dirN.y;\n\t\traw[7] = 0.0;\n\n\t\traw[8] = lftN.z;\n\t\traw[9] = upN.z;\n\t\traw[10] = -dirN.z;\n\t\traw[11] = 0.0;\n\n\t\traw[12] = -lftN.dotProduct(pos);\n\t\traw[13] = -upN.dotProduct(pos);\n\t\traw[14] = dirN.dotProduct(pos);\n\t\traw[15] = 1.0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target === null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar ab2:number = -2*a*b;\n\t\tvar ac2:number = -2*a*c;\n\t\tvar bc2:number = -2*b*c;\n\t\t// reflection matrix\n\t\trawData[0] = 1 - 2*a*a;\n\t\trawData[4] = ab2;\n\t\trawData[8] = ac2;\n\t\trawData[12] = -2*a*d;\n\t\trawData[1] = ab2;\n\t\trawData[5] = 1 - 2*b*b;\n\t\trawData[9] = bc2;\n\t\trawData[13] = -2*b*d;\n\t\trawData[2] = ac2;\n\t\trawData[6] = bc2;\n\t\trawData[10] = 1 - 2*c*c;\n\t\trawData[14] = -2*c*d;\n\t\trawData[3] = 0;\n\t\trawData[7] = 0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar d:number = raw[12];\n\t\tvar h:number = raw[13];\n\t\tvar l:number = raw[14];\n\t\tvar p:number = raw[15];\n\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z + d;\n\t\tresult.y = e * x + f * y + g * z + h;\n\t\tresult.z = i * x + j * y + k * z + l;\n\t\tresult.w = m * x + n * y + o * z + p;\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z;\n\t\tresult.y = e * x + f * y + g * z;\n\t\tresult.z = i * x + j * y + k * z;\n\t\tresult.w = m * x + n * y + o * z;\n\t\treturn result;\n\t}\n\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif(!result)\n\t\t\tresult = new Vector3D();\n\n\t\ttransform.copyColumnTo(3, result);\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>):void\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar outIndex:number = 0;\n\t\tvar length:number = vin.length;\n\t\tfor(var index:number = 0; index<length; index+=3) {\n\t\t\tvar x:number = vin[index];\n\t\t\tvar y:number = vin[index+1];\n\t\t\tvar z:number = vin[index+2];\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\n\t\t}\n\t}\n}",
    "import {Box}\t\t\t\t\t\t\tfrom \"../geom/Box\";\nimport {MathConsts}\t\t\t\t\tfrom \"../geom/MathConsts\";\nimport {Orientation3D}\t\t\t\tfrom \"../geom/Orientation3D\";\nimport {Quaternion}\t\t\t\t\tfrom \"../geom/Quaternion\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"../geom/Vector3D\";\nimport {ArgumentError}\t\t\t\tfrom \"../errors/ArgumentError\";\n\nexport class Matrix3D\n{\n\t/**\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\n\t *\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\n\t * object must be invertible. If a non-invertible matrix is needed, create a subexport class of the Matrix3D object.</p>\n\t */\n\tpublic rawData:Float32Array = new Float32Array(16);\n\n\tprivate static tempMatrix:Matrix3D = new Matrix3D();\n\tprivate static tempRawData:Float32Array = Matrix3D.tempMatrix.rawData;\n\n\tprivate _position:Vector3D = new Vector3D();\n\tprivate _positionDirty:boolean = true;\n\n\tprivate _components:Array<Vector3D>;\n\n\t/**\n\t * Creates a Matrix3D object.\n\t */\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tif (v != null && v.length == 16) {\n\t\t\tthis.copyRawDataFrom(v);\n\t\t} else {\n\t\t\tthis.identity();\n\t\t}\n\t}\n\n\t/**\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\n\t */\n\tpublic append(lhs:Matrix3D):void\n\t{\n\t\tvar lrd:Float32Array = lhs.rawData;\n\n\t\tvar m111:number = this.rawData[0];\n\t\tvar m112:number = this.rawData[1];\n\t\tvar m113:number = this.rawData[2];\n\t\tvar m114:number = this.rawData[3];\n\t\tvar m121:number = this.rawData[4];\n\t\tvar m122:number = this.rawData[5];\n\t\tvar m123:number = this.rawData[6];\n\t\tvar m124:number = this.rawData[7];\n\t\tvar m131:number = this.rawData[8];\n\t\tvar m132:number = this.rawData[9];\n\t\tvar m133:number = this.rawData[10];\n\t\tvar m134:number = this.rawData[11];\n\t\tvar m141:number = this.rawData[12];\n\t\tvar m142:number = this.rawData[13];\n\t\tvar m143:number = this.rawData[14];\n\t\tvar m144:number = this.rawData[15];\n\t\tvar m211:number = lrd[0];\n\t\tvar m212:number = lrd[1];\n\t\tvar m213:number = lrd[2];\n\t\tvar m214:number = lrd[3];\n\t\tvar m221:number = lrd[4];\n\t\tvar m222:number = lrd[5];\n\t\tvar m223:number = lrd[6];\n\t\tvar m224:number = lrd[7];\n\t\tvar m231:number = lrd[8];\n\t\tvar m232:number = lrd[9];\n\t\tvar m233:number = lrd[10];\n\t\tvar m234:number = lrd[11];\n\t\tvar m241:number = lrd[12];\n\t\tvar m242:number = lrd[13];\n\t\tvar m243:number = lrd[14];\n\t\tvar m244:number = lrd[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\n\t\tthis._positionDirty = true;\n\t}\n\n\t/**\n\t * Appends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null ):void\n\t{\n\t\tthis.append(Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees));\n\t}\n\n\t/**\n\t * Appends an incremental skew change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendSkew(xSkew:number, ySkew:number, zSkew:number):void\n\t{\n\t\tif(xSkew == 0 && ySkew == 0 && zSkew == 0) return;\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\traw[0] = 1;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = xSkew;\n\t\traw[5] = 1;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = ySkew;\n\t\traw[9] = zSkew;\n\t\traw[10] = 1;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.append(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendScale(xScale:number, yScale:number, zScale:number):void\n\t{\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\n\t\t\treturn;\n\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = xScale;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = yScale;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = zScale;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.append(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic appendTranslation(x:number, y:number, z:number):void\n\t{\n\t\tthis.rawData[12] += x;\n\t\tthis.rawData[13] += y;\n\t\tthis.rawData[14] += z;\n\n\t\tthis._positionDirty = true;\n\t}\n\n\t/**\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\n\t */\n\tpublic clone():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.rawData);\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\n\t */\n\tpublic copyFrom(source:Matrix3D):void\n\t{\n\t\tvar sourceRaw:Float32Array = source.rawData;\n\t\tvar len:number = sourceRaw.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = sourceRaw[c];\n\t}\n\n\t/**\n\t * Copies this Matrix3D object into a destination Matrix3D object.\n\t */\n\tpublic copyTo(target:Matrix3D):void\n\t{\n\t\tvar targetRaw:Float32Array = target.rawData;\n\t\tvar len:number = this.rawData.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\ttargetRaw[c] = this.rawData[c];\n\t}\n\n\tpublic copyRawDataFrom(vector:Float32Array, index:number = 0, transpose:boolean = false):void\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = vector.length - index;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = vector[c + index];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\tpublic copyRawDataTo(vector:Float32Array, index:number = 0, transpose:boolean = false):void\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = this.rawData.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tvector[c + index ] = this.rawData[c];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\n\t */\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\n\t{\n\t\tvar q:Quaternion;\n\n\t\tif (this._components == null)\n\t\t\tthis._components = [null, new Vector3D(), new Vector3D(), new Vector3D()];\n\n\t\tvar colX:Vector3D = new Vector3D(this.rawData[0], this.rawData[1], this.rawData[2]);\n\t\tvar colY:Vector3D = new Vector3D(this.rawData[4], this.rawData[5], this.rawData[6]);\n\t\tvar colZ:Vector3D = new Vector3D(this.rawData[8], this.rawData[9], this.rawData[10]);\n\n\t\tvar scale:Vector3D = this._components[3];\n\t\tvar skew:Vector3D = this._components[2];\n\n\t\t//compute X scale factor and normalise colX\n\t\tscale.x = colX.length;\n\t\tcolX.scaleBy(1/scale.x);\n\n\t\t//compute XY shear factor and make colY orthogonal to colX\n\t\tskew.x = colX.dotProduct(colY);\n\t\tcolY = Vector3D.combine(colY, colX, 1, -skew.x);\n\n\t\t//compute Y scale factor and normalise colY\n\t\tscale.y = colY.length;\n\t\tcolY.scaleBy(1/scale.y);\n\t\tskew.x /= scale.y;\n\n\t\t//compute XZ and YZ shears and make colZ orthogonal to colX and colY\n\t\tskew.y = colX.dotProduct(colZ);\n\t\tcolZ = Vector3D.combine(colZ, colX, 1, -skew.y);\n\t\tskew.z = colY.dotProduct(colZ);\n\t\tcolZ = Vector3D.combine(colZ, colY, 1, -skew.z);\n\n\t\t//compute Z scale and normalise colZ\n\t\tscale.z = colZ.length;\n\t\tcolZ.scaleBy(1/scale.z);\n\t\tskew.y /= scale.z;\n\t\tskew.z /= scale.z;\n\n\t\t//at this point, the matrix (in cols) is orthonormal\n\t\t//check for a coordinate system flip. If the determinant is -1, negate the z scaling factor\n\t\tif (colX.dotProduct(colY.crossProduct(colZ)) < 0) {\n\t\t\tscale.z = -scale.z;\n\t\t\tcolZ.x = -colZ.x;\n\t\t\tcolZ.y = -colZ.y;\n\t\t\tcolZ.z = -colZ.z;\n\t\t}\n\n\t\tvar rot = this._components[1];\n\n\t\tswitch (orientationStyle) {\n\t\t\tcase Orientation3D.AXIS_ANGLE:\n\n\t\t\t\trot.w = Math.acos((colX.x + colY.y + colZ.z - 1)/2);\n\n\t\t\t\tvar len:number = Math.sqrt((colY.z - colZ.y)*(colY.z - colZ.y) + (colZ.x - colX.z)*(colZ.x - colX.z) + (colX.y - colY.x)*(colX.y - colY.x));\n\t\t\t\trot.x = (colY.z - colZ.y)/len;\n\t\t\t\trot.y = (colZ.x - colX.z)/len;\n\t\t\t\trot.z = (colX.y - colY.x)/len;\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.QUATERNION:\n\n\t\t\t\tvar tr = colX.x + colY.y + colZ.z;\n\n\t\t\t\tif (tr > 0) {\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\n\n\t\t\t\t\trot.x = (colY.z - colZ.y)/(4*rot.w);\n\t\t\t\t\trot.y = (colZ.x - colX.z)/(4*rot.w);\n\t\t\t\t\trot.z = (colX.y - colY.x)/(4*rot.w);\n\t\t\t\t} else if ((colX.x > colY.y) && (colX.x > colZ.z)) {\n\t\t\t\t\trot.x = Math.sqrt(1 + colX.x - colY.y - colZ.z)/2;\n\n\t\t\t\t\trot.w = (colY.z - colZ.y)/(4*rot.x);\n\t\t\t\t\trot.y = (colX.y + colY.x)/(4*rot.x);\n\t\t\t\t\trot.z = (colZ.x + colX.z)/(4*rot.x);\n\t\t\t\t} else if (colY.y > colZ.z) {\n\t\t\t\t\trot.y = Math.sqrt(1 + colY.y - colX.x - colZ.z)/2;\n\n\t\t\t\t\trot.x = (colX.y + colY.x)/(4*rot.y);\n\t\t\t\t\trot.w = (colZ.x - colX.z)/(4*rot.y);\n\t\t\t\t\trot.z = (colY.z + colZ.y)/(4*rot.y);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = Math.sqrt(1 + colZ.z - colX.x - colY.y)/2;\n\n\t\t\t\t\trot.x = (colZ.x + colX.z)/(4*rot.z);\n\t\t\t\t\trot.y = (colY.z + colZ.y)/(4*rot.z);\n\t\t\t\t\trot.w = (colX.y - colY.x)/(4*rot.z);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\n\t\t\t\trot.y = Math.asin(-colX.z);\n\n\t\t\t\t//var cos:number = Math.cos(rot.y);\n\n\t\t\t\tif (colX.z != 1 && colX.z != -1) {\n\t\t\t\t\trot.x = Math.atan2(colY.z, colZ.z);\n\t\t\t\t\trot.z = Math.atan2(colX.y, colX.x);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = 0;\n\t\t\t\t\trot.x = Math.atan2(colY.x, colY.y);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._components[0] = this.position;\n\n\t\treturn this._components;\n\t}\n\n\t/**\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\n\t * coordinate to another.\n\t */\n\tpublic deltaTransformVector(v:Vector3D, t:Vector3D = null):Vector3D\n\t{\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\tif (!t)\n\t\t\tt = new Vector3D();\n\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8];\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9];\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10];\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11];\n\n\t\treturn t;\n\t}\n\n\t/**\n\t * Converts the current matrix to an identity or unit matrix.\n\t */\n\tpublic identity():void\n\t{\n\t\tthis.rawData[0] = 1;\n\t\tthis.rawData[1] = 0;\n\t\tthis.rawData[2] = 0;\n\t\tthis.rawData[3] = 0;\n\t\tthis.rawData[4] = 0;\n\t\tthis.rawData[5] = 1;\n\t\tthis.rawData[6] = 0;\n\t\tthis.rawData[7] = 0;\n\t\tthis.rawData[8] = 0;\n\t\tthis.rawData[9] = 0;\n\t\tthis.rawData[10] = 1;\n\t\tthis.rawData[11] = 0;\n\t\tthis.rawData[12] = 0;\n\t\tthis.rawData[13] = 0;\n\t\tthis.rawData[14] = 0;\n\t\tthis.rawData[15] = 1;\n\n\t\tthis._positionDirty = true;\n\t}\n\n\t/**\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\n\t */\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\n\t */\n\tpublic interpolateTo(toMat:Matrix3D, percent:number):void\n\t{\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\n\t}\n\n\t/**\n\t * Inverts the current matrix.\n\t */\n\tpublic invert():boolean\n\t{\n\t\tvar d = this.determinant;\n\t\tvar invertable:boolean = Math.abs(d) > 0.00000000001;\n\n\t\tif (invertable) {\n\t\t\td = 1/d;\n\t\t\tvar m11:number = this.rawData[0];\n\t\t\tvar m12:number = this.rawData[1];\n\t\t\tvar m13:number = this.rawData[2];\n\t\t\tvar m14:number = this.rawData[3];\n\t\t\tvar m21:number = this.rawData[4];\n\t\t\tvar m22:number = this.rawData[5];\n\t\t\tvar m23:number = this.rawData[6];\n\t\t\tvar m24:number = this.rawData[7];\n\t\t\tvar m31:number = this.rawData[8];\n\t\t\tvar m32:number = this.rawData[9];\n\t\t\tvar m33:number = this.rawData[10];\n\t\t\tvar m34:number = this.rawData[11];\n\t\t\tvar m41:number = this.rawData[12];\n\t\t\tvar m42:number = this.rawData[13];\n\t\t\tvar m43:number = this.rawData[14];\n\t\t\tvar m44:number = this.rawData[15];\n\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\n\t\t}\n\n\t\tthis._positionDirty = true;\n\n\t\treturn invertable;\n\t}\n\n\t/* TODO implement pointAt\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\n\t {\n\t }\n\t */\n\n\t/**\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\n\t */\n\tpublic prepend(rhs:Matrix3D):void\n\t{\n\t\tvar m111:number = rhs.rawData[0];\n\t\tvar m112:number = rhs.rawData[1];\n\t\tvar m113:number = rhs.rawData[2];\n\t\tvar m114:number = rhs.rawData[3];\n\t\tvar m121:number = rhs.rawData[4];\n\t\tvar m122:number = rhs.rawData[5];\n\t\tvar m123:number = rhs.rawData[6];\n\t\tvar m124:number = rhs.rawData[7];\n\t\tvar m131:number = rhs.rawData[8];\n\t\tvar m132:number = rhs.rawData[9];\n\t\tvar m133:number = rhs.rawData[10];\n\t\tvar m134:number = rhs.rawData[11];\n\t\tvar m141:number = rhs.rawData[12];\n\t\tvar m142:number = rhs.rawData[13];\n\t\tvar m143:number = rhs.rawData[14];\n\t\tvar m144:number = rhs.rawData[15];\n\n\t\tvar m211:number = this.rawData[0];\n\t\tvar m212:number = this.rawData[1];\n\t\tvar m213:number = this.rawData[2];\n\t\tvar m214:number = this.rawData[3];\n\t\tvar m221:number = this.rawData[4];\n\t\tvar m222:number = this.rawData[5];\n\t\tvar m223:number = this.rawData[6];\n\t\tvar m224:number = this.rawData[7];\n\t\tvar m231:number = this.rawData[8];\n\t\tvar m232:number = this.rawData[9];\n\t\tvar m233:number = this.rawData[10];\n\t\tvar m234:number = this.rawData[11];\n\t\tvar m241:number = this.rawData[12];\n\t\tvar m242:number = this.rawData[13];\n\t\tvar m243:number = this.rawData[14];\n\t\tvar m244:number = this.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\n\t\tthis._positionDirty = true;\n\t}\n\n\t/**\n\t * Prepends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null ):void\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\t/*\n\t\t if ( pivot != null )\n\t\t {\n\t\t var p:Vector3D = pivot;\n\t\t m.appendTranslation( p.x, p.y, p.z );\n\t\t }\n\t\t */\n\t\tthis.prepend(m);\n\t}\n\n\t/**\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic prependScale(xScale:number, yScale:number, zScale:number):void\n\t{\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\n\t\t\treturn;\n\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = xScale;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = yScale;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = zScale;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.prepend(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic prependTranslation(x:number, y:number, z:number):void\n\t{\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = 1;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = 1;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = 1;\n\t\traw[11] = 0;\n\n\t\traw[12] = x;\n\t\traw[13] = y;\n\t\traw[14] = z;\n\t\traw[15] = 1;\n\n\t\tthis.prepend(Matrix3D.tempMatrix);\n\t}\n\n\t// TODO orientationStyle\n\t/**\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\n\t */\n\tpublic recompose(components:Vector3D[]):boolean\n\t{\n\t\tvar pos:Vector3D = components[0] || this.position;\n\n\t\tthis.identity();\n\t\tvar scale:Vector3D = components[3];\n\t\tif(scale && (scale.x != 1 || scale.y != 1 || scale.z != 1))\n\t\t\tthis.appendScale(scale.x, scale.y, scale.z);\n\n\t\tvar skew:Vector3D = components[2];\n\t\tif(skew && (skew.x !=0 || skew.y != 0 || skew.z != 0))\n\t\t\tthis.appendSkew(skew.x, skew.y, skew.z);\n\n\t\tvar sin:number;\n\t\tvar cos:number;\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 0;\n\n\t\tvar rotation:Vector3D = components[1];\n\t\tif (rotation) {\n\t\t\tvar angle:number = -rotation.x;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = 1;\n\t\t\t\traw[1] = 0;\n\t\t\t\traw[2] = 0;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = 0;\n\t\t\t\traw[5] = cos;\n\t\t\t\traw[6] = -sin;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = 0;\n\t\t\t\traw[9] = sin;\n\t\t\t\traw[10] = cos;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t\tangle = -rotation.y;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = cos;\n\t\t\t\traw[1] = 0;\n\t\t\t\traw[2] = sin;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = 0;\n\t\t\t\traw[5] = 1;\n\t\t\t\traw[6] = 0;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = -sin;\n\t\t\t\traw[9] = 0;\n\t\t\t\traw[10] = cos;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t\tangle = -rotation.z;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = cos;\n\t\t\t\traw[1] = -sin;\n\t\t\t\traw[2] = 0;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = sin;\n\t\t\t\traw[5] = cos;\n\t\t\t\traw[6] = 0;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = 0;\n\t\t\t\traw[9] = 0;\n\t\t\t\traw[10] = 1;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t}\n\n\t\tthis.rawData[12] = pos.x;\n\t\tthis.rawData[13] = pos.y;\n\t\tthis.rawData[14] = pos.z;\n\n\t\tif (components[0])\n\t\t\tthis._positionDirty = true;\n\n\t\tthis.rawData[15] = 1;\n\n\t\treturn true;\n\t}\n\n\tpublic transformVector(v:Vector3D, t:Vector3D = null):Vector3D\n\t{\n\t\tif (v == null)\n\t\t\treturn t || new Vector3D();\n\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\tif (!t)\n\t\t\tt = new Vector3D();\n\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15];\n\n\t\treturn t;\n\t}\n\n\tpublic transformBox(b:Box, t:Box = null):Box\n\t{\n\t\tif (b == null)\n\t\t\treturn t || new Box();\n\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tmaxX = b.width + (minX = b.x);\n\t\tmaxY = b.height + (minY = b.y);\n\t\tmaxZ = b.depth + (minZ = b.z);\n\n\t\tif (!t)\n\t\t\tt = new Box();\n\n\t\t//TODO: take account of shear\n\t\tt.width = maxX*this.rawData[0] + maxY*this.rawData[4] + maxZ*this.rawData[8] + this.rawData[12] - (t.x = minX*this.rawData[0] + minY*this.rawData[4] + minZ*this.rawData[8] + this.rawData[12]);\n\t\tt.height = maxX*this.rawData[1] + maxY*this.rawData[5] + maxZ*this.rawData[9] + this.rawData[13] - (t.y = minX*this.rawData[1] + minY*this.rawData[5] + minZ*this.rawData[9] + this.rawData[13]);\n\t\tt.depth = maxX*this.rawData[2] + maxY*this.rawData[6] + maxZ*this.rawData[10] + this.rawData[14] - (t.z = minX*this.rawData[2] + minY*this.rawData[6] + minZ*this.rawData[10] + this.rawData[14]);\n\n\t\treturn t;\n\t}\n\n\t/**\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\n\t */\n\tpublic transformVectors(vin:number[], vout:number[]):void\n\t{\n\t\tvar i:number = 0;\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\n\n\t\twhile (i + 3 <= vin.length) {\n\t\t\tx = vin[i];\n\t\t\ty = vin[i + 1];\n\t\t\tz = vin[i + 2];\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\n\t */\n\tpublic transpose():void\n\t{\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\tthis.copyRawDataTo(raw);\n\n\t\tthis.rawData[1] = raw[4];\n\t\tthis.rawData[2] = raw[8];\n\t\tthis.rawData[3] = raw[12];\n\t\tthis.rawData[4] = raw[1];\n\t\tthis.rawData[6] = raw[9];\n\t\tthis.rawData[7] = raw[13];\n\t\tthis.rawData[8] = raw[2];\n\t\tthis.rawData[9] = raw[6];\n\t\tthis.rawData[11] = raw[14];\n\t\tthis.rawData[12] = raw[3];\n\t\tthis.rawData[13] = raw[7];\n\t\tthis.rawData[14] = raw[11];\n\n\t\tthis._positionDirty = true;\n\t}\n\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\n\t{\n\n\t\t// internal export class use by rotations which have been tested\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tvar rad = degrees*MathConsts.DEGREES_TO_RADIANS;\n\t\tvar c:number = Math.cos(rad);\n\t\tvar s:number = Math.sin(rad);\n\t\tvar t:number = 1 - c;\n\t\tvar tmp1:number, tmp2:number;\n\n\t\tm.rawData[0] = c + x*x*t;\n\t\tm.rawData[5] = c + y*y*t;\n\t\tm.rawData[10] = c + z*z*t;\n\n\t\ttmp1 = x*y*t;\n\t\ttmp2 = z*s;\n\t\tm.rawData[1] = tmp1 + tmp2;\n\t\tm.rawData[4] = tmp1 - tmp2;\n\t\ttmp1 = x*z*t;\n\t\ttmp2 = y*s;\n\t\tm.rawData[8] = tmp1 + tmp2;\n\t\tm.rawData[2] = tmp1 - tmp2;\n\t\ttmp1 = y*z*t;\n\t\ttmp2 = x*s;\n\t\tm.rawData[9] = tmp1 - tmp2;\n\t\tm.rawData[6] = tmp1 + tmp2;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * [read-only] A Number that determines whether a matrix is invertible.\n\t */\n\tpublic get determinant():number\n\t{\n\t\treturn ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\n\t}\n\n\t/**\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\n\t * transformation's frame of reference.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\tif (this._positionDirty) {\n\t\t\tthis._positionDirty = false;\n\t\t\tthis._position.x = this.rawData[12];\n\t\t\tthis._position.y = this.rawData[13];\n\t\t\tthis._position.z = this.rawData[14];\n\t\t}\n\n\t\treturn this._position;\n\t}\n\n\tpublic invalidatePosition():void\n\t{\n\t\tthis._positionDirty = true;\n\t}\n\n\tpublic toFixed(decimalPlace:number):string\n\t{\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\n\t}\n}",
    "import {Point}\t\t\t\t\tfrom \"../geom/Point\";\nimport {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\nimport {ArgumentError}\t\t\tfrom \"../errors/ArgumentError\";\n\n/**\n * The Matrix export class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n *\n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n *\n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n *\n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n *\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n *\n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix export class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n *\n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n *\n * <p>The Matrix export class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n *\n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n *\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nexport class Matrix\n{\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic d:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>x</i> axis.\n\t */\n\tpublic tx:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>y</i> axis.\n\t */\n\tpublic ty:number;\n\n\t/**\n\t * Creates a new Matrix object with the specified parameters. In matrix\n\t * notation, the properties are organized like this:\n\t *\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n\t * constructor, it creates an <i>identity matrix</i> with the following\n\t * values:</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @return A Matrix object.\n\t */\n\tpublic clone():Matrix\n\t{\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Concatenates a matrix with the current matrix, effectively combining the\n\t * geometric effects of the two. In mathematical terms, concatenating two\n\t * matrixes is the same as combining them using matrix multiplication.\n\t *\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n\t *\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\n\t * you want to concatenate two matrixes without altering either of the two\n\t * source matrixes, first copy the source matrix by using the\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\n\t *\n\t * @param matrix The matrix to be concatenated to the source matrix.\n\t */\n\tpublic concat(matrix:Matrix):void\n\t{\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\n\t * object.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t} else if (column == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (column == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix object into the Vector3D\n\t * object. The w element of the Vector3D object will not be changed.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\n\t\t} else if (column == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.c;\n\t\t\tvector3D.z = 0;\n\t\t} else if (column == 1) {\n\t\t\tvector3D.x = this.b;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = 0;\n\t\t} else {\n\t\t\tvector3D.x = this.tx;\n\t\t\tvector3D.y = this.ty;\n\t\t\tvector3D.z = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Point object into the\n\t * calling Matrix object.\n\t *\n\t * @param sourceMatrix The Matrix object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceMatrix:Matrix):void\n\t{\n\t\tthis.a = sourceMatrix.a;\n\t\tthis.b = sourceMatrix.b;\n\t\tthis.c = sourceMatrix.c;\n\t\tthis.d = sourceMatrix.d;\n\t\tthis.tx = sourceMatrix.tx;\n\t\tthis.ty = sourceMatrix.ty;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (row == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\n\t * The w element of the Vector3D object will not be changed.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.b;\n\t\t\tvector3D.z = this.tx;\n\t\t} else if (row == 1) {\n\t\t\tvector3D.x = this.c;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = this.ty;\n\t\t} else {\n\t\t\tvector3D.setTo(0, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Includes parameters for scaling, rotation, and translation. When applied\n\t * to a matrix it sets the matrix's values based on those parameters.\n\t *\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\n\t * matrix as you would if you applied the <code>identity()</code>,\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n\t * 100, 100)</code> has the same effect as the following:</p>\n\t *\n\t * @param scaleX   The factor by which to scale horizontally.\n\t * @param scaleY   The factor by which scale vertically.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The number of pixels to translate(move) to the right\n\t *                 along the <i>x</i> axis.\n\t * @param ty       The number of pixels to translate(move) down along the\n\t *                 <i>y</i> axis.\n\t */\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = scaleX;\n\t\tthis.d = scaleY;\n\t\tthis.b = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Creates the specific style of matrix expected by the\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n\t * methods of the Graphics class. Width and height are scaled to a\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\n\t * height.\n\t *\n\t * <p>For example, consider a gradient with the following\n\t * characteristics:</p>\n\t *\n\t * <ul>\n\t *   <li><code>GradientType.LINEAR</code></li>\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n\t * 255]</code></li>\n\t *   <li><code>SpreadMethod.PAD</code></li>\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n\t * </ul>\n\t *\n\t * <p>The following illustrations show gradients in which the matrix was\n\t * defined using the <code>createGradientBox()</code> method with different\n\t * parameter settings:</p>\n\t *\n\t * @param width    The width of the gradient box.\n\t * @param height   The height of the gradient box.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The distance, in pixels, to translate to the right along\n\t *                 the <i>x</i> axis. This value is offset by half of the\n\t *                 <code>width</code> parameter.\n\t * @param ty       The distance, in pixels, to translate down along the\n\t *                 <i>y</i> axis. This value is offset by half of the\n\t *                 <code>height</code> parameter.\n\t */\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = width/1638.4;\n\t\tthis.d = height/1638.4;\n\n\t\tif (rotation != 0.0) {\n\t\t\tvar cos = Math.cos(rotation);\n\t\t\tvar sin = Math.sin(rotation);\n\n\t\t\tthis.b = sin*this.d;\n\t\t\tthis.c = -sin*this.a;\n\t\t\tthis.a *= cos;\n\t\t\tthis.d *= cos;\n\t\t} else {\n\t\t\tthis.b = this.c = 0;\n\t\t}\n\n\t\tthis.tx = tx + width/2;\n\t\tthis.ty = ty + height/2;\n\t}\n\n\t/**\n\t * Given a point in the pretransform coordinate space, returns the\n\t * coordinates of that point after the transformation occurs. Unlike the\n\t * standard transformation applied using the <code>transformPoint()</code>\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\n\t * does not consider the translation parameters <code>tx</code> and\n\t * <code>ty</code>.\n\t *\n\t * @param point The point for which you want to get the result of the matrix\n\t *              transformation.\n\t * @return The point resulting from applying the matrix transformation.\n\t */\n\tpublic deltaTransformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\n\t}\n\n\t/**\n\t * Sets each matrix property to a value that causes a null transformation. An\n\t * object transformed by applying an identity matrix will be identical to the\n\t * original.\n\t *\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n\t * <code>ty</code>=0.</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t */\n\tpublic identity():void\n\t{\n\t\tthis.a = 1;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 1;\n\t\tthis.tx = 0;\n\t\tthis.ty = 0;\n\t}\n\n\t/**\n\t * Performs the opposite transformation of the original matrix. You can apply\n\t * an inverted matrix to an object to undo the transformation performed when\n\t * applying the original matrix.\n\t */\n\tpublic invert():void\n\t{\n\t\tvar norm = this.a*this.d - this.b*this.c;\n\n\t\tif (norm == 0) {\n\t\t\tthis.a = this.b = this.c = this.d = 0;\n\t\t\tthis.tx = -this.tx;\n\t\t\tthis.ty = -this.ty;\n\t\t} else {\n\t\t\tnorm = 1.0/norm;\n\t\t\tvar a1 = this.d*norm;\n\t\t\tthis.d = this.a*norm;\n\t\t\tthis.a = a1;\n\t\t\tthis.b *= -norm;\n\t\t\tthis.c *= -norm;\n\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\n\t\t\tthis.tx = tx1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @param matrix The matrix for which you want to get the result of the matrix\n\t *               transformation.\n\t * @return A Matrix object.\n\t */\n\tpublic multiply(matrix:Matrix):Matrix\n\t{\n\t\tvar result = new Matrix();\n\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Applies a rotation transformation to the Matrix object.\n\t *\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n\t * Matrix object. In matrix notation, this is the same as concatenating the\n\t * current matrix with the following:</p>\n\t *\n\t * @param angle The rotation angle in radians.\n\t */\n\tpublic rotate(angle:number):void\n\t{\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\n\t\tvar a1 = this.a*cos - this.b*sin;\n\t\tthis.b = this.a*sin + this.b*cos;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*cos - this.d*sin;\n\t\tthis.d = this.c*sin + this.d*cos;\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\n\t\tthis.ty = this.tx*sin + this.ty*cos;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n\t * <code>sy</code>.\n\t *\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\n\t * is the same as concatenating the current matrix with the following\n\t * matrix:</p>\n\t *\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\n\t */\n\tpublic scale(sx:number, sy:number):void\n\t{\n\t\tthis.a *= sx;\n\t\tthis.b *= sy;\n\n\t\tthis.c *= sx;\n\t\tthis.d *= sy;\n\n\t\tthis.tx *= sx;\n\t\tthis.ty *= sy;\n\t}\n\n\t/**\n\t * Sets the members of Matrix to the specified values.\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a text value listing the properties of the Matrix object.\n\t *\n\t * @return A string containing the values of the properties of the Matrix\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n\t}\n\n\t/**\n\t * Returns the result of applying the geometric transformation represented by\n\t * the Matrix object to the specified point.\n\t *\n\t * @param point The point for which you want to get the result of the Matrix\n\t *              transformation.\n\t * @return The point resulting from applying the Matrix transformation.\n\t */\n\tpublic transformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\n\t}\n\n\t/**\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n\t * by the <code>dx</code> and <code>dy</code> parameters.\n\t *\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\n\t *           pixels.\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\n\t */\n\tpublic translate(dx:number, dy:number):void\n\t{\n\t\tthis.tx += dx;\n\t\tthis.ty += dy;\n\t}\n}",
    "/**\n * A Quaternion object which can be used to represent rotations.\n */\nexport class Orientation3D\n{\n\t/**\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\n\t * @type {string}\n\t */\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\n\n\t/**\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\n\t * @type {string}\n\t */\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\n\n\t/**\n\t * The quaternion orientation uses complex numbers.\n\t * @type {string}\n\t */\n\tpublic static QUATERNION:string = \"quaternion\";\n}",
    "import {PlaneClassification}\tfrom \"../geom/PlaneClassification\";\nimport {Vector3D}\t\t\t\tfrom \"../geom/Vector3D\";\n\nexport class Plane3D\n{\n\t/**\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\n\t */\n\tpublic d:number;\n\n\tpublic _iAlignment:number;\n\n\t// indicates the alignment of the plane\n\tpublic static ALIGN_ANY:number = 0;\n\tpublic static ALIGN_XY_AXIS:number = 1;\n\tpublic static ALIGN_YZ_AXIS:number = 2;\n\tpublic static ALIGN_XZ_AXIS:number = 3;\n\n\t/**\n\t * Create a Plane3D with ABCD coefficients\n\t */\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\n\t\tif (a == 0 && b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (b == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (a == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\n\t * @param p0 Vector3D\n\t * @param p1 Vector3D\n\t * @param p2 Vector3D\n\t */\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D):void\n\t{\n\t\tvar d1x:number = p1.x - p0.x;\n\t\tvar d1y:number = p1.y - p0.y;\n\t\tvar d1z:number = p1.z - p0.z;\n\n\t\tvar d2x:number = p2.x - p0.x;\n\t\tvar d2y:number = p2.y - p0.y;\n\t\tvar d2z:number = p2.z - p0.z;\n\n\t\tthis.a = d1y*d2z - d1z*d2y;\n\t\tthis.b = d1z*d2x - d1x*d2z;\n\t\tthis.c = d1x*d2y - d1y*d2x;\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\n\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\n\t * @param normal Vector3D\n\t * @param point  Vector3D\n\t */\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D):void\n\t{\n\t\tthis.a = normal.x;\n\t\tthis.b = normal.y;\n\t\tthis.c = normal.z;\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Normalize this Plane3D\n\t * @return Plane3D This Plane3D.\n\t */\n\tpublic normalize():Plane3D\n\t{\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\n\t\tthis.a *= len;\n\t\tthis.b *= len;\n\t\tthis.c *= len;\n\t\tthis.d *= len;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the signed distance between this Plane3D and the point p.\n\t * @param p Vector3D\n\t * @returns Number\n\t */\n\tpublic distance(p:Vector3D):number\n\t{\n\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\n\n\t\t\treturn this.a*p.x - this.d;\n\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\n\t\t\treturn this.b*p.y - this.d;\n\t\t}\n\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\n\n\t\t\treturn this.c*p.z - this.d;\n\n\t\t} else {\n\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\n\t * @param p Vector3D\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\n\t */\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\n\t{\n\t\t// check NaN\n\t\tif (this.d != this.d)\n\t\t\treturn PlaneClassification.FRONT;\n\n\t\tvar len:number;\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\n\t\t\tlen = this.c*p.z - this.d; else\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\tif (len < -epsilon)\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\n\t\t\treturn PlaneClassification.FRONT; else\n\t\t\treturn PlaneClassification.INTERSECT;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\n\t}\n}",
    "export class PlaneClassification\n{\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\n\tpublic static BACK:number = 0;\n\tpublic static FRONT:number = 1;\n\n\tpublic static IN:number = 0;\n\tpublic static OUT:number = 1;\n\tpublic static INTERSECT:number = 2;\n\n}",
    "/**\n * The Point object represents a location in a two-dimensional coordinate\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\n * represents the vertical axis.\n *\n * <p>The following code creates a point at(0,0):</p>\n *\n * <p>Methods and properties of the following classes use Point objects:</p>\n *\n * <ul>\n *   <li>BitmapData</li>\n *   <li>DisplayObject</li>\n *   <li>DisplayObjectContainer</li>\n *   <li>DisplacementMapFilter</li>\n *   <li>NativeWindow</li>\n *   <li>Matrix</li>\n *   <li>Rectangle</li>\n * </ul>\n *\n * <p>You can use the <code>new Point()</code> constructor to create a Point\n * object.</p>\n */\nexport class Point\n{\n\t/**\n\t * The horizontal coordinate of the point. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The vertical coordinate of the point. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The length of the line segment from(0,0) to this point.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\n\t}\n\n\t/**\n\t * Creates a new point. If you pass no parameters to this method, a point is\n\t * created at(0,0).\n\t *\n\t * @param x The horizontal coordinate.\n\t * @param y The vertical coordinate.\n\t */\n\tconstructor(x:number = 0, y:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t/**\n\t * Adds the coordinates of another point to the coordinates of this point to\n\t * create a new point.\n\t *\n\t * @param v The point to be added.\n\t * @return The new point.\n\t */\n\tpublic add(v:Point):Point\n\t{\n\t\treturn new Point(this.x + v.x, this.y + v.y);\n\t}\n\n\t/**\n\t * Creates a copy of this Point object.\n\t *\n\t * @return The new Point object.\n\t */\n\tpublic clone():Point\n\t{\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\tpublic copyFrom(sourcePoint:Point):void\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether two points are equal. Two points are equal if they have\n\t * the same <i>x</i> and <i>y</i> values.\n\t *\n\t * @param toCompare The point to be compared.\n\t * @return A value of <code>true</code> if the object is equal to this Point\n\t *         object; <code>false</code> if it is not equal.\n\t */\n\tpublic equals(toCompare:Point):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\n\t}\n\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current point is\n\t *                 (0,5), and you normalize it to 1, the point returned is\n\t *                  at(0,1).\n\t */\n\tpublic normalize(thickness:number = 1):void\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\treturn;\n\t\t}\n\t\tthrow \"Cannot divide by zero length.\";\n\t}\n\n\t/**\n\t * Offsets the Point object by the specified amount. The value of\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\n\t * value of <i>y</i> to create the new <i>y</i> value.\n\t *\n\t * @param dx The amount by which to offset the horizontal coordinate,\n\t *           <i>x</i>.\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\n\t */\n\tpublic offset(dx:number, dy:number):void\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\tpublic setTo(xa:number, ya:number):void\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t}\n\n\t/**\n\t * Subtracts the coordinates of another point from the coordinates of this\n\t * point to create a new point.\n\t *\n\t * @param v The point to be subtracted.\n\t * @return The new point.\n\t */\n\tpublic subtract(v:Point):Point\n\t{\n\t\treturn new Point(this.x - v.x, this.y - v.y);\n\t}\n\n\t/**\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\n\t *\n\t * @return The string representation of the coordinates.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\n\t}\n\n\t/**\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @return The distance between the first and second points.\n\t */\n\tpublic static distance(pt1:Point, pt2:Point):number\n\t{\n\t\tvar dx:number = pt2.x - pt1.x;\n\t\tvar dy:number = pt2.y - pt1.y;\n\n\t\treturn Math.sqrt(dx*dx + dy*dy);\n\t}\n\n\t/**\n\t * Determines a point between two specified points. The parameter\n\t * <code>f</code> determines where the new interpolated point is located\n\t * relative to the two end points specified by parameters <code>pt1</code>\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\n\t * point(parameter <code>pt2</code>).\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @param f   The level of interpolation between the two points. Indicates\n\t *            where the new point will be, along the line between\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\n\t *            <code>pt2</code> is returned.\n\t * @return The new, interpolated point.\n\t */\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\n\t{\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\n\t}\n\n\t/**\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\n\t *\n\t * @param len   The length coordinate of the polar pair.\n\t * @param angle The angle, in radians, of the polar pair.\n\t * @return The Cartesian point.\n\t */\n\tpublic static polar(len:number, angle:number):Point\n\t{\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\n\t}\n}\n",
    "export class PoissonLookup\n{\n\tpublic static _distributions:Array<Array<number>>;\n\n\tpublic static initDistributions():void\n\t{\n\t\t// precalculated for best control\n\t\tthis._distributions = new Array<Array<number>>();\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\n\t}\n\n\tpublic static getDistribution(n:number /*int*/):Array<number>\n\t{\n\t\tif (!this._distributions)\n\t\t\tthis.initDistributions();\n\n\t\tif (n < 2 || n > 32)\n\t\t\treturn null;\n\n\t\treturn this._distributions[n - 1];\n\t}\n}",
    "import {Matrix3DUtils}\t\tfrom \"../geom/Matrix3DUtils\";\nimport {Orientation3D}\t\tfrom \"../geom/Orientation3D\";\nimport {Matrix3D}\t\t\t\tfrom \"../geom/Matrix3D\";\nimport {Vector3D}\t\t\t\tfrom \"../geom/Vector3D\";\n\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nexport class Quaternion\n{\n\t/**\n\t * The x value of the quaternion.\n\t */\n\tpublic x:number = 0;\n\n\t/**\n\t * The y value of the quaternion.\n\t */\n\tpublic y:number = 0;\n\n\t/**\n\t * The z value of the quaternion.\n\t */\n\tpublic z:number = 0;\n\n\t/**\n\t * The w value of the quaternion.\n\t */\n\tpublic w:number = 1;\n\n\t/**\n\t * Creates a new Quaternion object.\n\t * @param x The x value of the quaternion.\n\t * @param y The y value of the quaternion.\n\t * @param z The z value of the quaternion.\n\t * @param w The w value of the quaternion.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Returns the magnitude of the quaternion object.\n\t */\n\tpublic get magnitude():number\n\t{\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t}\n\n\t/**\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\n\t *\n\t * @param    qa    The first quaternion in the multiplication.\n\t * @param    qb    The second quaternion in the multiplication.\n\t */\n\tpublic multiply(qa:Quaternion, qb:Quaternion):void\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t}\n\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\n\t{\n\t\t//target ||= new Quaternion();\n\t\tif (target === null) {\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\n\t\tvar x2:number = vector.x;\n\t\tvar y2:number = vector.y;\n\t\tvar z2:number = vector.z;\n\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given rotation around a vector.\n\t *\n\t * @param    axis    The axis around which to rotate\n\t * @param    angle    The angle in radians of the rotation.\n\t */\n\tpublic fromAxisAngle(axis:Vector3D, angle:number):void\n\t{\n\t\tvar sin_a:number = Math.sin(angle/2);\n\t\tvar cos_a:number = Math.cos(angle/2);\n\n\t\tthis.x = axis.x*sin_a;\n\t\tthis.y = axis.y*sin_a;\n\t\tthis.z = axis.z*sin_a;\n\t\tthis.w = cos_a;\n\n\t\tthis.normalize();\n\t}\n\n\t/**\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number):void\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\n\n\t\t// shortest direction\n\t\tif (dot < 0) {\n\t\t\tdot = -dot;\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tif (dot < 0.95) {\n\t\t\t// interpolate angle linearly\n\t\t\tvar angle:number = Math.acos(dot);\n\t\t\tvar s:number = 1/Math.sin(angle);\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\n\t\t\tthis.w = w1*s1 + w2*s2;\n\t\t\tthis.x = x1*s1 + x2*s2;\n\t\t\tthis.y = y1*s1 + y2*s2;\n\t\t\tthis.z = z1*s1 + z2*s2;\n\t\t} else {\n\t\t\t// nearly identical angle, interpolate linearly\n\t\t\tthis.w = w1 + t*(w2 - w1);\n\t\t\tthis.x = x1 + t*(x2 - x1);\n\t\t\tthis.y = y1 + t*(y2 - y1);\n\t\t\tthis.z = z1 + t*(z2 - z1);\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\t\tthis.w *= len;\n\t\t\tthis.x *= len;\n\t\t\tthis.y *= len;\n\t\t\tthis.z *= len;\n\t\t}\n\t}\n\n\t/**\n\t * Linearly interpolates between two quaternions.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number):void\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar len:number;\n\n\t\t// shortest direction\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tthis.w = w1 + t*(w2 - w1);\n\t\tthis.x = x1 + t*(x2 - x1);\n\t\tthis.y = y1 + t*(y2 - y1);\n\t\tthis.z = z1 + t*(z2 - z1);\n\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\tthis.w *= len;\n\t\tthis.x *= len;\n\t\tthis.y *= len;\n\t\tthis.z *= len;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given euler rotation.\n\t *\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\n\t * @param    az        The angle in radians of the rotation around the az axis.\n\t */\n\tpublic fromEulerAngles(ax:number, ay:number, az:number):void\n\t{\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\n\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\n\t}\n\n\t/**\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\n\t * @return The Vector3D containing the Euler angles.\n\t */\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\n\t{\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Normalises the quaternion object.\n\t */\n\tpublic normalize(val:number = 1):void\n\t{\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\n\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t\tthis.z *= mag;\n\t\tthis.w *= mag;\n\t}\n\n\t/**\n\t * Used to trace the values of a quaternion.\n\t *\n\t * @return A string representation of the quaternion object.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\n\t}\n\n\t/**\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\n\t * @return A Matrix3D object representing an equivalent rotation.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\trawData[0] = xx - yy - zz + ww;\n\t\trawData[4] = xy2 - zw2;\n\t\trawData[8] = xz2 + yw2;\n\t\trawData[12] = 0;\n\t\trawData[1] = xy2 + zw2;\n\t\trawData[5] = -xx + yy - zz + ww;\n\t\trawData[9] = yz2 - xw2;\n\t\trawData[13] = 0;\n\t\trawData[2] = xz2 - yw2;\n\t\trawData[6] = yz2 + xw2;\n\t\trawData[10] = -xx - yy + zz + ww;\n\t\trawData[14] = 0;\n\t\trawData[3] = 0.0;\n\t\trawData[7] = 0.0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\n\t\tif (!target)\n\t\t\treturn new Matrix3D(rawData);\n\t\telse\n\t\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\n\t */\n\tpublic fromMatrix(matrix:Matrix3D):void\n\t{\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t}\n\n\t/**\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\n\t */\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false):void\n\t{\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\ttarget[0] = xx - yy - zz + ww;\n\t\ttarget[1] = xy2 - zw2;\n\t\ttarget[2] = xz2 + yw2;\n\t\ttarget[4] = xy2 + zw2;\n\t\ttarget[5] = -xx + yy - zz + ww;\n\t\ttarget[6] = yz2 - xw2;\n\t\ttarget[8] = xz2 - yw2;\n\t\ttarget[9] = yz2 + xw2;\n\t\ttarget[10] = -xx - yy + zz + ww;\n\t\ttarget[3] = target[7] = target[11] = 0;\n\n\t\tif (!exclude4thRow) {\n\t\t\ttarget[12] = target[13] = target[14] = 0;\n\t\t\ttarget[15] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Clones the quaternion.\n\t * @return An exact duplicate of the current Quaternion.\n\t */\n\tpublic clone():Quaternion\n\t{\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Rotates a point.\n\t * @param vector The Vector3D object to be rotated.\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\n\t * @return A Vector3D object containing the rotated point.\n\t */\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\t// p*q'\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the data from a quaternion into this instance.\n\t * @param q The quaternion to copy from.\n\t */\n\tpublic copyFrom(q:Quaternion):void\n\t{\n\t\tthis.x = q.x;\n\t\tthis.y = q.y;\n\t\tthis.z = q.z;\n\t\tthis.w = q.w;\n\t}\n}",
    "import {Point}\t\t\t\t\tfrom \"../geom/Point\";\n\n/**\n * A Rectangle object is an area defined by its position, as indicated by its\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the Rectangle export class are independent of\n * each other; changing the value of one property has no effect on the others.\n * However, the <code>right</code> and <code>bottom</code> properties are\n * integrally related to those four properties. For example, if you change the\n * value of the <code>right</code> property, the value of the\n * <code>width</code> property changes; if you change the <code>bottom</code>\n * property, the value of the <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Rectangle objects:</p>\n *\n * <ul>\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\n * <code>merge()</code>, <code>paletteMap()</code>,\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\n * BitmapData class</li>\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\n * DisplayObject class</li>\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\n * class</li>\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\n * method of the Sprite class</li>\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\n * method of the PrintJob class</li>\n * </ul>\n *\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\n * Rectangle object.</p>\n *\n * <p><b>Note:</b> The Rectangle export class does not define a rectangular Shape\n * display object. To draw a rectangular Shape object onscreen, use the\n * <code>drawRect()</code> method of the Graphics class.</p>\n */\nexport class Rectangle\n{\n\tprivate _size:Point;\n\tprivate _bottomRight:Point;\n\tprivate _topLeft:Point;\n\n\t/**\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>x</code> property of a Rectangle object has no\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>y</code> property of a Rectangle object has no\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's bottom-right corner, determined by\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRight():Point\n\t{\n\t\tif (this._bottomRight == null)\n\t\t\tthis._bottomRight = new Point();\n\n\t\tthis._bottomRight.x = this.x + this.width;\n\t\tthis._bottomRight.y = this.y + this.height;\n\n\t\treturn this._bottomRight;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>left</code> property of a Rectangle object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\t/**\n\t * The size of the Rectangle object, expressed as a Point object with the\n\t * values of the <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic get size():Point\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Point();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>top</code> property of a Rectangle object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's top-left corner, determined by the\n\t * <i>x</i> and <i>y</i> coordinates of the point.\n\t */\n\tpublic get topLeft():Point\n\t{\n\t\tif (this._topLeft == null)\n\t\t\tthis._topLeft = new Point();\n\n\t\tthis._topLeft.x = this.x;\n\t\tthis._topLeft.y = this.y;\n\n\t\treturn this._topLeft;\n\t}\n\n\t/**\n\t * Creates a new Rectangle object with the top-left corner specified by the\n\t * <code>x</code> and <code>y</code> parameters and with the specified\n\t * <code>width</code> and <code>height</code> parameters. If you call this\n\t * public without parameters, a rectangle with <code>x</code>,\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\n\t * to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param width  The width of the rectangle, in pixels.\n\t * @param height The height of the rectangle, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\t/**\n\t * Returns a new Rectangle object with the same values for the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties as the original Rectangle object.\n\t *\n\t * @return A new Rectangle object with the same values for the\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\n\t *         <code>height</code> properties as the original Rectangle object.\n\t */\n\tpublic clone():Rectangle\n\t{\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object. This method is similar to the\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\n\t * object as a parameter.\n\t *\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\n\t *              coordinates.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(point:Point):boolean\n\t{\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n\t}\n\n\t/**\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\n\t * parameter is contained within this Rectangle object. A Rectangle object is\n\t * said to contain another if the second Rectangle object falls entirely\n\t * within the boundaries of the first.\n\t *\n\t * @param rect The Rectangle object being checked.\n\t * @return A value of <code>true</code> if the Rectangle object that you\n\t *         specify is contained by this Rectangle object; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic containsRect(rect:Rectangle):boolean\n\t{\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\n\t}\n\n\t/**\n\t * Copies all of rectangle data from the source Rectangle object into the\n\t * calling Rectangle object.\n\t *\n\t * @param sourceRect The Rectangle object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceRect:Rectangle):void\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Rectangle object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of an object against the same properties of\n\t * this Rectangle object.\n\t *\n\t * @param toCompare The rectangle to compare to this Rectangle object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\n\t *         and <code>height</code> properties as this Rectangle object;\n\t *         otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Rectangle):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object by the specified amounts, in\n\t * pixels. The center point of the Rectangle object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, and to\n\t * the top and the bottom by the <code>dy</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Rectangle\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the rectangle:\n\t * @param dy The value to be added to the top and the bottom of the\n\t *           Rectangle. The following equation is used to calculate the new\n\t *           height and position of the rectangle:\n\t */\n\tpublic inflate(dx:number, dy:number):void\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object. This method is similar to the\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param point The <code>x</code> property of this Point object is used to\n\t *              increase the horizontal dimension of the Rectangle object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Rectangle object.\n\t */\n\tpublic inflatePoint(point:Point):void\n\t{\n\t\tthis.x -= point.x/2;\n\t\tthis.y -= point.y/2;\n\t\tthis.width += point.x/2;\n\t\tthis.height += point.y/2;\n\t}\n\n\t/**\n\t * If the Rectangle object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object, returns the area of\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\n\t * this method returns an empty Rectangle object with its properties set to\n\t * 0.\n\t *\n\t * @param toIntersect The Rectangle object to compare against to see if it\n\t *                    intersects with this Rectangle object.\n\t * @return A Rectangle object that equals the area of intersection. If the\n\t *         rectangles do not intersect, this method returns an empty\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\n\t *         properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Rectangle):Rectangle\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Rectangle = new Rectangle();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Rectangle();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of the specified Rectangle object to see if\n\t * it intersects with this Rectangle object.\n\t *\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\n\t *                    object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Rectangle object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Rectangle):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\n\t}\n\n\t/**\n\t * Determines whether or not this Rectangle object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Rectangle object's width or\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object, as determined by its\n\t * top-left corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number):void\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object using a Point object as a\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\n\t * method, except that it takes a Point object as a parameter.\n\t *\n\t * @param point A Point object to use to offset this Rectangle object.\n\t */\n\tpublic offsetPoint(point:Point):void\n\t{\n\t\tthis.x += point.x;\n\t\tthis.y += point.y;\n\t}\n\n\t/**\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n\t * empty if its width or height is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty():void\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t}\n\n\t/**\n\t * Sets the members of Rectangle to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param widtha  The width of the rectangle, in pixels.\n\t * @param heighta The height of the rectangle, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number):void\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal and vertical\n\t * positions and the width and height of the Rectangle object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\n\t *         <code>width</code>, and <code>height</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n\t}\n\n\t/**\n\t * Adds two rectangles together to create a new Rectangle object, by filling\n\t * in the horizontal and vertical space between the two rectangles.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\n\t * <code>0</code> as the height or width value, such as: <code>var\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\n\t *\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\n\t * @return A new Rectangle object that is the union of the two rectangles.\n\t */\n\tpublic union(toUnion:Rectangle):Rectangle\n\t{\n\t\tvar u:Rectangle = new Rectangle();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\treturn u;\n\t}\n}",
    "import {PlaneClassification}\tfrom \"../geom/PlaneClassification\";\nimport {Vector3D}\t\t\t\tfrom \"../geom/Vector3D\";\n\nexport class Sphere\n{\n\t/**\n\t *\n\t */\n\tpublic x:number;\n\n\t/**\n\t *\n\t */\n\tpublic y:number;\n\n\t/**\n\t *\n\t */\n\tpublic z:number;\n\n\t/**\n\t *\n\t */\n\tpublic radius:number;\n\n\t/**\n\t * Create a Sphere with ABCD coefficients\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, radius:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.radius = radius;\n\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar px:number = position.x - this.x, py:number = position.y - this.y, pz:number = position.z - this.z;\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\n\t\tvar rayEntryDistance:number;\n\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\n\t\tvar c:number = px*px + py*py + pz*pz - this.radius*this.radius;\n\t\tvar det:number = b*b - 4*a*c;\n\n\t\tif (det >= 0) { // ray goes through sphere\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\n\t\t\tif (rayEntryDistance >= 0) {\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\n\t\t\t\ttargetNormal.normalize();\n\n\t\t\t\treturn rayEntryDistance;\n\t\t\t}\n\t\t}\n\n\t\t// ray misses sphere\n\t\treturn -1;\n\t}\n\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\tvar px:number = position.x - this.x;\n\t\tvar py:number = position.y - this.y;\n\t\tvar pz:number = position.z - this.z;\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\n\t\treturn distance <= this.radius;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\n\t}\n}",
    "/**\n * The Vector3D export class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n *\n * <p>The Vector3D export class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n *\n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nexport class Vector3D\n{\n\t/**\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\n\t */\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\n\n\t/**\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\n\t */\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\n\n\t/**\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\n\t */\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\n\n\t/**\n\t * The first element of a Vector3D object, such as the x coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/*\n\t *The second element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The third element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic z:number;\n\n\t/**\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\n\t * and z properties) can hold data such as the angle of rotation. The\n\t * default value is 0.\n\t *\n\t * <p>Quaternion notation employs an angle as the fourth element in\n\t * its calculation of three-dimensional rotation. The w property can\n\t * be used to define the angle of rotation about the Vector3D object.\n\t * The combination of the rotation angle and the coordinates (x,y,z)\n\t * determines the display object's orientation.</p>\n\t *\n\t * <p>In addition, the w property can be used as a perspective warp\n\t * factor for a projected three-dimensional position or as a projection\n\t * transform value in representing a three-dimensional coordinate\n\t * projected into the two-dimensional space. For example, you can\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\n\t * property, that, when applied to a Vector3D object, produces a\n\t * transform value in the Vector3D object's fourth element (the w\n\t * property). Dividing the Vector3D object's other elements by the\n\t * transform value then produces a projected Vector3D object. You can\n\t * use the <code>Vector3D.project()</code> method to divide the first\n\t * three elements of a Vector3D object by its fourth element.</p>\n\t */\n\tpublic w:number;\n\n\t/**\n\t * The length, magnitude, of the current Vector3D object from the\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\n\t * property is ignored. A unit vector has a length or magnitude of\n\t * one.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.lengthSquared);\n\t}\n\n\t/**\n\t * The square of the length of the current Vector3D object, calculated\n\t * using the x, y, and z properties. The w property is ignored. Use the\n\t * <code>lengthSquared()</code> method whenever possible instead of the\n\t * slower <code>Math.sqrt()</code> method call of the\n\t * <code>Vector3D.length()</code> method.\n\t */\n\tpublic get lengthSquared():number\n\t{\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\n\t}\n\n\t/**\n\t * Creates an instance of a Vector3D object. If you do not specify a\n\t * parameter for the constructor, a Vector3D object is created with\n\t * the elements (0,0,0,0).\n\t *\n\t * @param x The first element, such as the x coordinate.\n\t * @param y The second element, such as the y coordinate.\n\t * @param z The third element, such as the z coordinate.\n\t * @param w An optional element for additional data such as the angle\n\t *          of rotation.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Adds the value of the x, y, and z elements of the current Vector3D\n\t * object to the values of the x, y, and z elements of another Vector3D\n\t * object. The <code>add()</code> method does not change the current\n\t * Vector3D object. Instead, it returns a new Vector3D object with\n\t * the new values.\n\t *\n\t * <p>The result of adding two vectors together is a resultant vector.\n\t * One way to visualize the result is by drawing a vector from the\n\t * origin or tail of the first vector to the end or head of the second\n\t * vector. The resultant vector is the distance between the origin\n\t * point of the first vector and the end point of the second vector.\n\t * </p>\n\t */\n\tpublic add(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\n\t}\n\n\t/**\n\t * Returns the angle in radians between two vectors. The returned angle\n\t * is the smallest radian the first Vector3D object rotates until it\n\t * aligns with the second Vector3D object.\n\t *\n\t * <p>The <code>angleBetween()</code> method is a static method. You\n\t * can use it directly as a method of the Vector3D class.</p>\n\t *\n\t * <p>To convert a degree to a radian, you can use the following\n\t * formula:</p>\n\t *\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\n\t *\n\t * @param a The first Vector3D object.\n\t * @param b The second Vector3D object.\n\t * @returns The angle between two Vector3D objects.\n\t */\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\n\t{\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is an exact copy of the current\n\t * Vector3D object.\n\t *\n\t * @returns A new Vector3D object that is a copy of the current\n\t * Vector3D object.\n\t */\n\tpublic clone():Vector3D\n\t{\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\n\t}\n\n\tpublic static combine(a:Vector3D, b:Vector3D, ascl:number, bscl:number):Vector3D\n\t{\n\t\treturn new Vector3D(a.x*ascl + b.x*bscl, a.y*ascl + b.y*bscl, a.z*ascl + b.z*bscl);\n\t}\n\n\t/**\n\t * Copies all of vector data from the source Vector3D object into the\n\t * calling Vector3D object.\n\t *\n\t * @param src The Vector3D object from which to copy the data.\n\t */\n\tpublic copyFrom(src:Vector3D):void\n\t{\n\t\tthis.x = src.x;\n\t\tthis.y = src.y;\n\t\tthis.z = src.z;\n\t\tthis.w = src.w;\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is perpendicular (at a right\n\t * angle) to the current Vector3D and another Vector3D object. If the\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\n\t * Vector3D objects are parallel to each other.\n\t *\n\t * <p>You can use the normalized cross product of two vertices of a\n\t * polygon surface with the normalized vector of the camera or eye\n\t * viewpoint to get a dot product. The value of the dot product can\n\t * identify whether a surface of a three-dimensional object is hidden\n\t * from the viewpoint.</p>\n\t *\n\t * @param a A second Vector3D object.\n\t * @returns A new Vector3D object that is perpendicular to the current\n\t *          Vector3D object and the Vector3D object specified as the\n\t *          parameter.\n\t */\n\tpublic crossProduct(a:Vector3D, t:Vector3D = null):Vector3D\n\t{\n\t\tif (t == null)\n\t\t\tt = new Vector3D();\n\n\t\tt.x = this.y*a.z - this.z*a.y;\n\t\tt.y = this.z*a.x - this.x*a.z;\n\t\tt.z = this.x*a.y - this.y*a.x;\n\n\t\treturn t;\n\t}\n\n\t/**\n\t * Decrements the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of\n\t * specified Vector3D object. Unlike the\n\t * <code>Vector3D.subtract()</code> method, the\n\t * <code>decrementBy()</code> method changes the current Vector3D\n\t * object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object containing the values to subtract from\n\t *          the current Vector3D object.\n\t */\n\tpublic decrementBy(a:Vector3D):void\n\t{\n\t\tthis.x -= a.x;\n\t\tthis.y -= a.y;\n\t\tthis.z -= a.z;\n\t}\n\n\t/**\n\t * Returns the distance between two Vector3D objects. The\n\t * <code>distance()</code> method is a static method. You can use it\n\t * directly as a method of the Vector3D export class to get the Euclidean\n\t * distance between two three-dimensional points.\n\t *\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\n\t * @returns The distance between two Vector3D objects.\n\t */\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\n\t{\n\t\tvar x:number = (pt1.x - pt2.x);\n\t\tvar y:number = (pt1.y - pt2.y);\n\t\tvar z:number = (pt1.z - pt2.z);\n\t\treturn Math.sqrt(x*x + y*y + z*z);\n\t}\n\n\t/**\n\t * If the current Vector3D object and the one specified as the\n\t * parameter are unit vertices, this method returns the cosine of the\n\t * angle between the two vertices. Unit vertices are vertices that\n\t * point to the same direction but their length is one. They remove the\n\t * length of the vector as a factor in the result. You can use the\n\t * <code>normalize()</code> method to convert a vector to a unit\n\t * vector.\n\t *\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\n\t * vertices. It is also used in backface culling or lighting\n\t * calculations. Backface culling is a procedure for determining which\n\t * surfaces are hidden from the viewpoint. You can use the normalized\n\t * vertices from the camera, or eye, viewpoint and the cross product of\n\t * the vertices of a polygon surface to get the dot product. If the dot\n\t * product is less than zero, then the surface is facing the camera or\n\t * the viewer. If the two unit vertices are perpendicular to each\n\t * other, they are orthogonal and the dot product is zero. If the two\n\t * vertices are parallel to each other, the dot product is one.</p>\n\t *\n\t * @param a The second Vector3D object.\n\t * @returns A scalar which is the dot product of the current Vector3D\n\t *          object and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#crossProduct()\n\t * @see away.geom.Vector3D#normalize()\n\t */\n\tpublic dotProduct(a:Vector3D):number\n\t{\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\n\t}\n\n\t/**\n\t * Determines whether two Vector3D objects are equal by comparing the\n\t * x, y, and z elements of the current Vector3D object with a\n\t * specified Vector3D object. If the values of these elements are the\n\t * same, the two Vector3D objects are equal. If the second optional\n\t * parameter is set to true, all four elements of the Vector3D objects,\n\t * including the w property, are compared.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is equal\n\t *          to the current Vector3D object; false if it is not equal.\n\t */\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\n\t}\n\n\t/**\n\t * Increments the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of a\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n\t * method, the <code>incrementBy()</code> method changes the current\n\t * Vector3D object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object to be added to the current Vector3D\n\t *          object.\n\t */\n\tpublic incrementBy(a:Vector3D):void\n\t{\n\t\tthis.x += a.x;\n\t\tthis.y += a.y;\n\t\tthis.z += a.z;\n\t}\n\n\t/**\n\t * Compares the elements of the current Vector3D object with the\n\t * elements of a specified Vector3D object to determine whether they\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\n\t * value of all the elements of the two vertices are equal, or the\n\t * result of the comparison is within the tolerance range. The\n\t * difference between two elements must be less than the number\n\t * specified as the tolerance parameter. If the third optional\n\t * parameter is set to <code>true</code>, all four elements of the\n\t * Vector3D objects, including the <code>w</code> property, are\n\t * compared. Otherwise, only the x, y, and z elements are included in\n\t * the comparison.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param tolerance A number determining the tolerance factor. If the\n\t *                  difference between the values of the Vector3D\n\t *                  element specified in the toCompare parameter and\n\t *                  the current Vector3D element is less than the\n\t *                  tolerance number, the two values are considered\n\t *                  nearly equal.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is nearly\n\t *          equal to the current Vector3D object; false if it is not\n\t *          equal.\n\t *\n\t * @see away.geom.Vector3D#equals()\n\t */\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\n\t{\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n\t}\n\n\t/**\n\t * Sets the current Vector3D object to its inverse. The inverse object\n\t * is also considered the opposite of the original object. The value of\n\t * the x, y, and z properties of the current Vector3D object is changed\n\t * to -x, -y, and -z.\n\t */\n\tpublic negate():void\n\t{\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t\tthis.z = -this.z;\n\t}\n\n\t/**\n\t * Converts a Vector3D object to a unit vector by dividing the first\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\n\t * are vertices that have a direction but their length is one. They\n\t * simplify vector calculations by removing length as a factor.\n\t */\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current\n\t *                  Vector3D object is (0,3,4), and you normalize it to\n\t *                  1, the point returned is at(0,0.6,0.8).\n\t */\n\tpublic normalize(thickness:number = 1):void\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\tthis.z *= invLength;\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\n\t * <code>z</code> properties of the current Vector3D object by the\n\t * value of its <code>w</code> property.\n\t *\n\t * <p>If the current Vector3D object is the result of multiplying a\n\t * Vector3D object by a projection Matrix3D object, the w property can\n\t * hold the transform value. The <code>project()</code> method then can\n\t * complete the projection by dividing the elements by the\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n\t * property to create a projection Matrix3D object.</p>\n\t */\n\tpublic project():void\n\t{\n\t\tthis.x /= this.w;\n\t\tthis.y /= this.w;\n\t\tthis.z /= this.w;\n\t}\n\n\t/**\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\n\t * number specified in the parameter. For example, if the vector is\n\t * scaled by ten, the result is a vector that is ten times longer. The\n\t * scalar can also change the direction of the vector. Multiplying the\n\t * vector by a negative number reverses its direction.\n\t *\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\n\n\t */\n\tpublic scaleBy(s:number):void\n\t{\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\t\tthis.z *= s;\n\t}\n\n\t/**\n\t * Sets the members of Vector3D to the specified values\n\t *\n\t * @param xa The first element, such as the x coordinate.\n\t * @param ya The second element, such as the y coordinate.\n\t * @param za The third element, such as the z coordinate.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number):void\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t}\n\n\t/**\n\t * Subtracts the value of the x, y, and z elements of the current\n\t * Vector3D object from the values of the x, y, and z elements of\n\t * another Vector3D object. The <code>subtract()</code> method does not\n\t * change the current Vector3D object. Instead, this method returns a\n\t * new Vector3D object with the new values.\n\t *\n\t * @param a The Vector3D object to be subtracted from the current\n\t *          Vector3D object.\n\t * @returns A new Vector3D object that is the difference between the\n\t *          current Vector3D and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#decrementBy()\n\t */\n\tpublic subtract(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n\t}\n\n\t/**\n\t * Returns a string representation of the current Vector3D object. The\n\t * string contains the values of the x, y, and z properties.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n\t}\n}",
    "export {Box}\t\t\t\t\t\t\tfrom \"./geom/Box\";\nexport {ColorTransform}\t\t\t\t\tfrom \"./geom/ColorTransform\";\nexport {MathConsts}\t\t\t\t\t\tfrom \"./geom/MathConsts\";\nexport {Matrix}\t\t\t\t\t\t\tfrom \"./geom/Matrix\";\nexport {Matrix3D}\t\t\t\t\t\tfrom \"./geom/Matrix3D\";\nexport {Matrix3DUtils}\t\t\t\t\tfrom \"./geom/Matrix3DUtils\";\nexport {Orientation3D}\t\t\t\t\tfrom \"./geom/Orientation3D\";\nexport {Plane3D}\t\t\t\t\t\tfrom \"./geom/Plane3D\";\nexport {PlaneClassification}\t\t\tfrom \"./geom/PlaneClassification\";\nexport {Point}\t\t\t\t\t\t\tfrom \"./geom/Point\";\nexport {PoissonLookup}\t\t\t\t\tfrom \"./geom/PoissonLookup\";\nexport {Quaternion}\t\t\t\t\t\tfrom \"./geom/Quaternion\";\nexport {Rectangle}\t\t\t\t\t\tfrom \"./geom/Rectangle\";\nexport {Sphere}\t\t\t\t\t\t\tfrom \"./geom/Sphere\";\nexport {Vector3D}\t\t\t\t\t\tfrom \"./geom/Vector3D\";",
    "import {Image2D}\t\t\t\t\tfrom \"../image/Image2D\";\nimport {BlendMode}\t\t\t\tfrom \"../image/BlendMode\";\nimport {ColorTransform}\t\t\tfrom \"../geom/ColorTransform\";\nimport {Matrix}\t\t\t\t\tfrom \"../geom/Matrix\";\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\nimport {Point}\t\t\t\t\tfrom \"../geom/Point\";\nimport {ByteArray}\t\t\t\tfrom \"../utils/ByteArray\";\nimport {ColorUtils}\t\t\t\tfrom \"../utils/ColorUtils\";\nimport {BitmapImageUtils}\t\t\tfrom \"../utils/BitmapImageUtils\";\nimport {IImageCanvas}\t\t\t\tfrom \"../image/IImageCanvas\";\nimport {CPUCanvas}\t\t\t\tfrom \"../image/CPUCanvas\";\n/**\n * The BitmapImage2D export class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D export class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This export class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D export class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nexport class BitmapImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[image BitmapImage2D]\";\n\n\tprivate _imageCanvas:IImageCanvas;\n\tprivate _context:CanvasRenderingContext2D;\n\tprivate _imageData:ImageData;\n\tprivate _imageDataDirty:boolean;\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImage2D.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null, powerOfTwo:boolean = true)\n\t{\n\t\tsuper(width, height, powerOfTwo);\n\n\t\tthis._transparent = transparent;\n\t\tif(document) {\n\t\t\tthis._imageCanvas = <IImageCanvas> document.createElement(\"canvas\");\n\t\t}else {\n\t\t\tthis._imageCanvas = new CPUCanvas();\n\t\t}\n\t\tthis._imageCanvas.width = width;\n\t\tthis._imageCanvas.height = height;\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\n\n\t\tif (fillColor != null)\n\t\t\tthis.fillRect(this._rect, fillColor);\n\t}\n\n\tpublic invalidate():void\n\t{\n\t\tif (!this._imageDataDirty) {\n\t\t\tthis._imageDataDirty = true;\n\n\t\t\tsuper.invalidate();\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImage2D\n\t{\n\t\tvar t:BitmapImage2D = new BitmapImage2D(this.width, this.height, this.transparent, null, this.powerOfTwo);\n\t\tt.draw(this);\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform):void\n\t{\n\t\tif (!this._imageData)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar data:Uint8ClampedArray = this._imageData.data;\n\n\t\tvar i:number, j:number, index:number;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number):void\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._imageData)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar sourceData:Float32Array = sourceBitmap.getImageData().data;\n\t\tvar destData:Uint8ClampedArray = this._imageData.data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number, j:number, sourceIndex:number, destIndex:number;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:HTMLElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:any, sourceRect:Rectangle, destRect:Rectangle):void\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked && this._imageData)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\n\t\tthis._imageData = null;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._context = null;\n\t\tthis._imageCanvas = null;\n\t\tthis._imageData = null;\n\t\tthis._rect = null;\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean):void\n\t{\n\t\tif (source instanceof BitmapImage2D && source.getCanvas())\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked && this._imageData)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\n\t\tthis._imageData = null;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(rect:Rectangle, color:number):void\n\t{\n\t\tif (this._locked && this._imageData)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\n\t\tthis._imageData = null;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tif (!this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tif (!this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\tpublic getPixelData(x, y, imagePixel:Uint8ClampedArray):void\n\t{\n\t\tif (!this._imageData)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\timagePixel[0] = this._imageData.data[index + 0];\n\t\timagePixel[1] = this._imageData.data[index + 1];\n\t\timagePixel[2] = this._imageData.data[index + 2];\n\t\timagePixel[3] = this._imageData.data[index + 3];\n\t}\n\n\tpublic setPixelData(x, y, imagePixel:Uint8ClampedArray):void\n\t{\n\t\tif (!this._imageData)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\tthis._imageData.data[index + 0] = imagePixel[0];\n\t\tthis._imageData.data[index + 1] = imagePixel[1];\n\t\tthis._imageData.data[index + 2] = imagePixel[2];\n\t\tthis._imageData.data[index + 3] = imagePixel[3];\n\t\t\n\t\tthis.invalidate();\n\t}\n\t\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock():void\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(rect:Rectangle, inputArray:Array<number>):void\n\t{\n\t\tif (!this._imageData)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar i:number, j:number, index:number, argb:number[];\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageData.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\t\tthis._imageData.data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(x:number, y:number, color:number):void\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._imageData)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = 0xFF;\n\n\t\tif (!this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(x, y, color:number):void\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._imageData)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = argb[0];\n\n\t\tif (!this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(rect:Rectangle, input:Uint8ClampedArray):void\n\t{\n\t\tif (!this._imageData)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar i:number;\n\t\tvar w:number = this._imageData.width;\n\t\tfor (i = 0; i < rect.height; ++i)\n\t\t\tthis._imageData.data.set(input.subarray(i*w*4, (i + 1)*w*4), (rect.x + (i + rect.y)*w)*4);\n\n\n\t\tif (!this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock():void\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tif (this._imageData)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tif (!this._imageData)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\treturn this._imageData;\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn <HTMLCanvasElement> this._imageCanvas;\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number):void\n\t{\n\t\tif (this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tif(this._imageCanvas) {\n\t\t\tthis._imageCanvas.width = width;\n\t\t\tthis._imageCanvas.height = height;\n\t\t}\n\t\t\n\t\tsuper._setSize(width, height);\n\n\t\tif (this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n}",
    "export class BitmapImageChannel\n{\n\tpublic static ALPHA:number /*uint*/ = 8;\n\tpublic static BLUE:number /*uint*/ = 4;\n\tpublic static GREEN:number /*uint*/ = 2;\n\tpublic static RED:number /*uint*/ = 1;\n}",
    "import {BitmapImage2D}\t\t\tfrom \"../image/BitmapImage2D\";\nimport {ImageCube}\t\t\t\tfrom \"../image/ImageCube\";\nimport {BlendMode}\t\t\t\tfrom \"../image/BlendMode\";\nimport {ColorTransform}\t\t\tfrom \"../geom/ColorTransform\";\nimport {Matrix}\t\t\t\t\tfrom \"../geom/Matrix\";\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\nimport {Point}\t\t\t\t\tfrom \"../geom/Point\";\nimport {ByteArray}\t\t\t\tfrom \"../utils/ByteArray\";\nimport {ColorUtils}\t\t\t\tfrom \"../utils/ColorUtils\";\nimport {BitmapImageUtils}\t\t\tfrom \"../utils/BitmapImageUtils\";\n\n/**\n * The BitmapImage2D export class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D export class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This export class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D export class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nexport class BitmapImageCube extends ImageCube\n{\n\tpublic static assetType:string = \"[image BitmapImageCube]\";\n\n\tpublic static posX:number = 0;\n\tpublic static negX:number = 1;\n\tpublic static posY:number = 2;\n\tpublic static negY:number = 3;\n\tpublic static posZ:number = 4;\n\tpublic static negZ:number = 5;\n\n\tprivate _imageCanvas:Array<HTMLCanvasElement> = new Array<HTMLCanvasElement>(6);\n\tprivate _context:Array<CanvasRenderingContext2D> = new Array<CanvasRenderingContext2D>(6);\n\tprivate _imageData:Array<ImageData> = new Array<ImageData>(6);\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImageCube.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(size:number, transparent:boolean = true, fillColor:number = null)\n\t{\n\t\tsuper(size);\n\n\t\tthis._transparent = transparent;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._imageCanvas[i] = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\t\t\tthis._context[i] = this._imageCanvas[i].getContext(\"2d\");\n\n\t\t\tif (fillColor != null)\n\t\t\t\tthis.fillRect(i, new Rectangle(0, 0, size, size), fillColor);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImageCube\n\t{\n\t\tvar t:BitmapImageCube = new BitmapImageCube(this._size, this.transparent);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tt.draw(i, this.getCanvas(i));\n\t\t}\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(side:number, rect:Rectangle, colorTransform:ColorTransform):void\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar data:Uint8ClampedArray = this._imageData[side].data;\n\n\t\tvar i:number, j:number, index:number;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(side:number, sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number):void\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar sourceData:Uint8ClampedArray = sourceBitmap.getImageData().data;\n\t\tvar destData:Uint8ClampedArray = this._imageData[side].data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number, j:number, sourceIndex:number, destIndex:number;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this._size)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(side:number, source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:any, sourceRect:Rectangle, destRect:Rectangle):void\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tsuper.dispose();\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i] = null;\n\t\t\tthis._imageCanvas[i] = null;\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(side:number, source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean):void\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(side:number, rect:Rectangle, color:number):void\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(side:number, x:number, y:number):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(side:number, x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock():void\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(side:number, rect:Rectangle, inputArray:Array<number>):void\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar i:number, j:number, index:number, argb:number[];\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\t\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\t\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\t\t\tthis._imageData[side].data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(side:number, x:number, y:number, color:number):void\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(side:number, x, y, color:number):void\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(side:number, rect:Rectangle, inputByteArray:ByteArray):void\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number, j:number, index:number;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock():void\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0); // at coords 0,0\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData(side:number):ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\treturn this._imageData[side];\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas(side:number):HTMLCanvasElement\n\t{\n\t\treturn this._imageCanvas[side];\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number):void\n\t{\n\t\tsuper._setSize(size);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tif (this._locked)\n\t\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0);\n\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\n\t\t\tif (this._locked)\n\t\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t\t}\n\t}\n}",
    "/**\n * A export class that provides constant values for visual blend mode effects. These\n * constants are used in the following:\n * <ul>\n *   <li> The <code>blendMode</code> property of the\n * flash.display.DisplayObject class.</li>\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\n * method of the flash.display.BitmapData class</li>\n * </ul>\n */\nexport class BlendMode\n{\n\t/**\n\t * Adds the values of the constituent colors of the display object to the\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\n\t * commonly used for animating a lightening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\n\t */\n\tpublic static ADD:string = \"add\";\n\n\t/**\n\t * Applies the alpha value of each pixel of the display object to the\n\t * background. This requires the <code>blendMode</code> property of the\n\t * parent display object be set to\n\t * <code>away.base.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ALPHA:string = \"alpha\";\n\n\t/**\n\t * Selects the darker of the constituent colors of the display object and the\n\t * colors of the background(the colors with the smaller values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static DARKEN:string = \"darken\";\n\n\t/**\n\t * Compares the constituent colors of the display object with the colors of\n\t * its background, and subtracts the darker of the values of the two\n\t * constituent colors from the lighter value. This setting is commonly used\n\t * for more vibrant colors.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\n\t */\n\tpublic static DIFFERENCE:string = \"difference\";\n\n\t/**\n\t * Erases the background based on the alpha value of the display object. This\n\t * process requires that the <code>blendMode</code> property of the parent\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ERASE:string = \"erase\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the display\n\t * object. If the display object is lighter than 50% gray, the display object\n\t * and background colors are screened, which results in a lighter color. If\n\t * the display object is darker than 50% gray, the colors are multiplied,\n\t * which results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static HARDLIGHT:string = \"hardlight\";\n\n\t/**\n\t * Inverts the background.\n\t */\n\tpublic static INVERT:string = \"invert\";\n\n\t/**\n\t * Forces the creation of a transparency group for the display object. This\n\t * means that the display object is precomposed in a temporary buffer before\n\t * it is processed further. The precomposition is done automatically if the\n\t * display object is precached by means of bitmap caching or if the display\n\t * object is a display object container that has at least one child object\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LAYER:string = \"layer\";\n\n\t/**\n\t * Selects the lighter of the constituent colors of the display object and\n\t * the colors of the background(the colors with the larger values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LIGHTEN:string = \"lighten\";\n\n\t/**\n\t * Multiplies the values of the display object constituent colors by the\n\t * constituent colors of the background color, and normalizes by dividing by\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\n\t * shadows and depth effects.\n\t *\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\n\t * display object and the corresponding color of the pixel in the background\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\n\t * shade than the color of the display object or the color of the\n\t * background.</p>\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * The display object appears in front of the background. Pixel values of the\n\t * display object override the pixel values of the background. Where the\n\t * display object is transparent, the background is visible.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the background.\n\t * If the background is lighter than 50% gray, the display object and\n\t * background colors are screened, which results in a lighter color. If the\n\t * background is darker than 50% gray, the colors are multiplied, which\n\t * results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static OVERLAY:string = \"overlay\";\n\n\t/**\n\t * Multiplies the complement(inverse) of the display object color by the\n\t * complement of the background color, resulting in a bleaching effect. This\n\t * setting is commonly used for highlights or to remove black areas of the\n\t * display object.\n\t */\n\tpublic static SCREEN:string = \"screen\";\n\n\t/**\n\t * Uses a shader to define the blend between objects.\n\t *\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\n\t * automatically sets the display object's <code>blendMode</code> property to\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\n\t * set to <code>BlendMode.SHADER</code> without first setting the\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\n\t * <code>blendShader</code> property is set(which sets the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\n\t * later the value of the <code>blendMode</code> property is changed, the\n\t * blend mode can be reset to use the blend shader simply by setting the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\n\t * <code>blendShader</code> property does not need to be set again except to\n\t * change the shader that's used to define the blend mode.</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static SHADER:string = \"shader\";\n\n\t/**\n\t * Subtracts the values of the constituent colors in the display object from\n\t * the values of the background color, applying a floor of 0. This setting is\n\t * commonly used for animating a darkening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\n\t */\n\tpublic static SUBTRACT:string = \"subtract\";\n}",
    "import {IImageCanvas}\t\t\t\t\tfrom \"../image/IImageCanvas\";\nimport {CPURenderingContext2D}\t\tfrom \"../image/CPURenderingContext2D\";\nimport {ImageData}\t\t\t\t\tfrom \"../image/ImageData\";\n\nexport class CPUCanvas implements IImageCanvas {\n\tpublic width:number = 1;\n\tpublic height:number = 1;\n\n\tprivate imageData:ImageData;\n\n\tgetContext(contextId: \"2d\"): CanvasRenderingContext2D;\n\tgetContext(contextId: \"experimental-webgl\"): WebGLRenderingContext;\n\tgetContext(contextId: string, ...args: any[]): CanvasRenderingContext2D | WebGLRenderingContext;\n\tgetContext(contextId: string, ...args: any[]): any\n\t{\n\t\treturn new CPURenderingContext2D(this);\n\t}\n\n\tconstructor() {\n\t\tthis.reset();\n\t}\n\n\tpublic reset() {\n\t\tif (!this.imageData) {\n\t\t\tthis.imageData = new ImageData(this.width, this.height);\n\t\t}else{\n\t\t\tthis.imageData.width = this.width;\n\t\t\tthis.imageData.height = this.height;\n\n\t\t\tif(this.imageData.data) {\n\t\t\t\t//this.imageData.data.length = 0;\n\t\t\t\tthis.imageData.data = null;\n\t\t\t}\n\t\t\tthis.imageData.data = new Uint8Array(this.width*this.height*4);\n\t\t}\n\n\t\tfor (var i:number = 0; i < this.width * this.height * 4; i += 4) {\n\t\t\tthis.imageData.data[i] = 255;\n\t\t\tthis.imageData.data[i + 1] = 255;\n\t\t\tthis.imageData.data[i + 2] = 255;\n\t\t\tthis.imageData.data[i + 3] = 255;\n\t\t}\n\t}\n\n\tpublic getImageData():ImageData {\n\t\tif (this.imageData.width != this.width || this.imageData.height != this.height) {\n\t\t\tthis.reset();\n\t\t}\n\t\treturn this.imageData;\n\t}\n\n\n}\nexport default CPUCanvas;",
    "import {ImageData}\t\t\t\t\tfrom \"../image/ImageData\";\nimport {CPUCanvas}\t\t\t\t\tfrom \"../image/CPUCanvas\";\nimport {BitmapImage2D}\t\t\t\tfrom \"../image/BitmapImage2D\";\nimport {Matrix}\t\t\t\t\t\tfrom \"../geom/Matrix\";\nimport {Point}\t\t\t\t\t\tfrom \"../geom/Point\";\n\n//TODO: implement all methods\nexport class CPURenderingContext2D implements CanvasRenderingContext2D\n{\n\tpublic miterLimit:number;\n\tpublic font:string;\n\tpublic globalCompositeOperation:string;\n\tpublic msFillRule:string;\n\tpublic lineCap:string;\n\tpublic msImageSmoothingEnabled:boolean;\n\tpublic mozImageSmoothingEnabled:boolean;\n\tpublic webkitImageSmoothingEnabled:boolean;\n\tpublic oImageSmoothingEnabled:boolean;\n\tpublic lineDashOffset:number;\n\tpublic shadowColor:string;\n\tpublic lineJoin:string;\n\tpublic shadowOffsetX:number;\n\tpublic lineWidth:number;\n\tpublic canvas:HTMLCanvasElement;\n\tpublic strokeStyle:any;\n\tpublic globalAlpha:number;\n\tpublic shadowOffsetY:number;\n\tpublic fillStyle:any;\n\tpublic shadowBlur:number;\n\tpublic textAlign:string;\n\tpublic textBaseline:string;\n\n\tpublic cpuCanvas:CPUCanvas;\n\n\tprivate matrix:Matrix;\n\n\tconstructor(cpuCanvas:CPUCanvas)\n\t{\n\t\tthis.cpuCanvas = cpuCanvas;\n\t}\n\n\tpublic restore():void\n\t{\n\t\tthis.matrix = null;\n\t}\n\n\tpublic setTransform(m11:number, m12:number, m21:number, m22:number, dx:number, dy:number):void\n\t{\n\t\tthis.matrix = new Matrix(m11, m12, m21, m22, dx, dy);\n\t}\n\n\tpublic save():void\n\t{\n\t}\n\n\tpublic arc(x:number, y:number, radius:number, startAngle:number, endAngle:number, anticlockwise:boolean):void\n\t{\n\t}\n\n\tpublic measureText(text:string):TextMetrics {\n\t\treturn undefined;\n\t}\n\n\tpublic isPointInPath(x:number, y:number, fillRule:string):boolean {\n\t\treturn undefined;\n\t}\n\n\tpublic quadraticCurveTo(cpx:number, cpy:number, x:number, y:number):void {\n\t}\n\n\tpublic putImageData(imagedata:ImageData, dx:number, dy:number, dirtyX:number, dirtyY:number, dirtyWidth:number, dirtyHeight:number):void {\n\t}\n\n\tpublic rotate(angle:number):void {\n\t}\n\n\tpublic fillText(text:string, x:number, y:number, maxWidth:number):void {\n\t}\n\n\tpublic translate(x:number, y:number):void {\n\t}\n\n\tpublic scale(x:number, y:number):void {\n\t}\n\n\tpublic createRadialGradient(x0:number, y0:number, r0:number, x1:number, y1:number, r1:number):CanvasGradient {\n\t\treturn undefined;\n\t}\n\n\tpublic ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void\n\t{\n\n\t}\n\n\tpublic lineTo(x:number, y:number):void {\n\t}\n\n\tpublic getLineDash():number[] {\n\t\treturn undefined;\n\t}\n\n\tpublic fill(fillRule:string):void {\n\t}\n\n\tpublic createImageData(imageDataOrSw:any, sh:number):ImageData {\n\t\treturn undefined;\n\t}\n\n\tpublic createPattern(image:HTMLElement, repetition:string):CanvasPattern {\n\t\treturn undefined;\n\t}\n\n\tpublic closePath():void {\n\t}\n\n\tpublic rect(x:number, y:number, w:number, h:number):void {\n\t}\n\n\tpublic clip(fillRule:string):void {\n\t}\n\n\tpublic clearRect(x:number, y:number, w:number, h:number):void {\n\t\tvar imageData:ImageData = this.cpuCanvas.getImageData();\n\t\tfor (var i:number = x; i < x + w; i++) {\n\t\t\tfor (var j:number = y; j < y + h; j++) {\n\n\t\t\t\tvar index:number = (i + j * imageData.width) * 4;\n\t\t\t\timageData.data[index] = 0;\n\t\t\t\timageData.data[index + 1] = 0;\n\t\t\t\timageData.data[index + 2] = 0;\n\t\t\t\timageData.data[index + 3] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic moveTo(x:number, y:number):void {\n\t}\n\n\tpublic getImageData(sx:number, sy:number, sw:number, sh:number):ImageData {\n\t\t//var result:ImageData = new ImageData(sw, sh);\n\t\t//var i:number = 0;\n\t\t//\n\t\t//for (i = 0; i < sw * sh * 4; i += 4) {\n\t\t//    result.data[i] = 255;\n\t\t//    result.data[i + 1] = 255;\n\t\t//    result.data[i + 2] = 255;\n\t\t//    result.data[i + 3] = 255;\n\t\t//}\n\t\t//\n\t\t//var imageData:ImageData = this.cpuCanvas.getImageData();\n\t\t//for (i = sx; i < sx + sw; i++) {\n\t\t//    for (var j:number = sy; j < sy + sh; j++) {\n\t\t//        this.copyPixel32(result, i - sx, i - sy, imageData, i, j);\n\t\t//    }\n\t\t//}\n\t\treturn this.cpuCanvas.getImageData();\n\t}\n\n\tprivate point:Point = new Point();\n\tprivate point2:Point = new Point();\n\n\tprivate applyPixel32(target:ImageData, x:number, y:number, color:number[]) {\n\t\t//todo: blending support\n\n\t\tx = Math.floor(x);\n\t\ty = Math.floor(y);\n\n\t\tif (x < 0 || x >= target.width || y >= target.height || y < 0) return;\n\t\tvar index:number = (x + y * target.width) * 4;\n\t\t//var alpha:number = color[3] / 255;\n\t\ttarget.data[index] += color[0];\n\t\ttarget.data[index + 1] += color[1];\n\t\ttarget.data[index + 2] += color[2];\n\t\ttarget.data[index + 3] += color[3];\n\n\t\t//target.data[index] = color[0];\n\t\t//target.data[index + 1] = color[1];\n\t\t//target.data[index + 2] = color[2];\n\t\t//target.data[index + 3] = color[3];\n\n\t\ttarget.data[index] = target.data[index] & 0xFF;\n\t\ttarget.data[index + 1] = target.data[index + 1] & 0xFF;\n\t\ttarget.data[index + 2] = target.data[index + 2] & 0xFF;\n\t\ttarget.data[index + 3] = target.data[index + 3] & 0xFF;\n\t}\n\n\tprivate copyPixel32(target:ImageData, x:number, y:number, source:ImageData, fromX:number, fromY:number) {\n\t\tx = Math.floor(x);\n\t\ty = Math.floor(y);\n\t\tfromX = Math.floor(fromX);\n\t\tfromY = Math.floor(fromY);\n\n\t\tif (x < 0 || x >= target.width || y >= target.height || y < 0) return;\n\t\tif (fromX < 0 || fromX >= source.width || fromY >= source.height || fromY < 0) return;\n\t\tvar index:number = (x + y * target.width) * 4;\n\t\tvar fromIndex:number = (fromX + fromY * source.width) * 4;\n\t\ttarget.data[index] = source.data[fromIndex];\n\t\ttarget.data[index + 1] = source.data[fromIndex + 1];\n\t\ttarget.data[index + 2] = source.data[fromIndex + 2];\n\t\ttarget.data[index + 3] = source.data[fromIndex + 3];\n\t}\n\n\tprivate parsedFillStyle:string;\n\tprivate parsedA:number;\n\tprivate parsedR:number;\n\tprivate parsedG:number;\n\tprivate parsedB:number;\n\n\tpublic fillRect(x:number, y:number, w:number, h:number):void {\n\t\tif (this.fillStyle) {\n\t\t\tif (this.parsedFillStyle != this.fillStyle) {\n\t\t\t\tvar colorStrings:string[] = this.fillStyle.substring(5, this.fillStyle.lastIndexOf(\")\")).split(\",\");\n\t\t\t\tthis.parsedA = parseFloat(colorStrings[3]) * 255;\n\t\t\t\tthis.parsedR = parseInt(colorStrings[0]);\n\t\t\t\tthis.parsedG = parseInt(colorStrings[1]);\n\t\t\t\tthis.parsedB = parseInt(colorStrings[2]);\n\t\t\t\tthis.parsedFillStyle = this.fillStyle;\n\t\t\t}\n\n\t\t\tvar imageData:ImageData = this.cpuCanvas.getImageData();\n\t\t\tfor (var i:number = x; i < x + w; i++) {\n\t\t\t\tfor (var j:number = y; j < y + h; j++) {\n\n\t\t\t\t\tvar index:number = (i + j * imageData.width) * 4;\n\t\t\t\t\timageData.data[index] = this.parsedR;\n\t\t\t\t\timageData.data[index + 1] = this.parsedG;\n\t\t\t\t\timageData.data[index + 2] = this.parsedB;\n\t\t\t\t\timageData.data[index + 3] = this.parsedA;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic bezierCurveTo(cp1x:number, cp1y:number, cp2x:number, cp2y:number, x:number, y:number):void {\n\t}\n\n\tpublic drawImage(image:HTMLElement, offsetX:number, offsetY:number, width:number, height:number, canvasOffsetX:number, canvasOffsetY:number, canvasImageWidth:number, canvasImageHeight:number):void {\n\t\tvar b:any = image;\n\t\tif (image.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\n\t\t\tvar bitmap:BitmapImage2D = <BitmapImage2D> b;\n\t\t\tbitmap.lock();\n\n\t\t\tthis.drawBitmap(bitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n\n\t\t\tbitmap.unlock();\n\t\t} else if (image.constructor.toString().indexOf(\"HTMLImage\") > -1) {\n\t\t\tvar htmlImage:HTMLImageElement = <HTMLImageElement> image;\n\t\t\tvar htmlCanvas:HTMLCanvasElement = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\t\thtmlCanvas.width = htmlImage.width;\n\t\t\thtmlCanvas.height = htmlImage.height;\n\t\t\tvar htmlContext:CanvasRenderingContext2D = htmlCanvas.getContext(\"2d\");\n\t\t\thtmlContext.drawImage(htmlImage, 0, 0);\n\t\t\tvar htmlImageData:ImageData = htmlContext.getImageData(0, 0, htmlImage.width, htmlImage.height);\n\n\t\t\tvar resultBitmap:BitmapImage2D = new BitmapImage2D(htmlImage.width, htmlImage.height, true, 0, false);\n\t\t\tresultBitmap.getImageData().data = htmlImageData.data;\n\t\t\tvar passBitmap:any = resultBitmap;\n\t\t\tthis.drawImage(passBitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n\t\t} else if (image.constructor.toString().indexOf(\"CPUCanvas\") > -1) {\n\t\t\t//\n\t\t\tvar canvas:CPUCanvas = <CPUCanvas> b;\n\t\t\tthis.drawBitmap(canvas, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n\t\t\t//\n\t\t\t//if (!width || width == 0) {\n\t\t\t//    width = canvas.width;\n\t\t\t//    height = canvas.height;\n\t\t\t//}\n\t\t\t//\n\t\t\t//var sourceData:ImageData = canvas.getImageData();\n\t\t\t//var scaleX:number = width / sourceData.width;\n\t\t\t//var scaleY:number = height / sourceData.height;\n\t\t\t//\n\t\t\t//var imageData:ImageData = this.cpuCanvas.getImageData();\n\t\t\t//for (var i:number = offsetX; i < offsetX + width; i++) {\n\t\t\t//    for (var j:number = offsetY; j < offsetY + height; j++) {\n\t\t\t//        this.copyPixel32(imageData, i, j, sourceData, (i - offsetX) * scaleX, (j - offsetY) * scaleY);\n\t\t\t//    }\n\t\t\t//}\n\t\t}\n\t}\n\n\tprivate drawBitmap(bitmap:any, offsetX:number, offsetY:number, width:number, height:number, canvasOffsetX:number, canvasOffsetY:number, canvasImageWidth:number, canvasImageHeight:number) {\n\t\tif (!width || width == 0) {\n\t\t\twidth = bitmap.width;\n\t\t\theight = bitmap.height;\n\t\t}\n\n\t\tif (!canvasOffsetX || canvasOffsetX == 0) {\n\t\t\tcanvasOffsetX = 0;\n\t\t\tcanvasOffsetY = 0;\n\t\t}\n\n\t\tif (!canvasImageWidth || canvasImageWidth == 0 || this.matrix) { //todo: if matrix? should we reset canvasImageWidth\n\t\t\tcanvasImageWidth = width;\n\t\t\tcanvasImageHeight = height;\n\t\t}\n\n\t\t//console.log(\"CPURenderingContext2D:drawBitmap(width: \" + width + \" height: \" + height + \" canvasImageWidth: \" + canvasImageWidth + \" canvasImageHeight: \" + canvasImageHeight);\n\n\t\tvar sourceData:ImageData = bitmap.getImageData();\n\t\tvar canvasImageData:ImageData = this.cpuCanvas.getImageData();\n\n\t\tif (this.matrix || (canvasImageWidth != width || canvasImageHeight != height)) {\n\t\t\tvar matrix:Matrix = this.matrix;\n\t\t\tif (!matrix) {\n\t\t\t\tmatrix = new Matrix();\n\t\t\t\tmatrix.scale(canvasImageWidth / width, canvasImageHeight / height);\n\t\t\t}\n\n\t\t\tvar scaleX:number = Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b);\n\t\t\tvar scaleY:number = Math.sqrt(matrix.c * matrix.c + matrix.d * matrix.d);\n\n\t\t\tcanvasImageWidth = width * scaleX;\n\t\t\tcanvasImageHeight = height * scaleY;\n\n\t\t\tmatrix.tx += canvasOffsetX;\n\t\t\tmatrix.ty += canvasOffsetY;\n\n\t\t\tcanvasOffsetX = Math.floor(matrix.tx);\n\t\t\tcanvasOffsetY = Math.floor(matrix.ty);\n\n\t\t\tmatrix.invert();\n\n\t\t\tif (scaleX >= 1 || scaleY >= 1) {\n\t\t\t\tvar p:Point = new Point();\n\t\t\t\tfor (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n\t\t\t\t\tfor (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n\t\t\t\t\t\tp.x = i;\n\t\t\t\t\t\tp.y = j;\n\t\t\t\t\t\tp = matrix.transformPoint(p);\n\n\t\t\t\t\t\tvar color:number[] = CPURenderingContext2D.sampleBilinear(p.x, p.y, sourceData);\n\t\t\t\t\t\tthis.applyPixel32(canvasImageData, i, j, color);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//decimate\n\t\t\t\tvar p1:Point = this.point;\n\t\t\t\tvar p2:Point = this.point2;\n\t\t\t\tfor (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n\t\t\t\t\tfor (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n\t\t\t\t\t\tp1.x = i;\n\t\t\t\t\t\tp1.y = j;\n\t\t\t\t\t\tp1 = matrix.transformPoint(p1);\n\n\t\t\t\t\t\tp2.x = i + 1;\n\t\t\t\t\t\tp2.y = j + 1;\n\t\t\t\t\t\tp2 = matrix.transformPoint(p2);\n\n\t\t\t\t\t\tvar color:number[] = CPURenderingContext2D.sampleBox(p1.x + offsetX, p1.y + offsetY, p2.x + offsetX, p2.y + offsetY, sourceData);\n\t\t\t\t\t\tthis.applyPixel32(canvasImageData, i, j, color);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmatrix.invert();\n\t\t} else {\n\t\t\tfor (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n\t\t\t\tfor (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n\t\t\t\t\tvar color:number[] = CPURenderingContext2D.sample(i - canvasOffsetX + offsetX, j - canvasOffsetY + offsetY, sourceData);\n\t\t\t\t\tthis.applyPixel32(canvasImageData, i, j, color);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic transform(m11:number, m12:number, m21:number, m22:number, dx:number, dy:number):void {\n\t}\n\n\tpublic stroke():void {\n\t}\n\n\tpublic strokeRect(x:number, y:number, w:number, h:number):void {\n\t}\n\n\tpublic setLineDash(segments:number[]):void {\n\t}\n\n\tpublic strokeText(text:string, x:number, y:number, maxWidth:number):void {\n\t}\n\n\tpublic beginPath():void {\n\t}\n\n\tpublic arcTo(x1:number, y1:number, x2:number, y2:number, radius:number):void {\n\t}\n\n\tpublic createLinearGradient(x0:number, y0:number, x1:number, y1:number):CanvasGradient {\n\t\treturn undefined;\n\t}\n\n\tprivate static sampleBilinear(u:number, v:number, texture:ImageData, texelSizeX:number = 1, texelSizeY:number = 1):number[] {\n\t\tvar color00:number[] = CPURenderingContext2D.sample(u, v, texture);\n\t\tvar color10:number[] = CPURenderingContext2D.sample(u + texelSizeX, v, texture);\n\t\tvar color01:number[] = CPURenderingContext2D.sample(u, v + texelSizeY, texture);\n\t\tvar color11:number[] = CPURenderingContext2D.sample(u + texelSizeX, v + texelSizeY, texture);\n\n\t\tvar a:number = u;\n\t\ta = a - Math.floor(a);\n\n\t\tvar interColor0:number[] = CPURenderingContext2D.interpolateColor(color00, color10, a);\n\t\tvar interColor1:number[] = CPURenderingContext2D.interpolateColor(color01, color11, a);\n\n\t\tvar b:number = v;\n\t\tb = b - Math.floor(b);\n\t\treturn CPURenderingContext2D.interpolateColor(interColor0, interColor1, b);\n\t}\n\n\tprivate static sample(u:number, v:number, imageData:ImageData):number[] {\n\t\tu = Math.floor(u);\n\t\tv = Math.floor(v);\n\n\t\tvar result:number[] = [0, 0, 0, 0];\n\n\t\tif (u < 0 || u >= imageData.width || v < 0 || v >= imageData.height) {\n\t\t\treturn result;\n\t\t}\n\n\t\tvar index:number = (u + v * imageData.width) * 4;\n\t\tresult[0] = imageData.data[index];\n\t\tresult[1] = imageData.data[index + 1];\n\t\tresult[2] = imageData.data[index + 2];\n\t\tresult[3] = imageData.data[index + 3];\n\t\treturn result;\n\t}\n\n\tprivate static sampleBox(x0:number, y0:number, x1:number, y1:number, texture:ImageData):number[] {\n\t\tvar area:number = 0;// -- total area accumulated in pixels\n\t\tvar result:number[] = [0, 0, 0, 0];\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar xsize:number;\n\t\tvar ysize:number;\n\n\t\tvar fromY:number = Math.floor(y0);\n\t\tvar toY:number = Math.ceil(y1);\n\n\t\tfromY = Math.max(Math.min(fromY, texture.height - 1), 0);\n\t\ttoY = Math.max(Math.min(toY, texture.height - 1), 0);\n\n\t\tfor (y = fromY; y < toY; y++) {\n\t\t\tysize = 1;\n\n\t\t\tif (y < y0) {\n\t\t\t\tysize = ysize * (1.0 - (y0 - y))\n\t\t\t}\n\n\t\t\tif (y > y1) {\n\t\t\t\tysize = ysize * (1.0 - (y - y1))\n\t\t\t}\n\n\t\t\tvar fromX:number = Math.floor(x0);\n\t\t\tvar toX:number = Math.ceil(x1);\n\n\t\t\tfromX = Math.max(Math.min(fromX, texture.width - 1), 0);\n\t\t\ttoX = Math.max(Math.min(toX, texture.width - 1), 0);\n\n\n\t\t\tfor (x = fromX; x < toX; x++) {\n\t\t\t\txsize = ysize;\n\n\t\t\t\tvar color:number[] = CPURenderingContext2D.sample(x, y, texture);\n\n\t\t\t\tif (x < x0) {\n\t\t\t\t\txsize = xsize * (1.0 - (x0 - x))\n\t\t\t\t}\n\t\t\t\tif (x > x1) {\n\t\t\t\t\txsize = xsize * (1.0 - (x - x1))\n\t\t\t\t}\n\t\t\t\tresult[0] += color[0] * xsize;\n\t\t\t\tresult[1] += color[1] * xsize;\n\t\t\t\tresult[2] += color[2] * xsize;\n\t\t\t\tresult[3] += color[3] * xsize;\n\t\t\t\tarea = area + xsize\n\t\t\t}\n\t\t}\n\n\t\tresult[0] /= area;\n\t\tresult[1] /= area;\n\t\tresult[2] /= area;\n\t\tresult[3] /= area;\n\n\t\tresult[0] = result[0] & 0xFF;\n\t\tresult[1] = result[1] & 0xFF;\n\t\tresult[2] = result[2] & 0xFF;\n\t\tresult[3] = result[3] & 0xFF;\n\t\treturn result;\n\t}\n\n\tprivate static interpolateColor(source:number[], target:number[], a:number):number[] {\n\t\tvar result:number[] = [];\n\t\tresult[0] = source[0] + (target[0] - source[0]) * a;\n\t\tresult[1] = source[1] + (target[1] - source[1]) * a;\n\t\tresult[2] = source[2] + (target[2] - source[2]) * a;\n\t\tresult[3] = source[3] + (target[3] - source[3]) * a;\n\t\treturn result;\n\t}\n\n}\nexport default CPURenderingContext2D;",
    "import {ImageBase}\t\t\t\tfrom \"../image/ImageBase\";\nimport {Sampler2D}\t\t\t\tfrom \"../image/Sampler2D\";\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\nimport {ImageUtils}\t\t\t\tfrom \"../utils/ImageUtils\";\n\nexport class Image2D extends ImageBase\n{\n\tpublic static assetType:string = \"[image Image2D]\";\n\n\tpublic _rect:Rectangle;\n\n\tprivate _powerOfTwo:boolean = true;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Image2D.assetType;\n\t}\n\n\t/**\n\t * The height of the image in pixels.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._rect.height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._rect.height == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._rect.width, value);\n\t}\n\n\t/**\n\t * The rectangle that defines the size and location of the bitmap image. The\n\t * top and left of the rectangle are 0; the width and height are equal to the\n\t * width and height in pixels of the BitmapData object.\n\t */\n\tpublic get rect():Rectangle\n\t{\n\t\treturn this._rect;\n\t}\n\n\t/**\n\t * The width of the bitmap image in pixels.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._rect.width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._rect.width == value)\n\t\t\treturn;\n\n\t\tthis._setSize(value, this._rect.height);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(width:number, height:number, powerOfTwo:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._rect = new Rectangle(0, 0, width, height);\n\t\tthis._powerOfTwo = powerOfTwo;\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number):void\n\t{\n\t\tif (this._rect.width != width || this._rect.height != height)\n\t\t\tthis.clear();\n\n\t\tthis._rect.width = width;\n\t\tthis._rect.height = height;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions():void\n\t{\n\t\tif (this._powerOfTwo && (!ImageUtils.isDimensionValid(this._rect.width) || !ImageUtils.isDimensionValid(this._rect.height)))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n\n\t/**\n\t * Enable POT texture size validation\n\t * @returns {boolean}\n\t */\n\tpublic get powerOfTwo():boolean {\n\t\treturn this._powerOfTwo;\n\t}\n\n\tpublic set powerOfTwo(value:boolean) {\n\t\tif(this._powerOfTwo == value) return;\n\t\tthis._powerOfTwo = value;\n\t\tthis._testDimensions();\n\t}\n}",
    "import {SamplerBase}\t\t\t\t\tfrom \"../image/SamplerBase\";\nimport {AbstractMethodError}\t\t\tfrom \"../errors/AbstractMethodError\";\nimport {AssetEvent}\t\t\t\t\tfrom \"../events/AssetEvent\";\nimport {IAsset}\t\t\t\t\t\tfrom \"../library/IAsset\";\nimport {AssetBase}\t\t\t\t\tfrom \"../library/AssetBase\";\n\nexport class ImageBase extends AssetBase\n{\n\tpublic _pFormat:string = \"bgra\";\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get format():string\n\t{\n\t\treturn this._pFormat;\n\t}\n}",
    "import {ImageBase}\t\t\t\tfrom \"../image/ImageBase\";\nimport {SamplerCube}\t\t\t\tfrom \"../image/SamplerCube\";\nimport {ImageUtils}\t\t\t\tfrom \"../utils/ImageUtils\";\n\nexport class ImageCube extends ImageBase\n{\n\tpublic static assetType:string = \"[image ImageCube]\";\n\n\tpublic _size:number;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn ImageCube.assetType;\n\t}\n\n\t/**\n\t * The size of the cube bitmap in pixels.\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._size);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(size:number)\n\t{\n\t\tsuper();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number):void\n\t{\n\t\tif (this._size != size)\n\t\t\tthis.clear();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions():void\n\t{\n\t\tif (!ImageUtils.isDimensionValid(this._size))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n}",
    "export class ImageData {\n    public width: number;\n    public data: any;\n    public height: number;\n\n    constructor(width:number, height:number) {\n        this.width = width;\n        this.height = height;\n        this.data = new Uint8Array(width*height*4);\n    }\n}\nexport default ImageData;",
    "import {SamplerBase}\t\t\t\tfrom \"../image/SamplerBase\";\nimport {Image2D}\t\t\t\t\tfrom \"../image/Image2D\";\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\n\n/**\n * The Sampler2D export class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Sampler2D()</code> constructor.\n *\n * <p>The <code>Sampler2D()</code> constructor allows you to create a Sampler2D\n * object that contains a reference to a Image2D object. After you create a\n * Sampler2D object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Sampler2D object can share its Image2D reference among several Sampler2D\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Sampler2D objects that reference the same Image2D object,\n * multiple texture objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each texture\n * object instance.</p>\n\n */\nexport class Sampler2D extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset Sampler2D]\";\n\n\tprivate _imageRect:Rectangle;\n\tprivate _frameRect:Rectangle;\n\tprivate _repeat:boolean;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Sampler2D.assetType;\n\t}\n\n\t/**\n\t * Controls whether or not the Sampler2D object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping export class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\t//var pixelSnapping:PixelSnapping;\n\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\n\t/**\n\t *\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get imageRect():Rectangle\n\t{\n\t\treturn this._imageRect;\n\t}\n\tpublic set imageRect(value:Rectangle)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\tpublic set frameRect(value:Rectangle)\n\t{\n\t\tif (this._frameRect == value)\n\t\t\treturn;\n\n\t\tthis._frameRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t * @param image2D\n\t * @param smoothing\n\t */\n\tconstructor(repeat:boolean = false, smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper(smooth, mipmap);\n\n\t\tthis._repeat = repeat;\n\n\t\tthis._updateRect();\n\t}\n\n\tprivate _updateRect():void\n\t{\n\t}\n}",
    "import {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {AssetBase}\t\t\t\tfrom \"../library/AssetBase\";\n\n/**\n *\n */\nexport class SamplerBase extends AssetBase\n{\n\tprivate _smooth:boolean;\n\tprivate _mipmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._smooth = smooth;\n\t\tthis._mipmap = mipmap;\n\t}\n}",
    "import {SamplerBase}\t\t\t\tfrom \"../image/SamplerBase\";\nimport {ImageCube}\t\t\t\tfrom \"../image/ImageCube\";\n\n/**\n * The Bitmap export class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Bitmap()</code> constructor.\n *\n * <p>The <code>Bitmap()</code> constructor allows you to create a Bitmap\n * object that contains a reference to a BitmapData object. After you create a\n * Bitmap object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Bitmap object can share its BitmapData reference among several Bitmap\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Bitmap objects that reference the same BitmapData object,\n * multiple texture objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each texture\n * object instance.</p>\n\n */\nexport class SamplerCube extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset SamplerCube]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SamplerCube.assetType;\n\t}\n\n\t/**\n\t *\n\t * @param bitmapData\n\t * @param smoothing\n\t */\n\tconstructor(smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper(smooth, mipmap);\n\t}\n}",
    "import {BitmapImage2D}\t\t\tfrom \"../image/BitmapImage2D\";\nimport {BitmapImageChannel}\t\tfrom \"../image/BitmapImageChannel\";\nimport {Image2D}\t\t\t\t\tfrom \"../image/Image2D\";\nimport {Point}\t\t\t\t\tfrom \"../geom/Point\";\n\n/**\n *\n */\nexport class SpecularImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[asset SpecularImage2D]\";\n\n\tprivate _specularSource:BitmapImage2D;\n\tprivate _glossSource:BitmapImage2D;\n\tprivate _output:BitmapImage2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SpecularImage2D.assetType;\n\t}\n\n\tpublic get specularSource():BitmapImage2D\n\t{\n\t\treturn this._specularSource;\n\t}\n\n\tpublic set specularSource(value:BitmapImage2D)\n\t{\n\t\tif (this._specularSource == value)\n\t\t\treturn;\n\n\t\tthis._specularSource = value;\n\n\t\tthis.invalidate();\n\n\t\tthis._testSize();\n\t}\n\n\n\tpublic get glossSource():BitmapImage2D\n\t{\n\t\treturn this._glossSource;\n\t}\n\n\tpublic set glossSource(value:BitmapImage2D)\n\t{\n\t\tif (this._glossSource == value)\n\t\t\treturn;\n\n\t\tthis._glossSource = value;\n\n\t\tthis.invalidate();\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(specularSource:BitmapImage2D = null, glossSource:BitmapImage2D = null)\n\t{\n\t\tsuper(1, 1);\n\n\t\tthis._specularSource = specularSource;\n\t\tthis._glossSource = glossSource;\n\n\t\tthis._output = new BitmapImage2D(1, 1, false, 0xffffff);\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t * Returns a new SpecularImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new SpecularImage2D object that is identical to the original.\n\t */\n\tpublic clone():SpecularImage2D\n\t{\n\t\treturn new SpecularImage2D(this._specularSource, this._glossSource);\n\t}\n\n\t/**\n\t * Frees memory that is used to store the SpecularImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this SpecularImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>SpecularImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>SpecularImage2D.dispose()</code>, the SpecularImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the SpecularImage2D object. However,\n\t * <code>SpecularImage2D.dispose()</code> does not garbage collect the SpecularImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * SpecularImage2D object is released at the time the SpecularImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._rect = null;\n\n\t\tthis._output.dispose();\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tvar origin:Point = new Point();\n\n\t\tthis._output.fillRect(this._rect, 0xffffff);\n\n\t\tif (this._glossSource)\n\t\t\tthis._output.copyChannel(this._glossSource, this._rect, origin, BitmapImageChannel.GREEN, BitmapImageChannel.GREEN);\n\n\t\tif (this._specularSource)\n\t\t\tthis._output.copyChannel(this._specularSource, this._rect, origin, BitmapImageChannel.RED, BitmapImageChannel.RED);\n\n\t\treturn this._output.getImageData();\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn this._output.getCanvas();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number):void\n\t{\n\t\tsuper._setSize(width, height);\n\n\t\tthis._output._setSize(width, height);\n\t}\n\n\tprivate _testSize():void\n\t{\n\t\tvar w:number, h:number;\n\n\t\tif (this._specularSource) {\n\t\t\tw = this._specularSource.width;\n\t\t\th = this._specularSource.height;\n\t\t} else if (this._glossSource) {\n\t\t\tw = this._glossSource.width;\n\t\t\th = this._glossSource.height;\n\t\t} else {\n\t\t\tw = 1;\n\t\t\th = 1;\n\t\t}\n\n\t\tif (w != this._output.width && h != this._output.height) {\n\t\t\tthis._output.dispose();\n\t\t\tthis._output = new BitmapImage2D(w, h, false, 0xffffff);\n\t\t}\n\n\t\tthis._setSize(w, h);\n\t}\n}",
    "export {BitmapImage2D}\t\t\t\t\tfrom \"./image/BitmapImage2D\";\nexport {BitmapImageChannel}\t\t\t\tfrom \"./image/BitmapImageChannel\";\nexport {BitmapImageCube}\t\t\t\tfrom \"./image/BitmapImageCube\";\nexport {BlendMode}\t\t\t\t\t\tfrom \"./image/BlendMode\";\nexport {CPUCanvas}\t\t\t\t\t\tfrom \"./image/CPUCanvas\";\nexport {CPURenderingContext2D}\t\t\tfrom \"./image/CPURenderingContext2D\";\nexport {IImageCanvas}\t\t\t\t\tfrom \"./image/IImageCanvas\";\nexport {Image2D}\t\t\t\t\t\tfrom \"./image/Image2D\";\nexport {ImageBase}\t\t\t\t\t\tfrom \"./image/ImageBase\";\nexport {ImageCube}\t\t\t\t\t\tfrom \"./image/ImageCube\";\nexport {ImageData}\t\t\t\t\t\tfrom \"./image/ImageData\";\nexport {Sampler2D}\t\t\t\t\t\tfrom \"./image/Sampler2D\";\nexport {SamplerBase}\t\t\t\t\tfrom \"./image/SamplerBase\";\nexport {SamplerCube}\t\t\t\t\tfrom \"./image/SamplerCube\";\nexport {SpecularImage2D}\t\t\t\tfrom \"./image/SpecularImage2D\";",
    "import {AssetEvent}\t\t\t\t\tfrom \"../events/AssetEvent\";\nimport {EventDispatcher}\t\t\t\tfrom \"../events/EventDispatcher\";\nimport {IAbstractionPool}\t\t\t\tfrom \"../library/IAbstractionPool\";\nimport {IAsset}\t\t\t\t\t\tfrom \"../library/IAsset\";\n\n/**\n *\n * @export class away.pool.AbstractionBase\n */\nexport class AbstractionBase extends EventDispatcher\n{\n\tprivate _onClearDelegate:(event:AssetEvent) => void;\n\tprivate _onInvalidateDelegate:(event:AssetEvent) => void;\n\n\tpublic _pool:IAbstractionPool;\n\n\tpublic _asset:IAsset;\n\n\tpublic _invalid:boolean = true;\n\n\tconstructor(asset:IAsset, pool:IAbstractionPool)\n\t{\n\t\tsuper();\n\n\t\tthis._asset = asset;\n\t\tthis._pool = pool;\n\n\t\tthis._onClearDelegate = (event:AssetEvent) => this.onClear(event);\n\t\tthis._onInvalidateDelegate = (event:AssetEvent) => this.onInvalidate(event);\n\n\t\tthis._asset.addEventListener(AssetEvent.CLEAR, this._onClearDelegate);\n\t\tthis._asset.addEventListener(AssetEvent.INVALIDATE, this._onInvalidateDelegate);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent):void\n\t{\n\t\tthis._asset.removeEventListener(AssetEvent.CLEAR, this._onClearDelegate);\n\t\tthis._asset.removeEventListener(AssetEvent.INVALIDATE, this._onInvalidateDelegate);\n\n\t\tthis._pool.clearAbstraction(this._asset);\n\t\tthis._pool = null;\n\t\tthis._asset = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidate(event:AssetEvent):void\n\t{\n\t\tthis._invalid = true;\n\t}\n}",
    "import {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {IAssetClass}\t\t\t\tfrom \"../library/IAssetClass\";\nimport {AbstractMethodError}\t\tfrom \"../errors/AbstractMethodError\";\nimport {AssetEvent}\t\t\t\tfrom \"../events/AssetEvent\";\nimport {EventDispatcher}\t\t\tfrom \"../events/EventDispatcher\";\n\nexport class AssetBase extends EventDispatcher implements IAsset\n{\n\tpublic static ID_COUNT:number = 0;\n\n\tprivate _originalName:string;\n\tprivate _namespace:string;\n\tprivate _name:string;\n\tprivate _id:number;\n\tprivate _full_path:Array<string>;\n\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\n\n\tconstructor(name:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._id = AssetBase.ID_COUNT++;\n\n\t\tif (name == null)\n\t\t\tname = 'null';\n\n\t\tthis._name = name;\n\t\tthis._originalName = name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * The original name used for this asset in the resource (e.g. file) in which\n\t * it was found. This may not be the same as <code>name</code>, which may\n\t * have changed due to of a name conflict.\n\t */\n\tpublic get originalName():string\n\t{\n\t\treturn this._originalName;\n\t}\n\n\t/**\n\t * A unique id for the asset, used to identify assets in an associative array\n\t */\n\tpublic get id():number\n\t{\n\t\treturn this._id;\n\t}\n\n\tpublic get name():string\n\t{\n\t\treturn this._name;\n\t}\n\n\tpublic set name(val:string)\n\t{\n\t\tvar prev:string;\n\n\t\tprev = this._name;\n\t\tthis._name = val;\n\n\t\tif (this._name == null)\n\t\t\tthis._name = 'null';\n\n\t\tthis.updateFullPath();\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.RENAME, this, prev));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.DISPOSE, this));\n\t}\n\n\tpublic clear():void\n\t{\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.CLEAR, this));\n\t}\n\n\tpublic get assetNamespace():string\n\t{\n\t\treturn this._namespace;\n\t}\n\n\tpublic get assetFullPath():Array<string>\n\t{\n\t\treturn this._full_path;\n\t}\n\n\tpublic assetPathEquals(name:string, ns:string):boolean\n\t{\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\n\t}\n\n\n\tpublic isAsset(assetClass:IAssetClass):boolean\n\t{\n\t\treturn this.assetType == assetClass.assetType;\n\t}\n\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\n\t{\n\n\t\tthis._name = name? name : 'null';\n\t\tthis._namespace = ns? ns : AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (overrideOriginal)\n\t\t\tthis._originalName = this._name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\tprivate updateFullPath():void\n\t{\n\t\tthis._full_path = [ this._namespace, this._name ];\n\t}\n}",
    "import {URLRequest}\t\t\t\tfrom \"../net/URLRequest\";\nimport {AssetLibrary}\t\t\t\tfrom \"../library/AssetLibrary\";\nimport {AssetLibraryIterator}\t\tfrom \"../library/AssetLibraryIterator\";\nimport {Loader}\t\t\t\t\tfrom \"../library/Loader\";\nimport {LoaderContext}\t\t\tfrom \"../library/LoaderContext\";\nimport {ConflictPrecedence}\t\tfrom \"../library/ConflictPrecedence\";\nimport {ConflictStrategy}\t\t\tfrom \"../library/ConflictStrategy\";\nimport {ConflictStrategyBase}\t\tfrom \"../library/ConflictStrategyBase\";\nimport {AssetBase}\t\t\t\tfrom \"../library/AssetBase\";\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\nimport {AssetEvent}\t\t\t\tfrom \"../events/AssetEvent\";\nimport {URLLoaderEvent}\t\t\tfrom \"../events/URLLoaderEvent\";\nimport {LoaderEvent}\t\t\t\tfrom \"../events/LoaderEvent\";\nimport {EventDispatcher}\t\t\tfrom \"../events/EventDispatcher\";\nimport {ParserEvent}\t\t\t\tfrom \"../events/ParserEvent\";\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\n\n/**\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\n * Its purpose is to create a container for 3D data management, both before and after parsing.\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\n */\nexport class AssetLibraryBundle extends EventDispatcher\n{\n\tpublic static _iInstances:Object = new Object();\n\n\tprivate _loaderSessions:Array<Loader>;\n\tprivate _strategy:ConflictStrategyBase;\n\tprivate _strategyPreference:string;\n\tprivate _assets:Array<IAsset>;\n\tprivate _assetDictionary:Object;\n\tprivate _assetDictDirty:boolean;\n\tprivate _loaderSessionsGarbage:Array<Loader> = new Array<Loader>();\n\tprivate _gcTimeoutIID;\n\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:LoaderEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\t/**\n\t * Creates a new <code>AssetLibraryBundle</code> object.\n\t *\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\n\t\tthis._assetDictionary = new Object();\n\t\tthis._loaderSessions = new Array<Loader>();\n\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\n\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:LoaderEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibrary as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\tif (!key)\n\t\t\tkey = 'default';\n\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\n\n\t\treturn AssetLibraryBundle._iInstances[key];\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParser(parserClass:Object):void\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParsers(parserClasses:Object[]):void\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\n\t * is used which means that a numeric suffix is appended to one of the assets. The\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\n\t * be renamed.\n\t *\n\t * @see naming.ConflictStrategy\n\t * @see AssetLibrary.conflictPrecedence\n\t */\n\tpublic get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn this._strategy;\n\t}\n\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\n\t\tif (!val)\n\t\t\tthrow new ErrorBase('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\n\n\t\tthis._strategy = val.create();\n\n\t}\n\n\t/**\n\t * Defines which asset should have precedence when resolving a naming conflict between\n\t * two assets of which one has just been renamed by the user or by a parser. By default\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\n\t *\n\t * This property is ignored for conflict strategies that do not actually rename an\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\n\t *\n\t * @see away.library.ConflictPrecedence\n\t * @see away.library.ConflictStrategy\n\t */\n\tpublic get conflictPrecedence():string\n\t{\n\t\treturn this._strategyPreference;\n\t}\n\n\tpublic set conflictPrecedence(val:string)\n\t{\n\t\tthis._strategyPreference = val;\n\t}\n\n\t/**\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\n\t * namespace. A \"null\" filter value means no filter of that type is used.\n\t *\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\n\t * null to not filter on asset type.\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\n\t * included in the iteration or not. This needs to be a function that takes a single\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\n\t *\n\t * @see away.library.AssetType\n\t */\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\n\t{\n\t\tthis.getLoader().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads a resource from existing data in memory.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\n\t{\n\t\tthis.getLoader().loadData(data, '', context, ns, parser);\n\t}\n\n\tpublic getLoader():Loader\n\t{\n\t\tvar loader:Loader = new Loader();\n\n\t\tthis._loaderSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader;\n\t}\n\t\n\tpublic disposeLoader(loader:Loader):void\n\t{\n\t\tvar index:number = this._loaderSessions.indexOf(loader);\n\t\tthis._loaderSessions.splice(index, 1);\n\n\t\t// Add loader to a garbage array - for a collection sweep and kill\n\t\tthis._loaderSessionsGarbage.push(loader);\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\treturn null;\n\n\t\treturn this._assetDictionary[ns][name];\n\n\t}\n\tpublic getAllAssets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\t/**\n\t * Adds an asset to the asset library, first making sure that it's name is unique\n\t * using the method defined by the <code>conflictStrategy</code> and\n\t * <code>conflictPrecedence</code> properties.\n\t */\n\tpublic addAsset(asset:IAsset):void\n\t{\n\t\tvar ns:string;\n\t\tvar old:IAsset;\n\n\t\t// Bail if asset has already been added.\n\t\tif (this._assets.indexOf(asset) >= 0)\n\t\t\treturn;\n\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\n\t\tns = asset.assetNamespace || AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (old != null)\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\n\n\t\t//create unique-id (for now this is used in AwayBuilder only\n\t\t//asset.id = IDUtil.createUID();\n\n\t\t// Add it\n\t\tthis._assets.push(asset);\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\tthis._assetDictionary[ns] = new Object();\n\n\t\tthis._assetDictionary[ns][asset.name] = asset;\n\n\t\tasset.addEventListener(AssetEvent.RENAME, this._onAssetRenameDelegate);\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\t}\n\n\t/**\n\t * Removes an asset from the library, and optionally disposes that asset by calling\n\t * it's disposeAsset() method (which for most assets is implemented as a default\n\t * version of that type's dispose() method.\n\t *\n\t * @param asset The asset which should be removed from this library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true):void\n\t{\n\t\tvar idx:number;\n\n\t\tthis.removeAssetFromDict(asset);\n\n\t\tasset.removeEventListener(AssetEvent.RENAME, this._onAssetRenameDelegate);\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\n\t\tidx = this._assets.indexOf(asset);\n\n\t\tif (idx >= 0)\n\t\t\tthis._assets.splice(idx, 1);\n\n\t\tif (dispose)\n\t\t\tasset.dispose();\n\t}\n\n\t/**\n\t * Removes an asset which is specified using name and namespace.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\tvar asset:IAsset = this.getAsset(name, ns);\n\n\t\tif (asset)\n\t\t\tthis.removeAsset(asset, dispose);\n\n\t\treturn asset;\n\t}\n\n\t/**\n\t * Removes all assets from the asset library, optionally disposing them as they\n\t * are removed.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAllAssets(dispose:boolean = true):void\n\t{\n\t\tif (dispose) {\n\t\t\tvar asset:IAsset;\n\t\t\tvar len:number = this._assets.length;\n\t\t\tfor (var c:number = 0; c < len; c++) {\n\t\t\t\tasset = this._assets[c];\n\t\t\t\tasset.dispose();\n\t\t\t}\n\t\t}\n\n\t\tthis._assets.length = 0;\n\t\tthis.rehashAssetDict();\n\t}\n\n\t/**\n\t * Removes all assets belonging to a particular namespace (null for default)\n\t * from the asset library, and optionall disposes them by calling their\n\t * disposeAsset() method.\n\t *\n\t * @param ns The namespace from which all assets should be removed.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true):void\n\t{\n\t\tvar idx:number = 0;\n\t\tvar asset:IAsset;\n\t\tvar old_assets:IAsset[];\n\n\t\t// Empty the assets vector after having stored a copy of it.\n\t\t// The copy will be filled with all assets which weren't removed.\n\t\told_assets = this._assets.concat();\n\t\tthis._assets.length = 0;\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tvar len:number = old_assets.length;\n\t\tfor (var d:number = 0; d < len; d++) {\n\t\t\tasset = old_assets[d];\n\n\t\t\t// Remove from dict if in the supplied namespace. If not,\n\t\t\t// transfer over to the new vector.\n\t\t\tif (asset.assetNamespace == ns) {\n\t\t\t\tif (dispose)\n\t\t\t\t\tasset.dispose();\n\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\n\t\t\t\t// test that is not needed since we know that the namespace\n\t\t\t\t// will be empty when loop finishes.\n\t\t\t\tthis.removeAssetFromDict(asset, false);\n\t\t\t} else {\n\t\t\t\tthis._assets[idx++] = asset;\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t for each (asset in old_assets) {\n\t\t // Remove from dict if in the supplied namespace. If not,\n\t\t // transfer over to the new vector.\n\t\t if (asset.assetNamespace == ns) {\n\t\t if (dispose)\n\t\t asset.dispose();\n\n\t\t // Remove asset from dictionary, but don't try to auto-remove\n\t\t // the namespace, which will trigger an unnecessarily expensive\n\t\t // test that is not needed since we know that the namespace\n\t\t // will be empty when loop finishes.\n\t\t removeAssetFromDict(asset, false);\n\t\t } else\n\t\t _assets[idx++] = asset;\n\n\t\t }\n\t\t */\n\n\t\t// Remove empty namespace\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\n\t\t\tdelete this._assetDictionary[ns];\n\t}\n\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true):void\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\n\n\t\t\tif (autoRemoveEmptyNamespace) {\n\n\t\t\t\tvar key:string;\n\t\t\t\tvar empty:boolean = true;\n\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (empty)\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic stopAllLoaders():void\n\t{\n\t\tvar len:number = this._loaderSessions.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis.killloaderSession(this._loaderSessions[i]);\n\n\t\tthis._loaderSessions = new Array<Loader>();\n\t}\n\n\tprivate rehashAssetDict():void\n\t{\n\t\tvar asset:IAsset;\n\n\t\tthis._assetDictionary = {};\n\n\t\tvar len:number = this._assets.length;\n\t\tfor (var c:number = 0; c < len; c++) {\n\t\t\tasset = this._assets[c];\n\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\n\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\n\n\t\t}\n\n\t\tthis._assetDictDirty = false;\n\n\t}\n\n\t/**\n\t * Called when a an error occurs during loading.\n\t */\n\tprivate onLoadError(event:URLLoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing.\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent):void\n\t{\n\t\t// Only add asset to library the first time.\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\n\t\t\tthis.addAsset(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\n\t}\n\n\tprivate onTextureSizeError(event:LoaderEvent):void\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent):void\n\t{\n\t\tvar loader:Loader = <Loader> event.target;\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis.disposeLoader(loader);\n\t}\n\n\tprivate loaderSessionGC():void\n\t{\n\t\tvar loader:Loader;\n\n\t\twhile (this._loaderSessionsGarbage.length > 0) {\n\t\t\tloader = this._loaderSessionsGarbage.pop();\n\t\t\tthis.killloaderSession(loader);\n\t\t}\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate killloaderSession(loader:Loader):void\n\t{\n\t\tloader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t\tloader.stop();\n\t}\n\n\n\tprivate onAssetRename(event:AssetEvent):void\n\t{\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\n\n\t\tif (old != null) {\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\n\t\t} else {\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\n\n\t\t\tif (dict == null)\n\t\t\t\treturn;\n\n\t\t\tdict[event.prevName] = null;\n\t\t\tdict[event.asset.name] = event.asset;\n\t\t}\n\t}\n\n\tprivate onAssetConflictResolved(event:AssetEvent):void\n\t{\n\t\tthis.dispatchEvent(event.clone());\n\t}\n}",
    "import {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\n\nexport class AssetLibraryIterator\n{\n\n\tprivate  _assets:Array<IAsset>;\n\tprivate _filtered:Array<IAsset>;\n\n\tprivate _idx:number;\n\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tthis._assets = assets;\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\tpublic get currentAsset():IAsset\n\t{\n\t\t// Return current, or null if no current\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\n\t}\n\n\tpublic get numAssets():number\n\t{\n\t\treturn this._filtered.length;\n\t}\n\n\tpublic next():IAsset\n\t{\n\t\tvar next:IAsset = null;\n\n\t\tif (this._idx < this._filtered.length)\n\t\t\tnext = this._filtered[this._idx];\n\n\t\tthis._idx++;\n\n\t\treturn next;\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis._idx = 0;\n\t}\n\n\tpublic setIndex(index:number):void\n\t{\n\t\tthis._idx = index;\n\t}\n\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc):void\n\t{\n\t\tif (assetTypeFilter || namespaceFilter) {\n\n\t\t\tvar idx:number;\n\t\t\tvar asset:IAsset;\n\n\n\t\t\tidx = 0;\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\n\n\t\t\tvar l:number = this._assets.length;\n\n\t\t\tfor (var c:number = 0; c < l; c++) {\n\n\t\t\t\tasset = <IAsset> this._assets[c];\n\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._filtered[idx++] = asset;\n\n\t\t\t}\n\n\t\t\t/*\n\t\t\t for each (asset in _assets) {\n\t\t\t // Skip this assets if filtering on type and this is wrong type\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\n\t\t\t if (filterFunc != null && !filterFunc(asset))\n\t\t\t continue;\n\n\t\t\t _filtered[idx++] = asset;\n\t\t\t }\n\t\t\t */\n\n\t\t} else {\n\t\t\tthis._filtered = this._assets;\n\t\t}\n\t}\n}",
    "import {URLRequest}\t\t\t\tfrom \"../net/URLRequest\";\nimport {EventBase}\t\t\t\tfrom \"../events/EventBase\";\nimport {AssetLibraryBundle}\t\tfrom \"../library/AssetLibraryBundle\";\nimport {AssetLibraryIterator}\t\tfrom \"../library/AssetLibraryIterator\";\nimport {Loader}\t\t\t\t\tfrom \"../library/Loader\";\nimport {LoaderContext}\t\t\tfrom \"../library/LoaderContext\";\nimport {ConflictStrategyBase}\t\tfrom \"../library/ConflictStrategyBase\";\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\n\n/**\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\n */\nexport class AssetLibrary\n{\n\t/**\n\t * Creates a new <code>AssetLibrary</code> object.\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t//*/\n\t/**\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibraryBundle as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\treturn AssetLibraryBundle.getInstance(key);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParser(parserClass):void\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>):void\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Short-hand for conflictStrategy property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictStrategy\n\t */\n\tpublic static get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\n\t}\n\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\n\t}\n\n\t/**\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictPrecedence\n\t */\n\tpublic static get conflictPrecedence():string\n\t{\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\n\t}\n\n\tpublic static set conflictPrecedence(val:string)\n\t{\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\n\t}\n\n\t/**\n\t * Short-hand for createIterator() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.createIterator()\n\t */\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Short-hand for load() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.load()\n\t */\n\tpublic static load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\n\t{\n\t\tAssetLibrary.getBundle().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Short-hand for loadData() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.loadData()\n\t */\n\tpublic static loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\n\t{\n\t\tAssetLibrary.getBundle().loadData(data, context, ns, parser);\n\t}\n\n\tpublic static stopLoad():void\n\t{\n\t\tAssetLibrary.getBundle().stopAllLoaders();\n\t}\n\n\tpublic static getLoader():Loader\n\t{\n\t\treturn AssetLibrary.getBundle().getLoader();\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAllAssets():Array<IAsset>\n\t{\n\t\treturn AssetLibrary.getBundle().getAllAssets();\n\t}\n\n\t/**\n\t * Short-hand for addEventListener() method on default asset library bundle.\n\t */\n\tpublic static addEventListener(type:string, listener:(event:EventBase) => void):void\n\t{\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for removeEventListener() method on default asset library bundle.\n\t */\n\tpublic static removeEventListener(type:string, listener:(event:EventBase) => void):void\n\t{\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for hasEventListener() method on default asset library bundle.\n\n\t public static hasEventListener(type:string):boolean\n\t {\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\n\t}\n\n\t public static willTrigger(type:string):boolean\n\t {\n\t\treturn getBundle().willTrigger(type);\n\t}\n\t */\n\n\t/**\n\t * Short-hand for addAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.addAsset()\n\t */\n\tpublic static addAsset(asset:IAsset):void\n\t{\n\t\tAssetLibrary.getBundle().addAsset(asset);\n\t}\n\n\t/**\n\t * Short-hand for removeAsset() method on default asset library bundle.\n\t *\n\t * @param asset The asset which should be removed from the library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAsset()\n\t */\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true):void\n\t{\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAssetByName()\n\t */\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAllAssets()\n\t */\n\tpublic static removeAllAssets(dispose:boolean = true):void\n\t{\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\n\t */\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true):void\n\t{\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\n\t}\n}",
    "/**\n * Enumaration export class for precedence when resolving naming conflicts in the library.\n *\n * @see away.library.AssetLibrary.conflictPrecedence\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategy\n */\nexport class ConflictPrecedence\n{\n\t/**\n\t * Signals that in a conflict, the previous owner of the conflicting name\n\t * should be favored (and keep it's name) and that the newly renamed asset\n\t * is reverted to a non-conflicting name.\n\t */\n\tpublic static FAVOR_OLD:string = 'favorOld';\n\n\t/**\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\n\t * it's newly defined name) and that the previous owner of that name gets\n\t * renamed to a non-conflicting name.\n\t */\n\tpublic static FAVOR_NEW:string = 'favorNew';\n}",
    "import {ConflictPrecedence}\t\tfrom \"../library/ConflictPrecedence\";\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {AbstractMethodError}\t\tfrom \"../errors/AbstractMethodError\";\nimport {AssetEvent}\t\t\t\tfrom \"../events/AssetEvent\";\n\n/**\n * Abstract base export class for naming conflict resolution classes. Extend this to create a\n * strategy export class which the asset library can use to resolve asset naming conflicts, or\n * use one of the bundled concrete strategy classes:\n *\n * <ul>\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\n * </ul>\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.ConflictStrategy\n * @see away.library.IgnoreConflictStrategy\n * @see away.library.ErrorConflictStrategy\n * @see away.library.NumSuffixConflictStrategy\n */\nexport class ConflictStrategyBase\n{\n\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\n\t * classes.\n\t */\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string):void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\n\t * would break any state caching that happens inside the strategy class.\n\t */\n\tpublic create():ConflictStrategyBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\n\t * the conflict resolution by applying the new names and dispatching the correct events.\n\t */\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string):void\n\t{\n\t\tvar loser_prev_name:string;\n\t\tvar winner:IAsset;\n\t\tvar loser:IAsset;\n\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\n\n\t\tloser_prev_name = loser.name;\n\n\t\tassetsDictionary[winner.name] = winner;\n\t\tassetsDictionary[nonConflictingName] = loser;\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\n\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\n\t}\n}",
    "import {ConflictStrategyBase}\t\t\tfrom \"../library/ConflictStrategyBase\";\nimport {ErrorConflictStrategy}\t\tfrom \"../library/ErrorConflictStrategy\";\nimport {IgnoreConflictStrategy}\t\tfrom \"../library/IgnoreConflictStrategy\";\nimport {NumSuffixConflictStrategy}\tfrom \"../library/NumSuffixConflictStrategy\";\n\n/**\n * Enumeration export class for bundled conflict strategies. Set one of these values (or an\n * instance of a self-defined sub-export class of ConflictStrategyBase) to the conflictStrategy\n * property on an AssetLibrary to define how that library resolves naming conflicts.\n *\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategyBase\n */\nexport class ConflictStrategy\n{\n\t/**\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\n\t * a numeric suffix appended to the base name.\n\t */\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\n\n\t/**\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\n\t */\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\n\n\t/**\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\n\t * to have the library automatically rename assets to avoid such conflicts.\n\t */\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\n\n\tconstructor(include?:ConflictStrategyBase)\n\t{\n\t\t//TODO: find out why typescript d.ts files do not include this class\n\t}\n}",
    "import {ConflictStrategyBase}\t\tfrom \"../library/ConflictStrategyBase\";\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\n\nexport class ErrorConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string):void\n\t{\n\t\tthrow new ErrorBase('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new ErrorConflictStrategy();\n\t}\n}",
    "export class IDUtil\n{\n\t/**\n\t *  @private\n\t *  Char codes for 0123456789ABCDEF\n\t */\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\n\n\t/**\n\t *  Generates a UID (unique identifier) based on ActionScript's\n\t *  pseudo-random number generator and the current time.\n\t *\n\t *  <p>The UID has the form\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\n\t *\n\t *  <p>This UID will not be truly globally unique; but it is the best\n\t *  we can do without player support for UID generation.</p>\n\t *\n\t *  @return The newly-generated UID.\n\t *\n\t *  @langversion 3.0\n\t *  @playerversion Flash 9\n\t *  @playerversion AIR 1.1\n\t *  @productversion Flex 3\n\t */\n\tpublic static createUID():string\n\t{\n\t\tvar uid = new Array(36);\n\t\tvar index:number = 0;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\t\tfor (j = 0; j < 4; j++)\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\t\t}\n\n\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\tvar time:number = new Date().getTime();\n\t\t// Note: time is the number of milliseconds since 1970,\n\t\t// which is currently more than one trillion.\n\t\t// We use the low 8 hex digits of this number in the UID.\n\t\t// Just in case the system clock has been reset to\n\t\t// Jan 1-4, 1970 (in which case this number could have only\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\n\t\t// before taking the low digits.\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = timeString.charCodeAt(i);\n\n\t\tfor (i = 0; i < 4; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\treturn String.fromCharCode.apply(null, uid);\n\t}\n\n\t/**\n\t * Returns the decimal representation of a hex digit.\n\t * @private\n\n\t private static getDigit(hex:string):number\n\t {\n\t\tswitch (hex) {\n\t\t\tcase \"A\":\n\t\t\tcase \"a\":\n\t\t\t\treturn 10;\n\t\t\tcase \"B\":\n\t\t\tcase \"b\":\n\t\t\t\treturn 11;\n\t\t\tcase \"C\":\n\t\t\tcase \"c\":\n\t\t\t\treturn 12;\n\t\t\tcase \"D\":\n\t\t\tcase \"d\":\n\t\t\t\treturn 13;\n\t\t\tcase \"E\":\n\t\t\tcase \"e\":\n\t\t\t\treturn 14;\n\t\t\tcase \"F\":\n\t\t\tcase \"f\":\n\t\t\t\treturn 15;\n\t\t\tdefault:\n\t\t\t\treturn new uint(hex);\n\t\t}\n\t}\n\t */\n\n}",
    "import {ConflictStrategyBase}\t\tfrom \"../library/ConflictStrategyBase\";\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\n\nexport class IgnoreConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string):void\n\t{\n\t\t// Do nothing, ignore the fact that there is a conflict.\n\t\treturn;\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new IgnoreConflictStrategy();\n\t}\n}",
    "export class LoaderContext\n{\n\tpublic static UNDEFINED:number = 0;\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\n\tpublic static MULTIPASS_MATERIALS:number = 2;\n\n\tprivate _includeDependencies:boolean;\n\tprivate _dependencyBaseUrl:string;\n\tprivate _embeddedDataByUrl:Object;\n\tprivate _remappedUrls:Object;\n\tprivate _materialMode:number;\n\n\tprivate _overrideAbsPath:boolean;\n\tprivate _overrideFullUrls:boolean;\n\n\t/**\n\t * LoaderContext provides configuration for the Loader load() and parse() operations.\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\n\t * embedded data.\n\t *\n\t * @see away.loading.Loader\n\t */\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\n\t{\n\t\tthis._includeDependencies = includeDependencies;\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\n\t\tthis._embeddedDataByUrl = {};\n\t\tthis._remappedUrls = {};\n\t\tthis._materialMode = LoaderContext.UNDEFINED;\n\t}\n\n\t/**\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\n\t * parseData() operations) should be automatically loaded. Defaults to true.\n\t */\n\tpublic get includeDependencies():boolean\n\t{\n\t\treturn this._includeDependencies;\n\t}\n\n\tpublic set includeDependencies(val:boolean)\n\t{\n\t\tthis._includeDependencies = val;\n\t}\n\n\t/**\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\n\t * Options:\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\n\t *\n\t */\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic set materialMode(materialMode:number)\n\t{\n\t\tthis._materialMode = materialMode;\n\t}\n\n\t/**\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\n\t * Absolute paths will not be affected by the value of this property.\n\t */\n\tpublic get dependencyBaseUrl():string\n\t{\n\t\treturn this._dependencyBaseUrl;\n\t}\n\n\tpublic set dependencyBaseUrl(val:string)\n\t{\n\t\tthis._dependencyBaseUrl = val;\n\t}\n\n\t/**\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideAbsolutePaths():boolean\n\t{\n\t\treturn this._overrideAbsPath;\n\t}\n\n\tpublic set overrideAbsolutePaths(val:boolean)\n\t{\n\t\tthis._overrideAbsPath = val;\n\t}\n\n\t/**\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideFullURLs():boolean\n\t{\n\t\treturn this._overrideFullUrls;\n\t}\n\n\tpublic set overrideFullURLs(val:boolean)\n\t{\n\t\tthis._overrideFullUrls = val;\n\t}\n\n\t/**\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\n\t * expected by the loaded file.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param newUrl The URL from which away.should load the resource instead.\n\t *\n\t * @see mapUrlToData()\n\t */\n\tpublic mapUrl(originalUrl:string, newUrl:string):void\n\t{\n\t\tthis._remappedUrls[originalUrl] = newUrl;\n\t}\n\n\t/**\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param data The embedded data. Can be ByteArray or a export class which can be used to create a bytearray.\n\t */\n\tpublic mapUrlToData(originalUrl:string, data:any):void\n\t{\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether embedded data has been mapped to a particular URL.\n\t */\n\tpublic _iHasDataForUrl(url:string):boolean\n\t{\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns embedded data for a particular URL.\n\t */\n\tpublic _iGetDataForUrl(url:string):any\n\t{\n\t\treturn this._embeddedDataByUrl[url];\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether a replacement URL has been mapped to a particular URL.\n\t */\n\tpublic _iHasMappingForUrl(url:string):boolean\n\t{\n\t\treturn this._remappedUrls.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns new (replacement) URL for a particular original URL.\n\t */\n\tpublic _iGetRemappedUrl(originalUrl:string):string\n\t{\n\t\treturn this._remappedUrls[originalUrl];\n\t}\n}",
    "import {EventDispatcher}\t\t\tfrom \"../events/EventDispatcher\";\nimport {Loader}\t\t\t\t\tfrom \"../library/Loader\";\nimport {AssetBase}\t\t\t\tfrom \"../library/AssetBase\";\nimport {ByteArray}\t\t\t\tfrom \"../utils/ByteArray\";\n\n/**\n * The LoaderInfo export class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main export class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main export class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main export class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nexport class LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:AssetBase;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():AssetBase\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main export class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}",
    "import {LoaderContext}\t\t\tfrom \"../library/LoaderContext\";\nimport {LoaderInfo}\t\t\t\tfrom \"../library/LoaderInfo\";\nimport {URLLoader}\t\t\t\tfrom \"../net/URLLoader\";\nimport {URLLoaderDataFormat}\t\tfrom \"../net/URLLoaderDataFormat\";\nimport {URLRequest}\t\t\t\tfrom \"../net/URLRequest\";\nimport {AssetEvent}\t\t\t\tfrom \"../events/AssetEvent\";\nimport {EventDispatcher}\t\t\tfrom \"../events/EventDispatcher\";\nimport {URLLoaderEvent}\t\t\tfrom \"../events/URLLoaderEvent\";\nimport {LoaderEvent}\t\t\t\tfrom \"../events/LoaderEvent\";\nimport {ParserEvent}\t\t\t\tfrom \"../events/ParserEvent\";\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\nimport {ResourceDependency}\t\tfrom \"../parsers/ResourceDependency\";\n\n\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n/**\n * Dispatched when an image asset dimensions are not a power of 2\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Loader can load any file format that away.supports (or for which a third-party parser\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\n * and for when the resource (or it's dependencies) have been loaded.\n *\n * The Loader will not make assets available in any other way than through the dispatched\n * events. To store assets and make them available at any point from any module in an application,\n * use the AssetLibrary to load and manage assets.\n *\n * @see away.library.AssetLibrary\n */\nexport class Loader extends EventDispatcher\n{\n\tprivate _context:LoaderContext;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _uri:string;\n\tprivate _materialMode:number;\n\n\tprivate _errorHandlers:Array<(event:URLLoaderEvent) => boolean>;\n\tprivate _parseErrorHandlers:Array<(event:ParserEvent) => boolean>;\n\n\tprivate _stack:Array<ResourceDependency>;\n\tprivate _baseDependency:ResourceDependency;\n\tprivate _currentDependency:ResourceDependency;\n\tprivate _namespace:string;\n\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\n\tprivate _onLoadCompleteDelegate:(event:URLLoaderEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\n\t// Image parser only parser that is added by default, to save file size.\n\tprivate static _parsers:Array<any> = new Array<any>();\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parser The parser export class to enable.\n\t *\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parser):void\n\t{\n\t\tif (Loader._parsers.indexOf(parser) < 0)\n\t\t\tLoader._parsers.push(parser);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * Loader can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parsers A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parsers:Array<Object>):void\n\t{\n\t\tfor (var c:number = 0; c < parsers.length; c++)\n\t\t\tLoader.enableParser(parsers[ c ]);\n\t}\n\n\t/**\n\t * Returns the base dependency of the loader\n\t */\n\tpublic get baseDependency():ResourceDependency\n\t{\n\t\treturn this._baseDependency;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * Create a new ResourceLoadSession object.\n\t */\n\tconstructor(materialMode:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = materialMode;\n\n\t\tthis._stack = new Array<ResourceDependency>();\n\t\tthis._errorHandlers = new Array<(event:URLLoaderEvent) => boolean>();\n\t\tthis._parseErrorHandlers = new Array<(event:ParserEvent) => boolean>();\n\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t\tthis._onLoadCompleteDelegate = (event:URLLoaderEvent) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n\t */\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\n\t{\n\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\n\t\tthis._context = context;\n\t\tthis._namespace = ns;\n\n\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\n\t\tthis.retrieveDependency(this._baseDependency);\n\t}\n\n\t/**\n\t * Loads a resource from already loaded data.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n\t */\n\tpublic loadData(data:any, id:string, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\n\t{\n\t\tthis._uri = id;\n\t\tthis._context = context;\n\t\tthis._namespace = ns;\n\n\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\n\t\tthis.retrieveDependency(this._baseDependency);\n\t}\n\n\t/**\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\n\t * stack when complete and continues on the top set.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveNext(parser:ParserBase = null):void\n\t{\n\t\tif (this._currentDependency.dependencies.length) {\n\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\n\n\t\t\tthis._stack.push(this._currentDependency);\n\t\t\tthis.retrieveDependency(next);\n\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\n\n\t\t\tthis._currentDependency.parser._iResumeParsing();\n\t\t\tthis._stack.pop();\n\n\t\t} else if (this._stack.length) {\n\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\n\n\t\t\tthis._currentDependency = this._stack.pop();\n\n\t\t\tif (prev._iSuccess)\n\t\t\t\tprev.resolve();\n\n\t\t\tthis.retrieveNext(parser);\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.LOAD_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a single dependency.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveDependency(dependency:ResourceDependency):void\n\t{\n\t\tvar data:any;\n\n\t\tif (this._context && this._context.materialMode != 0)\n\t\t\tthis._materialMode = this._context.materialMode;\n\n\t\tthis._currentDependency = dependency;\n\n\t\tdependency._iLoader = new URLLoader();\n\n\t\tthis.addEventListeners(dependency._iLoader);\n\n\t\t// Get already loaded (or mapped) data if available\n\t\tdata = dependency.data;\n\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\n\n\t\tif (data) {\n\t\t\tif (data.constructor === Function)\n\t\t\t\tdata = new data();\n\n\t\t\tdependency._iSetData(data);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// No need to parse. The parent parser is expecting this\n\t\t\t\t// to be raw data so it can be passed directly.\n\t\t\t\tdependency.resolve();\n\n\t\t\t\t// Move on to next dependency\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\tthis.parseDependency(dependency);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// Resolve URL and start loading\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// Always use binary for raw data loading\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t} else {\n\n\t\t\t\tif (!dependency.parser)\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\n\n\t\t\t\tif (dependency.parser) {\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\n\t\t\t\t} else {\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\n\t\t\t\t\t// file type check will determine format after load, and if\n\t\t\t\t\t// binary, a text load will have broken the file data.\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdependency._iLoader.load(dependency.request);\n\t\t}\n\t}\n\n\tprivate joinUrl(base:string, end:string):string\n\t{\n\t\tif (end.charAt(0) == '/' || end.charAt(0) == '\\\\')\n\t\t\tend = end.substr(1);\n\n\t\tif (end.charAt(0) == '.')\n\t\t\tend = end.substr(2);\n\n\t\tif (base.length == 0)\n\t\t\treturn end;\n\n\t\tif (base.charAt(base.length - 1) == '/' || base.charAt(base.length - 1) == '\\\\')\n\t\t\tbase = base.substr(0, base.length - 1);\n\n\t\treturn base.concat('/', end);\n\n\t}\n\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\n\t{\n\t\tvar scheme_re:RegExp;\n\t\tvar base:string;\n\t\tvar url:string = dependency.request.url;\n\n\t\t// Has the user re-mapped this URL?\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\n\t\t\treturn this._context._iGetRemappedUrl(url);\n\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\n\t\t// We will not try to resolve this since the user can probably be\n\t\t// thrusted to know this URL better than our automatic resolver. :)\n\t\tif (url == this._uri)\n\t\t\treturn url;\n\n\n\t\t// Absolute URL? Check if starts with slash or a URL\n\t\t// scheme definition (e.g. ftp://, http://, file://)\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\n\n\t\tif (url.charAt(0) == '/') {\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\n\t\t\t\treturn url;\n\t\t} else if (scheme_re.test(url)) {\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\n\t\t\tif (this._context && this._context.overrideFullURLs) {\n\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\n\t\t\t}\n\t\t}\n\n\t\t// Since not absolute, just get rid of base file name to find it's\n\t\t// folder and then concatenate dynamic URL\n\t\tif (this._context && this._context.dependencyBaseUrl) {\n\t\t\tbase = this._context.dependencyBaseUrl;\n\t\t\treturn this.joinUrl(base, url);\n\t\t} else {\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\n\t\t\treturn this.joinUrl(base, url);\n\t\t}\n\t}\n\n\tprivate retrieveParserDependencies():void\n\t{\n\t\tif (!this._currentDependency)\n\t\t\treturn;\n\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies;\n\t\tvar i:number, len:number = parserDependancies.length;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\n\n\t\t// Since more dependencies might be added eventually, empty this\n\t\t// list so that the same dependency isn't retrieved more than once.\n\t\tparserDependancies.length = 0;\n\n\t\tthis._stack.push(this._currentDependency);\n\n\t\tthis.retrieveNext();\n\t}\n\n\tprivate resolveParserDependencies():void\n\t{\n\t\tthis._currentDependency._iSuccess = true;\n\n\t\t// Retrieve any last dependencies remaining on this parser, or\n\t\t// if none exists, just move on.\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\n\t\t\tthis.retrieveParserDependencies();\n\t\telse\n\t\t\tthis.retrieveNext();\n\t}\n\n\t/**\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadError(event:URLLoaderEvent):void\n\t{\n\t\tvar handled:boolean;\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\t\tvar loader:URLLoader = event.urlLoader;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when Loader does have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = this._errorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\n\n\t\t\t\tthis._currentDependency.resolveFailure();\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\t// Either this was the base file (last left in the stack) or\n\t\t\t\t// default behavior was prevented by the handlers, and hence\n\t\t\t\t// there is nothing more to do than clean up and bail.\n\t\t\t\tthis.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Error event was not handled by listeners directly on Loader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error();\n\t\t}\n\t}\n\n\t/**\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\n\t * @param event\n\t */\n\tprivate onParseError(event:ParserEvent):void\n\t{\n\t\tvar handled:boolean;\n\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\n\t\tvar loader:URLLoader = <URLLoader>event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when Loader does\n\t\t\t// have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = this._parseErrorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\t\t\tthis.retrieveNext();\n\t\t} else {\n\t\t\t// Error event was not handled by listeners directly on Loader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error(event.message);\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent):void\n\t{\n\t\t// Add loaded asset to list of assets retrieved as part\n\t\t// of the current dependency. This list will be inspected\n\t\t// by the parent parser when dependency is resolved\n\t\tif (this._currentDependency)\n\t\t\tthis._currentDependency.assets.push(event.asset);\n\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\n\n\t\tif (!this._currentDependency.suppresAssetEvents)\n\t\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate onReadyForDependencies(event:ParserEvent):void\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tif (this._context && !this._context.includeDependencies)\n\t\t\tparser._iResumeParsing();\n\t\telse\n\t\t\tthis.retrieveParserDependencies();\n\t}\n\n\t/**\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:URLLoaderEvent):void\n\t{\n\t\tvar loader:URLLoader = event.urlLoader;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\t// Resolve this dependency\n\t\tthis._currentDependency._iSetData(loader.data);\n\n\t\tif (this._currentDependency.retrieveAsRawData) {\n\t\t\t// No need to parse this data, which should be returned as is\n\t\t\tthis.resolveParserDependencies();\n\t\t} else {\n\t\t\tthis.parseDependency(this._currentDependency);\n\t\t}\n\t}\n\n\t/**\n\t * Called when parsing is complete.\n\t */\n\tprivate onParseComplete(event:ParserEvent):void\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\n\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\t/**\n\t * Called when an image is too large or it's dimensions are not a power of 2\n\t * @param event\n\t */\n\tprivate onTextureSizeError(event:AssetEvent):void\n\t{\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate addEventListeners(loader:URLLoader):void\n\t{\n\t\tloader.addEventListener(URLLoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.addEventListener(URLLoaderEvent.LOAD_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tprivate removeEventListeners(loader:URLLoader):void\n\t{\n\t\tloader.removeEventListener(URLLoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.removeEventListener(URLLoaderEvent.LOAD_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tpublic stop():void\n\t{\n\t\tthis.dispose();\n\t}\n\n\tprivate dispose():void\n\t{\n\t\tthis._errorHandlers = null;\n\t\tthis._parseErrorHandlers = null;\n\t\tthis._context = null;\n\t\tthis._stack = null;\n\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\n\n\t\tthis._currentDependency = null;\n\n\t}\n\n\t/**\n\t * @private\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\n\t * add error event listeners to the Loader instance. This system is used instead of\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\n\t * that if hasEventListener() returns true, it's client code that's listening for the\n\t * event. Secondly, functions added as error handler through this custom method are\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\n\t * whether they in turn had any client code listening for the event.) If no handlers\n\t * return true, the Loader knows that the event wasn't handled and will throw an RTE.\n\t */\n\n\tpublic _iAddParseErrorHandler(handler):void\n\t{\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\n\t\t\tthis._parseErrorHandlers.push(handler);\n\t}\n\n\tpublic _iAddErrorHandler(handler):void\n\t{\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\n\t\t\tthis._errorHandlers.push(handler);\n\t}\n\n\n\t/**\n\t * Guesses the parser to be used based on the file contents.\n\t * @param data The data to be parsed.\n\t * @param uri The url or id of the object to be parsed.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromData(data:any):ParserBase\n\t{\n\t\tvar len:number = Loader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--)\n\t\t\tif (Loader._parsers[i].supportsData(data))\n\t\t\t\treturn new Loader._parsers[i]();\n\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Initiates parsing of the loaded dependency.\n\t *\n\t * @param The dependency to be parsed.\n\t */\n\tprivate parseDependency(dependency:ResourceDependency):void\n\t{\n\t\tvar parser:ParserBase = dependency.parser;\n\n\t\t// If no parser has been defined, try to find one by letting\n\t\t// all plugged in parsers inspect the actual data.\n\t\tif (!parser)\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\n\n\t\tif (parser) {\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t\tif (dependency.request && dependency.request.url)\n\t\t\t\tparser._iFileName = dependency.request.url;\n\n\t\t\tparser.materialMode = this._materialMode;\n\n\t\t\tparser.parseAsync(dependency.data);\n\n\t\t} else {\n\t\t\tvar handled:boolean;\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\";\n\t\t\tvar event:ParserEvent = new ParserEvent(ParserEvent.PARSE_ERROR, message);\n\t\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\t\tthis.dispatchEvent(event);\n\t\t\t\thandled = true;\n\t\t\t} else {\n\t\t\t\t// TODO: Consider not doing this even when Loader does\n\t\t\t\t// have it's own LOAD_ERROR listener\n\t\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tif (!handled)\n\t\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t\t}\n\n\t\t\tif (handled) {\n\t\t\t\tthis.retrieveNext();\n\t\t\t} else {\n\t\t\t\t// Error event was not handled by listeners directly on Loader or\n\t\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Guesses the parser to be used based on the file extension.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromSuffix(url:string):ParserBase\n\t{\n\t\t// Get rid of query string if any and extract extension\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\n\n\t\tvar len:number = Loader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\n\t\t\tvar parserClass:any = Loader._parsers[i];\n\t\t\tif (parserClass.supportsType(fileExtension))\n\t\t\t\treturn new parserClass();\n\t\t}\n\n\t\treturn null;\n\t}\n}",
    "import {ConflictStrategyBase}\t\tfrom \"../library/ConflictStrategyBase\";\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\n\nexport class NumSuffixConflictStrategy extends ConflictStrategyBase\n{\n\tprivate _separator:string;\n\tprivate _next_suffix:Object;\n\n\tconstructor(separator:string = '.')\n\t{\n\t\tsuper();\n\n\t\tthis._separator = separator;\n\t\tthis._next_suffix = {};\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string):void\n\t{\n\t\tvar orig:string;\n\t\tvar new_name:string;\n\t\tvar base:string;\n\t\tvar suffix:number;\n\n\t\torig = changedAsset.name;\n\n\t\tif (orig.indexOf(this._separator) >= 0) {\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\n\t\t\t// use entire name as base\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\n\n\t\t\tif (isNaN(suffix)) {\n\t\t\t\tbase = orig;\n\t\t\t\tsuffix = 0;\n\t\t\t}\n\n\t\t} else {\n\t\t\tbase = orig;\n\t\t\tsuffix = 0;\n\t\t}\n\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\n\n\t\t\tsuffix = this._next_suffix[base];\n\n\t\t}\n\n\t\t// Find the first suffixed name that does\n\t\t// not collide with other names.\n\t\tdo {\n\n\t\t\tsuffix++;\n\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\n\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\n\n\t\tthis._next_suffix[ base ] = suffix;\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\n\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new NumSuffixConflictStrategy(this._separator);\n\t}\n}",
    "export {AbstractionBase}\t\t\t\tfrom \"./library/AbstractionBase\";\nexport {AssetBase}\t\t\t\t\t\tfrom \"./library/AssetBase\";\nexport {AssetLibrary}\t\t\t\t\tfrom \"./library/AssetLibrary\";\nexport {AssetLibraryBundle}\t\t\t\tfrom \"./library/AssetLibraryBundle\";\nexport {AssetLibraryIterator}\t\t\tfrom \"./library/AssetLibraryIterator\";\nexport {ConflictPrecedence}\t\t\t\tfrom \"./library/ConflictPrecedence\";\nexport {ConflictStrategy}\t\t\t\tfrom \"./library/ConflictStrategy\";\nexport {ConflictStrategyBase}\t\t\tfrom \"./library/ConflictStrategyBase\";\nexport {ErrorConflictStrategy}\t\t\tfrom \"./library/ErrorConflictStrategy\";\nexport {IAbstractionPool}\t\t\t\tfrom \"./library/IAbstractionPool\";\nexport {IAsset}\t\t\t\t\t\t\tfrom \"./library/IAsset\";\nexport {IAssetClass}\t\t\t\t\tfrom \"./library/IAssetClass\";\nexport {IDUtil}\t\t\t\t\t\t\tfrom \"./library/IDUtil\";\nexport {IgnoreConflictStrategy}\t\t\tfrom \"./library/IgnoreConflictStrategy\";\nexport {Loader}\t\t\t\t\t\t\tfrom \"./library/Loader\";\nexport {LoaderContext}\t\t\t\t\tfrom \"./library/LoaderContext\";\nexport {LoaderInfo}\t\t\t\t\t\tfrom \"./library/LoaderInfo\";\nexport {NumSuffixConflictStrategy}\t\tfrom \"./library/NumSuffixConflictStrategy\";",
    "\nexport class AudioChannel\n{\n\tpublic static maxChannels:number = 16;\n\n\tpublic static _channels:Array<AudioChannel> = new Array<AudioChannel>();\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\n\tprivate static _audioCtx;\n\tprivate _audioCtx;\n\n\tprivate _gainNode;\n\n\tprivate _audio:HTMLAudioElement;\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._gainNode.gain.value;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tthis._gainNode.gain.value = value;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audioCtx = AudioChannel._audioCtx || (AudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode.connect(this._audioCtx.destination);\n\n\t\tthis._audio = new Audio();\n\t\tthis._audio.onended = (event) => this._onEnded(event);\n\t\tthis._audio[\"crossOrigin\"] = \"anonymous\";\n\n\t\tvar source = this._audioCtx.createMediaElementSource(this._audio);\n\t\tsource.connect(this._gainNode);\n\t}\n\t\n\tpublic play(url:string, offset:number = 0, loop:boolean = false):void\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._audio.src = url;\n\t\tthis._audio.loop = loop;\n\t\tthis._audio.currentTime = offset;\n\t\tthis._audio.play();\n\t}\n\n\tpublic stop():void\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\n\tprivate _onEnded(event):void\n\t{\n\t\tthis.stop();\n\t}\n}",
    "import {StreamingAudioChannel}\tfrom \"../managers/StreamingAudioChannel\";\nimport {WebAudioChannel}\t\t\tfrom \"../managers/WebAudioChannel\";\nimport {IAudioChannel}\t\t\tfrom \"../managers/IAudioChannel\";\nimport {IAudioChannelClass}\t\tfrom \"../managers/IAudioChannelClass\";\n\nexport class AudioManager\n{\n\tpublic static getChannel(byteLength:number):IAudioChannel\n\t{\n\t\t//choose best audio channel by bytelength\n\t\tvar channelClass:IAudioChannelClass = (byteLength > 50000)? StreamingAudioChannel : WebAudioChannel;\n\n\t\tvar i:number = 0;\n\t\twhile(channelClass._channels[i] && channelClass._channels[i].isPlaying())\n\t\t\ti++;\n\n\t\tif (i == channelClass.maxChannels) {\n\t\t\t//pick the oldest channel to reuse, ignoring looping channels\n\t\t\tvar channel:IAudioChannel;\n\t\t\tvar len:number = channelClass._channels.length;\n\t\t\tfor (var j:number = 0; j < len; j++) {\n\t\t\t\tchannel = channelClass._channels[j];\n\t\t\t\tif (!channel.isLooping() && !channel.isDecoding()) {\n\t\t\t\t\tchannelClass._channels.push(channelClass._channels.splice(j, 1)[0]);\n\t\t\t\t\tchannel.stop();\n\t\t\t\t\treturn channel;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//do not return channel until one is freed up\n\t\t\treturn null;\n\t\t}\n\n\t\treturn channelClass._channels[i] || (channelClass._channels[i] = new channelClass());\n\t}\n\n\n}",
    "import {ParserUtils}\t\t\t\tfrom \"../parsers/ParserUtils\";\n\nexport class EventAudioChannel\n{\n\tpublic static maxChannels:number = 4;\n\n\tpublic static _channels:Array<EventAudioChannel> = new Array<EventAudioChannel>();\n\n\tpublic static _base64Cache:Object = new Object();\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _volume:number;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\t\n\tprivate _audio:HTMLAudioElement;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime - this._startTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._audio.volume = this._volume;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audio = new Audio();\n\t\tthis._audio.ontimeupdate = (event) => this._onTimeUpdate(event);\n\t}\n\t\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false, id:number = 0):void\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._audio.src = EventAudioChannel._base64Cache[id] || (EventAudioChannel._base64Cache[id] = ParserUtils.arrayBufferToBase64(buffer, \"audio/mp3\"));\n\t\tthis._audio.loop = this._isLooping;\n\n\t\tthis._audio.currentTime = offset;\n\t\tthis._audio.play();\n\t}\n\n\tpublic stop():void\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\n\tprivate _onTimeUpdate(event):void\n\t{\n\t\t//TODO: more accurate end detection\n\t\tif (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\n\t\t\tthis.stop();\n\t}\n}",
    "\nexport class StreamingAudioChannel\n{\n\tpublic static maxChannels:number = 4;\n\n\tpublic static _channels:Array<StreamingAudioChannel> = new Array<StreamingAudioChannel>();\n\n\tprivate _sourceOpenDelegate:(event) => void;\n\tprivate _updateEndDelegate:(event) => void;\n\tprivate _sourceBuffer:SourceBuffer;\n\tprivate _sourceDirty:boolean;\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _isQueuing:boolean;\n\tprivate _isOpening:boolean;\n\tprivate _buffer:ArrayBuffer;\n\tprivate _offset:number;\n\tprivate _volume:number;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\t\n\tprivate _audio:HTMLAudioElement;\n\t\n\tprivate _mediaSource:MediaSource;\n\tprivate _urlString:string;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime - this._startTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._audio.volume = this._volume;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._sourceOpenDelegate = (event) => this._sourceOpen(event);\n\t\tthis._updateEndDelegate = (event) => this._updateEnd(event);\n\n\t\tthis._audio = new Audio();\n\t\tthis._audio.ontimeupdate = (event) => this._onTimeUpdate(event);\n\n\t\tthis._updateSource();\n\n\t}\n\t\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false):void\n\t{\n\t\tthis._isPlaying = true;\n\n\t\tif (this._isLooping || this._isLooping != loop) {\n\t\t\tthis._isLooping = loop;\n\t\t\tthis._sourceDirty = true;\n\t\t}\n\n\t\tif (this._sourceDirty)\n\t\t\tthis._updateSource();\n\n\t\tthis._buffer = buffer;\n\t\tthis._offset = offset;\n\n\t\tif (!this._isQueuing && !this._isOpening)\n\t\t\tthis._queueBuffer();\n\t}\n\n\tpublic stop():void\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\t\n\tprivate _sourceOpen(event):void\n\t{\n\t\tthis._isOpening = false;\n\n\t\t//TODO: find out how in the name of all that is holy how this can be executed more than once on a MediaSource object\n\t\tif (this._mediaSource.activeSourceBuffers.length) {\n\t\t\tconsole.log(\"ERR: double sourceopen event called\")\n\t\t\treturn;\n\t\t}\n\n\t\tthis._sourceBuffer = this._mediaSource.addSourceBuffer('audio/mpeg');\n\t\tthis._sourceBuffer.addEventListener(\"updateend\", this._updateEndDelegate);\n\n\t\tif (this._isPlaying)\n\t\t\tthis._queueBuffer();\n\t}\n\n\tprivate _queueBuffer():void\n\t{\n\t\tthis._isQueuing = true;\n\n\t\tthis._startTime = this._sourceBuffer.timestampOffset;\n\t\tthis._sourceBuffer.appendBuffer(this._buffer);\n\t}\n\n\tprivate _updateEnd(event):void\n\t{\n\t\tthis._isQueuing = false;\n\n\t\tif (this._isLooping)\n\t\t\tthis._mediaSource.endOfStream();\n\n\t\tthis._duration = this._sourceBuffer.timestampOffset - this._startTime;\n\n\t\tthis._audio.currentTime = this._startTime + this._offset;\n\t\tthis._audio.play();\n\t}\n\n\tprivate _onTimeUpdate(event):void\n\t{\n\t\t//TODO: more accurate end detection\n\t\tif (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\n\t\t\tthis.stop();\n\t}\n\n\tprivate _updateSource():void\n\t{\n\t\tif(this._mediaSource)\n\t\t\tthis._disposeSource();\n\n\t\tthis._isQueuing = false;\n\t\tthis._isOpening = true;\n\n\t\tthis._mediaSource = new MediaSource();\n\t\tthis._mediaSource.addEventListener(\"sourceopen\", this._sourceOpenDelegate);\n\t\tthis._urlString = URL.createObjectURL(this._mediaSource);\n\t\tthis._audio.src = this._urlString;\n\t\tthis._audio.loop = this._isLooping;\n\n\t\tthis._sourceDirty = false;\n\t}\n\n\tprivate _disposeSource():void\n\t{\n\t\tif (!this._isOpening) {\n\t\t\tif (this._sourceBuffer.timestampOffset)\n\t\t\t\tthis._sourceBuffer.remove(0, this._sourceBuffer.timestampOffset);\n\n\t\t\tthis._sourceBuffer.removeEventListener(\"updateend\", this._updateEndDelegate);\n\t\t\tthis._mediaSource.removeSourceBuffer(this._sourceBuffer);\n\t\t\tdelete this._sourceBuffer;\n\t\t\tthis._sourceBuffer = null;\n\t\t}\n\n\t\tthis._mediaSource.removeEventListener(\"sourceopen\", this._sourceOpenDelegate);\n\t\tURL.revokeObjectURL(this._urlString);\n\t\tdelete this._mediaSource;\n\t\tthis._mediaSource = null;\n\t}\n}",
    "\nexport class WebAudioChannel\n{\n\tpublic static maxChannels:number = 64;\n\n\tpublic static _channels:Array<WebAudioChannel> = new Array<WebAudioChannel>();\n\n\tpublic static _decodeCache:Object = new Object();\n\tpublic static _errorCache:Object = new Object();\n\n\tprivate static _audioCtx;\n\tprivate _audioCtx;\n\n\tprivate _gainNode;\n\tprivate _source;\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _isDecoding:boolean = false;\n\tprivate _currentTime:number;\n\tprivate _id:number;\n\tprivate _volume:number = 1;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\n\tprivate _onEndedDelegate : (event:any) => void;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audioCtx.currentTime - this._startTime;\n\t}\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._gainNode.gain.value = this._volume;\n\t}\n\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn this._isDecoding;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audioCtx = WebAudioChannel._audioCtx || (WebAudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode.gain.value = this._volume;\n\n\t\tthis._gainNode.connect(this._audioCtx.destination);\n\n\t\tthis._onEndedDelegate = (event) => this._onEnded(event);\n\t}\n\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false, id:number = 0):void\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._currentTime = offset;\n\n\t\tthis._id = id;\n\n\t\tthis._isDecoding = true;\n\n\t\t//fast path for short sounds\n\t\tif (WebAudioChannel._decodeCache[id])\n\t\t\tthis._onDecodeComplete(WebAudioChannel._decodeCache[id]);\n\t\telse if (!WebAudioChannel._errorCache[id])\n\t\t\tthis._audioCtx.decodeAudioData(buffer, (buffer) => this._onDecodeComplete(buffer), (event) => this._onError(event));\n\t\telse\n\t\t\tthis.stop();\n\t}\n\n\tpublic stop():void\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t\tthis._isDecoding = false;\n\n\t\tif (this._source)\n\t\t\tthis._disposeSource();\n\t}\n\n\tpublic _onDecodeComplete(buffer):void\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isDecoding = false;\n\n\t\t//if (buffer.duration < 2) //cache all buffers?\n\t\tWebAudioChannel._decodeCache[this._id] = buffer;\n\n\t\tif (this._source)\n\t\t\tthis._disposeSource();\n\n\t\tthis._source = this._audioCtx.createBufferSource();\n\n\t\tthis._source.loop = this._isLooping;\n\t\tthis._source.connect(this._gainNode);\n\n\t\tthis._source.buffer = buffer;\n\t\tthis._duration = buffer.duration;\n\n\t\tthis._startTime = this._audioCtx.currentTime - this._currentTime;\n\t\tthis._source.onended = this._onEndedDelegate;\n\t\ttry {\n\t\t\tthis._source.start(this._audioCtx.currentTime, this._currentTime);\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error starting audio: \" + error);\n\t\t\tthis._disposeSource();\n\t\t}\n\t}\n\n\tpublic _onError(event):void\n\t{\n\t\tconsole.log(\"Error with decoding audio data\");\n\t\tWebAudioChannel._errorCache[this._id] = true;\n\t\tthis.stop();\n\t}\n\n\tprivate _onEnded(event):void\n\t{\n\t\tthis.stop();\n\t}\n\n\tprivate _disposeSource():void\n\t{\n\t\t//clean up\n\t\tthis._source.stop(this._audioCtx.currentTime);\n\t\tthis._source.onended = null;\n\t\tthis._source.disconnect();\n\t\tdelete this._source.buffer;\n\t\tdelete this._source;\n\t\tthis._source = null;\n\t}\n}",
    "export {AudioManager}\t\t\t\t\tfrom \"./managers/AudioManager\";\nexport {IAudioChannel}\t\t\t\t\tfrom \"./managers/IAudioChannel\";\nexport {IAudioChannelClass}\t\t\t\tfrom \"./managers/IAudioChannelClass\";\nexport {StreamingAudioChannel}\t\t\tfrom \"./managers/StreamingAudioChannel\";\nexport {WebAudioChannel}\t\t\t\tfrom \"./managers/WebAudioChannel\";",
    "export class CrossDomainPolicy\n{\n\tpublic static ANONYMOUS:string = 'anonymous';\n\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\n}\n",
    "export class URLLoaderDataFormat\n{\n\t/**\n\t * TEXT\n\t * @type {string}\n\t */\n\tpublic static TEXT:string = \"text\";\n\n\t/**\n\t * Variables / Value Pairs\n\t * @type {string}\n\t */\n\tpublic static VARIABLES:string = \"variables\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BLOB:string = \"blob\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BINARY:string = \"binary\";\n}",
    "import {URLLoaderDataFormat}\t\t\tfrom \"../net/URLLoaderDataFormat\";\nimport {URLRequest}\t\t\t\t\tfrom \"../net/URLRequest\";\nimport {URLRequestMethod}\t\t\t\tfrom \"../net/URLRequestMethod\";\nimport {URLVariables}\t\t\t\t\tfrom \"../net/URLVariables\";\nimport {EventDispatcher}\t\t\t\tfrom \"../events/EventDispatcher\";\nimport {URLLoaderEvent}\t\t\t\tfrom \"../events/URLLoaderEvent\";\n\n/**\n * The URLLoader is used to load a single file, as part of a resource.\n *\n * While URLLoader can be used directly, e.g. to create a third-party asset\n * management system, it's recommended to use any of the classes Loader3D, Loader\n * and AssetLibrary instead in most cases.\n *\n * @see Loader\n * @see away.library.AssetLibrary\n */\nexport class URLLoader extends EventDispatcher\n{\n\tprivate _XHR:XMLHttpRequest;\n\tprivate _status:number;\n\tprivate _bytesLoaded:number = 0;\n\tprivate _bytesTotal:number = 0;\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\n\tprivate _loadError:boolean = false;\n\n\tprivate _request:URLRequest;\n\tprivate _data:any;\n\n\tprivate _loadStartEvent:URLLoaderEvent;\n\tprivate _loadErrorEvent:URLLoaderEvent;\n\tprivate _loadCompleteEvent:URLLoaderEvent;\n\tprivate _progressEvent:URLLoaderEvent;\n\tprivate _statusEvent:URLLoaderEvent;\n\n\t/**\n\t * Creates a new URLLoader object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get url():string\n\t{\n\n\t\treturn this._request? this._request.url : '';\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\n\t/**\n\t *\n\t * URLLoaderDataFormat.BINARY\n\t * URLLoaderDataFormat.TEXT\n\t * URLLoaderDataFormat.VARIABLES\n\t *\n\t * @param format\n\t */\n\tpublic set dataFormat(format:string)\n\t{\n\t\tthis._dataFormat = format;\n\t}\n\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesLoaded():number\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesTotal():number\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * Load a resource from a file.\n\t *\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\n\t */\n\tpublic load(request:URLRequest):void\n\t{\n\t\tthis._request = request;\n\n\t\tthis.initXHR();\n\n\t\tif (request.method === URLRequestMethod.POST)\n\t\t\tthis.postRequest(request);\n\t\telse\n\t\t\tthis.getRequest(request);\n\t}\n\n\tpublic isSupported():boolean {\n\t\treturn window != null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic close():void\n\t{\n\t\tthis._XHR.abort();\n\n\t\tthis.disposeXHR();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tif (this._XHR)\n\t\t\tthis._XHR.abort();\n\n\t\tthis.disposeXHR();\n\t}\n\n\t/**\n\t *\n\t * @param xhr\n\t * @param responseType\n\t */\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\n\t{\n\t\tswitch (responseType) {\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\txhr.responseType = responseType;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\txhr.responseType = '';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate getRequest(request:URLRequest):void\n\t{\n\t\ttry {\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\t\t\tthis._XHR.send(); // No data to send\n\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate postRequest(request:URLRequest):void\n\t{\n\t\tthis._loadError = false;\n\n\t\tthis._XHR.open(request.method, request.url, request.async);\n\n\t\tif (request.data != null) {\n\t\t\tif (request.data instanceof URLVariables) {\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\n\n\t\t\t\ttry {\n\t\t\t\t\tthis._XHR.responseType = 'text';\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\n\t\t\t\tif (request.data)\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\n\t\t\t\telse\n\t\t\t\t\tthis._XHR.send(); // no data to send\n\t\t\t}\n\t\t} else {\n\t\t\tthis._XHR.send(); // No data to send\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * @param error {XMLHttpRequestException}\n\t */\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\n\t{\n\t\tswitch (error.code) {\n\n\t\t/******************************************************************************************************************************************************************************************************\n\t\t *\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\n\t\t *\n\t\t ******************************************************************************************************************************************************************************************************/\n\n\t\t\tcase 101:\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initXHR():void\n\t{\n\t\tif (!this._XHR) {\n\t\t\tthis._XHR = new XMLHttpRequest();\n\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate disposeXHR():void\n\t{\n\t\tif (this._XHR !== null) {\n\t\t\tthis._XHR.onloadstart = null;\n\t\t\tthis._XHR.onprogress = null;\n\t\t\tthis._XHR.onabort = null;\n\t\t\tthis._XHR.onerror = null;\n\t\t\tthis._XHR.onload = null;\n\t\t\tthis._XHR.ontimeout = null;\n\t\t\tthis._XHR.onloadend = null;\n\t\t\tthis._XHR = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decodeURLVariables(source:string):Object\n\t{\n\t\tvar result:Object = new Object();\n\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\n\t\treturn result;\n\t}\n\n\t// XMLHttpRequest - Event Handlers\n\n\t/**\n\t * When XHR state changes\n\t * @param event\n\t */\n\tprivate onReadyStateChange(event:Event):void\n\t{\n\t\tif (this._XHR.readyState == 4) {\n\t\t\tthis._status = this._XHR.status;\n\t\t\tif (this._status == 404) {\n\t\t\t\tthis._loadError = true;\n\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent || (this._loadErrorEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_ERROR, this)));\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(this._statusEvent || (this._statusEvent = new URLLoaderEvent(URLLoaderEvent.HTTP_STATUS, this)));\n\t\t}\n\t}\n\n\t/**\n\t * When the request has completed, regardless of whether or not it was successful.\n\t * @param event\n\t */\n\tprivate onLoadEnd(event:ProgressEvent):void\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\t}\n\n\t/**\n\t * When the author specified timeout has passed before the request could complete.\n\t * @param event\n\t */\n\tprivate onTimeOut(event:Event):void\n\t{\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\n\t}\n\n\t/**\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t * @param event\n\t */\n\tprivate onAbort(event:UIEvent):void\n\t{\n\t\t// TODO: investigate whether this needs to be an IOError\n\t}\n\n\t/**\n\t * While loading and sending data.\n\t * @param event\n\t */\n\tprivate onProgress(event:ProgressEvent):void\n\t{\n\t\tthis._bytesTotal = event.total;\n\t\tthis._bytesLoaded = event.loaded;\n\n\t\tthis.dispatchEvent(this._progressEvent || (this._progressEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_PROGRESS, this)));\n\t}\n\n\t/**\n\t * When the request starts.\n\t * @param event\n\t */\n\tprivate onLoadStart(event:ProgressEvent):void\n\t{\n\t\tthis.dispatchEvent(this._loadStartEvent || (this._loadStartEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_START, this)));\n\t}\n\n\t/**\n\t * When the request has successfully completed.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event):void\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\n\t\tswitch (this._dataFormat) {\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\tthis._data = this._XHR.response;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.dispatchEvent(this._loadCompleteEvent || (this._loadCompleteEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_COMPLETE, this)));\n\t}\n\n\t/**\n\t * When the request has failed. ( due to network issues ).\n\t * @param event\n\t */\n\tprivate onLoadError(event:Event):void\n\t{\n\t\tthis._loadError = true;\n\n\t\tthis.dispatchEvent(this._loadErrorEvent || (this._loadErrorEvent  = new URLLoaderEvent(URLLoaderEvent.LOAD_ERROR, this)));\n\t}\n}",
    "export class URLRequestMethod\n{\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static POST:string = 'POST';\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static GET:string = 'GET';\n}",
    "import {URLRequestMethod}\t\t\t\tfrom \"../net/URLRequestMethod\";\n\nexport class URLRequest\n{\n\t/*\n\t * The MIME content type of the content in the the data property.\n\t * @type {string}\n\t */\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\n\n\t/**\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\n\t *\n\t */\n\tpublic data:any;\n\n\t/**\n\t *\n\t * away.net.URLRequestMethod.GET\n\t * away.net.URLRequestMethod.POST\n\t *\n\t * @type {string}\n\t */\n\tpublic method:string = URLRequestMethod.GET;\n\n\t/**\n\t * Use asynchronous XMLHttpRequest\n\t * @type {boolean}\n\t */\n\tpublic async:boolean = true;\n\n\t/**\n\t *\n\t */\n\tprivate _url:string;\n\n\t/**\n\n\t * @param url\n\t */\n\tconstructor(url:string = null)\n\t{\n\t\tthis._url = url;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set url(value:string)\n\t{\n\t\tthis._url = value;\n\t}\n\n\t/**\n\t * dispose\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.data = null;\n\t\tthis._url = null;\n\t}\n}",
    "export class URLVariables\n{\n\tprivate _variables:Object = new Object();\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tconstructor(source:string = null)\n\t{\n\t\tif (source !== null)\n\t\t\tthis.decode(source);\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decode(source:string):void\n\t{\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic toString():string\n\t{\n\t\treturn '';\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get variables():Object\n\t{\n\t\treturn this._variables;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get formData():FormData\n\t{\n\t\tvar fd:FormData = new FormData();\n\n\t\tfor (var s in this._variables)\n\t\t\tfd.append(s, this._variables[s]);\n\n\t\treturn fd;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic set variables(obj:Object)\n\t{\n\t\tthis._variables = obj;\n\t}\n}",
    "export {CrossDomainPolicy}\t\t\t\tfrom \"./net/CrossDomainPolicy\";\nexport {URLLoader}\t\t\t\t\t\tfrom \"./net/URLLoader\";\nexport {URLLoaderDataFormat}\t\t\tfrom \"./net/URLLoaderDataFormat\";\nexport {URLRequest}\t\t\t\t\t\tfrom \"./net/URLRequest\";\nexport {URLRequestMethod}\t\t\t\tfrom \"./net/URLRequestMethod\";\nexport {URLVariables}\t\t\t\t\tfrom \"./net/URLVariables\";",
    "import {BitmapImage2D}\t\t\tfrom \"../image/BitmapImage2D\";\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {URLLoaderDataFormat}\t\tfrom \"../net/URLLoaderDataFormat\";\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\nimport {ParserUtils}\t\t\t\tfrom \"../parsers/ParserUtils\";\nimport {ByteArray}\t\t\t\tfrom \"../utils/ByteArray\";\n\n/**\n * Image2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nexport class Image2DParser extends ParserBase\n{\n\tprivate _startedParsing:boolean;\n\tprivate _doneParsing:boolean;\n\tprivate _loadingImage:boolean;\n\tprivate _htmlImageElement:HTMLImageElement;\n\n\t/**\n\t * Creates a new Image2DParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\n\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\n\t\tif (data  instanceof HTMLImageElement)\n\t\t\treturn true;\n\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tba.position = 0;\n\n\t\tif (ba.readUnsignedShort() == 0xd8ff)\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\n\n\t\tba.position = 0;\n\t\tif (ba.readShort() == 0x424D)\n\t\t\treturn true; // BMP\n\n\t\tba.position = 1;\n\t\tif (ba.readUTFBytes(3) == 'PNG')\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'ATF')\n\t\t\treturn true;\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tvar asset:BitmapImage2D;\n\t\tvar sizeError:boolean = false;\n\n\t\tif (this._loadingImage) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else if (this._htmlImageElement) {\n\t\t\t//if (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t//}\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\n\t\t\tvar htmlImageElement:HTMLImageElement = <HTMLImageElement> this.data;\n\t\t\t//if (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\n\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement, false);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t//} else {\n\t\t\t//\tsizeError = true;\n\t\t\t//}\n\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\n\n\t\t\tvar ba:ByteArray = this.data;\n\t\t\tba.position = 0;\n\t\t\tthis._htmlImageElement = ParserUtils.byteArrayToImage(this.data);\n\n\t\t\tif (!this._htmlImageElement.complete) {\n\t\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\t\tthis._loadingImage = true;\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t\t//if (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t//} else {\n\t\t\t//\tsizeError = true;\n\t\t\t//\n\t\t\t//}\n\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\n\n\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\n\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\n\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\tthis._loadingImage = true;\n\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\n\t\t{\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\n\t\t}\n\n\t\tthis._pContent = asset;\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tpublic onLoadComplete(event):void\n\t{\n\t\tthis._loadingImage = false;\n\t}\n}",
    "import {BitmapImage2D}\t\t\tfrom \"../image/BitmapImage2D\";\nimport {BitmapImageCube}\t\t\tfrom \"../image/BitmapImageCube\";\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {URLLoaderDataFormat}\t\tfrom \"../net/URLLoaderDataFormat\";\nimport {URLRequest}\t\t\t\tfrom \"../net/URLRequest\";\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\nimport {ResourceDependency}\t\tfrom \"../parsers/ResourceDependency\";\n\n/**\n * ImageCubeParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nexport class ImageCubeParser extends ParserBase\n{\n\tprivate static posX:string = 'posX';\n\tprivate static negX:string = 'negX';\n\tprivate static posY:string = 'posY';\n\tprivate static negY:string = 'negY';\n\tprivate static posZ:string = 'posZ';\n\tprivate static negZ:string = 'negZ';\n\n\tprivate _imgDependencyDictionary:Object;\n\n\t/**\n\t * Creates a new ImageCubeParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"cube\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar obj = JSON.parse(data);\n\n\t\t\tif (obj)\n\t\t\t\treturn true;\n\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\n\t\t\tvar asset:BitmapImageCube = new BitmapImageCube(this._getBitmapImage2D(ImageCubeParser.posX).width);\n\n\t\t\tasset.draw(BitmapImageCube.posX, this._getBitmapImage2D(ImageCubeParser.posX));\n\t\t\tasset.draw(BitmapImageCube.negX, this._getBitmapImage2D(ImageCubeParser.negX));\n\t\t\tasset.draw(BitmapImageCube.posY, this._getBitmapImage2D(ImageCubeParser.posY));\n\t\t\tasset.draw(BitmapImageCube.negY, this._getBitmapImage2D(ImageCubeParser.negY));\n\t\t\tasset.draw(BitmapImageCube.posZ, this._getBitmapImage2D(ImageCubeParser.posZ));\n\t\t\tasset.draw(BitmapImageCube.negZ, this._getBitmapImage2D(ImageCubeParser.negZ));\n\n\t\t\t//clear dictionary\n\t\t\tthis._imgDependencyDictionary = null;\n\n\t\t\tasset.name = this._iFileName;\n\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\ttry {\n\t\t\tvar json:any = JSON.parse(this.data);\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\n\t\t\tvar rec:any;\n\n\t\t\tif (data.length != 6)\n\t\t\t\tthis._pDieWithError('ImageCubeParser: Error - cube texture should have exactly 6 images');\n\n\t\t\tif (json) {\n\t\t\t\tthis._imgDependencyDictionary = new Object();\n\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\n\t\t\t\t\trec = data[c];\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\n\t\t\t\t}\n\n\t\t\t\tif (!this._validateCubeData()) {\n\n\t\t\t\t\tthis._pDieWithError(\"ImageCubeParser: JSON data error - cubes require id of:   \\n\" + ImageCubeParser.posX + ', ' + ImageCubeParser.negX + ',  \\n' + ImageCubeParser.posY + ', ' + ImageCubeParser.negY + ',  \\n' + ImageCubeParser.posZ + ', ' + ImageCubeParser.negZ);\n\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate _validateCubeData():boolean\n\t{\n\t\treturn  ( this._imgDependencyDictionary[ ImageCubeParser.posX ] != null && this._imgDependencyDictionary[ ImageCubeParser.negX ] != null && this._imgDependencyDictionary[ ImageCubeParser.posY ] != null && this._imgDependencyDictionary[ ImageCubeParser.negY ] != null && this._imgDependencyDictionary[ ImageCubeParser.posZ ] != null && this._imgDependencyDictionary[ ImageCubeParser.negZ ] != null );\n\t}\n\n\tprivate _getBitmapImage2D(name:string):BitmapImage2D\n\t{\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\n\n\t\tif (dependency)\n\t\t\treturn <BitmapImage2D> dependency.assets[0];\n\n\t\treturn null;\n\t}\n\n}",
    "import {BitmapImage2D}\t\t\tfrom \"../image/BitmapImage2D\";\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {URLRequest}\t\t\t\tfrom \"../net/URLRequest\";\nimport {AbstractMethodError}\t\tfrom \"../errors/AbstractMethodError\";\nimport {AssetEvent}\t\t\t\tfrom \"../events/AssetEvent\";\nimport {EventDispatcher}\t\t\tfrom \"../events/EventDispatcher\";\nimport {ParserEvent}\t\t\t\tfrom \"../events/ParserEvent\";\nimport {TimerEvent}\t\t\t\tfrom \"../events/TimerEvent\";\nimport {ParserUtils}\t\t\t\tfrom \"../parsers/ParserUtils\";\nimport {ResourceDependency}\t\tfrom \"../parsers/ResourceDependency\";\nimport {ByteArray}\t\t\t\tfrom \"../utils/ByteArray\";\nimport {ImageUtils}\t\t\t\tfrom \"../utils/ImageUtils\";\nimport {Timer}\t\t\t\t\tfrom \"../utils/Timer\";\nimport {getTimer}\t\t\t\t\tfrom \"../utils/getTimer\";\n\n/**\n * <code>ParserBase</code> provides an abstract base export class for objects that convert blocks of data to data structures\n * supported by away.\n *\n * If used by <code>Loader</code> to automatically determine the parser type, two public static methods should\n * be implemented, with the following signatures:\n *\n * <code>public static supportsType(extension : string) : boolean</code>\n * Indicates whether or not a given file extension is supported by the parser.\n *\n * <code>public static supportsData(data : *) : boolean</code>\n * Tests whether a data block can be parsed by the parser.\n *\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\n * handle regardless of whether the object was loaded or not.\n *\n * @see Loader\n */\nexport class ParserBase extends EventDispatcher\n{\n\tpublic _isParsing:boolean;\n\tpublic _iFileName:string;\n\tprivate _dataFormat:string;\n\tprivate _data:any;\n\tprivate _frameLimit:number;\n\tprivate _lastFrameTime:number;\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\n\tpublic _pContent:IAsset;\n\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// Needs to be implemented in all Parsers (\n\t//<code>public static supportsType(extension : string) : boolean</code>\n\t//* Indicates whether or not a given file extension is supported by the parser.\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate _dependencies:Array<ResourceDependency>;\n\tprivate _parsingPaused:boolean;\n\tprivate _parsingComplete:boolean;\n\tprivate _parsingFailure:boolean;\n\tprivate _timer:Timer;\n\tprivate _materialMode:number;\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\n\t */\n\tpublic static PARSING_DONE:boolean = true;\n\t/* Protected */\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\n\t */\n\tpublic static MORE_TO_PARSE:boolean = false;\n\t/* Protected */\n\n\n\tpublic get content():IAsset\n\t{\n\t\treturn this._pContent;\n\t}\n\n\t/**\n\t * Creates a new ParserBase object\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\n\t *\n\t * @see away.loading.parsers.ParserDataFormat\n\t */\n\tconstructor(format:string)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = 0;\n\t\tthis._dataFormat = format;\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\n\t}\n\n\t/**\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\n\t */\n\n\tpublic isBitmapImage2DValid(bitmapImage2D:BitmapImage2D):boolean\n\t{\n\t\tvar isValid:boolean = ImageUtils.isImage2DValid(bitmapImage2D);\n\n\t\tif (!isValid) {\n\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tpublic set parsingFailure(b:boolean)\n\t{\n\t\tthis._parsingFailure = b;\n\t}\n\n\tpublic get parsingFailure():boolean\n\t{\n\t\treturn this._parsingFailure;\n\t}\n\n\tpublic get parsingPaused():boolean\n\t{\n\t\treturn this._parsingPaused;\n\t}\n\n\tpublic get parsingComplete():boolean\n\t{\n\t\treturn this._parsingComplete;\n\t}\n\n\tpublic set materialMode(newMaterialMode:number)\n\t{\n\t\tthis._materialMode = newMaterialMode;\n\t}\n\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\n\t */\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\n\t * next frame.\n\t *\n\t * @param data The untyped data object in which the loaded data resides.\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\n\t * actual time spent on a frame can exceed this number since time-checks can\n\t * only be performed between logical sections of the parsing procedure.\n\t */\n\tpublic parseAsync(data:any, frameLimit:number = 30):void\n\t{\n\t\tthis._data = data;\n\t\tthis._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\n\t * dependency should be a member of the dependencies property.\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\treturn asset.name;\n\t}\n\n\tpublic _iResumeParsing():void\n\t{\n\t\tthis._parsingPaused = false;\n\n\t\tif (this._timer)\n\t\t\tthis._timer.start();\n\n\t\t//get started!\n\t\tif (!this._isParsing)\n\t\t\tthis._pOnInterval();\n\t}\n\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null):void\n\t{\n\t\tvar type_event:string;\n\t\tvar type_name:string;\n\n\t\tif (name != null)\n\t\t\tasset.name = name;\n\n\t\t// If the asset has no name, give it\n\t\t// a per-type default name.\n\t\tif (!asset.name)\n\t\t\tasset.name = asset.assetType;\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\n\t}\n\n\t/**\n\t * Parse the next block of data.\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pDieWithError(message:string = 'Unknown parsing error'):void\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t\tthis._timer = null;\n\t\t}\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t}\n\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false, sub_id:number=0):ResourceDependency\n\t{\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents, sub_id);\n\t\tthis._dependencies.push(dependency);\n\n\t\treturn dependency;\n\t}\n\n\tpublic _pPauseAndRetrieveDependencies():void\n\t{\n\t\tthis._pPauseParsing();\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\n\t}\n\n\tpublic _pPauseParsing():void\n\t{\n\t\tif (this._timer)\n\t\t\tthis._timer.stop();\n\n\t\tthis._parsingPaused = true;\n\t}\n\n\t/**\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\n\t */\n\tpublic _pHasTime():boolean\n\t{\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\n\t}\n\n\t/**\n\t * Called when the parsing pause interval has passed and parsing can proceed.\n\t */\n\tpublic _pOnInterval(event:TimerEvent = null):void\n\t{\n\t\tthis._lastFrameTime = getTimer();\n\t\tthis._isParsing = true;\n\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\n\t\t\tthis._pFinishParsing();\n\n\t\tthis._isParsing = false;\n\t}\n\n\t/**\n\t * Initializes the parsing of data.\n\t * @param frameLimit The maximum duration of a parsing session.\n\t */\n\tpublic _pStartParsing(frameLimit:number):void\n\t{\n\t\tthis._frameLimit = frameLimit;\n\t\tthis._timer = new Timer(this._frameLimit, 0);\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\tthis._timer.start();\n\n\t\t//get started!\n\t\tthis._pOnInterval();\n\t}\n\n\t/**\n\t * Finish parsing the data.\n\t */\n\tpublic _pFinishParsing():void\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t}\n\n\t\tthis._timer = null;\n\t\tthis._parsingComplete = true;\n\t\tthis._isParsing = false;\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetTextData():string\n\t{\n\t\treturn ParserUtils.toString(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {ByteArray}\n\t * @private\n\t */\n\tpublic _pGetByteData():ByteArray\n\t{\n\t\treturn ParserUtils.toByteArray(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {any}\n\t * @private\n\t */\n\tpublic _pGetData():any\n\t{\n\t\treturn this._data;\n\t}\n\n}",
    "/**\n * An enumeration providing values to describe the data format of parsed data.\n */\nexport class ParserDataFormat\n{\n\t/**\n\t * Describes the format of a binary file.\n\t */\n\tpublic static BINARY:string = \"binary\";\n\n\t/**\n\t * Describes the format of a plain text file.\n\t */\n\tpublic static PLAIN_TEXT:string = \"plainText\";\n\n\t/**\n\t * Describes the format of an image file\n\t */\n\tpublic static IMAGE:string = \"image\";\n\n}",
    "import {BitmapImage2D}\t\t\tfrom \"../image/BitmapImage2D\";\nimport {WaveAudio}\t\t\t\tfrom \"../audio/WaveAudio\";\nimport {ByteArray}\t\t\t\tfrom \"../utils/ByteArray\";\n\nexport class ParserUtils\n{\n\tpublic static arrayBufferToBase64(data:ArrayBuffer, mimeType:string):string\n\t{\n\t\tvar byteStr:string = '';\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\n\t\tvar len:number = bytes.byteLength;\n\n\t\tfor (var i = 0; i < len; i++)\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\n\n\t\tvar base64Image:string = window.btoa(byteStr);\n\t\treturn 'data:' + mimeType + ';base64,' + base64Image;\n\t}\n\n\tpublic static arrayBufferToAudio(data:ArrayBuffer, fileType:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'audio/' + fileType);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an ArrayBuffer to a base64 string\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\tpublic static byteArrayToAudio(data:ByteArray, filetype:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'audio/' + filetype);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an Blob to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a Blob\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static blobToImage(data:Blob):HTMLImageElement\n\t{\n\t\tvar URLObj = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an Blob to audio - returns an HTMLAudioElement\n\t *\n\t * @param audio data as a Blob\n\t *\n\t * @return HTMLAudioElement\n\t *\n\t */\n\tpublic static blobToAudio(data:Blob):HTMLAudioElement\n\t{\n\t\tvar URLObj = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static imageToBitmapImage2D(img:HTMLImageElement, powerOfTwo:boolean = true):BitmapImage2D\n\t{\n\t\tvar bitmapData:BitmapImage2D = new BitmapImage2D(img.width, img.height, true, null, powerOfTwo);\n\t\tbitmapData.draw(img);\n\n\t\treturn bitmapData;\n\t}\n\n\t/**\n\t * Returns a object as ByteArray, if possible.\n\t *\n\t * @param data The object to return as ByteArray\n\t *\n\t * @return The ByteArray or null\n\t *\n\t */\n\tpublic static toByteArray(data:any):ByteArray\n\t{\n\t\tvar b:ByteArray = new ByteArray();\n\t\tb.setArrayBuffer(data);\n\t\treturn b;\n\t}\n\n\t/**\n\t * Returns a object as String, if possible.\n\t *\n\t * @param data The object to return as String\n\t * @param length The length of the returned String\n\t *\n\t * @return The String or null\n\t *\n\t */\n\tpublic static toString(data:any, length:number = 0):string\n\t{\n\n\t\tif (typeof data === 'string') {\n\t\t\tvar s:string = <string> data;\n\n\t\t\tif (s['substr'] != null)\n\t\t\t\treturn s.substr(0, s.length);\n\t\t}\n\n\t\tif (data instanceof ByteArray) {\n\t\t\tvar ba:ByteArray = <ByteArray> data;\n\t\t\tba.position = 0;\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\n\t\t}\n\n\t\treturn null;\n\n\t\t/*\n\t\t var ba:ByteArray;\n\n\t\t length ||= uint.MAX_VALUE;\n\n\t\t if (data is String)\n\t\t return String(data).substr(0, length);\n\n\t\t ba = toByteArray(data);\n\t\t if (ba) {\n\t\t ba.position = 0;\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\n\t\t }\n\n\t\t return null;\n\n\t\t */\n\n\t}\n}",
    "﻿import {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {URLLoader}\t\t\t\tfrom \"../net/URLLoader\";\nimport {URLRequest}\t\t\t\tfrom \"../net/URLRequest\";\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\n\n/**\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\n * required by a parser, used by ResourceLoadSession.\n *\n */\nexport class ResourceDependency\n{\n\tprivate _id:string;\n\tprivate _sub_id:number;\n\n\tprivate _request:URLRequest;\n\tprivate _assets:Array<IAsset>;\n\tprivate _parser:ParserBase;\n\tprivate _parentParser:ParserBase;\n\tprivate _data:any;\n\tprivate _retrieveAsRawData:boolean;\n\tprivate _suppressAssetEvents:boolean;\n\tprivate _dependencies:Array<ResourceDependency>;\n\n\tpublic _iLoader:URLLoader;\n\tpublic _iSuccess:boolean;\n\n\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false, sub_id:number=0)\n\t{\n\t\tthis._id = id;\n\t\tthis._sub_id = sub_id;\n\t\tthis._request = request;\n\t\tthis._data = data;\n\t\tthis._parser = parser;\n\t\tthis._parentParser = parentParser;\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\n\t\tthis._assets = new Array<IAsset>();\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get id():string\n\t{\n\t\treturn this._id;\n\t}\n\tpublic get sub_id():number\n\t{\n\t\treturn this._sub_id;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get request():URLRequest\n\t{\n\t\treturn this._request;\n\t}\n\n\t/**\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parser():ParserBase\n\t{\n\t\treturn this._parser;\n\t}\n\n\t/**\n\t * The parser which is dependent on this ResourceDependency object.\n\t */\n\tpublic get parentParser():ParserBase\n\t{\n\t\treturn this._parentParser;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get retrieveAsRawData():boolean\n\t{\n\t\treturn this._retrieveAsRawData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get suppresAssetEvents():boolean\n\t{\n\t\treturn this._suppressAssetEvents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * @private\n\t * Method to set data after having already created the dependency object, e.g. after load.\n\t */\n\tpublic _iSetData(data:any):void\n\t{\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t */\n\tpublic _iSetParser(parser:ParserBase):void\n\t{\n\t\tthis._parser = parser;\n\t}\n\n\t/**\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\n\t * to its intended parent. The dependency should be a member of the dependencies property.\n\t */\n\tpublic resolve():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependency(this);\n\t}\n\n\t/**\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\n\t */\n\tpublic resolveFailure():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\n\t}\n\n\t/**\n\t * Resolve the dependencies name\n\t */\n\tpublic resolveName(asset:IAsset):string\n\t{\n\t\tif (this._parentParser)\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\n\n\t\treturn asset.name;\n\t}\n}",
    "import {Sampler2D}\t\t\t\tfrom \"../image/Sampler2D\";\nimport {BitmapImage2D}\t\t\tfrom \"../image/BitmapImage2D\";\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {URLLoaderDataFormat}\t\tfrom \"../net/URLLoaderDataFormat\";\nimport {URLRequest}\t\t\t\tfrom \"../net/URLRequest\";\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\nimport {ParserUtils}\t\t\t\tfrom \"../parsers/ParserUtils\";\nimport {ResourceDependency}\t\tfrom \"../parsers/ResourceDependency\";\nimport {XmlUtils}\t\t\t\t\tfrom \"../utils/XmlUtils\";\n\n/**\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nexport class TextureAtlasParser extends ParserBase\n{\n\tprivate _doc:Node;\n\tprivate _imagePath:string;\n\tprivate _imageData:BitmapImage2D;\n\tprivate _subTextureNodes:NodeList;\n\tprivate _parseState:number = 0;\n\n\t/**\n\t * Creates a new TextureAtlasParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"xml\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar content:string = ParserUtils.toString(data);\n\t\t\tif(content.indexOf(\"TextureAtlas\") != -1 || content.indexOf(\"textureatlas\") != -1)\n\t\t\t\treturn true;\n\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\n\t{\n\t\tif(resourceDependency.assets.length) {\n\t\t\tthis._imageData = <BitmapImage2D> resourceDependency.assets[0];\n\t\t\tthis._pFinalizeAsset(this._imageData);\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_SUBTEXTURES;\n\t\t} else {\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\n\t{\n\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar nodes:NodeList;\n\n\t\tswitch(this._parseState) {\n\t\t\tcase TextureAtlasParserState.PARSE_XML:\n\t\t\t\ttry {\n\t\t\t\t\tthis._doc = XmlUtils.getChildrenWithTag(XmlUtils.strToXml(this._pGetTextData()), \"TextureAtlas\")[0];\n\n\t\t\t\t\tthis._imagePath = XmlUtils.readAttributeValue(this._doc, \"imagePath\");\n\n\t\t\t\t\tthis._subTextureNodes = XmlUtils.getChildrenWithTag(this._doc, \"SubTexture\");\n\n\t\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_IMAGE;\n\n\t\t\t\t} catch(Error) {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_IMAGE:\n\t\t\t\tif (this._imagePath){\n\t\t\t\t\tthis._pAddDependency(this._imagePath, new URLRequest(this._imagePath));\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t\t} else {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_SUBTEXTURES:\n\t\t\t\tvar sampler:Sampler2D;\n\t\t\t\tvar element:Node;\n\t\t\t\tvar x:string;\n\t\t\t\tvar y:string;\n\t\t\t\tvar width:string;\n\t\t\t\tvar height:string;\n\t\t\t\tvar len:number = this._subTextureNodes.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\telement = this._subTextureNodes[i];\n\t\t\t\t\tsampler = new Sampler2D();\n\n\t\t\t\t\t//setup subtexture rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"x\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"y\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"width\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"height\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tsampler.imageRect = new Rectangle(parseInt(x)/this._imageData.width, parseInt(y)/this._imageData.height, parseInt(width)/this._imageData.width, parseInt(height)/this._imageData.height);\n\n\t\t\t\t\t//setup frame rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"frameX\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"frameY\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"frameWidth\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"frameHeight\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tsampler.frameRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n\n\t\t\t\t\tthis._pFinalizeAsset(sampler, XmlUtils.readAttributeValue(element, \"name\"));\n\t\t\t\t}\n\n\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_COMPLETE:\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n}\n\nexport class TextureAtlasParserState {\n\tpublic static PARSE_XML:number = 0;\n\tpublic static PARSE_IMAGE:number = 1;\n\tpublic static PARSE_SUBTEXTURES:number = 2;\n\tpublic static PARSE_COMPLETE:number = 3;\n}",
    "import {WaveAudio}\t\t\t\tfrom \"../audio/WaveAudio\";\nimport {IAsset}\t\t\t\t\tfrom \"../library/IAsset\";\nimport {URLLoaderDataFormat}\t\tfrom \"../net/URLLoaderDataFormat\";\nimport {ParserBase}\t\t\t\tfrom \"../parsers/ParserBase\";\nimport {ParserUtils}\t\t\t\tfrom \"../parsers/ParserUtils\";\nimport {ByteArray}\t\t\t\tfrom \"../utils/ByteArray\";\n\nexport class WaveAudioParser extends ParserBase\n{\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"wav\" || extension == \"mp3\" || extension == \"ogg\";\n\n\t}\n\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tvar filetype : string = WaveAudioParser.parseFileType(ba);\n\t\treturn filetype? true : false;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number):void\n\t{\n\t\t//clear content\n\t\tdelete this._pContent;\n\t\tthis._pContent = null;\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this.data instanceof ByteArray) { // Parse a ByteArray\n\t\t\tthis._pContent = new WaveAudio(this.data.arraybytes);\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\t\t\tthis._pContent = new WaveAudio(this.data);\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate static parseFileType(ba:ByteArray):string\n\t{\n\t\tba.position = 0;\n\n\t\tba.position = 0;\n\t\tif ((ba.readUnsignedShort() & 0xFFE0) == 0xFFE0) {\n\t\t\treturn 'mp3'; // test for MP3 syncword\n\t\t}\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'RIFF')\n\t\t\treturn 'wav';\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'OggS')\n\t\t\treturn 'ogg';\n\n\t\tba.position = 0;\n\n\t\treturn null;\n\t}\n}",
    "export {Image2DParser}\t\t\t\t\tfrom \"./parsers/Image2DParser\";\nexport {ImageCubeParser}\t\t\t\tfrom \"./parsers/ImageCubeParser\";\nexport {ParserBase}\t\t\t\t\t\tfrom \"./parsers/ParserBase\";\nexport {ParserDataFormat}\t\t\t\tfrom \"./parsers/ParserDataFormat\";\nexport {ParserUtils}\t\t\t\t\tfrom \"./parsers/ParserUtils\";\nexport {ResourceDependency}\t\t\t\tfrom \"./parsers/ResourceDependency\";\nexport {TextureAtlasParser}\t\t\t\tfrom \"./parsers/TextureAtlasParser\";\nexport {WaveAudioParser}\t\t\t\tfrom \"./parsers/WaveAudioParser\";",
    "/**\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\n *\n * @see away.projections.PerspectiveLens#coordinateSystem\n */\nexport class CoordinateSystem\n{\n\t/**\n\t * Default option, projects to a left-handed coordinate system\n\t */\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\n\n\t/**\n\t * Projects to a right-handed coordinate system\n\t */\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\n}",
    "import {PerspectiveProjection}\tfrom \"../projections/PerspectiveProjection\";\nimport {ProjectionBase}\t\t\tfrom \"../projections/ProjectionBase\";\n\nexport class FreeMatrixProjection extends ProjectionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._pNear = value;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._pFar = value;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._pAspectRatio = value;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.pInvalidateMatrix();\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix():void\n\t{\n\t\tthis._pMatrixInvalid = false;\n\t}\n}",
    "import {Matrix3D}\t\t\t\t\tfrom \"../geom/Matrix3D\";\nimport {Plane3D}\t\t\t\t\tfrom \"../geom/Plane3D\";\nimport {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\nimport {ProjectionEvent}\t\t\tfrom \"../events/ProjectionEvent\";\nimport {IProjection}\t\t\t\tfrom \"../projections/IProjection\";\nimport {ProjectionBase}\t\t\tfrom \"../projections/ProjectionBase\";\n\nexport class ObliqueNearPlaneProjection extends ProjectionBase\n{\n\n\tprivate _baseProjection:IProjection;\n\tprivate _plane:Plane3D;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\n\t{\n\t\tsuper();\n\t\tthis.baseProjection = baseProjection;\n\t\tthis.plane = plane;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\t}\n\n\t//@override\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._baseProjection.frustumCorners;\n\t}\n\n\t//@override\n\tpublic get near():number\n\t{\n\t\treturn this._baseProjection.near;\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._baseProjection.near = value;\n\t}\n\n\t//@override\n\tpublic get far():number\n\t{\n\t\treturn this._baseProjection.far;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._baseProjection.far = value;\n\t}\n\n\t//@override\n\tpublic get iAspectRatio():number\n\t{\n\t\treturn this._baseProjection._iAspectRatio;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._baseProjection._iAspectRatio = value;\n\t}\n\n\tpublic get plane():Plane3D\n\t{\n\t\treturn this._plane;\n\t}\n\n\tpublic set plane(value:Plane3D)\n\t{\n\t\tthis._plane = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic set baseProjection(value:IProjection)\n\t{\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis._baseProjection = value;\n\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent):void\n\t{\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix():void\n\t{\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\n\n\t\tvar cx:number = this._plane.a;\n\t\tvar cy:number = this._plane.b;\n\t\tvar cz:number = this._plane.c;\n\t\tvar cw:number = -this._plane.d + .05;\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\n\t\tinverse.invert();\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\t\tthis._pMatrix.copyRowTo(3, p);\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n}",
    "import {Matrix3DUtils}\t\t\tfrom \"../geom/Matrix3DUtils\";\nimport {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\nimport {ProjectionBase}\t\t\tfrom \"../projections/ProjectionBase\";\n\nexport class OrthographicOffCenterProjection extends ProjectionBase\n{\n\n\tprivate _minX:number;\n\tprivate _maxX:number;\n\tprivate _minY:number;\n\tprivate _maxY:number;\n\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\n\t{\n\t\tsuper();\n\t\tthis._minX = minX;\n\t\tthis._maxX = maxX;\n\t\tthis._minY = minY;\n\t\tthis._maxY = maxY;\n\t}\n\n\tpublic get minX():number\n\t{\n\t\treturn this._minX;\n\t}\n\n\tpublic set minX(value:number)\n\t{\n\t\tthis._minX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxX():number\n\t{\n\t\treturn this._maxX;\n\t}\n\n\tpublic set maxX(value:number)\n\t{\n\t\tthis._maxX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get minY():number\n\t{\n\t\treturn this._minY;\n\t}\n\n\tpublic set minY(value:number)\n\t{\n\t\tthis._minY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxY():number\n\t{\n\t\treturn this._maxY;\n\t}\n\n\tpublic set maxY(value:number)\n\t{\n\t\tthis._maxY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix():void\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar w:number = 1/(this._maxX - this._minX);\n\t\tvar h:number = 1/(this._maxY - this._minY);\n\t\tvar d:number = 1/(this._pFar - this._pNear);\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(this._maxX + this._minX)*w;\n\t\traw[13] = -(this._maxY + this._minY)*h;\n\t\traw[14] = -this._pNear*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}",
    "import {Matrix3DUtils}\t\t\tfrom \"../geom/Matrix3DUtils\";\nimport {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\nimport {ProjectionBase}\t\t\tfrom \"../projections/ProjectionBase\";\n\nexport class OrthographicProjection extends ProjectionBase\n{\n\n\tprivate _projectionHeight:number;\n\tprivate _xMax:number;\n\tprivate _yMax:number;\n\n\tconstructor(projectionHeight:number = 500)\n\t{\n\t\tsuper();\n\t\tthis._projectionHeight = projectionHeight;\n\t}\n\n\tpublic get projectionHeight():number\n\t{\n\t\treturn this._projectionHeight;\n\t}\n\n\tpublic set projectionHeight(value:number)\n\t{\n\t\tif (value == this._projectionHeight) {\n\t\t\treturn;\n\t\t}\n\t\tthis._projectionHeight = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.projectionHeight = this._projectionHeight;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix():void\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tthis._yMax = this._projectionHeight*.5;\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\n\t\t\t// assume symmetric frustum\n\n\t\t\tleft = -this._xMax;\n\t\t\tright = this._xMax;\n\t\t\ttop = -this._yMax;\n\t\t\tbottom = this._yMax;\n\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\n\t\t\traw[5] = 2/this._projectionHeight;\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\n\t\t\traw[15] = 1;\n\n\t\t} else {\n\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\n\n\t\t\tleft = center - xWidth;\n\t\t\tright = center + xWidth;\n\t\t\ttop = middle - yHgt;\n\t\t\tbottom = middle + yHgt;\n\n\t\t\traw[0] = 2*1/(right - left);\n\t\t\traw[5] = -2*1/(top - bottom);\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\n\t\t\traw[12] = (right + left)/(right - left);\n\t\t\traw[13] = (bottom + top)/(bottom - top);\n\t\t\traw[14] = this._pNear/(this.near - this.far);\n\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\t\traw[15] = 1;\n\t\t}\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}",
    "import {Matrix3DUtils}\t\t\tfrom \"../geom/Matrix3DUtils\";\nimport {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\nimport {CoordinateSystem}\t\t\tfrom \"../projections/CoordinateSystem\";\nimport {ProjectionBase}\t\t\tfrom \"../projections/ProjectionBase\";\n\nexport class PerspectiveProjection extends ProjectionBase\n{\n\tprivate _fieldOfView:number = 60;\n\tprivate _focalLength:number = 1000;\n\tprivate _hFieldOfView:number = 60;\n\tprivate _hFocalLength:number = 1000;\n\tprivate _preserveAspectRatio:boolean = true;\n\tprivate _preserveFocalLength:boolean = false;\n\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper(coordinateSystem);\n\t\tthis.fieldOfView = fieldOfView;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveAspectRatio():boolean\n\t{\n\t\treturn this._preserveAspectRatio;\n\t}\n\n\tpublic set preserveAspectRatio(value:boolean)\n\t{\n\t\tif (this._preserveAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._preserveAspectRatio = value;\n\n\t\tif (this._preserveAspectRatio)\n\t\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveFocalLength():boolean\n\t{\n\t\treturn this._preserveFocalLength;\n\t}\n\n\tpublic set preserveFocalLength(value:boolean)\n\t{\n\t\tif (this._preserveFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._preserveFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get fieldOfView():number\n\t{\n\t\treturn this._fieldOfView;\n\t}\n\n\tpublic set fieldOfView(value:number)\n\t{\n\t\tif (this._fieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._fieldOfView = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get focalLength():number\n\t{\n\t\treturn this._focalLength;\n\t}\n\n\tpublic set focalLength(value:number)\n\t{\n\t\tif (this._focalLength == value)\n\t\t\treturn;\n\n\t\tthis._focalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFieldOfView():number\n\t{\n\t\treturn this._hFieldOfView;\n\t}\n\n\tpublic set hFieldOfView(value:number)\n\t{\n\t\tif (this._hFieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._hFieldOfView = value;\n\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFocalLength():number\n\t{\n\t\treturn this._hFocalLength;\n\t}\n\n\tpublic set hFocalLength(value:number)\n\t{\n\t\tif (this._hFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._hFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\n\t\tv.x *= sZ;\n\t\tv.y *= sZ;\n\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix():void\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tif (this._preserveFocalLength) {\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\n\t\t} else {\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\n\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\t\t\telse\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\n\t\t}\n\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\t// assume scissored frustum\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\n\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\n\t\tright = center;\n\t\ttop = middle;\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\n\n\t\traw[0] = 2/(right - left);\n\t\traw[5] = 2/(bottom - top);\n\t\traw[8] = (right + left)/(right - left);\n\t\traw[9] = (bottom + top)/(bottom - top);\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\n\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\n\t\t\traw[5] = -raw[5];\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\n\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\n\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\n\n\t}\n}",
    "import {Matrix3D}\t\t\t\t\tfrom \"../geom/Matrix3D\";\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\nimport {Vector3D}\t\t\t\t\tfrom \"../geom/Vector3D\";\nimport {EventDispatcher}\t\t\tfrom \"../events/EventDispatcher\";\nimport {ProjectionEvent}\t\t\tfrom \"../events/ProjectionEvent\";\nimport {AbstractMethodError}\t\tfrom \"../errors/AbstractMethodError\";\nimport {IProjection}\t\t\t\tfrom \"../projections/IProjection\";\n\nexport class ProjectionBase extends EventDispatcher implements IProjection\n{\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\tpublic _pViewPort:Rectangle = new Rectangle();\n\tpublic _pNear:number = 20;\n\tpublic _pFar:number = 3000;\n\tpublic _pAspectRatio:number = 1;\n\n\tpublic _pMatrixInvalid:boolean = true;\n\tpublic _pFrustumCorners:number[] = [];\n\tpublic _pCoordinateSystem:string;\n\tpublic _pOriginX:number = 0.5;\n\tpublic _pOriginY:number = 0.5;\n\n\tprivate _unprojection:Matrix3D;\n\tprivate _unprojectionInvalid:boolean = true;\n\n\tconstructor(coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper();\n\n\t\tthis.coordinateSystem = coordinateSystem;\n\t}\n\n\t/**\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\n\t */\n\tpublic get coordinateSystem():string\n\t{\n\t\treturn this._pCoordinateSystem;\n\t}\n\n\tpublic set coordinateSystem(value:string)\n\t{\n\t\tif (this._pCoordinateSystem == value)\n\t\t\treturn;\n\n\t\tthis._pCoordinateSystem = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._pFrustumCorners;\n\t}\n\n\tpublic set frustumCorners(frustumCorners:number[])\n\t{\n\t\tthis._pFrustumCorners = frustumCorners;\n\t}\n\n\tpublic get matrix():Matrix3D\n\t{\n\t\tif (this._pMatrixInvalid) {\n\t\t\tthis.pUpdateMatrix();\n\t\t\tthis._pMatrixInvalid = false;\n\t\t}\n\t\treturn this._pMatrix;\n\t}\n\n\tpublic set matrix(value:Matrix3D)\n\t{\n\t\tthis._pMatrix = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get near():number\n\t{\n\t\treturn this._pNear;\n\t}\n\n\tpublic set near(value:number)\n\t{\n\t\tif (value == this._pNear) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pNear = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get originX():number\n\t{\n\t\treturn this._pOriginX;\n\t}\n\n\tpublic set originX(value:number)\n\t{\n\t\tif (this._pOriginX == value)\n\t\t\treturn;\n\n\t\tthis._pOriginX = value;\n\t}\n\n\tpublic get originY():number\n\t{\n\t\treturn this._pOriginY;\n\t}\n\n\tpublic set originY(value:number)\n\t{\n\t\tif (this._pOriginY == value)\n\t\t\treturn;\n\n\t\tthis._pOriginY = value;\n\t}\n\n\tpublic get far():number\n\t{\n\t\treturn this._pFar;\n\t}\n\n\tpublic set far(value:number)\n\t{\n\t\tif (value == this._pFar) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pFar = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\n\t\tv.x = v.x/v.w;\n\t\tv.y = -v.y/v.w;\n\n\t\t//z is unaffected by transform\n\t\tv.z = point3d.z;\n\n\t\treturn v;\n\t}\n\n\tpublic get unprojectionMatrix():Matrix3D\n\t{\n\t\tif (this._unprojectionInvalid) {\n\t\t\tif (!this._unprojection)\n\t\t\t\tthis._unprojection = new Matrix3D();\n\n\t\t\tthis._unprojection.copyFrom(this.matrix);\n\t\t\tthis._unprojection.invert();\n\t\t\tthis._unprojectionInvalid = false;\n\t\t}\n\t\treturn this._unprojection;\n\t}\n\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():ProjectionBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iAspectRatio():number\n\t{\n\t\treturn this._pAspectRatio;\n\t}\n\n\tpublic set _iAspectRatio(value:number)\n\t{\n\t\tif (this._pAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._pAspectRatio = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic pInvalidateMatrix():void\n\t{\n\t\tthis._pMatrixInvalid = true;\n\t\tthis._unprojectionInvalid = true;\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\n\t}\n\n\tpublic pUpdateMatrix():void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number):void\n\t{\n\t\tthis._pScissorRect.x = x;\n\t\tthis._pScissorRect.y = y;\n\t\tthis._pScissorRect.width = width;\n\t\tthis._pScissorRect.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number):void\n\t{\n\t\tthis._pViewPort.x = x;\n\t\tthis._pViewPort.y = y;\n\t\tthis._pViewPort.width = width;\n\t\tthis._pViewPort.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n}",
    "export {CoordinateSystem}\t\t\t\tfrom \"./projections/CoordinateSystem\";\nexport {FreeMatrixProjection}\t\t\tfrom \"./projections/FreeMatrixProjection\";\nexport {IProjection}\t\t\t\t\tfrom \"./projections/IProjection\";\nexport {ObliqueNearPlaneProjection}\t\tfrom \"./projections/ObliqueNearPlaneProjection\";\nexport {OrthographicOffCenterProjection}\tfrom \"./projections/OrthographicOffCenterProjection\";\nexport {OrthographicProjection}\t\t\tfrom \"./projections/OrthographicProjection\";\nexport {PerspectiveProjection}\t\t\tfrom \"./projections/PerspectiveProjection\";\nexport {ProjectionBase}\t\t\t\t\tfrom \"./projections/ProjectionBase\";",
    "export class Keyboard\n{\n\t/**\n\t * Constant associated with the key code value for the A key (65).\n\t */\n\tpublic static A:number /*uint*/ = 65;\n\n\t/**\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\n\t */\n\tpublic static ALTERNATE:number /*uint*/ = 18;\n\n\t/**\n\t * Select the audio mode\n\t */\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\n\n\t/**\n\t * Constant associated with the key code value for the B key (66).\n\t */\n\tpublic static B:number /*uint*/ = 66;\n\n\t/**\n\t * Return to previous page in application\n\t */\n\tpublic static BACK:number /*uint*/ = 0x01000016;\n\n\t/**\n\t * Constant associated with the key code value for the ` key (192).\n\t */\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\n\n\t/**\n\t * Constant associated with the key code value for the \\ key (220).\n\t */\n\tpublic static BACKSLASH:number /*uint*/ = 220;\n\n\t/**\n\t * Constant associated with the key code value for the Backspace key (8).\n\t */\n\tpublic static BACKSPACE:number /*uint*/ = 8;\n\n\t/**\n\t * Blue function key button\n\t */\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\n\n\t/**\n\t * Constant associated with the key code value for the C key (67).\n\t */\n\tpublic static C:number /*uint*/ = 67;\n\n\t/**\n\t * Constant associated with the key code value for the Caps Lock key (20).\n\t */\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\n\n\t/**\n\t * Channel down\n\t */\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Channel up\n\t */\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Constant associated with the key code value for the , key (188).\n\t */\n\tpublic static COMMA:number /*uint*/ = 188;\n\n\t/**\n\t * Constant associated with the Mac command key (15). This constant is\n\t * currently only used for setting menu key equivalents.\n\t */\n\tpublic static COMMAND:number /*uint*/ = 15;\n\n\t/**\n\t * Constant associated with the key code value for the Control key (17).\n\t */\n\tpublic static CONTROL:number /*uint*/ = 17;\n\n\t/**\n\t * An array containing all the defined key name constants.\n\t */\n\tpublic static CharCodeStrings:Array<any>;\n\n\t/**\n\t * Constant associated with the key code value for the D key (68).\n\t */\n\tpublic static D:number /*uint*/ = 68;\n\n\t/**\n\t * Constant associated with the key code value for the Delete key (46).\n\t */\n\tpublic static DELETE:number /*uint*/ = 46;\n\n\t/**\n\t * Constant associated with the key code value for the Down Arrow key (40).\n\t */\n\tpublic static DOWN:number /*uint*/ = 40;\n\n\t/**\n\t * Engage DVR application mode\n\t */\n\tpublic static DVR:number /*uint*/ = 0x01000019;\n\n\t/**\n\t * Constant associated with the key code value for the E key (69).\n\t */\n\tpublic static E:number /*uint*/ = 69;\n\n\t/**\n\t * Constant associated with the key code value for the End key (35).\n\t */\n\tpublic static END:number /*uint*/ = 35;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key (13).\n\t */\n\tpublic static ENTER:number /*uint*/ = 13;\n\n\t/**\n\t * Constant associated with the key code value for the = key (187).\n\t */\n\tpublic static EQUAL:number /*uint*/ = 187;\n\n\t/**\n\t * Constant associated with the key code value for the Escape key (27).\n\t */\n\tpublic static ESCAPE:number /*uint*/ = 27;\n\n\t/**\n\t * Exits current application mode\n\t */\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\n\n\t/**\n\t * Constant associated with the key code value for the F key (70).\n\t */\n\tpublic static F:number /*uint*/ = 70;\n\n\t/**\n\t * Constant associated with the key code value for the F1 key (112).\n\t */\n\tpublic static F1:number /*uint*/ = 112;\n\n\t/**\n\t * Constant associated with the key code value for the F10 key (121).\n\t */\n\tpublic static F10:number /*uint*/ = 121;\n\n\t/**\n\t * Constant associated with the key code value for the F11 key (122).\n\t */\n\tpublic static F11:number /*uint*/ = 122;\n\n\t/**\n\t * Constant associated with the key code value for the F12 key (123).\n\t */\n\tpublic static F12:number /*uint*/ = 123;\n\n\t/**\n\t * Constant associated with the key code value for the F13 key (124).\n\t */\n\tpublic static F13:number /*uint*/ = 124;\n\n\t/**\n\t * Constant associated with the key code value for the F14 key (125).\n\t */\n\tpublic static F14:number /*uint*/ = 125;\n\n\t/**\n\t * Constant associated with the key code value for the F15 key (126).\n\t */\n\tpublic static F15:number /*uint*/ = 126;\n\n\t/**\n\t * Constant associated with the key code value for the F2 key (113).\n\t */\n\tpublic static F2:number /*uint*/ = 113;\n\n\t/**\n\t * Constant associated with the key code value for the F3 key (114).\n\t */\n\tpublic static F3:number /*uint*/ = 114;\n\n\t/**\n\t * Constant associated with the key code value for the F4 key (115).\n\t */\n\tpublic static F4:number /*uint*/ = 115;\n\n\t/**\n\t * Constant associated with the key code value for the F5 key (116).\n\t */\n\tpublic static F5:number /*uint*/ = 116;\n\n\t/**\n\t * Constant associated with the key code value for the F6 key (117).\n\t */\n\tpublic static F6:number /*uint*/ = 117;\n\n\t/**\n\t * Constant associated with the key code value for the F7 key (118).\n\t */\n\tpublic static F7:number /*uint*/ = 118;\n\n\t/**\n\t * Constant associated with the key code value for the F8 key (119).\n\t */\n\tpublic static F8:number /*uint*/ = 119;\n\n\t/**\n\t * Constant associated with the key code value for the F9 key (120).\n\t */\n\tpublic static F9:number /*uint*/ = 120;\n\n\t/**\n\t * Engage fast-forward transport mode\n\t */\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\n\n\t/**\n\t * Constant associated with the key code value for the G key (71).\n\t */\n\tpublic static G:number /*uint*/ = 71;\n\n\t/**\n\t * Green function key button\n\t */\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\n\n\t/**\n\t * Engage program guide\n\t */\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\n\n\t/**\n\t * Constant associated with the key code value for the H key (72).\n\t */\n\tpublic static H:number /*uint*/ = 72;\n\n\t/**\n\t * Engage help application or context-sensitive help\n\t */\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\n\n\t/**\n\t * Constant associated with the key code value for the Home key (36).\n\t */\n\tpublic static HOME:number /*uint*/ = 36;\n\n\t/**\n\t * Constant associated with the key code value for the I key (73).\n\t */\n\tpublic static I:number /*uint*/ = 73;\n\n\t/**\n\t * Info button\n\t */\n\tpublic static INFO:number /*uint*/ = 0x01000013;\n\n\t/**\n\t * Cycle input\n\t */\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\n\n\t/**\n\t * Constant associated with the key code value for the Insert key (45).\n\t */\n\tpublic static INSERT:number /*uint*/ = 45;\n\n\t/**\n\t * Constant associated with the key code value for the J key (74).\n\t */\n\tpublic static J:number /*uint*/ = 74;\n\n\t/**\n\t * Constant associated with the key code value for the K key (75).\n\t */\n\tpublic static K:number /*uint*/ = 75;\n\n\t/**\n\t * The Begin key\n\t */\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\n\n\t/**\n\t * The Break key\n\t */\n\tpublic static KEYNAME_BREAK:string = \"Break\";\n\n\t/**\n\t * The Clear Display key\n\t */\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\n\n\t/**\n\t * The Clear Line key\n\t */\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\n\n\t/**\n\t * The Delete key\n\t */\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\n\n\t/**\n\t * The Delete Character key\n\t */\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\n\n\t/**\n\t * The Delete Line key\n\t */\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\n\n\t/**\n\t * The down arrow\n\t */\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\n\n\t/**\n\t * The End key\n\t */\n\tpublic static KEYNAME_END:string = \"End\";\n\n\t/**\n\t * The Execute key\n\t */\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\n\n\t/**\n\t * The F1 key\n\t */\n\tpublic static KEYNAME_F1:string = \"F1\";\n\n\t/**\n\t * The F10 key\n\t */\n\tpublic static KEYNAME_F10:string = \"F10\";\n\n\t/**\n\t * The F11 key\n\t */\n\tpublic static KEYNAME_F11:string = \"F11\";\n\n\t/**\n\t * The F12 key\n\t */\n\tpublic static KEYNAME_F12:string = \"F12\";\n\n\t/**\n\t * The F13 key\n\t */\n\tpublic static KEYNAME_F13:string = \"F13\";\n\n\t/**\n\t * The F14 key\n\t */\n\tpublic static KEYNAME_F14:string = \"F14\";\n\n\t/**\n\t * The F15 key\n\t */\n\tpublic static KEYNAME_F15:string = \"F15\";\n\n\t/**\n\t * The F16 key\n\t */\n\tpublic static KEYNAME_F16:string = \"F16\";\n\n\t/**\n\t * The F17 key\n\t */\n\tpublic static KEYNAME_F17:string = \"F17\";\n\n\t/**\n\t * The F18 key\n\t */\n\tpublic static KEYNAME_F18:string = \"F18\";\n\n\t/**\n\t * The F19 key\n\t */\n\tpublic static KEYNAME_F19:string = \"F19\";\n\n\t/**\n\t * The F2 key\n\t */\n\tpublic static KEYNAME_F2:string = \"F2\";\n\n\t/**\n\t * The F20 key\n\t */\n\tpublic static KEYNAME_F20:string = \"F20\";\n\n\t/**\n\t * The F21 key\n\t */\n\tpublic static KEYNAME_F21:string = \"F21\";\n\n\t/**\n\t * The F22 key\n\t */\n\tpublic static KEYNAME_F22:string = \"F22\";\n\n\t/**\n\t * The F23 key\n\t */\n\tpublic static KEYNAME_F23:string = \"F23\";\n\n\t/**\n\t * The F24 key\n\t */\n\tpublic static KEYNAME_F24:string = \"F24\";\n\n\t/**\n\t * The F25 key\n\t */\n\tpublic static KEYNAME_F25:string = \"F25\";\n\n\t/**\n\t * The F26 key\n\t */\n\tpublic static KEYNAME_F26:string = \"F26\";\n\n\t/**\n\t * The F27 key\n\t */\n\tpublic static KEYNAME_F27:string = \"F27\";\n\n\t/**\n\t * The F28 key\n\t */\n\tpublic static KEYNAME_F28:string = \"F28\";\n\n\t/**\n\t * The F29 key\n\t */\n\tpublic static KEYNAME_F29:string = \"F29\";\n\n\t/**\n\t * The F3 key\n\t */\n\tpublic static KEYNAME_F3:string = \"F3\";\n\n\t/**\n\t * The F30 key\n\t */\n\tpublic static KEYNAME_F30:string = \"F30\";\n\n\t/**\n\t * The F31 key\n\t */\n\tpublic static KEYNAME_F31:string = \"F31\";\n\n\t/**\n\t * The F32 key\n\t */\n\tpublic static KEYNAME_F32:string = \"F32\";\n\n\t/**\n\t * The F33 key\n\t */\n\tpublic static KEYNAME_F33:string = \"F33\";\n\n\t/**\n\t * The F34 key\n\t */\n\tpublic static KEYNAME_F34:string = \"F34\";\n\n\t/**\n\t * The F35 key\n\t */\n\tpublic static KEYNAME_F35:string = \"F35\";\n\n\t/**\n\t * The F4 key\n\t */\n\tpublic static KEYNAME_F4:string = \"F4\";\n\n\t/**\n\t * The F5 key\n\t */\n\tpublic static KEYNAME_F5:string = \"F5\";\n\n\t/**\n\t * The F6 key\n\t */\n\tpublic static KEYNAME_F6:string = \"F6\";\n\n\t/**\n\t * The F7 key\n\t */\n\tpublic static KEYNAME_F7:string = \"F7\";\n\n\t/**\n\t * The F8 key\n\t */\n\tpublic static KEYNAME_F8:string = \"F8\";\n\n\t/**\n\t * The F9 key\n\t */\n\tpublic static KEYNAME_F9:string = \"F9\";\n\n\t/**\n\t * The Find key\n\t */\n\tpublic static KEYNAME_FIND:string = \"Find\";\n\n\t/**\n\t * The Help key\n\t */\n\tpublic static KEYNAME_HELP:string = \"Help\";\n\n\t/**\n\t * The Home key\n\t */\n\tpublic static KEYNAME_HOME:string = \"Home\";\n\n\t/**\n\t * The Insert key\n\t */\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\n\n\t/**\n\t * The Insert Character key\n\t */\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\n\n\t/**\n\t * The Insert Line key\n\t */\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\n\n\t/**\n\t * The left arrow\n\t */\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\n\n\t/**\n\t * The Menu key\n\t */\n\tpublic static KEYNAME_MENU:string = \"Menu\";\n\n\t/**\n\t * The Mode Switch key\n\t */\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\n\n\t/**\n\t * The Next key\n\t */\n\tpublic static KEYNAME_NEXT:string = \"Next\";\n\n\t/**\n\t * The Page Down key\n\t */\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\n\n\t/**\n\t * The Page Up key\n\t */\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\n\n\t/**\n\t * The Pause key\n\t */\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\n\n\t/**\n\t * The Previous key\n\t */\n\tpublic static KEYNAME_PREV:string = \"Prev\";\n\n\t/**\n\t * The PRINT key\n\t */\n\tpublic static KEYNAME_PRINT:string = \"Print\";\n\n\t/**\n\t * The PRINT Screen\n\t */\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\n\n\t/**\n\t * The Redo key\n\t */\n\tpublic static KEYNAME_REDO:string = \"Redo\";\n\n\t/**\n\t * The Reset key\n\t */\n\tpublic static KEYNAME_RESET:string = \"Reset\";\n\n\t/**\n\t * The right arrow\n\t */\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\n\n\t/**\n\t * The Scroll Lock key\n\t */\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\n\n\t/**\n\t * The Select key\n\t */\n\tpublic static KEYNAME_SELECT:string = \"Select\";\n\n\t/**\n\t * The Stop key\n\t */\n\tpublic static KEYNAME_STOP:string = \"Stop\";\n\n\t/**\n\t * The System Request key\n\t */\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\n\n\t/**\n\t * The System key\n\t */\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\n\n\t/**\n\t * The Undo key\n\t */\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\n\n\t/**\n\t * The up arrow\n\t */\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\n\n\t/**\n\t * The User key\n\t */\n\tpublic static KEYNAME_USER:string = \"User\";\n\n\t/**\n\t * Constant associated with the key code value for the L key (76).\n\t */\n\tpublic static L:number /*uint*/ = 76;\n\n\t/**\n\t * Watch last channel or show watched\n\t */\n\tpublic static LAST:number /*uint*/ = 0x01000011;\n\n\t/**\n\t * Constant associated with the key code value for the Left Arrow key (37).\n\t */\n\tpublic static LEFT:number /*uint*/ = 37;\n\n\t/**\n\t * Constant associated with the key code value for the [ key (219).\n\t */\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\n\n\t/**\n\t * Return to live [position in broadcast]\n\t */\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\n\n\t/**\n\t * Constant associated with the key code value for the M key (77).\n\t */\n\tpublic static M:number /*uint*/ = 77;\n\n\t/**\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\n\t */\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\n\n\t/**\n\t * Engage menu\n\t */\n\tpublic static MENU:number /*uint*/ = 0x01000012;\n\n\t/**\n\t * Constant associated with the key code value for the - key (189).\n\t */\n\tpublic static MINUS:number /*uint*/ = 189;\n\n\t/**\n\t * Constant associated with the key code value for the N key (78).\n\t */\n\tpublic static N:number /*uint*/ = 78;\n\n\t/**\n\t * Skip to next track or chapter\n\t */\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\n\n\t/**\n\t * Constant associated with the key code value for the 0 key (48).\n\t */\n\tpublic static NUMBER_0:number /*uint*/ = 48;\n\n\t/**\n\t * Constant associated with the key code value for the 1 key (49).\n\t */\n\tpublic static NUMBER_1:number /*uint*/ = 49;\n\n\t/**\n\t * Constant associated with the key code value for the 2 key (50).\n\t */\n\tpublic static NUMBER_2:number /*uint*/ = 50;\n\n\t/**\n\t * Constant associated with the key code value for the 3 key (51).\n\t */\n\tpublic static NUMBER_3:number /*uint*/ = 51;\n\n\t/**\n\t * Constant associated with the key code value for the 4 key (52).\n\t */\n\tpublic static NUMBER_4:number /*uint*/ = 52;\n\n\t/**\n\t * Constant associated with the key code value for the 5 key (53).\n\t */\n\tpublic static NUMBER_5:number /*uint*/ = 53;\n\n\t/**\n\t * Constant associated with the key code value for the 6 key (54).\n\t */\n\tpublic static NUMBER_6:number /*uint*/ = 54;\n\n\t/**\n\t * Constant associated with the key code value for the 7 key (55).\n\t */\n\tpublic static NUMBER_7:number /*uint*/ = 55;\n\n\t/**\n\t * Constant associated with the key code value for the 8 key (56).\n\t */\n\tpublic static NUMBER_8:number /*uint*/ = 56;\n\n\t/**\n\t * Constant associated with the key code value for the 9 key (57).\n\t */\n\tpublic static NUMBER_9:number /*uint*/ = 57;\n\n\t/**\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\n\t */\n\tpublic static NUMPAD:number /*uint*/ = 21;\n\n\t/**\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\n\t */\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\n\n\t/**\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\n\t */\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\n\n\t/**\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\n\t */\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\n\n\t/**\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\n\t */\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\n\n\t/**\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\n\t */\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\n\n\t/**\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\n\t */\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\n\n\t/**\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\n\t */\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\n\n\t/**\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\n\t */\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\n\n\t/**\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\n\t */\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\n\n\t/**\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\n\t */\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\n\n\t/**\n\t * Constant associated with the key code value for the addition key on the number pad (107).\n\t */\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\n\n\t/**\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\n\t */\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\n\n\t/**\n\t * Constant associated with the key code value for the division key on the number pad (111).\n\t */\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\n\t */\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\n\n\t/**\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\n\t */\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\n\n\t/**\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\n\t */\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\n\n\t/**\n\t * Constant associated with the key code value for the O key (79).\n\t */\n\tpublic static O:number /*uint*/ = 79;\n\n\t/**\n\t * Constant associated with the key code value for the P key (80).\n\t */\n\tpublic static P:number /*uint*/ = 80;\n\n\t/**\n\t * Constant associated with the key code value for the Page Down key (34).\n\t */\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\n\n\t/**\n\t * Constant associated with the key code value for the Page Up key (33).\n\t */\n\tpublic static PAGE_UP:number /*uint*/ = 33;\n\n\t/**\n\t * Engage pause transport mode\n\t */\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\n\n\t/**\n\t * Constant associated with the key code value for the . key (190).\n\t */\n\tpublic static PERIOD:number /*uint*/ = 190;\n\n\t/**\n\t * Engage play transport mode\n\t */\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\n\n\t/**\n\t * Skip to previous track or chapter\n\t */\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\n\n\t/**\n\t * Constant associated with the key code value for the Q key (81).\n\t */\n\tpublic static Q:number /*uint*/ = 81;\n\n\t/**\n\t * Constant associated with the key code value for the ' key (222).\n\t */\n\tpublic static QUOTE:number /*uint*/ = 222;\n\n\t/**\n\t * Constant associated with the key code value for the R key (82).\n\t */\n\tpublic static R:number /*uint*/ = 82;\n\n\t/**\n\t * Record item or engage record transport mode\n\t */\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\n\n\t/**\n\t * Red function key button\n\t */\n\tpublic static RED:number /*uint*/ = 0x01000000;\n\n\t/**\n\t * Engage rewind transport mode\n\t */\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\n\n\t/**\n\t * Constant associated with the key code value for the Right Arrow key (39).\n\t */\n\tpublic static RIGHT:number /*uint*/ = 39;\n\n\t/**\n\t * Constant associated with the key code value for the ] key (221).\n\t */\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\n\n\t/**\n\t * Constant associated with the key code value for the S key (83).\n\t */\n\tpublic static S:number /*uint*/ = 83;\n\n\t/**\n\t * Search button\n\t */\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\n\n\t/**\n\t * Constant associated with the key code value for the ; key (186).\n\t */\n\tpublic static SEMICOLON:number /*uint*/ = 186;\n\n\t/**\n\t * Engage setup application or menu\n\t */\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\n\n\t/**\n\t * Constant associated with the key code value for the Shift key (16).\n\t */\n\tpublic static SHIFT:number /*uint*/ = 16;\n\n\t/**\n\t * Quick skip backward (usually 7-10 seconds)\n\t */\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\n\n\t/**\n\t * Quick skip ahead (usually 30 seconds)\n\t */\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\n\n\t/**\n\t * Constant associated with the key code value for the / key (191).\n\t */\n\tpublic static SLASH:number /*uint*/ = 191;\n\n\t/**\n\t * Constant associated with the key code value for the Spacebar (32).\n\t */\n\tpublic static SPACE:number /*uint*/ = 32;\n\n\t/**\n\t * Engage stop transport mode\n\t */\n\tpublic static STOP:number /*uint*/ = 0x01000009;\n\n\t/**\n\t * Toggle subtitles\n\t */\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\n\n\t/**\n\t * Constant associated with the key code value for the T key (84).\n\t */\n\tpublic static T:number /*uint*/ = 84;\n\n\t/**\n\t * Constant associated with the key code value for the Tab key (9).\n\t */\n\tpublic static TAB:number /*uint*/ = 9;\n\n\t/**\n\t * Constant associated with the key code value for the U key (85).\n\t */\n\tpublic static U:number /*uint*/ = 85;\n\n\t/**\n\t * Constant associated with the key code value for the Up Arrow key (38).\n\t */\n\tpublic static UP:number /*uint*/ = 38;\n\n\t/**\n\t * Constant associated with the key code value for the V key (86).\n\t */\n\tpublic static V:number /*uint*/ = 86;\n\n\t/**\n\t * Engage video-on-demand\n\t */\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\n\n\t/**\n\t * Constant associated with the key code value for the W key (87).\n\t */\n\tpublic static W:number /*uint*/ = 87;\n\n\t/**\n\t * Constant associated with the key code value for the X key (88).\n\t */\n\tpublic static X:number /*uint*/ = 88;\n\n\t/**\n\t * Constant associated with the key code value for the Y key (89).\n\t */\n\tpublic static Y:number /*uint*/ = 89;\n\n\t/**\n\t * Yellow function key button\n\t */\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\n\n\t/**\n\t * Constant associated with the key code value for the Z key (90).\n\t */\n\tpublic static Z:number /*uint*/ = 90;\n\n}",
    "export {Keyboard}\t\t\t\t\t\tfrom \"./ui/Keyboard\";",
    "import {BlendMode}\t\t\t\tfrom \"../image/BlendMode\";\nimport {ColorTransform}\t\t\tfrom \"../geom/ColorTransform\";\nimport {Matrix}\t\t\t\t\tfrom \"../geom/Matrix\";\nimport {Rectangle}\t\t\t\tfrom \"../geom/Rectangle\";\nimport {ColorUtils}\t\t\t\tfrom \"../utils/ColorUtils\";\n\nexport class BitmapImageUtils\n{\n\tpublic static _fillRect(context:CanvasRenderingContext2D, rect:Rectangle, color:number, transparent:boolean):void\n\t{\n\t\tif (color == 0x0 && transparent) {\n\t\t\tcontext.clearRect(rect.x, rect.y, rect.width, rect.height);\n\t\t} else {\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\t\tif (transparent)\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\n\t\t\telse\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\n\n\t\t\tcontext.fillRect(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\t}\n\n\tpublic static _copyPixels(context:CanvasRenderingContext2D, bmpd:HTMLImageElement | HTMLCanvasElement | HTMLVideoElement, sourceRect:Rectangle, destRect:Rectangle):void\n\t{\n\t\tcontext.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t}\n\n\tpublic static _draw(context:CanvasRenderingContext2D, source:any, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean):void\n\t{\n\t\tcontext.save();\n\n\t\tif (matrix != null)\n\t\t\tcontext.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\n\t\tif (clipRect != null)\n\t\t\tcontext.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\n\t\telse\n\t\t\tcontext.drawImage(source, 0, 0);\n\n\t\tcontext.restore();\n\t}\n}",
    "import {AbstractMethodError}\t\tfrom \"../errors/AbstractMethodError\";\n\nexport class ByteArrayBase\n{\n\tpublic position:number = 0;\n\tpublic length:number = 0;\n\tpublic _mode:string = \"\";\n\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic writeByte(b:number):void\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedByte(b:number):void\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedShort(b:number):void\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedInt(b:number):void\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeFloat(b:number):void\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic toFloatBits(x:number):void\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readFloat(b:number):void\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic fromFloatBits(x:number):void\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\n\t}\n\n\tpublic compareEqual(other, count):boolean\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (count > other.length - other.position)\n\t\t\tcount = other.length - other.position;\n\t\tvar co0 = count;\n\t\tvar r:boolean = true;\n\t\twhile (r && count >= 4) {\n\t\t\tcount -= 4;\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\n\t\t}\n\t\twhile (r && count >= 1) {\n\t\t\tcount--;\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\n\t\t}\n\t\tvar c0;\n\t\tthis.position -= (c0 - count);\n\t\tother.position -= (c0 - count);\n\t\treturn r;\n\t}\n\n\tpublic writeBase64String(s:string):void\n\t{\n\t\tfor (var i:number = 0; i < s.length; i++) {\n\t\t\tvar v = s.charAt(i);\n\t\t}\n\t}\n\n\tpublic dumpToConsole():void\n\t{\n\t\tvar oldpos = this.position;\n\t\tthis.position = 0;\n\t\tvar nstep:number = 8;\n\n\t\tfunction asHexString(x, digits)\n\t\t{\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\n\t\t\tvar sh:string = \"\";\n\t\t\tfor (var d:number = 0; d < digits; d++) {\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\n\t\t\t}\n\t\t\treturn sh;\n\t\t}\n\n\t\tfor (var i = 0; i < this.length; i += nstep) {\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\n\t\t\t}\n\t\t\tconsole.log(s);\n\t\t}\n\t\tthis.position = oldpos;\n\t}\n\n\tpublic readBase64String(count:number):string\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (!(count > 0)) return \"\";\n\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\n\t}\n\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self):string\n\t{ // return base64 string of the next count bytes\n\t\tvar r:string = \"\";\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\n\t\tvar base64Key = ByteArrayBase.Base64Key;\n\t\twhile (count >= 3) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\n\t\t\tenc4 = b2 & 63;\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\n\t\t\tcount -= 3;\n\t\t}\n\t\t// pad\n\t\tif (count == 2) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\n\t\t} else if (count == 1) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\n\t\t}\n\t\treturn r;\n\t}\n}",
    "import {ByteArrayBase}\t\t\tfrom \"../utils/ByteArrayBase\";\n\nexport class ByteArrayBuffer extends ByteArrayBase\n{\n\n\t/*\n\t public maxlength:number = 0;\n\t public arraybytes; //ArrayBuffer\n\t public unalignedarraybytestemp; //ArrayBuffer\n\t */\n\n\tpublic _bytes:number[];\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._bytes = [];\n\t\tthis._mode = \"Array\";\n\t}\n\n\tpublic writeByte(b:number):void\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedByte(b:number):void\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[this.position++] = bi & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedShort(b:number):void\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tif (this.position + 2 > this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\n\t\tthis.position += 2;\n\t\treturn r;\n\t}\n\n\tpublic writeUnsignedInt(b:number):void\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tif (this.position + 4 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\n\t\tthis.position += 4;\n\t\treturn r >>> 0;\n\t}\n\n\tpublic writeFloat(b:number):void\n\t{\n\t\t// this is crazy slow and silly, but as a fallback...\n\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\n\t}\n\n\tpublic toFloatBits(x:number):number\n\t{\n\t\t// don't handle inf/nan yet\n\t\t// special case zero\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\t// remove the sign, after this we only deal with positive numbers\n\t\tvar sign:number = 0;\n\t\tif (x < 0) {\n\t\t\tx = -x;\n\t\t\tsign = 1;\n\t\t} else {\n\t\t\tsign = 0;\n\t\t}\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\n\t\texponent = Math.floor(exponent);\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\n\t\tvar mantissa = Math.floor(x) - 0x800000;\n\t\texponent = exponent + 127;\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\n\t}\n\n\tpublic readFloat(b:number):number\n\t{\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\n\t}\n\n\tpublic fromFloatBits(x:number):number\n\t{\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\n\t\tif (x >>> 31 != 0) {\n\t\t\ty = -y;\n\t\t}\n\t\treturn y;\n\t}\n\n\t/*\n\t public ensureWriteableSpace( n:number )\n\t {\n\t this.ensureSpace( n + this.position );\n\t }\n\n\t private ensureSpace( n:number )\n\t {\n\t if ( n > this.maxlength ) {\n\t var newmaxlength:number = (n+255)&(~255);\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t newview.set(view);      // memcpy\n\t this.arraybytes = newarraybuffer;\n\t this.maxlength = newmaxlength;\n\t }\n\t }\n\t */\n}",
    "import {ByteArrayBase}\t\t\tfrom \"../utils/ByteArrayBase\";\n\nexport class ByteArray extends ByteArrayBase\n{\n\tpublic maxlength:number;\n\tpublic arraybytes; //ArrayBuffer\n\tpublic unalignedarraybytestemp; //ArrayBuffer\n\n\tconstructor(maxlength:number = 4)\n\t{\n\t\tsuper();\n\t\tthis._mode = \"Typed array\";\n\t\tthis.maxlength = Math.max((maxlength + 255) & (~255), 4);\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\n\t}\n\n\tpublic ensureWriteableSpace(n:number):void\n\t{\n\t\tthis.ensureSpace(n + this.position);\n\t}\n\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\n\t{\n\t\tthis.ensureSpace(aBuffer.byteLength);\n\n\t\tthis.length = aBuffer.byteLength;\n\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\n\n\t\tlocalInt8View.set(inInt8AView);\n\n\t\tthis.position = 0;\n\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\treturn ( this.length ) - ( this.position );\n\t}\n\n\tpublic ensureSpace(n:number):void\n\t{\n\t\tif (n > this.maxlength) {\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t\t\tnewview.set(view);      // memcpy\n\t\t\tthis.arraybytes = newarraybuffer;\n\t\t\tthis.maxlength = newmaxlength;\n\t\t}\n\t}\n\n\tpublic writeByte(b:number):void\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\n\t\tvar view = new Int8Array(this.arraybytes);\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tif (this.position >= this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view = new Int8Array(this.arraybytes);\n\n\t\treturn view[ this.position++ ];\n\t}\n\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0):void\n\t{\n\t\tif (length == null)\n\t\t\tlength = bytes.length;\n\n\t\tbytes.ensureWriteableSpace(offset + length);\n\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\n\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\n\n\t\tthis.position += length;\n\n\t\tif (length + offset > bytes.length)\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\n\t}\n\n\tpublic writeUnsignedByte(b:number):void\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tif (this.position >= this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\treturn view[this.position++];\n\t}\n\n\tpublic writeUnsignedShort(b:number):void\n\t{\n\t\tthis.ensureWriteableSpace(2);\n\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview2.set(view3);\n\t\t}\n\n\t\tthis.position += 2;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUTFBytes(len:number):string\n\t{\n\t\tvar value:string = \"\";\n\t\tvar max:number = this.position + len;\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\n\t\t// utf8-encode\n\t\twhile (this.position < max) {\n\n\t\t\tvar c:number = data.getUint8(this.position++);\n\n\t\t\tif (c < 0x80) {\n\n\t\t\t\tif (c == 0) break;\n\t\t\t\tvalue += String.fromCharCode(c);\n\n\t\t\t} else if (c < 0xE0) {\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else if (c < 0xF0) {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvar c3 = data.getUint8(this.position++);\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic readInt():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar int:number = data.getInt32(this.position, true);\n\n\t\tthis.position += 4;\n\n\t\treturn int;\n\t}\n\n\tpublic readShort():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar short:number = data.getInt16(this.position, true);\n\n\t\tthis.position += 2;\n\n\t\treturn short;\n\t}\n\n\tpublic readDouble():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar double:number = data.getFloat64(this.position, true);\n\n\t\tthis.position += 8;\n\n\t\treturn double;\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tif (this.position > this.length + 2)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 1;\n\t\t\tthis.position += 2;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 2;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeUnsignedInt(b:number):void\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffffffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tif (this.position > this.length + 4)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeFloat(b:number):void\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = b;\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = b;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readFloat():number\n\t{\n\t\tif (this.position > this.length + 4)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tif ((this.position & 3) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tvar pa = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[pa];\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[ 0 ];\n\t\t}\n\t}\n}",
    "export class CSS\n{\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number):void\n\t{\n\t\tif(!element) return;\n\t\telement.style.width = width + \"px\";\n\t\telement.style.height = height + \"px\";\n\t\telement[\"width\"] = width;\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementWidth(element:HTMLElement, width:number):void\n\t{\n\t\tif(!element) return;\n\t\telement.style.width = width + \"px\";\n\t\telement[\"width\"] = width;\n\t}\n\n\tpublic static setElementHeight(element:HTMLElement, height:number):void\n\t{\n\t\tif(!element) return;\n\t\telement.style.height = height + \"px\";\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementX(element:HTMLElement, x:number):void\n\t{\n\t\tif(!element) return;\n\t\telement.style.position = 'absolute';\n\t\telement.style.left = x + \"px\";\n\t}\n\n\tpublic static setElementY(element:HTMLElement, y:number):void\n\t{\n\t\tif(!element) return;\n\t\telement.style.position = 'absolute';\n\t\telement.style.top = y + \"px\";\n\t}\n\n\tpublic static getElementVisibility(element:HTMLElement):boolean\n\t{\n\t\tif(!element) return false;\n\t\treturn element.style.visibility == 'visible';\n\t}\n\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean):void\n\t{\n\t\tif(!element) return;\n\t\tif (visible) {\n\t\t\telement.style.visibility = 'visible';\n\t\t} else {\n\t\t\telement.style.visibility = 'hidden';\n\t\t}\n\t}\n\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number):void\n\t{\n\t\tif (element instanceof HTMLCanvasElement) {\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\n\t\t\tcontext.globalAlpha = alpha;\n\t\t}\n\t}\n\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false):void\n\t{\n\t\tif(!element) return;\n\t\tif (absolute) {\n\t\t\telement.style.position = \"absolute\";\n\t\t} else {\n\t\t\telement.style.position = \"relative\";\n\t\t}\n\n\t\telement.style.left = x + \"px\";\n\t\telement.style.top = y + \"px\";\n\t}\n}",
    "/**\n *\n */\nexport class ColorUtils\n{\n\tpublic static float32ColorToARGB(float32Color:number):number[]\n\t{\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24;\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\n\t\tvar b:number = float32Color & 0xff;\n\t\tvar result:number[] = [ a, r , g , b ];\n\n\t\treturn result;\n\t}\n\n\tpublic static ARGBtoFloat32(a:number, r:number, g:number, b:number):number\n\t{\n\t\treturn ((a << 24) | (r << 16) | (g << 8) | b);\n\t}\n\n\tprivate static componentToHex(c:number):string\n\t{\n\t\tvar hex = c.toString(16);\n\t\treturn hex.length == 1? \"0\" + hex : hex;\n\t}\n\n\tpublic static RGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n\n\tpublic static ARGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n}",
    "import {PartialImplementationError}\tfrom \"../errors/PartialImplementationError\";\n\n/**\n *\n */\nexport class Debug\n{\n\tpublic static THROW_ERRORS:boolean = true;\n\tpublic static ENABLE_LOG:boolean = true;\n\tpublic static LOG_PI_ERRORS:boolean = true;\n\n\tprivate static keyword:string = null;\n\n\tpublic static breakpoint():void\n\t{\n\t\tDebug['break']();\n\t}\n\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true):void\n\t{\n\t\tif (!enable)\n\t\t\tDebug.keyword = null;\n\t\telse\n\t\t\tDebug.keyword = str;\n\t}\n\n\tpublic static throwPIR(clss:string, fnc:string, msg:string):void\n\t{\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\n\n\t\tif (Debug.THROW_ERRORS) {\n\t\t\tif (Debug.keyword) {\n\t\t\t\tvar e:string = clss + fnc + msg;\n\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\n\t\t}\n\t}\n\n\tprivate static logPIR(clss:string, fnc:string, msg:string = ''):void\n\t{\n\t\tif (Debug.LOG_PI_ERRORS)\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\n\t}\n\n\tpublic static log(...args:any[]):void\n\t{\n\t\tif (Debug.ENABLE_LOG)\n\t\t\tconsole.log(args);\n\t}\n}",
    "declare var SIMD:any;\n\n/**\n *\n */\nexport class Extensions\n{\n\tpublic static SIMD:boolean = Boolean(typeof(SIMD) !== \"undefined\");\n}",
    "import {Image2D}\t\t\t\t\t\tfrom \"../image/Image2D\";\n\nexport class ImageUtils\n{\n\tprivate static MAX_SIZE:number = 2048;\n\n\tpublic static isImage2DValid(image2D:Image2D):boolean\n\t{\n\t\tif (image2D == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image2D.width, image2D.powerOfTwo) && ImageUtils.isDimensionValid(image2D.height, image2D.powerOfTwo);\n\t}\n\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\n\t{\n\t\tif (image == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image.width) && ImageUtils.isDimensionValid(image.height);\n\t}\n\n\tpublic static isDimensionValid(d:number, powerOfTwo:boolean = true):boolean\n\t{\n\t\treturn d >= 1 && d <= ImageUtils.MAX_SIZE && (!powerOfTwo || ImageUtils.isPowerOfTwo(d));\n\t}\n\n\tpublic static isPowerOfTwo(value:number):boolean\n\t{\n\t\treturn value? ((value & -value) == value) : false;\n\t}\n\n\tpublic static getBestPowerOf2(value:number):number\n\t{\n\t\tvar p:number = 1;\n\n\t\twhile (p < value)\n\t\t\tp <<= 1;\n\n\t\tif (p > ImageUtils.MAX_SIZE)\n\t\t\tp = ImageUtils.MAX_SIZE;\n\n\t\treturn p;\n\t}\n}\n\nexport default ImageUtils",
    "import {BitmapImage2D}\t\t\t\tfrom \"../image/BitmapImage2D\";\nimport {CPUCanvas}\t\t\t\t\tfrom \"../image/CPUCanvas\";\nimport {Matrix}\t\t\t\t\t\tfrom \"../geom/Matrix\";\nimport {Rectangle}\t\t\t\t\tfrom \"../geom/Rectangle\";\n\nexport class MipmapGenerator {\n\tprivate static _mipMaps = [];\n\tprivate static _mipMapUses = [];\n\n\tprivate static _matrix:Matrix = new Matrix();\n\tprivate static _rect:Rectangle = new Rectangle();\n\tprivate static _source:BitmapImage2D;\n\n\t/**\n\t * Uploads a BitmapImage2D with mip maps to a target Texture object.\n\t * @param source The source to upload.\n\t * @param target The target Texture to upload to.\n\t * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\n\t * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\n\t */\n\tpublic static _generateMipMaps(source:HTMLElement, output?:Array<BitmapImage2D>, alpha?:boolean);\n\tpublic static _generateMipMaps(source:BitmapImage2D, output?:Array<BitmapImage2D>, alpha?:boolean);\n\tpublic static _generateMipMaps(source:any, output?:Array<BitmapImage2D>, alpha:boolean = false) {\n\t\tvar w:number = source.width;\n\t\tvar h:number = source.height;\n\t\tvar i:number = 0;\n\n\t\tvar mipmap:BitmapImage2D;\n\n\t\tMipmapGenerator._rect.width = w;\n\t\tMipmapGenerator._rect.height = h;\n\n\t\t//use (OR) to create non-square texture mipmaps\n\t\twhile (w >= 1 || h >= 1) {\n\n\t\t\tmipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\n\n\t\t\tif (alpha)\n\t\t\t\tmipmap.fillRect(MipmapGenerator._rect, 0);\n\n\n\t\t\tMipmapGenerator._matrix.a = MipmapGenerator._rect.width / source.width;\n\t\t\tMipmapGenerator._matrix.d = MipmapGenerator._rect.height / source.height;\n\t\t\t//todo: add support for NPOT textures\n\t\t\tif (document) {\n\t\t\t\tmipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\n\t\t\t} else {\n\t\t\t\tif (source.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\n\t\t\t\t\t//for BitmapImage2D\n\t\t\t\t\tvar bitmapImage:BitmapImage2D = <BitmapImage2D> source;\n\t\t\t\t\tbitmapImage.lock();\n\t\t\t\t\tmipmap.lock();\n\t\t\t\t\tthis.downsampleImage(bitmapImage.getImageData(), mipmap.getImageData());\n\t\t\t\t\tmipmap.unlock();\n\t\t\t\t\tbitmapImage.unlock();\n\t\t\t\t}else if(source.constructor.toString().indexOf(\"CPUCanvas\") > -1){\n\t\t\t\t\tthis.downsampleImage(source.getImageData(), mipmap.getImageData());\n\t\t\t\t} else {\n\t\t\t\t\t//for imageData\n\t\t\t\t\tthis.downsampleImage(source, mipmap.getImageData());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tw >>= 1;\n\t\t\th >>= 1;\n\n\t\t\tMipmapGenerator._rect.width = w > 1 ? w : 1;\n\t\t\tMipmapGenerator._rect.height = h > 1 ? h : 1;\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate static _getMipmapHolder(mipMapHolder:BitmapImage2D, newW:number, newH:number):BitmapImage2D {\n\t\tif (mipMapHolder) {\n\t\t\tif (mipMapHolder.width == newW && mipMapHolder.height == newH)\n\t\t\t\treturn mipMapHolder;\n\n\t\t\tMipmapGenerator._freeMipMapHolder(mipMapHolder);\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW]) {\n\t\t\tMipmapGenerator._mipMaps[newW] = [];\n\t\t\tMipmapGenerator._mipMapUses[newW] = [];\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW][newH]) {\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapImage2D(newW, newH, true);\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = 1;\n\t\t} else {\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH];\n\t\t}\n\n\t\treturn mipMapHolder;\n\t}\n\n\tpublic static _freeMipMapHolder(mipMapHolder:BitmapImage2D) {\n\t\tvar holderWidth:number = mipMapHolder.width;\n\t\tvar holderHeight:number = mipMapHolder.height;\n\n\t\tif (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\n\t\t}\n\t}\n\n\tpublic static downsampleImage(bitmap:ImageData, destBitmap:ImageData):ImageData {\n\t\tvar box:BoxFilter = new BoxFilter();\n\t\tvar xkernel:PolyphaseKernel = new PolyphaseKernel(box, bitmap.width, destBitmap.width, 4);\n\t\tvar ykernel:PolyphaseKernel = new PolyphaseKernel(box, bitmap.height, destBitmap.height, 4);\n\n\t\tvar tempBitmap:number[] = [];//destBitmap.width, bitmap.height\n\n\t\tvar scale:number = 0;\n\t\tvar iscale:number = 0;\n\t\tvar kernelLength:number = 0;\n\t\tvar kernelWidth:number = 0;\n\t\tvar kernelWindowSize:number = 0;\n\t\tvar sumR:number = 0;\n\t\tvar sumG:number = 0;\n\t\tvar sumB:number = 0;\n\t\tvar sumA:number = 0;\n\t\tvar center:number;\n\t\tvar left:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number = 0;\n\n\t\tfor (var y:number = 0; y < bitmap.height; y++) {\n\t\t\tkernelLength = xkernel.len;\n\t\t\tscale = kernelLength / bitmap.width;\n\t\t\tiscale = 1.0 / scale;\n\t\t\tkernelWidth = xkernel.width;\n\t\t\tkernelWindowSize = xkernel.windowSize;\n\n\t\t\tfor (i = 0; i < kernelLength; i++) {\n\t\t\t\tcenter = (0.5 + i) * iscale;\n\t\t\t\tleft = Math.floor(center - kernelWidth);\n\t\t\t\tsumR = 0;\n\t\t\t\tsumG = 0;\n\t\t\t\tsumB = 0;\n\t\t\t\tsumA = 0;\n\t\t\t\tfor (var j:number = 0; j < kernelWindowSize; ++j) {\n\t\t\t\t\tindex = (y * bitmap.width + (left + j) ) * 4;\n\t\t\t\t\tvar colorR:number = bitmap.data[index];\n\t\t\t\t\tvar colorG:number = bitmap.data[index + 1];\n\t\t\t\t\tvar colorB:number = bitmap.data[index + 2];\n\t\t\t\t\tvar colorA:number = bitmap.data[index + 3];\n\n\t\t\t\t\tvar value:number = xkernel.valueAt(i, j);\n\t\t\t\t\tsumR += value * colorR;\n\t\t\t\t\tsumG += value * colorG;\n\t\t\t\t\tsumB += value * colorB;\n\t\t\t\t\tsumA += value * colorA;\n\t\t\t\t}\n\n\t\t\t\tindex = (y * destBitmap.width + i) * 4;\n\t\t\t\ttempBitmap[index] = sumR;\n\t\t\t\ttempBitmap[index + 1] = sumG;\n\t\t\t\ttempBitmap[index + 2] = sumB;\n\t\t\t\ttempBitmap[index + 3] = sumA;\n\t\t\t}\n\t\t}\n\n\t\tfor (var x:number = 0; x < destBitmap.width; x++) {\n\t\t\tkernelLength = ykernel.len;\n\t\t\tscale = kernelLength / bitmap.height;\n\t\t\tiscale = 1.0 / scale;\n\t\t\tkernelWidth = ykernel.width;\n\t\t\tkernelWindowSize = ykernel.windowSize;\n\n\t\t\tfor (i = 0; i < kernelLength; i++) {\n\t\t\t\tcenter = (0.5 + i) * iscale;\n\n\t\t\t\tleft = Math.floor(center - kernelWidth);\n\n\t\t\t\tsumR = 0;\n\t\t\t\tsumG = 0;\n\t\t\t\tsumB = 0;\n\t\t\t\tsumA = 0;\n\t\t\t\tfor (j = 0; j < kernelWindowSize; ++j) {\n\t\t\t\t\tindex = ((j + left) * destBitmap.width + x) * 4;\n\t\t\t\t\tvar colorR:number = tempBitmap[index];\n\t\t\t\t\tvar colorG:number = tempBitmap[index + 1];\n\t\t\t\t\tvar colorB:number = tempBitmap[index + 2];\n\t\t\t\t\tvar colorA:number = tempBitmap[index + 3];\n\n\t\t\t\t\tvar value:number = ykernel.valueAt(i, j);\n\t\t\t\t\tsumR += value * colorR;\n\t\t\t\t\tsumG += value * colorG;\n\t\t\t\t\tsumB += value * colorB;\n\t\t\t\t\tsumA += value * colorA;\n\t\t\t\t}\n\n\t\t\t\tindex = (i * destBitmap.width + x) * 4;\n\t\t\t\tdestBitmap.data[index] = sumR;\n\t\t\t\tdestBitmap.data[index + 1] = sumG;\n\t\t\t\tdestBitmap.data[index + 2] = sumB;\n\t\t\t\tdestBitmap.data[index + 3] = sumA;\n\t\t\t}\n\t\t}\n\n\t\treturn destBitmap;\n\t}\n}\nexport class PolyphaseKernel {\n\tpublic len:number;\n\tpublic width:number;\n\tpublic windowSize:number;\n\tpublic data:number[];\n\n\tconstructor(f:BoxFilter, srcLength:number, dstLength:number, samples:number) {\n\n\t\tvar scale:number = dstLength / srcLength;\n\t\tvar iscale:number = 1.0 / scale;\n\n\t\tif (scale > 1) {\n\t\t\t// Upsampling.\n\t\t\tsamples = 1;\n\t\t\tscale = 1;\n\t\t}\n\n\t\tthis.len = dstLength;\n\t\tthis.width = f.width * iscale;\n\t\tthis.windowSize = Math.ceil(this.width * 2);\n\n\t\tthis.data = [];\n\n\t\tfor (var i:number = 0; i < this.len; i++) {\n\t\t\tvar center:number = (0.5 + i) * iscale;\n\n\t\t\tvar left:number = Math.floor(center - this.width);\n\n\t\t\tvar total:number = 0.0;\n\t\t\tfor (var j:number = 0; j < this.windowSize; j++) {\n\t\t\t\tvar sample:number = f.sampleBox(left + j - center, scale, samples);\n\n\t\t\t\t//printf(\"%f %X\\n\", sample, *(uint32 *)&sample);\n\n\t\t\t\tthis.data[i * this.windowSize + j] = sample;\n\t\t\t\ttotal += sample;\n\t\t\t}\n\n\t\t\t// normalize weights.\n\t\t\tfor (var j:number = 0; j < this.windowSize; j++) {\n\t\t\t\tthis.data[i * this.windowSize + j] /= total;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic valueAt(column:number, x:number):number {\n\t\treturn this.data[column * this.windowSize + x];\n\t}\n}\n\nexport class BoxFilter {\n\tpublic get width():number {\n\t\treturn 0.5;\n\t}\n\n\tpublic sampleBox(x:number, scale:number, samples:number):number {\n\t\tvar sum:number = 0;\n\t\tvar isamples:number = 1.0 / samples;\n\n\t\tfor (var s:number = 0; s < samples; s++) {\n\t\t\tvar p:number = (x + (s + 0.5) * isamples) * scale;\n\t\t\tvar value:number = this.evaluate(p);\n\t\t\tsum += value;\n\t\t}\n\n\t\treturn sum * isamples;\n\t}\n\n\tpublic evaluate(x:number):number {\n\t\tif (Math.abs(x) <= this.width) return 1.0;\n\t\telse return 0.0;\n\t}\n}\nexport default MipmapGenerator;",
    "import {getTimer}\t\t\t\t\tfrom \"../utils/getTimer\";\n\nexport class RequestAnimationFrame\n{\n\tprivate _callback:Function;\n\tprivate _callbackContext:Object;\n\tprivate _active:boolean = false;\n\tprivate _rafUpdateFunction:any;\n\tprivate _prevTime:number;\n\tprivate _dt:number;\n\tprivate _currentTime:number;\n\tprivate _argsArray:Array<any> = new Array();\n\tprivate _getTimer:Function;\n\n\tconstructor(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._getTimer = getTimer;\n\n\t\tthis.setCallback(callback, callbackContext);\n\n\t\tthis._rafUpdateFunction = () => {\n\t\t\tif (this._active)\n\t\t\t\tthis._tick();\n\t\t}\n\n\t\tthis._argsArray.push(this._dt);\n\t}\n\n\t// Public\n\n\t/**\n\t *\n\t * @param callback\n\t * @param callbackContext\n\t */\n\tpublic setCallback(callback:Function, callbackContext:Object):void\n\t{\n\t\tthis._callback = callback;\n\t\tthis._callbackContext = callbackContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic start():void\n\t{\n\t\tthis._prevTime = this._getTimer();\n\t\tthis._active = true;\n\n\t\tif(window) {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\t\t\t} else {\n\t\t\t\tif (window['mozRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\n\t\t\t\telse if (window['webkitRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\n\t\t\t\telse if (window['oRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic stop():void\n\t{\n\t\tthis._active = false;\n\t}\n\n\t// Get / Set\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic get active():boolean\n\t{\n\t\treturn this._active;\n\t}\n\n\t// Private\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _tick():void\n\t{\n\t\tthis._currentTime = this._getTimer();\n\t\tthis._dt = this._currentTime - this._prevTime;\n\t\tthis._argsArray[0] = this._dt;\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\n\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\n\t\tthis._prevTime = this._currentTime;\n\t}\n\n\n}",
    "import {ErrorBase}\t\t\t\tfrom \"../errors/ErrorBase\";\nimport {EventDispatcher}\t\t\tfrom \"../events/EventDispatcher\";\nimport {TimerEvent}\t\t\t\tfrom \"../events/TimerEvent\";\n\nexport class Timer extends EventDispatcher\n{\n\tprivate _delay:number;\n\tprivate _repeatCount:number = 0;\n\tprivate _currentCount:number = 0;\n\tprivate _iid;\n\tprivate _running:boolean = false;\n\n\tconstructor(delay:number, repeatCount:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._delay = delay;\n\t\tthis._repeatCount = repeatCount;\n\n\t\tif (isNaN(delay) || delay < 0)\n\t\t\tthrow new ErrorBase(\"Delay is negative or not a number\");\n\t}\n\n\tpublic get currentCount():number\n\t{\n\t\treturn this._currentCount;\n\t}\n\n\tpublic get delay():number\n\t{\n\t\treturn this._delay;\n\t}\n\n\tpublic set delay(value:number)\n\t{\n\t\tthis._delay = value;\n\n\t\tif (this._running) {\n\t\t\tthis.stop();\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\tpublic get repeatCount():number\n\t{\n\t\treturn this._repeatCount;\n\t}\n\n\tpublic set repeatCount(value:number)\n\t{\n\t\tthis._repeatCount = value;\n\t}\n\n\tpublic reset():void\n\t{\n\t\tif (this._running)\n\t\t\tthis.stop();\n\n\t\tthis._currentCount = 0;\n\t}\n\n\tpublic get running():boolean\n\t{\n\t\treturn this._running;\n\t}\n\n\tpublic start():void\n\t{\n\t\tthis._running = true;\n\t\tclearInterval(this._iid);\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\n\t}\n\n\tpublic stop():void\n\t{\n\t\tthis._running = false;\n\t\tclearInterval(this._iid);\n\t}\n\n\tprivate tick():void\n\t{\n\t\tthis._currentCount++;\n\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\n\n\t\t\tthis.stop();\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t}\n\t}\n}",
    "export class XmlUtils {\n\n\tpublic static getChildrenWithTag(node:Node, tag:string):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(node) {\n\t\t\tvar num:number = node.childNodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = node.childNodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.nodeName == tag) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static filterListByParam(nodes:NodeList, paramName:string, paramValue):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(nodes) {\n\t\t\tvar num:number = nodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = nodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.attributes.getNamedItem(paramName).value == paramValue) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static strToXml(str:string):Node {\n\t\tvar parser:DOMParser = new DOMParser();\n\t\tvar node:Node = parser.parseFromString(str, \"text/xml\");\n\t\treturn node;\n\t}\n\n\tpublic static nodeToString(node:Node):string {\n\t\tif(!node) return \"\";\n\t\tvar str = (new XMLSerializer()).serializeToString(node);\n\t\treturn str;\n\t}\n\n\tpublic static readAttributeValue(node:Node, attrName:string):string {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn \"\";\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\tif(!attribute) {\n\t\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", attribute does not exist.\";\n\t\t\treturn \"\";\n\t\t}\n\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", value: \" + attribute.value);\n\t\treturn attribute.value;\n\t}\n\n\tpublic static writeAttributeValue(node:Node, attrName:string, attrValue:string) {\n\t\tvar attribute:Attr = document.createAttribute(attrName);\n\t\tattribute.value = attrValue;\n\t\tattribute = node.attributes.setNamedItem(attribute);\n\t\tconsole.log(\"XmlUltils - writeAttributeValue() - name: \" + attribute.name + \", value: \" + attribute.value);\n\t}\n\n\tpublic static hasAttribute(node:Node, attrName:string):boolean {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\treturn attribute != null;\n\t}\n}\nexport default XmlUtils;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "/**\n *\n *\n * @returns {number}\n */\nexport function getTimer():number\n{\n\t// number milliseconds of 1970/01/01\n\t// this different to AS3 implementation which gets the number of milliseconds\n\t// since instance of Flash player was initialised\n\treturn Date.now();\n}",
    "export {BitmapImageUtils}\t\t\t\tfrom \"./utils/BitmapImageUtils\";\nexport {ByteArray}\t\t\t\t\t\tfrom \"./utils/ByteArray\";\nexport {ByteArrayBase}\t\t\t\t\tfrom \"./utils/ByteArrayBase\";\nexport {ByteArrayBuffer}\t\t\t\tfrom \"./utils/ByteArrayBuffer\";\nexport {ColorUtils}\t\t\t\t\t\tfrom \"./utils/ColorUtils\";\nexport {CSS}\t\t\t\t\t\t\tfrom \"./utils/CSS\";\nexport {Debug}\t\t\t\t\t\t\tfrom \"./utils/Debug\";\nexport {Extensions}\t\t\t\t\t\tfrom \"./utils/Extensions\";\nexport {getTimer}\t\t\t\t\t\tfrom \"./utils/getTimer\";\nexport {IArrayBufferViewClass}\t\t\tfrom \"./utils/IArrayBufferViewClass\";\nexport {ImageUtils}\t\t\t\t\t\tfrom \"./utils/ImageUtils\";\nexport {MipmapGenerator}\t\t\t\tfrom \"./utils/MipmapGenerator\";\nexport {RequestAnimationFrame}\t\t\tfrom \"./utils/RequestAnimationFrame\";\nexport {Timer}\t\t\t\t\t\t\tfrom \"./utils/Timer\";\nexport {XmlUtils}\t\t\t\t\t\tfrom \"./utils/XmlUtils\";"
  ],
  "sourceRoot": ""
}