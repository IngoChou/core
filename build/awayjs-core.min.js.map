{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-core.js",
    "awayjs-core/lib/data/BitmapImage2D.ts",
    "awayjs-core/lib/data/BitmapImageChannel.ts",
    "awayjs-core/lib/data/BitmapImageCube.ts",
    "awayjs-core/lib/data/BlendMode.ts",
    "awayjs-core/lib/data/CurveSubGeometry.ts",
    "awayjs-core/lib/data/Geometry.ts",
    "awayjs-core/lib/data/Image2D.ts",
    "awayjs-core/lib/data/ImageBase.ts",
    "awayjs-core/lib/data/ImageCube.ts",
    "awayjs-core/lib/data/LineSubGeometry.ts",
    "awayjs-core/lib/data/Sampler2D.ts",
    "awayjs-core/lib/data/SamplerBase.ts",
    "awayjs-core/lib/data/SamplerCube.ts",
    "awayjs-core/lib/data/SpecularImage2D.ts",
    "awayjs-core/lib/data/SubGeometryBase.ts",
    "awayjs-core/lib/data/TriangleSubGeometry.ts",
    "awayjs-core/lib/errors/AbstractMethodError.ts",
    "awayjs-core/lib/errors/ArgumentError.ts",
    "awayjs-core/lib/errors/DocumentError.ts",
    "awayjs-core/lib/errors/Error.ts",
    "awayjs-core/lib/errors/PartialImplementationError.ts",
    "awayjs-core/lib/errors/RangeError.ts",
    "awayjs-core/lib/events/AssetEvent.ts",
    "awayjs-core/lib/events/EventDispatcher.ts",
    "awayjs-core/lib/events/Event.ts",
    "awayjs-core/lib/events/GeometryEvent.ts",
    "awayjs-core/lib/events/HTTPStatusEvent.ts",
    "awayjs-core/lib/events/IOErrorEvent.ts",
    "awayjs-core/lib/events/LoaderEvent.ts",
    "awayjs-core/lib/events/ParserEvent.ts",
    "awayjs-core/lib/events/ProgressEvent.ts",
    "awayjs-core/lib/events/ProjectionEvent.ts",
    "awayjs-core/lib/events/SubGeometryEvent.ts",
    "awayjs-core/lib/events/TimerEvent.ts",
    "awayjs-core/lib/geom/Box.ts",
    "awayjs-core/lib/geom/ColorTransform.ts",
    "awayjs-core/lib/geom/MathConsts.ts",
    "awayjs-core/lib/geom/Matrix3DUtils.ts",
    "awayjs-core/lib/geom/Matrix3D.ts",
    "awayjs-core/lib/geom/Matrix.ts",
    "awayjs-core/lib/geom/Orientation3D.ts",
    "awayjs-core/lib/geom/PerspectiveProjection.ts",
    "awayjs-core/lib/geom/Plane3D.ts",
    "awayjs-core/lib/geom/PlaneClassification.ts",
    "awayjs-core/lib/geom/Point.ts",
    "awayjs-core/lib/geom/PoissonLookup.ts",
    "awayjs-core/lib/geom/Quaternion.ts",
    "awayjs-core/lib/geom/Rectangle.ts",
    "awayjs-core/lib/geom/Sphere.ts",
    "awayjs-core/lib/geom/UVTransform.ts",
    "awayjs-core/lib/geom/Vector3D.ts",
    "awayjs-core/lib/library/AssetBase.ts",
    "awayjs-core/lib/library/AssetLibraryBundle.ts",
    "awayjs-core/lib/library/AssetLibraryIterator.ts",
    "awayjs-core/lib/library/AssetLibrary.ts",
    "awayjs-core/lib/library/AssetLoaderContext.ts",
    "awayjs-core/lib/library/AssetLoaderToken.ts",
    "awayjs-core/lib/library/AssetLoader.ts",
    "awayjs-core/lib/library/ConflictPrecedence.ts",
    "awayjs-core/lib/library/ConflictStrategyBase.ts",
    "awayjs-core/lib/library/ConflictStrategy.ts",
    "awayjs-core/lib/library/ErrorConflictStrategy.ts",
    "awayjs-core/lib/library/IDUtil.ts",
    "awayjs-core/lib/library/IgnoreConflictStrategy.ts",
    "awayjs-core/lib/library/NumSuffixConflictStrategy.ts",
    "awayjs-core/lib/net/CrossDomainPolicy.ts",
    "awayjs-core/lib/net/URLLoaderDataFormat.ts",
    "awayjs-core/lib/net/URLLoader.ts",
    "awayjs-core/lib/net/URLRequestMethod.ts",
    "awayjs-core/lib/net/URLRequest.ts",
    "awayjs-core/lib/net/URLVariables.ts",
    "awayjs-core/lib/parsers/Image2DParser.ts",
    "awayjs-core/lib/parsers/ImageCubeParser.ts",
    "awayjs-core/lib/parsers/ParserBase.ts",
    "awayjs-core/lib/parsers/ParserDataFormat.ts",
    "awayjs-core/lib/parsers/ParserUtils.ts",
    "awayjs-core/lib/parsers/ResourceDependency.ts",
    "awayjs-core/lib/parsers/TextureAtlasParser.ts",
    "awayjs-core/lib/projections/CoordinateSystem.ts",
    "awayjs-core/lib/projections/FreeMatrixProjection.ts",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection.ts",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection.ts",
    "awayjs-core/lib/projections/OrthographicProjection.ts",
    "awayjs-core/lib/projections/PerspectiveProjection.ts",
    "awayjs-core/lib/projections/ProjectionBase.ts",
    "awayjs-core/lib/ui/Keyboard.ts",
    "awayjs-core/lib/utils/BitmapImageUtils.ts",
    "awayjs-core/lib/utils/ByteArrayBase.ts",
    "awayjs-core/lib/utils/ByteArrayBuffer.ts",
    "awayjs-core/lib/utils/ByteArray.ts",
    "awayjs-core/lib/utils/CSS.ts",
    "awayjs-core/lib/utils/ColorUtils.ts",
    "awayjs-core/lib/utils/Debug.ts",
    "awayjs-core/lib/utils/ImageUtils.ts",
    "awayjs-core/lib/utils/MipmapGenerator.ts",
    "awayjs-core/lib/utils/RequestAnimationFrame.ts",
    "awayjs-core/lib/utils/Timer.ts",
    "awayjs-core/lib/utils/XmlUtils.ts",
    "awayjs-core/lib/utils/getTimer.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-core/lib/data/BitmapImage2D",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "Image2D",
    "ColorUtils",
    "BitmapImageUtils",
    "BitmapImage2D",
    "_super",
    "width",
    "height",
    "transparent",
    "fillColor",
    "_locked",
    "_transparent",
    "_imageCanvas",
    "document",
    "createElement",
    "_context",
    "getContext",
    "fillRect",
    "_rect",
    "Object",
    "defineProperty",
    "get",
    "assetType",
    "enumerable",
    "configurable",
    "set",
    "value",
    "clone",
    "draw",
    "colorTransform",
    "rect",
    "_imageData",
    "getImageData",
    "data",
    "j",
    "index",
    "x",
    "y",
    "redMultiplier",
    "redOffset",
    "greenMultiplier",
    "greenOffset",
    "blueMultiplier",
    "blueOffset",
    "alphaMultiplier",
    "alphaOffset",
    "putImageData",
    "invalidateContent",
    "copyChannel",
    "sourceBitmap",
    "sourceRect",
    "destPoint",
    "sourceChannel",
    "destChannel",
    "imageData",
    "sourceData",
    "destData",
    "sourceOffset",
    "Math",
    "round",
    "log",
    "destOffset",
    "sourceIndex",
    "destIndex",
    "copyPixels",
    "source",
    "destRect",
    "getCanvas",
    "_copyPixels",
    "dispose",
    "matrix",
    "blendMode",
    "clipRect",
    "smoothing",
    "_draw",
    "color",
    "_fillRect",
    "getPixel",
    "g",
    "pixelData",
    "getPixel32",
    "lock",
    "setArray",
    "inputArray",
    "argb",
    "float32ColorToARGB",
    "setPixel",
    "setPixel32",
    "setPixels",
    "inputByteArray",
    "position",
    "readUnsignedInt",
    "unlock",
    "_setSize",
    "awayjs-core/lib/data/Image2D",
    "awayjs-core/lib/utils/BitmapImageUtils",
    "awayjs-core/lib/utils/ColorUtils",
    "awayjs-core/lib/data/BitmapImageChannel",
    "BitmapImageChannel",
    "ALPHA",
    "BLUE",
    "GREEN",
    "RED",
    "awayjs-core/lib/data/BitmapImageCube",
    "ImageCube",
    "Rectangle",
    "BitmapImageCube",
    "size",
    "Array",
    "_size",
    "side",
    "posX",
    "negX",
    "posY",
    "negY",
    "posZ",
    "negZ",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/data/BlendMode",
    "BlendMode",
    "ADD",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "NORMAL",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "SUBTRACT",
    "awayjs-core/lib/data/CurveSubGeometry",
    "SubGeometryBase",
    "Vector3D",
    "SubGeometryEvent",
    "CurveSubGeometry",
    "concatenatedArrays",
    "_positionsDirty",
    "_curvesDirty",
    "_faceNormalsDirty",
    "_vertexNormalsDirty",
    "_uvsDirty",
    "_secondaryUVsDirty",
    "_jointIndicesDirty",
    "_jointWeightsDirty",
    "_concatenateArrays",
    "_autoDeriveNormals",
    "_useFaceWeights",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_useCondensedIndices",
    "_pUpdateStrideOffset",
    "_pOffset",
    "VERTEX_DATA",
    "POSITION_DATA",
    "stride",
    "_curves",
    "CURVE_DATA",
    "_uvs",
    "UV_DATA",
    "_pStride",
    "len",
    "_pNumVertices",
    "_pVertices",
    "_pStrideOffsetDirty",
    "notifyUVsUpdate",
    "updatePositions",
    "_positions",
    "updateCurves",
    "updateUVs",
    "updateFaceNormals",
    "_faceNormals",
    "_condensedIndexLookUp",
    "getBoundingPositions",
    "values",
    "positions",
    "getStride",
    "getOffset",
    "pInvalidateBounds",
    "notifyPositionsUpdate",
    "offset",
    "curves",
    "_pNotifyVerticesUpdate",
    "notifyCurvesUpdate",
    "uvs",
    "uvIdx",
    "lenV",
    "_faceWeights",
    "updateIndices",
    "indices",
    "_pIndices",
    "concat",
    "scaleUV",
    "scaleU",
    "scaleV",
    "ratioU",
    "ratioV",
    "scale",
    "applyTransformation",
    "transform",
    "i1",
    "i2",
    "vector",
    "invTranspose",
    "vi0",
    "vStride",
    "z",
    "transformVector",
    "k",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "cx",
    "cy",
    "cz",
    "sqrt",
    "w",
    "_positionsUpdated",
    "VERTICES_UPDATED",
    "dispatchEvent",
    "_curvesUpdated",
    "_uvsUpdated",
    "POSITION_FORMAT",
    "CURVE_FORMAT",
    "UV_FORMAT",
    "awayjs-core/lib/data/SubGeometryBase",
    "awayjs-core/lib/events/SubGeometryEvent",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/data/Geometry",
    "GeometryEvent",
    "AssetBase",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "subGeometry",
    "push",
    "parentGeometry",
    "hasEventListener",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "splice",
    "indexOf",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-core/lib/events/GeometryEvent",
    "awayjs-core/lib/library/AssetBase",
    "ImageBase",
    "ImageUtils",
    "_testDimensions",
    "invalidateSize",
    "isDimensionValid",
    "awayjs-core/lib/data/ImageBase",
    "awayjs-core/lib/utils/ImageUtils",
    "_imageObject",
    "invalidate",
    "_iAddImageObject",
    "ImageObject",
    "_iRemoveImageObject",
    "awayjs-core/lib/data/LineSubGeometry",
    "TriangleSubGeometry",
    "LineSubGeometry",
    "_boundingPositionDirty",
    "_thicknessDirty",
    "_colorsDirty",
    "START_POSITION_DATA",
    "END_POSITION_DATA",
    "THICKNESS_DATA",
    "COLOR_DATA",
    "_startPositions",
    "_endPositions",
    "updateThickness",
    "_thickness",
    "updateColors",
    "_startColors",
    "_endColors",
    "_numSegments",
    "_boundingPositions",
    "startPositions",
    "endPositions",
    "startValues",
    "endValues",
    "thickness",
    "floor",
    "notifyThicknessUpdate",
    "colors",
    "notifyColorsUpdate",
    "_thicknessUpdated",
    "_colorUpdated",
    "COLOR_FORMAT",
    "THICKNESS_FORMAT",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "awayjs-core/lib/data/Sampler2D",
    "SamplerBase",
    "Sampler2D",
    "image2D",
    "repeat",
    "smooth",
    "mipmap",
    "_offsetX",
    "_offsetY",
    "_scaleX",
    "_scaleY",
    "_updateRect",
    "_repeat",
    "_imageRect",
    "_frameRect",
    "awayjs-core/lib/data/SamplerBase",
    "_pFormat",
    "_smooth",
    "_mipmap",
    "awayjs-core/lib/data/SamplerCube",
    "SamplerCube",
    "imageCube",
    "awayjs-core/lib/data/SpecularImage2D",
    "Point",
    "SpecularImage2D",
    "specularSource",
    "glossSource",
    "_specularSource",
    "_glossSource",
    "_output",
    "_testSize",
    "origin",
    "h",
    "awayjs-core/lib/geom/Point",
    "AbstractMethodError",
    "_pConcatenateArrays",
    "updateVertices",
    "_numTriangles",
    "dataType",
    "_numIndices",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "awayjs-core/lib/errors/AbstractMethodError",
    "_faceTangentsDirty",
    "_vertexTangentsDirty",
    "_autoDeriveTangents",
    "notifyJointIndicesUpdate",
    "_vertexNormals",
    "NORMAL_DATA",
    "_vertexTangents",
    "TANGENT_DATA",
    "_secondaryUVs",
    "SECONDARY_UV_DATA",
    "_jointIndices",
    "JOINT_INDEX_DATA",
    "_jointsPerVertex",
    "_jointWeights",
    "JOINT_WEIGHT_DATA",
    "notifyNormalsUpdate",
    "notifyTangentsUpdate",
    "updateVertexNormals",
    "updateVertexTangents",
    "updateSecondaryUVs",
    "updateJointIndices",
    "updateJointWeights",
    "updateFaceTangents",
    "_faceTangents",
    "_condensedJointIndices",
    "_numCondensedJoints",
    "normals",
    "f1",
    "f2",
    "f3",
    "lenI",
    "weight",
    "vx",
    "vy",
    "vz",
    "tangents",
    "notifySecondaryUVsUpdate",
    "jointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "undefined",
    "jointWeights",
    "notifyJointWeightsUpdate",
    "jointsPerVertex",
    "bakeNormals",
    "bakeTangents",
    "invert",
    "transpose",
    "ni0",
    "ti0",
    "nStride",
    "tStride",
    "deltaTransformVector",
    "normalize",
    "index1",
    "index2",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "_normalsUpdated",
    "_tangentsUpdated",
    "_secondaryUVsUpdated",
    "_jointIndicesUpdated",
    "_jointWeightsUpdated",
    "NORMAL_FORMAT",
    "TANGENT_FORMAT",
    "SECONDARY_UV_FORMAT",
    "message",
    "id",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/ArgumentError",
    "ArgumentError",
    "awayjs-core/lib/errors/DocumentError",
    "DocumentError",
    "DOCUMENT_DOES_NOT_EXIST",
    "_name",
    "_errorID",
    "_messsage",
    "name",
    "awayjs-core/lib/errors/PartialImplementationError",
    "PartialImplementationError",
    "dependency",
    "awayjs-core/lib/errors/RangeError",
    "RangeError",
    "awayjs-core/lib/events/AssetEvent",
    "Event",
    "AssetEvent",
    "type",
    "asset",
    "prevName",
    "_asset",
    "_prevName",
    "assetPrevName",
    "ASSET_COMPLETE",
    "ASSET_RENAME",
    "ASSET_CONFLICT_RESOLVED",
    "TEXTURE_SIZE_ERROR",
    "awayjs-core/lib/events/Event",
    "awayjs-core/lib/events/EventDispatcher",
    "EventDispatcher",
    "target",
    "listeners",
    "addEventListener",
    "listener",
    "getEventListenerIndex",
    "removeEventListener",
    "event",
    "listenerArray",
    "COMPLETE",
    "OPEN",
    "ENTER_FRAME",
    "EXIT_FRAME",
    "RESIZE",
    "ERROR",
    "CHANGE",
    "_subGeometry",
    "awayjs-core/lib/events/HTTPStatusEvent",
    "HTTPStatusEvent",
    "status",
    "HTTP_STATUS",
    "awayjs-core/lib/events/IEventDispatcher",
    "awayjs-core/lib/events/IOErrorEvent",
    "IOErrorEvent",
    "IO_ERROR",
    "awayjs-core/lib/events/LoaderEvent",
    "LoaderEvent",
    "url",
    "content",
    "assets",
    "_url",
    "_content",
    "_assets",
    "RESOURCE_COMPLETE",
    "awayjs-core/lib/events/ParserEvent",
    "ParserEvent",
    "_message",
    "PARSE_COMPLETE",
    "PARSE_ERROR",
    "READY_FOR_DEPENDENCIES",
    "awayjs-core/lib/events/ProgressEvent",
    "ProgressEvent",
    "PROGRESS",
    "awayjs-core/lib/events/ProjectionEvent",
    "ProjectionEvent",
    "projection",
    "_projection",
    "MATRIX_CHANGED",
    "_dataType",
    "awayjs-core/lib/events/TimerEvent",
    "TimerEvent",
    "TIMER",
    "TIMER_COMPLETE",
    "awayjs-core/lib/geom/Box",
    "Box",
    "depth",
    "val",
    "_bottomRightBack",
    "_topLeftFront",
    "contains",
    "containsPoint",
    "containsBox",
    "box",
    "copyFrom",
    "sourceBox",
    "equals",
    "toCompare",
    "inflate",
    "dx",
    "dy",
    "dz",
    "inflatePoint",
    "delta",
    "intersection",
    "toIntersect",
    "intersects",
    "rayIntersection",
    "direction",
    "targetNormal",
    "halfExtentsX",
    "halfExtentsY",
    "halfExtentsZ",
    "centerX",
    "centerY",
    "centerZ",
    "px",
    "py",
    "pz",
    "ix",
    "iy",
    "iz",
    "rayEntryDistance",
    "closestPointToPoint",
    "point",
    "isEmpty",
    "offsetPosition",
    "setEmpty",
    "setTo",
    "xa",
    "ya",
    "za",
    "widtha",
    "heighta",
    "deptha",
    "toString",
    "union",
    "toUnion",
    "awayjs-core/lib/geom/ColorTransform",
    "ColorTransform",
    "_changeEvent",
    "_redMultiplier",
    "_greenMultiplier",
    "_blueMultiplier",
    "_alphaMultiplier",
    "_redOffset",
    "_greenOffset",
    "_blueOffset",
    "_alphaOffset",
    "_invalidate",
    "clear",
    "prepend",
    "ct",
    "awayjs-core/lib/geom/MathConsts",
    "MathConsts",
    "RADIANS_TO_DEGREES",
    "PI",
    "DEGREES_TO_RADIANS",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "Matrix3D",
    "Matrix3DUtils",
    "quaternion2matrix",
    "quarternion",
    "m",
    "xx",
    "xy",
    "xz",
    "xw",
    "yy",
    "yz",
    "yw",
    "zz",
    "zw",
    "raw",
    "RAW_DATA_CONTAINER",
    "copyRawDataFrom",
    "getForward",
    "v",
    "copyColumnTo",
    "getUp",
    "getRight",
    "compare",
    "m1",
    "m2",
    "r1",
    "r2",
    "rawData",
    "copyRawDataTo",
    "lookAt",
    "pos",
    "dir",
    "up",
    "dirN",
    "upN",
    "lftN",
    "crossProduct",
    "dotProduct",
    "reflection",
    "plane",
    "c",
    "ab2",
    "ac2",
    "bc2",
    "result",
    "getTranslation",
    "deltaTransformVectors",
    "vin",
    "vout",
    "outIndex",
    "CALCULATION_MATRIX",
    "awayjs-core/lib/geom/Matrix3D",
    "Orientation3D",
    "append",
    "lhs",
    "m111",
    "m121",
    "m131",
    "m141",
    "m112",
    "m122",
    "m132",
    "m142",
    "m113",
    "m123",
    "m133",
    "m143",
    "m114",
    "m124",
    "m134",
    "m144",
    "m211",
    "m221",
    "m231",
    "m241",
    "m212",
    "m222",
    "m232",
    "m242",
    "m213",
    "m223",
    "m233",
    "m243",
    "m214",
    "m224",
    "m234",
    "m244",
    "appendRotation",
    "degrees",
    "axis",
    "getAxisRotation",
    "appendScale",
    "xScale",
    "yScale",
    "zScale",
    "appendTranslation",
    "slice",
    "copyColumnFrom",
    "column",
    "vector3D",
    "sourceMatrix3D",
    "copyRowFrom",
    "row",
    "copyRowTo",
    "copyToMatrix3D",
    "dest",
    "decompose",
    "orientationStyle",
    "q",
    "vec",
    "mr",
    "rot",
    "AXIS_ANGLE",
    "acos",
    "QUATERNION",
    "tr",
    "EULER_ANGLES",
    "asin",
    "atan2",
    "identity",
    "interpolate",
    "thisMat",
    "toMat",
    "percent",
    "interpolateTo",
    "determinant",
    "invertable",
    "abs",
    "m11",
    "m21",
    "m31",
    "m41",
    "m12",
    "m22",
    "m32",
    "m42",
    "m13",
    "m23",
    "m33",
    "m43",
    "m14",
    "m24",
    "m34",
    "m44",
    "rhs",
    "prependRotation",
    "prependScale",
    "prependTranslation",
    "recompose",
    "components",
    "angle",
    "cos",
    "sin",
    "transformVectors",
    "oRawData",
    "rad",
    "tmp1",
    "tmp2",
    "toFixed",
    "decimalPlace",
    "magnitude",
    "pow",
    "awayjs-core/lib/geom/Orientation3D",
    "awayjs-core/lib/geom/Matrix",
    "Matrix",
    "tx",
    "ty",
    "a1",
    "c1",
    "tx1",
    "sourceMatrix",
    "createBox",
    "scaleX",
    "scaleY",
    "rotation",
    "createGradientBox",
    "deltaTransformPoint",
    "norm",
    "multiply",
    "rotate",
    "sx",
    "sy",
    "transformPoint",
    "translate",
    "awayjs-core/lib/geom/PerspectiveProjection",
    "PerspectiveProjection",
    "toMatrix3D",
    "_matrix3D",
    "awayjs-core/lib/geom/Plane3D",
    "PlaneClassification",
    "Plane3D",
    "_iAlignment",
    "ALIGN_XY_AXIS",
    "ALIGN_YZ_AXIS",
    "ALIGN_XZ_AXIS",
    "ALIGN_ANY",
    "fromPoints",
    "p0",
    "p1",
    "p2",
    "d1x",
    "d1y",
    "d1z",
    "d2x",
    "d2y",
    "d2z",
    "fromNormalAndPoint",
    "normal",
    "distance",
    "classifyPoint",
    "epsilon",
    "FRONT",
    "BACK",
    "INTERSECT",
    "awayjs-core/lib/geom/PlaneClassification",
    "IN",
    "OUT",
    "add",
    "sourcePoint",
    "invLength",
    "subtract",
    "pt1",
    "pt2",
    "polar",
    "awayjs-core/lib/geom/PoissonLookup",
    "PoissonLookup",
    "initDistributions",
    "_distributions",
    "getDistribution",
    "awayjs-core/lib/geom/Quaternion",
    "Quaternion",
    "qa",
    "qb",
    "w1",
    "w2",
    "multiplyVector",
    "fromAxisAngle",
    "sin_a",
    "cos_a",
    "slerp",
    "dot",
    "s1",
    "s2",
    "lerp",
    "fromEulerAngles",
    "ax",
    "ay",
    "az",
    "halfX",
    "halfY",
    "halfZ",
    "cosX",
    "sinX",
    "cosY",
    "sinY",
    "cosZ",
    "sinZ",
    "toEulerAngles",
    "mag",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "ww",
    "fromMatrix",
    "toRawData",
    "exclude4thRow",
    "rotatePoint",
    "_bottomRight",
    "_topLeft",
    "containsRect",
    "offsetPoint",
    "awayjs-core/lib/geom/Sphere",
    "Sphere",
    "radius",
    "det",
    "sqrtDet",
    "awayjs-core/lib/geom/UVTransform",
    "UVTransform",
    "_uvMatrix",
    "_rotation",
    "_offsetU",
    "_offsetV",
    "_uvMatrixDirty",
    "updateUVMatrix",
    "lengthSquared",
    "angleBetween",
    "src",
    "decrementBy",
    "allFour",
    "incrementBy",
    "nearEquals",
    "tolerance",
    "negate",
    "project",
    "scaleBy",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "_id",
    "ID_COUNT",
    "_originalName",
    "updateFullPath",
    "prev",
    "_namespace",
    "_full_path",
    "assetPathEquals",
    "ns",
    "isAsset",
    "assetClass",
    "resetAssetPath",
    "overrideOriginal",
    "DEFAULT_NAMESPACE",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "AssetLibraryIterator",
    "AssetLoader",
    "ConflictPrecedence",
    "ConflictStrategy",
    "AssetLibraryBundle",
    "_this",
    "_loadingSessionsGarbage",
    "_assetDictionary",
    "_loadingSessions",
    "conflictStrategy",
    "IGNORE",
    "create",
    "conflictPrecedence",
    "FAVOR_NEW",
    "_onAssetRenameDelegate",
    "onAssetRename",
    "_onAssetConflictResolvedDelegate",
    "onAssetConflictResolved",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "getInstance",
    "key",
    "_iInstances",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "_strategy",
    "_strategyPreference",
    "createIterator",
    "assetTypeFilter",
    "namespaceFilter",
    "filterFunc",
    "load",
    "req",
    "context",
    "parser",
    "loader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "loadData",
    "getAsset",
    "_assetDictDirty",
    "rehashAssetDict",
    "addAsset",
    "old",
    "assetNamespace",
    "resolveConflict",
    "removeAsset",
    "idx",
    "removeAssetFromDict",
    "removeAssetByName",
    "removeAllAssets",
    "removeNamespaceAssets",
    "old_assets",
    "autoRemoveEmptyNamespace",
    "empty",
    "stopAllLoadingSessions",
    "killLoadingSession",
    "_gcTimeoutIID",
    "setTimeout",
    "loadingSessionGC",
    "pop",
    "clearTimeout",
    "stop",
    "dict",
    "awayjs-core/lib/library/AssetLibraryIterator",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-core/lib/library/ConflictPrecedence",
    "awayjs-core/lib/library/ConflictStrategy",
    "filter",
    "_idx",
    "_filtered",
    "next",
    "reset",
    "setIndex",
    "awayjs-core/lib/library/AssetLibrary",
    "AssetLibrary",
    "getBundle",
    "stopLoad",
    "awayjs-core/lib/library/AssetLoaderContext",
    "AssetLoaderContext",
    "includeDependencies",
    "dependencyBaseUrl",
    "_includeDependencies",
    "_dependencyBaseUrl",
    "_embeddedDataByUrl",
    "_remappedUrls",
    "_materialMode",
    "UNDEFINED",
    "materialMode",
    "_overrideAbsPath",
    "_overrideFullUrls",
    "mapUrl",
    "originalUrl",
    "newUrl",
    "mapUrlToData",
    "_iHasDataForUrl",
    "_iGetDataForUrl",
    "_iHasMappingForUrl",
    "_iGetRemappedUrl",
    "SINGLEPASS_MATERIALS",
    "MULTIPASS_MATERIALS",
    "awayjs-core/lib/library/AssetLoaderToken",
    "AssetLoaderToken",
    "_iLoader",
    "URLLoader",
    "URLLoaderDataFormat",
    "Image2DParser",
    "ImageCubeParser",
    "TextureAtlasParser",
    "ResourceDependency",
    "_stack",
    "_errorHandlers",
    "_parseErrorHandlers",
    "_onReadyForDependenciesDelegate",
    "onReadyForDependencies",
    "_onParseCompleteDelegate",
    "onParseComplete",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_parsers",
    "parsers",
    "_baseDependency",
    "_token",
    "_uri",
    "replace",
    "retrieveDependency",
    "retrieveNext",
    "_currentDependency",
    "dependencies",
    "parsingPaused",
    "_iResumeParsingAfterDependencies",
    "_iSuccess",
    "resolve",
    "addEventListeners",
    "request",
    "Function",
    "_iSetData",
    "retrieveAsRawData",
    "parseDependency",
    "resolveDependencyUrl",
    "dataFormat",
    "BINARY",
    "_iSetParser",
    "getParserFromSuffix",
    "joinUrl",
    "base",
    "end",
    "charAt",
    "substr",
    "scheme_re",
    "RegExp",
    "overrideAbsolutePaths",
    "test",
    "overrideFullURLs",
    "noscheme_url",
    "substring",
    "lastIndexOf",
    "retrieveParserDependencies",
    "parserDependancies",
    "resolveParserDependencies",
    "handled",
    "isDependency",
    "removeEventListeners",
    "resolveFailure",
    "suppresAssetEvents",
    "resolveName",
    "handler",
    "getParserFromData",
    "supportsData",
    "_iFileName",
    "parseAsync",
    "split",
    "fileExtension",
    "toLowerCase",
    "supportsType",
    "awayjs-core/lib/net/URLLoader",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/parsers/Image2DParser",
    "awayjs-core/lib/parsers/ImageCubeParser",
    "awayjs-core/lib/parsers/ResourceDependency",
    "awayjs-core/lib/parsers/TextureAtlasParser",
    "FAVOR_OLD",
    "awayjs-core/lib/library/ConflictStrategyBase",
    "ConflictStrategyBase",
    "changedAsset",
    "oldAsset",
    "assetsDictionary",
    "precedence",
    "_pUpdateNames",
    "nonConflictingName",
    "newAsset",
    "loser_prev_name",
    "winner",
    "loser",
    "ErrorConflictStrategy",
    "IgnoreConflictStrategy",
    "NumSuffixConflictStrategy",
    "include",
    "APPEND_NUM_SUFFIX",
    "THROW_ERROR",
    "awayjs-core/lib/library/ErrorConflictStrategy",
    "awayjs-core/lib/library/IgnoreConflictStrategy",
    "awayjs-core/lib/library/NumSuffixConflictStrategy",
    "assetFullPath",
    "awayjs-core/lib/library/IAssetClass",
    "awayjs-core/lib/library/IAsset",
    "awayjs-core/lib/library/IDUtil",
    "IDUtil",
    "createUID",
    "uid",
    "ALPHA_CHAR_CODES",
    "random",
    "time",
    "Date",
    "getTime",
    "timeString",
    "toUpperCase",
    "charCodeAt",
    "String",
    "fromCharCode",
    "apply",
    "awayjs-core/lib/library/IWrapperClass",
    "separator",
    "_separator",
    "_next_suffix",
    "orig",
    "new_name",
    "suffix",
    "parseInt",
    "isNaN",
    "awayjs-core/lib/net/CrossDomainPolicy",
    "CrossDomainPolicy",
    "ANONYMOUS",
    "USE_CREDENTIALS",
    "TEXT",
    "VARIABLES",
    "BLOB",
    "ARRAY_BUFFER",
    "URLRequestMethod",
    "URLVariables",
    "AwayEvent",
    "AwayProgressEvent",
    "_bytesLoaded",
    "_bytesTotal",
    "_dataFormat",
    "_loadError",
    "_request",
    "_data",
    "format",
    "initXHR",
    "method",
    "POST",
    "postRequest",
    "getRequest",
    "close",
    "_XHR",
    "abort",
    "disposeXHR",
    "setResponseType",
    "xhr",
    "responseType",
    "open",
    "async",
    "send",
    "handleXmlHttpRequestException",
    "urlVars",
    "formData",
    "error",
    "XMLHttpRequest",
    "onloadstart",
    "onLoadStart",
    "onprogress",
    "onProgress",
    "onabort",
    "onAbort",
    "onerror",
    "onload",
    "ontimeout",
    "onTimeOut",
    "onloadend",
    "onLoadEnd",
    "onreadystatechange",
    "onReadyStateChange",
    "decodeURLVariables",
    "join",
    "tokens",
    "re",
    "exec",
    "decodeURIComponent",
    "readyState",
    "_loadErrorEvent",
    "_progressEvent",
    "bytesTotal",
    "total",
    "bytesLoaded",
    "loaded",
    "_loadStartEvent",
    "responseText",
    "response",
    "_loadCompleteEvent",
    "awayjs-core/lib/net/URLRequestMethod",
    "awayjs-core/lib/net/URLVariables",
    "GET",
    "awayjs-core/lib/net/URLRequest",
    "URLRequest",
    "_variables",
    "decode",
    "obj",
    "fd",
    "FormData",
    "ParserBase",
    "ParserUtils",
    "ByteArray",
    "extension",
    "HTMLImageElement",
    "ba",
    "readUnsignedShort",
    "readShort",
    "readUTFBytes",
    "readByte",
    "_pProceedParsing",
    "sizeError",
    "_loadingImage",
    "MORE_TO_PARSE",
    "_htmlImageElement",
    "isHTMLImageElementValid",
    "imageToBitmapImage2D",
    "_pFinalizeAsset",
    "htmlImageElement",
    "byteArrayToImage",
    "ArrayBuffer",
    "arrayBufferToImage",
    "Blob",
    "blobToImage",
    "_pContent",
    "PARSING_DONE",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-core/lib/utils/ByteArray",
    "JSON",
    "parse",
    "_iResolveDependency",
    "resourceDependency",
    "_iResolveDependencyFailure",
    "_imgDependencyDictionary",
    "_getBitmapImage2D",
    "json",
    "rec",
    "_pDieWithError",
    "_pAddDependency",
    "image",
    "_validateCubeData",
    "_pPauseAndRetrieveDependencies",
    "Timer",
    "getTimer",
    "_dependencies",
    "_pOnIntervalDelegate",
    "_pOnInterval",
    "isBitmapImage2DValid",
    "bitmapImage2D",
    "isValid",
    "isImage2DValid",
    "console",
    "_parsingFailure",
    "_parsingPaused",
    "_parsingComplete",
    "newMaterialMode",
    "frameLimit",
    "_pStartParsing",
    "_iResolveDependencyName",
    "_timer",
    "start",
    "type_event",
    "type_name",
    "suppressErrorEvents",
    "sub_id",
    "_pHasTime",
    "_lastFrameTime",
    "_frameLimit",
    "_pFinishParsing",
    "_pGetTextData",
    "_pGetByteData",
    "toByteArray",
    "awayjs-core/lib/utils/Timer",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-core/lib/parsers/ParserDataFormat",
    "ParserDataFormat",
    "PLAIN_TEXT",
    "IMAGE",
    "byteStr",
    "bytes",
    "Uint8Array",
    "byteLength",
    "base64Image",
    "window",
    "btoa",
    "str",
    "img",
    "Image",
    "arraybytes",
    "URLObj",
    "createObjectURL",
    "bitmapData",
    "setArrayBuffer",
    "min",
    "getBytesAvailable",
    "parentParser",
    "suppressAssetEvents",
    "_sub_id",
    "_parser",
    "_parentParser",
    "_retrieveAsRawData",
    "_suppressAssetEvents",
    "XmlUtils",
    "_parseState",
    "TextureAtlasParserState",
    "PARSE_SUBTEXTURES",
    "nodes",
    "PARSE_XML",
    "_doc",
    "getChildrenWithTag",
    "strToXml",
    "_imagePath",
    "readAttributeValue",
    "_subTextureNodes",
    "PARSE_IMAGE",
    "bitmap",
    "element",
    "imageRect",
    "frameRect",
    "awayjs-core/lib/utils/XmlUtils",
    "awayjs-core/lib/pool/IImageObject",
    "awayjs-core/lib/projections/CoordinateSystem",
    "CoordinateSystem",
    "LEFT_HANDED",
    "RIGHT_HANDED",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ProjectionBase",
    "FreeMatrixProjection",
    "_pMatrix",
    "_pNear",
    "_pFar",
    "_pAspectRatio",
    "pInvalidateMatrix",
    "pUpdateMatrix",
    "_pMatrixInvalid",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-core/lib/projections/ProjectionBase",
    "awayjs-core/lib/projections/IProjection",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection",
    "ObliqueNearPlaneProjection",
    "baseProjection",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_baseProjection",
    "frustumCorners",
    "near",
    "far",
    "_iAspectRatio",
    "_plane",
    "cw",
    "signX",
    "signY",
    "inverse",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "OrthographicOffCenterProjection",
    "minX",
    "maxX",
    "minY",
    "maxY",
    "_minX",
    "_maxX",
    "_minY",
    "_maxY",
    "unproject",
    "nX",
    "nY",
    "sZ",
    "unprojectionMatrix",
    "_pFrustumCorners",
    "awayjs-core/lib/projections/OrthographicProjection",
    "OrthographicProjection",
    "projectionHeight",
    "_projectionHeight",
    "_yMax",
    "_xMax",
    "left",
    "right",
    "top",
    "bottom",
    "_pScissorRect",
    "_pViewPort",
    "xWidth",
    "yHgt",
    "center",
    "middle",
    "fieldOfView",
    "coordinateSystem",
    "_fieldOfView",
    "_focalLength",
    "_hFieldOfView",
    "_hFocalLength",
    "_preserveAspectRatio",
    "_preserveFocalLength",
    "tan",
    "_pCoordinateSystem",
    "atan",
    "tanMinX",
    "_pOriginX",
    "tanMaxX",
    "tanMinY",
    "_pOriginY",
    "tanMaxY",
    "_unprojectionInvalid",
    "point3d",
    "_unprojection",
    "_iUpdateScissorRect",
    "_iUpdateViewport",
    "awayjs-core/lib/ui/Keyboard",
    "Keyboard",
    "A",
    "ALTERNATE",
    "AUDIO",
    "B",
    "BACKQUOTE",
    "BACKSLASH",
    "BACKSPACE",
    "C",
    "CAPS_LOCK",
    "CHANNEL_DOWN",
    "CHANNEL_UP",
    "COMMA",
    "COMMAND",
    "CONTROL",
    "D",
    "DELETE",
    "DOWN",
    "DVR",
    "E",
    "END",
    "ENTER",
    "EQUAL",
    "ESCAPE",
    "EXIT",
    "F",
    "F1",
    "F10",
    "F11",
    "F12",
    "F13",
    "F14",
    "F15",
    "F2",
    "F3",
    "F4",
    "F5",
    "F6",
    "F7",
    "F8",
    "F9",
    "FAST_FORWARD",
    "G",
    "GUIDE",
    "H",
    "HELP",
    "HOME",
    "I",
    "INFO",
    "INPUT",
    "INSERT",
    "J",
    "K",
    "KEYNAME_BEGIN",
    "KEYNAME_BREAK",
    "KEYNAME_CLEARDISPLAY",
    "KEYNAME_CLEARLINE",
    "KEYNAME_DELETE",
    "KEYNAME_DELETECHAR",
    "KEYNAME_DELETELINE",
    "KEYNAME_DOWNARROW",
    "KEYNAME_END",
    "KEYNAME_EXECUTE",
    "KEYNAME_F1",
    "KEYNAME_F10",
    "KEYNAME_F11",
    "KEYNAME_F12",
    "KEYNAME_F13",
    "KEYNAME_F14",
    "KEYNAME_F15",
    "KEYNAME_F16",
    "KEYNAME_F17",
    "KEYNAME_F18",
    "KEYNAME_F19",
    "KEYNAME_F2",
    "KEYNAME_F20",
    "KEYNAME_F21",
    "KEYNAME_F22",
    "KEYNAME_F23",
    "KEYNAME_F24",
    "KEYNAME_F25",
    "KEYNAME_F26",
    "KEYNAME_F27",
    "KEYNAME_F28",
    "KEYNAME_F29",
    "KEYNAME_F3",
    "KEYNAME_F30",
    "KEYNAME_F31",
    "KEYNAME_F32",
    "KEYNAME_F33",
    "KEYNAME_F34",
    "KEYNAME_F35",
    "KEYNAME_F4",
    "KEYNAME_F5",
    "KEYNAME_F6",
    "KEYNAME_F7",
    "KEYNAME_F8",
    "KEYNAME_F9",
    "KEYNAME_FIND",
    "KEYNAME_HELP",
    "KEYNAME_HOME",
    "KEYNAME_INSERT",
    "KEYNAME_INSERTCHAR",
    "KEYNAME_INSERTLINE",
    "KEYNAME_LEFTARROW",
    "KEYNAME_MENU",
    "KEYNAME_MODESWITCH",
    "KEYNAME_NEXT",
    "KEYNAME_PAGEDOWN",
    "KEYNAME_PAGEUP",
    "KEYNAME_PAUSE",
    "KEYNAME_PREV",
    "KEYNAME_PRINT",
    "KEYNAME_PRINTSCREEN",
    "KEYNAME_REDO",
    "KEYNAME_RESET",
    "KEYNAME_RIGHTARROW",
    "KEYNAME_SCROLLLOCK",
    "KEYNAME_SELECT",
    "KEYNAME_STOP",
    "KEYNAME_SYSREQ",
    "KEYNAME_SYSTEM",
    "KEYNAME_UNDO",
    "KEYNAME_UPARROW",
    "KEYNAME_USER",
    "L",
    "LAST",
    "LEFT",
    "LEFTBRACKET",
    "LIVE",
    "M",
    "MASTER_SHELL",
    "MENU",
    "MINUS",
    "N",
    "NEXT",
    "NUMBER_0",
    "NUMBER_1",
    "NUMBER_2",
    "NUMBER_3",
    "NUMBER_4",
    "NUMBER_5",
    "NUMBER_6",
    "NUMBER_7",
    "NUMBER_8",
    "NUMBER_9",
    "NUMPAD",
    "NUMPAD_0",
    "NUMPAD_1",
    "NUMPAD_2",
    "NUMPAD_3",
    "NUMPAD_4",
    "NUMPAD_5",
    "NUMPAD_6",
    "NUMPAD_7",
    "NUMPAD_8",
    "NUMPAD_9",
    "NUMPAD_ADD",
    "NUMPAD_DECIMAL",
    "NUMPAD_DIVIDE",
    "NUMPAD_ENTER",
    "NUMPAD_MULTIPLY",
    "NUMPAD_SUBTRACT",
    "O",
    "P",
    "PAGE_DOWN",
    "PAGE_UP",
    "PAUSE",
    "PERIOD",
    "PLAY",
    "PREVIOUS",
    "Q",
    "QUOTE",
    "R",
    "RECORD",
    "REWIND",
    "RIGHT",
    "RIGHTBRACKET",
    "S",
    "SEARCH",
    "SEMICOLON",
    "SETUP",
    "SHIFT",
    "SKIP_BACKWARD",
    "SKIP_FORWARD",
    "SLASH",
    "SPACE",
    "STOP",
    "SUBTITLE",
    "T",
    "TAB",
    "U",
    "UP",
    "V",
    "VOD",
    "W",
    "X",
    "Y",
    "YELLOW",
    "Z",
    "clearRect",
    "fillStyle",
    "bmpd",
    "drawImage",
    "save",
    "setTransform",
    "restore",
    "awayjs-core/lib/utils/ByteArrayBase",
    "ByteArrayBase",
    "_mode",
    "writeByte",
    "writeUnsignedByte",
    "readUnsignedByte",
    "writeUnsignedShort",
    "writeUnsignedInt",
    "writeFloat",
    "toFloatBits",
    "readFloat",
    "fromFloatBits",
    "compareEqual",
    "other",
    "count",
    "co0",
    "c0",
    "writeBase64String",
    "dumpToConsole",
    "oldpos",
    "nstep",
    "asHexString",
    "digits",
    "lut",
    "sh",
    "readBase64String",
    "internalGetBase64String",
    "getUnsignedByteFunc",
    "self",
    "b0",
    "b1",
    "b2",
    "enc1",
    "enc2",
    "enc3",
    "enc4",
    "base64Key",
    "Base64Key",
    "awayjs-core/lib/utils/ByteArrayBuffer",
    "ByteArrayBuffer",
    "_bytes",
    "bi",
    "Number",
    "sign",
    "exponent",
    "mantissa",
    "maxlength",
    "unalignedarraybytestemp",
    "ensureWriteableSpace",
    "ensureSpace",
    "aBuffer",
    "inInt8AView",
    "Int8Array",
    "localInt8View",
    "newmaxlength",
    "newarraybuffer",
    "view",
    "newview",
    "readBytes",
    "byteView",
    "localByteView",
    "subarray",
    "Uint16Array",
    "view2",
    "view3",
    "max",
    "DataView",
    "getUint8",
    "c2",
    "c3",
    "readInt",
    "int",
    "getInt32",
    "short",
    "getInt16",
    "readDouble",
    "double",
    "getFloat64",
    "pa",
    "Uint32Array",
    "Float32Array",
    "awayjs-core/lib/utils/CSS",
    "CSS",
    "setElementSize",
    "style",
    "setElementWidth",
    "setElementHeight",
    "setElementX",
    "setElementY",
    "getElementVisibility",
    "visibility",
    "setElementVisibility",
    "visible",
    "setElementAlpha",
    "alpha",
    "HTMLCanvasElement",
    "globalAlpha",
    "setElementPosition",
    "absolute",
    "float32Color",
    "componentToHex",
    "hex",
    "RGBToHexString",
    "ARGBToHexString",
    "awayjs-core/lib/utils/Debug",
    "Debug",
    "breakpoint",
    "throwPIROnKeyWordOnly",
    "enable",
    "keyword",
    "throwPIR",
    "clss",
    "fnc",
    "msg",
    "logPIR",
    "THROW_ERRORS",
    "LOG_PI_ERRORS",
    "args",
    "_i",
    "arguments",
    "ENABLE_LOG",
    "MAX_SIZE",
    "isPowerOfTwo",
    "getBestPowerOf2",
    "awayjs-core/lib/utils/MipmapGenerator",
    "MipmapGenerator",
    "_generateMipMaps",
    "output",
    "_getMipmapHolder",
    "_matrix",
    "mipMapHolder",
    "newW",
    "newH",
    "_freeMipMapHolder",
    "_mipMaps",
    "_mipMapUses",
    "holderWidth",
    "holderHeight",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "RequestAnimationFrame",
    "callback",
    "callbackContext",
    "_active",
    "_argsArray",
    "_getTimer",
    "setCallback",
    "_rafUpdateFunction",
    "_tick",
    "_dt",
    "_callback",
    "_callbackContext",
    "_prevTime",
    "requestAnimationFrame",
    "_currentTime",
    "delay",
    "repeatCount",
    "_repeatCount",
    "_currentCount",
    "_running",
    "_delay",
    "clearInterval",
    "_iid",
    "setInterval",
    "tick",
    "node",
    "tag",
    "fragment",
    "createDocumentFragment",
    "num",
    "childNodes",
    "child",
    "nodeName",
    "appendChild",
    "filterListByParam",
    "paramName",
    "paramValue",
    "attributes",
    "getNamedItem",
    "DOMParser",
    "parseFromString",
    "nodeToString",
    "XMLSerializer",
    "serializeToString",
    "attrName",
    "attrs",
    "attribute",
    "writeAttributeValue",
    "attrValue",
    "Attr",
    "setNamedItem",
    "hasAttribute",
    "now"
  ],
  "mappings": "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",
  "file": "awayjs-core.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\n/**\r\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\r\n * object. You can use the methods of the BitmapImage2D class to create\r\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\r\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\r\n * image that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes.\r\n *\r\n * <p>This class lets you separate bitmap rendering operations from the\r\n * internal display updating routines of flash. By manipulating a\r\n * BitmapImage2D object directly, you can create complex images without incurring\r\n * the per-frame overhead of constantly redrawing the content from vector\r\n * data.</p>\r\n *\r\n * <p>The methods of the BitmapImage2D class support effects that are not\r\n * available through the filters available to non-bitmap display objects.</p>\r\n *\r\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\r\n * represent either a fully opaque bitmap or a transparent bitmap that\r\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\r\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\r\n * of a single pixel in the bitmap.</p>\r\n *\r\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\r\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\r\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\r\n * represents the alpha channel value, followed by red, green, and blue.)</p>\r\n *\r\n * <p>The four channels(alpha, red, green, and blue) are represented as\r\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\r\n * method or the <code>DisplacementMapFilter.componentX</code> and\r\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\r\n * are represented by the following constants in the BitmapImage2DChannel\r\n * class:</p>\r\n *\r\n * <ul>\r\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n * </ul>\r\n *\r\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\r\n * <code>bitmapData</code> property of the Bitmap object.</p>\r\n *\r\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\r\n * <code>Graphics.beginBitmapFill()</code> method.</p>\r\n *\r\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\r\n * using the <code>flash.display.Tilesheet</code> class.</p>\r\n *\r\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\r\n * is 8,191 pixels in width or height, and the total number of pixels cannot\r\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\r\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\r\n * is 2,880 pixels in height and 2,880 in width.</p>\r\n */\r\nclass BitmapImage2D extends Image2D\r\n{\r\n\tpublic static assetType:string = \"[asset BitmapImage2D]\";\r\n\r\n\tprivate _imageCanvas:HTMLCanvasElement;\r\n\tprivate _context:CanvasRenderingContext2D;\r\n\tprivate _imageData:ImageData;\r\n\tprivate _transparent:boolean;\r\n\tprivate _locked:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BitmapImage2D.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\r\n\t * set this value only when you construct a BitmapImage2D object by passing in\r\n\t * <code>true</code> for the <code>transparent</code> parameter of the\r\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\r\n\t * whether it supports per-pixel transparency by determining if the value of\r\n\t * the <code>transparent</code> property is <code>true</code>.\r\n\t */\r\n\tpublic get transparent():boolean\r\n\t{\r\n\t\treturn this._transparent;\r\n\t}\r\n\r\n\tpublic set transparent(value:boolean)\r\n\t{\r\n\t\tthis._transparent = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a BitmapImage2D object with a specified width and height. If you\r\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\r\n\t * the bitmap is set to that color.\r\n\t *\r\n\t * <p>By default, the bitmap is created as transparent, unless you pass\r\n\t * the value <code>false</code> for the transparent parameter. After you\r\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\r\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\r\n\t * information. If you define the bitmap as transparent, every pixel uses 32\r\n\t * bits of color channel information, including an alpha transparency\r\n\t * channel.</p>\r\n\t *\r\n\t * @param width       The width of the bitmap image in pixels.\r\n\t * @param height      The height of the bitmap image in pixels.\r\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\r\n\t *                    transparency. The default value is <code>true</code>\r\n\t *                    (transparent). To create a fully transparent bitmap,\r\n\t *                    set the value of the <code>transparent</code>\r\n\t *                    parameter to <code>true</code> and the value of the\r\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\r\n\t *                    0). Setting the <code>transparent</code> property to\r\n\t *                    <code>false</code> can result in minor improvements\r\n\t *                    in rendering performance.\r\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\r\n\t *                    bitmap image area. The default value is\r\n\t *                    0xFFFFFFFF(solid white).\r\n\t */\r\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null)\r\n\t{\r\n\t\tsuper(width, height);\r\n\r\n\t\tthis._transparent = transparent;\r\n\t\tthis._imageCanvas = <HTMLCanvasElement> document.createElement(\"canvas\");\r\n\t\tthis._imageCanvas.width = width;\r\n\t\tthis._imageCanvas.height = height;\r\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\r\n\t\t\r\n\t\tif (fillColor != null)\r\n\t\t\tthis.fillRect(this._rect, fillColor);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\r\n\t * with an exact copy of the contained bitmap.\r\n\t *\r\n\t * @return A new BitmapImage2D object that is identical to the original.\r\n\t */\r\n\tpublic clone():BitmapImage2D\r\n\t{\r\n\t\tvar t:BitmapImage2D = new BitmapImage2D(this.width, this.height, this.transparent);\r\n\t\tt.draw(this);\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the color values in a specified area of a bitmap image by using a\r\n\t * <code>ColorTransform</code> object. If the rectangle matches the\r\n\t * boundaries of the bitmap image, this method transforms the color values of\r\n\t * the entire image.\r\n\t *\r\n\t * @param rect           A Rectangle object that defines the area of the\r\n\t *                       image in which the ColorTransform object is applied.\r\n\t * @param colorTransform A ColorTransform object that describes the color\r\n\t *                       transformation values to apply.\r\n\t */\r\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar data:Array<number> = this._imageData.data;\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\r\n\r\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\r\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\r\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\r\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Transfers data from one channel of another BitmapImage2D object or the\r\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\r\n\t * All of the data in the other channels in the destination BitmapImage2D object\r\n\t * are preserved.\r\n\t *\r\n\t * <p>The source channel value and destination channel value can be one of\r\n\t * following values: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n\t * </ul>\r\n\t *\r\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\r\n\t *                         can be a different BitmapImage2D object or it can\r\n\t *                         refer to the current BitmapImage2D object.\r\n\t * @param sourceRect       The source Rectangle object. To copy only channel\r\n\t *                         data from a smaller area within the bitmap,\r\n\t *                         specify a source rectangle that is smaller than\r\n\t *                         the overall size of the BitmapImage2D object.\r\n\t * @param destPoint        The destination Point object that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new channel data is placed. To copy only\r\n\t *                         channel data from one area to a different area in\r\n\t *                         the destination image, specify a point other than\r\n\t *                        (0,0).\r\n\t * @param sourceChannel    The source channel. Use a value from the\r\n\t *                         BitmapImage2DChannel class\r\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\r\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n\t * @param destChannel      The destination channel. Use a value from the\r\n\t *                         BitmapImage2DChannel class\r\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\r\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\r\n\t */\r\n\tpublic copyChannel(sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\r\n\t{\r\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\r\n\t\tvar destData:Array<number> = this._imageData.data;\r\n\r\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\r\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\r\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\r\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\r\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\r\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\r\n\r\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a fast routine to perform pixel manipulation between images with\r\n\t * no stretching, rotation, or color effects. This method copies a\r\n\t * rectangular area of a source image to a rectangular area of the same size\r\n\t * at the destination point of the destination BitmapImage2D object.\r\n\t *\r\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\r\n\t * parameters, you can use a secondary image as an alpha source for the\r\n\t * source image. If the source image has alpha data, both sets of alpha data\r\n\t * are used to composite pixels from the source image to the destination\r\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\r\n\t * image that corresponds to the upper-left corner of the source rectangle.\r\n\t * Any pixels outside the intersection of the source image and alpha image\r\n\t * are not copied to the destination image.</p>\r\n\t *\r\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\r\n\t * channel is used when a transparent image is copied onto another\r\n\t * transparent image. To copy pixels with the alpha channel data, set the\r\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\r\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\r\n\t *\r\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\r\n\t *                         The source image can be a different BitmapImage2D\r\n\t *                         instance, or it can refer to the current\r\n\t *                         BitmapImage2D instance.\r\n\t * @param sourceRect       A rectangle that defines the area of the source\r\n\t *                         image to use as input.\r\n\t * @param destPoint        The destination point that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new pixels are placed.\r\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\r\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\r\n\t *                         that corresponds to the upper-left corner of the\r\n\t *                         <code>sourceRect</code> parameter.\r\n\t * @param mergeAlpha       To use the alpha channel, set the value to\r\n\t *                         <code>true</code>. To copy pixels with no alpha\r\n\t *                         channel, set the value to <code>false</code>.\r\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\r\n\t */\r\n\tpublic copyPixels(source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(source:HTMLElement, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(source:any, sourceRect:Rectangle, destRect:Rectangle)\r\n\t{\r\n\t\tif (source instanceof BitmapImage2D)\r\n\t\t\tsource = source.getCanvas();\r\n\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) draw object\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Frees memory that is used to store the BitmapImage2D object.\r\n\t *\r\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\r\n\t * and height of the image are set to 0. All subsequent calls to methods or\r\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\r\n\t * </p>\r\n\t *\r\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\r\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\r\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\r\n\t * object is no longer usable and an exception may be thrown if\r\n\t * you call functions on the BitmapImage2D object. However,\r\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\r\n\t * object(approximately 128 bytes); the memory occupied by the actual\r\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\r\n\t * collected by the garbage collector.</p>\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._context = null;\r\n\t\tthis._imageCanvas = null;\r\n\t\tthis._imageData = null;\r\n\t\tthis._rect = null;\r\n\t\tthis._transparent = null;\r\n\t\tthis._locked = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the <code>source</code> display object onto the bitmap image, using\r\n\t * the NME software renderer. You can specify <code>matrix</code>,\r\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\r\n\t * <code>clipRect</code> parameter to control how the rendering performs.\r\n\t * Optionally, you can specify whether the bitmap should be smoothed when\r\n\t * scaled(this works only if the source object is a BitmapImage2D object).\r\n\t *\r\n\t * <p>The source display object does not use any of its applied\r\n\t * transformations for this call. It is treated as it exists in the library\r\n\t * or file, with no matrix transform, no color transform, and no blend mode.\r\n\t * To draw a display object(such as a movie clip) by using its own transform\r\n\t * properties, you can copy its <code>transform</code> property object to the\r\n\t * <code>transform</code> property of the Bitmap object that uses the\r\n\t * BitmapImage2D object.</p>\r\n\t *\r\n\t * @param source         The display object or BitmapImage2D object to draw to\r\n\t *                       the BitmapImage2D object.(The DisplayObject and\r\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\r\n\t *                       interface.)\r\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\r\n\t *                       the coordinates of the bitmap. If you do not want to\r\n\t *                       apply a matrix transformation to the image, set this\r\n\t *                       parameter to an identity matrix, created with the\r\n\t *                       default <code>new Matrix()</code> constructor, or\r\n\t *                       pass a <code>null</code> value.\r\n\t * @param colorTransform A ColorTransform object that you use to adjust the\r\n\t *                       color values of the bitmap. If no object is\r\n\t *                       supplied, the bitmap image's colors are not\r\n\t *                       transformed. If you must pass this parameter but you\r\n\t *                       do not want to transform the image, set this\r\n\t *                       parameter to a ColorTransform object created with\r\n\t *                       the default <code>new ColorTransform()</code>\r\n\t *                       constructor.\r\n\t * @param blendMode      A string value, from the flash.display.BlendMode\r\n\t *                       class, specifying the blend mode to be applied to\r\n\t *                       the resulting bitmap.\r\n\t * @param clipRect       A Rectangle object that defines the area of the\r\n\t *                       source object to draw. If you do not supply this\r\n\t *                       value, no clipping occurs and the entire source\r\n\t *                       object is drawn.\r\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\r\n\t *                       object is smoothed when scaled or rotated, due to a\r\n\t *                       scaling or rotation in the <code>matrix</code>\r\n\t *                       parameter. The <code>smoothing</code> parameter only\r\n\t *                       applies if the <code>source</code> parameter is a\r\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\r\n\t *                       to <code>false</code>, the rotated or scaled\r\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\r\n\t *                       example, the following two images use the same\r\n\t *                       BitmapImage2D object for the <code>source</code>\r\n\t *                       parameter, but the <code>smoothing</code> parameter\r\n\t *                       is set to <code>true</code> on the left and\r\n\t *                       <code>false</code> on the right:\r\n\t *\r\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\r\n\t *                       to <code>true</code> takes longer than doing so with\r\n\t *                       <code>smoothing</code> set to\r\n\t *                       <code>false</code>.</p>\r\n\t * @throws ArgumentError The <code>source</code> parameter is not a\r\n\t *                       BitmapImage2D or DisplayObject object.\r\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\r\n\t *                       object.\r\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\r\n\t *                       Sprite or MovieClip object) all of its child objects\r\n\t *                       do not come from the same domain as the caller, or\r\n\t *                       are not in a content that is accessible to the\r\n\t *                       caller by having called the\r\n\t *                       <code>Security.allowDomain()</code> method. This\r\n\t *                       restriction does not apply to AIR content in the\r\n\t *                       application security sandbox.\r\n\t */\r\n\tpublic draw(source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\r\n\t{\r\n\t\tif (source instanceof BitmapImage2D)\r\n\t\t\tsource = source.getCanvas();\r\n\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) draw object\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Fills a rectangular area of pixels with a specified ARGB color.\r\n\t *\r\n\t * @param rect  The rectangular area to fill.\r\n\t * @param color The ARGB color value that fills the area. ARGB colors are\r\n\t *              often specified in hexadecimal format; for example,\r\n\t *              0xFF336699.\r\n\t * @throws TypeError The rect is null.\r\n\t */\r\n\tpublic fillRect(rect:Rectangle, color:number)\r\n\t{\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) apply fill\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tif (this._imageData)\r\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\r\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\r\n\r\n\t\t\tif (this._imageData)\r\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\r\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\r\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\r\n\t * alpha information is returned.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\r\n\t *         method returns 0.\r\n\t */\r\n\tpublic getPixel(x, y):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\t\tr = this._imageData.data[index + 0];\r\n\t\t\tg = this._imageData.data[index + 1];\r\n\t\t\tb = this._imageData.data[index + 2];\r\n\t\t\ta = this._imageData.data[index + 3];\r\n\t\t}\r\n\r\n\t\t//returns black if fully transparent\r\n\t\tif (!a)\r\n\t\t\treturn 0x0;\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\r\n\t * This method is similar to the <code>getPixel()</code> method, which\r\n\t * returns an RGB color without alpha channel data.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\r\n\t *         returned.\r\n\t */\r\n\tpublic getPixel32(x, y):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\t\tr = this._imageData.data[index + 0];\r\n\t\t\tg = this._imageData.data[index + 1];\r\n\t\t\tb = this._imageData.data[index + 2];\r\n\t\t\ta = this._imageData.data[index + 3];\r\n\t\t}\r\n\r\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\r\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\r\n\t * changes. To improve performance, use this method along with the\r\n\t * <code>unlock()</code> method before and after numerous calls to the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\r\n\t *\r\n\t */\r\n\tpublic lock()\r\n\t{\r\n\t\tif (this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = true;\r\n\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\r\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\r\n\t * in the Array is expected to be 32-bit ARGB pixel values.\r\n\t *\r\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\r\n\t *                    object.\r\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\r\n\t *                    values to be used in the rectangular region.\r\n\t * @throws RangeError The vector array is not large enough to read all the\r\n\t *                    pixel data.\r\n\t */\r\n\tpublic setArray(rect:Rectangle, inputArray:Array<number>)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\r\n\r\n\t\t\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\t\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\t\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\t\t\tthis._imageData.data[index + 3] = argb[0];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\r\n\t * value of the image pixel is preserved during this operation. The value of\r\n\t * the RGB color parameter is treated as an unmultiplied color value.\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapImage2D instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting RGB color for the pixel.\r\n\t */\r\n\tpublic setPixel(x:number, y:number, color:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\tthis._imageData.data[index + 3] = 255;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the color and alpha transparency values of a single pixel of a\r\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\r\n\t * method; the main difference is that the <code>setPixel32()</code> method\r\n\t * takes an ARGB color value that contains alpha channel information.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapImage2D instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\r\n\t *              opaque(not transparent), the alpha transparency portion of\r\n\t *              this color value is ignored.\r\n\t */\r\n\tpublic setPixel32(x, y, color:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\tthis._imageData.data[index + 3] = argb[0];\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a byte array into a rectangular region of pixel data. For each\r\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\r\n\t * the return value is written into the pixel. If the byte array ends before\r\n\t * the full rectangle is written, the function returns. The data in the byte\r\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\r\n\t * on the byte array before or after the pixels are read.\r\n\t *\r\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\r\n\t *                       object.\r\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\r\n\t *                       unmultiplied pixel values to be used in the\r\n\t *                       rectangular region.\r\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\r\n\t *                   enough data to fill the area of the <code>rect</code>\r\n\t *                   rectangle. The method fills as many pixels as possible\r\n\t *                   before throwing the exception.\r\n\t * @throws TypeError The rect or inputByteArray are null.\r\n\t */\r\n\tpublic setPixels(rect:Rectangle, inputByteArray:ByteArray)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tinputByteArray.position = 0;\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\r\n\r\n\t\t\t\tthis._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\r\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\r\n\t * To improve performance, use this method along with the <code>lock()</code>\r\n\t * method before and after numerous calls to the <code>setPixel()</code> or\r\n\t * <code>setPixel32()</code> method.\r\n\t *\r\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\r\n\t *                   you do not specify a value for this parameter, the\r\n\t *                   entire area of the BitmapImage2D object is considered\r\n\t *                   changed.\r\n\t */\r\n\tpublic unlock()\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = false;\r\n\r\n\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\t\tthis._imageData = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {ImageData}\r\n\t */\r\n\tpublic getImageData():ImageData\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\treturn this._imageData;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {HTMLCanvasElement}\r\n\t */\r\n\tpublic getCanvas():HTMLCanvasElement\r\n\t{\r\n\t\treturn this._imageCanvas;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tif (this._locked)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\r\n\t\tthis._imageCanvas.width = width;\r\n\t\tthis._imageCanvas.height = height;\r\n\t\t\r\n\t\tsuper._setSize(width, height);\r\n\r\n\t\tif (this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t}\r\n}\r\n\r\nexport = BitmapImage2D;",
    "class BitmapImageChannel\r\n{\r\n\tpublic static ALPHA:number /*uint*/ = 8;\r\n\tpublic static BLUE:number /*uint*/ = 4;\r\n\tpublic static GREEN:number /*uint*/ = 2;\r\n\tpublic static RED:number /*uint*/ = 1;\r\n}\r\n\r\nexport = BitmapImageChannel;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\r\n\r\n/**\r\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\r\n * object. You can use the methods of the BitmapImage2D class to create\r\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\r\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\r\n * image that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes.\r\n *\r\n * <p>This class lets you separate bitmap rendering operations from the\r\n * internal display updating routines of flash. By manipulating a\r\n * BitmapImage2D object directly, you can create complex images without incurring\r\n * the per-frame overhead of constantly redrawing the content from vector\r\n * data.</p>\r\n *\r\n * <p>The methods of the BitmapImage2D class support effects that are not\r\n * available through the filters available to non-bitmap display objects.</p>\r\n *\r\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\r\n * represent either a fully opaque bitmap or a transparent bitmap that\r\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\r\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\r\n * of a single pixel in the bitmap.</p>\r\n *\r\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\r\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\r\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\r\n * represents the alpha channel value, followed by red, green, and blue.)</p>\r\n *\r\n * <p>The four channels(alpha, red, green, and blue) are represented as\r\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\r\n * method or the <code>DisplacementMapFilter.componentX</code> and\r\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\r\n * are represented by the following constants in the BitmapImage2DChannel\r\n * class:</p>\r\n *\r\n * <ul>\r\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n * </ul>\r\n *\r\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\r\n * <code>bitmapData</code> property of the Bitmap object.</p>\r\n *\r\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\r\n * <code>Graphics.beginBitmapFill()</code> method.</p>\r\n *\r\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\r\n * using the <code>flash.display.Tilesheet</code> class.</p>\r\n *\r\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\r\n * is 8,191 pixels in width or height, and the total number of pixels cannot\r\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\r\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\r\n * is 2,880 pixels in height and 2,880 in width.</p>\r\n */\r\nclass BitmapImageCube extends ImageCube\r\n{\r\n\tpublic static assetType:string = \"[asset BitmapImageCube]\";\r\n\r\n\tpublic static posX:number = 0;\r\n\tpublic static negX:number = 1;\r\n\tpublic static posY:number = 2;\r\n\tpublic static negY:number = 3;\r\n\tpublic static posZ:number = 4;\r\n\tpublic static negZ:number = 5;\r\n\r\n\tprivate _imageCanvas:Array<HTMLCanvasElement> = new Array<HTMLCanvasElement>(6);\r\n\tprivate _context:Array<CanvasRenderingContext2D> = new Array<CanvasRenderingContext2D>(6);\r\n\tprivate _imageData:Array<ImageData> = new Array<ImageData>(6);\r\n\tprivate _transparent:boolean;\r\n\tprivate _locked:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BitmapImageCube.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\r\n\t * set this value only when you construct a BitmapImage2D object by passing in\r\n\t * <code>true</code> for the <code>transparent</code> parameter of the\r\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\r\n\t * whether it supports per-pixel transparency by determining if the value of\r\n\t * the <code>transparent</code> property is <code>true</code>.\r\n\t */\r\n\tpublic get transparent():boolean\r\n\t{\r\n\t\treturn this._transparent;\r\n\t}\r\n\r\n\tpublic set transparent(value:boolean)\r\n\t{\r\n\t\tthis._transparent = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a BitmapImage2D object with a specified width and height. If you\r\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\r\n\t * the bitmap is set to that color.\r\n\t *\r\n\t * <p>By default, the bitmap is created as transparent, unless you pass\r\n\t * the value <code>false</code> for the transparent parameter. After you\r\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\r\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\r\n\t * information. If you define the bitmap as transparent, every pixel uses 32\r\n\t * bits of color channel information, including an alpha transparency\r\n\t * channel.</p>\r\n\t *\r\n\t * @param width       The width of the bitmap image in pixels.\r\n\t * @param height      The height of the bitmap image in pixels.\r\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\r\n\t *                    transparency. The default value is <code>true</code>\r\n\t *                    (transparent). To create a fully transparent bitmap,\r\n\t *                    set the value of the <code>transparent</code>\r\n\t *                    parameter to <code>true</code> and the value of the\r\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\r\n\t *                    0). Setting the <code>transparent</code> property to\r\n\t *                    <code>false</code> can result in minor improvements\r\n\t *                    in rendering performance.\r\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\r\n\t *                    bitmap image area. The default value is\r\n\t *                    0xFFFFFFFF(solid white).\r\n\t */\r\n\tconstructor(size:number, transparent:boolean = true, fillColor:number = null)\r\n\t{\r\n\t\tsuper(size);\r\n\r\n\t\tthis._transparent = transparent;\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tthis._imageCanvas[i] = <HTMLCanvasElement> document.createElement(\"canvas\");\r\n\t\t\tthis._imageCanvas[i].width = size;\r\n\t\t\tthis._imageCanvas[i].height = size;\r\n\t\t\tthis._context[i] = this._imageCanvas[i].getContext(\"2d\");\r\n\r\n\t\t\tif (fillColor != null)\r\n\t\t\t\tthis.fillRect(i, new Rectangle(0, 0, size, size), fillColor);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\r\n\t * with an exact copy of the contained bitmap.\r\n\t *\r\n\t * @return A new BitmapImage2D object that is identical to the original.\r\n\t */\r\n\tpublic clone():BitmapImageCube\r\n\t{\r\n\t\tvar t:BitmapImageCube = new BitmapImageCube(this._size, this.transparent);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tt.draw(i, this.getCanvas(i));\r\n\t\t}\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the color values in a specified area of a bitmap image by using a\r\n\t * <code>ColorTransform</code> object. If the rectangle matches the\r\n\t * boundaries of the bitmap image, this method transforms the color values of\r\n\t * the entire image.\r\n\t *\r\n\t * @param rect           A Rectangle object that defines the area of the\r\n\t *                       image in which the ColorTransform object is applied.\r\n\t * @param colorTransform A ColorTransform object that describes the color\r\n\t *                       transformation values to apply.\r\n\t */\r\n\tpublic colorTransform(side:number, rect:Rectangle, colorTransform:ColorTransform)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar data:Array<number> = this._imageData[side].data;\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\r\n\r\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\r\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\r\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\r\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Transfers data from one channel of another BitmapImage2D object or the\r\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\r\n\t * All of the data in the other channels in the destination BitmapImage2D object\r\n\t * are preserved.\r\n\t *\r\n\t * <p>The source channel value and destination channel value can be one of\r\n\t * following values: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n\t * </ul>\r\n\t *\r\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\r\n\t *                         can be a different BitmapImage2D object or it can\r\n\t *                         refer to the current BitmapImage2D object.\r\n\t * @param sourceRect       The source Rectangle object. To copy only channel\r\n\t *                         data from a smaller area within the bitmap,\r\n\t *                         specify a source rectangle that is smaller than\r\n\t *                         the overall size of the BitmapImage2D object.\r\n\t * @param destPoint        The destination Point object that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new channel data is placed. To copy only\r\n\t *                         channel data from one area to a different area in\r\n\t *                         the destination image, specify a point other than\r\n\t *                        (0,0).\r\n\t * @param sourceChannel    The source channel. Use a value from the\r\n\t *                         BitmapImage2DChannel class\r\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\r\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n\t * @param destChannel      The destination channel. Use a value from the\r\n\t *                         BitmapImage2DChannel class\r\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\r\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\r\n\t */\r\n\tpublic copyChannel(side:number, sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\r\n\t{\r\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\r\n\t\tvar destData:Array<number> = this._imageData[side].data;\r\n\r\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\r\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\r\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\r\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\r\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\r\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this._size)*4;\r\n\r\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a fast routine to perform pixel manipulation between images with\r\n\t * no stretching, rotation, or color effects. This method copies a\r\n\t * rectangular area of a source image to a rectangular area of the same size\r\n\t * at the destination point of the destination BitmapImage2D object.\r\n\t *\r\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\r\n\t * parameters, you can use a secondary image as an alpha source for the\r\n\t * source image. If the source image has alpha data, both sets of alpha data\r\n\t * are used to composite pixels from the source image to the destination\r\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\r\n\t * image that corresponds to the upper-left corner of the source rectangle.\r\n\t * Any pixels outside the intersection of the source image and alpha image\r\n\t * are not copied to the destination image.</p>\r\n\t *\r\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\r\n\t * channel is used when a transparent image is copied onto another\r\n\t * transparent image. To copy pixels with the alpha channel data, set the\r\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\r\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\r\n\t *\r\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\r\n\t *                         The source image can be a different BitmapImage2D\r\n\t *                         instance, or it can refer to the current\r\n\t *                         BitmapImage2D instance.\r\n\t * @param sourceRect       A rectangle that defines the area of the source\r\n\t *                         image to use as input.\r\n\t * @param destPoint        The destination point that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new pixels are placed.\r\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\r\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\r\n\t *                         that corresponds to the upper-left corner of the\r\n\t *                         <code>sourceRect</code> parameter.\r\n\t * @param mergeAlpha       To use the alpha channel, set the value to\r\n\t *                         <code>true</code>. To copy pixels with no alpha\r\n\t *                         channel, set the value to <code>false</code>.\r\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\r\n\t */\r\n\tpublic copyPixels(side:number, source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(side:number, source:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(side:number, source:any, sourceRect:Rectangle, destRect:Rectangle)\r\n\t{\r\n\t\tif (source instanceof BitmapImage2D)\r\n\t\t\tsource = source.getCanvas();\r\n\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) draw object\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\r\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Frees memory that is used to store the BitmapImage2D object.\r\n\t *\r\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\r\n\t * and height of the image are set to 0. All subsequent calls to methods or\r\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\r\n\t * </p>\r\n\t *\r\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\r\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\r\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\r\n\t * object is no longer usable and an exception may be thrown if\r\n\t * you call functions on the BitmapImage2D object. However,\r\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\r\n\t * object(approximately 128 bytes); the memory occupied by the actual\r\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\r\n\t * collected by the garbage collector.</p>\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tthis._context[i] = null;\r\n\t\t\tthis._imageCanvas[i] = null;\r\n\t\t\tthis._imageData[i] = null;\r\n\t\t}\r\n\r\n\t\tthis._transparent = null;\r\n\t\tthis._locked = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the <code>source</code> display object onto the bitmap image, using\r\n\t * the NME software renderer. You can specify <code>matrix</code>,\r\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\r\n\t * <code>clipRect</code> parameter to control how the rendering performs.\r\n\t * Optionally, you can specify whether the bitmap should be smoothed when\r\n\t * scaled(this works only if the source object is a BitmapImage2D object).\r\n\t *\r\n\t * <p>The source display object does not use any of its applied\r\n\t * transformations for this call. It is treated as it exists in the library\r\n\t * or file, with no matrix transform, no color transform, and no blend mode.\r\n\t * To draw a display object(such as a movie clip) by using its own transform\r\n\t * properties, you can copy its <code>transform</code> property object to the\r\n\t * <code>transform</code> property of the Bitmap object that uses the\r\n\t * BitmapImage2D object.</p>\r\n\t *\r\n\t * @param source         The display object or BitmapImage2D object to draw to\r\n\t *                       the BitmapImage2D object.(The DisplayObject and\r\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\r\n\t *                       interface.)\r\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\r\n\t *                       the coordinates of the bitmap. If you do not want to\r\n\t *                       apply a matrix transformation to the image, set this\r\n\t *                       parameter to an identity matrix, created with the\r\n\t *                       default <code>new Matrix()</code> constructor, or\r\n\t *                       pass a <code>null</code> value.\r\n\t * @param colorTransform A ColorTransform object that you use to adjust the\r\n\t *                       color values of the bitmap. If no object is\r\n\t *                       supplied, the bitmap image's colors are not\r\n\t *                       transformed. If you must pass this parameter but you\r\n\t *                       do not want to transform the image, set this\r\n\t *                       parameter to a ColorTransform object created with\r\n\t *                       the default <code>new ColorTransform()</code>\r\n\t *                       constructor.\r\n\t * @param blendMode      A string value, from the flash.display.BlendMode\r\n\t *                       class, specifying the blend mode to be applied to\r\n\t *                       the resulting bitmap.\r\n\t * @param clipRect       A Rectangle object that defines the area of the\r\n\t *                       source object to draw. If you do not supply this\r\n\t *                       value, no clipping occurs and the entire source\r\n\t *                       object is drawn.\r\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\r\n\t *                       object is smoothed when scaled or rotated, due to a\r\n\t *                       scaling or rotation in the <code>matrix</code>\r\n\t *                       parameter. The <code>smoothing</code> parameter only\r\n\t *                       applies if the <code>source</code> parameter is a\r\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\r\n\t *                       to <code>false</code>, the rotated or scaled\r\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\r\n\t *                       example, the following two images use the same\r\n\t *                       BitmapImage2D object for the <code>source</code>\r\n\t *                       parameter, but the <code>smoothing</code> parameter\r\n\t *                       is set to <code>true</code> on the left and\r\n\t *                       <code>false</code> on the right:\r\n\t *\r\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\r\n\t *                       to <code>true</code> takes longer than doing so with\r\n\t *                       <code>smoothing</code> set to\r\n\t *                       <code>false</code>.</p>\r\n\t * @throws ArgumentError The <code>source</code> parameter is not a\r\n\t *                       BitmapImage2D or DisplayObject object.\r\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\r\n\t *                       object.\r\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\r\n\t *                       Sprite or MovieClip object) all of its child objects\r\n\t *                       do not come from the same domain as the caller, or\r\n\t *                       are not in a content that is accessible to the\r\n\t *                       caller by having called the\r\n\t *                       <code>Security.allowDomain()</code> method. This\r\n\t *                       restriction does not apply to AIR content in the\r\n\t *                       application security sandbox.\r\n\t */\r\n\tpublic draw(side:number, source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(side:number, source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(side:number, source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\r\n\t{\r\n\t\tif (source instanceof BitmapImage2D)\r\n\t\t\tsource = source.getCanvas();\r\n\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) draw object\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\r\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Fills a rectangular area of pixels with a specified ARGB color.\r\n\t *\r\n\t * @param rect  The rectangular area to fill.\r\n\t * @param color The ARGB color value that fills the area. ARGB colors are\r\n\t *              often specified in hexadecimal format; for example,\r\n\t *              0xFF336699.\r\n\t * @throws TypeError The rect is null.\r\n\t */\r\n\tpublic fillRect(side:number, rect:Rectangle, color:number)\r\n\t{\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) apply fill\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tif (this._imageData[side])\r\n\t\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\r\n\r\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\r\n\r\n\t\t\tif (this._imageData[side])\r\n\t\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\r\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\r\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\r\n\t * alpha information is returned.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\r\n\t *         method returns 0.\r\n\t */\r\n\tpublic getPixel(side:number, x:number, y:number):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tvar index:number = (x + y*this._size)*4;\r\n\r\n\t\t\tr = this._imageData[side].data[index + 0];\r\n\t\t\tg = this._imageData[side].data[index + 1];\r\n\t\t\tb = this._imageData[side].data[index + 2];\r\n\t\t\ta = this._imageData[side].data[index + 3];\r\n\t\t}\r\n\r\n\t\t//returns black if fully transparent\r\n\t\tif (!a)\r\n\t\t\treturn 0x0;\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\r\n\t * This method is similar to the <code>getPixel()</code> method, which\r\n\t * returns an RGB color without alpha channel data.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\r\n\t *         returned.\r\n\t */\r\n\tpublic getPixel32(side:number, x, y):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tvar index:number = (x + y*this._size)*4;\r\n\r\n\t\t\tr = this._imageData[side].data[index + 0];\r\n\t\t\tg = this._imageData[side].data[index + 1];\r\n\t\t\tb = this._imageData[side].data[index + 2];\r\n\t\t\ta = this._imageData[side].data[index + 3];\r\n\t\t}\r\n\r\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\r\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\r\n\t * changes. To improve performance, use this method along with the\r\n\t * <code>unlock()</code> method before and after numerous calls to the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\r\n\t *\r\n\t */\r\n\tpublic lock()\r\n\t{\r\n\t\tif (this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = true;\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\r\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\r\n\t * in the Array is expected to be 32-bit ARGB pixel values.\r\n\t *\r\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\r\n\t *                    object.\r\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\r\n\t *                    values to be used in the rectangular region.\r\n\t * @throws RangeError The vector array is not large enough to read all the\r\n\t *                    pixel data.\r\n\t */\r\n\tpublic setArray(side:number, rect:Rectangle, inputArray:Array<number>)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\r\n\r\n\t\t\t\tthis._imageData[side].data[index + 0] = argb[1];\r\n\t\t\t\tthis._imageData[side].data[index + 1] = argb[2];\r\n\t\t\t\tthis._imageData[side].data[index + 2] = argb[3];\r\n\t\t\t\tthis._imageData[side].data[index + 3] = argb[0];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\r\n\t * value of the image pixel is preserved during this operation. The value of\r\n\t * the RGB color parameter is treated as an unmultiplied color value.\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapImage2D instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting RGB color for the pixel.\r\n\t */\r\n\tpublic setPixel(side:number, x:number, y:number, color:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar index:number = (x + y*this._size)*4;\r\n\r\n\t\tthis._imageData[side].data[index + 0] = argb[1];\r\n\t\tthis._imageData[side].data[index + 1] = argb[2];\r\n\t\tthis._imageData[side].data[index + 2] = argb[3];\r\n\t\tthis._imageData[side].data[index + 3] = 255;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the color and alpha transparency values of a single pixel of a\r\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\r\n\t * method; the main difference is that the <code>setPixel32()</code> method\r\n\t * takes an ARGB color value that contains alpha channel information.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapImage2D instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\r\n\t *              opaque(not transparent), the alpha transparency portion of\r\n\t *              this color value is ignored.\r\n\t */\r\n\tpublic setPixel32(side:number, x, y, color:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar index:number = (x + y*this._size)*4;\r\n\r\n\t\tthis._imageData[side].data[index + 0] = argb[1];\r\n\t\tthis._imageData[side].data[index + 1] = argb[2];\r\n\t\tthis._imageData[side].data[index + 2] = argb[3];\r\n\t\tthis._imageData[side].data[index + 3] = argb[0];\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a byte array into a rectangular region of pixel data. For each\r\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\r\n\t * the return value is written into the pixel. If the byte array ends before\r\n\t * the full rectangle is written, the function returns. The data in the byte\r\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\r\n\t * on the byte array before or after the pixels are read.\r\n\t *\r\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\r\n\t *                       object.\r\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\r\n\t *                       unmultiplied pixel values to be used in the\r\n\t *                       rectangular region.\r\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\r\n\t *                   enough data to fill the area of the <code>rect</code>\r\n\t *                   rectangle. The method fills as many pixels as possible\r\n\t *                   before throwing the exception.\r\n\t * @throws TypeError The rect or inputByteArray are null.\r\n\t */\r\n\tpublic setPixels(side:number, rect:Rectangle, inputByteArray:ByteArray)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tinputByteArray.position = 0;\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\r\n\r\n\t\t\t\tthis._imageData[side].data[index + 0] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData[side].data[index + 1] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData[side].data[index + 2] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData[side].data[index + 3] = inputByteArray.readUnsignedInt();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\r\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\r\n\t * To improve performance, use this method along with the <code>lock()</code>\r\n\t * method before and after numerous calls to the <code>setPixel()</code> or\r\n\t * <code>setPixel32()</code> method.\r\n\t *\r\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\r\n\t *                   you do not specify a value for this parameter, the\r\n\t *                   entire area of the BitmapImage2D object is considered\r\n\t *                   changed.\r\n\t */\r\n\tpublic unlock()\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = false;\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0); // at coords 0,0\r\n\t\t\tthis._imageData[i] = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {ImageData}\r\n\t */\r\n\tpublic getImageData(side:number):ImageData\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\treturn this._imageData[side];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {HTMLCanvasElement}\r\n\t */\r\n\tpublic getCanvas(side:number):HTMLCanvasElement\r\n\t{\r\n\t\treturn this._imageCanvas[side];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(size:number)\r\n\t{\r\n\t\tsuper._setSize(size);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tif (this._locked)\r\n\t\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0);\r\n\r\n\t\t\tthis._imageCanvas[i].width = size;\r\n\t\t\tthis._imageCanvas[i].height = size;\r\n\r\n\t\t\tif (this._locked)\r\n\t\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = BitmapImageCube;",
    "/**\r\n * A class that provides constant values for visual blend mode effects. These\r\n * constants are used in the following:\r\n * <ul>\r\n *   <li> The <code>blendMode</code> property of the\r\n * flash.display.DisplayObject class.</li>\r\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\r\n * method of the flash.display.BitmapData class</li>\r\n * </ul>\r\n */\r\nclass BlendMode\r\n{\r\n\t/**\r\n\t * Adds the values of the constituent colors of the display object to the\r\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\r\n\t * commonly used for animating a lightening dissolve between two objects.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\r\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\r\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\r\n\t */\r\n\tpublic static ADD:string = \"add\";\r\n\r\n\t/**\r\n\t * Applies the alpha value of each pixel of the display object to the\r\n\t * background. This requires the <code>blendMode</code> property of the\r\n\t * parent display object be set to\r\n\t * <code>away.base.BlendMode.LAYER</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static ALPHA:string = \"alpha\";\r\n\r\n\t/**\r\n\t * Selects the darker of the constituent colors of the display object and the\r\n\t * colors of the background(the colors with the smaller values). This\r\n\t * setting is commonly used for superimposing type.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\r\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static DARKEN:string = \"darken\";\r\n\r\n\t/**\r\n\t * Compares the constituent colors of the display object with the colors of\r\n\t * its background, and subtracts the darker of the values of the two\r\n\t * constituent colors from the lighter value. This setting is commonly used\r\n\t * for more vibrant colors.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\r\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\r\n\t */\r\n\tpublic static DIFFERENCE:string = \"difference\";\r\n\r\n\t/**\r\n\t * Erases the background based on the alpha value of the display object. This\r\n\t * process requires that the <code>blendMode</code> property of the parent\r\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static ERASE:string = \"erase\";\r\n\r\n\t/**\r\n\t * Adjusts the color of each pixel based on the darkness of the display\r\n\t * object. If the display object is lighter than 50% gray, the display object\r\n\t * and background colors are screened, which results in a lighter color. If\r\n\t * the display object is darker than 50% gray, the colors are multiplied,\r\n\t * which results in a darker color. This setting is commonly used for shading\r\n\t * effects.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static HARDLIGHT:string = \"hardlight\";\r\n\r\n\t/**\r\n\t * Inverts the background.\r\n\t */\r\n\tpublic static INVERT:string = \"invert\";\r\n\r\n\t/**\r\n\t * Forces the creation of a transparency group for the display object. This\r\n\t * means that the display object is precomposed in a temporary buffer before\r\n\t * it is processed further. The precomposition is done automatically if the\r\n\t * display object is precached by means of bitmap caching or if the display\r\n\t * object is a display object container that has at least one child object\r\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static LAYER:string = \"layer\";\r\n\r\n\t/**\r\n\t * Selects the lighter of the constituent colors of the display object and\r\n\t * the colors of the background(the colors with the larger values). This\r\n\t * setting is commonly used for superimposing type.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\r\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static LIGHTEN:string = \"lighten\";\r\n\r\n\t/**\r\n\t * Multiplies the values of the display object constituent colors by the\r\n\t * constituent colors of the background color, and normalizes by dividing by\r\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\r\n\t * shadows and depth effects.\r\n\t *\r\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\r\n\t * display object and the corresponding color of the pixel in the background\r\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\r\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\r\n\t * shade than the color of the display object or the color of the\r\n\t * background.</p>\r\n\t */\r\n\tpublic static MULTIPLY:string = \"multiply\";\r\n\r\n\t/**\r\n\t * The display object appears in front of the background. Pixel values of the\r\n\t * display object override the pixel values of the background. Where the\r\n\t * display object is transparent, the background is visible.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * Adjusts the color of each pixel based on the darkness of the background.\r\n\t * If the background is lighter than 50% gray, the display object and\r\n\t * background colors are screened, which results in a lighter color. If the\r\n\t * background is darker than 50% gray, the colors are multiplied, which\r\n\t * results in a darker color. This setting is commonly used for shading\r\n\t * effects.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static OVERLAY:string = \"overlay\";\r\n\r\n\t/**\r\n\t * Multiplies the complement(inverse) of the display object color by the\r\n\t * complement of the background color, resulting in a bleaching effect. This\r\n\t * setting is commonly used for highlights or to remove black areas of the\r\n\t * display object.\r\n\t */\r\n\tpublic static SCREEN:string = \"screen\";\r\n\r\n\t/**\r\n\t * Uses a shader to define the blend between objects.\r\n\t *\r\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\r\n\t * automatically sets the display object's <code>blendMode</code> property to\r\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\r\n\t * set to <code>BlendMode.SHADER</code> without first setting the\r\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\r\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\r\n\t * <code>blendShader</code> property is set(which sets the\r\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\r\n\t * later the value of the <code>blendMode</code> property is changed, the\r\n\t * blend mode can be reset to use the blend shader simply by setting the\r\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\r\n\t * <code>blendShader</code> property does not need to be set again except to\r\n\t * change the shader that's used to define the blend mode.</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static SHADER:string = \"shader\";\r\n\r\n\t/**\r\n\t * Subtracts the values of the constituent colors in the display object from\r\n\t * the values of the background color, applying a floor of 0. This setting is\r\n\t * commonly used for animating a darkening dissolve between two objects.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\r\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\r\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\r\n\t */\r\n\tpublic static SUBTRACT:string = \"subtract\";\r\n}\r\n\r\nexport = BlendMode;",
    "import SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tpublic static POSITION_DATA:string = \"positions\";\r\n    public static CURVE_DATA:string = \"curves\";\r\n\tpublic static UV_DATA:string = \"uvs\";\r\n\r\n\t//TODO - move these to StageGL\r\n\tpublic static POSITION_FORMAT:string = \"float3\";\r\n\tpublic static CURVE_FORMAT:string = \"float2\";\r\n\tpublic static UV_FORMAT:string = \"float2\";\r\n\r\n\tprivate _positionsDirty:boolean = true;\r\n\tprivate _curvesDirty:boolean = true;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n    private _vertexNormalsDirty:boolean = true;\r\n\tprivate _uvsDirty:boolean = true;\r\n\tprivate _secondaryUVsDirty:boolean = true;\r\n\tprivate _jointIndicesDirty:boolean = true;\r\n\tprivate _jointWeightsDirty:boolean = true;\r\n\r\n\tprivate _positions:Array<number>;\r\n\tprivate _curves:Array<number>;\r\n\tprivate _uvs:Array<number>;\r\n\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedJointIndices:Array<number>;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\r\n\tprivate _concatenateArrays:boolean = true;\r\n\tprivate _autoDeriveNormals:boolean = false;\r\n\tprivate _useFaceWeights:boolean = false;\r\n    private _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Array<number>;\r\n\tprivate _faceWeights:Array<number>;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\tprivate _positionsUpdated:SubGeometryEvent;\r\n\tprivate _curvesUpdated:SubGeometryEvent;\r\n\tprivate _uvsUpdated:SubGeometryEvent;\r\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tthis._pOffset[CurveSubGeometry.VERTEX_DATA] = 0;\r\n\r\n\t\t\t//always have positions\r\n\t\t\tthis._pOffset[CurveSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tvar stride:number = 3;\r\n\r\n\t\t\tif (this._curves != null) {\r\n\t\t\t\tthis._pOffset[CurveSubGeometry.CURVE_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._uvs != null) {\r\n\t\t\t\tthis._pOffset[CurveSubGeometry.UV_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tthis._pStride[CurveSubGeometry.VERTEX_DATA] = stride;\r\n\t\t\tthis._pStride[CurveSubGeometry.POSITION_DATA] = stride;\r\n\t\t\tthis._pStride[CurveSubGeometry.CURVE_DATA] = stride;\r\n\t\t\tthis._pStride[CurveSubGeometry.UV_DATA] = stride;\r\n\r\n\t\t\tvar len:number = this._pNumVertices*stride;\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t} else {\r\n\t\t\tthis._pOffset[CurveSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tthis._pOffset[CurveSubGeometry.CURVE_DATA] = 0;\r\n\t\t\tthis._pOffset[CurveSubGeometry.UV_DATA] = 0;\r\n\r\n\r\n\t\t\tthis._pStride[CurveSubGeometry.POSITION_DATA] = 3;\r\n\t\t\tthis._pStride[CurveSubGeometry.CURVE_DATA] = 2;\r\n\t\t\tthis._pStride[CurveSubGeometry.UV_DATA] = 2;\r\n\t\t}\r\n\r\n\t\tthis._pStrideOffsetDirty = false;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n    //remove\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n        if (this._curvesDirty)\r\n            this.updateCurves(this._curves);\r\n\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Array<number>\r\n\t{\r\n\t\tif (this._curvesDirty)\r\n\t\t\tthis.updateCurves(this._curves);\r\n\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Array<number>\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Array<number>\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\r\n\t */\r\n\tpublic get useFaceWeights():boolean\r\n\t{\r\n\t\treturn this._useFaceWeights;\r\n\t}\r\n\r\n\tpublic set useFaceWeights(value:boolean)\r\n\t{\r\n\t\tif (this._useFaceWeights == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useFaceWeights = value;\r\n\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t}\r\n\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\r\n\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedArrays:boolean)\r\n\t{\r\n\t\tsuper(concatenatedArrays);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updatePositions(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tthis._positions = values;\r\n\r\n\t\tif (this._positions == null)\r\n\t\t\tthis._positions = new Array<number>();\r\n\r\n\t\tthis._pNumVertices = this._positions.length/3;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tvar len:number = this._pNumVertices*this.getStride(CurveSubGeometry.VERTEX_DATA);\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = this.getOffset(CurveSubGeometry.POSITION_DATA);\r\n\t\t\tstride = this.getStride(CurveSubGeometry.POSITION_DATA);\r\n\t\t\tpositions = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tpositions[index] = values[i++];\r\n\t\t\t\tpositions[index + 1] = values[i++];\r\n\t\t\t\tpositions[index + 2] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\r\n\t\tthis._positionsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic updateCurves(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar curves:Array<number>;\r\n\r\n\t\tif (true) {\r\n\t\t\tif ((this._curves == null || values == null) && (this._curves != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._curves = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(CurveSubGeometry.CURVE_DATA);\r\n\t\t\t\tstride = this.getStride(CurveSubGeometry.CURVE_DATA);\r\n                curves = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n                    curves[index] = values[i++];\r\n                    curves[index + 1] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.notifyCurvesUpdate();\r\n\r\n\t\tthis._curvesDirty = false;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic updateUVs(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._uvs = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(CurveSubGeometry.UV_DATA);\r\n\t\t\t\tstride = this.getStride(CurveSubGeometry.UV_DATA);\r\n\t\t\t\tuvs = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tuvs[index] = values[i++];\r\n\t\t\t\t\tuvs[index + 1] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tif (this._uvs == null) {\r\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\toffset = this.getOffset(CurveSubGeometry.UV_DATA);\r\n\t\t\tstride = this.getStride(CurveSubGeometry.UV_DATA);\r\n\r\n\t\t\t//autoderived uvs\r\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tvar uvIdx:number = 0;\r\n\r\n\t\t\t//clear uv values\r\n\t\t\tvar lenV:number = uvs.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuvs[index] = uvIdx*.5;\r\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (++uvIdx == 3)\r\n\t\t\t\t\tuvIdx = 0;\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\r\n\t\tthis._uvsDirty = false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._curves = null;\r\n\t\tthis._uvs = null;\r\n\r\n\t\tthis._faceNormals = null;\r\n\t\tthis._faceWeights = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the CurveSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic updateIndices(indices:Array<number>)\r\n\t{\r\n\t\tsuper.updateIndices(indices);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis._vertexNormalsDirty = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenateArrays);\r\n\t\tclone.updateIndices(this._pIndices.concat());\r\n\t\tclone.updatePositions(this._positions.concat());\r\n\r\n\t\tif (this._curves)\r\n\t\t\tclone.updateCurves(this._curves.concat());\r\n\t\telse\r\n\t\t\tclone.updateCurves(null);\r\n\r\n\t\tif (this._uvs && !this._autoDeriveUVs)\r\n\t\t\tclone.updateUVs(this._uvs.concat());\r\n\t\telse\r\n\t\t\tclone.updateUVs(null);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tuvs = this._uvs;\r\n\r\n\t\tvar ratioU:number = scaleU/this._scaleU;\r\n\t\tvar ratioV:number = scaleV/this._scaleV;\r\n\r\n\t\tthis._scaleU = scaleU;\r\n\t\tthis._scaleV = scaleV;\r\n\r\n\t\tvar len:number = uvs.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 2;\r\n\r\n\t\tindex = offset;\r\n\r\n\t\twhile (index < len) {\r\n\t\t\tuvs[index] *= ratioU;\r\n\t\t\tuvs[index + 1] *= ratioV;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tpositions = this._positions;\r\n\r\n\t\tvar len:number = positions.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 3;\r\n\r\n\t\ti = 0;\r\n\t\tindex = offset;\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[index] *= scale;\r\n\t\t\tpositions[index + 1] *= scale;\r\n\t\t\tpositions[index + 2] *= scale;\r\n\r\n\t\t\ti += 3;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tpositions = this._pVertices;\r\n\t\t} else {\r\n\t\t\tpositions = this._positions;\r\n\t\t}\r\n\r\n\t\tvar len:number = this._positions.length/3;\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\r\n\r\n\t\tvar vi0:number = this.getOffset(CurveSubGeometry.POSITION_DATA);\r\n\t\tvar vStride:number = this.getStride(CurveSubGeometry.POSITION_DATA);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\r\n\t\t\t// bake position\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += vStride;\r\n\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\tvar positions:Array<number> = this._positions;\r\n\r\n\t\tvar len:number = this._pIndices.length;\r\n\r\n\t\tif (this._faceNormals == null)\r\n\t\t\tthis._faceNormals = new Array<number>(len);\r\n\r\n\t\tif (this._useFaceWeights && this._faceWeights == null)\r\n\t\t\tthis._faceWeights = new Array<number>(len/3);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tif (this._useFaceWeights) {\r\n\t\t\t\tvar w:number = d*10000;\r\n\r\n\t\t\t\tif (w < 1)\r\n\t\t\t\t\tw = 1;\r\n\r\n\t\t\t\tthis._faceWeights[k++] = w;\r\n\t\t\t}\r\n\r\n\t\t\td = 1/d;\r\n\r\n\t\t\tthis._faceNormals[j++] = cx*d;\r\n\t\t\tthis._faceNormals[j++] = cy*d;\r\n\t\t\tthis._faceNormals[j++] = cz*d;\r\n\t\t}\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyCurvesUpdate();\r\n\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\tprivate notifyPositionsUpdate()\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionsDirty = true;\r\n\r\n\t\tif (!this._positionsUpdated)\r\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.POSITION_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._positionsUpdated);\r\n\t}\r\n\r\n\tprivate notifyCurvesUpdate()\r\n\t{\r\n\t\tif (this._curvesDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._curvesDirty = true;\r\n\r\n\t\tif (!this._curvesUpdated)\r\n\t\t\tthis._curvesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.CURVE_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._curvesUpdated);\r\n\t}\r\n\r\n\r\n\r\n\tprivate notifyUVsUpdate() {\r\n        if (this._uvsDirty)\r\n            return;\r\n\r\n        this._uvsDirty = true;\r\n\r\n        if (!this._uvsUpdated)\r\n            this._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.UV_DATA);\r\n\r\n        this.dispatchEvent(this._uvsUpdated);\r\n    }\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-core/lib/events/GeometryEvent\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nclass Image2D extends ImageBase\r\n{\r\n\tpublic static assetType:string = \"[asset Image2D]\";\r\n\r\n\tpublic _rect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Image2D.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the image in pixels.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._rect.height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._rect.height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._setSize(this._rect.width, value);\r\n\t}\r\n\r\n\t/**\r\n\t * The rectangle that defines the size and location of the bitmap image. The\r\n\t * top and left of the rectangle are 0; the width and height are equal to the\r\n\t * width and height in pixels of the BitmapData object.\r\n\t */\r\n\tpublic get rect():Rectangle\r\n\t{\r\n\t\treturn this._rect;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the bitmap image in pixels.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._rect.width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._rect.width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._setSize(value, this._rect.height);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(width:number, height:number)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._rect = new Rectangle(0, 0, width, height);\r\n\r\n\t\tthis._testDimensions();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tif (this._rect.width != width || this._rect.height != height)\r\n\t\t\tthis.invalidateSize();\r\n\r\n\t\tthis._rect.width = width;\r\n\t\tthis._rect.height = height;\r\n\r\n\t\tthis._testDimensions();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _testDimensions()\r\n\t{\r\n\t\tif (!ImageUtils.isDimensionValid(this._rect.width) || !ImageUtils.isDimensionValid(this._rect.height))\r\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\r\n\t}\r\n}\r\n\r\nexport = Image2D;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IImageObject\t\t\t\t= require(\"awayjs-core/lib/pool/IImageObject\");\r\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\n\r\nclass ImageBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _imageObject:Array<IImageObject> = new Array<IImageObject>();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._imageObject.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._imageObject[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._imageObject.length)\r\n\t\t\tthis._imageObject[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._imageObject.length)\r\n\t\t\tthis._imageObject[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddImageObject(ImageObject:IImageObject):IImageObject\r\n\t{\r\n\t\tthis._imageObject.push(ImageObject);\r\n\r\n\t\treturn ImageObject;\r\n\t}\r\n\r\n\tpublic _iRemoveImageObject(ImageObject:IImageObject):IImageObject\r\n\t{\r\n\t\tthis._imageObject.splice(this._imageObject.indexOf(ImageObject), 1);\r\n\r\n\t\treturn ImageObject;\r\n\t}\r\n}\r\n\r\nexport = ImageBase;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nclass ImageCube extends ImageBase\r\n{\r\n\tpublic static assetType:string = \"[asset ImageCube]\";\r\n\r\n\tpublic _size:number;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn ImageCube.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube bitmap in pixels.\r\n\t */\r\n\tpublic get size():number\r\n\t{\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\tpublic set size(value:number)\r\n\t{\r\n\t\tif (this._size == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._setSize(this._size);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(size:number)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._size = size;\r\n\r\n\t\tthis._testDimensions();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(size:number)\r\n\t{\r\n\t\tif (this._size != size)\r\n\t\t\tthis.invalidateSize();\r\n\r\n\t\tthis._size = size;\r\n\r\n\t\tthis._testDimensions();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _testDimensions()\r\n\t{\r\n\t\tif (!ImageUtils.isDimensionValid(this._size))\r\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\r\n\t}\r\n}\r\n\r\nexport = ImageCube;",
    "import Geometry\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tpublic static VERTEX_DATA:string = \"vertices\";\r\n\tpublic static START_POSITION_DATA:string = \"startPositions\";\r\n\tpublic static END_POSITION_DATA:string = \"endPositions\";\r\n\tpublic static THICKNESS_DATA:string = \"thickness\";\r\n\tpublic static COLOR_DATA:string = \"colors\";\r\n\r\n\t//TODO - move these to StageGL\r\n\tpublic static POSITION_FORMAT:string = \"float3\";\r\n\tpublic static COLOR_FORMAT:string = \"float4\";\r\n\tpublic static THICKNESS_FORMAT:string = \"float1\";\r\n\r\n\tprivate _positionsDirty:boolean = true;\r\n\tprivate _boundingPositionDirty = true;\r\n\tprivate _thicknessDirty:boolean = true;\r\n\tprivate _colorsDirty:boolean = true;\r\n\r\n\tprivate _startPositions:Array<number>;\r\n\tprivate _endPositions:Array<number>;\r\n\tprivate _boundingPositions:Array<number>\r\n\tprivate _thickness:Array<number>;\r\n\tprivate _startColors:Array<number>;\r\n\tprivate _endColors:Array<number>;\r\n\r\n\tprivate _numSegments:number;\r\n\r\n\tprivate _positionsUpdated:SubGeometryEvent;\r\n\tprivate _thicknessUpdated:SubGeometryEvent;\r\n\tprivate _colorUpdated:SubGeometryEvent;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tthis._pOffset[LineSubGeometry.VERTEX_DATA] = 0;\r\n\r\n\t\tvar stride:number = 0;\r\n\t\tthis._pOffset[LineSubGeometry.START_POSITION_DATA] = stride;\r\n\t\tstride += 3;\r\n\r\n\t\tthis._pOffset[LineSubGeometry.END_POSITION_DATA] = stride;\r\n\t\tstride += 3;\r\n\r\n\t\tthis._pOffset[LineSubGeometry.THICKNESS_DATA] = stride;\r\n\t\tstride += 1;\r\n\r\n\t\tthis._pOffset[LineSubGeometry.COLOR_DATA] = stride;\r\n\t\tstride += 4;\r\n\r\n\t\tthis._pStride[LineSubGeometry.VERTEX_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.START_POSITION_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.END_POSITION_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.THICKNESS_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.COLOR_DATA] = stride;\r\n\r\n\t\tvar len:number = this._pNumVertices*stride;\r\n\r\n\t\tif (this._pVertices == null)\r\n\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\telse if (this._pVertices.length != len)\r\n\t\t\tthis._pVertices.length = len;\r\n\r\n\t\tthis._pStrideOffsetDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\r\n\r\n\t\tif (this._thicknessDirty)\r\n\t\t\tthis.updateThickness(this._thickness);\r\n\r\n\t\tif (this._colorsDirty)\r\n\t\t\tthis.updateColors(this._startColors, this._endColors);\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\r\n\r\n\t\treturn this._startPositions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\r\n\r\n\t\treturn this._endPositions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Array<number>\r\n\t{\r\n\t\tif (this._thicknessDirty)\r\n\t\t\tthis.updateThickness(this._thickness);\r\n\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startColors():Array<number>\r\n\t{\r\n\t\tif (this._colorsDirty)\r\n\t\t\tthis.updateColors(this._startColors, this._endColors);\r\n\r\n\t\treturn this._startColors;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endColors():Array<number>\r\n\t{\r\n\t\tif (this._colorsDirty)\r\n\t\t\tthis.updateColors(this._startColors, this._endColors);\r\n\r\n\t\treturn this._endColors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of segments in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numSegments():number\r\n\t{\r\n\t\treturn this._numSegments;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(true);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tif (this._boundingPositionDirty)\r\n\t\t\tthis._boundingPositions = this.startPositions.concat(this.endPositions);\r\n\r\n\t\treturn this._boundingPositions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updatePositions(startValues:Array<number>, endValues:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar values:Array<number>\r\n\t\tvar index:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar indices:Array<number>;\r\n\r\n\t\tthis._startPositions = startValues;\r\n\r\n\t\tif (this._startPositions == null)\r\n\t\t\tthis._startPositions = new Array<number>();\r\n\r\n\t\tthis._endPositions = endValues;\r\n\r\n\t\tif (this._endPositions == null)\r\n\t\t\tthis._endPositions = new Array<number>();\r\n\r\n\t\tthis._boundingPositionDirty = true;\r\n\r\n\t\tthis._numSegments = this._startPositions.length/3;\r\n\r\n\t\tthis._pNumVertices = this._numSegments*4;\r\n\r\n\t\tvar lenV:number = this._pNumVertices*this.getStride(LineSubGeometry.VERTEX_DATA);\r\n\r\n\t\tif (this._pVertices == null)\r\n\t\t\tthis._pVertices = new Array<number>(lenV);\r\n\t\telse if (this._pVertices.length != lenV)\r\n\t\t\tthis._pVertices.length = lenV;\r\n\r\n\t\ti = 0;\r\n\t\tj = 0;\r\n\t\tindex = this.getOffset(LineSubGeometry.START_POSITION_DATA);\r\n\t\tstride = this.getStride(LineSubGeometry.START_POSITION_DATA);\r\n\t\tpositions = this._pVertices;\r\n\t\tindices = new Array();\r\n\r\n\t\twhile (i < startValues.length) {\r\n\t\t\tvalues = (index/stride & 1)? endValues : startValues;\r\n\t\t\tpositions[index] = values[i];\r\n\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\tpositions[index + 2] = values[i + 2];\r\n\r\n\t\t\tvalues = (index/stride & 1)? startValues : endValues;\r\n\t\t\tpositions[index + 3] = values[i];\r\n\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\tpositions[index + 5] = values[i + 2];\r\n\r\n\t\t\tif (++j == 4) {\r\n\t\t\t\tvar o:number = index/stride - 3;\r\n\t\t\t\tindices.push(o, o + 1, o + 2, o + 3, o + 2, o + 1);\r\n\t\t\t\tj = 0;\r\n\t\t\t\ti += 3;\r\n\t\t\t}\r\n\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.updateIndices(indices);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\r\n\t\tthis._positionsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic updateThickness(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar thickness:Array<number>;\r\n\r\n\t\tthis._thickness = values;\r\n\r\n\t\tif (values != null) {\r\n\t\t\ti = 0;\r\n\t\t\tj = 0;\r\n\t\t\toffset = this.getOffset(LineSubGeometry.THICKNESS_DATA);\r\n\t\t\tstride = this.getStride(LineSubGeometry.THICKNESS_DATA);\r\n\t\t\tthickness = this._pVertices;\r\n\r\n\t\t\tindex = offset\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*(index - offset)/stride + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyThicknessUpdate();\r\n\r\n\t\tthis._thicknessDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updateColors(startValues:Array<number>, endValues:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar values:Array<number>\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar colors:Array<number>;\r\n\r\n\t\tthis._startColors = startValues;\r\n\r\n\t\tthis._endColors = endValues;\r\n\r\n\t\t//default to white\r\n\t\tif (this._startColors == null) {\r\n\t\t\tthis._startColors = new Array(this._numSegments*4);\r\n\r\n\t\t\ti = 0;\r\n\t\t\twhile (i < this._startColors.length)\r\n\t\t\t\tthis._startColors[i++] = 1;\r\n\t\t}\r\n\r\n\t\tif (this._endColors == null) {\r\n\t\t\tthis._endColors = new Array(this._numSegments*4);\r\n\r\n\t\t\ti = 0;\r\n\t\t\twhile (i < this._endColors.length)\r\n\t\t\t\tthis._endColors[i++] = 1;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tj = 0;\r\n\t\toffset = this.getOffset(LineSubGeometry.COLOR_DATA);\r\n\t\tstride = this.getStride(LineSubGeometry.COLOR_DATA);\r\n\t\tcolors = this._pVertices;\r\n\r\n\t\tindex = offset;\r\n\r\n\t\twhile (i < this._startColors.length) {\r\n\t\t\tvalues = ((index - offset)/stride & 1)? this._endColors : this._startColors;\r\n\t\t\tcolors[index] = values[i];\r\n\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\tcolors[index + 3] = values[i + 3];\r\n\r\n\t\t\tif (++j == 4) {\r\n\t\t\t\tj = 0;\r\n\t\t\t\ti += 4;\r\n\t\t\t}\r\n\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyColorsUpdate();\r\n\r\n\t\tthis._colorsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._startPositions = null;\r\n\t\tthis._endPositions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._startColors = null;\r\n\t\tthis._endColors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry();\r\n\t\tclone.updateIndices(this._pIndices.concat());\r\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\r\n\t\tclone.updateThickness(this._thickness.concat());\r\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyThicknessUpdate();\r\n\t\tthis.notifyColorsUpdate();\r\n\t}\r\n\r\n\tprivate notifyPositionsUpdate()\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionsDirty = true;\r\n\r\n\t\tif (!this._positionsUpdated)\r\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._positionsUpdated);\r\n\t}\r\n\r\n\tprivate notifyThicknessUpdate()\r\n\t{\r\n\t\tif (this._thicknessDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._thicknessDirty = true;\r\n\r\n\t\tif (!this._thicknessUpdated)\r\n\t\t\tthis._thicknessUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.THICKNESS_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._thicknessUpdated);\r\n\t}\r\n\r\n\tprivate notifyColorsUpdate()\r\n\t{\r\n\t\tif (this._colorsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._colorsDirty = true;\r\n\r\n\t\tif (!this._colorUpdated)\r\n\t\t\tthis._colorUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.COLOR_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._colorUpdated);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\n/**\r\n * The Sampler2D class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Sampler2D()</code> constructor.\r\n *\r\n * <p>The <code>Sampler2D()</code> constructor allows you to create a Sampler2D\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Sampler2D object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Sampler2D object can share its Image2D reference among several Sampler2D\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Sampler2D objects that reference the same Image2D object,\r\n * multiple texture objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each texture\r\n * object instance.</p>\r\n\r\n */\r\nclass Sampler2D extends SamplerBase\r\n{\r\n\tpublic static assetType:string = \"[asset Sampler2D]\";\r\n\r\n\tprivate _offsetX:number = 0;\r\n\tprivate _offsetY:number = 0;\r\n\r\n\tprivate _scaleX:number = 1;\r\n\tprivate _scaleY:number = 1;\r\n\r\n\tprivate _rect:Rectangle;\r\n\tprivate _imageRect:Rectangle;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _repeat:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Sampler2D.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D;\r\n\r\n\t/**\r\n\t * Controls whether or not the Sampler2D object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\t//var pixelSnapping:PixelSnapping;\r\n\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get offsetX():number\r\n\t{\r\n\t\treturn this._offsetX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get offsetY():number\r\n\t{\r\n\t\treturn this._offsetY;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._scaleX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._scaleY;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\t//TODO: update dependencies\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get imageRect():Rectangle\r\n\t{\r\n\t\treturn this._imageRect;\r\n\t}\r\n\tpublic set imageRect(value:Rectangle)\r\n\t{\r\n\t\tif (this._imageRect == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._imageRect = value;\r\n\r\n\t\tthis._updateRect();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\tpublic set frameRect(value:Rectangle)\r\n\t{\r\n\t\tif (this._frameRect == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._frameRect = value;\r\n\r\n\t\tthis._updateRect();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rect():Rectangle\r\n\t{\r\n\t\treturn this._rect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param image2D\r\n\t * @param smoothing\r\n\t */\r\n\tconstructor(image2D:Image2D = null, repeat:boolean = false, smooth:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.image2D = image2D;\r\n\r\n\t\tthis.repeat = repeat;\r\n\t\tthis.smooth = smooth;\r\n\t\tthis.mipmap = mipmap;\r\n\r\n\t\tthis._updateRect();\r\n\t}\r\n\r\n\tprivate _updateRect()\r\n\t{\r\n\t\tif (this._imageRect)\r\n\t\t\tthis._rect = this._imageRect;\r\n\t\telse\r\n\t\t\tthis._rect = this.image2D.rect;\r\n\r\n\t\tif (this._imageRect) {\r\n\t\t\tthis._offsetX = this._imageRect.x/this.image2D.width;\r\n\t\t\tthis._offsetY = this._imageRect.y/this.image2D.height;\r\n\r\n\t\t\tthis._scaleX = this._imageRect.width/this.image2D.width;\r\n\t\t\tthis._scaleY = this._imageRect.height/this.image2D.height;\r\n\t\t} else {\r\n\t\t\tthis._offsetX = 0;\r\n\t\t\tthis._offsetY = 0;\r\n\r\n\t\t\tthis._scaleX = 1;\r\n\t\t\tthis._scaleY = 1;\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\nexport = Sampler2D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n *\r\n */\r\nclass SamplerBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _smooth:boolean;\r\n\tprivate _mipmap:boolean;\r\n\r\n\tpublic _pFormat:string = \"bgra\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\t//TODO: update dependencies\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\t//TODO: update dependencies\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get format():string\r\n\t{\r\n\t\treturn this._pFormat;\r\n\t}\r\n}\r\n\r\nexport = SamplerBase;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\n/**\r\n * The Bitmap class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Bitmap()</code> constructor.\r\n *\r\n * <p>The <code>Bitmap()</code> constructor allows you to create a Bitmap\r\n * object that contains a reference to a BitmapData object. After you create a\r\n * Bitmap object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Bitmap object can share its BitmapData reference among several Bitmap\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Bitmap objects that reference the same BitmapData object,\r\n * multiple texture objects can use the same complex BitmapData object without\r\n * incurring the memory overhead of a BitmapData object for each texture\r\n * object instance.</p>\r\n\r\n */\r\nclass SamplerCube extends SamplerBase\r\n{\r\n\tpublic static assetType:string = \"[asset SamplerCube]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SamplerCube.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The ImageCube object being referenced.\r\n\t */\r\n\tpublic imageCube:ImageCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @param bitmapData\r\n\t * @param smoothing\r\n\t */\r\n\tconstructor(imageCube:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.imageCube = imageCube;\r\n\t}\r\n}\r\n\r\nexport = SamplerCube;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageChannel\t\t= require(\"awayjs-core/lib/data/BitmapImageChannel\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\n/**\r\n *\r\n */\r\nclass SpecularImage2D extends Image2D\r\n{\r\n\tpublic static assetType:string = \"[asset SpecularImage2D]\";\r\n\r\n\tprivate _specularSource:BitmapImage2D;\r\n\tprivate _glossSource:BitmapImage2D;\r\n\tprivate _output:BitmapImage2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SpecularImage2D.assetType;\r\n\t}\r\n\r\n\tpublic get specularSource():BitmapImage2D\r\n\t{\r\n\t\treturn this._specularSource;\r\n\t}\r\n\r\n\tpublic set specularSource(value:BitmapImage2D)\r\n\t{\r\n\t\tif (this._specularSource == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularSource = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\r\n\t\tthis._testSize();\r\n\t}\r\n\r\n\r\n\tpublic get glossSource():BitmapImage2D\r\n\t{\r\n\t\treturn this._glossSource;\r\n\t}\r\n\r\n\tpublic set glossSource(value:BitmapImage2D)\r\n\t{\r\n\t\tif (this._glossSource == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._glossSource = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\r\n\t\tthis._testSize();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(specularSource:BitmapImage2D = null, glossSource:BitmapImage2D = null)\r\n\t{\r\n\t\tsuper(1, 1);\r\n\r\n\t\tthis._specularSource = specularSource;\r\n\t\tthis._glossSource = glossSource;\r\n\r\n\t\tthis._output = new BitmapImage2D(1, 1, false, 0xffffff);\r\n\r\n\t\tthis._testSize();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new SpecularImage2D object that is a clone of the original instance\r\n\t * with an exact copy of the contained bitmap.\r\n\t *\r\n\t * @return A new SpecularImage2D object that is identical to the original.\r\n\t */\r\n\tpublic clone():SpecularImage2D\r\n\t{\r\n\t\treturn new SpecularImage2D(this._specularSource, this._glossSource);\r\n\t}\r\n\r\n\t/**\r\n\t * Frees memory that is used to store the SpecularImage2D object.\r\n\t *\r\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\r\n\t * and height of the image are set to 0. All subsequent calls to methods or\r\n\t * properties of this SpecularImage2D instance fail, and an exception is thrown.\r\n\t * </p>\r\n\t *\r\n\t * <p><code>SpecularImage2D.dispose()</code> releases the memory occupied by the\r\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\r\n\t * memory). After using <code>SpecularImage2D.dispose()</code>, the SpecularImage2D\r\n\t * object is no longer usable and an exception may be thrown if\r\n\t * you call functions on the SpecularImage2D object. However,\r\n\t * <code>SpecularImage2D.dispose()</code> does not garbage collect the SpecularImage2D\r\n\t * object(approximately 128 bytes); the memory occupied by the actual\r\n\t * SpecularImage2D object is released at the time the SpecularImage2D object is\r\n\t * collected by the garbage collector.</p>\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._rect = null;\r\n\r\n\t\tthis._output.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {ImageData}\r\n\t */\r\n\tpublic getImageData():ImageData\r\n\t{\r\n\t\tvar origin:Point = new Point();\r\n\r\n\t\tthis._output.fillRect(this._rect, 0xffffff);\r\n\r\n\t\tif (this._glossSource)\r\n\t\t\tthis._output.copyChannel(this._glossSource, this._rect, origin, BitmapImageChannel.GREEN, BitmapImageChannel.GREEN);\r\n\r\n\t\tif (this._specularSource)\r\n\t\t\tthis._output.copyChannel(this._specularSource, this._rect, origin, BitmapImageChannel.RED, BitmapImageChannel.RED);\r\n\r\n\t\treturn this._output.getImageData();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {HTMLCanvasElement}\r\n\t */\r\n\tpublic getCanvas():HTMLCanvasElement\r\n\t{\r\n\t\treturn this._output.getCanvas();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tsuper._setSize(width, height);\r\n\r\n\t\tthis._output._setSize(width, height);\r\n\t}\r\n\r\n\tprivate _testSize()\r\n\t{\r\n\t\tvar w:number, h:number;\r\n\r\n\t\tif (this._specularSource) {\r\n\t\t\tw = this._specularSource.width;\r\n\t\t\th = this._specularSource.height;\r\n\t\t} else if (this._glossSource) {\r\n\t\t\tw = this._glossSource.width;\r\n\t\t\th = this._glossSource.height;\r\n\t\t} else {\r\n\t\t\tw = 1;\r\n\t\t\th = 1;\r\n\t\t}\r\n\r\n\t\tif (w != this._output.width && h != this._output.height) {\r\n\t\t\tthis._output.dispose();\r\n\t\t\tthis._output = new BitmapImage2D(w, h, false, 0xffffff);\r\n\t\t}\r\n\r\n\t\tthis._setSize(w, h);\r\n\t}\r\n}\r\n\r\nexport = SpecularImage2D;",
    "import Geometry\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tpublic static VERTEX_DATA:string = \"vertices\";\r\n\r\n\tpublic _pStrideOffsetDirty:boolean = true;\r\n\r\n\tpublic _pIndices:Array<number> /*uint*/;\r\n\tpublic _pVertices:Array<number>;\r\n\r\n\tprivate _numIndices:number;\r\n\tprivate _numTriangles:number;\r\n\tpublic _pNumVertices:number;\r\n\r\n\tpublic _pConcatenateArrays:boolean = true;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _pStride:Object = new Object();\r\n\tpublic _pOffset:Object = new Object();\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get concatenateArrays():boolean\r\n\t{\r\n\t\treturn this._pConcatenateArrays;\r\n\t}\r\n\r\n\tpublic set concatenateArrays(value:boolean)\r\n\t{\r\n\t\tif (this._pConcatenateArrays == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pConcatenateArrays = value;\r\n\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Array<number>\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tthis.updateVertices();\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numTriangles():number\r\n\t{\r\n\t\treturn this._numTriangles;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._pNumVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedArrays:boolean)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pConcatenateArrays = concatenatedArrays;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getStride(dataType:string)\r\n\t{\r\n\t\tif (this._pStrideOffsetDirty)\r\n\t\t\tthis._pUpdateStrideOffset();\r\n\r\n\t\treturn this._pStride[dataType];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getOffset(dataType:string)\r\n\t{\r\n\t\tif (this._pStrideOffsetDirty)\r\n\t\t\tthis._pUpdateStrideOffset();\r\n\r\n\t\treturn this._pOffset[dataType];\r\n\t}\r\n\r\n\tpublic updateVertices()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pIndices = null;\r\n\t\tthis._pVertices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic updateIndices(indices:Array<number>)\r\n\t{\r\n\t\tthis._pIndices = indices;\r\n\t\tthis._numIndices = indices.length;\r\n\r\n\t\tthis._numTriangles = this._numIndices/3;\r\n\r\n\t\tthis.notifyIndicesUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tpublic static POSITION_DATA:string = \"positions\";\r\n\tpublic static NORMAL_DATA:string = \"vertexNormals\";\r\n\tpublic static TANGENT_DATA:string = \"vertexTangents\";\r\n\tpublic static UV_DATA:string = \"uvs\";\r\n\tpublic static SECONDARY_UV_DATA:string = \"secondaryUVs\";\r\n\tpublic static JOINT_INDEX_DATA:string = \"jointIndices\";\r\n\tpublic static JOINT_WEIGHT_DATA:string = \"jointWeights\";\r\n\r\n\t//TODO - move these to StageGL\r\n\tpublic static POSITION_FORMAT:string = \"float3\";\r\n\tpublic static NORMAL_FORMAT:string = \"float3\";\r\n\tpublic static TANGENT_FORMAT:string = \"float3\";\r\n\tpublic static UV_FORMAT:string = \"float2\";\r\n\tpublic static SECONDARY_UV_FORMAT:string = \"float2\";\r\n\r\n\tprivate _positionsDirty:boolean = true;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\tprivate _vertexNormalsDirty:boolean = true;\r\n\tprivate _vertexTangentsDirty:boolean = true;\r\n\tprivate _uvsDirty:boolean = true;\r\n\tprivate _secondaryUVsDirty:boolean = true;\r\n\tprivate _jointIndicesDirty:boolean = true;\r\n\tprivate _jointWeightsDirty:boolean = true;\r\n\r\n\tprivate _positions:Array<number>;\r\n\tprivate _vertexNormals:Array<number>;\r\n\tprivate _vertexTangents:Array<number>;\r\n\tprivate _uvs:Array<number>;\r\n\tprivate _secondaryUVs:Array<number>;\r\n\tprivate _jointIndices:Array<number>;\r\n\tprivate _jointWeights:Array<number>;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedJointIndices:Array<number>;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\tprivate _numCondensedJoints:number;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _concatenateArrays:boolean = true;\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\tprivate _useFaceWeights:boolean = false;\r\n\r\n\tprivate _faceNormals:Array<number>;\r\n\tprivate _faceTangents:Array<number>;\r\n\tprivate _faceWeights:Array<number>;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\tprivate _positionsUpdated:SubGeometryEvent;\r\n\tprivate _normalsUpdated:SubGeometryEvent;\r\n\tprivate _tangentsUpdated:SubGeometryEvent;\r\n\tprivate _uvsUpdated:SubGeometryEvent;\r\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\r\n\tprivate _jointIndicesUpdated:SubGeometryEvent;\r\n\tprivate _jointWeightsUpdated:SubGeometryEvent;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\r\n\t\tthis.notifyJointIndicesUpdate();\r\n\t}\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tthis._pOffset[TriangleSubGeometry.VERTEX_DATA] = 0;\r\n\r\n\t\t\t//always have positions\r\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tvar stride:number = 3;\r\n\r\n\t\t\tif (this._vertexNormals != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = stride;\r\n\t\t\t\tstride += 3;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._vertexTangents != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = stride;\r\n\t\t\t\tstride += 3;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._uvs != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._secondaryUVs != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._jointIndices != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\r\n\t\t\t\tstride += this._jointsPerVertex;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._jointWeights != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\r\n\t\t\t\tstride += this._jointsPerVertex;\r\n\t\t\t}\r\n\r\n\t\t\tthis._pStride[TriangleSubGeometry.VERTEX_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\r\n\r\n\t\t\tvar len:number = this._pNumVertices*stride;\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t} else {\r\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = 0;\r\n\r\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = 3;\r\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = 3;\r\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = 3;\r\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = 2;\r\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = 2;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = this._jointsPerVertex;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = this._jointsPerVertex;\r\n\t\t}\r\n\r\n\t\tthis._pStrideOffsetDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tif (this._pConcatenateArrays)\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyNormalsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\tif (this._vertexNormalsDirty)\r\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\r\n\r\n\t\tif (this._vertexTangentsDirty)\r\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\r\n\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\tif (this._secondaryUVsDirty)\r\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\r\n\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\tif (this._jointWeightsDirty)\r\n\t\t\tthis.updateJointWeights(this._jointWeights);\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertexNormals():Array<number>\r\n\t{\r\n\t\tif (this._vertexNormalsDirty)\r\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\r\n\r\n\t\treturn this._vertexNormals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertexTangents():Array<number>\r\n\t{\r\n\t\tif (this._vertexTangentsDirty)\r\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\r\n\r\n\t\treturn this._vertexTangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Array<number>\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Array<number>\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Array<number>\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Array<number>\r\n\t{\r\n\t\tif (this._secondaryUVsDirty)\r\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\r\n\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():Array<number>\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\tif (this._useCondensedIndices)\r\n\t\t\treturn this._condensedJointIndices;\r\n\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():Array<number>\r\n\t{\r\n\t\tif (this._jointWeightsDirty)\r\n\t\t\tthis.updateJointWeights(this._jointWeights);\r\n\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\r\n\t */\r\n\tpublic get useFaceWeights():boolean\r\n\t{\r\n\t\treturn this._useFaceWeights;\r\n\t}\r\n\r\n\tpublic set useFaceWeights(value:boolean)\r\n\t{\r\n\t\tif (this._useFaceWeights == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useFaceWeights = value;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyNormalsUpdate();\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t}\r\n\r\n\tpublic get numCondensedJoints():number\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\treturn this._numCondensedJoints;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedArrays:boolean)\r\n\t{\r\n\t\tsuper(concatenatedArrays);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updatePositions(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tthis._positions = values;\r\n\r\n\t\tif (this._positions == null)\r\n\t\t\tthis._positions = new Array<number>();\r\n\r\n\t\tthis._pNumVertices = this._positions.length/3;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tvar len:number = this._pNumVertices*this.getStride(TriangleSubGeometry.VERTEX_DATA);\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = this.getOffset(TriangleSubGeometry.POSITION_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.POSITION_DATA);\r\n\t\t\tpositions = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tpositions[index] = values[i++];\r\n\t\t\t\tpositions[index + 1] = values[i++];\r\n\t\t\t\tpositions[index + 2] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyNormalsUpdate();\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyUVsUpdate()\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\r\n\t\tthis._positionsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic updateVertexNormals(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar normals:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif ((this._vertexNormals == null || values == null) && (this._vertexNormals != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._vertexNormals = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\r\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\r\n\t\t\t\tnormals = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tnormals[index] = values[i++];\r\n\t\t\t\t\tnormals[index + 1] = values[i++];\r\n\t\t\t\t\tnormals[index + 2] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._vertexNormals == null) {\r\n\t\t\t\tthis._vertexNormals = new Array<number>(this._positions.length);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\r\n\r\n\t\t\t//autoderived normals\r\n\t\t\tnormals = this._concatenateArrays? this._pVertices : this._vertexNormals;\r\n\r\n\t\t\tvar f1:number = 0;\r\n\t\t\tvar f2:number = 1;\r\n\t\t\tvar f3:number = 2;\r\n\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//clear normal values\r\n\t\t\tvar lenV:number = normals.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tnormals[index] = 0;\r\n\t\t\t\tnormals[index + 1] = 0;\r\n\t\t\t\tnormals[index + 2] = 0;\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\r\n\t\t\tvar k:number = 0;\r\n\t\t\tvar lenI:number = this._pIndices.length;\r\n\t\t\tvar weight:number;\r\n\r\n\t\t\ti = 0;\r\n\r\n\t\t\t//collect face normals\r\n\t\t\twhile (i < lenI) {\r\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\r\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\r\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\r\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\r\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\r\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\r\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\r\n\t\t\t\tf1 += 3;\r\n\t\t\t\tf2 += 3;\r\n\t\t\t\tf3 += 3;\r\n\t\t\t}\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//average normals collections\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tvar vx:number = normals[index];\r\n\t\t\t\tvar vy:number = normals[index + 1];\r\n\t\t\t\tvar vz:number = normals[index + 2];\r\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index] = vx*d;\r\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 1] = vy*d;\r\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 2] = vz*d;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnormals[index] = vx*d;\r\n\t\t\t\t\tnormals[index + 1] = vy*d;\r\n\t\t\t\t\tnormals[index + 2] = vz*d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyNormalsUpdate();\r\n\r\n\t\tthis._vertexNormalsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic updateVertexTangents(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif ((this._vertexTangents == null || values == null) && (this._vertexTangents != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._vertexTangents = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\r\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\r\n\t\t\t\ttangents = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\ttangents[index] = values[i++];\r\n\t\t\t\t\ttangents[index + 1] = values[i++];\r\n\t\t\t\t\ttangents[index + 2] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._vertexTangents == null) {\r\n\t\t\t\tthis._vertexTangents = new Array<number>(this._positions.length);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\t\t//autoderived tangents\r\n\t\t\ttangents = this._concatenateArrays? this._pVertices : this._vertexTangents;\r\n\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//clear tangent values\r\n\t\t\tvar lenV:number = tangents.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\ttangents[index] = 0;\r\n\t\t\t\ttangents[index + 1] = 0;\r\n\t\t\t\ttangents[index + 2] = 0;\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\r\n\t\t\tvar k:number = 0;\r\n\t\t\tvar weight:number;\r\n\t\t\tvar f1:number = 0;\r\n\t\t\tvar f2:number = 1;\r\n\t\t\tvar f3:number = 2;\r\n\r\n\t\t\ti = 0;\r\n\r\n\t\t\t//collect face tangents\r\n\t\t\tvar lenI:number = this._pIndices.length;\r\n\t\t\twhile (i < lenI) {\r\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\r\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\r\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\r\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\r\n\t\t\t\tf1 += 3;\r\n\t\t\t\tf2 += 3;\r\n\t\t\t\tf3 += 3;\r\n\t\t\t}\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//average tangents collections\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tvar vx:number = tangents[index];\r\n\t\t\t\tvar vy:number = tangents[index + 1];\r\n\t\t\t\tvar vz:number = tangents[index + 2];\r\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index] = vx*d;\r\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 1] = vy*d;\r\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 2] = vz*d;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttangents[index] = vx*d;\r\n\t\t\t\t\ttangents[index + 1] = vy*d;\r\n\t\t\t\t\ttangents[index + 2] = vz*d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tthis._vertexTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic updateUVs(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._uvs = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.UV_DATA);\r\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\r\n\t\t\t\tuvs = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tuvs[index] = values[i++];\r\n\t\t\t\t\tuvs[index + 1] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tif (this._uvs == null) {\r\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.UV_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\r\n\r\n\t\t\t//autoderived uvs\r\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tvar uvIdx:number = 0;\r\n\r\n\t\t\t//clear uv values\r\n\t\t\tvar lenV:number = uvs.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuvs[index] = uvIdx*.5;\r\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (++uvIdx == 3)\r\n\t\t\t\t\tuvIdx = 0;\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\r\n\t\tthis._uvsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic updateSecondaryUVs(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays && (this._secondaryUVs == null || values == null) && (this._secondaryUVs != null || values != null))\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\r\n\t\tthis._secondaryUVs = values;\r\n\r\n\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.SECONDARY_UV_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.SECONDARY_UV_DATA);\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tuvs = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tuvs[index] = values[i++];\r\n\t\t\t\tuvs[index + 1] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifySecondaryUVsUpdate();\r\n\r\n\t\tthis._secondaryUVsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic updateJointIndices(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar jointIndices:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays && (this._jointIndices == null || values == null) && (this._jointIndices != null || values != null))\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\r\n\t\tthis._jointIndices = values;\r\n\r\n\t\tif (values != null) {\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_INDEX_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_INDEX_DATA);\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tj = 0;\r\n\t\t\t\tindex = offset;\r\n\t\t\t\tjointIndices = this._concatenateArrays? this._pVertices : this._condensedJointIndices;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tif (!this._concatenateArrays)\r\n\t\t\t\t\tthis._condensedJointIndices = new Array<number>(values.length);\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tfor (j = 0; j < this._jointsPerVertex; j++) {\r\n\t\t\t\t\t\toldIndex = values[i++];\r\n\r\n\t\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\t\tdic[oldIndex] = newIndex*3; //3 required for the three vectors that store the matrix\r\n\t\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tjointIndices[index + j] = dic[oldIndex];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t\tthis._numCondensedJoints = newIndex;\r\n\t\t\t} else if (this._concatenateArrays) {\r\n\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = offset;\r\n\t\t\t\tjointIndices = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile (j < this._jointsPerVertex)\r\n\t\t\t\t\t\tjointIndices[index + j++] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyJointIndicesUpdate();\r\n\r\n\t\tthis._jointIndicesDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic updateJointWeights(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar jointWeights:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays && (this._jointWeights == null || values == null) && (this._jointWeights != null || values != null))\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\r\n\t\tthis._jointWeights = values;\r\n\r\n\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_WEIGHT_DATA);\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tjointWeights = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tj = 0;\r\n\t\t\t\twhile (j < this._jointsPerVertex)\r\n\t\t\t\t\tjointWeights[index + j++] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyJointWeightsUpdate();\r\n\r\n\t\tthis._jointWeightsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._vertexNormals = null;\r\n\t\tthis._vertexTangents = null;\r\n\t\tthis._uvs = null;\r\n\t\tthis._secondaryUVs = null;\r\n\t\tthis._jointIndices = null;\r\n\t\tthis._jointWeights = null;\r\n\r\n\t\tthis._faceNormals = null;\r\n\t\tthis._faceWeights = null;\r\n\t\tthis._faceTangents = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic updateIndices(indices:Array<number>)\r\n\t{\r\n\t\tsuper.updateIndices(indices);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis._vertexNormalsDirty = true;\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis._vertexTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenateArrays);\r\n\t\tclone.updateIndices(this._pIndices.concat());\r\n\t\tclone.updatePositions(this._positions.concat());\r\n\r\n\t\tif (this._vertexNormals && !this._autoDeriveNormals)\r\n\t\t\tclone.updateVertexNormals(this._vertexNormals.concat());\r\n\t\telse\r\n\t\t\tclone.updateVertexNormals(null);\r\n\r\n\t\tif (this._uvs && !this._autoDeriveUVs)\r\n\t\t\tclone.updateUVs(this._uvs.concat());\r\n\t\telse\r\n\t\t\tclone.updateUVs(null);\r\n\r\n\t\tif (this._vertexTangents && !this._autoDeriveTangents)\r\n\t\t\tclone.updateVertexTangents(this._vertexTangents.concat());\r\n\t\telse\r\n\t\t\tclone.updateVertexTangents(null);\r\n\r\n\t\tif (this._secondaryUVs)\r\n\t\t\tclone.updateSecondaryUVs(this._secondaryUVs.concat());\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\t\t\tclone.updateJointIndices(this._jointIndices.concat());\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tclone.updateJointWeights(this._jointWeights.concat());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tuvs = this._uvs;\r\n\r\n\t\tvar ratioU:number = scaleU/this._scaleU;\r\n\t\tvar ratioV:number = scaleV/this._scaleV;\r\n\r\n\t\tthis._scaleU = scaleU;\r\n\t\tthis._scaleV = scaleV;\r\n\r\n\t\tvar len:number = uvs.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 2;\r\n\r\n\t\tindex = offset;\r\n\r\n\t\twhile (index < len) {\r\n\t\t\tuvs[index] *= ratioU;\r\n\t\t\tuvs[index + 1] *= ratioV;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tpositions = this._positions;\r\n\r\n\t\tvar len:number = positions.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 3;\r\n\r\n\t\ti = 0;\r\n\t\tindex = offset;\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[index] *= scale;\r\n\t\t\tpositions[index + 1] *= scale;\r\n\t\t\tpositions[index + 2] *= scale;\r\n\r\n\t\t\ti += 3;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tpositions = this._pVertices;\r\n\t\t\tnormals = this._pVertices;\r\n\t\t\ttangents = this._pVertices;\r\n\t\t} else {\r\n\t\t\tpositions = this._positions;\r\n\t\t\tnormals = this._vertexNormals;\r\n\t\t\ttangents = this._vertexTangents;\r\n\t\t}\r\n\r\n\t\tvar len:number = this._positions.length/3;\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\r\n\t\tvar bakeNormals:boolean = this._vertexNormals != null;\r\n\t\tvar bakeTangents:boolean = this._vertexTangents != null;\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (bakeNormals || bakeTangents) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = this.getOffset(TriangleSubGeometry.POSITION_DATA);\r\n\t\tvar ni0:number = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\r\n\t\tvar ti0:number = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\tvar vStride:number = this.getStride(TriangleSubGeometry.POSITION_DATA);\r\n\t\tvar nStride:number = this.getStride(TriangleSubGeometry.NORMAL_DATA);\r\n\t\tvar tStride:number = this.getStride(TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\r\n\t\t\t// bake position\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += vStride;\r\n\r\n\t\t\t// bake normal\r\n\t\t\tif (bakeNormals) {\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += nStride;\r\n\t\t\t}\r\n\r\n\t\t\t// bake tangent\r\n\t\t\tif (bakeTangents) {\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tStride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyNormalsUpdate();\r\n\t\tthis.notifyTangentsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\tvar positions:Array<number> = this._positions\r\n\t\tvar uvs:Array<number> = this._uvs;\r\n\r\n\t\tvar len:number = this._pIndices.length;\r\n\r\n\t\tif (this._faceTangents == null)\r\n\t\t\tthis._faceTangents = new Array<number>(len);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tindex1 = this._pIndices[i];\r\n\t\t\tindex2 = this._pIndices[i + 1];\r\n\t\t\tindex3 = this._pIndices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*2 + 1];\r\n\t\t\tdv1 = uvs[index2*2 + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*2 + 1] - v0;\r\n\r\n\t\t\tvi = index1*3;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*3;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*3;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tthis._faceTangents[i++] = denom*cx;\r\n\t\t\tthis._faceTangents[i++] = denom*cy;\r\n\t\t\tthis._faceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\tvar positions:Array<number> = this._positions;\r\n\r\n\t\tvar len:number = this._pIndices.length;\r\n\r\n\t\tif (this._faceNormals == null)\r\n\t\t\tthis._faceNormals = new Array<number>(len);\r\n\r\n\t\tif (this._useFaceWeights && this._faceWeights == null)\r\n\t\t\tthis._faceWeights = new Array<number>(len/3);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tif (this._useFaceWeights) {\r\n\t\t\t\tvar w:number = d*10000;\r\n\r\n\t\t\t\tif (w < 1)\r\n\t\t\t\t\tw = 1;\r\n\r\n\t\t\t\tthis._faceWeights[k++] = w;\r\n\t\t\t}\r\n\r\n\t\t\td = 1/d;\r\n\r\n\t\t\tthis._faceNormals[j++] = cx*d;\r\n\t\t\tthis._faceNormals[j++] = cy*d;\r\n\t\t\tthis._faceNormals[j++] = cz*d;\r\n\t\t}\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyNormalsUpdate();\r\n\t\tthis.notifyTangentsUpdate();\r\n\t\tthis.notifyUVsUpdate();\r\n\t\tthis.notifySecondaryUVsUpdate();\r\n\t\tthis.notifyJointIndicesUpdate();\r\n\t\tthis.notifyJointWeightsUpdate();\r\n\t}\r\n\r\n\tprivate notifyPositionsUpdate()\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionsDirty = true;\r\n\r\n\t\tif (!this._positionsUpdated)\r\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._positionsUpdated);\r\n\t}\r\n\r\n\tprivate notifyNormalsUpdate()\r\n\t{\r\n\t\tif (this._vertexNormalsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._vertexNormalsDirty = true;\r\n\r\n\t\tif (!this._normalsUpdated)\r\n\t\t\tthis._normalsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.NORMAL_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._normalsUpdated);\r\n\t}\r\n\r\n\tprivate notifyTangentsUpdate()\r\n\t{\r\n\t\tif (this._vertexTangentsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._vertexTangentsDirty = true;\r\n\r\n\t\tif (!this._tangentsUpdated)\r\n\t\t\tthis._tangentsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._tangentsUpdated);\r\n\t}\r\n\r\n\tprivate notifyUVsUpdate()\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._uvsDirty = true;\r\n\r\n\t\tif (!this._uvsUpdated)\r\n\t\t\tthis._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.UV_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._uvsUpdated);\r\n\t}\r\n\r\n\tprivate notifySecondaryUVsUpdate()\r\n\t{\r\n\t\tif (this._secondaryUVsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._secondaryUVsDirty = true;\r\n\r\n\t\tif (!this._secondaryUVsUpdated)\r\n\t\t\tthis._secondaryUVsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.SECONDARY_UV_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._secondaryUVsUpdated);\r\n\t}\r\n\r\n\tprivate notifyJointIndicesUpdate()\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointIndicesDirty = true;\r\n\r\n\t\tif (!this._jointIndicesUpdated)\r\n\t\t\tthis._jointIndicesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_INDEX_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._jointIndicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyJointWeightsUpdate()\r\n\t{\r\n\t\tif (this._jointWeightsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointWeightsDirty = true;\r\n\r\n\t\tif (!this._jointWeightsUpdated)\r\n\t\t\tthis._jointWeightsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_WEIGHT_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._jointWeightsUpdated);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nclass AbstractMethodError extends Error\r\n{\r\n\t/**\r\n\t * Create a new AbstractMethodError.\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\r\n\t}\r\n}\r\n\r\nexport = AbstractMethodError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nclass ArgumentError extends Error\r\n{\r\n\t/**\r\n\t * Create a new ArgumentError.\r\n\t *\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"ArgumentError\", id);\r\n\t}\r\n}\r\n\r\nexport = ArgumentError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass DocumentError extends Error\r\n{\r\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\r\n\r\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\r\n\t{\r\n\t\tsuper(message, id);\r\n\t}\r\n}\r\n\r\nexport = DocumentError;",
    "class Error\r\n{\r\n\r\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\r\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\r\n\tprivate _name:string = '';  // Contains the name of the Error object.\r\n\r\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\r\n\t{\r\n\r\n\t\tthis._messsage = message;\r\n\t\tthis._name = name;\r\n\t\tthis._errorID = id;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get message():string\r\n\t{\r\n\r\n\t\treturn this._messsage;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set message(value:string)\r\n\t{\r\n\r\n\t\tthis._messsage = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get name():string\r\n\t{\r\n\r\n\t\treturn this._name;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set name(value:string)\r\n\t{\r\n\r\n\t\tthis._name = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get errorID():number\r\n\t{\r\n\r\n\t\treturn this._errorID;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = Error;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nclass PartialImplementationError extends Error\r\n{\r\n\t/**\r\n\t * Create a new AbstractMethodError.\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(dependency:string = '', id:number = 0)\r\n\t{\r\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\r\n\t}\r\n}\r\n\r\nexport = PartialImplementationError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * RangeError is thrown when an index is accessed out of range of the number of\r\n * available indices on an Array.\r\n */\r\nclass RangeError extends Error\r\n{\r\n\t/**\r\n\t * Create a new RangeError.\r\n\t *\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"RangeError\", id);\r\n\t}\r\n}\r\n\r\nexport = RangeError;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * @class away.events.AssetEvent\r\n */\r\nclass AssetEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ASSET_RENAME:string = 'assetRename';\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\r\n\r\n\tprivate _asset:IAsset;\r\n\tprivate _prevName:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(type:string, asset:IAsset = null, prevName:string = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._asset = asset;\r\n\t\tthis._prevName = prevName || (this._asset? this._asset.name : null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get asset():IAsset\r\n\t{\r\n\t\treturn this._asset;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetPrevName():string\r\n\t{\r\n\t\treturn this._prevName;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn <Event> new AssetEvent(this.type, this.asset, this.assetPrevName);\r\n\t}\r\n}\r\n\r\nexport = AssetEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Base class for dispatching events\r\n*\r\n* @class away.events.EventDispatcher\r\n*\r\n*/\r\nclass EventDispatcher\r\n{\r\n\tprivate listeners:Array<Array<Function>> = new Array<Array<Function>>();\r\n\tprivate target:any;\r\n\r\n\tconstructor(target:any = null)\r\n\t{\r\n\t\tthis.target = target || this;\r\n\t}\r\n\r\n\t/**\r\n\t * Add an event listener\r\n\t * @method addEventListener\r\n\t * @param {String} Name of event to add a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tif (this.listeners[ type ] === undefined)\r\n\t\t\tthis.listeners[ type ] = new Array<Function>();\r\n\r\n\t\tif (this.getEventListenerIndex(type, listener) === -1)\r\n\t\t\tthis.listeners[ type ].push(listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an event listener\r\n\t * @method removeEventListener\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tvar index:number = this.getEventListenerIndex(type, listener);\r\n\r\n\t\tif (index !== -1)\r\n\t\t\tthis.listeners[ type ].splice(index, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatch an event\r\n\t * @method dispatchEvent\r\n\t * @param {Event} Event to dispatch\r\n\t */\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\tvar listenerArray:Array<Function> = this.listeners[ event.type ];\r\n\r\n\t\tif (listenerArray !== undefined) {\r\n\t\t\tvar l:number = listenerArray.length;\r\n\r\n\t\t\tevent.target = this.target;\r\n\r\n\t\t\tfor (var i:number = 0; i < l; i++)\r\n\t\t\t\tlistenerArray[i](event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get Event Listener Index in array. Returns -1 if no listener is added\r\n\t * @method getEventListenerIndex\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tprivate getEventListenerIndex(type:string, listener:Function):number\r\n\t{\r\n\t\tif (this.listeners[ type ] !== undefined) {\r\n\t\t\tvar a:Array<Function> = this.listeners[ type ];\r\n\t\t\tvar l:number = a.length;\r\n\r\n\t\t\tfor (var i:number = 0; i < l; i++)\r\n\t\t\t\tif (listener == a[i])\r\n\t\t\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * check if an object has an event listener assigned to it\r\n\t * @method hasListener\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic hasEventListener(type:string, listener?:Function):boolean\r\n\t{\r\n\t\tif (listener != null) {\r\n\t\t\treturn ( this.getEventListenerIndex(type, listener) !== -1 );\r\n\t\t} else {\r\n\t\t\tif (this.listeners[ type ] !== undefined)\r\n\t\t\t\treturn ( this.listeners[ type ].length > 0 );\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = EventDispatcher;",
    "class Event\r\n{\r\n\r\n\tpublic static COMPLETE:string = 'complete';\r\n\tpublic static OPEN:string = 'open';\r\n\r\n\tpublic static ENTER_FRAME:string = 'enterFrame';\r\n\tpublic static EXIT_FRAME:string = 'exitFrame';\r\n\r\n\r\n\tpublic static RESIZE:string = \"resize\";\r\n\tpublic static ERROR:string = \"error\";\r\n\tpublic static CHANGE:string = \"change\";\r\n\r\n\t/**\r\n\t * Type of event\r\n\t * @property type\r\n\t * @type String\r\n\t */\r\n\tpublic type:string = undefined;\r\n\r\n\t/**\r\n\t * Reference to target object\r\n\t * @property target\r\n\t * @type Object\r\n\t */\r\n\tpublic target:any = undefined;\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current event.\r\n\t * @return An exact duplicate of the current event.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new Event(this.type);\r\n\t}\r\n}\r\n\r\nexport = Event;",
    "import SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * @class away.events.HTTPStatusEvent\r\n */\r\nclass HTTPStatusEvent extends Event\r\n{\r\n\r\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\r\n\r\n\tpublic status:number;\r\n\r\n\tconstructor(type:string, status:number = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.status = status;\r\n\r\n\t}\r\n}\r\n\r\nexport = HTTPStatusEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass IOErrorEvent extends Event\r\n{\r\n\r\n\tpublic static IO_ERROR:string = \"ioError\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t}\r\n}\r\n\r\nexport = IOErrorEvent;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LoaderEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a resource and all of its dependencies is retrieved.\r\n\t */\r\n\tpublic static RESOURCE_COMPLETE:string = \"resourceComplete\";\r\n\r\n\tprivate _url:string;\r\n\tprivate _content:IAsset;\r\n\tprivate _assets:IAsset[];\r\n\r\n\t/**\r\n\t * Create a new LoaderEvent object.\r\n\t *\r\n\t * @param type The event type.\r\n\t * @param url The url of the loaded resource.\r\n\t * @param assets The assets of the loaded resource.\r\n\t */\r\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._url = url;\r\n\t\tthis._content = content;\r\n\t\tthis._assets = assets;\r\n\t}\r\n\r\n\t/**\r\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\r\n\t */\r\n\tpublic get content():IAsset\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The url of the loaded resource.\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n\r\n\t/**\r\n\t * The error string on loadError.\r\n\t */\r\n\tpublic get assets():IAsset[]\r\n\t{\r\n\t\treturn this._assets;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current event.\r\n\t * @return An exact duplicate of the current event.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn <Event> new LoaderEvent(this.type, this._url, this._content, this._assets);\r\n\t}\r\n}\r\n\r\nexport = LoaderEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ParserEvent extends Event\r\n{\r\n\tprivate _message:string;\r\n\r\n\t/**\r\n\t * Dispatched when parsing of an asset completed.\r\n\t */\r\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\r\n\r\n\t/**\r\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\r\n\t * incorrectly formatted.)\r\n\t */\r\n\tpublic static PARSE_ERROR:string = 'parseError';\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\r\n\t * This is an internal event that should rarely (if ever) be listened for by\r\n\t * external classes.\r\n\t */\r\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\r\n\r\n\r\n\tconstructor(type:string, message:string = '')\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._message = message;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\r\n\t */\r\n\tpublic get message():string\r\n\t{\r\n\t\treturn this._message;\r\n\t}\r\n\r\n\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new ParserEvent(this.type, this.message);\r\n\t}\r\n}\r\n\r\nexport = ParserEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ProgressEvent extends Event\r\n{\r\n\tpublic static PROGRESS:string = \"progress\";\r\n\r\n\tpublic bytesLoaded:number;\r\n\r\n\tpublic bytesTotal:number;\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = ProgressEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nclass ProjectionEvent extends Event\r\n{\r\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\r\n\r\n\tprivate _projection:IProjection;\r\n\r\n\tconstructor(type:string, projection:IProjection)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis._projection = projection;\r\n\t}\r\n\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n}\r\n\r\nexport = ProjectionEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\tprivate _dataType:string;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, dataType:string = \"\")\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._dataType = dataType;\r\n\t}\r\n\r\n\t/**\r\n\t * The data type of the vertex data.\r\n\t */\r\n\tpublic get dataType():string\r\n\t{\r\n\t\treturn this._dataType;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._dataType);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass TimerEvent extends Event\r\n{\r\n\r\n\tpublic static TIMER:string = \"timer\";\r\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t}\r\n}\r\n\r\nexport = TimerEvent",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n/**\r\n * A Box object is an area defined by its position, as indicated by its\r\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\r\n * height and depth.\r\n *\r\n *\r\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n * <code>height</code> <code>depth</code> properties of the Box class are\r\n * independent of each other; changing the value of one property has no effect\r\n * on the others. However, the <code>right</code>, <code>bottom</code> and\r\n * <code>back</code> properties are integrally related to those six\r\n * properties. For example, if you change the value of the <code>right</code>\r\n * property, the value of the <code>width</code> property changes; if you\r\n * change the <code>bottom</code> property, the value of the\r\n * <code>height</code> property changes. </p>\r\n *\r\n * <p>The following methods and properties use Box objects:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Box()</code> constructor to create a\r\n * Box object.</p>\r\n *\r\n * <p><b>Note:</b> The Box class does not define a cubic Shape\r\n * display object.\r\n */\r\nclass Box\r\n{\r\n\tprivate _size:Vector3D;\r\n\tprivate _bottomRightBack:Vector3D;\r\n\tprivate _topLeftFront:Vector3D;\r\n\r\n\t/**\r\n\t * The height of the box, in pixels. Changing the <code>height</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The width of the box, in pixels. Changing the <code>width</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic depth:number;\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>x</code> property of a Box object has no\r\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>x</code> property is equal to the value of the\r\n\t * <code>left</code> property.</p>\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>y</code> property of a Box object has no\r\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>y</code> property is equal to the value of the\r\n\t * <code>top</code> property.</p>\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>z</code> property of a Box object has no\r\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>z</code> property is equal to the value of the\r\n\t * <code>front</code> property.</p>\r\n\t */\r\n\tpublic z:number\r\n\r\n\t/**\r\n\t * The sum of the <code>z</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get back():number\r\n\t{\r\n\t\treturn this.z + this.depth;\r\n\t}\r\n\r\n\tpublic set back(val:number)\r\n\t{\r\n\t\tthis.depth = val - this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>y</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get bottom():number\r\n\t{\r\n\t\treturn this.y + this.height;\r\n\t}\r\n\r\n\tpublic set bottom(val:number)\r\n\t{\r\n\t\tthis.height = val - this.y;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Box object's bottom-right corner, determined by the\r\n\t * values of the <code>right</code> and <code>bottom</code> properties.\r\n\t */\r\n\tpublic get bottomRightBack():Vector3D\r\n\t{\r\n\t\tif (this._bottomRightBack == null)\r\n\t\t\tthis._bottomRightBack = new Vector3D();\r\n\r\n\t\tthis._bottomRightBack.x = this.x + this.width;\r\n\t\tthis._bottomRightBack.y = this.y + this.height;\r\n\t\tthis._bottomRightBack.z = this.z + this.depth;\r\n\r\n\t\treturn this._bottomRightBack;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\r\n\t * the <code>front</code> property of a Box object has no effect on the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\r\n\t * properties. However it does affect the <code>depth</code> property,\r\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\r\n\t * <code>depth</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get front():number\r\n\t{\r\n\t\treturn this.z;\r\n\t}\r\n\r\n\tpublic set front(val:number)\r\n\t{\r\n\t\tthis.depth += this.z - val;\r\n\t\tthis.z = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\r\n\t * <code>left</code> property of a Box object has no effect on the\r\n\t * <code>y</code> and <code>height</code> properties. However it does affect\r\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\r\n\t * does <i>not</i> affect the <code>width</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get left():number\r\n\t{\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\tpublic set left(val:number)\r\n\t{\r\n\t\tthis.width += this.x - val;\r\n\t\tthis.x = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>x</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic get right():number\r\n\t{\r\n\t\treturn this.x + this.width;\r\n\t}\r\n\r\n\tpublic set right(val:number)\r\n\t{\r\n\t\tthis.width = val - this.x;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the Box object, expressed as a Vector3D object with the\r\n\t * values of the <code>width</code>, <code>height</code> and\r\n\t * <code>depth</code> properties.\r\n\t */\r\n\tpublic get size():Vector3D\r\n\t{\r\n\t\tif (this._size == null)\r\n\t\t\tthis._size = new Vector3D();\r\n\r\n\t\tthis._size.x = this.width;\r\n\t\tthis._size.y = this.height;\r\n\t\tthis._size.z = this.depth;\r\n\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\r\n\t * the <code>top</code> property of a Box object has no effect on the\r\n\t * <code>x</code> and <code>width</code> properties. However it does affect\r\n\t * the <code>height</code> property, whereas changing the <code>y</code>\r\n\t * value does <i>not</i> affect the <code>height</code> property.\r\n\t *\r\n\t * <p>The value of the <code>top</code> property is equal to the value of the\r\n\t * <code>y</code> property.</p>\r\n\t */\r\n\tpublic get top():number\r\n\t{\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\tpublic set top(val:number)\r\n\t{\r\n\t\tthis.height += (this.y - val);\r\n\t\tthis.y = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Box object's top-left-front corner, determined by the\r\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\r\n\t */\r\n\tpublic get topLeftFront():Vector3D\r\n\t{\r\n\t\tif (this._topLeftFront == null)\r\n\t\t\tthis._topLeftFront = new Vector3D();\r\n\r\n\t\tthis._topLeftFront.x = this.x;\r\n\t\tthis._topLeftFront.y = this.y;\r\n\t\tthis._topLeftFront.z = this.z;\r\n\r\n\t\treturn this._topLeftFront;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Box object with the top-left-front corner specified by the\r\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\r\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\r\n\t * parameters. If you call this public without parameters, a box with\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\r\n\t *\r\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param width  The width of the box, in pixels.\r\n\t * @param height The height of the box, in pixels.\r\n\t * @param depth The depth of the box, in pixels.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.depth = depth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Box object with the same values for the <code>x</code>,\r\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\r\n\t * and <code>depth</code> properties as the original Box object.\r\n\t *\r\n\t * @return A new Box object with the same values for the <code>x</code>,\r\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t *         <code>height</code> and <code>depth</code> properties as the\r\n\t *         original Box object.\r\n\t */\r\n\tpublic clone():Box\r\n\t{\r\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified position is contained within the cubic\r\n\t * region defined by this Box object.\r\n\t *\r\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\r\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\r\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\r\n\t * @return A value of <code>true</code> if the Box object contains the\r\n\t *         specified position; otherwise <code>false</code>.\r\n\t */\r\n\tpublic contains(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified position is contained within the cubic\r\n\t * region defined by this Box object. This method is similar to the\r\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\r\n\t * object as a parameter.\r\n\t *\r\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\r\n\t *                 <i>z</i> coordinates.\r\n\t * @return A value of <code>true</code> if the Box object contains the\r\n\t *         specified position; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsPoint(position:Vector3D):boolean\r\n\t{\r\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the Box object specified by the <code>box</code>\r\n\t * parameter is contained within this Box object. A Box object is said to\r\n\t * contain another if the second Box object falls entirely within the\r\n\t * boundaries of the first.\r\n\t *\r\n\t * @param box The Box object being checked.\r\n\t * @return A value of <code>true</code> if the Box object that you specify\r\n\t *         is contained by this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsBox(box:Box):boolean\r\n\t{\r\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of box data from the source Box object into the calling\r\n\t * Box object.\r\n\t *\r\n\t * @param sourceBox The Box object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceBox:Box)\r\n\t{\r\n\t\tthis.x = sourceBox.x;\r\n\t\tthis.y = sourceBox.y;\r\n\t\tthis.z = sourceBox.z;\r\n\t\tthis.width = sourceBox.width;\r\n\t\tthis.height = sourceBox.height;\r\n\t\tthis.depth = sourceBox.depth;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toCompare</code>\r\n\t * parameter is equal to this Box object. This method compares the\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties of an object against\r\n\t * the same properties of this Box object.\r\n\t *\r\n\t * @param toCompare The box to compare to this Box object.\r\n\t * @return A value of <code>true</code> if the object has exactly the same\r\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\r\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\r\n\t *         properties as this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic equals(toCompare:Box):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Box object by the specified amounts, in\r\n\t * pixels. The center point of the Box object stays the same, and its\r\n\t * size increases to the left and right by the <code>dx</code> value, to\r\n\t * the top and the bottom by the <code>dy</code> value, and to\r\n\t * the front and the back by the <code>dz</code> value.\r\n\t *\r\n\t * @param dx The value to be added to the left and the right of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           width and position of the box:\r\n\t * @param dy The value to be added to the top and the bottom of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           height and position of the box:\r\n\t * @param dz The value to be added to the front and the back of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           depth and position of the box:\r\n\t */\r\n\tpublic inflate(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tthis.x -= dx/2;\r\n\t\tthis.y -= dy/2;\r\n\t\tthis.z -= dz/2;\r\n\t\tthis.width += dx/2;\r\n\t\tthis.height += dy/2;\r\n\t\tthis.depth += dz/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Box object. This method is similar to the\r\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\r\n\t * a parameter.\r\n\t *\r\n\t * <p>The following two code examples give the same result:</p>\r\n\t *\r\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\r\n\t *              increase the horizontal dimension of the Box object.\r\n\t *              The <code>y</code> property is used to increase the vertical\r\n\t *              dimension of the Box object.\r\n\t *              The <code>z</code> property is used to increase the\r\n\t *              longitudinal dimension of the Box object.\r\n\t */\r\n\tpublic inflatePoint(delta:Vector3D)\r\n\t{\r\n\t\tthis.x -= delta.x/2;\r\n\t\tthis.y -= delta.y/2;\r\n\t\tthis.z -= delta.z/2;\r\n\t\tthis.width += delta.x/2;\r\n\t\tthis.height += delta.y/2;\r\n\t\tthis.depth += delta.z/2;\r\n\t}\r\n\r\n\t/**\r\n\t * If the Box object specified in the <code>toIntersect</code> parameter\r\n\t * intersects with this Box object, returns the area of intersection\r\n\t * as a Box object. If the boxes do not intersect, this method returns an\r\n\t * empty Box object with its properties set to 0.\r\n\t *\r\n\t * @param toIntersect The Box object to compare against to see if it\r\n\t *                    intersects with this Box object.\r\n\t * @return A Box object that equals the area of intersection. If the\r\n\t *         boxes do not intersect, this method returns an empty Box\r\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\r\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\r\n\t *         <code>depth</code> properties set to 0.\r\n\t */\r\n\tpublic intersection(toIntersect:Box):Box\r\n\t{\r\n\t\tif (this.intersects(toIntersect)) {\r\n\t\t\tvar i:Box = new Box();\r\n\r\n\t\t\tif (this.x > toIntersect.x) {\r\n\t\t\t\ti.x = this.x;\r\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\r\n\r\n\t\t\t\tif (i.width > this.width)\r\n\t\t\t\t\ti.width = this.width;\r\n\t\t\t} else {\r\n\t\t\t\ti.x = toIntersect.x;\r\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\r\n\r\n\t\t\t\tif (i.width > toIntersect.width)\r\n\t\t\t\t\ti.width = toIntersect.width;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.y > toIntersect.y) {\r\n\t\t\t\ti.y = this.y;\r\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\r\n\r\n\t\t\t\tif (i.height > this.height)\r\n\t\t\t\t\ti.height = this.height;\r\n\t\t\t} else {\r\n\t\t\t\ti.y = toIntersect.y;\r\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\r\n\r\n\t\t\t\tif (i.height > toIntersect.height)\r\n\t\t\t\t\ti.height = toIntersect.height;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this.z > toIntersect.z) {\r\n\t\t\t\ti.z = this.z;\r\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\r\n\r\n\t\t\t\tif (i.depth > this.depth)\r\n\t\t\t\t\ti.depth = this.depth;\r\n\t\t\t} else {\r\n\t\t\t\ti.z = toIntersect.z;\r\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\r\n\r\n\t\t\t\tif (i.depth > toIntersect.depth)\r\n\t\t\t\t\ti.depth = toIntersect.depth;\r\n\t\t\t}\r\n\r\n\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn new Box();\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Box object. This method checks the\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code>, and <code>depth</code> properties of the specified\r\n\t * Box object to see if it intersects with this Box object.\r\n\t *\r\n\t * @param toIntersect The Box object to compare against this Box object.\r\n\t * @return A value of <code>true</code> if the specified object intersects\r\n\t *         with this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic intersects(toIntersect:Box):boolean\r\n\t{\r\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif (this.containsPoint(position))\r\n\t\t\treturn 0;\r\n\r\n\t\tvar halfExtentsX:number = this.width/2;\r\n\t\tvar halfExtentsY:number = this.height/2;\r\n\t\tvar halfExtentsZ:number = this.depth/2;\r\n\r\n\t\tvar centerX:number = this.x + halfExtentsX;\r\n\t\tvar centerY:number = this.y + halfExtentsY;\r\n\t\tvar centerZ:number = this.z + halfExtentsZ;\r\n\r\n\t\tvar px:number = position.x - centerX;\r\n\t\tvar py:number = position.y - centerY;\r\n\t\tvar pz:number = position.z - centerZ;\r\n\r\n\t\tvar vx:number = direction.x\r\n\t\tvar vy:number = direction.y\r\n\t\tvar vz:number = direction.z;\r\n\r\n\t\tvar ix:number;\r\n\t\tvar iy:number;\r\n\t\tvar iz:number;\r\n\t\tvar rayEntryDistance:number;\r\n\r\n\t\t// ray-plane tests\r\n\t\tvar intersects:boolean;\r\n\t\tif (vx < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsX - px )/vx;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 1;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vx > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsX - px )/vx;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = -1;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vy < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsY - py )/vy;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 1;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vy > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsY - py )/vy;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = -1;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vz < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsZ - pz )/vz;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 1;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vz > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsZ - pz )/vz;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = -1;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn intersects? rayEntryDistance : -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\r\n\t *\r\n\t * @param point The point for which to find the closest point on the Box\r\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\r\n\t * @return\r\n\t */\r\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\r\n\t{\r\n\t\tvar p:number;\r\n\r\n\t\tif (target == null)\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\tp = point.x;\r\n\t\tif (p < this.x)\r\n\t\t\tp = this.x;\r\n\t\tif (p > this.x + this.width)\r\n\t\t\tp = this.x + this.width;\r\n\t\ttarget.x = p;\r\n\r\n\t\tp = point.y;\r\n\t\tif (p < this.y + this.height)\r\n\t\t\tp = this.y + this.height;\r\n\t\tif (p > this.y)\r\n\t\t\tp = this.y;\r\n\t\ttarget.y = p;\r\n\r\n\t\tp = point.z;\r\n\t\tif (p < this.z)\r\n\t\t\tp = this.z;\r\n\t\tif (p > this.z + this.depth)\r\n\t\t\tp = this.z + this.depth;\r\n\t\ttarget.z = p;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not this Box object is empty.\r\n\t *\r\n\t * @return A value of <code>true</code> if the Box object's width, height or\r\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\r\n\t */\r\n\tpublic isEmpty():boolean\r\n\t{\r\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Box object, as determined by its\r\n\t * top-left-front corner, by the specified amounts.\r\n\t *\r\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\r\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\r\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\r\n\t */\r\n\tpublic offset(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t\tthis.z += dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Box object using a Vector3D object as a\r\n\t * parameter. This method is similar to the <code>Box.offset()</code>\r\n\t * method, except that it takes a Vector3D object as a parameter.\r\n\t *\r\n\t * @param position A Vector3D object to use to offset this Box object.\r\n\t */\r\n\tpublic offsetPosition(position:Vector3D)\r\n\t{\r\n\t\tthis.x += position.x;\r\n\t\tthis.y += position.y;\r\n\t\tthis.z += position.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\r\n\t * width, height or depth is less than or equal to 0.\r\n\t *\r\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\r\n\t * <code>depth</code> properties to 0.</p>\r\n\t *\r\n\t */\r\n\tpublic setEmpty()\r\n\t{\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.z = 0;\r\n\t\tthis.width = 0;\r\n\t\tthis.height = 0;\r\n\t\tthis.depth = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Box to the specified values\r\n\t *\r\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param widtha  The width of the box, in pixels.\r\n\t * @param heighta The height of the box, in pixels.\r\n\t * @param deptha  The depth of the box, in pixels.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number)\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.z = za;\r\n\t\tthis.width = widtha;\r\n\t\tthis.height = heighta;\r\n\t\tthis.depth = deptha;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds and returns a string that lists the horizontal, vertical and\r\n\t * longitudinal positions and the width, height and depth of the Box object.\r\n\t *\r\n\t * @return A string listing the value of each of the following properties of\r\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\r\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Adds two boxes together to create a new Box object, by filling\r\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\r\n\t *\r\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\r\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\r\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\r\n\t *\r\n\t * @param toUnion A Box object to add to this Box object.\r\n\t * @return A new Box object that is the union of the two boxes.\r\n\t */\r\n\tpublic union(toUnion:Box):Box\r\n\t{\r\n\t\tvar u:Box = new Box();\r\n\r\n\t\tif (this.x < toUnion.x) {\r\n\t\t\tu.x = this.x;\r\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\r\n\r\n\t\t\tif (u.width < this.width)\r\n\t\t\t\tu.width = this.width;\r\n\t\t} else {\r\n\t\t\tu.x = toUnion.x;\r\n\t\t\tu.width = this.x - toUnion.x + this.width;\r\n\r\n\t\t\tif (u.width < toUnion.width)\r\n\t\t\t\tu.width = toUnion.width;\r\n\t\t}\r\n\r\n\t\tif (this.y < toUnion.y) {\r\n\t\t\tu.y = this.y;\r\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\r\n\r\n\t\t\tif (u.height < this.height)\r\n\t\t\t\tu.height = this.height;\r\n\t\t} else {\r\n\t\t\tu.y = toUnion.y;\r\n\t\t\tu.height = this.y - toUnion.y + this.height;\r\n\r\n\t\t\tif (u.height < toUnion.height)\r\n\t\t\t\tu.height = toUnion.height;\r\n\t\t}\r\n\r\n\t\tif (this.z < toUnion.z) {\r\n\t\t\tu.z = this.z;\r\n\t\t\tu.depth = toUnion.z - this.z + toUnion.depth;\r\n\r\n\t\t\tif (u.depth < this.depth)\r\n\t\t\t\tu.depth = this.depth;\r\n\t\t} else {\r\n\t\t\tu.z = toUnion.z;\r\n\t\t\tu.depth = this.z - toUnion.z + this.depth;\r\n\r\n\t\t\tif (u.depth < toUnion.depth)\r\n\t\t\t\tu.depth = toUnion.depth;\r\n\t\t}\r\n\r\n\t\treturn u;\r\n\t}\r\n}\r\n\r\nexport = Box;",
    "import ColorUtils\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\nimport EventDispatcher\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport Event\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * The ColorTransform class lets you adjust the color values in a display\r\n * object. The color adjustment or <i>color transformation</i> can be applied\r\n * to all four channels: red, green, blue, and alpha transparency.\r\n *\r\n * <p>When a ColorTransform object is applied to a display object, a new value\r\n * for each color channel is calculated like this:</p>\r\n *\r\n * <ul>\r\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\r\n * <code>redOffset</code></li>\r\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\r\n * <code>greenOffset</code></li>\r\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\r\n * <code>blueOffset</code></li>\r\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\r\n * <code>alphaOffset</code></li>\r\n * </ul>\r\n *\r\n * <p>If any of the color channel values is greater than 255 after the\r\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\r\n *\r\n * <p>You can use ColorTransform objects in the following ways:</p>\r\n *\r\n * <ul>\r\n *   <li>In the <code>colorTransform</code> parameter of the\r\n * <code>colorTransform()</code> method of the BitmapData class</li>\r\n *   <li>As the <code>colorTransform</code> property of a Transform object\r\n * (which can be used as the <code>transform</code> property of a display\r\n * object)</li>\r\n * </ul>\r\n *\r\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\r\n * a ColorTransform object before you can call the methods of the\r\n * ColorTransform object.</p>\r\n *\r\n * <p>Color transformations do not apply to the background color of a movie\r\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\r\n * that are attached to the movie clip.</p>\r\n */\r\nclass ColorTransform extends EventDispatcher\r\n{\r\n\t/**\r\n\t * A decimal value that is multiplied with the alpha transparency channel\r\n\t * value.\r\n\t *\r\n\t * <p>If you set the alpha transparency value of a display object directly by\r\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\r\n\t * affects the value of the <code>alphaMultiplier</code> property of that\r\n\t * display object's <code>transform.colorTransform</code> property.</p>\r\n\t */\r\n\tprivate _alphaMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the alpha transparency channel\r\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\r\n\t * value.\r\n\t */\r\n    private _alphaOffset:number;\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the blue channel value.\r\n\t */\r\n    private _blueMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the blue channel value after it\r\n\t * has been multiplied by the <code>blueMultiplier</code> value.\r\n\t */\r\n    private _blueOffset:number;\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the green channel value.\r\n\t */\r\n    private _greenMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the green channel value after\r\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\r\n\t */\r\n    private _greenOffset:number;\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the red channel value.\r\n\t */\r\n    private _redMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the red channel value after it\r\n\t * has been multiplied by the <code>redMultiplier</code> value.\r\n\t */\r\n    private _redOffset:number;\r\n\r\n\r\n    private _changeEvent:Event = new Event(Event.CHANGE);\r\n\r\n    public get alphaMultiplier():number\r\n    {\r\n        return this._alphaMultiplier;\r\n    }\r\n\r\n    public set alphaMultiplier(value:number)\r\n    {\r\n        this._alphaMultiplier = value;\r\n        this._invalidate();\r\n    }\r\n\r\n    public get alphaOffset():number\r\n    {\r\n        return this._alphaOffset;\r\n    }\r\n\r\n    public set alphaOffset(value:number)\r\n    {\r\n        this._alphaOffset = value;\r\n        this._invalidate();\r\n    }\r\n\r\n    public get redMultiplier():number\r\n    {\r\n        return this._redMultiplier;\r\n    }\r\n\r\n    public set redMultiplier(value:number)\r\n    {\r\n        this._redMultiplier = value;\r\n        this._invalidate();\r\n    }\r\n\r\n    public get redOffset():number\r\n    {\r\n        return this._redOffset;\r\n    }\r\n\r\n    public set redOffset(value:number)\r\n    {\r\n        this._redOffset = value;\r\n        this._invalidate();\r\n    }\r\n\r\n    public get greenMultiplier():number\r\n    {\r\n        return this._greenMultiplier;\r\n    }\r\n\r\n    public set greenMultiplier(value:number)\r\n    {\r\n        this._greenMultiplier = value;\r\n        this._invalidate();\r\n    }\r\n\r\n    public get greenOffset():number\r\n    {\r\n        return this._greenOffset;\r\n    }\r\n\r\n    public set greenOffset(value:number)\r\n    {\r\n        this._greenOffset = value;\r\n        this._invalidate();\r\n    }\r\n\r\n    public get blueMultiplier():number\r\n    {\r\n        return this._blueMultiplier;\r\n    }\r\n\r\n    public set blueMultiplier(value:number)\r\n    {\r\n        this._blueMultiplier = value;\r\n        this._invalidate();\r\n    }\r\n\r\n    public get blueOffset():number\r\n    {\r\n        return this._blueOffset;\r\n    }\r\n\r\n    public set blueOffset(value:number)\r\n    {\r\n        this._blueOffset = value;\r\n        this._invalidate();\r\n    }\r\n\r\n\t/**\r\n\t * The RGB color value for a ColorTransform object.\r\n\t *\r\n\t * <p>When you set this property, it changes the three color offset values\r\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\r\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\r\n\t * multiplier values(<code>redMultiplier</code>,\r\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\r\n\t * alpha transparency multiplier and offset values do not change.</p>\r\n\t *\r\n\t * <p>When you pass a value for this property, use the format\r\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\r\n\t * hexadecimal digits that specify the offset of each color component. The 0x\r\n\t * tells the ActionScript compiler that the number is a hexadecimal\r\n\t * value.</p>\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn((this._redOffset << 16) | ( this._greenOffset << 8) | this._blueOffset);\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\r\n\r\n\t\tthis._redOffset = argb[1];  //(value >> 16) & 0xFF;\r\n\t\tthis._greenOffset = argb[2];  //(value >> 8) & 0xFF;\r\n\t\tthis._blueOffset = argb[3];  //value & 0xFF;\r\n\r\n\t\tthis._redMultiplier = 0;\r\n\t\tthis._greenMultiplier = 0;\r\n\t\tthis._blueMultiplier = 0;\r\n\r\n        this._invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a ColorTransform object for a display object with the specified\r\n\t * color channel values and alpha values.\r\n\t *\r\n\t * @param redMultiplier   The value for the red multiplier, in the range from\r\n\t *                        0 to 1.\r\n\t * @param greenMultiplier The value for the green multiplier, in the range\r\n\t *                        from 0 to 1.\r\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\r\n\t *                        from 0 to 1.\r\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\r\n\t *                        the range from 0 to 1.\r\n\t * @param redOffset       The offset value for the red color channel, in the\r\n\t *                        range from -255 to 255.\r\n\t * @param greenOffset     The offset value for the green color channel, in\r\n\t *                        the range from -255 to 255.\r\n\t * @param blueOffset      The offset for the blue color channel value, in the\r\n\t *                        range from -255 to 255.\r\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\r\n\t *                        the range from -255 to 255.\r\n\t */\r\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\r\n\t{\r\n        super();\r\n\t\tthis._redMultiplier = redMultiplier;\r\n\t\tthis._greenMultiplier = greenMultiplier;\r\n\t\tthis._blueMultiplier = blueMultiplier;\r\n\t\tthis._alphaMultiplier = alphaMultiplier;\r\n\t\tthis._redOffset = redOffset;\r\n\t\tthis._greenOffset = greenOffset;\r\n\t\tthis._blueOffset = blueOffset;\r\n\t\tthis._alphaOffset = alphaOffset;\r\n\t}\r\n\r\n    public clear()\r\n    {\r\n        this._redMultiplier = 1;\r\n        this._greenMultiplier = 1;\r\n        this._blueMultiplier = 1;\r\n        this._alphaMultiplier = 1;\r\n        this._redOffset = 0;\r\n        this._greenOffset = 0;\r\n        this._blueOffset = 0;\r\n        this._alphaOffset = 0;\r\n    }\r\n\r\n    public copyFrom(source:ColorTransform)\r\n    {\r\n        this._redMultiplier = source.redMultiplier;\r\n        this._greenMultiplier = source.greenMultiplier;\r\n        this._blueMultiplier = source.blueMultiplier;\r\n        this._alphaMultiplier = source.alphaMultiplier;\r\n        this._redOffset = source.redOffset;\r\n        this._greenOffset = source.greenOffset;\r\n        this._blueOffset = source.blueOffset;\r\n        this._alphaOffset = source.alphaOffset;\r\n    }\r\n\r\n    private _invalidate()\r\n    {\r\n        this.dispatchEvent(this._changeEvent);\r\n    }\r\n\r\n    public prepend(ct:ColorTransform)\r\n    {\r\n        this._redOffset += ct.redOffset * this._redMultiplier;\r\n        this._greenOffset += ct.greenOffset * this._greenMultiplier;\r\n        this._blueOffset += ct.blueOffset * this._blueMultiplier;\r\n        this._alphaOffset += ct.alphaOffset * this._alphaMultiplier;\r\n\r\n        this._redMultiplier *= ct.redMultiplier;\r\n        this._greenMultiplier *= ct.greenMultiplier;\r\n        this._blueMultiplier *= ct.blueMultiplier;\r\n        this._alphaMultiplier *= ct.alphaMultiplier;\r\n\r\n        this._invalidate();\r\n    }\r\n}\r\n\r\nexport = ColorTransform;",
    "/**\r\n* MathConsts provides some commonly used mathematical constants\r\n*/\r\nclass MathConsts\r\n{\r\n\t/**\r\n\t * The amount to multiply with when converting radians to degrees.\r\n\t */\r\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\r\n\r\n\t/**\r\n\t * The amount to multiply with when converting degrees to radians.\r\n\t */\r\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\r\n}\r\n\r\nexport = MathConsts;",
    "import Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n\r\n/**\r\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\r\n */\r\nclass Matrix3DUtils\r\n{\r\n\t/**\r\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\r\n\t */\r\n\tpublic static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\r\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\r\n\r\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\r\n\r\n\t/**\r\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\r\n\t *\r\n\t * @param    quarternion    The quarterion object to convert.\r\n\t */\r\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar x:number = quarternion.x;\r\n\t\tvar y:number = quarternion.y;\r\n\t\tvar z:number = quarternion.z;\r\n\t\tvar w:number = quarternion.w;\r\n\r\n\t\tvar xx:number = x*x;\r\n\t\tvar xy:number = x*y;\r\n\t\tvar xz:number = x*z;\r\n\t\tvar xw:number = x*w;\r\n\r\n\t\tvar yy:number = y*y;\r\n\t\tvar yz:number = y*z;\r\n\t\tvar yw:number = y*w;\r\n\r\n\t\tvar zz:number = z*z;\r\n\t\tvar zw:number = z*w;\r\n\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\traw[0] = 1 - 2*(yy + zz);\r\n\t\traw[1] = 2*(xy + zw);\r\n\t\traw[2] = 2*(xz - yw);\r\n\t\traw[4] = 2*(xy - zw);\r\n\t\traw[5] = 1 - 2*(xx + zz);\r\n\t\traw[6] = 2*(yz + xw);\r\n\t\traw[8] = 2*(xz + yw);\r\n\t\traw[9] = 2*(yz - xw);\r\n\t\traw[10] = 1 - 2*(xx + yy);\r\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (m) {\r\n\t\t\tm.copyRawDataFrom(raw);\r\n\t\t\treturn m;\r\n\t\t} else\r\n\t\t\treturn new Matrix3D(raw);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the forward vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The forward vector\r\n\t */\r\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\r\n\t\tif (v === null) {\r\n\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\t}\r\n\r\n\t\tm.copyColumnTo(2, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the up vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The up vector\r\n\t */\r\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\tif (v === null) {\r\n\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\t}\r\n\r\n\t\tm.copyColumnTo(1, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the right vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The right vector\r\n\t */\r\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\r\n\t\tif (v === null) {\r\n\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\t}\r\n\r\n\t\tm.copyColumnTo(0, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\r\n\t */\r\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\r\n\t{\r\n\t\tvar r1:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar r2:number[] = m2.rawData;\r\n\t\tm1.copyRawDataTo(r1);\r\n\r\n\t\tfor (var i:number = 0; i < 16; ++i) {\r\n\t\t\tif (r1[i] != r2[i])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D)\r\n\t{\r\n\t\tvar dirN:Vector3D;\r\n\t\tvar upN:Vector3D;\r\n\t\tvar lftN:Vector3D;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tlftN = dir.crossProduct(up);\r\n\t\tlftN.normalize();\r\n\r\n\t\tupN = lftN.crossProduct(dir);\r\n\t\tupN.normalize();\r\n\t\tdirN = dir.clone();\r\n\t\tdirN.normalize();\r\n\r\n\t\traw[0] = lftN.x;\r\n\t\traw[1] = upN.x;\r\n\t\traw[2] = -dirN.x;\r\n\t\traw[3] = 0.0;\r\n\r\n\t\traw[4] = lftN.y;\r\n\t\traw[5] = upN.y;\r\n\t\traw[6] = -dirN.y;\r\n\t\traw[7] = 0.0;\r\n\r\n\t\traw[8] = lftN.z;\r\n\t\traw[9] = upN.z;\r\n\t\traw[10] = -dirN.z;\r\n\t\traw[11] = 0.0;\r\n\r\n\t\traw[12] = -lftN.dotProduct(pos);\r\n\t\traw[13] = -upN.dotProduct(pos);\r\n\t\traw[14] = dirN.dotProduct(pos);\r\n\t\traw[15] = 1.0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n\r\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tif (target === null)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\r\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar ab2:number = -2*a*b;\r\n\t\tvar ac2:number = -2*a*c;\r\n\t\tvar bc2:number = -2*b*c;\r\n\t\t// reflection matrix\r\n\t\trawData[0] = 1 - 2*a*a;\r\n\t\trawData[4] = ab2;\r\n\t\trawData[8] = ac2;\r\n\t\trawData[12] = -2*a*d;\r\n\t\trawData[1] = ab2;\r\n\t\trawData[5] = 1 - 2*b*b;\r\n\t\trawData[9] = bc2;\r\n\t\trawData[13] = -2*b*d;\r\n\t\trawData[2] = ac2;\r\n\t\trawData[6] = bc2;\r\n\t\trawData[10] = 1 - 2*c*c;\r\n\t\trawData[14] = -2*c*d;\r\n\t\trawData[3] = 0;\r\n\t\trawData[7] = 0;\r\n\t\trawData[11] = 0;\r\n\t\trawData[15] = 1;\r\n\t\ttarget.copyRawDataFrom(rawData);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\r\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar d:number = raw[12];\r\n\t\tvar h:number = raw[13];\r\n\t\tvar l:number = raw[14];\r\n\t\tvar p:number = raw[15];\r\n\r\n\t\tvar x:number = vector.x;\r\n\t\tvar y:number = vector.y;\r\n\t\tvar z:number = vector.z;\r\n\t\tresult.x = a * x + b * y + c * z + d;\r\n\t\tresult.y = e * x + f * y + g * z + h;\r\n\t\tresult.z = i * x + j * y + k * z + l;\r\n\t\tresult.w = m * x + n * y + o * z + p;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar x:number = vector.x;\r\n\t\tvar y:number = vector.y;\r\n\t\tvar z:number = vector.z;\r\n\t\tresult.x = a * x + b * y + c * z;\r\n\t\tresult.y = e * x + f * y + g * z;\r\n\t\tresult.z = i * x + j * y + k * z;\r\n\t\tresult.w = m * x + n * y + o * z;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif(!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\ttransform.copyColumnTo(3, result);\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar outIndex:number = 0;\r\n\t\tvar length:number = vin.length;\r\n\t\tfor(var index:number = 0; index<length; index+=3) {\r\n\t\t\tvar x:number = vin[index];\r\n\t\t\tvar y:number = vin[index+1];\r\n\t\t\tvar z:number = vin[index+2];\r\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\r\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\r\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Matrix3DUtils;",
    "import Orientation3D\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\r\nimport Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\n\r\nclass Matrix3D\r\n{\r\n\t/**\r\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\r\n\t *\r\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\r\n\t * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\r\n\t */\r\n\tpublic rawData:number[];\r\n\r\n\t/**\r\n\t * Creates a Matrix3D object.\r\n\t */\r\n\tconstructor(v:number[] = null)\r\n\t{\r\n\t\tif (v != null && v.length == 16)\r\n\t\t\tthis.rawData = v.concat();\r\n\t\telse\r\n\t\t\tthis.rawData = [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\r\n\t}\r\n\r\n\t/**\r\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\r\n\t */\r\n\tpublic append(lhs:Matrix3D)\r\n\t{\r\n\t\tvar m111:number = this.rawData[0], m121:number = this.rawData[4], m131:number = this.rawData[8], m141:number = this.rawData[12], m112:number = this.rawData[1], m122:number = this.rawData[5], m132:number = this.rawData[9], m142:number = this.rawData[13], m113:number = this.rawData[2], m123:number = this.rawData[6], m133:number = this.rawData[10], m143:number = this.rawData[14], m114:number = this.rawData[3], m124:number = this.rawData[7], m134:number = this.rawData[11], m144:number = this.rawData[15], m211:number = lhs.rawData[0], m221:number = lhs.rawData[4], m231:number = lhs.rawData[8], m241:number = lhs.rawData[12], m212:number = lhs.rawData[1], m222:number = lhs.rawData[5], m232:number = lhs.rawData[9], m242:number = lhs.rawData[13], m213:number = lhs.rawData[2], m223:number = lhs.rawData[6], m233:number = lhs.rawData[10], m243:number = lhs.rawData[14], m214:number = lhs.rawData[3], m224:number = lhs.rawData[7], m234:number = lhs.rawData[11], m244:number = lhs.rawData[15];\r\n\r\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\r\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\r\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\r\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\r\n\r\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\r\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\r\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\r\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\r\n\r\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\r\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\r\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\r\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\r\n\r\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\r\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\r\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\r\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental rotation to a Matrix3D object.\r\n\t */\r\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null )\r\n\t{\r\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\r\n\r\n\t\tthis.append(m);\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\r\n\t */\r\n\tpublic appendScale(xScale:number, yScale:number, zScale:number)\r\n\t{\r\n\t\tthis.append(new Matrix3D([ xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0 ]));\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\r\n\t */\r\n\tpublic appendTranslation(x:number, y:number, z:number)\r\n\t{\r\n\t\tthis.rawData[12] += x;\r\n\t\tthis.rawData[13] += y;\r\n\t\tthis.rawData[14] += z;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\r\n\t */\r\n\tpublic clone():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.rawData.slice(0));\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\r\n\t */\r\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (column) {\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\r\n\t */\r\n\tpublic copyColumnTo(column:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (column) {\r\n\t\t\tcase 0:\r\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\r\n\t */\r\n\tpublic copyFrom(sourceMatrix3D:Matrix3D)\r\n\t{\r\n\t\tvar len:number = sourceMatrix3D.rawData.length;\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tthis.rawData[c] = sourceMatrix3D.rawData[c];\r\n\t}\r\n\r\n\tpublic copyRawDataFrom(vector:number[], index:number = 0, transpose:boolean = false):void\r\n\t{\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\r\n\t\tvar len:number = vector.length - index;\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tthis.rawData[c] = vector[c + index];\r\n\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\t}\r\n\r\n\tpublic copyRawDataTo(vector:number[], index:number = 0, transpose:boolean = false)\r\n\t{\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\r\n\t\tvar len:number = this.rawData.length\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tvector[c + index ] = this.rawData[c];\r\n\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\r\n\t */\r\n\tpublic copyRowFrom(row:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (row) {\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\r\n\t */\r\n\tpublic copyRowTo(row:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (row) {\r\n\t\t\tcase 0:\r\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies this Matrix3D object into a destination Matrix3D object.\r\n\t */\r\n\tpublic copyToMatrix3D(dest:Matrix3D)\r\n\t{\r\n\t\tdest.rawData = this.rawData.slice(0);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\r\n\t */\r\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\r\n\t{\r\n\t\tvar q:Quaternion;\r\n\r\n\t\t// Initial Tests - Not OK\r\n\r\n\t\tvar vec:Vector3D[] = [];\r\n\t\tvar m = this.clone();\r\n\t\tvar mr = m.rawData;\r\n\r\n\t\tvar pos:Vector3D = new Vector3D(mr[12], mr[13], mr[14]);\r\n\t\tmr[12] = 0;\r\n\t\tmr[13] = 0;\r\n\t\tmr[14] = 0;\r\n\r\n\t\tvar scale:Vector3D = new Vector3D();\r\n\r\n\t\tscale.x = Math.sqrt(mr[0]*mr[0] + mr[1]*mr[1] + mr[2]*mr[2]);\r\n\t\tscale.y = Math.sqrt(mr[4]*mr[4] + mr[5]*mr[5] + mr[6]*mr[6]);\r\n\t\tscale.z = Math.sqrt(mr[8]*mr[8] + mr[9]*mr[9] + mr[10]*mr[10]);\r\n\r\n\t\tif (mr[0]*(mr[5]*mr[10] - mr[6]*mr[9]) - mr[1]*(mr[4]*mr[10] - mr[6]*mr[8]) + mr[2]*(mr[4]*mr[9] - mr[5]*mr[8]) < 0)\r\n\t\t\tscale.z = -scale.z;\r\n\r\n\t\tmr[0] /= scale.x;\r\n\t\tmr[1] /= scale.x;\r\n\t\tmr[2] /= scale.x;\r\n\t\tmr[4] /= scale.y;\r\n\t\tmr[5] /= scale.y;\r\n\t\tmr[6] /= scale.y;\r\n\t\tmr[8] /= scale.z;\r\n\t\tmr[9] /= scale.z;\r\n\t\tmr[10] /= scale.z;\r\n\r\n\t\tvar rot = new Vector3D();\r\n\r\n\t\tswitch (orientationStyle) {\r\n\t\t\tcase Orientation3D.AXIS_ANGLE:\r\n\r\n\t\t\t\trot.w = Math.acos((mr[0] + mr[5] + mr[10] - 1)/2);\r\n\r\n\t\t\t\tvar len:number = Math.sqrt((mr[6] - mr[9])*(mr[6] - mr[9]) + (mr[8] - mr[2])*(mr[8] - mr[2]) + (mr[1] - mr[4])*(mr[1] - mr[4]));\r\n\t\t\t\trot.x = (mr[6] - mr[9])/len;\r\n\t\t\t\trot.y = (mr[8] - mr[2])/len;\r\n\t\t\t\trot.z = (mr[1] - mr[4])/len;\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase Orientation3D.QUATERNION:\r\n\r\n\t\t\t\tvar tr = mr[0] + mr[5] + mr[10];\r\n\r\n\t\t\t\tif (tr > 0) {\r\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\r\n\r\n\t\t\t\t\trot.x = (mr[6] - mr[9])/(4*rot.w);\r\n\t\t\t\t\trot.y = (mr[8] - mr[2])/(4*rot.w);\r\n\t\t\t\t\trot.z = (mr[1] - mr[4])/(4*rot.w);\r\n\t\t\t\t} else if ((mr[0] > mr[5]) && (mr[0] > mr[10])) {\r\n\t\t\t\t\trot.x = Math.sqrt(1 + mr[0] - mr[5] - mr[10])/2;\r\n\r\n\t\t\t\t\trot.w = (mr[6] - mr[9])/(4*rot.x);\r\n\t\t\t\t\trot.y = (mr[1] + mr[4])/(4*rot.x);\r\n\t\t\t\t\trot.z = (mr[8] + mr[2])/(4*rot.x);\r\n\t\t\t\t} else if (mr[5] > mr[10]) {\r\n\t\t\t\t\trot.y = Math.sqrt(1 + mr[5] - mr[0] - mr[10])/2;\r\n\r\n\t\t\t\t\trot.x = (mr[1] + mr[4])/(4*rot.y);\r\n\t\t\t\t\trot.w = (mr[8] - mr[2])/(4*rot.y);\r\n\t\t\t\t\trot.z = (mr[6] + mr[9])/(4*rot.y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trot.z = Math.sqrt(1 + mr[10] - mr[0] - mr[5])/2;\r\n\r\n\t\t\t\t\trot.x = (mr[8] + mr[2])/(4*rot.z);\r\n\t\t\t\t\trot.y = (mr[6] + mr[9])/(4*rot.z);\r\n\t\t\t\t\trot.w = (mr[1] - mr[4])/(4*rot.z);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase Orientation3D.EULER_ANGLES:\r\n\r\n\t\t\t\trot.y = Math.asin(-mr[2]);\r\n\r\n\t\t\t\t//var cos:number = Math.cos(rot.y);\r\n\r\n\t\t\t\tif (mr[2] != 1 && mr[2] != -1) {\r\n\t\t\t\t\trot.x = Math.atan2(mr[6], mr[10]);\r\n\t\t\t\t\trot.z = Math.atan2(mr[1], mr[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trot.z = 0;\r\n\t\t\t\t\trot.x = Math.atan2(mr[4], mr[5]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tvec.push(pos);\r\n\t\tvec.push(rot);\r\n\t\tvec.push(scale);\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\r\n\t * coordinate to another.\r\n\t */\r\n\tpublic deltaTransformVector(v:Vector3D):Vector3D\r\n\t{\r\n\t\tvar x:number = v.x;\r\n\t\tvar y:number = v.y;\r\n\t\tvar z:number = v.z;\r\n\r\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11]));\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the current matrix to an identity or unit matrix.\r\n\t */\r\n\tpublic identity()\r\n\t{\r\n\t\tthis.rawData = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\r\n\t}\r\n\r\n\t/**\r\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\r\n\t */\r\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tfor (var i:number = 0; i < 16; ++i)\r\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\r\n\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\r\n\t */\r\n\tpublic interpolateTo(toMat:Matrix3D, percent:number)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 16; ++i)\r\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts the current matrix.\r\n\t */\r\n\tpublic invert():boolean\r\n\t{\r\n\t\tvar d = this.determinant;\r\n\t\tvar invertable = Math.abs(d) > 0.00000000001;\r\n\r\n\t\tif (invertable) {\r\n\t\t\td = 1/d;\r\n\t\t\tvar m11:number = this.rawData[0];\r\n\t\t\tvar m21:number = this.rawData[4];\r\n\t\t\tvar m31:number = this.rawData[8];\r\n\t\t\tvar m41:number = this.rawData[12];\r\n\t\t\tvar m12:number = this.rawData[1];\r\n\t\t\tvar m22:number = this.rawData[5];\r\n\t\t\tvar m32:number = this.rawData[9];\r\n\t\t\tvar m42:number = this.rawData[13];\r\n\t\t\tvar m13:number = this.rawData[2];\r\n\t\t\tvar m23:number = this.rawData[6];\r\n\t\t\tvar m33:number = this.rawData[10];\r\n\t\t\tvar m43:number = this.rawData[14];\r\n\t\t\tvar m14:number = this.rawData[3];\r\n\t\t\tvar m24:number = this.rawData[7];\r\n\t\t\tvar m34:number = this.rawData[11];\r\n\t\t\tvar m44:number = this.rawData[15];\r\n\r\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\r\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\r\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\r\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\r\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\r\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\r\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\r\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\r\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\r\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\r\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\r\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\r\n\t\t}\r\n\t\treturn invertable;\r\n\t}\r\n\r\n\t/* TODO implement pointAt\r\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\r\n\t {\r\n\t }\r\n\t */\r\n\r\n\t/**\r\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\r\n\t */\r\n\tpublic prepend(rhs:Matrix3D)\r\n\t{\r\n\t\tvar m111:number = rhs.rawData[0], m121:number = rhs.rawData[4], m131:number = rhs.rawData[8], m141:number = rhs.rawData[12], m112:number = rhs.rawData[1], m122:number = rhs.rawData[5], m132:number = rhs.rawData[9], m142:number = rhs.rawData[13], m113:number = rhs.rawData[2], m123:number = rhs.rawData[6], m133:number = rhs.rawData[10], m143:number = rhs.rawData[14], m114:number = rhs.rawData[3], m124:number = rhs.rawData[7], m134:number = rhs.rawData[11], m144:number = rhs.rawData[15], m211:number = this.rawData[0], m221:number = this.rawData[4], m231:number = this.rawData[8], m241:number = this.rawData[12], m212:number = this.rawData[1], m222:number = this.rawData[5], m232:number = this.rawData[9], m242:number = this.rawData[13], m213:number = this.rawData[2], m223:number = this.rawData[6], m233:number = this.rawData[10], m243:number = this.rawData[14], m214:number = this.rawData[3], m224:number = this.rawData[7], m234:number = this.rawData[11], m244:number = this.rawData[15];\r\n\r\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\r\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\r\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\r\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\r\n\r\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\r\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\r\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\r\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\r\n\r\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\r\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\r\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\r\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\r\n\r\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\r\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\r\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\r\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental rotation to a Matrix3D object.\r\n\t */\r\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null )\r\n\t{\r\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\r\n\r\n\t\t/*\r\n\t\t if ( pivot != null )\r\n\t\t {\r\n\t\t var p:Vector3D = pivot;\r\n\t\t m.appendTranslation( p.x, p.y, p.z );\r\n\t\t }\r\n\t\t */\r\n\t\tthis.prepend(m);\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\r\n\t */\r\n\tpublic prependScale(xScale:number, yScale:number, zScale:number)\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tthis.prepend(new Matrix3D([ xScale, 0, 0, 0, 0, yScale, 0, 0, 0, 0, zScale, 0, 0, 0, 0, 1 ]));\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\r\n\t */\r\n\tpublic prependTranslation(x:number, y:number, z:number)\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tvar m = new Matrix3D();\r\n\t\tm.position = new Vector3D(x, y, z);\r\n\t\tthis.prepend(m);\r\n\t}\r\n\r\n\t// TODO orientationStyle\r\n\t/**\r\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\r\n\t */\r\n\tpublic recompose(components:Vector3D[]):boolean\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tif (components.length < 3) return false\r\n\r\n\t\t//components[2].x == 0 || components[2].y == 0 || components[2].z == 0) return false;\r\n\r\n\t\tthis.identity();\r\n\t\tthis.appendScale(components[2].x, components[2].y, components[2].z);\r\n\r\n\t\tvar angle:number;\r\n\t\tangle = -components[1].x;\r\n\t\tthis.append(new Matrix3D([1, 0, 0, 0, 0, Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0 , 0]));\r\n\t\tangle = -components[1].y;\r\n\t\tthis.append(new Matrix3D([Math.cos(angle), 0, Math.sin(angle), 0, 0, 1, 0, 0, -Math.sin(angle), 0, Math.cos(angle), 0, 0, 0, 0, 0]));\r\n\t\tangle = -components[1].z;\r\n\t\tthis.append(new Matrix3D([Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]));\r\n\r\n\t\tthis.position = components[0];\r\n\t\tthis.rawData[15] = 1;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic transformVector(v:Vector3D):Vector3D\r\n\t{\r\n\t\tif (v == null)\r\n\t\t\treturn new Vector3D();\r\n\r\n\t\tvar x:number = v.x;\r\n\t\tvar y:number = v.y;\r\n\t\tvar z:number = v.z;\r\n\r\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15]));\r\n\t}\r\n\r\n\t/**\r\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\r\n\t */\r\n\tpublic transformVectors(vin:number[], vout:number[])\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\r\n\r\n\t\twhile (i + 3 <= vin.length) {\r\n\t\t\tx = vin[i];\r\n\t\t\ty = vin[i + 1];\r\n\t\t\tz = vin[i + 2];\r\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\r\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\r\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\r\n\t\t\ti += 3;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\r\n\t */\r\n\tpublic transpose()\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tvar oRawData:number[] = this.rawData.slice(0);\r\n\r\n\t\tthis.rawData[1] = oRawData[4];\r\n\t\tthis.rawData[2] = oRawData[8];\r\n\t\tthis.rawData[3] = oRawData[12];\r\n\t\tthis.rawData[4] = oRawData[1];\r\n\t\tthis.rawData[6] = oRawData[9];\r\n\t\tthis.rawData[7] = oRawData[13];\r\n\t\tthis.rawData[8] = oRawData[2];\r\n\t\tthis.rawData[9] = oRawData[6];\r\n\t\tthis.rawData[11] = oRawData[14];\r\n\t\tthis.rawData[12] = oRawData[3];\r\n\t\tthis.rawData[13] = oRawData[7];\r\n\t\tthis.rawData[14] = oRawData[11];\r\n\t}\r\n\r\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\r\n\t{\r\n\r\n\t\t// internal class use by rotations which have been tested\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tvar rad = degrees*( Math.PI/180 );\r\n\t\tvar c:number = Math.cos(rad);\r\n\t\tvar s:number = Math.sin(rad);\r\n\t\tvar t:number = 1 - c;\r\n\t\tvar tmp1:number, tmp2:number;\r\n\r\n\t\tm.rawData[0] = c + x*x*t;\r\n\t\tm.rawData[5] = c + y*y*t;\r\n\t\tm.rawData[10] = c + z*z*t;\r\n\r\n\t\ttmp1 = x*y*t;\r\n\t\ttmp2 = z*s;\r\n\t\tm.rawData[1] = tmp1 + tmp2;\r\n\t\tm.rawData[4] = tmp1 - tmp2;\r\n\t\ttmp1 = x*z*t;\r\n\t\ttmp2 = y*s;\r\n\t\tm.rawData[8] = tmp1 + tmp2;\r\n\t\tm.rawData[2] = tmp1 - tmp2;\r\n\t\ttmp1 = y*z*t;\r\n\t\ttmp2 = x*s;\r\n\t\tm.rawData[9] = tmp1 - tmp2;\r\n\t\tm.rawData[6] = tmp1 + tmp2;\r\n\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * [read-only] A Number that determines whether a matrix is invertible.\r\n\t */\r\n\tpublic get determinant():number\r\n\t{\r\n\t\treturn    ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\r\n\t}\r\n\r\n\t/**\r\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\r\n\t * transformation's frame of reference.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.rawData[12], this.rawData[13], this.rawData[14]);\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis.rawData[12] = value.x;\r\n\t\tthis.rawData[13] = value.y;\r\n\t\tthis.rawData[14] = value.z;\r\n\t}\r\n\r\n\tpublic toFixed(decimalPlace:number):string\r\n\t{\r\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\r\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\r\n\t}\r\n}\r\n\r\nexport = Matrix3D;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\n\r\n/**\r\n * The Matrix class represents a transformation matrix that determines how to\r\n * map points from one coordinate space to another. You can perform various\r\n * graphical transformations on a display object by setting the properties of\r\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\r\n * property of a Transform object, and then applying that Transform object as\r\n * the <code>transform</code> property of the display object. These\r\n * transformation functions include translation(<i>x</i> and <i>y</i>\r\n * repositioning), rotation, scaling, and skewing.\r\n *\r\n * <p>Together these types of transformations are known as <i>affine\r\n * transformations</i>. Affine transformations preserve the straightness of\r\n * lines while transforming, so that parallel lines stay parallel.</p>\r\n *\r\n * <p>To apply a transformation matrix to a display object, you create a\r\n * Transform object, set its <code>matrix</code> property to the\r\n * transformation matrix, and then set the <code>transform</code> property of\r\n * the display object to the Transform object. Matrix objects are also used as\r\n * parameters of some methods, such as the following:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\r\n *   <li>The <code>beginBitmapFill()</code> method,\r\n * <code>beginGradientFill()</code> method, or\r\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\r\n * </ul>\r\n *\r\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\r\n * contents:</p>\r\n *\r\n * <p>In traditional transformation matrixes, the <code>u</code>,\r\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\r\n * The Matrix class can only operate in two-dimensional space, so it always\r\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\r\n * and that the property value <code>w</code> is 1.0. The effective values of\r\n * the matrix are as follows:</p>\r\n *\r\n * <p>You can get and set the values of all six of the other properties in a\r\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\r\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\r\n *\r\n * <p>The Matrix class supports the four major types of transformations:\r\n * translation, scaling, rotation, and skewing. You can set three of these\r\n * transformations by using specialized methods, as described in the following\r\n * table: </p>\r\n *\r\n * <p>Each transformation function alters the current matrix properties so\r\n * that you can effectively combine multiple transformations. To do this, you\r\n * call more than one transformation function before applying the matrix to\r\n * its display object target(by using the <code>transform</code> property of\r\n * that display object).</p>\r\n *\r\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\r\n * before you can call the methods of the Matrix object.</p>\r\n */\r\nclass Matrix\r\n{\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\r\n\t * when scaling or rotating an image.\r\n\t */\r\n\tpublic a:number;\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\r\n\t * when rotating or skewing an image.\r\n\t */\r\n\tpublic b:number;\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\r\n\t * when rotating or skewing an image.\r\n\t */\r\n\tpublic c:number;\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\r\n\t * when scaling or rotating an image.\r\n\t */\r\n\tpublic d:number;\r\n\r\n\t/**\r\n\t * The distance by which to translate each point along the <i>x</i> axis.\r\n\t */\r\n\tpublic tx:number;\r\n\r\n\t/**\r\n\t * The distance by which to translate each point along the <i>y</i> axis.\r\n\t */\r\n\tpublic ty:number;\r\n\r\n\t/**\r\n\t * Creates a new Matrix object with the specified parameters. In matrix\r\n\t * notation, the properties are organized like this:\r\n\t *\r\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\r\n\t * constructor, it creates an <i>identity matrix</i> with the following\r\n\t * values:</p>\r\n\t *\r\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\r\n\t *\r\n\t * @param a  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when scaling or rotating an image.\r\n\t * @param b  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when rotating or skewing an image.\r\n\t * @param c  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when rotating or skewing an image.\r\n\t * @param d  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when scaling or rotating an image..\r\n\t * @param tx The distance by which to translate each point along the <i>x</i>\r\n\t *           axis.\r\n\t * @param ty The distance by which to translate each point along the <i>y</i>\r\n\t *           axis.\r\n\t */\r\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\r\n\t{\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\r\n\t * copy of the contained object.\r\n\t *\r\n\t * @return A Matrix object.\r\n\t */\r\n\tpublic clone():Matrix\r\n\t{\r\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\r\n\t}\r\n\r\n\t/**\r\n\t * Concatenates a matrix with the current matrix, effectively combining the\r\n\t * geometric effects of the two. In mathematical terms, concatenating two\r\n\t * matrixes is the same as combining them using matrix multiplication.\r\n\t *\r\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\r\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\r\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\r\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\r\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\r\n\t *\r\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\r\n\t * you want to concatenate two matrixes without altering either of the two\r\n\t * source matrixes, first copy the source matrix by using the\r\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\r\n\t *\r\n\t * @param matrix The matrix to be concatenated to the source matrix.\r\n\t */\r\n\tpublic concat(matrix:Matrix):void\r\n\t{\r\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\r\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\r\n\t\tthis.a = a1;\r\n\r\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\r\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\r\n\r\n\t\tthis.c = c1;\r\n\r\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\r\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\r\n\t\tthis.tx = tx1;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\r\n\t * object.\r\n\t *\r\n\t * @param column   The column from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (column > 2) {\r\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\r\n\t\t} else if (column == 0) {\r\n\t\t\tthis.a = vector3D.x;\r\n\t\t\tthis.c = vector3D.y;\r\n\t\t} else if (column == 1) {\r\n\t\t\tthis.b = vector3D.x;\r\n\t\t\tthis.d = vector3D.y;\r\n\t\t} else {\r\n\t\t\tthis.tx = vector3D.x;\r\n\t\t\tthis.ty = vector3D.y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific column of the calling Matrix object into the Vector3D\r\n\t * object. The w element of the Vector3D object will not be changed.\r\n\t *\r\n\t * @param column   The column from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (column > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (column == 0) {\r\n\t\t\tvector3D.x = this.a;\r\n\t\t\tvector3D.y = this.c;\r\n\t\t\tvector3D.z = 0;\r\n\t\t} else if (column == 1) {\r\n\t\t\tvector3D.x = this.b;\r\n\t\t\tvector3D.y = this.d;\r\n\t\t\tvector3D.z = 0;\r\n\t\t} else {\r\n\t\t\tvector3D.x = this.tx;\r\n\t\t\tvector3D.y = this.ty;\r\n\t\t\tvector3D.z = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of the matrix data from the source Point object into the\r\n\t * calling Matrix object.\r\n\t *\r\n\t * @param sourceMatrix The Matrix object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceMatrix:Matrix):void\r\n\t{\r\n\t\tthis.a = sourceMatrix.a;\r\n\t\tthis.b = sourceMatrix.b;\r\n\t\tthis.c = sourceMatrix.c;\r\n\t\tthis.d = sourceMatrix.d;\r\n\t\tthis.tx = sourceMatrix.tx;\r\n\t\tthis.ty = sourceMatrix.ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\r\n\t *\r\n\t * @param row      The row from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (row > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (row == 0) {\r\n\t\t\tthis.a = vector3D.x;\r\n\t\t\tthis.c = vector3D.y;\r\n\t\t} else if (row == 1) {\r\n\t\t\tthis.b = vector3D.x;\r\n\t\t\tthis.d = vector3D.y;\r\n\t\t} else {\r\n\t\t\tthis.tx = vector3D.x;\r\n\t\t\tthis.ty = vector3D.y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\r\n\t * The w element of the Vector3D object will not be changed.\r\n\t *\r\n\t * @param row      The row from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (row > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (row == 0) {\r\n\t\t\tvector3D.x = this.a;\r\n\t\t\tvector3D.y = this.b;\r\n\t\t\tvector3D.z = this.tx;\r\n\t\t} else if (row == 1) {\r\n\t\t\tvector3D.x = this.c;\r\n\t\t\tvector3D.y = this.d;\r\n\t\t\tvector3D.z = this.ty;\r\n\t\t} else {\r\n\t\t\tvector3D.setTo(0, 0, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Includes parameters for scaling, rotation, and translation. When applied\r\n\t * to a matrix it sets the matrix's values based on those parameters.\r\n\t *\r\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\r\n\t * matrix as you would if you applied the <code>identity()</code>,\r\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\r\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\r\n\t * 100, 100)</code> has the same effect as the following:</p>\r\n\t *\r\n\t * @param scaleX   The factor by which to scale horizontally.\r\n\t * @param scaleY   The factor by which scale vertically.\r\n\t * @param rotation The amount to rotate, in radians.\r\n\t * @param tx       The number of pixels to translate(move) to the right\r\n\t *                 along the <i>x</i> axis.\r\n\t * @param ty       The number of pixels to translate(move) down along the\r\n\t *                 <i>y</i> axis.\r\n\t */\r\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\r\n\t{\r\n\t\tthis.a = scaleX;\r\n\t\tthis.d = scaleY;\r\n\t\tthis.b = rotation;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the specific style of matrix expected by the\r\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\r\n\t * methods of the Graphics class. Width and height are scaled to a\r\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\r\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\r\n\t * height.\r\n\t *\r\n\t * <p>For example, consider a gradient with the following\r\n\t * characteristics:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li><code>GradientType.LINEAR</code></li>\r\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\r\n\t * 255]</code></li>\r\n\t *   <li><code>SpreadMethod.PAD</code></li>\r\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The following illustrations show gradients in which the matrix was\r\n\t * defined using the <code>createGradientBox()</code> method with different\r\n\t * parameter settings:</p>\r\n\t *\r\n\t * @param width    The width of the gradient box.\r\n\t * @param height   The height of the gradient box.\r\n\t * @param rotation The amount to rotate, in radians.\r\n\t * @param tx       The distance, in pixels, to translate to the right along\r\n\t *                 the <i>x</i> axis. This value is offset by half of the\r\n\t *                 <code>width</code> parameter.\r\n\t * @param ty       The distance, in pixels, to translate down along the\r\n\t *                 <i>y</i> axis. This value is offset by half of the\r\n\t *                 <code>height</code> parameter.\r\n\t */\r\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\r\n\t{\r\n\t\tthis.a = width/1638.4;\r\n\t\tthis.d = height/1638.4;\r\n\r\n\t\tif (rotation != 0.0) {\r\n\t\t\tvar cos = Math.cos(rotation);\r\n\t\t\tvar sin = Math.sin(rotation);\r\n\r\n\t\t\tthis.b = sin*this.d;\r\n\t\t\tthis.c = -sin*this.a;\r\n\t\t\tthis.a *= cos;\r\n\t\t\tthis.d *= cos;\r\n\t\t} else {\r\n\t\t\tthis.b = this.c = 0;\r\n\t\t}\r\n\r\n\t\tthis.tx = tx + width/2;\r\n\t\tthis.ty = ty + height/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a point in the pretransform coordinate space, returns the\r\n\t * coordinates of that point after the transformation occurs. Unlike the\r\n\t * standard transformation applied using the <code>transformPoint()</code>\r\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\r\n\t * does not consider the translation parameters <code>tx</code> and\r\n\t * <code>ty</code>.\r\n\t *\r\n\t * @param point The point for which you want to get the result of the matrix\r\n\t *              transformation.\r\n\t * @return The point resulting from applying the matrix transformation.\r\n\t */\r\n\tpublic deltaTransformPoint(point:Point):Point\r\n\t{\r\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets each matrix property to a value that causes a null transformation. An\r\n\t * object transformed by applying an identity matrix will be identical to the\r\n\t * original.\r\n\t *\r\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\r\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\r\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\r\n\t * <code>ty</code>=0.</p>\r\n\t *\r\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\r\n\t *\r\n\t */\r\n\tpublic identity():void\r\n\t{\r\n\t\tthis.a = 1;\r\n\t\tthis.b = 0;\r\n\t\tthis.c = 0;\r\n\t\tthis.d = 1;\r\n\t\tthis.tx = 0;\r\n\t\tthis.ty = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the opposite transformation of the original matrix. You can apply\r\n\t * an inverted matrix to an object to undo the transformation performed when\r\n\t * applying the original matrix.\r\n\t */\r\n\tpublic invert():void\r\n\t{\r\n\t\tvar norm = this.a*this.d - this.b*this.c;\r\n\r\n\t\tif (norm == 0) {\r\n\t\t\tthis.a = this.b = this.c = this.d = 0;\r\n\t\t\tthis.tx = -this.tx;\r\n\t\t\tthis.ty = -this.ty;\r\n\t\t} else {\r\n\t\t\tnorm = 1.0/norm;\r\n\t\t\tvar a1 = this.d*norm;\r\n\t\t\tthis.d = this.a*norm;\r\n\t\t\tthis.a = a1;\r\n\t\t\tthis.b *= -norm;\r\n\t\t\tthis.c *= -norm;\r\n\r\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\r\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\r\n\t\t\tthis.tx = tx1;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\r\n\t * copy of the contained object.\r\n\t *\r\n\t * @param matrix The matrix for which you want to get the result of the matrix\r\n\t *               transformation.\r\n\t * @return A Matrix object.\r\n\t */\r\n\tpublic multiply(matrix:Matrix):Matrix\r\n\t{\r\n\t\tvar result = new Matrix();\r\n\r\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\r\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\r\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\r\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\r\n\r\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\r\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a rotation transformation to the Matrix object.\r\n\t *\r\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\r\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\r\n\t * Matrix object. In matrix notation, this is the same as concatenating the\r\n\t * current matrix with the following:</p>\r\n\t *\r\n\t * @param angle The rotation angle in radians.\r\n\t */\r\n\tpublic rotate(angle:number):void\r\n\t{\r\n\t\tvar cos = Math.cos(angle);\r\n\t\tvar sin = Math.sin(angle);\r\n\r\n\t\tvar a1 = this.a*cos - this.b*sin;\r\n\t\tthis.b = this.a*sin + this.b*cos;\r\n\t\tthis.a = a1;\r\n\r\n\t\tvar c1 = this.c*cos - this.d*sin;\r\n\t\tthis.d = this.c*sin + this.d*cos;\r\n\t\tthis.c = c1;\r\n\r\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\r\n\t\tthis.ty = this.tx*sin + this.ty*cos;\r\n\t\tthis.tx = tx1;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\r\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\r\n\t * <code>sy</code>.\r\n\t *\r\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\r\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\r\n\t * is the same as concatenating the current matrix with the following\r\n\t * matrix:</p>\r\n\t *\r\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\r\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\r\n\t */\r\n\tpublic scale(sx:number, sy:number):void\r\n\t{\r\n\t\tthis.a *= sx;\r\n\t\tthis.b *= sy;\r\n\r\n\t\tthis.c *= sx;\r\n\t\tthis.d *= sy;\r\n\r\n\t\tthis.tx *= sx;\r\n\t\tthis.ty *= sy;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Matrix to the specified values.\r\n\t *\r\n\t * @param a  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when scaling or rotating an image.\r\n\t * @param b  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when rotating or skewing an image.\r\n\t * @param c  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when rotating or skewing an image.\r\n\t * @param d  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when scaling or rotating an image..\r\n\t * @param tx The distance by which to translate each point along the <i>x</i>\r\n\t *           axis.\r\n\t * @param ty The distance by which to translate each point along the <i>y</i>\r\n\t *           axis.\r\n\t */\r\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\r\n\t{\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a text value listing the properties of the Matrix object.\r\n\t *\r\n\t * @return A string containing the values of the properties of the Matrix\r\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\r\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the result of applying the geometric transformation represented by\r\n\t * the Matrix object to the specified point.\r\n\t *\r\n\t * @param point The point for which you want to get the result of the Matrix\r\n\t *              transformation.\r\n\t * @return The point resulting from applying the Matrix transformation.\r\n\t */\r\n\tpublic transformPoint(point:Point):Point\r\n\t{\r\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\r\n\t}\r\n\r\n\t/**\r\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\r\n\t * by the <code>dx</code> and <code>dy</code> parameters.\r\n\t *\r\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\r\n\t *           pixels.\r\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\r\n\t */\r\n\tpublic translate(dx:number, dy:number):void\r\n\t{\r\n\t\tthis.tx += dx;\r\n\t\tthis.ty += dy;\r\n\t}\r\n}\r\n\r\nexport = Matrix;",
    "/**\r\n * A Quaternion object which can be used to represent rotations.\r\n */\r\nclass Orientation3D\r\n{\r\n\t/**\r\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\r\n\r\n\t/**\r\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\r\n\r\n\t/**\r\n\t * The quaternion orientation uses complex numbers.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static QUATERNION:string = \"quaternion\";\r\n}\r\n\r\nexport = Orientation3D;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\n/**\r\n * <p>The PerspectiveProjection class provides an easy way to assign or modify\r\n * the perspective transformations of a display object and all of its\r\n * children. For more complex or custom perspective transformations, use the\r\n * Matrix3D class. While the PerspectiveProjection class provides basic\r\n * three-dimensional presentation properties, the Matrix3D class provides more\r\n * detailed control over the three-dimensional presentation of display objects.\r\n * </p>\r\n *\r\n * <p>Projection is a way of representing a three-dimensional object in a\r\n * two-dimensional space, like a cube projected onto a computer screen.\r\n * Perspective projection uses a viewing frustum (a rectangular pyramid) to\r\n * model and project a three-dimensional world and its objects on the screen.\r\n * The viewing frustum becomes increasingly wider as it moves further from the\r\n * origin of the viewpoint. The origin of the viewpoint could be a camera or\r\n * the eyes of an observer facing the screen. The projected perspective\r\n * produces the illusion of three dimensions with depth and distance, where\r\n * the objects closer to the screen appear larger than the objects farther\r\n * from the screen.</p>\r\n *\r\n * <p>A default PerspectiveProjection object is a framework defined for\r\n * perspective transformation of the root object, based on the field of view\r\n * and aspect ratio (dimensions) of the stage. The projection center, the\r\n * vanishing point, is set to the center of the stage, which means the\r\n * three-dimensional display objects disappear toward the center of the stage\r\n * as they move back in the z axis. The default viewpoint is at point (0,0)\r\n * looking down the positive z axis. The y-axis points down toward the bottom\r\n * of the screen. You can gain access to the root display object's perspective\r\n * projection settings and change the field of view and projection center\r\n * properties of the perspectiveProjection property through the root object's\r\n * <code>DisplayObject.transform</code> property.</p>\r\n *\r\n * <p>You can also set a different perspective projection setting for a\r\n * display object through the parent's perspective projection. First, create a\r\n * PerspectiveProjection object and set its <code>fieldOfView</code> and\r\n * <code>projectionCenter</code> properties. Next, assign the\r\n * PerspectiveProjection object to the parent display object using the\r\n * <code>DisplayObject.transform</code> property. The specified projection\r\n * matrix and transformation will then apply to all the display object's\r\n * three-dimensional children.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass PerspectiveProjection\r\n{\r\n\tprivate _matrix3D:Matrix3D;\r\n\r\n\t/**\r\n\t * Specifies an angle, as a degree between 0 and 180, for the field of\r\n\t * view in three dimensions. This value determines how strong the\r\n\t * perspective transformation and distortion apply to a\r\n\t * three-dimensional display object with a non-zero z-coordinate.\r\n\t *\r\n\t * <p>A degree close to 0 means that the screen's two-dimensional x-\r\n\t * and y-coordinates are roughly the same as the three-dimensional x-,\r\n\t * y-, and z-coordinates with little or no distortion. In other words,\r\n\t * for a small angle, a display object moving down the z axis appears\r\n\t * to stay near the same size and moves little.</p>\r\n\t *\r\n\t * <p>A value close to 180 degrees results in a fisheye projection effect:\r\n\t * positions with a z value smaller than 0 are magnified, while\r\n\t * positions with a z value larger than 0 are minimized. With a large\r\n\t * angle, a display object moving down the z axis appears to change\r\n\t * size quickly and moves a great distance. If the field of view is\r\n\t * set to 0 or 180, nothing is seen on the screen.</p>\r\n\t */\r\n\tpublic fieldOfView:number;\r\n\r\n\t/**\r\n\t * The distance between the eye or the viewpoint's origin (0,0,0) and\r\n\t * the display object located in the z axis. During the perspective\r\n\t * transformation, the <code>focalLength</code> is calculated\r\n\t * dynamically using the angle of the field of view and the stage's\r\n\t * aspect ratio (stage width divided by stage height).\r\n\t *\r\n\t * @see away.geom.PerspectiveProjection#fieldOfView\r\n\t */\r\n\tpublic focalLength:number;\r\n\r\n\t/**\r\n\t * A two-dimensional point representing the center of the projection,\r\n\t * the vanishing point for the display object.\r\n\t *\r\n\t * <p>The <code>projectionCenter</code> property is an offset to the\r\n\t * default registration point that is the upper left of the stage,\r\n\t * point (0,0). The default projection transformation center is in the\r\n\t * middle of the stage, which means the three-dimensional display\r\n\t * objects disappear toward the center of the stage as they move\r\n\t * backwards in the z axis.</p>\r\n\t */\r\n\tpublic projectionCenter:Point;\r\n\r\n\t/**\r\n\t * Creates an instance of a PerspectiveProjection object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t * Returns the underlying Matrix3D object of the display object.\r\n\t *\r\n\t * <p>A display object, like the root object, can have a\r\n\t * PerspectiveProjection object without needing a Matrix3D property\r\n\t * defined for its transformations. In fact, use either a\r\n\t * PerspectiveProjection or a Matrix3D object to specify the\r\n\t * perspective transformation. If when using the PerspectiveProjection\r\n\t * object, a Matrix3D object was needed, the <code>toMatrix3D()</code>\r\n\t * method can retrieve the underlying Matrix3D object of the display\r\n\t * object. For example, the <code>toMatrix3D()</code> method can be\r\n\t * used with the <code>Utils3D.projectVectors()</code> method.</p>\r\n\t *\r\n\t * @see away.geom.Matrix3D\r\n\t */\r\n\tpublic toMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._matrix3D;\r\n\t}\r\n}\r\n\r\nexport = PerspectiveProjection;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass Plane3D\r\n{\r\n\t/**\r\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\r\n\t */\r\n\tpublic a:number;\r\n\r\n\t/**\r\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\r\n\t */\r\n\tpublic b:number;\r\n\r\n\t/**\r\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\r\n\t */\r\n\tpublic c:number;\r\n\r\n\t/**\r\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\r\n\t */\r\n\tpublic d:number;\r\n\r\n\tpublic _iAlignment:number;\r\n\r\n\t// indicates the alignment of the plane\r\n\tpublic static ALIGN_ANY:number = 0;\r\n\tpublic static ALIGN_XY_AXIS:number = 1;\r\n\tpublic static ALIGN_YZ_AXIS:number = 2;\r\n\tpublic static ALIGN_XZ_AXIS:number = 3;\r\n\r\n\t/**\r\n\t * Create a Plane3D with ABCD coefficients\r\n\t */\r\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\r\n\t{\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\r\n\t\tif (a == 0 && b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (b == 0 && c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (a == 0 && c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\r\n\t * @param p0 Vector3D\r\n\t * @param p1 Vector3D\r\n\t * @param p2 Vector3D\r\n\t */\r\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D)\r\n\t{\r\n\t\tvar d1x:number = p1.x - p0.x;\r\n\t\tvar d1y:number = p1.y - p0.y;\r\n\t\tvar d1z:number = p1.z - p0.z;\r\n\r\n\t\tvar d2x:number = p2.x - p0.x;\r\n\t\tvar d2y:number = p2.y - p0.y;\r\n\t\tvar d2z:number = p2.z - p0.z;\r\n\r\n\t\tthis.a = d1y*d2z - d1z*d2y;\r\n\t\tthis.b = d1z*d2x - d1x*d2z;\r\n\t\tthis.c = d1x*d2y - d1y*d2x;\r\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\r\n\r\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\r\n\t\tif (this.a == 0 && this.b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (this.b == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (this.a == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\r\n\t * @param normal Vector3D\r\n\t * @param point  Vector3D\r\n\t */\r\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D)\r\n\t{\r\n\t\tthis.a = normal.x;\r\n\t\tthis.b = normal.y;\r\n\t\tthis.c = normal.z;\r\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\r\n\t\tif (this.a == 0 && this.b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (this.b == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (this.a == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize this Plane3D\r\n\t * @return Plane3D This Plane3D.\r\n\t */\r\n\tpublic normalize():Plane3D\r\n\t{\r\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\r\n\t\tthis.a *= len;\r\n\t\tthis.b *= len;\r\n\t\tthis.c *= len;\r\n\t\tthis.d *= len;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the signed distance between this Plane3D and the point p.\r\n\t * @param p Vector3D\r\n\t * @returns Number\r\n\t */\r\n\tpublic distance(p:Vector3D):number\r\n\t{\r\n\r\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\r\n\r\n\t\t\treturn this.a*p.x - this.d;\r\n\r\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\r\n\t\t\treturn this.b*p.y - this.d;\r\n\t\t}\r\n\r\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\r\n\r\n\t\t\treturn this.c*p.z - this.d;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\r\n\t * @param p Vector3D\r\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\r\n\t */\r\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\r\n\t{\r\n\t\t// check NaN\r\n\t\tif (this.d != this.d)\r\n\t\t\treturn PlaneClassification.FRONT;\r\n\r\n\t\tvar len:number;\r\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\r\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\r\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\r\n\t\t\tlen = this.c*p.z - this.d; else\r\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\r\n\r\n\t\tif (len < -epsilon)\r\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\r\n\t\t\treturn PlaneClassification.FRONT; else\r\n\t\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\r\n\t}\r\n}\r\n\r\nexport = Plane3D;",
    "class PlaneClassification\r\n{\r\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\r\n\tpublic static BACK:number = 0;\r\n\tpublic static FRONT:number = 1;\r\n\r\n\tpublic static IN:number = 0;\r\n\tpublic static OUT:number = 1;\r\n\tpublic static INTERSECT:number = 2;\r\n\r\n}\r\n\r\nexport = PlaneClassification;",
    "/**\r\n * The Point object represents a location in a two-dimensional coordinate\r\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\r\n * represents the vertical axis.\r\n *\r\n * <p>The following code creates a point at(0,0):</p>\r\n *\r\n * <p>Methods and properties of the following classes use Point objects:</p>\r\n *\r\n * <ul>\r\n *   <li>BitmapData</li>\r\n *   <li>DisplayObject</li>\r\n *   <li>DisplayObjectContainer</li>\r\n *   <li>DisplacementMapFilter</li>\r\n *   <li>NativeWindow</li>\r\n *   <li>Matrix</li>\r\n *   <li>Rectangle</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Point()</code> constructor to create a Point\r\n * object.</p>\r\n */\r\nclass Point\r\n{\r\n\t/**\r\n\t * The horizontal coordinate of the point. The default value is 0.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate of the point. The default value is 0.\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The length of the line segment from(0,0) to this point.\r\n\t */\r\n\tpublic get length():number\r\n\t{\r\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new point. If you pass no parameters to this method, a point is\r\n\t * created at(0,0).\r\n\t *\r\n\t * @param x The horizontal coordinate.\r\n\t * @param y The vertical coordinate.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the coordinates of another point to the coordinates of this point to\r\n\t * create a new point.\r\n\t *\r\n\t * @param v The point to be added.\r\n\t * @return The new point.\r\n\t */\r\n\tpublic add(v:Point):Point\r\n\t{\r\n\t\treturn new Point(this.x + v.x, this.y + v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of this Point object.\r\n\t *\r\n\t * @return The new Point object.\r\n\t */\r\n\tpublic clone():Point\r\n\t{\r\n\t\treturn new Point(this.x, this.y);\r\n\t}\r\n\r\n\tpublic copyFrom(sourcePoint:Point)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether two points are equal. Two points are equal if they have\r\n\t * the same <i>x</i> and <i>y</i> values.\r\n\t *\r\n\t * @param toCompare The point to be compared.\r\n\t * @return A value of <code>true</code> if the object is equal to this Point\r\n\t *         object; <code>false</code> if it is not equal.\r\n\t */\r\n\tpublic equals(toCompare:Point):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the line segment between(0,0) and the current point to a set\r\n\t * length.\r\n\t *\r\n\t * @param thickness The scaling value. For example, if the current point is\r\n\t *                 (0,5), and you normalize it to 1, the point returned is\r\n\t *                  at(0,1).\r\n\t */\r\n\tpublic normalize(thickness:number = 1)\r\n\t{\r\n\t\tif (this.length != 0) {\r\n\t\t\tvar invLength = thickness/this.length;\r\n\t\t\tthis.x *= invLength;\r\n\t\t\tthis.y *= invLength;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthrow \"Cannot divide by zero length.\";\r\n\t}\r\n\r\n\t/**\r\n\t * Offsets the Point object by the specified amount. The value of\r\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\r\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\r\n\t * value of <i>y</i> to create the new <i>y</i> value.\r\n\t *\r\n\t * @param dx The amount by which to offset the horizontal coordinate,\r\n\t *           <i>x</i>.\r\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\r\n\t */\r\n\tpublic offset(dx:number, dy:number)\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t}\r\n\r\n\tpublic setTo(xa:number, ya:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the coordinates of another point from the coordinates of this\r\n\t * point to create a new point.\r\n\t *\r\n\t * @param v The point to be subtracted.\r\n\t * @return The new point.\r\n\t */\r\n\tpublic subtract(v:Point):Point\r\n\t{\r\n\t\treturn new Point(this.x - v.x, this.y - v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\r\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\r\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\r\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\r\n\t *\r\n\t * @return The string representation of the coordinates.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\r\n\t *\r\n\t * @param pt1 The first point.\r\n\t * @param pt2 The second point.\r\n\t * @return The distance between the first and second points.\r\n\t */\r\n\tpublic static distance(pt1:Point, pt2:Point):number\r\n\t{\r\n\t\tvar dx:number = pt2.x - pt1.x;\r\n\t\tvar dy:number = pt2.y - pt1.y;\r\n\r\n\t\treturn Math.sqrt(dx*dx + dy*dy);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines a point between two specified points. The parameter\r\n\t * <code>f</code> determines where the new interpolated point is located\r\n\t * relative to the two end points specified by parameters <code>pt1</code>\r\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\r\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\r\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\r\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\r\n\t * point(parameter <code>pt2</code>).\r\n\t *\r\n\t * @param pt1 The first point.\r\n\t * @param pt2 The second point.\r\n\t * @param f   The level of interpolation between the two points. Indicates\r\n\t *            where the new point will be, along the line between\r\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\r\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\r\n\t *            <code>pt2</code> is returned.\r\n\t * @return The new, interpolated point.\r\n\t */\r\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\r\n\t{\r\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\r\n\t *\r\n\t * @param len   The length coordinate of the polar pair.\r\n\t * @param angle The angle, in radians, of the polar pair.\r\n\t * @return The Cartesian point.\r\n\t */\r\n\tpublic static polar(len:number, angle:number):Point\r\n\t{\r\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\r\n\t}\r\n}\r\n\r\nexport = Point;\r\n",
    "class PoissonLookup\r\n{\r\n\tpublic static _distributions:Array<Array<number>>;\r\n\r\n\tpublic static initDistributions():void\r\n\t{\r\n\t\t// precalculated for best control\r\n\t\tthis._distributions = new Array<Array<number>>();\r\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\r\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\r\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\r\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\r\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\r\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\r\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\r\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\r\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\r\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\r\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\r\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\r\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\r\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\r\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\r\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\r\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\r\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\r\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\r\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\r\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\r\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\r\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\r\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\r\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\r\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\r\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\r\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\r\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\r\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\r\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\r\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\r\n\t}\r\n\r\n\tpublic static getDistribution(n:number /*int*/):Array<number>\r\n\t{\r\n\t\tif (!this._distributions)\r\n\t\t\tthis.initDistributions();\r\n\r\n\t\tif (n < 2 || n > 32)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this._distributions[n - 1];\r\n\t}\r\n}\r\n\r\nexport = PoissonLookup;",
    "import Matrix3DUtils\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Orientation3D\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\r\nimport Matrix3D\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n/**\r\n * A Quaternion object which can be used to represent rotations.\r\n */\r\nclass Quaternion\r\n{\r\n\t/**\r\n\t * The x value of the quaternion.\r\n\t */\r\n\tpublic x:number = 0;\r\n\r\n\t/**\r\n\t * The y value of the quaternion.\r\n\t */\r\n\tpublic y:number = 0;\r\n\r\n\t/**\r\n\t * The z value of the quaternion.\r\n\t */\r\n\tpublic z:number = 0;\r\n\r\n\t/**\r\n\t * The w value of the quaternion.\r\n\t */\r\n\tpublic w:number = 1;\r\n\r\n\t/**\r\n\t * Creates a new Quaternion object.\r\n\t * @param x The x value of the quaternion.\r\n\t * @param y The y value of the quaternion.\r\n\t * @param z The z value of the quaternion.\r\n\t * @param w The w value of the quaternion.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the magnitude of the quaternion object.\r\n\t */\r\n\tpublic get magnitude():number\r\n\t{\r\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\r\n\t *\r\n\t * @param    qa    The first quaternion in the multiplication.\r\n\t * @param    qb    The second quaternion in the multiplication.\r\n\t */\r\n\tpublic multiply(qa:Quaternion, qb:Quaternion)\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\r\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\r\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\r\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\r\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\r\n\t}\r\n\r\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\r\n\t{\r\n\t\t//target ||= new Quaternion();\r\n\t\tif (target === null) {\r\n\t\t\ttarget = new Quaternion();\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar x2:number = vector.x;\r\n\t\tvar y2:number = vector.y;\r\n\t\tvar z2:number = vector.z;\r\n\r\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\r\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\r\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\r\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with values representing the given rotation around a vector.\r\n\t *\r\n\t * @param    axis    The axis around which to rotate\r\n\t * @param    angle    The angle in radians of the rotation.\r\n\t */\r\n\tpublic fromAxisAngle(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar sin_a:number = Math.sin(angle/2);\r\n\t\tvar cos_a:number = Math.cos(angle/2);\r\n\r\n\t\tthis.x = axis.x*sin_a;\r\n\t\tthis.y = axis.y*sin_a;\r\n\t\tthis.z = axis.z*sin_a;\r\n\t\tthis.w = cos_a;\r\n\r\n\t\tthis.normalize();\r\n\t}\r\n\r\n\t/**\r\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\r\n\t * @param qa The first quaternion to interpolate.\r\n\t * @param qb The second quaternion to interpolate.\r\n\t * @param t The interpolation weight, a value between 0 and 1.\r\n\t */\r\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number)\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\r\n\r\n\t\t// shortest direction\r\n\t\tif (dot < 0) {\r\n\t\t\tdot = -dot;\r\n\t\t\tw2 = -w2;\r\n\t\t\tx2 = -x2;\r\n\t\t\ty2 = -y2;\r\n\t\t\tz2 = -z2;\r\n\t\t}\r\n\r\n\t\tif (dot < 0.95) {\r\n\t\t\t// interpolate angle linearly\r\n\t\t\tvar angle:number = Math.acos(dot);\r\n\t\t\tvar s:number = 1/Math.sin(angle);\r\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\r\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\r\n\t\t\tthis.w = w1*s1 + w2*s2;\r\n\t\t\tthis.x = x1*s1 + x2*s2;\r\n\t\t\tthis.y = y1*s1 + y2*s2;\r\n\t\t\tthis.z = z1*s1 + z2*s2;\r\n\t\t} else {\r\n\t\t\t// nearly identical angle, interpolate linearly\r\n\t\t\tthis.w = w1 + t*(w2 - w1);\r\n\t\t\tthis.x = x1 + t*(x2 - x1);\r\n\t\t\tthis.y = y1 + t*(y2 - y1);\r\n\t\t\tthis.z = z1 + t*(z2 - z1);\r\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t\t\tthis.w *= len;\r\n\t\t\tthis.x *= len;\r\n\t\t\tthis.y *= len;\r\n\t\t\tthis.z *= len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolates between two quaternions.\r\n\t * @param qa The first quaternion to interpolate.\r\n\t * @param qb The second quaternion to interpolate.\r\n\t * @param t The interpolation weight, a value between 0 and 1.\r\n\t */\r\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number)\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\t\tvar len:number;\r\n\r\n\t\t// shortest direction\r\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\r\n\t\t\tw2 = -w2;\r\n\t\t\tx2 = -x2;\r\n\t\t\ty2 = -y2;\r\n\t\t\tz2 = -z2;\r\n\t\t}\r\n\r\n\t\tthis.w = w1 + t*(w2 - w1);\r\n\t\tthis.x = x1 + t*(x2 - x1);\r\n\t\tthis.y = y1 + t*(y2 - y1);\r\n\t\tthis.z = z1 + t*(z2 - z1);\r\n\r\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t\tthis.w *= len;\r\n\t\tthis.x *= len;\r\n\t\tthis.y *= len;\r\n\t\tthis.z *= len;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with values representing the given euler rotation.\r\n\t *\r\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\r\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\r\n\t * @param    az        The angle in radians of the rotation around the az axis.\r\n\t */\r\n\tpublic fromEulerAngles(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\r\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\r\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\r\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\r\n\r\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\r\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\r\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\r\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\r\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\r\n\t * @return The Vector3D containing the Euler angles.\r\n\t */\r\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\r\n\t{\r\n\r\n\t\t//target ||= new Vector3D();\r\n\t\tif (target === null) {\r\n\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\t}\r\n\r\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\r\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\r\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalises the quaternion object.\r\n\t */\r\n\tpublic normalize(val:number = 1)\r\n\t{\r\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\r\n\r\n\t\tthis.x *= mag;\r\n\t\tthis.y *= mag;\r\n\t\tthis.z *= mag;\r\n\t\tthis.w *= mag;\r\n\t}\r\n\r\n\t/**\r\n\t * Used to trace the values of a quaternion.\r\n\t *\r\n\t * @return A string representation of the quaternion object.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\r\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\r\n\t * @return A Matrix3D object representing an equivalent rotation.\r\n\t */\r\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\r\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\r\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\r\n\r\n\t\trawData[0] = xx - yy - zz + ww;\r\n\t\trawData[4] = xy2 - zw2;\r\n\t\trawData[8] = xz2 + yw2;\r\n\t\trawData[12] = 0;\r\n\t\trawData[1] = xy2 + zw2;\r\n\t\trawData[5] = -xx + yy - zz + ww;\r\n\t\trawData[9] = yz2 - xw2;\r\n\t\trawData[13] = 0;\r\n\t\trawData[2] = xz2 - yw2;\r\n\t\trawData[6] = yz2 + xw2;\r\n\t\trawData[10] = -xx - yy + zz + ww;\r\n\t\trawData[14] = 0;\r\n\t\trawData[3] = 0.0;\r\n\t\trawData[7] = 0.0;\r\n\t\trawData[11] = 0;\r\n\t\trawData[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\treturn new Matrix3D(rawData);\r\n\r\n\t\ttarget.copyRawDataFrom(rawData);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\r\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\r\n\t */\r\n\tpublic fromMatrix(matrix:Matrix3D)\r\n\t{\r\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = v.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\r\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\r\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\r\n\t */\r\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false)\r\n\t{\r\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\r\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\r\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\r\n\r\n\t\ttarget[0] = xx - yy - zz + ww;\r\n\t\ttarget[1] = xy2 - zw2;\r\n\t\ttarget[2] = xz2 + yw2;\r\n\t\ttarget[4] = xy2 + zw2;\r\n\t\ttarget[5] = -xx + yy - zz + ww;\r\n\t\ttarget[6] = yz2 - xw2;\r\n\t\ttarget[8] = xz2 - yw2;\r\n\t\ttarget[9] = yz2 + xw2;\r\n\t\ttarget[10] = -xx - yy + zz + ww;\r\n\t\ttarget[3] = target[7] = target[11] = 0;\r\n\r\n\t\tif (!exclude4thRow) {\r\n\t\t\ttarget[12] = target[13] = target[14] = 0;\r\n\t\t\ttarget[15] = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the quaternion.\r\n\t * @return An exact duplicate of the current Quaternion.\r\n\t */\r\n\tpublic clone():Quaternion\r\n\t{\r\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates a point.\r\n\t * @param vector The Vector3D object to be rotated.\r\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\r\n\t * @return A Vector3D object containing the rotated point.\r\n\t */\r\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\r\n\t{\r\n\t\tvar x1:number, y1:number, z1:number, w1:number;\r\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\r\n\r\n\t\t//target ||= new Vector3D();\r\n\t\tif (target === null) {\r\n\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\t}\r\n\r\n\t\t// p*q'\r\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\r\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\r\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\r\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\r\n\r\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\r\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\r\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the data from a quaternion into this instance.\r\n\t * @param q The quaternion to copy from.\r\n\t */\r\n\tpublic copyFrom(q:Quaternion)\r\n\t{\r\n\t\tthis.x = q.x;\r\n\t\tthis.y = q.y;\r\n\t\tthis.z = q.z;\r\n\t\tthis.w = q.w;\r\n\t}\r\n}\r\n\r\nexport = Quaternion;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\n/**\r\n * A Rectangle object is an area defined by its position, as indicated by its\r\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\r\n *\r\n *\r\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\r\n * <code>height</code> properties of the Rectangle class are independent of\r\n * each other; changing the value of one property has no effect on the others.\r\n * However, the <code>right</code> and <code>bottom</code> properties are\r\n * integrally related to those four properties. For example, if you change the\r\n * value of the <code>right</code> property, the value of the\r\n * <code>width</code> property changes; if you change the <code>bottom</code>\r\n * property, the value of the <code>height</code> property changes. </p>\r\n *\r\n * <p>The following methods and properties use Rectangle objects:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\r\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\r\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\r\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\r\n * <code>merge()</code>, <code>paletteMap()</code>,\r\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\r\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\r\n * BitmapData class</li>\r\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\r\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\r\n * DisplayObject class</li>\r\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\r\n * class</li>\r\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\r\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\r\n * method of the Sprite class</li>\r\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\r\n * method of the PrintJob class</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\r\n * Rectangle object.</p>\r\n *\r\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\r\n * display object. To draw a rectangular Shape object onscreen, use the\r\n * <code>drawRect()</code> method of the Graphics class.</p>\r\n */\r\nclass Rectangle\r\n{\r\n\tprivate _size:Point;\r\n\tprivate _bottomRight:Point;\r\n\tprivate _topLeft:Point;\r\n\r\n\t/**\r\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\r\n\t * value of a Rectangle object has no effect on the <code>x</code>,\r\n\t * <code>y</code>, and <code>width</code> properties.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\r\n\t * value of a Rectangle object has no effect on the <code>x</code>,\r\n\t * <code>y</code>, and <code>height</code> properties.\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the value of the <code>x</code> property of a Rectangle object has no\r\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\r\n\t * properties.\r\n\t *\r\n\t * <p>The value of the <code>x</code> property is equal to the value of the\r\n\t * <code>left</code> property.</p>\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the value of the <code>y</code> property of a Rectangle object has no\r\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\r\n\t * properties.\r\n\t *\r\n\t * <p>The value of the <code>y</code> property is equal to the value of the\r\n\t * <code>top</code> property.</p>\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The sum of the <code>y</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get bottom():number\r\n\t{\r\n\t\treturn this.y + this.height;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Rectangle object's bottom-right corner, determined by\r\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\r\n\t */\r\n\tpublic get bottomRight():Point\r\n\t{\r\n\t\tif (this._bottomRight == null)\r\n\t\t\tthis._bottomRight = new Point();\r\n\r\n\t\tthis._bottomRight.x = this.x + this.width;\r\n\t\tthis._bottomRight.y = this.y + this.height;\r\n\r\n\t\treturn this._bottomRight;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the <code>left</code> property of a Rectangle object has no effect on the\r\n\t * <code>y</code> and <code>height</code> properties. However it does affect\r\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\r\n\t * does <i>not</i> affect the <code>width</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get left():number\r\n\t{\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>x</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic get right():number\r\n\t{\r\n\t\treturn this.x + this.width;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the Rectangle object, expressed as a Point object with the\r\n\t * values of the <code>width</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get size():Point\r\n\t{\r\n\t\tif (this._size == null)\r\n\t\t\tthis._size = new Point();\r\n\r\n\t\tthis._size.x = this.width;\r\n\t\tthis._size.y = this.height;\r\n\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the <code>top</code> property of a Rectangle object has no effect on the\r\n\t * <code>x</code> and <code>width</code> properties. However it does affect\r\n\t * the <code>height</code> property, whereas changing the <code>y</code>\r\n\t * value does <i>not</i> affect the <code>height</code> property.\r\n\t *\r\n\t * <p>The value of the <code>top</code> property is equal to the value of the\r\n\t * <code>y</code> property.</p>\r\n\t */\r\n\tpublic get top():number\r\n\t{\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Rectangle object's top-left corner, determined by the\r\n\t * <i>x</i> and <i>y</i> coordinates of the point.\r\n\t */\r\n\tpublic get topLeft():Point\r\n\t{\r\n\t\tif (this._topLeft == null)\r\n\t\t\tthis._topLeft = new Point();\r\n\r\n\t\tthis._topLeft.x = this.x;\r\n\t\tthis._topLeft.y = this.y;\r\n\r\n\t\treturn this._topLeft;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Rectangle object with the top-left corner specified by the\r\n\t * <code>x</code> and <code>y</code> parameters and with the specified\r\n\t * <code>width</code> and <code>height</code> parameters. If you call this\r\n\t * public without parameters, a rectangle with <code>x</code>,\r\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\r\n\t * to 0 is created.\r\n\t *\r\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\r\n\t *               rectangle.\r\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\r\n\t *               rectangle.\r\n\t * @param width  The width of the rectangle, in pixels.\r\n\t * @param height The height of the rectangle, in pixels.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Rectangle object with the same values for the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties as the original Rectangle object.\r\n\t *\r\n\t * @return A new Rectangle object with the same values for the\r\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t *         <code>height</code> properties as the original Rectangle object.\r\n\t */\r\n\tpublic clone():Rectangle\r\n\t{\r\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified point is contained within the rectangular\r\n\t * region defined by this Rectangle object.\r\n\t *\r\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\r\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\r\n\t * @return A value of <code>true</code> if the Rectangle object contains the\r\n\t *         specified point; otherwise <code>false</code>.\r\n\t */\r\n\tpublic contains(x:number, y:number):boolean\r\n\t{\r\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified point is contained within the rectangular\r\n\t * region defined by this Rectangle object. This method is similar to the\r\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\r\n\t * object as a parameter.\r\n\t *\r\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\r\n\t *              coordinates.\r\n\t * @return A value of <code>true</code> if the Rectangle object contains the\r\n\t *         specified point; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsPoint(point:Point):boolean\r\n\t{\r\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\r\n\t * parameter is contained within this Rectangle object. A Rectangle object is\r\n\t * said to contain another if the second Rectangle object falls entirely\r\n\t * within the boundaries of the first.\r\n\t *\r\n\t * @param rect The Rectangle object being checked.\r\n\t * @return A value of <code>true</code> if the Rectangle object that you\r\n\t *         specify is contained by this Rectangle object; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic containsRect(rect:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of rectangle data from the source Rectangle object into the\r\n\t * calling Rectangle object.\r\n\t *\r\n\t * @param sourceRect The Rectangle object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceRect:Rectangle)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toCompare</code>\r\n\t * parameter is equal to this Rectangle object. This method compares the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties of an object against the same properties of\r\n\t * this Rectangle object.\r\n\t *\r\n\t * @param toCompare The rectangle to compare to this Rectangle object.\r\n\t * @return A value of <code>true</code> if the object has exactly the same\r\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\r\n\t *         and <code>height</code> properties as this Rectangle object;\r\n\t *         otherwise <code>false</code>.\r\n\t */\r\n\tpublic equals(toCompare:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Rectangle object by the specified amounts, in\r\n\t * pixels. The center point of the Rectangle object stays the same, and its\r\n\t * size increases to the left and right by the <code>dx</code> value, and to\r\n\t * the top and the bottom by the <code>dy</code> value.\r\n\t *\r\n\t * @param dx The value to be added to the left and the right of the Rectangle\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           width and position of the rectangle:\r\n\t * @param dy The value to be added to the top and the bottom of the\r\n\t *           Rectangle. The following equation is used to calculate the new\r\n\t *           height and position of the rectangle:\r\n\t */\r\n\tpublic inflate(dx:number, dy:number)\r\n\t{\r\n\t\tthis.x -= dx/2;\r\n\t\tthis.y -= dy/2;\r\n\t\tthis.width += dx/2;\r\n\t\tthis.height += dy/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Rectangle object. This method is similar to the\r\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\r\n\t * a parameter.\r\n\t *\r\n\t * <p>The following two code examples give the same result:</p>\r\n\t *\r\n\t * @param point The <code>x</code> property of this Point object is used to\r\n\t *              increase the horizontal dimension of the Rectangle object.\r\n\t *              The <code>y</code> property is used to increase the vertical\r\n\t *              dimension of the Rectangle object.\r\n\t */\r\n\tpublic inflatePoint(point:Point)\r\n\t{\r\n\t\tthis.x -= point.x/2;\r\n\t\tthis.y -= point.y/2;\r\n\t\tthis.width += point.x/2;\r\n\t\tthis.height += point.y/2;\r\n\t}\r\n\r\n\t/**\r\n\t * If the Rectangle object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Rectangle object, returns the area of\r\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\r\n\t * this method returns an empty Rectangle object with its properties set to\r\n\t * 0.\r\n\t *\r\n\t * @param toIntersect The Rectangle object to compare against to see if it\r\n\t *                    intersects with this Rectangle object.\r\n\t * @return A Rectangle object that equals the area of intersection. If the\r\n\t *         rectangles do not intersect, this method returns an empty\r\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\r\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\r\n\t *         properties set to 0.\r\n\t */\r\n\tpublic intersection(toIntersect:Rectangle):Rectangle\r\n\t{\r\n\t\tif (this.intersects(toIntersect)) {\r\n\t\t\tvar i:Rectangle = new Rectangle();\r\n\r\n\t\t\tif (this.x > toIntersect.x) {\r\n\t\t\t\ti.x = this.x;\r\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\r\n\r\n\t\t\t\tif (i.width > this.width)\r\n\t\t\t\t\ti.width = this.width;\r\n\t\t\t} else {\r\n\t\t\t\ti.x = toIntersect.x;\r\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\r\n\r\n\t\t\t\tif (i.width > toIntersect.width)\r\n\t\t\t\t\ti.width = toIntersect.width;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.y > toIntersect.y) {\r\n\t\t\t\ti.y = this.y;\r\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\r\n\r\n\t\t\t\tif (i.height > this.height)\r\n\t\t\t\t\ti.height = this.height;\r\n\t\t\t} else {\r\n\t\t\t\ti.y = toIntersect.y;\r\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\r\n\r\n\t\t\t\tif (i.height > toIntersect.height)\r\n\t\t\t\t\ti.height = toIntersect.height;\r\n\t\t\t}\r\n\r\n\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn new Rectangle();\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Rectangle object. This method checks the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties of the specified Rectangle object to see if\r\n\t * it intersects with this Rectangle object.\r\n\t *\r\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\r\n\t *                    object.\r\n\t * @return A value of <code>true</code> if the specified object intersects\r\n\t *         with this Rectangle object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic intersects(toIntersect:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not this Rectangle object is empty.\r\n\t *\r\n\t * @return A value of <code>true</code> if the Rectangle object's width or\r\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\r\n\t */\r\n\tpublic isEmpty():boolean\r\n\t{\r\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Rectangle object, as determined by its\r\n\t * top-left corner, by the specified amounts.\r\n\t *\r\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\r\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\r\n\t */\r\n\tpublic offset(dx:number, dy:number)\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Rectangle object using a Point object as a\r\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\r\n\t * method, except that it takes a Point object as a parameter.\r\n\t *\r\n\t * @param point A Point object to use to offset this Rectangle object.\r\n\t */\r\n\tpublic offsetPoint(point:Point)\r\n\t{\r\n\t\tthis.x += point.x;\r\n\t\tthis.y += point.y;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\r\n\t * empty if its width or height is less than or equal to 0.\r\n\t *\r\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\r\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\r\n\t *\r\n\t */\r\n\tpublic setEmpty()\r\n\t{\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.width = 0;\r\n\t\tthis.height = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Rectangle to the specified values\r\n\t *\r\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\r\n\t *                rectangle.\r\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\r\n\t *                rectangle.\r\n\t * @param widtha  The width of the rectangle, in pixels.\r\n\t * @param heighta The height of the rectangle, in pixels.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number)\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.width = widtha;\r\n\t\tthis.height = heighta;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds and returns a string that lists the horizontal and vertical\r\n\t * positions and the width and height of the Rectangle object.\r\n\t *\r\n\t * @return A string listing the value of each of the following properties of\r\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\r\n\t *         <code>width</code>, and <code>height</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Adds two rectangles together to create a new Rectangle object, by filling\r\n\t * in the horizontal and vertical space between the two rectangles.\r\n\t *\r\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\r\n\t * <code>0</code> as the height or width value, such as: <code>var\r\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\r\n\t *\r\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\r\n\t * @return A new Rectangle object that is the union of the two rectangles.\r\n\t */\r\n\tpublic union(toUnion:Rectangle):Rectangle\r\n\t{\r\n\t\tvar u:Rectangle = new Rectangle();\r\n\r\n\t\tif (this.x < toUnion.x) {\r\n\t\t\tu.x = this.x;\r\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\r\n\r\n\t\t\tif (u.width < this.width)\r\n\t\t\t\tu.width = this.width;\r\n\t\t} else {\r\n\t\t\tu.x = toUnion.x;\r\n\t\t\tu.width = this.x - toUnion.x + this.width;\r\n\r\n\t\t\tif (u.width < toUnion.width)\r\n\t\t\t\tu.width = toUnion.width;\r\n\t\t}\r\n\r\n\t\tif (this.y < toUnion.y) {\r\n\t\t\tu.y = this.y;\r\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\r\n\r\n\t\t\tif (u.height < this.height)\r\n\t\t\t\tu.height = this.height;\r\n\t\t} else {\r\n\t\t\tu.y = toUnion.y;\r\n\t\t\tu.height = this.y - toUnion.y + this.height;\r\n\r\n\t\t\tif (u.height < toUnion.height)\r\n\t\t\t\tu.height = toUnion.height;\r\n\t\t}\r\n\r\n\t\treturn u;\r\n\t}\r\n}\r\n\r\nexport = Rectangle;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass Sphere\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic z:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic radius:number;\r\n\r\n\t/**\r\n\t * Create a Sphere with ABCD coefficients\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, radius:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.radius = radius;\r\n\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif (this.containsPoint(position))\r\n\t\t\treturn 0;\r\n\r\n\t\tvar px:number = position.x - this.x, py:number = position.y - this.y, pz:number = position.z - this.z;\r\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\r\n\t\tvar rayEntryDistance:number;\r\n\r\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\r\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\r\n\t\tvar c:number = px*px + py*py + pz*pz - this.radius*this.radius;\r\n\t\tvar det:number = b*b - 4*a*c;\r\n\r\n\t\tif (det >= 0) { // ray goes through sphere\r\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\r\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\r\n\t\t\tif (rayEntryDistance >= 0) {\r\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\r\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\r\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\r\n\t\t\t\ttargetNormal.normalize();\r\n\r\n\t\t\t\treturn rayEntryDistance;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ray misses sphere\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic containsPoint(position:Vector3D):boolean\r\n\t{\r\n\t\tvar px:number = position.x - this.x;\r\n\t\tvar py:number = position.y - this.y;\r\n\t\tvar pz:number = position.z - this.z;\r\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\r\n\t\treturn distance <= this.radius;\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\r\n\t}\r\n}\r\n\r\nexport = Sphere;",
    "import Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nclass UVTransform\r\n{\r\n\tprivate _uvMatrix:Matrix = new Matrix();\r\n\tprivate _uvMatrixDirty:boolean;\r\n\r\n\tprivate _rotation:number = 0;\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\tprivate _offsetU:number = 0;\r\n\tprivate _offsetV:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get offsetU():number\r\n\t{\r\n\t\treturn this._offsetU;\r\n\t}\r\n\r\n\tpublic set offsetU(value:number)\r\n\t{\r\n\t\tif (value == this._offsetU)\r\n\t\t\treturn;\r\n\r\n\t\tthis._offsetU = value;\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get offsetV():number\r\n\t{\r\n\t\treturn this._offsetV;\r\n\t}\r\n\r\n\tpublic set offsetV(value:number)\r\n\t{\r\n\t\tif (value == this._offsetV)\r\n\t\t\treturn;\r\n\r\n\t\tthis._offsetV = value;\r\n\t\tthis._uvMatrixDirty = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rotation():number\r\n\t{\r\n\t\treturn this._rotation;\r\n\t}\r\n\r\n\tpublic set rotation(value:number)\r\n\t{\r\n\t\tif (value == this._rotation)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotation = value;\r\n\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (value == this._scaleU)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (value == this._scaleV)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get matrix():Matrix\r\n\t{\r\n\t\tif (this._uvMatrixDirty)\r\n\t\t\tthis.updateUVMatrix();\r\n\r\n\t\treturn this._uvMatrix;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate updateUVMatrix()\r\n\t{\r\n\t\tthis._uvMatrix.identity();\r\n\r\n\t\tif (this._rotation != 0)\r\n\t\t\tthis._uvMatrix.rotate(this._rotation);\r\n\r\n\t\tif (this._scaleU != 1 || this._scaleV != 1)\r\n\t\t\tthis._uvMatrix.scale(this._scaleU, this._scaleV);\r\n\r\n\t\tthis._uvMatrix.translate(this._offsetU, this._offsetV);\r\n\r\n\t\tthis._uvMatrixDirty = false;\r\n\t}\r\n}\r\n\r\nexport = UVTransform;",
    "/**\r\n * The Vector3D class represents a point or a location in the three-dimensional\r\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\r\n * space, the x property represents the horizontal axis and the y property\r\n * represents the vertical axis. In three-dimensional space, the z property\r\n * represents depth. The value of the x property increases as the object moves\r\n * to the right. The value of the y property increases as the object moves\r\n * down. The z property increases as the object moves farther from the point\r\n * of view. Using perspective projection and scaling, the object is seen to be\r\n * bigger when near and smaller when farther away from the screen. As in a\r\n * right-handed three-dimensional coordinate system, the positive z-axis points\r\n * away from the viewer and the value of the z property increases as the object\r\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\r\n * space is the upper-left corner of the stage.\r\n *\r\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\r\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\r\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\r\n *\r\n * <p>Quaternion notation introduces a fourth element, the w property, which\r\n * provides additional orientation information. For example, the w property can\r\n * define an angle of rotation of a Vector3D object. The combination of the\r\n * angle of rotation and the coordinates x, y, and z can determine the display\r\n * object's orientation. Here is a representation of Vector3D elements in\r\n * matrix notation:</p>\r\n */\r\nclass Vector3D\r\n{\r\n\t/**\r\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\r\n\t */\r\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\r\n\r\n\t/**\r\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\r\n\t */\r\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\r\n\r\n\t/**\r\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\r\n\t */\r\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\r\n\r\n\t/**\r\n\t * The first element of a Vector3D object, such as the x coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/*\r\n\t *The second element of a Vector3D object, such as the y coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The third element of a Vector3D object, such as the y coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic z:number;\r\n\r\n\t/**\r\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\r\n\t * and z properties) can hold data such as the angle of rotation. The\r\n\t * default value is 0.\r\n\t *\r\n\t * <p>Quaternion notation employs an angle as the fourth element in\r\n\t * its calculation of three-dimensional rotation. The w property can\r\n\t * be used to define the angle of rotation about the Vector3D object.\r\n\t * The combination of the rotation angle and the coordinates (x,y,z)\r\n\t * determines the display object's orientation.</p>\r\n\t *\r\n\t * <p>In addition, the w property can be used as a perspective warp\r\n\t * factor for a projected three-dimensional position or as a projection\r\n\t * transform value in representing a three-dimensional coordinate\r\n\t * projected into the two-dimensional space. For example, you can\r\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\r\n\t * property, that, when applied to a Vector3D object, produces a\r\n\t * transform value in the Vector3D object's fourth element (the w\r\n\t * property). Dividing the Vector3D object's other elements by the\r\n\t * transform value then produces a projected Vector3D object. You can\r\n\t * use the <code>Vector3D.project()</code> method to divide the first\r\n\t * three elements of a Vector3D object by its fourth element.</p>\r\n\t */\r\n\tpublic w:number;\r\n\r\n\t/**\r\n\t * The length, magnitude, of the current Vector3D object from the\r\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\r\n\t * property is ignored. A unit vector has a length or magnitude of\r\n\t * one.\r\n\t */\r\n\tpublic get length():number\r\n\t{\r\n\t\treturn Math.sqrt(this.lengthSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * The square of the length of the current Vector3D object, calculated\r\n\t * using the x, y, and z properties. The w property is ignored. Use the\r\n\t * <code>lengthSquared()</code> method whenever possible instead of the\r\n\t * slower <code>Math.sqrt()</code> method call of the\r\n\t * <code>Vector3D.length()</code> method.\r\n\t */\r\n\tpublic get lengthSquared():number\r\n\t{\r\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an instance of a Vector3D object. If you do not specify a\r\n\t * parameter for the constructor, a Vector3D object is created with\r\n\t * the elements (0,0,0,0).\r\n\t *\r\n\t * @param x The first element, such as the x coordinate.\r\n\t * @param y The second element, such as the y coordinate.\r\n\t * @param z The third element, such as the z coordinate.\r\n\t * @param w An optional element for additional data such as the angle\r\n\t *          of rotation.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the value of the x, y, and z elements of the current Vector3D\r\n\t * object to the values of the x, y, and z elements of another Vector3D\r\n\t * object. The <code>add()</code> method does not change the current\r\n\t * Vector3D object. Instead, it returns a new Vector3D object with\r\n\t * the new values.\r\n\t *\r\n\t * <p>The result of adding two vectors together is a resultant vector.\r\n\t * One way to visualize the result is by drawing a vector from the\r\n\t * origin or tail of the first vector to the end or head of the second\r\n\t * vector. The resultant vector is the distance between the origin\r\n\t * point of the first vector and the end point of the second vector.\r\n\t * </p>\r\n\t */\r\n\tpublic add(a:Vector3D):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the angle in radians between two vectors. The returned angle\r\n\t * is the smallest radian the first Vector3D object rotates until it\r\n\t * aligns with the second Vector3D object.\r\n\t *\r\n\t * <p>The <code>angleBetween()</code> method is a static method. You\r\n\t * can use it directly as a method of the Vector3D class.</p>\r\n\t *\r\n\t * <p>To convert a degree to a radian, you can use the following\r\n\t * formula:</p>\r\n\t *\r\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\r\n\t *\r\n\t * @param a The first Vector3D object.\r\n\t * @param b The second Vector3D object.\r\n\t * @returns The angle between two Vector3D objects.\r\n\t */\r\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\r\n\t{\r\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Vector3D object that is an exact copy of the current\r\n\t * Vector3D object.\r\n\t *\r\n\t * @returns A new Vector3D object that is a copy of the current\r\n\t * Vector3D object.\r\n\t */\r\n\tpublic clone():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of vector data from the source Vector3D object into the\r\n\t * calling Vector3D object.\r\n\t *\r\n\t * @param src The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(src:Vector3D):void\r\n\t{\r\n\t\tthis.x = src.x;\r\n\t\tthis.y = src.y;\r\n\t\tthis.z = src.z;\r\n\t\tthis.w = src.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Vector3D object that is perpendicular (at a right\r\n\t * angle) to the current Vector3D and another Vector3D object. If the\r\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\r\n\t * Vector3D objects are parallel to each other.\r\n\t *\r\n\t * <p>You can use the normalized cross product of two vertices of a\r\n\t * polygon surface with the normalized vector of the camera or eye\r\n\t * viewpoint to get a dot product. The value of the dot product can\r\n\t * identify whether a surface of a three-dimensional object is hidden\r\n\t * from the viewpoint.</p>\r\n\t *\r\n\t * @param a A second Vector3D object.\r\n\t * @returns A new Vector3D object that is perpendicular to the current\r\n\t *          Vector3D object and the Vector3D object specified as the\r\n\t *          parameter.\r\n\t */\r\n\tpublic crossProduct(a:Vector3D):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Decrements the value of the x, y, and z elements of the current\r\n\t * Vector3D object by the values of the x, y, and z elements of\r\n\t * specified Vector3D object. Unlike the\r\n\t * <code>Vector3D.subtract()</code> method, the\r\n\t * <code>decrementBy()</code> method changes the current Vector3D\r\n\t * object and does not return a new Vector3D object.\r\n\t *\r\n\t * @param a The Vector3D object containing the values to subtract from\r\n\t *          the current Vector3D object.\r\n\t */\r\n\tpublic decrementBy(a:Vector3D)\r\n\t{\r\n\t\tthis.x -= a.x;\r\n\t\tthis.y -= a.y;\r\n\t\tthis.z -= a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the distance between two Vector3D objects. The\r\n\t * <code>distance()</code> method is a static method. You can use it\r\n\t * directly as a method of the Vector3D class to get the Euclidean\r\n\t * distance between two three-dimensional points.\r\n\t *\r\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\r\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\r\n\t * @returns The distance between two Vector3D objects.\r\n\t */\r\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\r\n\t{\r\n\t\tvar x:number = (pt1.x - pt2.x);\r\n\t\tvar y:number = (pt1.y - pt2.y);\r\n\t\tvar z:number = (pt1.z - pt2.z);\r\n\t\treturn Math.sqrt(x*x + y*y + z*z);\r\n\t}\r\n\r\n\t/**\r\n\t * If the current Vector3D object and the one specified as the\r\n\t * parameter are unit vertices, this method returns the cosine of the\r\n\t * angle between the two vertices. Unit vertices are vertices that\r\n\t * point to the same direction but their length is one. They remove the\r\n\t * length of the vector as a factor in the result. You can use the\r\n\t * <code>normalize()</code> method to convert a vector to a unit\r\n\t * vector.\r\n\t *\r\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\r\n\t * vertices. It is also used in backface culling or lighting\r\n\t * calculations. Backface culling is a procedure for determining which\r\n\t * surfaces are hidden from the viewpoint. You can use the normalized\r\n\t * vertices from the camera, or eye, viewpoint and the cross product of\r\n\t * the vertices of a polygon surface to get the dot product. If the dot\r\n\t * product is less than zero, then the surface is facing the camera or\r\n\t * the viewer. If the two unit vertices are perpendicular to each\r\n\t * other, they are orthogonal and the dot product is zero. If the two\r\n\t * vertices are parallel to each other, the dot product is one.</p>\r\n\t *\r\n\t * @param a The second Vector3D object.\r\n\t * @returns A scalar which is the dot product of the current Vector3D\r\n\t *          object and the specified Vector3D object.\r\n\t *\r\n\t * @see away.geom.Vector3D#crossProduct()\r\n\t * @see away.geom.Vector3D#normalize()\r\n\t */\r\n\tpublic dotProduct(a:Vector3D):number\r\n\t{\r\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether two Vector3D objects are equal by comparing the\r\n\t * x, y, and z elements of the current Vector3D object with a\r\n\t * specified Vector3D object. If the values of these elements are the\r\n\t * same, the two Vector3D objects are equal. If the second optional\r\n\t * parameter is set to true, all four elements of the Vector3D objects,\r\n\t * including the w property, are compared.\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t * @param toCompare The Vector3D object to be compared with the current\r\n\t *                  Vector3D object.\r\n\t * @param allFour   An optional parameter that specifies whether the w\r\n\t *                  property of the Vector3D objects is used in the\r\n\t *                  comparison.\r\n\t * @returns A value of true if the specified Vector3D object is equal\r\n\t *          to the current Vector3D object; false if it is not equal.\r\n\t */\r\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the value of the x, y, and z elements of the current\r\n\t * Vector3D object by the values of the x, y, and z elements of a\r\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\r\n\t * method, the <code>incrementBy()</code> method changes the current\r\n\t * Vector3D object and does not return a new Vector3D object.\r\n\t *\r\n\t * @param a The Vector3D object to be added to the current Vector3D\r\n\t *          object.\r\n\t */\r\n\tpublic incrementBy(a:Vector3D)\r\n\t{\r\n\t\tthis.x += a.x;\r\n\t\tthis.y += a.y;\r\n\t\tthis.z += a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Compares the elements of the current Vector3D object with the\r\n\t * elements of a specified Vector3D object to determine whether they\r\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\r\n\t * value of all the elements of the two vertices are equal, or the\r\n\t * result of the comparison is within the tolerance range. The\r\n\t * difference between two elements must be less than the number\r\n\t * specified as the tolerance parameter. If the third optional\r\n\t * parameter is set to <code>true</code>, all four elements of the\r\n\t * Vector3D objects, including the <code>w</code> property, are\r\n\t * compared. Otherwise, only the x, y, and z elements are included in\r\n\t * the comparison.\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t * @param toCompare The Vector3D object to be compared with the current\r\n\t *                  Vector3D object.\r\n\t * @param tolerance A number determining the tolerance factor. If the\r\n\t *                  difference between the values of the Vector3D\r\n\t *                  element specified in the toCompare parameter and\r\n\t *                  the current Vector3D element is less than the\r\n\t *                  tolerance number, the two values are considered\r\n\t *                  nearly equal.\r\n\t * @param allFour   An optional parameter that specifies whether the w\r\n\t *                  property of the Vector3D objects is used in the\r\n\t *                  comparison.\r\n\t * @returns A value of true if the specified Vector3D object is nearly\r\n\t *          equal to the current Vector3D object; false if it is not\r\n\t *          equal.\r\n\t *\r\n\t * @see away.geom.Vector3D#equals()\r\n\t */\r\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\r\n\t{\r\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the current Vector3D object to its inverse. The inverse object\r\n\t * is also considered the opposite of the original object. The value of\r\n\t * the x, y, and z properties of the current Vector3D object is changed\r\n\t * to -x, -y, and -z.\r\n\t */\r\n\tpublic negate():void\r\n\t{\r\n\t\tthis.x = -this.x;\r\n\t\tthis.y = -this.y;\r\n\t\tthis.z = -this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a Vector3D object to a unit vector by dividing the first\r\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\r\n\t * are vertices that have a direction but their length is one. They\r\n\t * simplify vector calculations by removing length as a factor.\r\n\t */\r\n\t/**\r\n\t * Scales the line segment between(0,0) and the current point to a set\r\n\t * length.\r\n\t *\r\n\t * @param thickness The scaling value. For example, if the current\r\n\t *                  Vector3D object is (0,3,4), and you normalize it to\r\n\t *                  1, the point returned is at(0,0.6,0.8).\r\n\t */\r\n\tpublic normalize(thickness:number = 1)\r\n\t{\r\n\t\tif (this.length != 0) {\r\n\t\t\tvar invLength = thickness/this.length;\r\n\t\t\tthis.x *= invLength;\r\n\t\t\tthis.y *= invLength;\r\n\t\t\tthis.z *= invLength;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\r\n\t * <code>z</code> properties of the current Vector3D object by the\r\n\t * value of its <code>w</code> property.\r\n\t *\r\n\t * <p>If the current Vector3D object is the result of multiplying a\r\n\t * Vector3D object by a projection Matrix3D object, the w property can\r\n\t * hold the transform value. The <code>project()</code> method then can\r\n\t * complete the projection by dividing the elements by the\r\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\r\n\t * property to create a projection Matrix3D object.</p>\r\n\t */\r\n\tpublic project():void\r\n\t{\r\n\t\tthis.x /= this.w;\r\n\t\tthis.y /= this.w;\r\n\t\tthis.z /= this.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\r\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\r\n\t * number specified in the parameter. For example, if the vector is\r\n\t * scaled by ten, the result is a vector that is ten times longer. The\r\n\t * scalar can also change the direction of the vector. Multiplying the\r\n\t * vector by a negative number reverses its direction.\r\n\t *\r\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\r\n\r\n\t */\r\n\tpublic scaleBy(s:number):void\r\n\t{\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\t\tthis.z *= s;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Vector3D to the specified values\r\n\t *\r\n\t * @param xa The first element, such as the x coordinate.\r\n\t * @param ya The second element, such as the y coordinate.\r\n\t * @param za The third element, such as the z coordinate.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, za:number):void\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.z = za;\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the value of the x, y, and z elements of the current\r\n\t * Vector3D object from the values of the x, y, and z elements of\r\n\t * another Vector3D object. The <code>subtract()</code> method does not\r\n\t * change the current Vector3D object. Instead, this method returns a\r\n\t * new Vector3D object with the new values.\r\n\t *\r\n\t * @param a The Vector3D object to be subtracted from the current\r\n\t *          Vector3D object.\r\n\t * @returns A new Vector3D object that is the difference between the\r\n\t *          current Vector3D and the specified Vector3D object.\r\n\t *\r\n\t * @see away.geom.Vector3D#decrementBy()\r\n\t */\r\n\tpublic subtract(a:Vector3D):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a string representation of the current Vector3D object. The\r\n\t * string contains the values of the x, y, and z properties.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\r\n\t}\r\n}\r\n\r\nexport = Vector3D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nclass AssetBase extends EventDispatcher\r\n{\r\n\tpublic static ID_COUNT:number = 0;\r\n\r\n\tprivate _originalName:string;\r\n\tprivate _namespace:string;\r\n\tprivate _name:string;\r\n\tprivate _id:number;\r\n\tprivate _full_path:Array<string>;\r\n\r\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\r\n\r\n\tconstructor(name:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._id = AssetBase.ID_COUNT++;\r\n\r\n\t\tif (name == null)\r\n\t\t\tname = 'null';\r\n\r\n\t\tthis._name = name;\r\n\t\tthis._originalName = name;\r\n\r\n\t\tthis.updateFullPath();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * The original name used for this asset in the resource (e.g. file) in which\r\n\t * it was found. This may not be the same as <code>name</code>, which may\r\n\t * have changed due to of a name conflict.\r\n\t */\r\n\tpublic get originalName():string\r\n\t{\r\n\t\treturn this._originalName;\r\n\t}\r\n\r\n\t/**\r\n\t * A unique id for the asset, used to identify assets in an associative array\r\n\t */\r\n\tpublic get id():number\r\n\t{\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic get name():string\r\n\t{\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic set name(val:string)\r\n\t{\r\n\t\tvar prev:string;\r\n\r\n\t\tprev = this._name;\r\n\t\tthis._name = val;\r\n\r\n\t\tif (this._name == null)\r\n\t\t\tthis._name = 'null';\r\n\r\n\t\tthis.updateFullPath();\r\n\r\n\t\t//if (hasEventListener(AssetEvent.ASSET_RENAME))\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_RENAME, <IAsset> this, prev));\r\n\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get assetNamespace():string\r\n\t{\r\n\t\treturn this._namespace;\r\n\t}\r\n\r\n\tpublic get assetFullPath():Array<string>\r\n\t{\r\n\t\treturn this._full_path;\r\n\t}\r\n\r\n\tpublic assetPathEquals(name:string, ns:string):boolean\r\n\t{\r\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\r\n\t}\r\n\r\n\r\n\tpublic isAsset(assetClass:IAssetClass):boolean\r\n\t{\r\n\t\treturn this.assetType == assetClass.assetType;\r\n\t}\r\n\r\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\r\n\t{\r\n\r\n\t\tthis._name = name? name : 'null';\r\n\t\tthis._namespace = ns? ns : AssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (overrideOriginal)\r\n\t\t\tthis._originalName = this._name;\r\n\r\n\t\tthis.updateFullPath();\r\n\t}\r\n\r\n\tprivate updateFullPath():void\r\n\t{\r\n\t\tthis._full_path = [ this._namespace, this._name ];\r\n\t}\r\n}\r\n\r\nexport = AssetBase;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetLibrary\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\r\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\r\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\r\nimport ConflictStrategy\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategy\");\r\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\n/**\r\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\r\n * Its purpose is to create a container for 3D data management, both before and after parsing.\r\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\r\n */\r\nclass AssetLibraryBundle extends EventDispatcher\r\n{\r\n\tpublic static _iInstances:Object = new Object();\r\n\r\n\tprivate _loadingSessions:Array<AssetLoader>;\r\n\tprivate _strategy:ConflictStrategyBase;\r\n\tprivate _strategyPreference:string;\r\n\tprivate _assets:Array<IAsset>;\r\n\tprivate _assetDictionary:Object;\r\n\tprivate _assetDictDirty:boolean;\r\n\tprivate _loadingSessionsGarbage:Array<AssetLoader> = new Array<AssetLoader>();\r\n\tprivate _gcTimeoutIID:number;\r\n\r\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\r\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\r\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>AssetLibraryBundle</code> object.\r\n\t *\r\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\r\n\t\tthis._assetDictionary = new Object();\r\n\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\r\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\r\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\r\n\r\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\r\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\r\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\r\n\t * pass a string key to this method to define which bundle should be returned. This is\r\n\t * referred to as using the AssetLibrary as a multiton.\r\n\t *\r\n\t * @param key Defines which multiton instance should be returned.\r\n\t * @return An instance of the asset library\r\n\t */\r\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\r\n\t{\r\n\t\tif (!key)\r\n\t\t\tkey = 'default';\r\n\r\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\r\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\r\n\r\n\t\treturn AssetLibraryBundle._iInstances[key];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enableParser(parserClass:Object)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enableParsers(parserClasses:Object[])\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\r\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\r\n\t * is used which means that a numeric suffix is appended to one of the assets. The\r\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\r\n\t * be renamed.\r\n\t *\r\n\t * @see naming.ConflictStrategy\r\n\t * @see AssetLibrary.conflictPrecedence\r\n\t */\r\n\tpublic get conflictStrategy():ConflictStrategyBase\r\n\t{\r\n\t\treturn this._strategy;\r\n\t}\r\n\r\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\r\n\t{\r\n\r\n\t\tif (!val)\r\n\t\t\tthrow new Error('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\r\n\r\n\t\tthis._strategy = val.create();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines which asset should have precedence when resolving a naming conflict between\r\n\t * two assets of which one has just been renamed by the user or by a parser. By default\r\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\r\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\r\n\t *\r\n\t * This property is ignored for conflict strategies that do not actually rename an\r\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\r\n\t *\r\n\t * @see away.library.ConflictPrecedence\r\n\t * @see away.library.ConflictStrategy\r\n\t */\r\n\tpublic get conflictPrecedence():string\r\n\t{\r\n\t\treturn this._strategyPreference;\r\n\t}\r\n\r\n\tpublic set conflictPrecedence(val:string)\r\n\t{\r\n\t\tthis._strategyPreference = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\r\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\r\n\t * namespace. A \"null\" filter value means no filter of that type is used.\r\n\t *\r\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\r\n\t * null to not filter on asset type.\r\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\r\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\r\n\t * included in the iteration or not. This needs to be a function that takes a single\r\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\r\n\t *\r\n\t * @see away.library.AssetType\r\n\t */\r\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\r\n\t{\r\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a file and (optionally) all of its dependencies.\r\n\t *\r\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\r\n\t * @return A handle to the retrieved resource.\r\n\t */\r\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar loader:AssetLoader = new AssetLoader();\r\n\r\n\t\tif (!this._loadingSessions)\r\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\r\n\t\tthis._loadingSessions.push(loader);\r\n\r\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn loader.load(req, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a resource from existing data in memory.\r\n\t *\r\n\t * @param data The data object containing all resource information.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\r\n\t * @return A handle to the retrieved resource.\r\n\t */\r\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar loader:AssetLoader = new AssetLoader();\r\n\r\n\t\tif (!this._loadingSessions)\r\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\r\n\t\tthis._loadingSessions.push(loader);\r\n\r\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn loader.loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getAsset(name:string, ns:string = null):IAsset\r\n\t{\r\n\t\t//var asset : IAsset;\r\n\r\n\t\tif (this._assetDictDirty)\r\n\t\t\tthis.rehashAssetDict();\r\n\r\n\t\tif (ns == null)\r\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\treturn null;\r\n\r\n\t\treturn this._assetDictionary[ns][name];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an asset to the asset library, first making sure that it's name is unique\r\n\t * using the method defined by the <code>conflictStrategy</code> and\r\n\t * <code>conflictPrecedence</code> properties.\r\n\t */\r\n\tpublic addAsset(asset:IAsset)\r\n\t{\r\n\t\tvar ns:string;\r\n\t\tvar old:IAsset;\r\n\r\n\t\t// Bail if asset has already been added.\r\n\t\tif (this._assets.indexOf(asset) >= 0)\r\n\t\t\treturn;\r\n\r\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\r\n\t\tns = asset.assetNamespace || AssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (old != null)\r\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\r\n\r\n\t\t//create unique-id (for now this is used in AwayBuilder only\r\n\t\t//asset.id = IDUtil.createUID();\r\n\r\n\t\t// Add it\r\n\t\tthis._assets.push(asset);\r\n\r\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\tthis._assetDictionary[ns] = new Object();\r\n\r\n\t\tthis._assetDictionary[ns][asset.name] = asset;\r\n\r\n\t\tasset.addEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\r\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an asset from the library, and optionally disposes that asset by calling\r\n\t * it's disposeAsset() method (which for most assets is implemented as a default\r\n\t * version of that type's dispose() method.\r\n\t *\r\n\t * @param asset The asset which should be removed from this library.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t */\r\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true)\r\n\t{\r\n\t\tvar idx:number;\r\n\r\n\t\tthis.removeAssetFromDict(asset);\r\n\r\n\t\tasset.removeEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\r\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\r\n\r\n\t\tidx = this._assets.indexOf(asset);\r\n\r\n\t\tif (idx >= 0)\r\n\t\t\tthis._assets.splice(idx, 1);\r\n\r\n\t\tif (dispose)\r\n\t\t\tasset.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an asset which is specified using name and namespace.\r\n\t *\r\n\t * @param name The name of the asset to be removed.\r\n\t * @param ns The namespace to which the desired asset belongs.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see away.library.AssetLibrary.removeAsset()\r\n\t */\r\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\r\n\t{\r\n\r\n\t\tvar asset:IAsset = this.getAsset(name, ns);\r\n\r\n\t\tif (asset)\r\n\t\t\tthis.removeAsset(asset, dispose);\r\n\r\n\t\treturn asset;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all assets from the asset library, optionally disposing them as they\r\n\t * are removed.\r\n\t *\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t */\r\n\tpublic removeAllAssets(dispose:boolean = true)\r\n\t{\r\n\t\tif (dispose) {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tfor (var c:number = 0; c < this._assets.length; c++) {\r\n\t\t\t\tasset = this._assets[ c ];\r\n\t\t\t\tasset.dispose();\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\t for each (asset in _assets)\r\n\t\t\t asset.dispose();\r\n\t\t\t */\r\n\t\t}\r\n\r\n\t\tthis._assets.length = 0;\r\n\t\tthis.rehashAssetDict();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all assets belonging to a particular namespace (null for default)\r\n\t * from the asset library, and optionall disposes them by calling their\r\n\t * disposeAsset() method.\r\n\t *\r\n\t * @param ns The namespace from which all assets should be removed.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see away.library.AssetLibrary.removeAsset()\r\n\t */\r\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true)\r\n\t{\r\n\t\tvar idx:number = 0;\r\n\t\tvar asset:IAsset;\r\n\t\tvar old_assets:IAsset[];\r\n\r\n\t\t// Empty the assets vector after having stored a copy of it.\r\n\t\t// The copy will be filled with all assets which weren't removed.\r\n\t\told_assets = this._assets.concat();\r\n\t\tthis._assets.length = 0;\r\n\r\n\t\tif (ns == null)\r\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tfor (var d:number = 0; d < old_assets.length; d++) {\r\n\t\t\tasset = old_assets[d];\r\n\r\n\t\t\t// Remove from dict if in the supplied namespace. If not,\r\n\t\t\t// transfer over to the new vector.\r\n\t\t\tif (asset.assetNamespace == ns) {\r\n\t\t\t\tif (dispose)\r\n\t\t\t\t\tasset.dispose();\r\n\r\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\r\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\r\n\t\t\t\t// test that is not needed since we know that the namespace\r\n\t\t\t\t// will be empty when loop finishes.\r\n\t\t\t\tthis.removeAssetFromDict(asset, false);\r\n\t\t\t} else {\r\n\t\t\t\tthis._assets[idx++] = asset;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t for each (asset in old_assets) {\r\n\t\t // Remove from dict if in the supplied namespace. If not,\r\n\t\t // transfer over to the new vector.\r\n\t\t if (asset.assetNamespace == ns) {\r\n\t\t if (dispose)\r\n\t\t asset.dispose();\r\n\r\n\t\t // Remove asset from dictionary, but don't try to auto-remove\r\n\t\t // the namespace, which will trigger an unnecessarily expensive\r\n\t\t // test that is not needed since we know that the namespace\r\n\t\t // will be empty when loop finishes.\r\n\t\t removeAssetFromDict(asset, false);\r\n\t\t } else\r\n\t\t _assets[idx++] = asset;\r\n\r\n\t\t }\r\n\t\t */\r\n\r\n\t\t// Remove empty namespace\r\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\tdelete this._assetDictionary[ns];\r\n\t}\r\n\r\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true)\r\n\t{\r\n\t\tif (this._assetDictDirty)\r\n\t\t\tthis.rehashAssetDict();\r\n\r\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\r\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\r\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\r\n\r\n\t\t\tif (autoRemoveEmptyNamespace) {\r\n\r\n\t\t\t\tvar key:string;\r\n\t\t\t\tvar empty:boolean = true;\r\n\r\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\r\n\t\t\t\t\tempty = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (empty)\r\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic stopAllLoadingSessions()\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (!this._loadingSessions)\r\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\r\n\t\tvar length:number = this._loadingSessions.length;\r\n\r\n\t\tfor (i = 0; i < length; i++)\r\n\t\t\tthis.killLoadingSession(this._loadingSessions[i]);\r\n\r\n\t\tthis._loadingSessions = null;\r\n\t}\r\n\r\n\tprivate rehashAssetDict()\r\n\t{\r\n\t\tvar asset:IAsset;\r\n\r\n\t\tthis._assetDictionary = {};\r\n\r\n\t\tvar l:number = this._assets.length;\r\n\r\n\t\tfor (var c:number = 0; c < l; c++) {\r\n\t\t\tasset = this._assets[c];\r\n\r\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\r\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\r\n\r\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\r\n\r\n\t\t}\r\n\r\n\t\tthis._assetDictDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during loading.\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing.\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\t// Only add asset to library the first time.\r\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\r\n\t\t\tthis.addAsset(event.asset);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tvar loader:AssetLoader = <AssetLoader> event.target;\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tvar index:number = this._loadingSessions.indexOf(loader);\r\n\t\tthis._loadingSessions.splice(index, 1);\r\n\r\n\t\t// Add loader to a garbage array - for a collection sweep and kill\r\n\t\tthis._loadingSessionsGarbage.push(loader);\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loadingSessionGC()}, 100);\r\n\t}\r\n\r\n\tprivate loadingSessionGC():void\r\n\t{\r\n\t\tvar loader:AssetLoader;\r\n\r\n\t\twhile (this._loadingSessionsGarbage.length > 0) {\r\n\t\t\tloader = this._loadingSessionsGarbage.pop();\r\n\t\t\tthis.killLoadingSession(loader);\r\n\t\t}\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\r\n\t}\r\n\r\n\tprivate killLoadingSession(loader:AssetLoader)\r\n\t{\r\n\t\tloader.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t\tloader.stop();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when unespected error occurs\r\n\t */\r\n\t/*\r\n\t private onResourceError() : void\r\n\t {\r\n\t var msg:string = \"Unexpected parser error\";\r\n\t if(hasEventListener(LoaderEvent.DEPENDENCY_ERROR)){\r\n\t var re:LoaderEvent = new LoaderEvent(LoaderEvent.DEPENDENCY_ERROR, \"\");\r\n\t dispatchEvent(re);\r\n\t } else{\r\n\t throw new Error(msg);\r\n\t }\r\n\t }\r\n\t */\r\n\r\n\tprivate onAssetRename(event:AssetEvent)\r\n\t{\r\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\r\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\r\n\r\n\t\tif (old != null) {\r\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\r\n\t\t} else {\r\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\r\n\r\n\t\t\tif (dict == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tdict[event.assetPrevName] = null;\r\n\t\t\tdict[event.asset.name] = event.asset;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetConflictResolved(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event.clone());\r\n\t}\r\n}\r\n\r\nexport = AssetLibraryBundle;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nclass AssetLibraryIterator\r\n{\r\n\r\n\tprivate  _assets:Array<IAsset>;\r\n\tprivate _filtered:Array<IAsset>;\r\n\r\n\tprivate _idx:number;\r\n\r\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\r\n\t{\r\n\t\tthis._assets = assets;\r\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\tpublic get currentAsset():IAsset\r\n\t{\r\n\t\t// Return current, or null if no current\r\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\r\n\t}\r\n\r\n\tpublic get numAssets():number\r\n\t{\r\n\t\treturn this._filtered.length;\r\n\t}\r\n\r\n\tpublic next():IAsset\r\n\t{\r\n\t\tvar next:IAsset = null;\r\n\r\n\t\tif (this._idx < this._filtered.length)\r\n\t\t\tnext = this._filtered[this._idx];\r\n\r\n\t\tthis._idx++;\r\n\r\n\t\treturn next;\r\n\t}\r\n\r\n\tpublic reset()\r\n\t{\r\n\t\tthis._idx = 0;\r\n\t}\r\n\r\n\tpublic setIndex(index:number)\r\n\t{\r\n\t\tthis._idx = index;\r\n\t}\r\n\r\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc)\r\n\t{\r\n\t\tif (assetTypeFilter || namespaceFilter) {\r\n\r\n\t\t\tvar idx:number;\r\n\t\t\tvar asset:IAsset;\r\n\r\n\r\n\t\t\tidx = 0;\r\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\r\n\r\n\t\t\tvar l:number = this._assets.length;\r\n\r\n\t\t\tfor (var c:number = 0; c < l; c++) {\r\n\r\n\t\t\t\tasset = <IAsset> this._assets[c];\r\n\r\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\r\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\r\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\r\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tthis._filtered[idx++] = asset;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/*\r\n\t\t\t for each (asset in _assets) {\r\n\t\t\t // Skip this assets if filtering on type and this is wrong type\r\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\r\n\t\t\t continue;\r\n\r\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\r\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\r\n\t\t\t continue;\r\n\r\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\r\n\t\t\t if (filterFunc != null && !filterFunc(asset))\r\n\t\t\t continue;\r\n\r\n\t\t\t _filtered[idx++] = asset;\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t} else {\r\n\t\t\tthis._filtered = this._assets;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = AssetLibraryIterator;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetLibraryBundle\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\r\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\n/**\r\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\r\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\r\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\r\n */\r\nclass AssetLibrary\r\n{\r\n\t/**\r\n\t * Creates a new <code>AssetLibrary</code> object.\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t//*/\r\n\t/**\r\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\r\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\r\n\t * pass a string key to this method to define which bundle should be returned. This is\r\n\t * referred to as using the AssetLibraryBundle as a multiton.\r\n\t *\r\n\t * @param key Defines which multiton instance should be returned.\r\n\t * @return An instance of the asset library\r\n\t */\r\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\r\n\t{\r\n\t\treturn AssetLibraryBundle.getInstance(key);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static enableParser(parserClass)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for conflictStrategy property on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.conflictStrategy\r\n\t */\r\n\tpublic static get conflictStrategy():ConflictStrategyBase\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\r\n\t}\r\n\r\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\r\n\t{\r\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.conflictPrecedence\r\n\t */\r\n\tpublic static get conflictPrecedence():string\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\r\n\t}\r\n\r\n\tpublic static set conflictPrecedence(val:string)\r\n\t{\r\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for createIterator() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.createIterator()\r\n\t */\r\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for load() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.load()\r\n\t */\r\n\tpublic static load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().load(req, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for loadData() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.loadData()\r\n\t */\r\n\tpublic static loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().loadData(data, context, ns, parser);\r\n\t}\r\n\r\n\tpublic static stopLoad()\r\n\t{\r\n\t\tAssetLibrary.getBundle().stopAllLoadingSessions();\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for getAsset() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.getAsset()\r\n\t */\r\n\tpublic static getAsset(name:string, ns:string = null):IAsset\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for addEventListener() method on default asset library bundle.\r\n\t */\r\n\tpublic static addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeEventListener() method on default asset library bundle.\r\n\t */\r\n\tpublic static removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for hasEventListener() method on default asset library bundle.\r\n\r\n\t public static hasEventListener(type:string):boolean\r\n\t {\r\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\r\n\t}\r\n\r\n\t public static willTrigger(type:string):boolean\r\n\t {\r\n\t\treturn getBundle().willTrigger(type);\r\n\t}\r\n\t */\r\n\r\n\t/**\r\n\t * Short-hand for addAsset() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.addAsset()\r\n\t */\r\n\tpublic static addAsset(asset:IAsset)\r\n\t{\r\n\t\tAssetLibrary.getBundle().addAsset(asset);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAsset() method on default asset library bundle.\r\n\t *\r\n\t * @param asset The asset which should be removed from the library.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAsset()\r\n\t */\r\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\r\n\t *\r\n\t * @param name The name of the asset to be removed.\r\n\t * @param ns The namespace to which the desired asset belongs.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAssetByName()\r\n\t */\r\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\r\n\t *\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAllAssets()\r\n\t */\r\n\tpublic static removeAllAssets(dispose:boolean = true)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\r\n\t */\r\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\r\n\t}\r\n}\r\n\r\nexport = AssetLibrary;",
    "class AssetLoaderContext\r\n{\r\n\tpublic static UNDEFINED:number = 0;\r\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\r\n\tpublic static MULTIPASS_MATERIALS:number = 2;\r\n\r\n\tprivate _includeDependencies:boolean;\r\n\tprivate _dependencyBaseUrl:string;\r\n\tprivate _embeddedDataByUrl:Object;\r\n\tprivate _remappedUrls:Object;\r\n\tprivate _materialMode:number;\r\n\r\n\tprivate _overrideAbsPath:boolean;\r\n\tprivate _overrideFullUrls:boolean;\r\n\r\n\t/**\r\n\t * AssetLoaderContext provides configuration for the AssetLoader load() and parse() operations.\r\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\r\n\t * embedded data.\r\n\t *\r\n\t * @see away.loading.AssetLoader\r\n\t */\r\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\r\n\t{\r\n\t\tthis._includeDependencies = includeDependencies;\r\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\r\n\t\tthis._embeddedDataByUrl = {};\r\n\t\tthis._remappedUrls = {};\r\n\t\tthis._materialMode = AssetLoaderContext.UNDEFINED;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\r\n\t * parseData() operations) should be automatically loaded. Defaults to true.\r\n\t */\r\n\tpublic get includeDependencies():boolean\r\n\t{\r\n\t\treturn this._includeDependencies;\r\n\t}\r\n\r\n\tpublic set includeDependencies(val:boolean)\r\n\t{\r\n\t\tthis._includeDependencies = val;\r\n\t}\r\n\r\n\t/**\r\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\r\n\t * Options:\r\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\r\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\r\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\r\n\t *\r\n\t */\r\n\tpublic get materialMode():number\r\n\t{\r\n\t\treturn this._materialMode;\r\n\t}\r\n\r\n\tpublic set materialMode(materialMode:number)\r\n\t{\r\n\t\tthis._materialMode = materialMode;\r\n\t}\r\n\r\n\t/**\r\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\r\n\t * Absolute paths will not be affected by the value of this property.\r\n\t */\r\n\tpublic get dependencyBaseUrl():string\r\n\t{\r\n\t\treturn this._dependencyBaseUrl;\r\n\t}\r\n\r\n\tpublic set dependencyBaseUrl(val:string)\r\n\t{\r\n\t\tthis._dependencyBaseUrl = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\r\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\r\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\r\n\t */\r\n\tpublic get overrideAbsolutePaths():boolean\r\n\t{\r\n\t\treturn this._overrideAbsPath;\r\n\t}\r\n\r\n\tpublic set overrideAbsolutePaths(val:boolean)\r\n\t{\r\n\t\tthis._overrideAbsPath = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\r\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\r\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\r\n\t */\r\n\tpublic get overrideFullURLs():boolean\r\n\t{\r\n\t\treturn this._overrideFullUrls;\r\n\t}\r\n\r\n\tpublic set overrideFullURLs(val:boolean)\r\n\t{\r\n\t\tthis._overrideFullUrls = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\r\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\r\n\t * expected by the loaded file.\r\n\t *\r\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\r\n\t * @param newUrl The URL from which away.should load the resource instead.\r\n\t *\r\n\t * @see mapUrlToData()\r\n\t */\r\n\tpublic mapUrl(originalUrl:string, newUrl:string)\r\n\t{\r\n\t\tthis._remappedUrls[originalUrl] = newUrl;\r\n\t}\r\n\r\n\t/**\r\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\r\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\r\n\t *\r\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\r\n\t * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\r\n\t */\r\n\tpublic mapUrlToData(originalUrl:string, data:any)\r\n\t{\r\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Defines whether embedded data has been mapped to a particular URL.\r\n\t */\r\n\tpublic _iHasDataForUrl(url:string):boolean\r\n\t{\r\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Returns embedded data for a particular URL.\r\n\t */\r\n\tpublic _iGetDataForUrl(url:string):any\r\n\t{\r\n\t\treturn this._embeddedDataByUrl[url];\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Defines whether a replacement URL has been mapped to a particular URL.\r\n\t */\r\n\tpublic _iHasMappingForUrl(url:string):boolean\r\n\t{\r\n\t\treturn this._remappedUrls.hasOwnProperty(url);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Returns new (replacement) URL for a particular original URL.\r\n\t */\r\n\tpublic _iGetRemappedUrl(originalUrl:string):string\r\n\t{\r\n\t\treturn this._remappedUrls[originalUrl];\r\n\t}\r\n}\r\n\r\nexport = AssetLoaderContext;",
    "import AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\n/**\r\n * Dispatched when any asset finishes parsing. Also see specific events for each\r\n * individual asset type (meshes, materials et c.)\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a full resource (including dependencies) finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a single dependency (which may be the main file of a resource)\r\n * finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during loading. I\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during parsing.\r\n *\r\n * @eventType away.events.ParserEvent\r\n */\r\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a skybox asset has been costructed from a ressource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"skyboxComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a camera3d asset has been costructed from a ressource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"cameraComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a mesh asset has been costructed from a ressource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"meshComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a geometry asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"geometryComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a skeleton asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"skeletonComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a skeleton pose asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"skeletonPoseComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a container asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"containerComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a texture asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"textureComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a texture projector asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"textureProjectorComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a material asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"materialComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a animator asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"animatorComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an animation set has been constructed from a group of animation state resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"animationSetComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an animation state has been constructed from a group of animation node resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"animationStateComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an animation node has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"animationNodeComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an animation state transition has been constructed from a group of animation node resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"stateTransitionComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an light asset has been constructed from a resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"lightComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an light picker asset has been constructed from a resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"lightPickerComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an effect method asset has been constructed from a resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"effectMethodComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an shadow map method asset has been constructed from a resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"shadowMapMethodComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Instances of this class are returned as tokens by loading operations\r\n * to provide an object on which events can be listened for in cases where\r\n * the actual asset loader is not directly available (e.g. when using the\r\n * AssetLibrary to perform the load.)\r\n *\r\n * By listening for events on this class instead of directly on the\r\n * AssetLibrary, one can distinguish different loads from each other.\r\n *\r\n * The token will dispatch all events that the original AssetLoader dispatches,\r\n * while not providing an interface to obstruct the load and is as such a\r\n * safer return value for loader wrappers than the loader itself.\r\n */\r\nclass AssetLoaderToken extends EventDispatcher\r\n{\r\n\tpublic _iLoader:AssetLoader;\r\n\r\n\tconstructor(loader:AssetLoader)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iLoader = loader;\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._iLoader.addEventListener(type, listener);\r\n\t}\r\n\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._iLoader.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string, listener:Function = null):boolean\r\n\t{\r\n\t\treturn this._iLoader.hasEventListener(type, listener);\r\n\t}\r\n\r\n\t/*\r\n\t public willTrigger(type:string):boolean\r\n\t {\r\n\t return this._iLoader.willTrigger(type);\r\n\t }\r\n\t */\r\n}\r\n\r\nexport = AssetLoaderToken;",
    "import AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport Image2DParser\t\t\t= require(\"awayjs-core/lib/parsers/Image2DParser\");\r\nimport ImageCubeParser\t\t\t= require(\"awayjs-core/lib/parsers/ImageCubeParser\");\r\nimport TextureAtlasParser\t\t= require(\"awayjs-core/lib/parsers/TextureAtlasParser\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\n\r\n\r\n\r\n/**\r\n * Dispatched when any asset finishes parsing. Also see specific events for each\r\n * individual asset type (meshes, materials et c.)\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a full resource (including dependencies) finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a single dependency (which may be the main file of a resource)\r\n * finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during loading. I\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during parsing.\r\n *\r\n * @eventType away.events.ParserEvent\r\n */\r\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\r\n\r\n/**\r\n * Dispatched when an image asset dimensions are not a power of 2\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * AssetLoader can load any file format that away.supports (or for which a third-party parser\r\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\r\n * and for when the resource (or it's dependencies) have been loaded.\r\n *\r\n * The AssetLoader will not make assets available in any other way than through the dispatched\r\n * events. To store assets and make them available at any point from any module in an application,\r\n * use the AssetLibrary to load and manage assets.\r\n *\r\n * @see away.library.AssetLibrary\r\n */\r\nclass AssetLoader extends EventDispatcher\r\n{\r\n\tprivate _context:AssetLoaderContext;\r\n\tprivate _token:AssetLoaderToken;\r\n\tprivate _uri:string;\r\n\tprivate _materialMode:number;\r\n\r\n\tprivate _errorHandlers:Array<Function>;\r\n\tprivate _parseErrorHandlers:Array<Function>;\r\n\r\n\tprivate _stack:Array<ResourceDependency>;\r\n\tprivate _baseDependency:ResourceDependency;\r\n\tprivate _currentDependency:ResourceDependency;\r\n\tprivate _namespace:string;\r\n\r\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\r\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\r\n\tprivate _onLoadCompleteDelegate:(event:Event) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => void;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\r\n\r\n\t// Image parser only parser that is added by default, to save file size.\r\n\tprivate static _parsers:Array<any> = new Array<any>(Image2DParser, ImageCubeParser, TextureAtlasParser);\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parser The parser class to enable.\r\n\t *\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parser)\r\n\t{\r\n\t\tif (AssetLoader._parsers.indexOf(parser) < 0)\r\n\t\t\tAssetLoader._parsers.push(parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * AssetLoader can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parsers A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parsers:Array<Object>)\r\n\t{\r\n\t\tfor (var c:number = 0; c < parsers.length; c++)\r\n\t\t\tAssetLoader.enableParser(parsers[ c ]);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the base dependency of the loader\r\n\t */\r\n\tpublic get baseDependency():ResourceDependency\r\n\t{\r\n\t\treturn this._baseDependency;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new ResourceLoadSession object.\r\n\t */\r\n\tconstructor(materialMode:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._materialMode = materialMode;\r\n\r\n\t\tthis._stack = new Array<ResourceDependency>();\r\n\t\tthis._errorHandlers = new Array<Function>();\r\n\t\tthis._parseErrorHandlers = new Array<Function>();\r\n\r\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\r\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t\tthis._onLoadCompleteDelegate = (event:Event) => this.onLoadComplete(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a file and (optionally) all of its dependencies.\r\n\t *\r\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\r\n\t */\r\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tif (!this._token) {\r\n\t\t\tthis._token = new AssetLoaderToken(this);\r\n\r\n\t\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\r\n\t\t\tthis._context = context;\r\n\t\t\tthis._namespace = ns;\r\n\r\n\t\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\r\n\t\t\tthis.retrieveDependency(this._baseDependency);\r\n\r\n\t\t\treturn this._token;\r\n\t\t}\r\n\r\n\t\t// TODO: Throw error (already loading)\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a resource from already loaded data.\r\n\t *\r\n\t * @param data The data object containing all resource information.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\r\n\t */\r\n\tpublic loadData(data:any, id:string, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tif (!this._token) {\r\n\t\t\tthis._token = new AssetLoaderToken(this);\r\n\r\n\t\t\tthis._uri = id;\r\n\t\t\tthis._context = context;\r\n\t\t\tthis._namespace = ns;\r\n\r\n\t\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\r\n\t\t\tthis.retrieveDependency(this._baseDependency);\r\n\r\n\t\t\treturn this._token;\r\n\t\t}\r\n\r\n\t\t// TODO: Throw error (already loading)\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\r\n\t * stack when complete and continues on the top set.\r\n\t * @param parser The parser that will translate the data into a usable resource.\r\n\t */\r\n\tprivate retrieveNext(parser:ParserBase = null)\r\n\t{\r\n\t\tif (this._currentDependency.dependencies.length) {\r\n\r\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\r\n\r\n\t\t\tthis._stack.push(this._currentDependency);\r\n\t\t\tthis.retrieveDependency(next);\r\n\r\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\r\n\r\n\t\t\tthis._currentDependency.parser._iResumeParsingAfterDependencies();\r\n\t\t\tthis._stack.pop();\r\n\r\n\t\t} else if (this._stack.length) {\r\n\r\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\r\n\r\n\t\t\tthis._currentDependency = this._stack.pop();\r\n\r\n\t\t\tif (prev._iSuccess)\r\n\t\t\t\tprev.resolve();\r\n\r\n\t\t\tthis.retrieveNext(parser);\r\n\r\n\t\t} else {\r\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.RESOURCE_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves a single dependency.\r\n\t * @param parser The parser that will translate the data into a usable resource.\r\n\t */\r\n\tprivate retrieveDependency(dependency:ResourceDependency)\r\n\t{\r\n\t\tvar data:any;\r\n\r\n\t\tif (this._context && this._context.materialMode != 0)\r\n\t\t\tthis._materialMode = this._context.materialMode;\r\n\r\n\t\tthis._currentDependency = dependency;\r\n\r\n\t\tdependency._iLoader = new URLLoader();\r\n\r\n\t\tthis.addEventListeners(dependency._iLoader);\r\n\r\n\t\t// Get already loaded (or mapped) data if available\r\n\t\tdata = dependency.data;\r\n\r\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\r\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\r\n\r\n\t\tif (data) {\r\n\t\t\tif (data.constructor === Function)\r\n\t\t\t\tdata = new data();\r\n\r\n\t\t\tdependency._iSetData(data);\r\n\r\n\t\t\tif (dependency.retrieveAsRawData) {\r\n\t\t\t\t// No need to parse. The parent parser is expecting this\r\n\t\t\t\t// to be raw data so it can be passed directly.\r\n\t\t\t\tdependency.resolve();\r\n\r\n\t\t\t\t// Move on to next dependency\r\n\t\t\t\tthis.retrieveNext();\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis.parseDependency(dependency);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// Resolve URL and start loading\r\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\r\n\r\n\t\t\tif (dependency.retrieveAsRawData) {\r\n\t\t\t\t// Always use binary for raw data loading\r\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (!dependency.parser)\r\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\r\n\r\n\t\t\t\tif (dependency.parser) {\r\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\r\n\t\t\t\t\t// file type check will determine format after load, and if\r\n\t\t\t\t\t// binary, a text load will have broken the file data.\r\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdependency._iLoader.load(dependency.request);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate joinUrl(base:string, end:string):string\r\n\t{\r\n\t\tif (end.charAt(0) == '/')\r\n\t\t\tend = end.substr(1);\r\n\r\n\t\tif (base.length == 0)\r\n\t\t\treturn end;\r\n\r\n\t\tif (base.charAt(base.length - 1) == '/')\r\n\t\t\tbase = base.substr(0, base.length - 1);\r\n\r\n\t\treturn base.concat('/', end);\r\n\r\n\t}\r\n\r\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\r\n\t{\r\n\t\tvar scheme_re:RegExp;\r\n\t\tvar base:string;\r\n\t\tvar url:string = dependency.request.url;\r\n\r\n\t\t// Has the user re-mapped this URL?\r\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\r\n\t\t\treturn this._context._iGetRemappedUrl(url);\r\n\r\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\r\n\t\t// We will not try to resolve this since the user can probably be\r\n\t\t// thrusted to know this URL better than our automatic resolver. :)\r\n\t\tif (url == this._uri)\r\n\t\t\treturn url;\r\n\r\n\r\n\t\t// Absolute URL? Check if starts with slash or a URL\r\n\t\t// scheme definition (e.g. ftp://, http://, file://)\r\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\r\n\r\n\t\tif (url.charAt(0) == '/') {\r\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\r\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\r\n\t\t\t\treturn url;\r\n\t\t} else if (scheme_re.test(url)) {\r\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\r\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\r\n\t\t\tif (this._context && this._context.overrideFullURLs) {\r\n\r\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\r\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Since not absolute, just get rid of base file name to find it's\r\n\t\t// folder and then concatenate dynamic URL\r\n\t\tif (this._context && this._context.dependencyBaseUrl) {\r\n\t\t\tbase = this._context.dependencyBaseUrl;\r\n\t\t\treturn this.joinUrl(base, url);\r\n\t\t} else {\r\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\r\n\t\t\treturn this.joinUrl(base, url);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate retrieveParserDependencies()\r\n\t{\r\n\t\tif (!this._currentDependency)\r\n\t\t\treturn;\r\n\r\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies\r\n\t\tvar i:number, len:number = parserDependancies.length;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\r\n\r\n\r\n\t\t// Since more dependencies might be added eventually, empty this\r\n\t\t// list so that the same dependency isn't retrieved more than once.\r\n\t\tparserDependancies.length = 0;\r\n\r\n\t\tthis._stack.push(this._currentDependency);\r\n\r\n\t\tthis.retrieveNext();\r\n\t}\r\n\r\n\tprivate resolveParserDependencies()\r\n\t{\r\n\t\tthis._currentDependency._iSuccess = true;\r\n\r\n\t\t// Retrieve any last dependencies remaining on this parser, or\r\n\t\t// if none exists, just move on.\r\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\r\n\t\t\tthis.retrieveParserDependencies();\r\n\t\telse\r\n\t\t\tthis.retrieveNext();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent)\r\n\t{\r\n\t\tvar handled:boolean;\r\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\r\n\t\tvar loader:URLLoader = <URLLoader> event.target;//TODO: keep on eye on this one\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR )) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\thandled = true;\r\n\t\t} else {\r\n\t\t\t// TODO: Consider not doing this even when AssetLoader does have it's own LOAD_ERROR listener\r\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tif (!handled)\r\n\t\t\t\t\thandled = <boolean> this._errorHandlers[i](event);\r\n\t\t}\r\n\r\n\t\tif (handled) {\r\n\r\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\r\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\r\n\r\n\t\t\t\tthis._currentDependency.resolveFailure();\r\n\t\t\t\tthis.retrieveNext();\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// Either this was the base file (last left in the stack) or\r\n\t\t\t\t// default behavior was prevented by the handlers, and hence\r\n\t\t\t\t// there is nothing more to do than clean up and bail.\r\n\t\t\t\tthis.dispose();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\r\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\r\n\t * @param event\r\n\t */\r\n\tprivate onParseError(event:ParserEvent)\r\n\t{\r\n\t\tvar handled:boolean;\r\n\r\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\r\n\r\n\t\tvar loader:URLLoader = <URLLoader>event.target;\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\thandled = true;\r\n\t\t} else {\r\n\t\t\t// TODO: Consider not doing this even when AssetLoader does\r\n\t\t\t// have it's own LOAD_ERROR listener\r\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\r\n\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tif (!handled)\r\n\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\r\n\t\t}\r\n\r\n\t\tif (handled) {\r\n\t\t\tthis.dispose();\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\r\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\r\n\t\t\tthrow new Error(event.message);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\t// Add loaded asset to list of assets retrieved as part\r\n\t\t// of the current dependency. This list will be inspected\r\n\t\t// by the parent parser when dependency is resolved\r\n\t\tif (this._currentDependency)\r\n\t\t\tthis._currentDependency.assets.push(event.asset);\r\n\r\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\r\n\r\n\t\tif (!this._currentDependency.suppresAssetEvents)\r\n\t\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tprivate onReadyForDependencies(event:ParserEvent)\r\n\t{\r\n\t\tvar parser:ParserBase = <ParserBase> event.target;\r\n\r\n\t\tif (this._context && !this._context.includeDependencies)\r\n\t\t\tparser._iResumeParsingAfterDependencies();\r\n\t\telse\r\n\t\t\tthis.retrieveParserDependencies();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadComplete(event:Event)\r\n\t{\r\n\t\tvar loader:URLLoader = <URLLoader> event.target;\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\t// Resolve this dependency\r\n\t\tthis._currentDependency._iSetData(loader.data);\r\n\r\n\t\tif (this._currentDependency.retrieveAsRawData) {\r\n\t\t\t// No need to parse this data, which should be returned as is\r\n\t\t\tthis.resolveParserDependencies();\r\n\t\t} else {\r\n\t\t\tthis.parseDependency(this._currentDependency);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when parsing is complete.\r\n\t */\r\n\tprivate onParseComplete(event:ParserEvent):void\r\n\t{\r\n\t\tvar parser:ParserBase = <ParserBase> event.target;\r\n\r\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\r\n\r\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\r\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\r\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\r\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an image is too large or it's dimensions are not a power of 2\r\n\t * @param event\r\n\t */\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tprivate addEventListeners(loader:URLLoader)\r\n\t{\r\n\t\tloader.addEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\r\n\t\tloader.addEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\r\n\t}\r\n\r\n\tprivate removeEventListeners(loader:URLLoader)\r\n\t{\r\n\t\tloader.removeEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\r\n\t\tloader.removeEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\r\n\t}\r\n\r\n\tpublic stop()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\tprivate dispose()\r\n\t{\r\n\t\tthis._errorHandlers = null;\r\n\t\tthis._parseErrorHandlers = null;\r\n\t\tthis._context = null;\r\n\t\tthis._token = null;\r\n\t\tthis._stack = null;\r\n\r\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\r\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\r\n\r\n\t\tthis._currentDependency = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\r\n\t * add error event listeners to the AssetLoader instance. This system is used instead of\r\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\r\n\t * that if hasEventListener() returns true, it's client code that's listening for the\r\n\t * event. Secondly, functions added as error handler through this custom method are\r\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\r\n\t * whether they in turn had any client code listening for the event.) If no handlers\r\n\t * return true, the AssetLoader knows that the event wasn't handled and will throw an RTE.\r\n\t */\r\n\r\n\tpublic _iAddParseErrorHandler(handler)\r\n\t{\r\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\r\n\t\t\tthis._parseErrorHandlers.push(handler);\r\n\t}\r\n\r\n\tpublic _iAddErrorHandler(handler)\r\n\t{\r\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\r\n\t\t\tthis._errorHandlers.push(handler);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Guesses the parser to be used based on the file contents.\r\n\t * @param data The data to be parsed.\r\n\t * @param uri The url or id of the object to be parsed.\r\n\t * @return An instance of the guessed parser.\r\n\t */\r\n\tprivate getParserFromData(data:any):ParserBase\r\n\t{\r\n\t\tvar len:number = AssetLoader._parsers.length;\r\n\r\n\t\t// go in reverse order to allow application override of default parser added in away.proper\r\n\t\tfor (var i:number = len - 1; i >= 0; i--)\r\n\t\t\tif (AssetLoader._parsers[i].supportsData(data))\r\n\t\t\t\treturn new AssetLoader._parsers[i]();\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Initiates parsing of the loaded dependency.\r\n\t *\r\n\t * @param The dependency to be parsed.\r\n\t */\r\n\tprivate parseDependency(dependency:ResourceDependency):void\r\n\t{\r\n\t\tvar parser:ParserBase = dependency.parser;\r\n\r\n\t\t// If no parser has been defined, try to find one by letting\r\n\t\t// all plugged in parsers inspect the actual data.\r\n\t\tif (!parser)\r\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\r\n\r\n\t\tif (parser) {\r\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\r\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\r\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\r\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t\tif (dependency.request && dependency.request.url)\r\n\t\t\t\tparser._iFileName = dependency.request.url;\r\n\r\n\t\t\tparser.materialMode = this._materialMode;\r\n\r\n\t\t\tparser.parseAsync(dependency.data);\r\n\r\n\t\t} else {\r\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\"\r\n\t\t\tif(this.hasEventListener(ParserEvent.PARSE_ERROR))\r\n\t\t\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\r\n\t\t\telse\r\n\t\t\t\tthrow new Error(message);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Guesses the parser to be used based on the file extension.\r\n\t * @return An instance of the guessed parser.\r\n\t */\r\n\tprivate getParserFromSuffix(url:string):ParserBase\r\n\t{\r\n\t\t// Get rid of query string if any and extract extension\r\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\r\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\r\n\r\n\t\tvar len:number = AssetLoader._parsers.length;\r\n\r\n\t\t// go in reverse order to allow application override of default parser added in away.proper\r\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\r\n\t\t\tvar parserClass:any = AssetLoader._parsers[i];\r\n\t\t\tif (parserClass.supportsType(fileExtension))\r\n\t\t\t\treturn new parserClass();\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport = AssetLoader;",
    "/**\r\n * Enumaration class for precedence when resolving naming conflicts in the library.\r\n *\r\n * @see away.library.AssetLibrary.conflictPrecedence\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.naming.ConflictStrategy\r\n */\r\nclass ConflictPrecedence\r\n{\r\n\t/**\r\n\t * Signals that in a conflict, the previous owner of the conflicting name\r\n\t * should be favored (and keep it's name) and that the newly renamed asset\r\n\t * is reverted to a non-conflicting name.\r\n\t */\r\n\tpublic static FAVOR_OLD:string = 'favorOld';\r\n\r\n\t/**\r\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\r\n\t * it's newly defined name) and that the previous owner of that name gets\r\n\t * renamed to a non-conflicting name.\r\n\t */\r\n\tpublic static FAVOR_NEW:string = 'favorNew';\r\n}\r\n\r\nexport = ConflictPrecedence;",
    "import ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\n\r\n/**\r\n * Abstract base class for naming conflict resolution classes. Extend this to create a\r\n * strategy class which the asset library can use to resolve asset naming conflicts, or\r\n * use one of the bundled concrete strategy classes:\r\n *\r\n * <ul>\r\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\r\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\r\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\r\n * </ul>\r\n *\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.ConflictStrategy\r\n * @see away.library.IgnoreConflictStrategy\r\n * @see away.library.ErrorConflictStrategy\r\n * @see away.library.NumSuffixConflictStrategy\r\n */\r\nclass ConflictStrategyBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\r\n\t * classes.\r\n\t */\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\r\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\r\n\t * would break any state caching that happens inside the strategy class.\r\n\t */\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\r\n\t * the conflict resolution by applying the new names and dispatching the correct events.\r\n\t */\r\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tvar loser_prev_name:string;\r\n\t\tvar winner:IAsset;\r\n\t\tvar loser:IAsset;\r\n\r\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\r\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\r\n\r\n\t\tloser_prev_name = loser.name;\r\n\r\n\t\tassetsDictionary[winner.name] = winner;\r\n\t\tassetsDictionary[nonConflictingName] = loser;\r\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\r\n\r\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\r\n\t}\r\n}\r\n\r\nexport = ConflictStrategyBase;",
    "import ConflictStrategyBase\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport ErrorConflictStrategy\t\t= require(\"awayjs-core/lib/library/ErrorConflictStrategy\");\r\nimport IgnoreConflictStrategy\t\t= require(\"awayjs-core/lib/library/IgnoreConflictStrategy\");\r\nimport NumSuffixConflictStrategy\t= require(\"awayjs-core/lib/library/NumSuffixConflictStrategy\");\r\n\r\n/**\r\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\r\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\r\n * property on an AssetLibrary to define how that library resolves naming conflicts.\r\n *\r\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\r\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\r\n *\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.naming.ConflictStrategyBase\r\n */\r\nclass ConflictStrategy\r\n{\r\n\t/**\r\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\r\n\t * a numeric suffix appended to the base name.\r\n\t */\r\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\r\n\r\n\t/**\r\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\r\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\r\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\r\n\t */\r\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\r\n\r\n\t/**\r\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\r\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\r\n\t * to have the library automatically rename assets to avoid such conflicts.\r\n\t */\r\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\r\n\r\n\tconstructor(include?:ConflictStrategyBase)\r\n\t{\r\n\t\t//TODO: find out why typescript d.ts files do not include this class\r\n\t}\r\n}\r\n\r\nexport = ConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass ErrorConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tthrow new Error('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new ErrorConflictStrategy();\r\n\t}\r\n}\r\n\r\nexport = ErrorConflictStrategy;",
    "class IDUtil\r\n{\r\n\t/**\r\n\t *  @private\r\n\t *  Char codes for 0123456789ABCDEF\r\n\t */\r\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\r\n\r\n\t/**\r\n\t *  Generates a UID (unique identifier) based on ActionScript's\r\n\t *  pseudo-random number generator and the current time.\r\n\t *\r\n\t *  <p>The UID has the form\r\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\r\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\r\n\t *\r\n\t *  <p>This UID will not be truly globally unique; but it is the best\r\n\t *  we can do without player support for UID generation.</p>\r\n\t *\r\n\t *  @return The newly-generated UID.\r\n\t *\r\n\t *  @langversion 3.0\r\n\t *  @playerversion Flash 9\r\n\t *  @playerversion AIR 1.1\r\n\t *  @productversion Flex 3\r\n\t */\r\n\tpublic static createUID():string\r\n\t{\r\n\t\tvar uid = new Array(36);\r\n\t\tvar index:number = 0;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\r\n\t\tfor (i = 0; i < 8; i++)\r\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\r\n\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\tuid[index++] = 45; // charCode for \"-\"\r\n\r\n\t\t\tfor (j = 0; j < 4; j++)\r\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\t\t}\r\n\r\n\t\tuid[index++] = 45; // charCode for \"-\"\r\n\r\n\t\tvar time:number = new Date().getTime();\r\n\t\t// Note: time is the number of milliseconds since 1970,\r\n\t\t// which is currently more than one trillion.\r\n\t\t// We use the low 8 hex digits of this number in the UID.\r\n\t\t// Just in case the system clock has been reset to\r\n\t\t// Jan 1-4, 1970 (in which case this number could have only\r\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\r\n\t\t// before taking the low digits.\r\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\r\n\r\n\t\tfor (i = 0; i < 8; i++)\r\n\t\t\tuid[index++] = timeString.charCodeAt(i);\r\n\r\n\t\tfor (i = 0; i < 4; i++)\r\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\r\n\t\treturn String.fromCharCode.apply(null, uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the decimal representation of a hex digit.\r\n\t * @private\r\n\r\n\t private static getDigit(hex:string):number\r\n\t {\r\n\t\tswitch (hex) {\r\n\t\t\tcase \"A\":\r\n\t\t\tcase \"a\":\r\n\t\t\t\treturn 10;\r\n\t\t\tcase \"B\":\r\n\t\t\tcase \"b\":\r\n\t\t\t\treturn 11;\r\n\t\t\tcase \"C\":\r\n\t\t\tcase \"c\":\r\n\t\t\t\treturn 12;\r\n\t\t\tcase \"D\":\r\n\t\t\tcase \"d\":\r\n\t\t\t\treturn 13;\r\n\t\t\tcase \"E\":\r\n\t\t\tcase \"e\":\r\n\t\t\t\treturn 14;\r\n\t\t\tcase \"F\":\r\n\t\t\tcase \"f\":\r\n\t\t\t\treturn 15;\r\n\t\t\tdefault:\r\n\t\t\t\treturn new uint(hex);\r\n\t\t}\r\n\t}\r\n\t */\r\n\r\n}\r\n\r\nexport = IDUtil;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nclass IgnoreConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\t// Do nothing, ignore the fact that there is a conflict.\r\n\t\treturn;\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new IgnoreConflictStrategy();\r\n\t}\r\n}\r\n\r\nexport = IgnoreConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nclass NumSuffixConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tprivate _separator:string;\r\n\tprivate _next_suffix:Object;\r\n\r\n\tconstructor(separator:string = '.')\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._separator = separator;\r\n\t\tthis._next_suffix = {};\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tvar orig:string;\r\n\t\tvar new_name:string;\r\n\t\tvar base:string;\r\n\t\tvar suffix:number;\r\n\r\n\t\torig = changedAsset.name;\r\n\r\n\t\tif (orig.indexOf(this._separator) >= 0) {\r\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\r\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\r\n\t\t\t// use entire name as base\r\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\r\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\r\n\r\n\t\t\tif (isNaN(suffix)) {\r\n\t\t\t\tbase = orig;\r\n\t\t\t\tsuffix = 0;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tbase = orig;\r\n\t\t\tsuffix = 0;\r\n\t\t}\r\n\r\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\r\n\r\n\t\t\tsuffix = this._next_suffix[base];\r\n\r\n\t\t}\r\n\r\n\t\t// Find the first suffixed name that does\r\n\t\t// not collide with other names.\r\n\t\tdo {\r\n\r\n\t\t\tsuffix++;\r\n\r\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\r\n\r\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\r\n\r\n\t\tthis._next_suffix[ base ] = suffix;\r\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\r\n\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new NumSuffixConflictStrategy(this._separator);\r\n\t}\r\n}\r\n\r\nexport = NumSuffixConflictStrategy;",
    "class CrossDomainPolicy\r\n{\r\n\tpublic static ANONYMOUS:string = 'anonymous';\r\n\r\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\r\n}\r\n\r\nexport = CrossDomainPolicy;\r\n",
    "class URLLoaderDataFormat\r\n{\r\n\t/**\r\n\t * TEXT\r\n\t * @type {string}\r\n\t */\r\n\tpublic static TEXT:string = \"text\";\r\n\r\n\t/**\r\n\t * Variables / Value Pairs\r\n\t * @type {string}\r\n\t */\r\n\tpublic static VARIABLES:string = \"variables\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static BLOB:string = \"blob\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static BINARY:string = \"binary\";\r\n}\r\n\r\nexport = URLLoaderDataFormat;",
    "import URLLoaderDataFormat\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\r\nimport URLVariables\t\t\t\t\t= require(\"awayjs-core/lib/net/URLVariables\");\r\nimport AwayEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport HTTPStatusEvent\t\t\t\t= require(\"awayjs-core/lib/events/HTTPStatusEvent\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport AwayProgressEvent\t\t\t= require(\"awayjs-core/lib/events/ProgressEvent\");\r\n\r\n/**\r\n * The URLLoader is used to load a single file, as part of a resource.\r\n *\r\n * While URLLoader can be used directly, e.g. to create a third-party asset\r\n * management system, it's recommended to use any of the classes Loader3D, AssetLoader\r\n * and AssetLibrary instead in most cases.\r\n *\r\n * @see AssetLoader\r\n * @see away.library.AssetLibrary\r\n */\r\nclass URLLoader extends EventDispatcher\r\n{\r\n\tprivate _XHR:XMLHttpRequest;\r\n\tprivate _bytesLoaded:number = 0;\r\n\tprivate _bytesTotal:number = 0;\r\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\r\n\tprivate _loadError:boolean = false;\r\n\r\n\tprivate _request:URLRequest;\r\n\tprivate _data:any;\r\n\r\n\tprivate _loadStartEvent:AwayEvent;\r\n\tprivate _loadErrorEvent:IOErrorEvent;\r\n\tprivate _loadCompleteEvent:AwayEvent;\r\n\tprivate _progressEvent:AwayProgressEvent;\r\n\r\n\t/**\r\n\t * Creates a new URLLoader object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\r\n\t\treturn this._request? this._request.url : '';\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * URLLoaderDataFormat.BINARY\r\n\t * URLLoaderDataFormat.TEXT\r\n\t * URLLoaderDataFormat.VARIABLES\r\n\t *\r\n\t * @param format\r\n\t */\r\n\tpublic set dataFormat(format:string)\r\n\t{\r\n\t\tthis._dataFormat = format;\r\n\t}\r\n\r\n\tpublic get dataFormat():string\r\n\t{\r\n\t\treturn this._dataFormat;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get bytesLoaded():number\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get bytesTotal():number\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * Load a resource from a file.\r\n\t *\r\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\r\n\t */\r\n\tpublic load(request:URLRequest):void\r\n\t{\r\n\t\tthis._request = request;\r\n\r\n\t\tthis.initXHR();\r\n\r\n\t\tif (request.method === URLRequestMethod.POST)\r\n\t\t\tthis.postRequest(request);\r\n\t\telse\r\n\t\t\tthis.getRequest(request);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic close():void\r\n\t{\r\n\t\tthis._XHR.abort();\r\n\t\tthis.disposeXHR();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tif (this._XHR)\r\n\t\t\tthis._XHR.abort();\r\n\r\n\t\tthis.disposeXHR();\r\n\r\n\t\tthis._data = null;\r\n\t\tthis._dataFormat = null;\r\n\t\tthis._bytesLoaded = null;\r\n\t\tthis._bytesTotal = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param xhr\r\n\t * @param responseType\r\n\t */\r\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\r\n\t{\r\n\t\tswitch (responseType) {\r\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\r\n\t\t\tcase URLLoaderDataFormat.BLOB:\r\n\t\t\tcase URLLoaderDataFormat.TEXT:\r\n\t\t\t\txhr.responseType = responseType;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\r\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.BINARY:\r\n\t\t\t\txhr.responseType = '';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param request {URLRequest}\r\n\t */\r\n\tprivate getRequest(request:URLRequest):void\r\n\t{\r\n\t\ttry {\r\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\r\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\r\n\t\t\tthis._XHR.send(); // No data to send\r\n\t\t} catch (e /* <XMLHttpRequestException> */) {\r\n\t\t\tthis.handleXmlHttpRequestException(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param request {URLRequest}\r\n\t */\r\n\tprivate postRequest(request:URLRequest):void\r\n\t{\r\n\t\tthis._loadError = false;\r\n\r\n\t\tthis._XHR.open(request.method, request.url, request.async);\r\n\r\n\t\tif (request.data != null) {\r\n\t\t\tif (request.data instanceof URLVariables) {\r\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._XHR.responseType = 'text';\r\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\r\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\r\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\r\n\r\n\t\t\t\tif (request.data)\r\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._XHR.send(); // no data to send\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._XHR.send(); // No data to send\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param error {XMLHttpRequestException}\r\n\t */\r\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\r\n\t{\r\n\t\tswitch (error.code) {\r\n\r\n\t\t/******************************************************************************************************************************************************************************************************\r\n\t\t *\r\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\r\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\r\n\t\t *\r\n\t\t ******************************************************************************************************************************************************************************************************/\r\n\r\n\t\t\tcase 101:\r\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate initXHR()\r\n\t{\r\n\t\tif (!this._XHR) {\r\n\t\t\tthis._XHR = new XMLHttpRequest();\r\n\r\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\r\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\r\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\r\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\r\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\r\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\r\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\r\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate disposeXHR()\r\n\t{\r\n\t\tif (this._XHR !== null) {\r\n\t\t\tthis._XHR.onloadstart = null;\r\n\t\t\tthis._XHR.onprogress = null;\r\n\t\t\tthis._XHR.onabort = null;\r\n\t\t\tthis._XHR.onerror = null;\r\n\t\t\tthis._XHR.onload = null;\r\n\t\t\tthis._XHR.ontimeout = null;\r\n\t\t\tthis._XHR.onloadend = null;\r\n\t\t\tthis._XHR = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tpublic decodeURLVariables(source:string):Object\r\n\t{\r\n\t\tvar result:Object = new Object();\r\n\r\n\t\tsource = source.split(\"+\").join(\" \");\r\n\r\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n\t\twhile (tokens = re.exec(source))\r\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// XMLHttpRequest - Event Handlers\r\n\r\n\t/**\r\n\t * When XHR state changes\r\n\t * @param event\r\n\t */\r\n\tprivate onReadyStateChange(event:Event)\r\n\t{\r\n\t\tif (this._XHR.readyState == 4) {\r\n\t\t\tif (this._XHR.status == 404) {\r\n\t\t\t\tthis._loadError = true;\r\n\r\n\t\t\t\tif (!this._loadErrorEvent)\r\n\t\t\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\r\n\r\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchEvent(new HTTPStatusEvent(HTTPStatusEvent.HTTP_STATUS, this._XHR.status));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has completed, regardless of whether or not it was successful.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadEnd(event:ProgressEvent)\r\n\t{\r\n\t\tif (this._loadError === true)\r\n\t\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * When the author specified timeout has passed before the request could complete.\r\n\t * @param event\r\n\t */\r\n\tprivate onTimeOut(event:Event)\r\n\t{\r\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\r\n\t * @param event\r\n\t */\r\n\tprivate onAbort(event:UIEvent)\r\n\t{\r\n\t\t// TODO: investigate whether this needs to be an IOError\r\n\t}\r\n\r\n\t/**\r\n\t * While loading and sending data.\r\n\t * @param event\r\n\t */\r\n\tprivate onProgress(event:ProgressEvent)\r\n\t{\r\n\t\tif (!this._progressEvent)\r\n\t\t\tthis._progressEvent = new AwayProgressEvent(AwayProgressEvent.PROGRESS);\r\n\r\n\t\tthis._progressEvent.bytesTotal = event.total;\r\n\t\tthis._progressEvent.bytesLoaded = event.loaded;\r\n\r\n\t\tthis.dispatchEvent(this._progressEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * When the request starts.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadStart(event:ProgressEvent)\r\n\t{\r\n\t\tif (!this._loadStartEvent)\r\n\t\t\tthis._loadStartEvent = new AwayEvent(AwayEvent.OPEN);\r\n\r\n\t\tthis.dispatchEvent(this._loadStartEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has successfully completed.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadComplete(event:Event)\r\n\t{\r\n\t\tif (this._loadError === true)\r\n\t\t\treturn;\r\n\r\n\t\tswitch (this._dataFormat) {\r\n\t\t\tcase URLLoaderDataFormat.TEXT:\r\n\t\t\t\tthis._data = this._XHR.responseText;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\r\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.BLOB:\r\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\r\n\t\t\tcase URLLoaderDataFormat.BINARY:\r\n\t\t\t\tthis._data = this._XHR.response;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthis._data = this._XHR.responseText;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (!this._loadCompleteEvent)\r\n\t\t\tthis._loadCompleteEvent = new AwayEvent(AwayEvent.COMPLETE);\r\n\r\n\t\tthis.dispatchEvent(this._loadCompleteEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has failed. ( due to network issues ).\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadError(event:Event)\r\n\t{\r\n\t\tthis._loadError = true;\r\n\r\n\t\tif (!this._loadErrorEvent)\r\n\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\r\n\r\n\t\tthis.dispatchEvent(this._loadErrorEvent);\r\n\t}\r\n}\r\n\r\nexport = URLLoader;",
    "class URLRequestMethod\r\n{\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static POST:string = 'POST';\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static GET:string = 'GET';\r\n}\r\n\r\nexport = URLRequestMethod;",
    "import URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\r\n\r\nclass URLRequest\r\n{\r\n\t/*\r\n\t * The MIME content type of the content in the the data property.\r\n\t * @type {string}\r\n\t */\r\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\r\n\r\n\t/**\r\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\r\n\t *\r\n\t */\r\n\tpublic data:any;\r\n\r\n\t/**\r\n\t *\r\n\t * away.net.URLRequestMethod.GET\r\n\t * away.net.URLRequestMethod.POST\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic method:string = URLRequestMethod.GET;\r\n\r\n\t/**\r\n\t * Use asynchronous XMLHttpRequest\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic async:boolean = true;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _url:string;\r\n\r\n\t/**\r\n\r\n\t * @param url\r\n\t */\r\n\tconstructor(url:string = null)\r\n\t{\r\n\t\tthis._url = url;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set url(value:string)\r\n\t{\r\n\t\tthis._url = value;\r\n\t}\r\n\r\n\t/**\r\n\t * dispose\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.data = null;\r\n\t\tthis._url = null;\r\n\t}\r\n}\r\n\r\nexport = URLRequest;",
    "class URLVariables\r\n{\r\n\tprivate _variables:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tconstructor(source:string = null)\r\n\t{\r\n\t\tif (source !== null)\r\n\t\t\tthis.decode(source);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tpublic decode(source:string):void\r\n\t{\r\n\t\tsource = source.split(\"+\").join(\" \");\r\n\r\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n\t\twhile (tokens = re.exec(source))\r\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic get variables():Object\r\n\t{\r\n\t\treturn this._variables;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic get formData():FormData\r\n\t{\r\n\t\tvar fd:FormData = new FormData();\r\n\r\n\t\tfor (var s in this._variables)\r\n\t\t\tfd.append(s, this._variables[s]);\r\n\r\n\t\treturn fd;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic set variables(obj:Object)\r\n\t{\r\n\t\tthis._variables = obj;\r\n\t}\r\n}\r\n\r\nexport = URLVariables;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\n/**\r\n * Image2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nclass Image2DParser extends ParserBase\r\n{\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _doneParsing:boolean;\r\n\tprivate _loadingImage:boolean;\r\n\tprivate _htmlImageElement:HTMLImageElement;\r\n\r\n\t/**\r\n\t * Creates a new Image2DParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.BLOB);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\r\n\t\tif (data  instanceof HTMLImageElement)\r\n\t\t\treturn true;\r\n\r\n\t\tif (!(data instanceof ByteArray))\r\n\t\t\treturn false;\r\n\r\n\t\tvar ba:ByteArray = <ByteArray> data;\r\n\t\tba.position = 0;\r\n\r\n\t\tif (ba.readUnsignedShort() == 0xffd8)\r\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readShort() == 0x424D)\r\n\t\t\treturn true; // BMP\r\n\r\n\t\tba.position = 1;\r\n\t\tif (ba.readUTFBytes(3) == 'PNG')\r\n\t\t\treturn true;\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\r\n\t\t\treturn true;\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUTFBytes(3) == 'ATF')\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\r\n\t\tvar asset:BitmapImage2D;\r\n\t\tvar sizeError:boolean = false;\r\n\r\n\t\tif (this._loadingImage) {\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t} else if (this._htmlImageElement) {\r\n\t\t\tif (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\r\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t}\r\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\r\n\t\t\tvar htmlImageElement:HTMLImageElement = <HTMLImageElement> this.data;\r\n\t\t\tif (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\r\n\r\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t} else {\r\n\t\t\t\tsizeError = true;\r\n\t\t\t}\r\n\r\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\r\n\r\n\t\t\tvar ba:ByteArray = this.data;\r\n\t\t\tba.position = 0;\r\n\t\t\tvar htmlImageElement:HTMLImageElement = ParserUtils.byteArrayToImage(this.data);\r\n\r\n\t\t\tif (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\r\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t} else {\r\n\t\t\t\tsizeError = true;\r\n\t\t\t}\r\n\r\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\r\n\r\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\r\n\r\n\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\r\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\r\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\r\n\r\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\r\n\r\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\r\n\t\t\tthis._loadingImage = true;\r\n\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t}\r\n\r\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\r\n\t\t{\r\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\r\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\r\n\t\t}\r\n\r\n\t\tthis._pContent = asset;\r\n\r\n\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t}\r\n\r\n\tpublic onLoadComplete(event)\r\n\t{\r\n\t\tthis._loadingImage = false;\r\n\t}\r\n}\r\n\r\nexport = Image2DParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\n\r\n/**\r\n * ImageCubeParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nclass ImageCubeParser extends ParserBase\r\n{\r\n\tprivate static posX:string = 'posX';\r\n\tprivate static negX:string = 'negX';\r\n\tprivate static posY:string = 'posY';\r\n\tprivate static negY:string = 'negY';\r\n\tprivate static posZ:string = 'posZ';\r\n\tprivate static negZ:string = 'negZ';\r\n\r\n\tprivate _imgDependencyDictionary:Object;\r\n\r\n\t/**\r\n\t * Creates a new ImageCubeParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"cube\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\ttry {\r\n\t\t\tvar obj = JSON.parse(data);\r\n\r\n\t\t\tif (obj) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\r\n\t\t\tvar asset:BitmapImageCube = new BitmapImageCube(this._getBitmapImage2D(ImageCubeParser.posX).width);\r\n\r\n\t\t\tasset.draw(BitmapImageCube.posX, this._getBitmapImage2D(ImageCubeParser.posX));\r\n\t\t\tasset.draw(BitmapImageCube.negX, this._getBitmapImage2D(ImageCubeParser.negX));\r\n\t\t\tasset.draw(BitmapImageCube.posY, this._getBitmapImage2D(ImageCubeParser.posY));\r\n\t\t\tasset.draw(BitmapImageCube.negY, this._getBitmapImage2D(ImageCubeParser.negY));\r\n\t\t\tasset.draw(BitmapImageCube.posZ, this._getBitmapImage2D(ImageCubeParser.posZ));\r\n\t\t\tasset.draw(BitmapImageCube.negZ, this._getBitmapImage2D(ImageCubeParser.negZ));\r\n\r\n\t\t\t//clear dictionary\r\n\t\t\tthis._imgDependencyDictionary = null;\r\n\r\n\t\t\tasset.name = this._iFileName;\r\n\r\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tvar json:any = JSON.parse(this.data);\r\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\r\n\t\t\tvar rec:any;\r\n\r\n\t\t\tif (data.length != 6)\r\n\t\t\t\tthis._pDieWithError('ImageCubeParser: Error - cube texture should have exactly 6 images');\r\n\r\n\t\t\tif (json) {\r\n\t\t\t\tthis._imgDependencyDictionary = new Object();\r\n\r\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\r\n\t\t\t\t\trec = data[c];\r\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this._validateCubeData()) {\r\n\r\n\t\t\t\t\tthis._pDieWithError(\"ImageCubeParser: JSON data error - cubes require id of:   \\n\" + ImageCubeParser.posX + ', ' + ImageCubeParser.negX + ',  \\n' + ImageCubeParser.posY + ', ' + ImageCubeParser.negY + ',  \\n' + ImageCubeParser.posZ + ', ' + ImageCubeParser.negZ);\r\n\r\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\r\n\t\t}\r\n\r\n\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t}\r\n\r\n\tprivate _validateCubeData():boolean\r\n\t{\r\n\t\treturn  ( this._imgDependencyDictionary[ ImageCubeParser.posX ] != null && this._imgDependencyDictionary[ ImageCubeParser.negX ] != null && this._imgDependencyDictionary[ ImageCubeParser.posY ] != null && this._imgDependencyDictionary[ ImageCubeParser.negY ] != null && this._imgDependencyDictionary[ ImageCubeParser.posZ ] != null && this._imgDependencyDictionary[ ImageCubeParser.negZ ] != null );\r\n\t}\r\n\r\n\tprivate _getBitmapImage2D(name:string):BitmapImage2D\r\n\t{\r\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\r\n\r\n\t\tif (dependency)\r\n\t\t\treturn <BitmapImage2D> dependency.assets[0];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n\r\nexport = ImageCubeParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\r\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\nimport Timer\t\t\t\t\t= require(\"awayjs-core/lib/utils/Timer\");\r\nimport getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\n/**\r\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\r\n * supported by away.\r\n *\r\n * If used by <code>AssetLoader</code> to automatically determine the parser type, two public static methods should\r\n * be implemented, with the following signatures:\r\n *\r\n * <code>public static supportsType(extension : string) : boolean</code>\r\n * Indicates whether or not a given file extension is supported by the parser.\r\n *\r\n * <code>public static supportsData(data : *) : boolean</code>\r\n * Tests whether a data block can be parsed by the parser.\r\n *\r\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\r\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\r\n * handle regardless of whether the object was loaded or not.\r\n *\r\n * @see AssetLoader\r\n */\r\nclass ParserBase extends EventDispatcher\r\n{\r\n\tpublic _iFileName:string;\r\n\tprivate _dataFormat:string;\r\n\tprivate _data:any;\r\n\tprivate _frameLimit:number;\r\n\tprivate _lastFrameTime:number;\r\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\r\n\tpublic _pContent:IAsset;\r\n\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\t// Needs to be implemented in all Parsers (\r\n\t//<code>public static supportsType(extension : string) : boolean</code>\r\n\t//* Indicates whether or not a given file extension is supported by the parser.\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate _dependencies:Array<ResourceDependency>;\r\n\tprivate _parsingPaused:boolean;\r\n\tprivate _parsingComplete:boolean;\r\n\tprivate _parsingFailure:boolean;\r\n\tprivate _timer:Timer;\r\n\tprivate _materialMode:number;\r\n\r\n\t/**\r\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\r\n\t */\r\n\tpublic static PARSING_DONE:boolean = true;\r\n\t/* Protected */\r\n\r\n\t/**\r\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\r\n\t */\r\n\tpublic static MORE_TO_PARSE:boolean = false;\r\n\t/* Protected */\r\n\r\n\r\n\tpublic get content():IAsset\r\n\t{\r\n\t\treturn this._pContent;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new ParserBase object\r\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\r\n\t *\r\n\t * @see away.loading.parsers.ParserDataFormat\r\n\t */\r\n\tconstructor(format:string)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._materialMode = 0;\r\n\t\tthis._dataFormat = format;\r\n\t\tthis._dependencies = new Array<ResourceDependency>();\r\n\r\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\r\n\t */\r\n\r\n\tpublic isBitmapImage2DValid(bitmapImage2D:BitmapImage2D):boolean\r\n\t{\r\n\t\tvar isValid:boolean = ImageUtils.isImage2DValid(bitmapImage2D);\r\n\r\n\t\tif (!isValid) {\r\n\r\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\r\n\t\t}\r\n\r\n\t\treturn isValid;\r\n\t}\r\n\r\n\tpublic set parsingFailure(b:boolean)\r\n\t{\r\n\t\tthis._parsingFailure = b;\r\n\t}\r\n\r\n\tpublic get parsingFailure():boolean\r\n\t{\r\n\t\treturn this._parsingFailure;\r\n\t}\r\n\r\n\tpublic get parsingPaused():boolean\r\n\t{\r\n\t\treturn this._parsingPaused;\r\n\t}\r\n\r\n\tpublic get parsingComplete():boolean\r\n\t{\r\n\t\treturn this._parsingComplete;\r\n\t}\r\n\r\n\tpublic set materialMode(newMaterialMode:number)\r\n\t{\r\n\t\tthis._materialMode = newMaterialMode;\r\n\t}\r\n\r\n\tpublic get materialMode():number\r\n\t{\r\n\t\treturn this._materialMode;\r\n\t}\r\n\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\t/**\r\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\r\n\t */\r\n\tpublic get dataFormat():string\r\n\t{\r\n\t\treturn this._dataFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\r\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\r\n\t * next frame.\r\n\t *\r\n\t * @param data The untyped data object in which the loaded data resides.\r\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\r\n\t * actual time spent on a frame can exceed this number since time-checks can\r\n\t * only be performed between logical sections of the parsing procedure.\r\n\t */\r\n\tpublic parseAsync(data:any, frameLimit:number = 30)\r\n\t{\r\n\t\tthis._data = data;\r\n\t\tthis._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\t/**\r\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\r\n\t */\r\n\tpublic get dependencies():Array<ResourceDependency>\r\n\t{\r\n\t\treturn this._dependencies;\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\r\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\r\n\t * dependency should be a member of the dependencies property.\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\treturn asset.name;\r\n\t}\r\n\r\n\tpublic _iResumeParsingAfterDependencies()\r\n\t{\r\n\t\tthis._parsingPaused = false;\r\n\r\n\t\tif (this._timer)\r\n\t\t\tthis._timer.start();\r\n\t}\r\n\r\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null)\r\n\t{\r\n\t\tvar type_event:string;\r\n\t\tvar type_name:string;\r\n\r\n\t\tif (name != null)\r\n\t\t\tasset.name = name;\r\n\r\n\t\t// If the asset has no name, give it\r\n\t\t// a per-type default name.\r\n\t\tif (!asset.name)\r\n\t\t\tasset.name = asset.assetType;\r\n\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\r\n\t}\r\n\r\n\t/**\r\n\t * Parse the next block of data.\r\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\r\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pDieWithError(message:string = 'Unknown parsing error')\r\n\t{\r\n\t\tif (this._timer) {\r\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\t\tthis._timer.stop();\r\n\t\t\tthis._timer = null;\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\r\n\t}\r\n\r\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false, sub_id:number=0):ResourceDependency\r\n\t{\r\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents, sub_id);\r\n\t\tthis._dependencies.push(dependency);\r\n\r\n\t\treturn dependency;\r\n\t}\r\n\r\n\tpublic _pPauseAndRetrieveDependencies()\r\n\t{\r\n\t\tif (this._timer)\r\n\t\t\tthis._timer.stop();\r\n\r\n\t\tthis._parsingPaused = true;\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\r\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\r\n\t */\r\n\tpublic _pHasTime():boolean\r\n\t{\r\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the parsing pause interval has passed and parsing can proceed.\r\n\t */\r\n\tpublic _pOnInterval(event:TimerEvent = null)\r\n\t{\r\n\t\tthis._lastFrameTime = getTimer();\r\n\r\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\r\n\t\t\tthis._pFinishParsing();\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the parsing of data.\r\n\t * @param frameLimit The maximum duration of a parsing session.\r\n\t */\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tthis._frameLimit = frameLimit;\r\n\t\tthis._timer = new Timer(this._frameLimit, 0);\r\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\tthis._timer.start();\r\n\t}\r\n\r\n\t/**\r\n\t * Finish parsing the data.\r\n\t */\r\n\tpublic _pFinishParsing()\r\n\t{\r\n\t\tif (this._timer) {\r\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\t\tthis._timer.stop();\r\n\t\t}\r\n\r\n\t\tthis._timer = null;\r\n\t\tthis._parsingComplete = true;\r\n\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetTextData():string\r\n\t{\r\n\t\treturn ParserUtils.toString(this._data);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetByteData():ByteArray\r\n\t{\r\n\t\treturn ParserUtils.toByteArray(this._data);\r\n\t}\r\n}\r\n\r\nexport = ParserBase;",
    "/**\r\n * An enumeration providing values to describe the data format of parsed data.\r\n */\r\nclass ParserDataFormat\r\n{\r\n\t/**\r\n\t * Describes the format of a binary file.\r\n\t */\r\n\tpublic static BINARY:string = \"binary\";\r\n\r\n\t/**\r\n\t * Describes the format of a plain text file.\r\n\t */\r\n\tpublic static PLAIN_TEXT:string = \"plainText\";\r\n\r\n\t/**\r\n\t * Describes the format of an image file\r\n\t */\r\n\tpublic static IMAGE:string = \"image\";\r\n\r\n}\r\n\r\nexport = ParserDataFormat;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nclass ParserUtils\r\n{\r\n\r\n\t/**\r\n\t * Converts an ArrayBuffer to a base64 string\r\n\t *\r\n\t * @param image data as a ByteArray\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\r\n\t{\r\n\t\tvar byteStr:string = '';\r\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\r\n\t\tvar len:number = bytes.byteLength;\r\n\r\n\t\tfor (var i = 0; i < len; i++)\r\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\r\n\r\n\t\tvar base64Image:string = window.btoa(byteStr);\r\n\t\tvar str:string = 'data:image/png;base64,' + base64Image;\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = str;\r\n\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\r\n\t *\r\n\t * @param image data as a ByteArray\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\r\n\t{\r\n\t\tvar byteStr:string = '';\r\n\t\tvar bytes:Uint8Array = new Uint8Array(data.arraybytes);\r\n\t\tvar len:number = bytes.byteLength;\r\n\r\n\t\tfor (var i = 0; i < len; i++)\r\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\r\n\r\n\t\tvar base64Image:string = window.btoa(byteStr);\r\n\t\tvar str:string = 'data:image/png;base64,' + base64Image;\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = str;\r\n\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Blob to an Image - returns an HTMLImageElement\r\n\t *\r\n\t * @param image data as a Blob\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static blobToImage(data:Blob):HTMLImageElement\r\n\t{\r\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\r\n\t\tvar src = URLObj.createObjectURL(data);\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = src;\r\n\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static imageToBitmapImage2D(img:HTMLImageElement):BitmapImage2D\r\n\t{\r\n\t\tvar bitmapData:BitmapImage2D = new BitmapImage2D(img.width, img.height, true);\r\n\t\tbitmapData.draw(img);\r\n\r\n\t\treturn bitmapData;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a object as ByteArray, if possible.\r\n\t *\r\n\t * @param data The object to return as ByteArray\r\n\t *\r\n\t * @return The ByteArray or null\r\n\t *\r\n\t */\r\n\tpublic static toByteArray(data:any):ByteArray\r\n\t{\r\n\t\tvar b:ByteArray = new ByteArray();\r\n\t\tb.setArrayBuffer(data);\r\n\t\treturn b;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a object as String, if possible.\r\n\t *\r\n\t * @param data The object to return as String\r\n\t * @param length The length of the returned String\r\n\t *\r\n\t * @return The String or null\r\n\t *\r\n\t */\r\n\tpublic static toString(data:any, length:number = 0):string\r\n\t{\r\n\r\n\t\tif (typeof data === 'string') {\r\n\t\t\tvar s:string = <string> data;\r\n\r\n\t\t\tif (s['substr'] != null)\r\n\t\t\t\treturn s.substr(0, s.length);\r\n\t\t}\r\n\r\n\t\tif (data instanceof ByteArray) {\r\n\t\t\tvar ba:ByteArray = <ByteArray> data;\r\n\t\t\tba.position = 0;\r\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t\t/*\r\n\t\t var ba:ByteArray;\r\n\r\n\t\t length ||= uint.MAX_VALUE;\r\n\r\n\t\t if (data is String)\r\n\t\t return String(data).substr(0, length);\r\n\r\n\t\t ba = toByteArray(data);\r\n\t\t if (ba) {\r\n\t\t ba.position = 0;\r\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\r\n\t\t }\r\n\r\n\t\t return null;\r\n\r\n\t\t */\r\n\r\n\t}\r\n}\r\n\r\nexport = ParserUtils;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\n/**\r\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\r\n * required by a parser, used by ResourceLoadSession.\r\n *\r\n */\r\nclass ResourceDependency\r\n{\r\n\tprivate _id:string;\r\n\tprivate _sub_id:number;\r\n\r\n\tprivate _request:URLRequest;\r\n\tprivate _assets:Array<IAsset>;\r\n\tprivate _parser:ParserBase;\r\n\tprivate _parentParser:ParserBase;\r\n\tprivate _data:any;\r\n\tprivate _retrieveAsRawData:boolean;\r\n\tprivate _suppressAssetEvents:boolean;\r\n\tprivate _dependencies:Array<ResourceDependency>;\r\n\r\n\tpublic _iLoader:URLLoader;\r\n\tpublic _iSuccess:boolean;\r\n\r\n\r\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false, sub_id:number=0)\r\n\t{\r\n\t\tthis._id = id;\r\n\t\tthis._sub_id = sub_id;\r\n\t\tthis._request = request;\r\n\t\tthis._data = data;\r\n\t\tthis._parser = parser;\r\n\t\tthis._parentParser = parentParser;\r\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\r\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\r\n\t\tthis._assets = new Array<IAsset>();\r\n\t\tthis._dependencies = new Array<ResourceDependency>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get id():string\r\n\t{\r\n\t\treturn this._id;\r\n\t}\r\n\tpublic get sub_id():number\r\n\t{\r\n\t\treturn this._sub_id;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get request():URLRequest\r\n\t{\r\n\t\treturn this._request;\r\n\t}\r\n\r\n\t/**\r\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\r\n\t */\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parser():ParserBase\r\n\t{\r\n\t\treturn this._parser;\r\n\t}\r\n\r\n\t/**\r\n\t * The parser which is dependent on this ResourceDependency object.\r\n\t */\r\n\tpublic get parentParser():ParserBase\r\n\t{\r\n\t\treturn this._parentParser;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get retrieveAsRawData():boolean\r\n\t{\r\n\t\treturn this._retrieveAsRawData;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get suppresAssetEvents():boolean\r\n\t{\r\n\t\treturn this._suppressAssetEvents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assets():Array<IAsset>\r\n\t{\r\n\t\treturn this._assets;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get dependencies():Array<ResourceDependency>\r\n\t{\r\n\t\treturn this._dependencies;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Method to set data after having already created the dependency object, e.g. after load.\r\n\t */\r\n\tpublic _iSetData(data:any):void\r\n\t{\r\n\t\tthis._data = data;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t */\r\n\tpublic _iSetParser(parser:ParserBase):void\r\n\t{\r\n\t\tthis._parser = parser;\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\r\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\r\n\t * to its intended parent. The dependency should be a member of the dependencies property.\r\n\t */\r\n\tpublic resolve():void\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\tthis._parentParser._iResolveDependency(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\r\n\t */\r\n\tpublic resolveFailure():void\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve the dependencies name\r\n\t */\r\n\tpublic resolveName(asset:IAsset):string\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\r\n\r\n\t\treturn asset.name;\r\n\t}\r\n}\r\n\r\nexport = ResourceDependency;",
    "import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport XmlUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/XmlUtils\");\r\n\r\n/**\r\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nclass TextureAtlasParser extends ParserBase\r\n{\r\n\tprivate _doc:Node;\r\n\tprivate _imagePath:string;\r\n\tprivate _imageData:BitmapImage2D;\r\n\tprivate _subTextureNodes:NodeList;\r\n\tprivate _parseState:number = 0;\r\n\r\n\t/**\r\n\t * Creates a new TextureAtlasParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"xml\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\ttry {\r\n\t\t\tvar content:string = ParserUtils.toString(data);\r\n\t\t\tif(content.indexOf(\"TextureAtlas\") != -1 || content.indexOf(\"textureatlas\") != -1)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\treturn false;\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif(resourceDependency.assets.length) {\r\n\t\t\tthis._imageData = <BitmapImage2D> resourceDependency.assets[0];\r\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_SUBTEXTURES;\r\n\t\t} else {\r\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar nodes:NodeList;\r\n\r\n\t\tswitch(this._parseState) {\r\n\t\t\tcase TextureAtlasParserState.PARSE_XML:\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._doc = XmlUtils.getChildrenWithTag(XmlUtils.strToXml(this._pGetTextData()), \"TextureAtlas\")[0];\r\n\r\n\t\t\t\t\tthis._imagePath = XmlUtils.readAttributeValue(this._doc, \"imagePath\");\r\n\r\n\t\t\t\t\tthis._subTextureNodes = XmlUtils.getChildrenWithTag(this._doc, \"SubTexture\");\r\n\r\n\t\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_IMAGE;\r\n\r\n\t\t\t\t} catch(Error) {\r\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase TextureAtlasParserState.PARSE_IMAGE:\r\n\t\t\t\tif (this._imagePath){\r\n\t\t\t\t\tthis._pAddDependency(this._imagePath, new URLRequest(this._imagePath));\r\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase TextureAtlasParserState.PARSE_SUBTEXTURES:\r\n\t\t\t\tvar bitmap:Sampler2D;\r\n\t\t\t\tvar element:Node;\r\n\t\t\t\tvar x:string;\r\n\t\t\t\tvar y:string;\r\n\t\t\t\tvar width:string;\r\n\t\t\t\tvar height:string;\r\n\t\t\t\tvar len:number = this._subTextureNodes.length;\r\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\t\t\telement = this._subTextureNodes[i];\r\n\t\t\t\t\tbitmap = new Sampler2D(this._imageData);\r\n\r\n\t\t\t\t\t//setup subtexture rect\r\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"x\");\r\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"y\");\r\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"width\");\r\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"height\");\r\n\t\t\t\t\tif (x || y || width || height)\r\n\t\t\t\t\t\tbitmap.imageRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\r\n\r\n\t\t\t\t\t//setup frame rect\r\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"frameX\");\r\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"frameY\");\r\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"frameWidth\");\r\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"frameHeight\");\r\n\t\t\t\t\tif (x || y || width || height)\r\n\t\t\t\t\t\tbitmap.frameRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(bitmap, XmlUtils.readAttributeValue(element, \"name\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase TextureAtlasParserState.PARSE_COMPLETE:\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n}\r\n\r\nexport = TextureAtlasParser;\r\n\r\nclass TextureAtlasParserState {\r\n\tpublic static PARSE_XML:number = 0;\r\n\tpublic static PARSE_IMAGE:number = 1;\r\n\tpublic static PARSE_SUBTEXTURES:number = 2;\r\n\tpublic static PARSE_COMPLETE:number = 3;\r\n}",
    "/**\r\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\r\n *\r\n * @see away.projections.PerspectiveLens#coordinateSystem\r\n */\r\nclass CoordinateSystem\r\n{\r\n\t/**\r\n\t * Default option, projects to a left-handed coordinate system\r\n\t */\r\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\r\n\r\n\t/**\r\n\t * Projects to a right-handed coordinate system\r\n\t */\r\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\r\n}\r\n\r\nexport = CoordinateSystem;",
    "import PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass FreeMatrixProjection extends ProjectionBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tthis._pNear = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tthis._pFar = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set iAspectRatio(value:number)\r\n\t{\r\n\t\tthis._pAspectRatio = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\r\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone.pInvalidateMatrix();\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}\r\n\r\nexport = FreeMatrixProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass ObliqueNearPlaneProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _baseProjection:IProjection;\r\n\tprivate _plane:Plane3D;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.baseProjection = baseProjection;\r\n\t\tthis.plane = plane;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get frustumCorners():number[]\r\n\t{\r\n\t\treturn this._baseProjection.frustumCorners;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get near():number\r\n\t{\r\n\t\treturn this._baseProjection.near;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tthis._baseProjection.near = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get far():number\r\n\t{\r\n\t\treturn this._baseProjection.far;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tthis._baseProjection.far = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get iAspectRatio():number\r\n\t{\r\n\t\treturn this._baseProjection._iAspectRatio;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set iAspectRatio(value:number)\r\n\t{\r\n\t\tthis._baseProjection._iAspectRatio = value;\r\n\t}\r\n\r\n\tpublic get plane():Plane3D\r\n\t{\r\n\t\treturn this._plane;\r\n\t}\r\n\r\n\tpublic set plane(value:Plane3D)\r\n\t{\r\n\t\tthis._plane = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic set baseProjection(value:IProjection)\r\n\t{\r\n\t\tif (this._baseProjection) {\r\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\t}\r\n\t\tthis._baseProjection = value;\r\n\r\n\t\tif (this._baseProjection) {\r\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\t}\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\r\n\r\n\t\tvar cx:number = this._plane.a;\r\n\t\tvar cy:number = this._plane.b;\r\n\t\tvar cz:number = this._plane.c;\r\n\t\tvar cw:number = -this._plane.d + .05;\r\n\t\tvar signX:number = cx >= 0? 1 : -1;\r\n\t\tvar signY:number = cy >= 0? 1 : -1;\r\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\r\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\r\n\t\tinverse.invert();\r\n\t\tvar q:Vector3D = inverse.transformVector(p);\r\n\t\tthis._pMatrix.copyRowTo(3, p);\r\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\r\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\r\n\t}\r\n}\r\n\r\nexport = ObliqueNearPlaneProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass OrthographicOffCenterProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _minX:number;\r\n\tprivate _maxX:number;\r\n\tprivate _minY:number;\r\n\tprivate _maxY:number;\r\n\r\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._minX = minX;\r\n\t\tthis._maxX = maxX;\r\n\t\tthis._minY = minY;\r\n\t\tthis._maxY = maxY;\r\n\t}\r\n\r\n\tpublic get minX():number\r\n\t{\r\n\t\treturn this._minX;\r\n\t}\r\n\r\n\tpublic set minX(value:number)\r\n\t{\r\n\t\tthis._minX = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get maxX():number\r\n\t{\r\n\t\treturn this._maxX;\r\n\t}\r\n\r\n\tpublic set maxX(value:number)\r\n\t{\r\n\t\tthis._maxX = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get minY():number\r\n\t{\r\n\t\treturn this._minY;\r\n\t}\r\n\r\n\tpublic set minY(value:number)\r\n\t{\r\n\t\tthis._minY = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get maxY():number\r\n\t{\r\n\t\treturn this._maxY;\r\n\t}\r\n\r\n\tpublic set maxY(value:number)\r\n\t{\r\n\t\tthis._maxY = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tvar raw:number[] = [];\r\n\t\tvar w:number = 1/(this._maxX - this._minX);\r\n\t\tvar h:number = 1/(this._maxY - this._minY);\r\n\t\tvar d:number = 1/(this._pFar - this._pNear);\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(this._maxX + this._minX)*w;\r\n\t\traw[13] = -(this._maxY + this._minY)*h;\r\n\t\traw[14] = -this._pNear*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}\r\n\r\nexport = OrthographicOffCenterProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass OrthographicProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _projectionHeight:number;\r\n\tprivate _xMax:number;\r\n\tprivate _yMax:number;\r\n\r\n\tconstructor(projectionHeight:number = 500)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._projectionHeight = projectionHeight;\r\n\t}\r\n\r\n\tpublic get projectionHeight():number\r\n\t{\r\n\t\treturn this._projectionHeight;\r\n\t}\r\n\r\n\tpublic set projectionHeight(value:number)\r\n\t{\r\n\t\tif (value == this._projectionHeight) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._projectionHeight = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone.projectionHeight = this._projectionHeight;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tvar raw:number[] = [];\r\n\t\tthis._yMax = this._projectionHeight*.5;\r\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\r\n\r\n\t\tvar left:number;\r\n\t\tvar right:number;\r\n\t\tvar top:number;\r\n\t\tvar bottom:number;\r\n\r\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\r\n\t\t\t// assume symmetric frustum\r\n\r\n\t\t\tleft = -this._xMax;\r\n\t\t\tright = this._xMax;\r\n\t\t\ttop = -this._yMax;\r\n\t\t\tbottom = this._yMax;\r\n\r\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\r\n\t\t\traw[5] = 2/this._projectionHeight;\r\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\r\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\r\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\r\n\t\t\traw[15] = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\r\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\r\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\r\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\r\n\r\n\t\t\tleft = center - xWidth;\r\n\t\t\tright = center + xWidth;\r\n\t\t\ttop = middle - yHgt;\r\n\t\t\tbottom = middle + yHgt;\r\n\r\n\t\t\traw[0] = 2*1/(right - left);\r\n\t\t\traw[5] = -2*1/(top - bottom);\r\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\r\n\r\n\t\t\traw[12] = (right + left)/(right - left);\r\n\t\t\traw[13] = (bottom + top)/(bottom - top);\r\n\t\t\traw[14] = this._pNear/(this.near - this.far);\r\n\r\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\t\traw[15] = 1;\r\n\t\t}\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}\r\n\r\nexport= OrthographicProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport CoordinateSystem\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass PerspectiveProjection extends ProjectionBase\r\n{\r\n\tprivate _fieldOfView:number = 60;\r\n\tprivate _focalLength:number = 1000;\r\n\tprivate _hFieldOfView:number = 60;\r\n\tprivate _hFocalLength:number = 1000;\r\n\tprivate _preserveAspectRatio:boolean = true;\r\n\tprivate _preserveFocalLength:boolean = false;\r\n\r\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\r\n\t{\r\n\t\tsuper(coordinateSystem);\r\n\t\tthis.fieldOfView = fieldOfView;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get preserveAspectRatio():boolean\r\n\t{\r\n\t\treturn this._preserveAspectRatio;\r\n\t}\r\n\r\n\tpublic set preserveAspectRatio(value:boolean)\r\n\t{\r\n\t\tif (this._preserveAspectRatio == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._preserveAspectRatio = value;\r\n\r\n\t\tif (this._preserveAspectRatio)\r\n\t\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get preserveFocalLength():boolean\r\n\t{\r\n\t\treturn this._preserveFocalLength;\r\n\t}\r\n\r\n\tpublic set preserveFocalLength(value:boolean)\r\n\t{\r\n\t\tif (this._preserveFocalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._preserveFocalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get fieldOfView():number\r\n\t{\r\n\t\treturn this._fieldOfView;\r\n\t}\r\n\r\n\tpublic set fieldOfView(value:number)\r\n\t{\r\n\t\tif (this._fieldOfView == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._fieldOfView = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get focalLength():number\r\n\t{\r\n\t\treturn this._focalLength;\r\n\t}\r\n\r\n\tpublic set focalLength(value:number)\r\n\t{\r\n\t\tif (this._focalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._focalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get hFieldOfView():number\r\n\t{\r\n\t\treturn this._hFieldOfView;\r\n\t}\r\n\r\n\tpublic set hFieldOfView(value:number)\r\n\t{\r\n\t\tif (this._hFieldOfView == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._hFieldOfView = value;\r\n\r\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get hFocalLength():number\r\n\t{\r\n\t\treturn this._hFocalLength;\r\n\t}\r\n\r\n\tpublic set hFocalLength(value:number)\r\n\t{\r\n\t\tif (this._hFocalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._hFocalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\r\n\r\n\t\tv.x *= sZ;\r\n\t\tv.y *= sZ;\r\n\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tvar raw:number[] = [];\r\n\r\n\t\tif (this._preserveFocalLength) {\r\n\t\t\tif (this._preserveAspectRatio)\r\n\t\t\t\tthis._hFocalLength = this._focalLength;\r\n\r\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\r\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\r\n\t\t} else {\r\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\r\n\r\n\t\t\tif (this._preserveAspectRatio)\r\n\t\t\t\tthis._hFocalLength = this._focalLength;\r\n\t\t\telse\r\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\r\n\t\t}\r\n\r\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\r\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\r\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\r\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\r\n\r\n\t\tvar left:number;\r\n\t\tvar right:number;\r\n\t\tvar top:number;\r\n\t\tvar bottom:number;\r\n\r\n\t\t// assume scissored frustum\r\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\r\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\r\n\r\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\r\n\t\tright = center;\r\n\t\ttop = middle;\r\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\r\n\r\n\t\traw[0] = 2/(right - left);\r\n\t\traw[5] = 2/(bottom - top);\r\n\t\traw[8] = (right + left)/(right - left);\r\n\t\traw[9] = (bottom + top)/(bottom - top);\r\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\r\n\r\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\r\n\t\t\traw[5] = -raw[5];\r\n\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\r\n\r\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\r\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\r\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\r\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\r\n\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\r\n\r\n\t}\r\n}\r\n\r\nexport = PerspectiveProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nclass ProjectionBase extends EventDispatcher implements IProjection\r\n{\r\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\r\n\tpublic _pScissorRect:Rectangle = new Rectangle();\r\n\tpublic _pViewPort:Rectangle = new Rectangle();\r\n\tpublic _pNear:number = 20;\r\n\tpublic _pFar:number = 3000;\r\n\tpublic _pAspectRatio:number = 1;\r\n\r\n\tpublic _pMatrixInvalid:boolean = true;\r\n\tpublic _pFrustumCorners:number[] = [];\r\n\tpublic _pCoordinateSystem:string;\r\n\tpublic _pOriginX:number = 0.5;\r\n\tpublic _pOriginY:number = 0.5;\r\n\r\n\tprivate _unprojection:Matrix3D;\r\n\tprivate _unprojectionInvalid:boolean = true;\r\n\r\n\tconstructor(coordinateSystem:string = \"leftHanded\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coordinateSystem = coordinateSystem;\r\n\t}\r\n\r\n\t/**\r\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\r\n\t */\r\n\tpublic get coordinateSystem():string\r\n\t{\r\n\t\treturn this._pCoordinateSystem;\r\n\t}\r\n\r\n\tpublic set coordinateSystem(value:string)\r\n\t{\r\n\t\tif (this._pCoordinateSystem == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pCoordinateSystem = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get frustumCorners():number[]\r\n\t{\r\n\t\treturn this._pFrustumCorners;\r\n\t}\r\n\r\n\tpublic set frustumCorners(frustumCorners:number[])\r\n\t{\r\n\t\tthis._pFrustumCorners = frustumCorners;\r\n\t}\r\n\r\n\tpublic get matrix():Matrix3D\r\n\t{\r\n\t\tif (this._pMatrixInvalid) {\r\n\t\t\tthis.pUpdateMatrix();\r\n\t\t\tthis._pMatrixInvalid = false;\r\n\t\t}\r\n\t\treturn this._pMatrix;\r\n\t}\r\n\r\n\tpublic set matrix(value:Matrix3D)\r\n\t{\r\n\t\tthis._pMatrix = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get near():number\r\n\t{\r\n\t\treturn this._pNear;\r\n\t}\r\n\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tif (value == this._pNear) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pNear = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get originX():number\r\n\t{\r\n\t\treturn this._pOriginX;\r\n\t}\r\n\r\n\tpublic set originX(value:number)\r\n\t{\r\n\t\tif (this._pOriginX == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pOriginX = value;\r\n\t}\r\n\r\n\tpublic get originY():number\r\n\t{\r\n\t\treturn this._pOriginY;\r\n\t}\r\n\r\n\tpublic set originY(value:number)\r\n\t{\r\n\t\tif (this._pOriginY == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pOriginY = value;\r\n\t}\r\n\r\n\tpublic get far():number\r\n\t{\r\n\t\treturn this._pFar;\r\n\t}\r\n\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tif (value == this._pFar) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pFar = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\r\n\t\tv.x = v.x/v.w;\r\n\t\tv.y = -v.y/v.w;\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = point3d.z;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic get unprojectionMatrix():Matrix3D\r\n\t{\r\n\t\tif (this._unprojectionInvalid) {\r\n\t\t\tif (!this._unprojection)\r\n\t\t\t\tthis._unprojection = new Matrix3D();\r\n\r\n\t\t\tthis._unprojection.copyFrom(this.matrix);\r\n\t\t\tthis._unprojection.invert();\r\n\t\t\tthis._unprojectionInvalid = false;\r\n\t\t}\r\n\t\treturn this._unprojection;\r\n\t}\r\n\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get _iAspectRatio():number\r\n\t{\r\n\t\treturn this._pAspectRatio;\r\n\t}\r\n\r\n\tpublic set _iAspectRatio(value:number)\r\n\t{\r\n\t\tif (this._pAspectRatio == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAspectRatio = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic pInvalidateMatrix()\r\n\t{\r\n\t\tthis._pMatrixInvalid = true;\r\n\t\tthis._unprojectionInvalid = true;\r\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\r\n\t}\r\n\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\t\tthis._pScissorRect.x = x;\r\n\t\tthis._pScissorRect.y = y;\r\n\t\tthis._pScissorRect.width = width;\r\n\t\tthis._pScissorRect.height = height;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number)\r\n\t{\r\n\t\tthis._pViewPort.x = x;\r\n\t\tthis._pViewPort.y = y;\r\n\t\tthis._pViewPort.width = width;\r\n\t\tthis._pViewPort.height = height;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n}\r\n\r\nexport = ProjectionBase;",
    "class Keyboard\r\n{\r\n\t/**\r\n\t * Constant associated with the key code value for the A key (65).\r\n\t */\r\n\tpublic static A:number /*uint*/ = 65;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\r\n\t */\r\n\tpublic static ALTERNATE:number /*uint*/ = 18;\r\n\r\n\t/**\r\n\t * Select the audio mode\r\n\t */\r\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the B key (66).\r\n\t */\r\n\tpublic static B:number /*uint*/ = 66;\r\n\r\n\t/**\r\n\t * Return to previous page in application\r\n\t */\r\n\tpublic static BACK:number /*uint*/ = 0x01000016;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ` key (192).\r\n\t */\r\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the \\ key (220).\r\n\t */\r\n\tpublic static BACKSLASH:number /*uint*/ = 220;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Backspace key (8).\r\n\t */\r\n\tpublic static BACKSPACE:number /*uint*/ = 8;\r\n\r\n\t/**\r\n\t * Blue function key button\r\n\t */\r\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the C key (67).\r\n\t */\r\n\tpublic static C:number /*uint*/ = 67;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Caps Lock key (20).\r\n\t */\r\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\r\n\r\n\t/**\r\n\t * Channel down\r\n\t */\r\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\r\n\r\n\t/**\r\n\t * Channel up\r\n\t */\r\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the , key (188).\r\n\t */\r\n\tpublic static COMMA:number /*uint*/ = 188;\r\n\r\n\t/**\r\n\t * Constant associated with the Mac command key (15). This constant is\r\n\t * currently only used for setting menu key equivalents.\r\n\t */\r\n\tpublic static COMMAND:number /*uint*/ = 15;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Control key (17).\r\n\t */\r\n\tpublic static CONTROL:number /*uint*/ = 17;\r\n\r\n\t/**\r\n\t * An array containing all the defined key name constants.\r\n\t */\r\n\tpublic static CharCodeStrings:Array<any>;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the D key (68).\r\n\t */\r\n\tpublic static D:number /*uint*/ = 68;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Delete key (46).\r\n\t */\r\n\tpublic static DELETE:number /*uint*/ = 46;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Down Arrow key (40).\r\n\t */\r\n\tpublic static DOWN:number /*uint*/ = 40;\r\n\r\n\t/**\r\n\t * Engage DVR application mode\r\n\t */\r\n\tpublic static DVR:number /*uint*/ = 0x01000019;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the E key (69).\r\n\t */\r\n\tpublic static E:number /*uint*/ = 69;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the End key (35).\r\n\t */\r\n\tpublic static END:number /*uint*/ = 35;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Enter key (13).\r\n\t */\r\n\tpublic static ENTER:number /*uint*/ = 13;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the = key (187).\r\n\t */\r\n\tpublic static EQUAL:number /*uint*/ = 187;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Escape key (27).\r\n\t */\r\n\tpublic static ESCAPE:number /*uint*/ = 27;\r\n\r\n\t/**\r\n\t * Exits current application mode\r\n\t */\r\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F key (70).\r\n\t */\r\n\tpublic static F:number /*uint*/ = 70;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F1 key (112).\r\n\t */\r\n\tpublic static F1:number /*uint*/ = 112;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F10 key (121).\r\n\t */\r\n\tpublic static F10:number /*uint*/ = 121;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F11 key (122).\r\n\t */\r\n\tpublic static F11:number /*uint*/ = 122;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F12 key (123).\r\n\t */\r\n\tpublic static F12:number /*uint*/ = 123;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F13 key (124).\r\n\t */\r\n\tpublic static F13:number /*uint*/ = 124;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F14 key (125).\r\n\t */\r\n\tpublic static F14:number /*uint*/ = 125;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F15 key (126).\r\n\t */\r\n\tpublic static F15:number /*uint*/ = 126;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F2 key (113).\r\n\t */\r\n\tpublic static F2:number /*uint*/ = 113;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F3 key (114).\r\n\t */\r\n\tpublic static F3:number /*uint*/ = 114;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F4 key (115).\r\n\t */\r\n\tpublic static F4:number /*uint*/ = 115;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F5 key (116).\r\n\t */\r\n\tpublic static F5:number /*uint*/ = 116;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F6 key (117).\r\n\t */\r\n\tpublic static F6:number /*uint*/ = 117;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F7 key (118).\r\n\t */\r\n\tpublic static F7:number /*uint*/ = 118;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F8 key (119).\r\n\t */\r\n\tpublic static F8:number /*uint*/ = 119;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F9 key (120).\r\n\t */\r\n\tpublic static F9:number /*uint*/ = 120;\r\n\r\n\t/**\r\n\t * Engage fast-forward transport mode\r\n\t */\r\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the G key (71).\r\n\t */\r\n\tpublic static G:number /*uint*/ = 71;\r\n\r\n\t/**\r\n\t * Green function key button\r\n\t */\r\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\r\n\r\n\t/**\r\n\t * Engage program guide\r\n\t */\r\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the H key (72).\r\n\t */\r\n\tpublic static H:number /*uint*/ = 72;\r\n\r\n\t/**\r\n\t * Engage help application or context-sensitive help\r\n\t */\r\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Home key (36).\r\n\t */\r\n\tpublic static HOME:number /*uint*/ = 36;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the I key (73).\r\n\t */\r\n\tpublic static I:number /*uint*/ = 73;\r\n\r\n\t/**\r\n\t * Info button\r\n\t */\r\n\tpublic static INFO:number /*uint*/ = 0x01000013;\r\n\r\n\t/**\r\n\t * Cycle input\r\n\t */\r\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Insert key (45).\r\n\t */\r\n\tpublic static INSERT:number /*uint*/ = 45;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the J key (74).\r\n\t */\r\n\tpublic static J:number /*uint*/ = 74;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the K key (75).\r\n\t */\r\n\tpublic static K:number /*uint*/ = 75;\r\n\r\n\t/**\r\n\t * The Begin key\r\n\t */\r\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\r\n\r\n\t/**\r\n\t * The Break key\r\n\t */\r\n\tpublic static KEYNAME_BREAK:string = \"Break\";\r\n\r\n\t/**\r\n\t * The Clear Display key\r\n\t */\r\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\r\n\r\n\t/**\r\n\t * The Clear Line key\r\n\t */\r\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\r\n\r\n\t/**\r\n\t * The Delete key\r\n\t */\r\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\r\n\r\n\t/**\r\n\t * The Delete Character key\r\n\t */\r\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\r\n\r\n\t/**\r\n\t * The Delete Line key\r\n\t */\r\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\r\n\r\n\t/**\r\n\t * The down arrow\r\n\t */\r\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\r\n\r\n\t/**\r\n\t * The End key\r\n\t */\r\n\tpublic static KEYNAME_END:string = \"End\";\r\n\r\n\t/**\r\n\t * The Execute key\r\n\t */\r\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\r\n\r\n\t/**\r\n\t * The F1 key\r\n\t */\r\n\tpublic static KEYNAME_F1:string = \"F1\";\r\n\r\n\t/**\r\n\t * The F10 key\r\n\t */\r\n\tpublic static KEYNAME_F10:string = \"F10\";\r\n\r\n\t/**\r\n\t * The F11 key\r\n\t */\r\n\tpublic static KEYNAME_F11:string = \"F11\";\r\n\r\n\t/**\r\n\t * The F12 key\r\n\t */\r\n\tpublic static KEYNAME_F12:string = \"F12\";\r\n\r\n\t/**\r\n\t * The F13 key\r\n\t */\r\n\tpublic static KEYNAME_F13:string = \"F13\";\r\n\r\n\t/**\r\n\t * The F14 key\r\n\t */\r\n\tpublic static KEYNAME_F14:string = \"F14\";\r\n\r\n\t/**\r\n\t * The F15 key\r\n\t */\r\n\tpublic static KEYNAME_F15:string = \"F15\";\r\n\r\n\t/**\r\n\t * The F16 key\r\n\t */\r\n\tpublic static KEYNAME_F16:string = \"F16\";\r\n\r\n\t/**\r\n\t * The F17 key\r\n\t */\r\n\tpublic static KEYNAME_F17:string = \"F17\";\r\n\r\n\t/**\r\n\t * The F18 key\r\n\t */\r\n\tpublic static KEYNAME_F18:string = \"F18\";\r\n\r\n\t/**\r\n\t * The F19 key\r\n\t */\r\n\tpublic static KEYNAME_F19:string = \"F19\";\r\n\r\n\t/**\r\n\t * The F2 key\r\n\t */\r\n\tpublic static KEYNAME_F2:string = \"F2\";\r\n\r\n\t/**\r\n\t * The F20 key\r\n\t */\r\n\tpublic static KEYNAME_F20:string = \"F20\";\r\n\r\n\t/**\r\n\t * The F21 key\r\n\t */\r\n\tpublic static KEYNAME_F21:string = \"F21\";\r\n\r\n\t/**\r\n\t * The F22 key\r\n\t */\r\n\tpublic static KEYNAME_F22:string = \"F22\";\r\n\r\n\t/**\r\n\t * The F23 key\r\n\t */\r\n\tpublic static KEYNAME_F23:string = \"F23\";\r\n\r\n\t/**\r\n\t * The F24 key\r\n\t */\r\n\tpublic static KEYNAME_F24:string = \"F24\";\r\n\r\n\t/**\r\n\t * The F25 key\r\n\t */\r\n\tpublic static KEYNAME_F25:string = \"F25\";\r\n\r\n\t/**\r\n\t * The F26 key\r\n\t */\r\n\tpublic static KEYNAME_F26:string = \"F26\";\r\n\r\n\t/**\r\n\t * The F27 key\r\n\t */\r\n\tpublic static KEYNAME_F27:string = \"F27\";\r\n\r\n\t/**\r\n\t * The F28 key\r\n\t */\r\n\tpublic static KEYNAME_F28:string = \"F28\";\r\n\r\n\t/**\r\n\t * The F29 key\r\n\t */\r\n\tpublic static KEYNAME_F29:string = \"F29\";\r\n\r\n\t/**\r\n\t * The F3 key\r\n\t */\r\n\tpublic static KEYNAME_F3:string = \"F3\";\r\n\r\n\t/**\r\n\t * The F30 key\r\n\t */\r\n\tpublic static KEYNAME_F30:string = \"F30\";\r\n\r\n\t/**\r\n\t * The F31 key\r\n\t */\r\n\tpublic static KEYNAME_F31:string = \"F31\";\r\n\r\n\t/**\r\n\t * The F32 key\r\n\t */\r\n\tpublic static KEYNAME_F32:string = \"F32\";\r\n\r\n\t/**\r\n\t * The F33 key\r\n\t */\r\n\tpublic static KEYNAME_F33:string = \"F33\";\r\n\r\n\t/**\r\n\t * The F34 key\r\n\t */\r\n\tpublic static KEYNAME_F34:string = \"F34\";\r\n\r\n\t/**\r\n\t * The F35 key\r\n\t */\r\n\tpublic static KEYNAME_F35:string = \"F35\";\r\n\r\n\t/**\r\n\t * The F4 key\r\n\t */\r\n\tpublic static KEYNAME_F4:string = \"F4\";\r\n\r\n\t/**\r\n\t * The F5 key\r\n\t */\r\n\tpublic static KEYNAME_F5:string = \"F5\";\r\n\r\n\t/**\r\n\t * The F6 key\r\n\t */\r\n\tpublic static KEYNAME_F6:string = \"F6\";\r\n\r\n\t/**\r\n\t * The F7 key\r\n\t */\r\n\tpublic static KEYNAME_F7:string = \"F7\";\r\n\r\n\t/**\r\n\t * The F8 key\r\n\t */\r\n\tpublic static KEYNAME_F8:string = \"F8\";\r\n\r\n\t/**\r\n\t * The F9 key\r\n\t */\r\n\tpublic static KEYNAME_F9:string = \"F9\";\r\n\r\n\t/**\r\n\t * The Find key\r\n\t */\r\n\tpublic static KEYNAME_FIND:string = \"Find\";\r\n\r\n\t/**\r\n\t * The Help key\r\n\t */\r\n\tpublic static KEYNAME_HELP:string = \"Help\";\r\n\r\n\t/**\r\n\t * The Home key\r\n\t */\r\n\tpublic static KEYNAME_HOME:string = \"Home\";\r\n\r\n\t/**\r\n\t * The Insert key\r\n\t */\r\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\r\n\r\n\t/**\r\n\t * The Insert Character key\r\n\t */\r\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\r\n\r\n\t/**\r\n\t * The Insert Line key\r\n\t */\r\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\r\n\r\n\t/**\r\n\t * The left arrow\r\n\t */\r\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\r\n\r\n\t/**\r\n\t * The Menu key\r\n\t */\r\n\tpublic static KEYNAME_MENU:string = \"Menu\";\r\n\r\n\t/**\r\n\t * The Mode Switch key\r\n\t */\r\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\r\n\r\n\t/**\r\n\t * The Next key\r\n\t */\r\n\tpublic static KEYNAME_NEXT:string = \"Next\";\r\n\r\n\t/**\r\n\t * The Page Down key\r\n\t */\r\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\r\n\r\n\t/**\r\n\t * The Page Up key\r\n\t */\r\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\r\n\r\n\t/**\r\n\t * The Pause key\r\n\t */\r\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\r\n\r\n\t/**\r\n\t * The Previous key\r\n\t */\r\n\tpublic static KEYNAME_PREV:string = \"Prev\";\r\n\r\n\t/**\r\n\t * The PRINT key\r\n\t */\r\n\tpublic static KEYNAME_PRINT:string = \"Print\";\r\n\r\n\t/**\r\n\t * The PRINT Screen\r\n\t */\r\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\r\n\r\n\t/**\r\n\t * The Redo key\r\n\t */\r\n\tpublic static KEYNAME_REDO:string = \"Redo\";\r\n\r\n\t/**\r\n\t * The Reset key\r\n\t */\r\n\tpublic static KEYNAME_RESET:string = \"Reset\";\r\n\r\n\t/**\r\n\t * The right arrow\r\n\t */\r\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\r\n\r\n\t/**\r\n\t * The Scroll Lock key\r\n\t */\r\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\r\n\r\n\t/**\r\n\t * The Select key\r\n\t */\r\n\tpublic static KEYNAME_SELECT:string = \"Select\";\r\n\r\n\t/**\r\n\t * The Stop key\r\n\t */\r\n\tpublic static KEYNAME_STOP:string = \"Stop\";\r\n\r\n\t/**\r\n\t * The System Request key\r\n\t */\r\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\r\n\r\n\t/**\r\n\t * The System key\r\n\t */\r\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\r\n\r\n\t/**\r\n\t * The Undo key\r\n\t */\r\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\r\n\r\n\t/**\r\n\t * The up arrow\r\n\t */\r\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\r\n\r\n\t/**\r\n\t * The User key\r\n\t */\r\n\tpublic static KEYNAME_USER:string = \"User\";\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the L key (76).\r\n\t */\r\n\tpublic static L:number /*uint*/ = 76;\r\n\r\n\t/**\r\n\t * Watch last channel or show watched\r\n\t */\r\n\tpublic static LAST:number /*uint*/ = 0x01000011;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Left Arrow key (37).\r\n\t */\r\n\tpublic static LEFT:number /*uint*/ = 37;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the [ key (219).\r\n\t */\r\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\r\n\r\n\t/**\r\n\t * Return to live [position in broadcast]\r\n\t */\r\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the M key (77).\r\n\t */\r\n\tpublic static M:number /*uint*/ = 77;\r\n\r\n\t/**\r\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\r\n\t */\r\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\r\n\r\n\t/**\r\n\t * Engage menu\r\n\t */\r\n\tpublic static MENU:number /*uint*/ = 0x01000012;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the - key (189).\r\n\t */\r\n\tpublic static MINUS:number /*uint*/ = 189;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the N key (78).\r\n\t */\r\n\tpublic static N:number /*uint*/ = 78;\r\n\r\n\t/**\r\n\t * Skip to next track or chapter\r\n\t */\r\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 0 key (48).\r\n\t */\r\n\tpublic static NUMBER_0:number /*uint*/ = 48;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 1 key (49).\r\n\t */\r\n\tpublic static NUMBER_1:number /*uint*/ = 49;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 2 key (50).\r\n\t */\r\n\tpublic static NUMBER_2:number /*uint*/ = 50;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 3 key (51).\r\n\t */\r\n\tpublic static NUMBER_3:number /*uint*/ = 51;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 4 key (52).\r\n\t */\r\n\tpublic static NUMBER_4:number /*uint*/ = 52;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 5 key (53).\r\n\t */\r\n\tpublic static NUMBER_5:number /*uint*/ = 53;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 6 key (54).\r\n\t */\r\n\tpublic static NUMBER_6:number /*uint*/ = 54;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 7 key (55).\r\n\t */\r\n\tpublic static NUMBER_7:number /*uint*/ = 55;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 8 key (56).\r\n\t */\r\n\tpublic static NUMBER_8:number /*uint*/ = 56;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 9 key (57).\r\n\t */\r\n\tpublic static NUMBER_9:number /*uint*/ = 57;\r\n\r\n\t/**\r\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\r\n\t */\r\n\tpublic static NUMPAD:number /*uint*/ = 21;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\r\n\t */\r\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\r\n\t */\r\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\r\n\t */\r\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\r\n\t */\r\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\r\n\t */\r\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\r\n\t */\r\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\r\n\t */\r\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\r\n\t */\r\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\r\n\t */\r\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\r\n\t */\r\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the addition key on the number pad (107).\r\n\t */\r\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\r\n\t */\r\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the division key on the number pad (111).\r\n\t */\r\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\r\n\t */\r\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\r\n\t */\r\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\r\n\t */\r\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the O key (79).\r\n\t */\r\n\tpublic static O:number /*uint*/ = 79;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the P key (80).\r\n\t */\r\n\tpublic static P:number /*uint*/ = 80;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Page Down key (34).\r\n\t */\r\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Page Up key (33).\r\n\t */\r\n\tpublic static PAGE_UP:number /*uint*/ = 33;\r\n\r\n\t/**\r\n\t * Engage pause transport mode\r\n\t */\r\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the . key (190).\r\n\t */\r\n\tpublic static PERIOD:number /*uint*/ = 190;\r\n\r\n\t/**\r\n\t * Engage play transport mode\r\n\t */\r\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\r\n\r\n\t/**\r\n\t * Skip to previous track or chapter\r\n\t */\r\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Q key (81).\r\n\t */\r\n\tpublic static Q:number /*uint*/ = 81;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ' key (222).\r\n\t */\r\n\tpublic static QUOTE:number /*uint*/ = 222;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the R key (82).\r\n\t */\r\n\tpublic static R:number /*uint*/ = 82;\r\n\r\n\t/**\r\n\t * Record item or engage record transport mode\r\n\t */\r\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\r\n\r\n\t/**\r\n\t * Red function key button\r\n\t */\r\n\tpublic static RED:number /*uint*/ = 0x01000000;\r\n\r\n\t/**\r\n\t * Engage rewind transport mode\r\n\t */\r\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Right Arrow key (39).\r\n\t */\r\n\tpublic static RIGHT:number /*uint*/ = 39;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ] key (221).\r\n\t */\r\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the S key (83).\r\n\t */\r\n\tpublic static S:number /*uint*/ = 83;\r\n\r\n\t/**\r\n\t * Search button\r\n\t */\r\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ; key (186).\r\n\t */\r\n\tpublic static SEMICOLON:number /*uint*/ = 186;\r\n\r\n\t/**\r\n\t * Engage setup application or menu\r\n\t */\r\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Shift key (16).\r\n\t */\r\n\tpublic static SHIFT:number /*uint*/ = 16;\r\n\r\n\t/**\r\n\t * Quick skip backward (usually 7-10 seconds)\r\n\t */\r\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\r\n\r\n\t/**\r\n\t * Quick skip ahead (usually 30 seconds)\r\n\t */\r\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the / key (191).\r\n\t */\r\n\tpublic static SLASH:number /*uint*/ = 191;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Spacebar (32).\r\n\t */\r\n\tpublic static SPACE:number /*uint*/ = 32;\r\n\r\n\t/**\r\n\t * Engage stop transport mode\r\n\t */\r\n\tpublic static STOP:number /*uint*/ = 0x01000009;\r\n\r\n\t/**\r\n\t * Toggle subtitles\r\n\t */\r\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the T key (84).\r\n\t */\r\n\tpublic static T:number /*uint*/ = 84;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Tab key (9).\r\n\t */\r\n\tpublic static TAB:number /*uint*/ = 9;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the U key (85).\r\n\t */\r\n\tpublic static U:number /*uint*/ = 85;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Up Arrow key (38).\r\n\t */\r\n\tpublic static UP:number /*uint*/ = 38;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the V key (86).\r\n\t */\r\n\tpublic static V:number /*uint*/ = 86;\r\n\r\n\t/**\r\n\t * Engage video-on-demand\r\n\t */\r\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the W key (87).\r\n\t */\r\n\tpublic static W:number /*uint*/ = 87;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the X key (88).\r\n\t */\r\n\tpublic static X:number /*uint*/ = 88;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Y key (89).\r\n\t */\r\n\tpublic static Y:number /*uint*/ = 89;\r\n\r\n\t/**\r\n\t * Yellow function key button\r\n\t */\r\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Z key (90).\r\n\t */\r\n\tpublic static Z:number /*uint*/ = 90;\r\n\r\n}\r\n\r\nexport = Keyboard;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\n\r\nclass BitmapImageUtils\r\n{\r\n\tpublic static _fillRect(context:CanvasRenderingContext2D, rect:Rectangle, color:number, transparent:boolean)\r\n\t{\r\n\t\tif (color == 0x0 && transparent) {\r\n\t\t\tcontext.clearRect(rect.x, rect.y, rect.width, rect.height);\r\n\t\t} else {\r\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\t\tif (transparent)\r\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\r\n\t\t\telse\r\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\r\n\r\n\t\t\tcontext.fillRect(rect.x, rect.y, rect.width, rect.height);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static _copyPixels(context:CanvasRenderingContext2D, bmpd:HTMLElement, sourceRect:Rectangle, destRect:Rectangle)\r\n\t{\r\n\t\tcontext.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\r\n\t}\r\n\r\n\tpublic static _draw(context:CanvasRenderingContext2D, source:HTMLElement, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean)\r\n\t{\r\n\t\tcontext.save();\r\n\r\n\t\tif (matrix != null)\r\n\t\t\tcontext.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\r\n\r\n\t\tif (clipRect != null)\r\n\t\t\tcontext.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\r\n\t\telse\r\n\t\t\tcontext.drawImage(source, 0, 0);\r\n\r\n\t\tcontext.restore();\r\n\t}\r\n}\r\n\r\nexport = BitmapImageUtils;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nclass ByteArrayBase\r\n{\r\n\tpublic position:number = 0;\r\n\tpublic length:number = 0;\r\n\tpublic _mode:string = \"\";\r\n\r\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\tpublic writeByte(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readByte():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedByte():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedShort():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedInt():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeFloat(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic toFloatBits(x:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readFloat(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic fromFloatBits(x:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic getBytesAvailable():number\r\n\t{\r\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\r\n\t}\r\n\r\n\tpublic compareEqual(other, count)\r\n\t{\r\n\t\tif (count == undefined || count > this.length - this.position)\r\n\t\t\tcount = this.length - this.position;\r\n\t\tif (count > other.length - other.position)\r\n\t\t\tcount = other.length - other.position;\r\n\t\tvar co0 = count;\r\n\t\tvar r = true;\r\n\t\twhile (r && count >= 4) {\r\n\t\t\tcount -= 4;\r\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\r\n\t\t}\r\n\t\twhile (r && count >= 1) {\r\n\t\t\tcount--;\r\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\r\n\t\t}\r\n\t\tvar c0;\r\n\t\tthis.position -= (c0 - count);\r\n\t\tother.position -= (c0 - count);\r\n\t\treturn r;\r\n\t}\r\n\r\n\tpublic writeBase64String(s:string)\r\n\t{\r\n\t\tfor (var i:number = 0; i < s.length; i++) {\r\n\t\t\tvar v = s.charAt(i);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic dumpToConsole()\r\n\t{\r\n\t\tvar oldpos = this.position;\r\n\t\tthis.position = 0;\r\n\t\tvar nstep:number = 8;\r\n\r\n\t\tfunction asHexString(x, digits)\r\n\t\t{\r\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\r\n\t\t\tvar sh:string = \"\";\r\n\t\t\tfor (var d:number = 0; d < digits; d++) {\r\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\r\n\t\t\t}\r\n\t\t\treturn sh;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < this.length; i += nstep) {\r\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\r\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\r\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\r\n\t\t\t}\r\n\t\t\tconsole.log(s);\r\n\t\t}\r\n\t\tthis.position = oldpos;\r\n\t}\r\n\r\n\tpublic readBase64String(count:number)\r\n\t{\r\n\t\tif (count == undefined || count > this.length - this.position)\r\n\t\t\tcount = this.length - this.position;\r\n\t\tif (!(count > 0)) return \"\";\r\n\r\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\r\n\t}\r\n\r\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self)\r\n\t{ // return base64 string of the next count bytes\r\n\t\tvar r = \"\";\r\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\r\n\t\tvar base64Key = ByteArrayBase.Base64Key;\r\n\t\twhile (count >= 3) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\r\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\r\n\t\t\tenc4 = b2 & 63;\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\r\n\t\t\tcount -= 3;\r\n\t\t}\r\n\t\t// pad\r\n\t\tif (count == 2) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\r\n\t\t\tenc3 = ((b1 & 15) << 2);\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\r\n\t\t} else if (count == 1) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4);\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\r\n\t\t}\r\n\t\treturn r;\r\n\t}\r\n}\r\n\r\nexport = ByteArrayBase;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\r\n\r\nclass ByteArrayBuffer extends ByteArrayBase\r\n{\r\n\r\n\t/*\r\n\t public maxlength:number = 0;\r\n\t public arraybytes; //ArrayBuffer\r\n\t public unalignedarraybytestemp; //ArrayBuffer\r\n\t */\r\n\r\n\tpublic _bytes:number[];\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._bytes = [];\r\n\t\tthis._mode = \"Array\";\r\n\t}\r\n\r\n\tpublic writeByte(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readByte():number\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\treturn this._bytes[ this.position++ ];\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[this.position++] = bi & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedByte():number\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\treturn this._bytes[ this.position++ ];\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedShort():number\r\n\t{\r\n\t\tif (this.position + 2 > this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\r\n\t\tthis.position += 2;\r\n\t\treturn r;\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedInt():number\r\n\t{\r\n\t\tif (this.position + 4 > this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\r\n\t\tthis.position += 4;\r\n\t\treturn r >>> 0;\r\n\t}\r\n\r\n\tpublic writeFloat(b:number)\r\n\t{\r\n\t\t// this is crazy slow and silly, but as a fallback...\r\n\r\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\r\n\t}\r\n\r\n\tpublic toFloatBits(x:number)\r\n\t{\r\n\t\t// don't handle inf/nan yet\r\n\t\t// special case zero\r\n\t\tif (x == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// remove the sign, after this we only deal with positive numbers\r\n\t\tvar sign:number = 0;\r\n\t\tif (x < 0) {\r\n\t\t\tx = -x;\r\n\t\t\tsign = 1;\r\n\t\t} else {\r\n\t\t\tsign = 0;\r\n\t\t}\r\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\r\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\r\n\t\texponent = Math.floor(exponent);\r\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\r\n\t\tvar mantissa = Math.floor(x) - 0x800000;\r\n\t\texponent = exponent + 127;\r\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\r\n\t}\r\n\r\n\tpublic readFloat(b:number)\r\n\t{\r\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\r\n\t}\r\n\r\n\tpublic fromFloatBits(x:number)\r\n\t{\r\n\t\tif (x == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\r\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\r\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\r\n\t\tif (x >>> 31 != 0) {\r\n\t\t\ty = -y;\r\n\t\t}\r\n\t\treturn y;\r\n\t}\r\n\r\n\t/*\r\n\t public ensureWriteableSpace( n:number )\r\n\t {\r\n\t this.ensureSpace( n + this.position );\r\n\t }\r\n\r\n\t private ensureSpace( n:number )\r\n\t {\r\n\t if ( n > this.maxlength ) {\r\n\t var newmaxlength:number = (n+255)&(~255);\r\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\r\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\r\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\r\n\t newview.set(view);      // memcpy\r\n\t this.arraybytes = newarraybuffer;\r\n\t this.maxlength = newmaxlength;\r\n\t }\r\n\t }\r\n\t */\r\n}\r\n\r\nexport = ByteArrayBuffer;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\r\n\r\nclass ByteArray extends ByteArrayBase\r\n{\r\n\tpublic maxlength:number = 0;\r\n\tpublic arraybytes; //ArrayBuffer\r\n\tpublic unalignedarraybytestemp; //ArrayBuffer\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._mode = \"Typed array\";\r\n\t\tthis.maxlength = 4;\r\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\r\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\r\n\t}\r\n\r\n\tpublic ensureWriteableSpace(n:number)\r\n\t{\r\n\t\tthis.ensureSpace(n + this.position);\r\n\t}\r\n\r\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\r\n\t{\r\n\r\n\t\tthis.ensureSpace(aBuffer.byteLength);\r\n\r\n\t\tthis.length = aBuffer.byteLength;\r\n\r\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\r\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\r\n\r\n\t\tlocalInt8View.set(inInt8AView);\r\n\r\n\t\tthis.position = 0;\r\n\r\n\t}\r\n\r\n\tpublic getBytesAvailable():number\r\n\t{\r\n\t\treturn ( this.length ) - ( this.position );\r\n\t}\r\n\r\n\tpublic ensureSpace(n:number)\r\n\t{\r\n\t\tif (n > this.maxlength) {\r\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\r\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\r\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\r\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\r\n\t\t\tnewview.set(view);      // memcpy\r\n\t\t\tthis.arraybytes = newarraybuffer;\r\n\t\t\tthis.maxlength = newmaxlength;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeByte(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(1);\r\n\t\tvar view = new Int8Array(this.arraybytes);\r\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readByte()\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar view = new Int8Array(this.arraybytes);\r\n\r\n\t\treturn view[ this.position++ ];\r\n\t}\r\n\r\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0)\r\n\t{\r\n\r\n\t\tif (length == null) {\r\n\t\t\tlength = bytes.length;\r\n\t\t}\r\n\r\n\t\tbytes.ensureWriteableSpace(offset + length);\r\n\r\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\r\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\r\n\r\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\r\n\r\n\t\tthis.position += length;\r\n\r\n\t\tif (length + offset > bytes.length) {\r\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(1);\r\n\t\tvar view = new Uint8Array(this.arraybytes);\r\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedByte()\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar view = new Uint8Array(this.arraybytes);\r\n\t\treturn view[this.position++];\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(2);\r\n\t\tif (( this.position & 1 ) == 0) {\r\n\t\t\tvar view = new Uint16Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\r\n\t\t} else {\r\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = (~~b) & 0xffff;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\t\tthis.position += 2;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUTFBytes(len:number):string\r\n\t{\r\n\r\n\t\tvar value:string = \"\";\r\n\t\tvar max:number = this.position + len;\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\r\n\t\t// utf8-encode\r\n\t\twhile (this.position < max) {\r\n\r\n\t\t\tvar c:number = data.getUint8(this.position++);\r\n\r\n\t\t\tif (c < 0x80) {\r\n\r\n\t\t\t\tif (c == 0) break;\r\n\t\t\t\tvalue += String.fromCharCode(c);\r\n\r\n\t\t\t} else if (c < 0xE0) {\r\n\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t} else if (c < 0xF0) {\r\n\r\n\t\t\t\tvar c2 = data.getUint8(this.position++);\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar c2 = data.getUint8(this.position++);\r\n\t\t\t\tvar c3 = data.getUint8(this.position++);\r\n\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tpublic readInt():number\r\n\t{\r\n\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar int:number = data.getInt32(this.position, true);\r\n\r\n\t\tthis.position += 4;\r\n\r\n\t\treturn int;\r\n\r\n\t}\r\n\r\n\tpublic readShort():number\r\n\t{\r\n\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar short:number = data.getInt16(this.position, true);\r\n\r\n\t\tthis.position += 2;\r\n\t\treturn short;\r\n\r\n\t}\r\n\r\n\tpublic readDouble():number\r\n\t{\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar double:number = data.getFloat64(this.position, true);\r\n\r\n\t\tthis.position += 8;\r\n\t\treturn double;\r\n\r\n\t}\r\n\r\n\tpublic readUnsignedShort()\r\n\t{\r\n\t\tif (this.position > this.length + 2) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tif (( this.position & 1 ) == 0) {\r\n\t\t\tvar view = new Uint16Array(this.arraybytes);\r\n\t\t\tvar pa:number = this.position >> 1;\r\n\t\t\tthis.position += 2;\r\n\t\t\treturn view[ pa ];\r\n\t\t} else {\r\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 2;\r\n\t\t\treturn view[0];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(4);\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Uint32Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\r\n\t\t} else {\r\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = (~~b) & 0xffffffff;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\t\tthis.position += 4;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedInt()\r\n\t{\r\n\r\n\t\tif (this.position > this.length + 4) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Uint32Array(this.arraybytes);\r\n\t\t\tvar pa:number = this.position >> 2;\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[ pa ];\r\n\t\t} else {\r\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[0];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeFloat(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(4);\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Float32Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 2 ] = b;\r\n\t\t} else {\r\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = b;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\t\tthis.position += 4;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readFloat()\r\n\t{\r\n\t\tif (this.position > this.length + 4) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tif ((this.position & 3) == 0) {\r\n\t\t\tvar view = new Float32Array(this.arraybytes);\r\n\t\t\tvar pa = this.position >> 2;\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[pa];\r\n\t\t} else {\r\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[ 0 ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ByteArray;",
    "class CSS\r\n{\r\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number)\r\n\t{\r\n\t\telement.style.width = width + \"px\";\r\n\t\telement.style.height = height + \"px\";\r\n\t\telement[\"width\"] = width;\r\n\t\telement[\"height\"] = height;\r\n\t}\r\n\r\n\tpublic static setElementWidth(element:HTMLElement, width:number)\r\n\t{\r\n\t\telement.style.width = width + \"px\";\r\n\t\telement[\"width\"] = width;\r\n\t}\r\n\r\n\tpublic static setElementHeight(element:HTMLElement, height:number)\r\n\t{\r\n\t\telement.style.height = height + \"px\";\r\n\t\telement[\"height\"] = height;\r\n\t}\r\n\r\n\tpublic static setElementX(element:HTMLElement, x:number)\r\n\t{\r\n\t\telement.style.position = 'absolute';\r\n\t\telement.style.left = x + \"px\";\r\n\t}\r\n\r\n\tpublic static setElementY(element:HTMLElement, y:number)\r\n\t{\r\n\t\telement.style.position = 'absolute';\r\n\t\telement.style.top = y + \"px\";\r\n\t}\r\n\r\n\tpublic static getElementVisibility(element:HTMLElement):boolean\r\n\t{\r\n\t\treturn element.style.visibility == 'visible';\r\n\t}\r\n\r\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean)\r\n\t{\r\n\t\tif (visible) {\r\n\t\t\telement.style.visibility = 'visible';\r\n\t\t} else {\r\n\t\t\telement.style.visibility = 'hidden';\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number)\r\n\t{\r\n\t\tif (element instanceof HTMLCanvasElement) {\r\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\r\n\t\t\tcontext.globalAlpha = alpha;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false)\r\n\t{\r\n\t\tif (absolute) {\r\n\t\t\telement.style.position = \"absolute\";\r\n\t\t} else {\r\n\t\t\telement.style.position = \"relative\";\r\n\t\t}\r\n\r\n\t\telement.style.left = x + \"px\";\r\n\t\telement.style.top = y + \"px\";\r\n\t}\r\n}\r\n\r\nexport = CSS;",
    "/**\r\n *\r\n */\r\nclass ColorUtils\r\n{\r\n\tpublic static float32ColorToARGB(float32Color:number):number[]\r\n\t{\r\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24\r\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\r\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\r\n\t\tvar b:number = float32Color & 0xff;\r\n\t\tvar result:number[] = [ a, r , g , b ];\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprivate static componentToHex(c:number):string\r\n\t{\r\n\t\tvar hex = c.toString(16);\r\n\t\treturn hex.length == 1? \"0\" + hex : hex;\r\n\t}\r\n\r\n\tpublic static RGBToHexString(argb:number[]):string\r\n\t{\r\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\r\n\t}\r\n\r\n\tpublic static ARGBToHexString(argb:number[]):string\r\n\t{\r\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\r\n\t}\r\n}\r\n\r\nexport = ColorUtils;",
    "import PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\n\r\n/**\r\n *\r\n */\r\nclass Debug\r\n{\r\n\tpublic static THROW_ERRORS:boolean = true;\r\n\tpublic static ENABLE_LOG:boolean = true;\r\n\tpublic static LOG_PI_ERRORS:boolean = true;\r\n\r\n\tprivate static keyword:string = null;\r\n\r\n\tpublic static breakpoint():void\r\n\t{\r\n\t\tDebug['break']();\r\n\t}\r\n\r\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true)\r\n\t{\r\n\t\tif (!enable)\r\n\t\t\tDebug.keyword = null;\r\n\t\telse\r\n\t\t\tDebug.keyword = str;\r\n\t}\r\n\r\n\tpublic static throwPIR(clss:string, fnc:string, msg:string)\r\n\t{\r\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\r\n\r\n\t\tif (Debug.THROW_ERRORS) {\r\n\t\t\tif (Debug.keyword) {\r\n\t\t\t\tvar e:string = clss + fnc + msg;\r\n\r\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static logPIR(clss:string, fnc:string, msg:string = '')\r\n\t{\r\n\t\tif (Debug.LOG_PI_ERRORS)\r\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\r\n\t}\r\n\r\n\tpublic static log(...args:any[])\r\n\t{\r\n\t\tif (Debug.ENABLE_LOG)\r\n\t\t\tconsole.log(args);\r\n\t}\r\n}\r\n\r\nexport = Debug;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nclass ImageUtils\r\n{\r\n\tprivate static MAX_SIZE:number = 2048;\r\n\r\n\tpublic static isImage2DValid(image2D:Image2D):boolean\r\n\t{\r\n\t\tif (image2D == null)\r\n\t\t\treturn true;\r\n\r\n\t\treturn ImageUtils.isDimensionValid(image2D.width) && ImageUtils.isDimensionValid(image2D.height);\r\n\t}\r\n\r\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\r\n\t{\r\n\t\tif (image == null)\r\n\t\t\treturn true;\r\n\r\n\t\treturn ImageUtils.isDimensionValid(image.width) && ImageUtils.isDimensionValid(image.height);\r\n\t}\r\n\r\n\tpublic static isDimensionValid(d:number):boolean\r\n\t{\r\n\t\treturn d >= 1 && d <= ImageUtils.MAX_SIZE && ImageUtils.isPowerOfTwo(d);\r\n\t}\r\n\r\n\tpublic static isPowerOfTwo(value:number):boolean\r\n\t{\r\n\t\treturn value? ((value & -value) == value) : false;\r\n\t}\r\n\r\n\tpublic static getBestPowerOf2(value:number):number\r\n\t{\r\n\t\tvar p:number = 1;\r\n\r\n\t\twhile (p < value)\r\n\t\t\tp <<= 1;\r\n\r\n\t\tif (p > ImageUtils.MAX_SIZE)\r\n\t\t\tp = ImageUtils.MAX_SIZE;\r\n\r\n\t\treturn p;\r\n\t}\r\n}\r\n\r\nexport = ImageUtils",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\n\r\nclass MipmapGenerator\r\n{\r\n\tprivate static _mipMaps = [];\r\n\tprivate static _mipMapUses = [];\r\n\r\n\tprivate static _matrix:Matrix = new Matrix();\r\n\tprivate static _rect:Rectangle = new Rectangle();\r\n\tprivate static _source:BitmapImage2D;\r\n\r\n\t/**\r\n\t * Uploads a BitmapImage2D with mip maps to a target Texture object.\r\n\t * @param source The source to upload.\r\n\t * @param target The target Texture to upload to.\r\n\t * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\r\n\t * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\r\n\t */\r\n\tpublic static _generateMipMaps(source:HTMLElement, output?:Array<BitmapImage2D>, alpha?:boolean);\r\n\tpublic static _generateMipMaps(source:BitmapImage2D, output?:Array<BitmapImage2D>, alpha?:boolean);\r\n\tpublic static _generateMipMaps(source:any, output?:Array<BitmapImage2D>, alpha:boolean = false)\r\n\t{\r\n\t\tvar w:number = source.width;\r\n\t\tvar h:number = source.height;\r\n\t\tvar i:number = 0;\r\n\r\n\t\tvar mipmap:BitmapImage2D;\r\n\r\n\t\tMipmapGenerator._rect.width = w;\r\n\t\tMipmapGenerator._rect.height = h;\r\n\r\n\t\t//use (OR) to create non-square texture mipmaps\r\n\t\twhile (w >= 1 || h >= 1) {\r\n\r\n\t\t\tmipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\r\n\r\n\t\t\tif (alpha)\r\n\t\t\t\tmipmap.fillRect(MipmapGenerator._rect, 0);\r\n\r\n\t\t\tMipmapGenerator._matrix.a = MipmapGenerator._rect.width/source.width;\r\n\t\t\tMipmapGenerator._matrix.d = MipmapGenerator._rect.height/source.height;\r\n\r\n\t\t\tmipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\r\n\r\n\t\t\tw >>= 1;\r\n\t\t\th >>= 1;\r\n\r\n\t\t\tMipmapGenerator._rect.width = w > 1? w : 1;\r\n\t\t\tMipmapGenerator._rect.height = h > 1? h : 1;\r\n\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _getMipmapHolder(mipMapHolder:BitmapImage2D, newW:number, newH:number):BitmapImage2D\r\n\t{\r\n\t\tif (mipMapHolder) {\r\n\t\t\tif (mipMapHolder.width == newW && mipMapHolder.height == newH)\r\n\t\t\t\treturn mipMapHolder;\r\n\r\n\t\t\tMipmapGenerator._freeMipMapHolder(mipMapHolder);\r\n\t\t}\r\n\r\n\t\tif (!MipmapGenerator._mipMaps[newW]) {\r\n\t\t\tMipmapGenerator._mipMaps[newW] = [];\r\n\t\t\tMipmapGenerator._mipMapUses[newW] = [];\r\n\t\t}\r\n\r\n\t\tif (!MipmapGenerator._mipMaps[newW][newH]) {\r\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapImage2D(newW, newH, true);\r\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = 1;\r\n\t\t} else {\r\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\r\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH];\r\n\t\t}\r\n\r\n\t\treturn mipMapHolder;\r\n\t}\r\n\r\n\tpublic static _freeMipMapHolder(mipMapHolder:BitmapImage2D)\r\n\t{\r\n\t\tvar holderWidth:number = mipMapHolder.width;\r\n\t\tvar holderHeight:number = mipMapHolder.height;\r\n\r\n\t\tif (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\r\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\r\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = MipmapGenerator;",
    "import getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nclass RequestAnimationFrame\r\n{\r\n\tprivate _callback:Function;\r\n\tprivate _callbackContext:Object;\r\n\tprivate _active:boolean = false;\r\n\tprivate _rafUpdateFunction:any;\r\n\tprivate _prevTime:number;\r\n\tprivate _dt:number;\r\n\tprivate _currentTime:number;\r\n\tprivate _argsArray:Array<any> = new Array();\r\n\tprivate _getTimer:Function;\r\n\r\n\tconstructor(callback:Function, callbackContext:Object)\r\n\t{\r\n\t\tthis._getTimer = getTimer;\r\n\r\n\t\tthis.setCallback(callback, callbackContext);\r\n\r\n\t\tthis._rafUpdateFunction = () => {\r\n\t\t\tif (this._active)\r\n\t\t\t\tthis._tick();\r\n\t\t}\r\n\r\n\t\tthis._argsArray.push(this._dt);\r\n\t}\r\n\r\n\t// Public\r\n\r\n\t/**\r\n\t *\r\n\t * @param callback\r\n\t * @param callbackContext\r\n\t */\r\n\tpublic setCallback(callback:Function, callbackContext:Object)\r\n\t{\r\n\t\tthis._callback = callback;\r\n\t\tthis._callbackContext = callbackContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic start()\r\n\t{\r\n\t\tthis._prevTime = this._getTimer();\r\n\t\tthis._active = true;\r\n\r\n\t\tif (window.requestAnimationFrame) {\r\n\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\r\n\t\t} else {\r\n\t\t\tif (window['mozRequestAnimationFrame'])\r\n\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\r\n\t\t\telse if (window['webkitRequestAnimationFrame'])\r\n\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\r\n\t\t\telse if (window['oRequestAnimationFrame'])\r\n\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic stop()\r\n\t{\r\n\t\tthis._active = false;\r\n\t}\r\n\r\n\t// Get / Set\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic get active():boolean\r\n\t{\r\n\t\treturn this._active;\r\n\t}\r\n\r\n\t// Private\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _tick():void\r\n\t{\r\n\t\tthis._currentTime = this._getTimer();\r\n\t\tthis._dt = this._currentTime - this._prevTime;\r\n\t\tthis._argsArray[0] = this._dt;\r\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\r\n\r\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\r\n\r\n\t\tthis._prevTime = this._currentTime;\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = RequestAnimationFrame;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\r\n\r\nclass Timer extends EventDispatcher\r\n{\r\n\tprivate _delay:number;\r\n\tprivate _repeatCount:number = 0;\r\n\tprivate _currentCount:number = 0;\r\n\tprivate _iid:number;\r\n\tprivate _running:boolean = false;\r\n\r\n\tconstructor(delay:number, repeatCount:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._delay = delay;\r\n\t\tthis._repeatCount = repeatCount;\r\n\r\n\t\tif (isNaN(delay) || delay < 0)\r\n\t\t\tthrow new Error(\"Delay is negative or not a number\");\r\n\t}\r\n\r\n\tpublic get currentCount():number\r\n\t{\r\n\t\treturn this._currentCount;\r\n\t}\r\n\r\n\tpublic get delay():number\r\n\t{\r\n\t\treturn this._delay;\r\n\t}\r\n\r\n\tpublic set delay(value:number)\r\n\t{\r\n\t\tthis._delay = value;\r\n\r\n\t\tif (this._running) {\r\n\t\t\tthis.stop();\r\n\t\t\tthis.start();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get repeatCount():number\r\n\t{\r\n\t\treturn this._repeatCount;\r\n\t}\r\n\r\n\tpublic set repeatCount(value:number)\r\n\t{\r\n\t\tthis._repeatCount = value;\r\n\t}\r\n\r\n\tpublic reset():void\r\n\t{\r\n\t\tif (this._running)\r\n\t\t\tthis.stop();\r\n\r\n\t\tthis._currentCount = 0;\r\n\t}\r\n\r\n\tpublic get running():boolean\r\n\t{\r\n\t\treturn this._running;\r\n\t}\r\n\r\n\tpublic start():void\r\n\t{\r\n\t\tthis._running = true;\r\n\t\tclearInterval(this._iid);\r\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\r\n\t}\r\n\r\n\tpublic stop():void\r\n\t{\r\n\t\tthis._running = false;\r\n\t\tclearInterval(this._iid);\r\n\t}\r\n\r\n\tprivate tick():void\r\n\t{\r\n\t\tthis._currentCount++;\r\n\r\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\r\n\r\n\t\t\tthis.stop();\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\r\n\r\n\t\t} else {\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Timer;",
    "class XmlUtils {\r\n\r\n\tpublic static getChildrenWithTag(node:Node, tag:string):NodeList {\r\n\r\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\r\n\r\n\t\tif(node) {\r\n\t\t\tvar num:number = node.childNodes.length;\r\n\t\t\tfor(var i:number = 0; i < num; i++) {\r\n\t\t\t\tvar child:Node = node.childNodes[i];\r\n\t\t\t\tif(child != null) {\r\n\t\t\t\t\tif(child.nodeName == tag) {\r\n\t\t\t\t\t\tfragment.appendChild(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn fragment.childNodes;\r\n\t}\r\n\r\n\tpublic static filterListByParam(nodes:NodeList, paramName:string, paramValue):NodeList {\r\n\r\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\r\n\r\n\t\tif(nodes) {\r\n\t\t\tvar num:number = nodes.length;\r\n\t\t\tfor(var i:number = 0; i < num; i++) {\r\n\t\t\t\tvar child:Node = nodes[i];\r\n\t\t\t\tif(child != null) {\r\n\t\t\t\t\tif(child.attributes.getNamedItem(paramName).value == paramValue) {\r\n\t\t\t\t\t\tfragment.appendChild(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn fragment.childNodes;\r\n\t}\r\n\r\n\tpublic static strToXml(str:string):Node {\r\n\t\tvar parser:DOMParser = new DOMParser();\r\n\t\tvar node:Node = parser.parseFromString(str, \"text/xml\");\r\n\t\treturn node;\r\n\t}\r\n\r\n\tpublic static nodeToString(node:Node):string {\r\n\t\tif(!node) return \"\";\r\n\t\tvar str = (new XMLSerializer()).serializeToString(node);\r\n\t\treturn str;\r\n\t}\r\n\r\n\tpublic static readAttributeValue(node:Node, attrName:string):string {\r\n\t\tvar attrs = node.attributes;\r\n\t\tif(attrs == undefined) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\r\n\t\tif(!attribute) {\r\n\t\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", attribute does not exist.\");\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", value: \" + attribute.value);\r\n\t\treturn attribute.value;\r\n\t}\r\n\r\n\tpublic static writeAttributeValue(node:Node, attrName:string, attrValue:string) {\r\n\t\tvar attribute:Attr = new Attr();\r\n\t\tattribute.name = attrName;\r\n\t\tattribute.value = attrValue;\r\n\t\tattribute = node.attributes.setNamedItem(attribute);\r\n\t\tconsole.log(\"XmlUltils - writeAttributeValue() - name: \" + attribute.name + \", value: \" + attribute.value);\r\n\t}\r\n\r\n\tpublic static hasAttribute(node:Node, attrName:string):boolean {\r\n\t\tvar attrs = node.attributes;\r\n\t\tif(attrs == undefined) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\r\n\t\treturn attribute != null;\r\n\t}\r\n}\r\nexport = XmlUtils;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "/**\r\n *\r\n *\r\n * @returns {number}\r\n */\r\nfunction getTimer():number\r\n{\r\n\t// number milliseconds of 1970/01/01\r\n\t// this different to AS3 implementation which gets the number of milliseconds\r\n\t// since instance of Flash player was initialised\r\n\treturn Date.now();\r\n}\r\n\r\nexport = getTimer;"
  ],
  "sourceRoot": ""
}