{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-core/lib/base/BitmapDataChannel.ts",
    "awayjs-core.js",
    "awayjs-core/lib/base/BitmapData.ts",
    "awayjs-core/lib/base/BlendMode.ts",
    "awayjs-core/lib/errors/AbstractMethodError.ts",
    "awayjs-core/lib/errors/ArgumentError.ts",
    "awayjs-core/lib/errors/DocumentError.ts",
    "awayjs-core/lib/errors/Error.ts",
    "awayjs-core/lib/errors/PartialImplementationError.ts",
    "awayjs-core/lib/errors/RangeError.ts",
    "awayjs-core/lib/events/AssetEvent.ts",
    "awayjs-core/lib/events/EventDispatcher.ts",
    "awayjs-core/lib/events/Event.ts",
    "awayjs-core/lib/events/HTTPStatusEvent.ts",
    "awayjs-core/lib/events/IOErrorEvent.ts",
    "awayjs-core/lib/events/LoaderEvent.ts",
    "awayjs-core/lib/events/ParserEvent.ts",
    "awayjs-core/lib/events/ProgressEvent.ts",
    "awayjs-core/lib/events/ProjectionEvent.ts",
    "awayjs-core/lib/events/TimerEvent.ts",
    "awayjs-core/lib/geom/Box.ts",
    "awayjs-core/lib/geom/ColorTransform.ts",
    "awayjs-core/lib/geom/MathConsts.ts",
    "awayjs-core/lib/geom/Matrix3DUtils.ts",
    "awayjs-core/lib/geom/Matrix3D.ts",
    "awayjs-core/lib/geom/Matrix.ts",
    "awayjs-core/lib/geom/Orientation3D.ts",
    "awayjs-core/lib/geom/PerspectiveProjection.ts",
    "awayjs-core/lib/geom/Plane3D.ts",
    "awayjs-core/lib/geom/PlaneClassification.ts",
    "awayjs-core/lib/geom/Point.ts",
    "awayjs-core/lib/geom/PoissonLookup.ts",
    "awayjs-core/lib/geom/Quaternion.ts",
    "awayjs-core/lib/geom/Rectangle.ts",
    "awayjs-core/lib/geom/Sphere.ts",
    "awayjs-core/lib/geom/UVTransform.ts",
    "awayjs-core/lib/geom/Vector3D.ts",
    "awayjs-core/lib/library/AssetLibraryBundle.ts",
    "awayjs-core/lib/library/AssetLibraryIterator.ts",
    "awayjs-core/lib/library/AssetLibrary.ts",
    "awayjs-core/lib/library/AssetLoaderContext.ts",
    "awayjs-core/lib/library/AssetLoaderToken.ts",
    "awayjs-core/lib/library/AssetLoader.ts",
    "awayjs-core/lib/library/AssetType.ts",
    "awayjs-core/lib/library/ConflictPrecedence.ts",
    "awayjs-core/lib/library/ConflictStrategyBase.ts",
    "awayjs-core/lib/library/ConflictStrategy.ts",
    "awayjs-core/lib/library/ErrorConflictStrategy.ts",
    "awayjs-core/lib/library/IDUtil.ts",
    "awayjs-core/lib/library/IgnoreConflictStrategy.ts",
    "awayjs-core/lib/library/NamedAssetBase.ts",
    "awayjs-core/lib/library/NumSuffixConflictStrategy.ts",
    "awayjs-core/lib/net/CrossDomainPolicy.ts",
    "awayjs-core/lib/net/URLLoaderDataFormat.ts",
    "awayjs-core/lib/net/URLLoader.ts",
    "awayjs-core/lib/net/URLRequestMethod.ts",
    "awayjs-core/lib/net/URLRequest.ts",
    "awayjs-core/lib/net/URLVariables.ts",
    "awayjs-core/lib/parsers/CubeTextureParser.ts",
    "awayjs-core/lib/parsers/ParserBase.ts",
    "awayjs-core/lib/parsers/ParserDataFormat.ts",
    "awayjs-core/lib/parsers/ParserUtils.ts",
    "awayjs-core/lib/parsers/ResourceDependency.ts",
    "awayjs-core/lib/parsers/Texture2DParser.ts",
    "awayjs-core/lib/projections/CoordinateSystem.ts",
    "awayjs-core/lib/projections/FreeMatrixProjection.ts",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection.ts",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection.ts",
    "awayjs-core/lib/projections/OrthographicProjection.ts",
    "awayjs-core/lib/projections/PerspectiveProjection.ts",
    "awayjs-core/lib/projections/ProjectionBase.ts",
    "awayjs-core/lib/textures/BitmapCubeTexture.ts",
    "awayjs-core/lib/textures/BitmapTexture.ts",
    "awayjs-core/lib/textures/CubeTextureBase.ts",
    "awayjs-core/lib/textures/ImageCubeTexture.ts",
    "awayjs-core/lib/textures/ImageTexture.ts",
    "awayjs-core/lib/textures/MipmapGenerator.ts",
    "awayjs-core/lib/textures/RenderTexture.ts",
    "awayjs-core/lib/textures/SpecularBitmapTexture.ts",
    "awayjs-core/lib/textures/Texture2DBase.ts",
    "awayjs-core/lib/textures/TextureProxyBase.ts",
    "awayjs-core/lib/ui/Keyboard.ts",
    "awayjs-core/lib/utils/ByteArrayBase.ts",
    "awayjs-core/lib/utils/ByteArrayBuffer.ts",
    "awayjs-core/lib/utils/ByteArray.ts",
    "awayjs-core/lib/utils/CSS.ts",
    "awayjs-core/lib/utils/ColorUtils.ts",
    "awayjs-core/lib/utils/Debug.ts",
    "awayjs-core/lib/utils/RequestAnimationFrame.ts",
    "awayjs-core/lib/utils/TextureUtils.ts",
    "awayjs-core/lib/utils/Timer.ts",
    "awayjs-core/lib/utils/getTimer.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-core/lib/base/BitmapDataChannel",
    "module",
    "BitmapDataChannel",
    "ALPHA",
    "BLUE",
    "GREEN",
    "RED",
    "awayjs-core/lib/base/BitmapData",
    "Rectangle",
    "ColorUtils",
    "BitmapData",
    "width",
    "height",
    "transparent",
    "fillColor",
    "this",
    "_locked",
    "_transparent",
    "_imageCanvas",
    "document",
    "createElement",
    "_context",
    "getContext",
    "_rect",
    "fillRect",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "set",
    "value",
    "putImageData",
    "_imageData",
    "getImageData",
    "enumerable",
    "configurable",
    "clone",
    "draw",
    "colorTransform",
    "rect",
    "data",
    "j",
    "index",
    "x",
    "y",
    "redMultiplier",
    "redOffset",
    "greenMultiplier",
    "greenOffset",
    "blueMultiplier",
    "blueOffset",
    "alphaMultiplier",
    "alphaOffset",
    "copyChannel",
    "sourceBitmap",
    "sourceRect",
    "destPoint",
    "sourceChannel",
    "destChannel",
    "imageData",
    "sourceData",
    "destData",
    "sourceOffset",
    "Math",
    "round",
    "log",
    "destOffset",
    "sourceIndex",
    "destIndex",
    "copyPixels",
    "bmpd",
    "destRect",
    "_copyPixels",
    "dispose",
    "source",
    "matrix",
    "blendMode",
    "clipRect",
    "smoothing",
    "_draw",
    "color",
    "_fillRect",
    "getPixel",
    "g",
    "b",
    "pixelData",
    "getPixel32",
    "lock",
    "setArray",
    "inputArray",
    "argb",
    "float32ColorToARGB",
    "setPixel",
    "setPixel32",
    "setPixels",
    "inputByteArray",
    "position",
    "readUnsignedInt",
    "unlock",
    "drawImage",
    "canvas",
    "HTMLImageElement",
    "save",
    "setTransform",
    "c",
    "d",
    "tx",
    "ty",
    "restore",
    "HTMLElement",
    "clearRect",
    "fillStyle",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/utils/ColorUtils",
    "awayjs-core/lib/base/BlendMode",
    "BlendMode",
    "ADD",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "NORMAL",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "SUBTRACT",
    "awayjs-core/lib/errors/AbstractMethodError",
    "__extends",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "AbstractMethodError",
    "_super",
    "message",
    "id",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/ArgumentError",
    "ArgumentError",
    "awayjs-core/lib/errors/DocumentError",
    "DocumentError",
    "DOCUMENT_DOES_NOT_EXIST",
    "_name",
    "_errorID",
    "_messsage",
    "name",
    "awayjs-core/lib/errors/PartialImplementationError",
    "PartialImplementationError",
    "dependency",
    "awayjs-core/lib/errors/RangeError",
    "RangeError",
    "awayjs-core/lib/events/AssetEvent",
    "Event",
    "AssetEvent",
    "type",
    "asset",
    "prevName",
    "_asset",
    "_prevName",
    "assetPrevName",
    "ASSET_COMPLETE",
    "ASSET_RENAME",
    "ASSET_CONFLICT_RESOLVED",
    "TEXTURE_SIZE_ERROR",
    "awayjs-core/lib/events/Event",
    "awayjs-core/lib/events/EventDispatcher",
    "EventDispatcher",
    "target",
    "listeners",
    "Array",
    "addEventListener",
    "listener",
    "undefined",
    "getEventListenerIndex",
    "push",
    "removeEventListener",
    "splice",
    "dispatchEvent",
    "event",
    "listenerArray",
    "hasEventListener",
    "COMPLETE",
    "OPEN",
    "ENTER_FRAME",
    "EXIT_FRAME",
    "RESIZE",
    "ERROR",
    "CHANGE",
    "awayjs-core/lib/events/HTTPStatusEvent",
    "HTTPStatusEvent",
    "status",
    "HTTP_STATUS",
    "awayjs-core/lib/events/IEventDispatcher",
    "awayjs-core/lib/events/IOErrorEvent",
    "IOErrorEvent",
    "IO_ERROR",
    "awayjs-core/lib/events/LoaderEvent",
    "LoaderEvent",
    "url",
    "content",
    "assets",
    "_url",
    "_content",
    "_assets",
    "RESOURCE_COMPLETE",
    "awayjs-core/lib/events/ParserEvent",
    "ParserEvent",
    "_message",
    "PARSE_COMPLETE",
    "PARSE_ERROR",
    "READY_FOR_DEPENDENCIES",
    "awayjs-core/lib/events/ProgressEvent",
    "ProgressEvent",
    "PROGRESS",
    "awayjs-core/lib/events/ProjectionEvent",
    "ProjectionEvent",
    "projection",
    "_projection",
    "MATRIX_CHANGED",
    "awayjs-core/lib/events/TimerEvent",
    "TimerEvent",
    "TIMER",
    "TIMER_COMPLETE",
    "awayjs-core/lib/geom/Box",
    "Vector3D",
    "Box",
    "z",
    "depth",
    "val",
    "_bottomRightBack",
    "_size",
    "_topLeftFront",
    "contains",
    "containsPoint",
    "containsBox",
    "box",
    "copyFrom",
    "sourceBox",
    "equals",
    "toCompare",
    "inflate",
    "dx",
    "dy",
    "dz",
    "inflatePoint",
    "delta",
    "intersection",
    "toIntersect",
    "intersects",
    "rayIntersection",
    "direction",
    "targetNormal",
    "halfExtentsX",
    "halfExtentsY",
    "halfExtentsZ",
    "centerX",
    "centerY",
    "centerZ",
    "px",
    "py",
    "pz",
    "vx",
    "vy",
    "vz",
    "ix",
    "iy",
    "iz",
    "rayEntryDistance",
    "closestPointToPoint",
    "point",
    "isEmpty",
    "offset",
    "offsetPosition",
    "setEmpty",
    "setTo",
    "xa",
    "ya",
    "za",
    "widtha",
    "heighta",
    "deptha",
    "toString",
    "union",
    "toUnion",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/geom/ColorTransform",
    "ColorTransform",
    "concat",
    "second",
    "awayjs-core/lib/geom/MathConsts",
    "MathConsts",
    "RADIANS_TO_DEGREES",
    "PI",
    "DEGREES_TO_RADIANS",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "Matrix3D",
    "Matrix3DUtils",
    "quaternion2matrix",
    "quarternion",
    "m",
    "w",
    "xx",
    "xy",
    "xz",
    "xw",
    "yy",
    "yz",
    "yw",
    "zz",
    "zw",
    "raw",
    "RAW_DATA_CONTAINER",
    "copyRawDataFrom",
    "getForward",
    "v",
    "copyColumnTo",
    "normalize",
    "getUp",
    "getRight",
    "compare",
    "m1",
    "m2",
    "r1",
    "r2",
    "rawData",
    "copyRawDataTo",
    "lookAt",
    "pos",
    "dir",
    "up",
    "dirN",
    "upN",
    "lftN",
    "crossProduct",
    "dotProduct",
    "reflection",
    "plane",
    "ab2",
    "ac2",
    "bc2",
    "transformVector",
    "vector",
    "result",
    "k",
    "h",
    "deltaTransformVector",
    "getTranslation",
    "transform",
    "deltaTransformVectors",
    "vin",
    "vout",
    "outIndex",
    "CALCULATION_MATRIX",
    "awayjs-core/lib/geom/Matrix3D",
    "Orientation3D",
    "append",
    "lhs",
    "m111",
    "m121",
    "m131",
    "m141",
    "m112",
    "m122",
    "m132",
    "m142",
    "m113",
    "m123",
    "m133",
    "m143",
    "m114",
    "m124",
    "m134",
    "m144",
    "m211",
    "m221",
    "m231",
    "m241",
    "m212",
    "m222",
    "m232",
    "m242",
    "m213",
    "m223",
    "m233",
    "m243",
    "m214",
    "m224",
    "m234",
    "m244",
    "appendRotation",
    "degrees",
    "axis",
    "getAxisRotation",
    "appendScale",
    "xScale",
    "yScale",
    "zScale",
    "appendTranslation",
    "slice",
    "copyColumnFrom",
    "column",
    "vector3D",
    "sourceMatrix3D",
    "len",
    "transpose",
    "copyRowFrom",
    "row",
    "copyRowTo",
    "copyToMatrix3D",
    "dest",
    "decompose",
    "orientationStyle",
    "q",
    "vec",
    "mr",
    "scale",
    "sqrt",
    "rot",
    "AXIS_ANGLE",
    "acos",
    "QUATERNION",
    "tr",
    "EULER_ANGLES",
    "asin",
    "atan2",
    "identity",
    "interpolate",
    "thisMat",
    "toMat",
    "percent",
    "interpolateTo",
    "invert",
    "determinant",
    "invertable",
    "abs",
    "m11",
    "m21",
    "m31",
    "m41",
    "m12",
    "m22",
    "m32",
    "m42",
    "m13",
    "m23",
    "m33",
    "m43",
    "m14",
    "m24",
    "m34",
    "m44",
    "prepend",
    "rhs",
    "prependRotation",
    "prependScale",
    "prependTranslation",
    "recompose",
    "components",
    "angle",
    "cos",
    "sin",
    "transformVectors",
    "oRawData",
    "rad",
    "tmp1",
    "tmp2",
    "toFixed",
    "decimalPlace",
    "magnitude",
    "pow",
    "awayjs-core/lib/geom/Orientation3D",
    "awayjs-core/lib/geom/Matrix",
    "Point",
    "Matrix",
    "a1",
    "c1",
    "tx1",
    "sourceMatrix",
    "createBox",
    "scaleX",
    "scaleY",
    "rotation",
    "createGradientBox",
    "deltaTransformPoint",
    "norm",
    "multiply",
    "rotate",
    "sx",
    "sy",
    "transformPoint",
    "translate",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/PerspectiveProjection",
    "PerspectiveProjection",
    "toMatrix3D",
    "_matrix3D",
    "awayjs-core/lib/geom/Plane3D",
    "PlaneClassification",
    "Plane3D",
    "_iAlignment",
    "ALIGN_XY_AXIS",
    "ALIGN_YZ_AXIS",
    "ALIGN_XZ_AXIS",
    "ALIGN_ANY",
    "fromPoints",
    "p0",
    "p1",
    "p2",
    "d1x",
    "d1y",
    "d1z",
    "d2x",
    "d2y",
    "d2z",
    "fromNormalAndPoint",
    "normal",
    "distance",
    "classifyPoint",
    "epsilon",
    "FRONT",
    "BACK",
    "INTERSECT",
    "awayjs-core/lib/geom/PlaneClassification",
    "IN",
    "OUT",
    "add",
    "sourcePoint",
    "thickness",
    "invLength",
    "subtract",
    "pt1",
    "pt2",
    "polar",
    "awayjs-core/lib/geom/PoissonLookup",
    "PoissonLookup",
    "initDistributions",
    "_distributions",
    "getDistribution",
    "awayjs-core/lib/geom/Quaternion",
    "Quaternion",
    "qa",
    "qb",
    "w1",
    "x1",
    "y1",
    "z1",
    "w2",
    "x2",
    "y2",
    "z2",
    "multiplyVector",
    "fromAxisAngle",
    "sin_a",
    "cos_a",
    "slerp",
    "dot",
    "s1",
    "s2",
    "lerp",
    "fromEulerAngles",
    "ax",
    "ay",
    "az",
    "halfX",
    "halfY",
    "halfZ",
    "cosX",
    "sinX",
    "cosY",
    "sinY",
    "cosZ",
    "sinZ",
    "toEulerAngles",
    "mag",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "ww",
    "fromMatrix",
    "toRawData",
    "exclude4thRow",
    "rotatePoint",
    "_bottomRight",
    "_topLeft",
    "containsRect",
    "offsetPoint",
    "awayjs-core/lib/geom/Sphere",
    "Sphere",
    "radius",
    "det",
    "sqrtDet",
    "awayjs-core/lib/geom/UVTransform",
    "UVTransform",
    "_uvMatrix",
    "_rotation",
    "_scaleU",
    "_scaleV",
    "_offsetU",
    "_offsetV",
    "_uvMatrixDirty",
    "updateUVMatrix",
    "lengthSquared",
    "angleBetween",
    "src",
    "decrementBy",
    "allFour",
    "incrementBy",
    "nearEquals",
    "tolerance",
    "negate",
    "project",
    "scaleBy",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "AssetLibraryIterator",
    "AssetLoader",
    "ConflictPrecedence",
    "ConflictStrategy",
    "NamedAssetBase",
    "AssetLibraryBundle",
    "_this",
    "_loadingSessionsGarbage",
    "_assetDictionary",
    "_loadingSessions",
    "conflictStrategy",
    "IGNORE",
    "create",
    "conflictPrecedence",
    "FAVOR_NEW",
    "_onAssetRenameDelegate",
    "onAssetRename",
    "_onAssetConflictResolvedDelegate",
    "onAssetConflictResolved",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "getInstance",
    "key",
    "_iInstances",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "_strategy",
    "_strategyPreference",
    "createIterator",
    "assetTypeFilter",
    "namespaceFilter",
    "filterFunc",
    "load",
    "req",
    "context",
    "ns",
    "parser",
    "loader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "loadData",
    "getAsset",
    "_assetDictDirty",
    "rehashAssetDict",
    "DEFAULT_NAMESPACE",
    "addAsset",
    "old",
    "indexOf",
    "assetNamespace",
    "resolveConflict",
    "removeAsset",
    "idx",
    "removeAssetFromDict",
    "removeAssetByName",
    "removeAllAssets",
    "removeNamespaceAssets",
    "old_assets",
    "autoRemoveEmptyNamespace",
    "empty",
    "stopAllLoadingSessions",
    "killLoadingSession",
    "_gcTimeoutIID",
    "setTimeout",
    "loadingSessionGC",
    "pop",
    "clearTimeout",
    "stop",
    "dict",
    "awayjs-core/lib/library/AssetLibraryIterator",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-core/lib/library/ConflictPrecedence",
    "awayjs-core/lib/library/ConflictStrategy",
    "awayjs-core/lib/library/NamedAssetBase",
    "filter",
    "_idx",
    "_filtered",
    "next",
    "reset",
    "setIndex",
    "assetType",
    "awayjs-core/lib/library/AssetLibrary",
    "AssetLibrary",
    "getBundle",
    "stopLoad",
    "awayjs-core/lib/library/AssetLoaderContext",
    "AssetLoaderContext",
    "includeDependencies",
    "dependencyBaseUrl",
    "_includeDependencies",
    "_dependencyBaseUrl",
    "_embeddedDataByUrl",
    "_remappedUrls",
    "_materialMode",
    "UNDEFINED",
    "materialMode",
    "_overrideAbsPath",
    "_overrideFullUrls",
    "mapUrl",
    "originalUrl",
    "newUrl",
    "mapUrlToData",
    "_iHasDataForUrl",
    "_iGetDataForUrl",
    "_iHasMappingForUrl",
    "_iGetRemappedUrl",
    "SINGLEPASS_MATERIALS",
    "MULTIPASS_MATERIALS",
    "awayjs-core/lib/library/AssetLoaderToken",
    "AssetLoaderToken",
    "_iLoader",
    "URLLoader",
    "URLLoaderDataFormat",
    "CubeTextureParser",
    "ResourceDependency",
    "Texture2DParser",
    "_stack",
    "_errorHandlers",
    "_parseErrorHandlers",
    "_onReadyForDependenciesDelegate",
    "onReadyForDependencies",
    "_onParseCompleteDelegate",
    "onParseComplete",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_parsers",
    "parsers",
    "_baseDependency",
    "_token",
    "_uri",
    "replace",
    "_namespace",
    "retrieveDependency",
    "retrieveNext",
    "_currentDependency",
    "dependencies",
    "parsingPaused",
    "_iResumeParsingAfterDependencies",
    "prev",
    "_iSuccess",
    "resolve",
    "addEventListeners",
    "request",
    "Function",
    "_iSetData",
    "retrieveAsRawData",
    "parseDependency",
    "resolveDependencyUrl",
    "dataFormat",
    "BINARY",
    "_iSetParser",
    "getParserFromSuffix",
    "joinUrl",
    "base",
    "end",
    "charAt",
    "substr",
    "scheme_re",
    "RegExp",
    "overrideAbsolutePaths",
    "test",
    "overrideFullURLs",
    "noscheme_url",
    "substring",
    "lastIndexOf",
    "retrieveParserDependencies",
    "parserDependancies",
    "resolveParserDependencies",
    "handled",
    "isDependency",
    "removeEventListeners",
    "resolveFailure",
    "resetAssetPath",
    "suppresAssetEvents",
    "resolveName",
    "handler",
    "getParserFromData",
    "supportsData",
    "_iFileName",
    "parseAsync",
    "split",
    "fileExtension",
    "toLowerCase",
    "supportsType",
    "awayjs-core/lib/net/URLLoader",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/parsers/CubeTextureParser",
    "awayjs-core/lib/parsers/ResourceDependency",
    "awayjs-core/lib/parsers/Texture2DParser",
    "awayjs-core/lib/library/AssetType",
    "AssetType",
    "ANIMATION_NODE",
    "ANIMATION_SET",
    "ANIMATION_STATE",
    "ANIMATOR",
    "BILLBOARD",
    "CAMERA",
    "CONTAINER",
    "EFFECTS_METHOD",
    "FONT",
    "GEOMETRY",
    "LINE_SEGMENT",
    "LIGHT",
    "LIGHT_PICKER",
    "MATERIAL",
    "MESH",
    "TRIANGLE_SUB_MESH",
    "CURVE_SUB_MESH",
    "LINE_SUB_MESH",
    "PRIMITIVE_PREFAB",
    "SHADOW_MAP_METHOD",
    "SKELETON",
    "SKELETON_POSE",
    "SKYBOX",
    "STATE_TRANSITION",
    "TEXTFIELD",
    "TEXTFORMAT",
    "TEXTURE",
    "TEXTURE_PROJECTOR",
    "TIMELINE",
    "FAVOR_OLD",
    "awayjs-core/lib/library/ConflictStrategyBase",
    "ConflictStrategyBase",
    "changedAsset",
    "oldAsset",
    "assetsDictionary",
    "precedence",
    "_pUpdateNames",
    "nonConflictingName",
    "newAsset",
    "loser_prev_name",
    "winner",
    "loser",
    "ErrorConflictStrategy",
    "IgnoreConflictStrategy",
    "NumSuffixConflictStrategy",
    "include",
    "APPEND_NUM_SUFFIX",
    "THROW_ERROR",
    "awayjs-core/lib/library/ErrorConflictStrategy",
    "awayjs-core/lib/library/IgnoreConflictStrategy",
    "awayjs-core/lib/library/NumSuffixConflictStrategy",
    "assetFullPath",
    "awayjs-core/lib/library/IAsset",
    "awayjs-core/lib/library/IDUtil",
    "IDUtil",
    "createUID",
    "uid",
    "ALPHA_CHAR_CODES",
    "floor",
    "random",
    "time",
    "Date",
    "getTime",
    "timeString",
    "toUpperCase",
    "charCodeAt",
    "String",
    "fromCharCode",
    "apply",
    "_id",
    "ID_COUNT",
    "_originalName",
    "updateFullPath",
    "_full_path",
    "assetPathEquals",
    "overrideOriginal",
    "separator",
    "_separator",
    "_next_suffix",
    "orig",
    "new_name",
    "suffix",
    "parseInt",
    "isNaN",
    "awayjs-core/lib/net/CrossDomainPolicy",
    "CrossDomainPolicy",
    "ANONYMOUS",
    "USE_CREDENTIALS",
    "TEXT",
    "VARIABLES",
    "BLOB",
    "ARRAY_BUFFER",
    "URLRequestMethod",
    "URLVariables",
    "AwayEvent",
    "AwayProgressEvent",
    "_bytesLoaded",
    "_bytesTotal",
    "_dataFormat",
    "_loadError",
    "_request",
    "_data",
    "format",
    "initXHR",
    "method",
    "POST",
    "postRequest",
    "getRequest",
    "close",
    "_XHR",
    "abort",
    "disposeXHR",
    "setResponseType",
    "xhr",
    "responseType",
    "open",
    "async",
    "send",
    "handleXmlHttpRequestException",
    "urlVars",
    "formData",
    "error",
    "XMLHttpRequest",
    "onloadstart",
    "onLoadStart",
    "onprogress",
    "onProgress",
    "onabort",
    "onAbort",
    "onerror",
    "onload",
    "ontimeout",
    "onTimeOut",
    "onloadend",
    "onLoadEnd",
    "onreadystatechange",
    "onReadyStateChange",
    "decodeURLVariables",
    "join",
    "tokens",
    "re",
    "exec",
    "decodeURIComponent",
    "readyState",
    "_loadErrorEvent",
    "_progressEvent",
    "bytesTotal",
    "total",
    "bytesLoaded",
    "loaded",
    "_loadStartEvent",
    "responseText",
    "response",
    "_loadCompleteEvent",
    "awayjs-core/lib/net/URLRequestMethod",
    "awayjs-core/lib/net/URLVariables",
    "GET",
    "awayjs-core/lib/net/URLRequest",
    "URLRequest",
    "_variables",
    "decode",
    "obj",
    "fd",
    "FormData",
    "ParserBase",
    "ImageCubeTexture",
    "extension",
    "JSON",
    "parse",
    "_iResolveDependency",
    "resourceDependency",
    "_iResolveDependencyFailure",
    "_pProceedParsing",
    "_imgDependencyDictionary",
    "_getHTMLImageElement",
    "posX",
    "negX",
    "posY",
    "negY",
    "posZ",
    "negZ",
    "_pFinalizeAsset",
    "PARSING_DONE",
    "json",
    "rec",
    "_pDieWithError",
    "_pAddDependency",
    "image",
    "_validateCubeData",
    "_pPauseAndRetrieveDependencies",
    "MORE_TO_PARSE",
    "htmlImageElement",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/textures/ImageCubeTexture",
    "ParserUtils",
    "TextureUtils",
    "Timer",
    "getTimer",
    "_dependencies",
    "_pOnIntervalDelegate",
    "_pOnInterval",
    "_pContent",
    "isBitmapDataValid",
    "bitmapData",
    "isValid",
    "console",
    "_parsingFailure",
    "_parsingPaused",
    "_parsingComplete",
    "newMaterialMode",
    "frameLimit",
    "_pStartParsing",
    "_iResolveDependencyName",
    "_timer",
    "start",
    "type_event",
    "type_name",
    "suppressErrorEvents",
    "_pHasTime",
    "_lastFrameTime",
    "_frameLimit",
    "_pFinishParsing",
    "_pGetTextData",
    "_pGetByteData",
    "toByteArray",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-core/lib/utils/TextureUtils",
    "awayjs-core/lib/utils/Timer",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-core/lib/parsers/ParserDataFormat",
    "ParserDataFormat",
    "PLAIN_TEXT",
    "IMAGE",
    "ByteArray",
    "arrayBufferToImage",
    "byteStr",
    "bytes",
    "Uint8Array",
    "byteLength",
    "base64Image",
    "window",
    "btoa",
    "str",
    "img",
    "Image",
    "byteArrayToImage",
    "arraybytes",
    "blobToImage",
    "URLObj",
    "createObjectURL",
    "setArrayBuffer",
    "ba",
    "readUTFBytes",
    "min",
    "getBytesAvailable",
    "awayjs-core/lib/utils/ByteArray",
    "parentParser",
    "suppressAssetEvents",
    "_parser",
    "_parentParser",
    "_retrieveAsRawData",
    "_suppressAssetEvents",
    "ImageTexture",
    "readUnsignedShort",
    "readShort",
    "readByte",
    "sizeError",
    "_loadingImage",
    "_htmlImageElement",
    "isHTMLImageElementValid",
    "ArrayBuffer",
    "Blob",
    "awayjs-core/lib/textures/ImageTexture",
    "awayjs-core/lib/pool/ITextureData",
    "awayjs-core/lib/projections/CoordinateSystem",
    "CoordinateSystem",
    "LEFT_HANDED",
    "RIGHT_HANDED",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ProjectionBase",
    "FreeMatrixProjection",
    "_pMatrix",
    "_pNear",
    "_pFar",
    "_pAspectRatio",
    "pInvalidateMatrix",
    "pUpdateMatrix",
    "_pMatrixInvalid",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-core/lib/projections/ProjectionBase",
    "awayjs-core/lib/projections/IProjection",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection",
    "ObliqueNearPlaneProjection",
    "baseProjection",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_baseProjection",
    "frustumCorners",
    "near",
    "far",
    "_iAspectRatio",
    "_plane",
    "cx",
    "cy",
    "cz",
    "cw",
    "signX",
    "signY",
    "inverse",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "OrthographicOffCenterProjection",
    "minX",
    "maxX",
    "minY",
    "maxY",
    "_minX",
    "_maxX",
    "_minY",
    "_maxY",
    "unproject",
    "nX",
    "nY",
    "sZ",
    "unprojectionMatrix",
    "_pFrustumCorners",
    "awayjs-core/lib/projections/OrthographicProjection",
    "OrthographicProjection",
    "projectionHeight",
    "_projectionHeight",
    "_yMax",
    "_xMax",
    "left",
    "right",
    "top",
    "bottom",
    "_pScissorRect",
    "_pViewPort",
    "xWidth",
    "yHgt",
    "center",
    "middle",
    "fieldOfView",
    "coordinateSystem",
    "_fieldOfView",
    "_focalLength",
    "_hFieldOfView",
    "_hFocalLength",
    "_preserveAspectRatio",
    "_preserveFocalLength",
    "tan",
    "_pCoordinateSystem",
    "atan",
    "tanMinX",
    "_pOriginX",
    "tanMaxX",
    "tanMinY",
    "_pOriginY",
    "tanMaxY",
    "_unprojectionInvalid",
    "point3d",
    "_unprojection",
    "_iUpdateScissorRect",
    "_iUpdateViewport",
    "awayjs-core/lib/textures/BitmapCubeTexture",
    "CubeTextureBase",
    "BitmapCubeTexture",
    "_bitmapDatas",
    "_testSize",
    "invalidateContent",
    "_pSetSize",
    "_iGetTextureData",
    "side",
    "awayjs-core/lib/textures/CubeTextureBase",
    "awayjs-core/lib/textures/BitmapTexture",
    "Texture2DBase",
    "BitmapTexture",
    "_bitmapData",
    "awayjs-core/lib/textures/Texture2DBase",
    "MipmapGenerator",
    "TextureProxyBase",
    "_mipmapDataArray",
    "_mipmapDataDirtyArray",
    "size",
    "_pSize",
    "invalidateSize",
    "mipmapData",
    "freeMipMapHolder",
    "_iGetMipmapData",
    "generateMipMaps",
    "awayjs-core/lib/textures/MipmapGenerator",
    "awayjs-core/lib/textures/TextureProxyBase",
    "_htmlImageElements",
    "output",
    "alpha",
    "mipmap",
    "_getMipmapHolder",
    "_matrix",
    "mipMapHolder",
    "newW",
    "newH",
    "_mipMaps",
    "_mipMapUses",
    "holderWidth",
    "holderHeight",
    "awayjs-core/lib/textures/RenderTexture",
    "RenderTexture",
    "_pWidth",
    "isDimensionValid",
    "_pHeight",
    "awayjs-core/lib/textures/SpecularBitmapTexture",
    "SpecularBitmapTexture",
    "specularMap",
    "glossMap",
    "bmd",
    "_specularMap",
    "_glossMap",
    "oldBitmap",
    "origin",
    "_mipmapData",
    "_mipmapDataDirty",
    "generateMipmaps",
    "_pFormat",
    "_textureData",
    "invalidate",
    "_iAddTextureData",
    "textureData",
    "_iRemoveTextureData",
    "awayjs-core/lib/ui/Keyboard",
    "Keyboard",
    "A",
    "ALTERNATE",
    "AUDIO",
    "B",
    "BACKQUOTE",
    "BACKSLASH",
    "BACKSPACE",
    "C",
    "CAPS_LOCK",
    "CHANNEL_DOWN",
    "CHANNEL_UP",
    "COMMA",
    "COMMAND",
    "CONTROL",
    "D",
    "DELETE",
    "DOWN",
    "DVR",
    "E",
    "END",
    "ENTER",
    "EQUAL",
    "ESCAPE",
    "EXIT",
    "F",
    "F1",
    "F10",
    "F11",
    "F12",
    "F13",
    "F14",
    "F15",
    "F2",
    "F3",
    "F4",
    "F5",
    "F6",
    "F7",
    "F8",
    "F9",
    "FAST_FORWARD",
    "G",
    "GUIDE",
    "H",
    "HELP",
    "HOME",
    "I",
    "INFO",
    "INPUT",
    "INSERT",
    "J",
    "K",
    "KEYNAME_BEGIN",
    "KEYNAME_BREAK",
    "KEYNAME_CLEARDISPLAY",
    "KEYNAME_CLEARLINE",
    "KEYNAME_DELETE",
    "KEYNAME_DELETECHAR",
    "KEYNAME_DELETELINE",
    "KEYNAME_DOWNARROW",
    "KEYNAME_END",
    "KEYNAME_EXECUTE",
    "KEYNAME_F1",
    "KEYNAME_F10",
    "KEYNAME_F11",
    "KEYNAME_F12",
    "KEYNAME_F13",
    "KEYNAME_F14",
    "KEYNAME_F15",
    "KEYNAME_F16",
    "KEYNAME_F17",
    "KEYNAME_F18",
    "KEYNAME_F19",
    "KEYNAME_F2",
    "KEYNAME_F20",
    "KEYNAME_F21",
    "KEYNAME_F22",
    "KEYNAME_F23",
    "KEYNAME_F24",
    "KEYNAME_F25",
    "KEYNAME_F26",
    "KEYNAME_F27",
    "KEYNAME_F28",
    "KEYNAME_F29",
    "KEYNAME_F3",
    "KEYNAME_F30",
    "KEYNAME_F31",
    "KEYNAME_F32",
    "KEYNAME_F33",
    "KEYNAME_F34",
    "KEYNAME_F35",
    "KEYNAME_F4",
    "KEYNAME_F5",
    "KEYNAME_F6",
    "KEYNAME_F7",
    "KEYNAME_F8",
    "KEYNAME_F9",
    "KEYNAME_FIND",
    "KEYNAME_HELP",
    "KEYNAME_HOME",
    "KEYNAME_INSERT",
    "KEYNAME_INSERTCHAR",
    "KEYNAME_INSERTLINE",
    "KEYNAME_LEFTARROW",
    "KEYNAME_MENU",
    "KEYNAME_MODESWITCH",
    "KEYNAME_NEXT",
    "KEYNAME_PAGEDOWN",
    "KEYNAME_PAGEUP",
    "KEYNAME_PAUSE",
    "KEYNAME_PREV",
    "KEYNAME_PRINT",
    "KEYNAME_PRINTSCREEN",
    "KEYNAME_REDO",
    "KEYNAME_RESET",
    "KEYNAME_RIGHTARROW",
    "KEYNAME_SCROLLLOCK",
    "KEYNAME_SELECT",
    "KEYNAME_STOP",
    "KEYNAME_SYSREQ",
    "KEYNAME_SYSTEM",
    "KEYNAME_UNDO",
    "KEYNAME_UPARROW",
    "KEYNAME_USER",
    "L",
    "LAST",
    "LEFT",
    "LEFTBRACKET",
    "LIVE",
    "M",
    "MASTER_SHELL",
    "MENU",
    "MINUS",
    "N",
    "NEXT",
    "NUMBER_0",
    "NUMBER_1",
    "NUMBER_2",
    "NUMBER_3",
    "NUMBER_4",
    "NUMBER_5",
    "NUMBER_6",
    "NUMBER_7",
    "NUMBER_8",
    "NUMBER_9",
    "NUMPAD",
    "NUMPAD_0",
    "NUMPAD_1",
    "NUMPAD_2",
    "NUMPAD_3",
    "NUMPAD_4",
    "NUMPAD_5",
    "NUMPAD_6",
    "NUMPAD_7",
    "NUMPAD_8",
    "NUMPAD_9",
    "NUMPAD_ADD",
    "NUMPAD_DECIMAL",
    "NUMPAD_DIVIDE",
    "NUMPAD_ENTER",
    "NUMPAD_MULTIPLY",
    "NUMPAD_SUBTRACT",
    "O",
    "P",
    "PAGE_DOWN",
    "PAGE_UP",
    "PAUSE",
    "PERIOD",
    "PLAY",
    "PREVIOUS",
    "Q",
    "QUOTE",
    "R",
    "RECORD",
    "REWIND",
    "RIGHT",
    "RIGHTBRACKET",
    "S",
    "SEARCH",
    "SEMICOLON",
    "SETUP",
    "SHIFT",
    "SKIP_BACKWARD",
    "SKIP_FORWARD",
    "SLASH",
    "SPACE",
    "STOP",
    "SUBTITLE",
    "T",
    "TAB",
    "U",
    "UP",
    "V",
    "VOD",
    "W",
    "X",
    "Y",
    "YELLOW",
    "Z",
    "awayjs-core/lib/utils/ByteArrayBase",
    "ByteArrayBase",
    "_mode",
    "writeByte",
    "writeUnsignedByte",
    "readUnsignedByte",
    "writeUnsignedShort",
    "writeUnsignedInt",
    "writeFloat",
    "toFloatBits",
    "readFloat",
    "fromFloatBits",
    "compareEqual",
    "other",
    "count",
    "co0",
    "c0",
    "writeBase64String",
    "dumpToConsole",
    "oldpos",
    "nstep",
    "asHexString",
    "digits",
    "lut",
    "sh",
    "readBase64String",
    "internalGetBase64String",
    "getUnsignedByteFunc",
    "self",
    "b0",
    "b1",
    "b2",
    "enc1",
    "enc2",
    "enc3",
    "enc4",
    "base64Key",
    "Base64Key",
    "awayjs-core/lib/utils/ByteArrayBuffer",
    "ByteArrayBuffer",
    "_bytes",
    "bi",
    "Number",
    "sign",
    "exponent",
    "mantissa",
    "maxlength",
    "unalignedarraybytestemp",
    "ensureWriteableSpace",
    "ensureSpace",
    "aBuffer",
    "inInt8AView",
    "Int8Array",
    "localInt8View",
    "newmaxlength",
    "newarraybuffer",
    "view",
    "newview",
    "readBytes",
    "byteView",
    "localByteView",
    "subarray",
    "Uint16Array",
    "view2",
    "view3",
    "max",
    "DataView",
    "getUint8",
    "c2",
    "c3",
    "readInt",
    "int",
    "getInt32",
    "short",
    "getInt16",
    "readDouble",
    "double",
    "getFloat64",
    "pa",
    "Uint32Array",
    "Float32Array",
    "awayjs-core/lib/utils/CSS",
    "CSS",
    "setElementSize",
    "element",
    "style",
    "setElementWidth",
    "setElementHeight",
    "setElementX",
    "setElementY",
    "getElementVisibility",
    "visibility",
    "setElementVisibility",
    "visible",
    "setElementAlpha",
    "HTMLCanvasElement",
    "globalAlpha",
    "setElementPosition",
    "absolute",
    "float32Color",
    "componentToHex",
    "hex",
    "RGBToHexString",
    "ARGBToHexString",
    "awayjs-core/lib/utils/Debug",
    "Debug",
    "breakpoint",
    "throwPIROnKeyWordOnly",
    "enable",
    "keyword",
    "throwPIR",
    "clss",
    "fnc",
    "msg",
    "logPIR",
    "THROW_ERRORS",
    "LOG_PI_ERRORS",
    "args",
    "_i",
    "arguments",
    "ENABLE_LOG",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "RequestAnimationFrame",
    "callback",
    "callbackContext",
    "_active",
    "_argsArray",
    "_getTimer",
    "setCallback",
    "_rafUpdateFunction",
    "_tick",
    "_dt",
    "_callback",
    "_callbackContext",
    "_prevTime",
    "requestAnimationFrame",
    "_currentTime",
    "MAX_SIZE",
    "isPowerOfTwo",
    "getBestPowerOf2",
    "delay",
    "repeatCount",
    "_repeatCount",
    "_currentCount",
    "_running",
    "_delay",
    "clearInterval",
    "_iid",
    "setInterval",
    "tick",
    "now"
  ],
  "mappings": "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",
  "file": "awayjs-core.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "class BitmapDataChannel\r\n{\r\n\tpublic static ALPHA:number /*uint*/ = 8;\r\n\tpublic static BLUE:number /*uint*/ = 4;\r\n\tpublic static GREEN:number /*uint*/ = 2;\r\n\tpublic static RED:number /*uint*/ = 1;\r\n}\r\n\r\nexport = BitmapDataChannel;",
    null,
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\n\r\n/**\r\n * The BitmapData class lets you work with the data(pixels) of a Bitmap\r\n * object. You can use the methods of the BitmapData class to create\r\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\r\n * in various ways at runtime. You can also access the BitmapData for a bitmap\r\n * image that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes.\r\n *\r\n * <p>This class lets you separate bitmap rendering operations from the\r\n * internal display updating routines of flash. By manipulating a\r\n * BitmapData object directly, you can create complex images without incurring\r\n * the per-frame overhead of constantly redrawing the content from vector\r\n * data.</p>\r\n *\r\n * <p>The methods of the BitmapData class support effects that are not\r\n * available through the filters available to non-bitmap display objects.</p>\r\n *\r\n * <p>A BitmapData object contains an array of pixel data. This data can\r\n * represent either a fully opaque bitmap or a transparent bitmap that\r\n * contains alpha channel data. Either type of BitmapData object is stored as\r\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\r\n * of a single pixel in the bitmap.</p>\r\n *\r\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\r\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\r\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\r\n * represents the alpha channel value, followed by red, green, and blue.)</p>\r\n *\r\n * <p>The four channels(alpha, red, green, and blue) are represented as\r\n * numbers when you use them with the <code>BitmapData.copyChannel()</code>\r\n * method or the <code>DisplacementMapFilter.componentX</code> and\r\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\r\n * are represented by the following constants in the BitmapDataChannel\r\n * class:</p>\r\n *\r\n * <ul>\r\n *   <li><code>BitmapDataChannel.ALPHA</code></li>\r\n *   <li><code>BitmapDataChannel.RED</code></li>\r\n *   <li><code>BitmapDataChannel.GREEN</code></li>\r\n *   <li><code>BitmapDataChannel.BLUE</code></li>\r\n * </ul>\r\n *\r\n * <p>You can attach BitmapData objects to a Bitmap object by using the\r\n * <code>bitmapData</code> property of the Bitmap object.</p>\r\n *\r\n * <p>You can use a BitmapData object to fill a Graphics object by using the\r\n * <code>Graphics.beginBitmapFill()</code> method.</p>\r\n *\r\n * <p>You can also use a BitmapData object to perform batch tile rendering\r\n * using the <code>flash.display.Tilesheet</code> class.</p>\r\n *\r\n * <p>In Flash Player 10, the maximum size for a BitmapData object\r\n * is 8,191 pixels in width or height, and the total number of pixels cannot\r\n * exceed 16,777,215 pixels.(So, if a BitmapData object is 8,191 pixels wide,\r\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\r\n * is 2,880 pixels in height and 2,880 in width.</p>\r\n */\r\nclass BitmapData\r\n{\r\n\tprivate _imageCanvas:HTMLCanvasElement;\r\n\tprivate _context:CanvasRenderingContext2D;\r\n\tprivate _imageData:ImageData;\r\n\tprivate _rect:Rectangle;\r\n\tprivate _transparent:boolean;\r\n\tprivate _locked:boolean = false;\r\n\r\n\t/**\r\n\t * The height of the bitmap image in pixels.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._rect.height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._rect.height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rect.height = value;\r\n\r\n\t\tif (this._locked)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\r\n\t\tthis._imageCanvas.height = value;\r\n\r\n\t\tif (this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t}\r\n\r\n\t/**\r\n\t * The rectangle that defines the size and location of the bitmap image. The\r\n\t * top and left of the rectangle are 0; the width and height are equal to the\r\n\t * width and height in pixels of the BitmapData object.\r\n\t */\r\n\tpublic get rect():Rectangle\r\n\t{\r\n\t\treturn this._rect;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\r\n\t * set this value only when you construct a BitmapData object by passing in\r\n\t * <code>true</code> for the <code>transparent</code> parameter of the\r\n\t * constructor. Then, after you create a BitmapData object, you can check\r\n\t * whether it supports per-pixel transparency by determining if the value of\r\n\t * the <code>transparent</code> property is <code>true</code>.\r\n\t */\r\n\tpublic get transparent():boolean\r\n\t{\r\n\t\treturn this._transparent;\r\n\t}\r\n\r\n\tpublic set transparent(value:boolean)\r\n\t{\r\n\t\tthis._transparent = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the bitmap image in pixels.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._rect.width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._rect.width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rect.width = value;\r\n\r\n\t\tif (this._locked)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\r\n\t\tthis._imageCanvas.width = value;\r\n\r\n\t\tif (this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a BitmapData object with a specified width and height. If you\r\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\r\n\t * the bitmap is set to that color.\r\n\t *\r\n\t * <p>By default, the bitmap is created as transparent, unless you pass\r\n\t * the value <code>false</code> for the transparent parameter. After you\r\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\r\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\r\n\t * information. If you define the bitmap as transparent, every pixel uses 32\r\n\t * bits of color channel information, including an alpha transparency\r\n\t * channel.</p>\r\n\t *\r\n\t * @param width       The width of the bitmap image in pixels.\r\n\t * @param height      The height of the bitmap image in pixels.\r\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\r\n\t *                    transparency. The default value is <code>true</code>\r\n\t *                    (transparent). To create a fully transparent bitmap,\r\n\t *                    set the value of the <code>transparent</code>\r\n\t *                    parameter to <code>true</code> and the value of the\r\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\r\n\t *                    0). Setting the <code>transparent</code> property to\r\n\t *                    <code>false</code> can result in minor improvements\r\n\t *                    in rendering performance.\r\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\r\n\t *                    bitmap image area. The default value is\r\n\t *                    0xFFFFFFFF(solid white).\r\n\t */\r\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null)\r\n\t{\r\n\t\tthis._transparent = transparent;\r\n\t\tthis._imageCanvas = <HTMLCanvasElement> document.createElement(\"canvas\");\r\n\t\tthis._imageCanvas.width = width;\r\n\t\tthis._imageCanvas.height = height;\r\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\r\n\t\tthis._rect = new Rectangle(0, 0, width, height);\r\n\r\n\t\tif (fillColor != null)\r\n\t\t\tthis.fillRect(this._rect, fillColor);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new BitmapData object that is a clone of the original instance\r\n\t * with an exact copy of the contained bitmap.\r\n\t *\r\n\t * @return A new BitmapData object that is identical to the original.\r\n\t */\r\n\tpublic clone():BitmapData\r\n\t{\r\n\t\tvar t:BitmapData = new BitmapData(this.width, this.height, this.transparent);\r\n\t\tt.draw(this);\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the color values in a specified area of a bitmap image by using a\r\n\t * <code>ColorTransform</code> object. If the rectangle matches the\r\n\t * boundaries of the bitmap image, this method transforms the color values of\r\n\t * the entire image.\r\n\t *\r\n\t * @param rect           A Rectangle object that defines the area of the\r\n\t *                       image in which the ColorTransform object is applied.\r\n\t * @param colorTransform A ColorTransform object that describes the color\r\n\t *                       transformation values to apply.\r\n\t */\r\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar data:Array<number> = this._imageData.data;\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\r\n\r\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\r\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\r\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\r\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Transfers data from one channel of another BitmapData object or the\r\n\t * current BitmapData object into a channel of the current BitmapData object.\r\n\t * All of the data in the other channels in the destination BitmapData object\r\n\t * are preserved.\r\n\t *\r\n\t * <p>The source channel value and destination channel value can be one of\r\n\t * following values: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li><code>BitmapDataChannel.RED</code></li>\r\n\t *   <li><code>BitmapDataChannel.GREEN</code></li>\r\n\t *   <li><code>BitmapDataChannel.BLUE</code></li>\r\n\t *   <li><code>BitmapDataChannel.ALPHA</code></li>\r\n\t * </ul>\r\n\t *\r\n\t * @param sourceBitmapData The input bitmap image to use. The source image\r\n\t *                         can be a different BitmapData object or it can\r\n\t *                         refer to the current BitmapData object.\r\n\t * @param sourceRect       The source Rectangle object. To copy only channel\r\n\t *                         data from a smaller area within the bitmap,\r\n\t *                         specify a source rectangle that is smaller than\r\n\t *                         the overall size of the BitmapData object.\r\n\t * @param destPoint        The destination Point object that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new channel data is placed. To copy only\r\n\t *                         channel data from one area to a different area in\r\n\t *                         the destination image, specify a point other than\r\n\t *                        (0,0).\r\n\t * @param sourceChannel    The source channel. Use a value from the\r\n\t *                         BitmapDataChannel class\r\n\t *                        (<code>BitmapDataChannel.RED</code>,\r\n\t *                         <code>BitmapDataChannel.BLUE</code>,\r\n\t *                         <code>BitmapDataChannel.GREEN</code>,\r\n\t *                         <code>BitmapDataChannel.ALPHA</code>).\r\n\t * @param destChannel      The destination channel. Use a value from the\r\n\t *                         BitmapDataChannel class\r\n\t *                        (<code>BitmapDataChannel.RED</code>,\r\n\t *                         <code>BitmapDataChannel.BLUE</code>,\r\n\t *                         <code>BitmapDataChannel.GREEN</code>,\r\n\t *                         <code>BitmapDataChannel.ALPHA</code>).\r\n\t * @throws TypeError The sourceBitmapData, sourceRect or destPoint are null.\r\n\t */\r\n\tpublic copyChannel(sourceBitmap:BitmapData, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\r\n\t{\r\n\t\tvar imageData:ImageData = sourceBitmap.imageData;\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar sourceData:Array<number> = sourceBitmap.imageData.data;\r\n\t\tvar destData:Array<number> = this._imageData.data;\r\n\r\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\r\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\r\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\r\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\r\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\r\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\r\n\r\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a fast routine to perform pixel manipulation between images with\r\n\t * no stretching, rotation, or color effects. This method copies a\r\n\t * rectangular area of a source image to a rectangular area of the same size\r\n\t * at the destination point of the destination BitmapData object.\r\n\t *\r\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\r\n\t * parameters, you can use a secondary image as an alpha source for the\r\n\t * source image. If the source image has alpha data, both sets of alpha data\r\n\t * are used to composite pixels from the source image to the destination\r\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\r\n\t * image that corresponds to the upper-left corner of the source rectangle.\r\n\t * Any pixels outside the intersection of the source image and alpha image\r\n\t * are not copied to the destination image.</p>\r\n\t *\r\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\r\n\t * channel is used when a transparent image is copied onto another\r\n\t * transparent image. To copy pixels with the alpha channel data, set the\r\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\r\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\r\n\t *\r\n\t * @param sourceBitmapData The input bitmap image from which to copy pixels.\r\n\t *                         The source image can be a different BitmapData\r\n\t *                         instance, or it can refer to the current\r\n\t *                         BitmapData instance.\r\n\t * @param sourceRect       A rectangle that defines the area of the source\r\n\t *                         image to use as input.\r\n\t * @param destPoint        The destination point that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new pixels are placed.\r\n\t * @param alphaBitmapData  A secondary, alpha BitmapData object source.\r\n\t * @param alphaPoint       The point in the alpha BitmapData object source\r\n\t *                         that corresponds to the upper-left corner of the\r\n\t *                         <code>sourceRect</code> parameter.\r\n\t * @param mergeAlpha       To use the alpha channel, set the value to\r\n\t *                         <code>true</code>. To copy pixels with no alpha\r\n\t *                         channel, set the value to <code>false</code>.\r\n\t * @throws TypeError The sourceBitmapData, sourceRect, destPoint are null.\r\n\t */\r\n\tpublic copyPixels(bmpd:BitmapData, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(bmpd:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(bmpd:any, sourceRect:Rectangle, destRect:Rectangle)\r\n\t{\r\n\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) draw object\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tif (this._imageData)\r\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\r\n\t\t\tthis._copyPixels(bmpd, sourceRect, destRect);\r\n\r\n\t\t\tif (this._imageData)\r\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\t} else {\r\n\t\t\tthis._copyPixels(bmpd, sourceRect, destRect);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Frees memory that is used to store the BitmapData object.\r\n\t *\r\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\r\n\t * and height of the image are set to 0. All subsequent calls to methods or\r\n\t * properties of this BitmapData instance fail, and an exception is thrown.\r\n\t * </p>\r\n\t *\r\n\t * <p><code>BitmapData.dispose()</code> releases the memory occupied by the\r\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\r\n\t * memory). After using <code>BitmapData.dispose()</code>, the BitmapData\r\n\t * object is no longer usable and an exception may be thrown if\r\n\t * you call functions on the BitmapData object. However,\r\n\t * <code>BitmapData.dispose()</code> does not garbage collect the BitmapData\r\n\t * object(approximately 128 bytes); the memory occupied by the actual\r\n\t * BitmapData object is released at the time the BitmapData object is\r\n\t * collected by the garbage collector.</p>\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._context = null;\r\n\t\tthis._imageCanvas = null;\r\n\t\tthis._imageData = null;\r\n\t\tthis._rect = null;\r\n\t\tthis._transparent = null;\r\n\t\tthis._locked = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the <code>source</code> display object onto the bitmap image, using\r\n\t * the NME software renderer. You can specify <code>matrix</code>,\r\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\r\n\t * <code>clipRect</code> parameter to control how the rendering performs.\r\n\t * Optionally, you can specify whether the bitmap should be smoothed when\r\n\t * scaled(this works only if the source object is a BitmapData object).\r\n\t *\r\n\t * <p>The source display object does not use any of its applied\r\n\t * transformations for this call. It is treated as it exists in the library\r\n\t * or file, with no matrix transform, no color transform, and no blend mode.\r\n\t * To draw a display object(such as a movie clip) by using its own transform\r\n\t * properties, you can copy its <code>transform</code> property object to the\r\n\t * <code>transform</code> property of the Bitmap object that uses the\r\n\t * BitmapData object.</p>\r\n\t *\r\n\t * @param source         The display object or BitmapData object to draw to\r\n\t *                       the BitmapData object.(The DisplayObject and\r\n\t *                       BitmapData classes implement the IBitmapDrawable\r\n\t *                       interface.)\r\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\r\n\t *                       the coordinates of the bitmap. If you do not want to\r\n\t *                       apply a matrix transformation to the image, set this\r\n\t *                       parameter to an identity matrix, created with the\r\n\t *                       default <code>new Matrix()</code> constructor, or\r\n\t *                       pass a <code>null</code> value.\r\n\t * @param colorTransform A ColorTransform object that you use to adjust the\r\n\t *                       color values of the bitmap. If no object is\r\n\t *                       supplied, the bitmap image's colors are not\r\n\t *                       transformed. If you must pass this parameter but you\r\n\t *                       do not want to transform the image, set this\r\n\t *                       parameter to a ColorTransform object created with\r\n\t *                       the default <code>new ColorTransform()</code>\r\n\t *                       constructor.\r\n\t * @param blendMode      A string value, from the flash.display.BlendMode\r\n\t *                       class, specifying the blend mode to be applied to\r\n\t *                       the resulting bitmap.\r\n\t * @param clipRect       A Rectangle object that defines the area of the\r\n\t *                       source object to draw. If you do not supply this\r\n\t *                       value, no clipping occurs and the entire source\r\n\t *                       object is drawn.\r\n\t * @param smoothing      A Boolean value that determines whether a BitmapData\r\n\t *                       object is smoothed when scaled or rotated, due to a\r\n\t *                       scaling or rotation in the <code>matrix</code>\r\n\t *                       parameter. The <code>smoothing</code> parameter only\r\n\t *                       applies if the <code>source</code> parameter is a\r\n\t *                       BitmapData object. With <code>smoothing</code> set\r\n\t *                       to <code>false</code>, the rotated or scaled\r\n\t *                       BitmapData image can appear pixelated or jagged. For\r\n\t *                       example, the following two images use the same\r\n\t *                       BitmapData object for the <code>source</code>\r\n\t *                       parameter, but the <code>smoothing</code> parameter\r\n\t *                       is set to <code>true</code> on the left and\r\n\t *                       <code>false</code> on the right:\r\n\t *\r\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\r\n\t *                       to <code>true</code> takes longer than doing so with\r\n\t *                       <code>smoothing</code> set to\r\n\t *                       <code>false</code>.</p>\r\n\t * @throws ArgumentError The <code>source</code> parameter is not a\r\n\t *                       BitmapData or DisplayObject object.\r\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\r\n\t *                       object.\r\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\r\n\t *                       Sprite or MovieClip object) all of its child objects\r\n\t *                       do not come from the same domain as the caller, or\r\n\t *                       are not in a content that is accessible to the\r\n\t *                       caller by having called the\r\n\t *                       <code>Security.allowDomain()</code> method. This\r\n\t *                       restriction does not apply to AIR content in the\r\n\t *                       application security sandbox.\r\n\t */\r\n\tpublic draw(source:BitmapData, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\r\n\t{\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) draw object\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\t\t\tthis._draw(source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t\t} else {\r\n\t\t\tthis._draw(source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Fills a rectangular area of pixels with a specified ARGB color.\r\n\t *\r\n\t * @param rect  The rectangular area to fill.\r\n\t * @param color The ARGB color value that fills the area. ARGB colors are\r\n\t *              often specified in hexadecimal format; for example,\r\n\t *              0xFF336699.\r\n\t * @throws TypeError The rect is null.\r\n\t */\r\n\tpublic fillRect(rect:Rectangle, color:number)\r\n\t{\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) apply fill\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tif (this._imageData)\r\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\r\n\t\t\tthis._fillRect(rect, color);\r\n\r\n\t\t\tif (this._imageData)\r\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t\t} else {\r\n\t\t\tthis._fillRect(rect, color);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an integer that represents an RGB pixel value from a BitmapData\r\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\r\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\r\n\t * alpha information is returned.\r\n\t *\r\n\t * <p>All pixels in a BitmapData object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapData methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\r\n\t *         method returns 0.\r\n\t */\r\n\tpublic getPixel(x, y):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\t\tr = this._imageData.data[index + 0];\r\n\t\t\tg = this._imageData.data[index + 1];\r\n\t\t\tb = this._imageData.data[index + 2];\r\n\t\t\ta = this._imageData.data[index + 3];\r\n\t\t}\r\n\r\n\t\t//returns black if fully transparent\r\n\t\tif (!a)\r\n\t\t\treturn 0x0;\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\r\n\t * This method is similar to the <code>getPixel()</code> method, which\r\n\t * returns an RGB color without alpha channel data.\r\n\t *\r\n\t * <p>All pixels in a BitmapData object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapData methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\r\n\t *         returned.\r\n\t */\r\n\tpublic getPixel32(x, y):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\t\tr = this._imageData.data[index + 0];\r\n\t\t\tg = this._imageData.data[index + 1];\r\n\t\t\tb = this._imageData.data[index + 2];\r\n\t\t\ta = this._imageData.data[index + 3];\r\n\t\t}\r\n\r\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Locks an image so that any objects that reference the BitmapData object,\r\n\t * such as Bitmap objects, are not updated when this BitmapData object\r\n\t * changes. To improve performance, use this method along with the\r\n\t * <code>unlock()</code> method before and after numerous calls to the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\r\n\t *\r\n\t */\r\n\tpublic lock()\r\n\t{\r\n\t\tif (this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = true;\r\n\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\r\n\t * an Array element is read and written into the BitmapData pixel. The data\r\n\t * in the Array is expected to be 32-bit ARGB pixel values.\r\n\t *\r\n\t * @param rect        Specifies the rectangular region of the BitmapData\r\n\t *                    object.\r\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\r\n\t *                    values to be used in the rectangular region.\r\n\t * @throws RangeError The vector array is not large enough to read all the\r\n\t *                    pixel data.\r\n\t */\r\n\tpublic setArray(rect:Rectangle, inputArray:Array<number>)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\r\n\r\n\t\t\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\t\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\t\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\t\t\tthis._imageData.data[index + 3] = argb[0];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a single pixel of a BitmapData object. The current alpha channel\r\n\t * value of the image pixel is preserved during this operation. The value of\r\n\t * the RGB color parameter is treated as an unmultiplied color value.\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapData instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting RGB color for the pixel.\r\n\t */\r\n\tpublic setPixel(x:number, y:number, color:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\tthis._imageData.data[index + 3] = 255;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the color and alpha transparency values of a single pixel of a\r\n\t * BitmapData object. This method is similar to the <code>setPixel()</code>\r\n\t * method; the main difference is that the <code>setPixel32()</code> method\r\n\t * takes an ARGB color value that contains alpha channel information.\r\n\t *\r\n\t * <p>All pixels in a BitmapData object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapData methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapData instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\r\n\t *              opaque(not transparent), the alpha transparency portion of\r\n\t *              this color value is ignored.\r\n\t */\r\n\tpublic setPixel32(x, y, color:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\tthis._imageData.data[index + 3] = argb[0];\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a byte array into a rectangular region of pixel data. For each\r\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\r\n\t * the return value is written into the pixel. If the byte array ends before\r\n\t * the full rectangle is written, the function returns. The data in the byte\r\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\r\n\t * on the byte array before or after the pixels are read.\r\n\t *\r\n\t * @param rect           Specifies the rectangular region of the BitmapData\r\n\t *                       object.\r\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\r\n\t *                       unmultiplied pixel values to be used in the\r\n\t *                       rectangular region.\r\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\r\n\t *                   enough data to fill the area of the <code>rect</code>\r\n\t *                   rectangle. The method fills as many pixels as possible\r\n\t *                   before throwing the exception.\r\n\t * @throws TypeError The rect or inputByteArray are null.\r\n\t */\r\n\tpublic setPixels(rect:Rectangle, inputByteArray:ByteArray)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tinputByteArray.position = 0;\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\r\n\r\n\t\t\t\tthis._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Unlocks an image so that any objects that reference the BitmapData object,\r\n\t * such as Bitmap objects, are updated when this BitmapData object changes.\r\n\t * To improve performance, use this method along with the <code>lock()</code>\r\n\t * method before and after numerous calls to the <code>setPixel()</code> or\r\n\t * <code>setPixel32()</code> method.\r\n\t *\r\n\t * @param changeRect The area of the BitmapData object that has changed. If\r\n\t *                   you do not specify a value for this parameter, the\r\n\t *                   entire area of the BitmapData object is considered\r\n\t *                   changed.\r\n\t */\r\n\tpublic unlock()\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = false;\r\n\r\n\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\t\tthis._imageData = null;\r\n\t}\r\n\r\n\tprivate _copyPixels(bmpd:BitmapData, sourceRect:Rectangle, destRect:Rectangle);\r\n\tprivate _copyPixels(bmpd:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\r\n\tprivate _copyPixels(bmpd:any, sourceRect:Rectangle, destRect:Rectangle)\r\n\t{\r\n\r\n\t\tif (bmpd instanceof BitmapData) {\r\n\t\t\tthis._context.drawImage(bmpd.canvas, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\r\n\t\t} else if (bmpd instanceof HTMLImageElement) {\r\n\t\t\tthis._context.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _draw(source:BitmapData, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean);\r\n\tprivate _draw(source:HTMLElement, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean);\r\n\tprivate _draw(source:any, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean)\r\n\t{\r\n\t\tif (source instanceof BitmapData) {\r\n\t\t\tthis._context.save();\r\n\r\n\t\t\tif (matrix != null)\r\n\t\t\t\tthis._context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\r\n\r\n\t\t\tif (clipRect != null)\r\n\t\t\t\tthis._context.drawImage(source.canvas, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\r\n\t\t\telse\r\n\t\t\t\tthis._context.drawImage(source.canvas, 0, 0);\r\n\r\n\t\t\tthis._context.restore();\r\n\r\n\t\t} else if (source instanceof HTMLElement) {\r\n\t\t\tthis._context.save();\r\n\r\n\t\t\tif (matrix != null)\r\n\t\t\t\tthis._context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\r\n\r\n\t\t\tif (clipRect != null)\r\n\t\t\t\tthis._context.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\r\n\t\t\telse\r\n\t\t\t\tthis._context.drawImage(source, 0, 0);\r\n\r\n\t\t\tthis._context.restore();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _fillRect(rect:Rectangle, color:number)\r\n\t{\r\n\t\tif (color == 0x0 && this._transparent) {\r\n\t\t\tthis._context.clearRect(rect.x, rect.y, rect.width, rect.height);\r\n\t\t} else {\r\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\t\tif (this._transparent)\r\n\t\t\t\tthis._context.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\r\n\t\t\telse\r\n\t\t\t\tthis._context.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\r\n\r\n\t\t\tthis._context.fillRect(rect.x, rect.y, rect.width, rect.height);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {ImageData}\r\n\t */\r\n\tpublic get imageData():ImageData\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\treturn this._imageData;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {HTMLCanvasElement}\r\n\t */\r\n\tpublic get canvas()\r\n\t{\r\n\t\treturn this._imageCanvas;\r\n\t}\r\n}\r\n\r\nexport = BitmapData;",
    "/**\r\n * A class that provides constant values for visual blend mode effects. These\r\n * constants are used in the following:\r\n * <ul>\r\n *   <li> The <code>blendMode</code> property of the\r\n * flash.display.DisplayObject class.</li>\r\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\r\n * method of the flash.display.BitmapData class</li>\r\n * </ul>\r\n */\r\nclass BlendMode\r\n{\r\n\t/**\r\n\t * Adds the values of the constituent colors of the display object to the\r\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\r\n\t * commonly used for animating a lightening dissolve between two objects.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\r\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\r\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\r\n\t */\r\n\tpublic static ADD:string = \"add\";\r\n\r\n\t/**\r\n\t * Applies the alpha value of each pixel of the display object to the\r\n\t * background. This requires the <code>blendMode</code> property of the\r\n\t * parent display object be set to\r\n\t * <code>away.base.BlendMode.LAYER</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static ALPHA:string = \"alpha\";\r\n\r\n\t/**\r\n\t * Selects the darker of the constituent colors of the display object and the\r\n\t * colors of the background(the colors with the smaller values). This\r\n\t * setting is commonly used for superimposing type.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\r\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static DARKEN:string = \"darken\";\r\n\r\n\t/**\r\n\t * Compares the constituent colors of the display object with the colors of\r\n\t * its background, and subtracts the darker of the values of the two\r\n\t * constituent colors from the lighter value. This setting is commonly used\r\n\t * for more vibrant colors.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\r\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\r\n\t */\r\n\tpublic static DIFFERENCE:string = \"difference\";\r\n\r\n\t/**\r\n\t * Erases the background based on the alpha value of the display object. This\r\n\t * process requires that the <code>blendMode</code> property of the parent\r\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static ERASE:string = \"erase\";\r\n\r\n\t/**\r\n\t * Adjusts the color of each pixel based on the darkness of the display\r\n\t * object. If the display object is lighter than 50% gray, the display object\r\n\t * and background colors are screened, which results in a lighter color. If\r\n\t * the display object is darker than 50% gray, the colors are multiplied,\r\n\t * which results in a darker color. This setting is commonly used for shading\r\n\t * effects.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static HARDLIGHT:string = \"hardlight\";\r\n\r\n\t/**\r\n\t * Inverts the background.\r\n\t */\r\n\tpublic static INVERT:string = \"invert\";\r\n\r\n\t/**\r\n\t * Forces the creation of a transparency group for the display object. This\r\n\t * means that the display object is precomposed in a temporary buffer before\r\n\t * it is processed further. The precomposition is done automatically if the\r\n\t * display object is precached by means of bitmap caching or if the display\r\n\t * object is a display object container that has at least one child object\r\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static LAYER:string = \"layer\";\r\n\r\n\t/**\r\n\t * Selects the lighter of the constituent colors of the display object and\r\n\t * the colors of the background(the colors with the larger values). This\r\n\t * setting is commonly used for superimposing type.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\r\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static LIGHTEN:string = \"lighten\";\r\n\r\n\t/**\r\n\t * Multiplies the values of the display object constituent colors by the\r\n\t * constituent colors of the background color, and normalizes by dividing by\r\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\r\n\t * shadows and depth effects.\r\n\t *\r\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\r\n\t * display object and the corresponding color of the pixel in the background\r\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\r\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\r\n\t * shade than the color of the display object or the color of the\r\n\t * background.</p>\r\n\t */\r\n\tpublic static MULTIPLY:string = \"multiply\";\r\n\r\n\t/**\r\n\t * The display object appears in front of the background. Pixel values of the\r\n\t * display object override the pixel values of the background. Where the\r\n\t * display object is transparent, the background is visible.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * Adjusts the color of each pixel based on the darkness of the background.\r\n\t * If the background is lighter than 50% gray, the display object and\r\n\t * background colors are screened, which results in a lighter color. If the\r\n\t * background is darker than 50% gray, the colors are multiplied, which\r\n\t * results in a darker color. This setting is commonly used for shading\r\n\t * effects.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static OVERLAY:string = \"overlay\";\r\n\r\n\t/**\r\n\t * Multiplies the complement(inverse) of the display object color by the\r\n\t * complement of the background color, resulting in a bleaching effect. This\r\n\t * setting is commonly used for highlights or to remove black areas of the\r\n\t * display object.\r\n\t */\r\n\tpublic static SCREEN:string = \"screen\";\r\n\r\n\t/**\r\n\t * Uses a shader to define the blend between objects.\r\n\t *\r\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\r\n\t * automatically sets the display object's <code>blendMode</code> property to\r\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\r\n\t * set to <code>BlendMode.SHADER</code> without first setting the\r\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\r\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\r\n\t * <code>blendShader</code> property is set(which sets the\r\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\r\n\t * later the value of the <code>blendMode</code> property is changed, the\r\n\t * blend mode can be reset to use the blend shader simply by setting the\r\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\r\n\t * <code>blendShader</code> property does not need to be set again except to\r\n\t * change the shader that's used to define the blend mode.</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static SHADER:string = \"shader\";\r\n\r\n\t/**\r\n\t * Subtracts the values of the constituent colors in the display object from\r\n\t * the values of the background color, applying a floor of 0. This setting is\r\n\t * commonly used for animating a darkening dissolve between two objects.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\r\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\r\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\r\n\t */\r\n\tpublic static SUBTRACT:string = \"subtract\";\r\n}\r\n\r\nexport = BlendMode;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nclass AbstractMethodError extends Error\r\n{\r\n\t/**\r\n\t * Create a new AbstractMethodError.\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\r\n\t}\r\n}\r\n\r\nexport = AbstractMethodError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nclass ArgumentError extends Error\r\n{\r\n\t/**\r\n\t * Create a new ArgumentError.\r\n\t *\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"ArgumentError\", id);\r\n\t}\r\n}\r\n\r\nexport = ArgumentError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass DocumentError extends Error\r\n{\r\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\r\n\r\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\r\n\t{\r\n\t\tsuper(message, id);\r\n\t}\r\n}\r\n\r\nexport = DocumentError;",
    "class Error\r\n{\r\n\r\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\r\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\r\n\tprivate _name:string = '';  // Contains the name of the Error object.\r\n\r\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\r\n\t{\r\n\r\n\t\tthis._messsage = message;\r\n\t\tthis._name = name;\r\n\t\tthis._errorID = id;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get message():string\r\n\t{\r\n\r\n\t\treturn this._messsage;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set message(value:string)\r\n\t{\r\n\r\n\t\tthis._messsage = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get name():string\r\n\t{\r\n\r\n\t\treturn this._name;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set name(value:string)\r\n\t{\r\n\r\n\t\tthis._name = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get errorID():number\r\n\t{\r\n\r\n\t\treturn this._errorID;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = Error;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nclass PartialImplementationError extends Error\r\n{\r\n\t/**\r\n\t * Create a new AbstractMethodError.\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(dependency:string = '', id:number = 0)\r\n\t{\r\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\r\n\t}\r\n}\r\n\r\nexport = PartialImplementationError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * RangeError is thrown when an index is accessed out of range of the number of\r\n * available indices on an Array.\r\n */\r\nclass RangeError extends Error\r\n{\r\n\t/**\r\n\t * Create a new RangeError.\r\n\t *\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"RangeError\", id);\r\n\t}\r\n}\r\n\r\nexport = RangeError;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * @class away.events.AssetEvent\r\n */\r\nclass AssetEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ASSET_RENAME:string = 'assetRename';\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\r\n\r\n\tprivate _asset:IAsset;\r\n\tprivate _prevName:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(type:string, asset:IAsset = null, prevName:string = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._asset = asset;\r\n\t\tthis._prevName = prevName || (this._asset? this._asset.name : null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get asset():IAsset\r\n\t{\r\n\t\treturn this._asset;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetPrevName():string\r\n\t{\r\n\t\treturn this._prevName;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn <Event> new AssetEvent(this.type, this.asset, this.assetPrevName);\r\n\t}\r\n}\r\n\r\nexport = AssetEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Base class for dispatching events\r\n*\r\n* @class away.events.EventDispatcher\r\n*\r\n*/\r\nclass EventDispatcher\r\n{\r\n\tprivate listeners:Array<Array<Function>> = new Array<Array<Function>>();\r\n\tprivate target:any;\r\n\r\n\tconstructor(target:any = null)\r\n\t{\r\n\t\tthis.target = target || this;\r\n\t}\r\n\r\n\t/**\r\n\t * Add an event listener\r\n\t * @method addEventListener\r\n\t * @param {String} Name of event to add a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tif (this.listeners[ type ] === undefined)\r\n\t\t\tthis.listeners[ type ] = new Array<Function>();\r\n\r\n\t\tif (this.getEventListenerIndex(type, listener) === -1)\r\n\t\t\tthis.listeners[ type ].push(listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an event listener\r\n\t * @method removeEventListener\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tvar index:number = this.getEventListenerIndex(type, listener);\r\n\r\n\t\tif (index !== -1)\r\n\t\t\tthis.listeners[ type ].splice(index, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatch an event\r\n\t * @method dispatchEvent\r\n\t * @param {Event} Event to dispatch\r\n\t */\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\tvar listenerArray:Array<Function> = this.listeners[ event.type ];\r\n\r\n\t\tif (listenerArray !== undefined) {\r\n\t\t\tvar l:number = listenerArray.length;\r\n\r\n\t\t\tevent.target = this.target;\r\n\r\n\t\t\tfor (var i:number = 0; i < l; i++)\r\n\t\t\t\tlistenerArray[i](event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get Event Listener Index in array. Returns -1 if no listener is added\r\n\t * @method getEventListenerIndex\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tprivate getEventListenerIndex(type:string, listener:Function):number\r\n\t{\r\n\t\tif (this.listeners[ type ] !== undefined) {\r\n\t\t\tvar a:Array<Function> = this.listeners[ type ];\r\n\t\t\tvar l:number = a.length;\r\n\r\n\t\t\tfor (var i:number = 0; i < l; i++)\r\n\t\t\t\tif (listener == a[i])\r\n\t\t\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * check if an object has an event listener assigned to it\r\n\t * @method hasListener\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic hasEventListener(type:string, listener?:Function):boolean\r\n\t{\r\n\t\tif (listener != null) {\r\n\t\t\treturn ( this.getEventListenerIndex(type, listener) !== -1 );\r\n\t\t} else {\r\n\t\t\tif (this.listeners[ type ] !== undefined)\r\n\t\t\t\treturn ( this.listeners[ type ].length > 0 );\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = EventDispatcher;",
    "class Event\r\n{\r\n\r\n\tpublic static COMPLETE:string = 'complete';\r\n\tpublic static OPEN:string = 'open';\r\n\r\n\tpublic static ENTER_FRAME:string = 'enterFrame';\r\n\tpublic static EXIT_FRAME:string = 'exitFrame';\r\n\r\n\r\n\tpublic static RESIZE:string = \"resize\";\r\n\tpublic static ERROR:string = \"error\";\r\n\tpublic static CHANGE:string = \"change\";\r\n\r\n\t/**\r\n\t * Type of event\r\n\t * @property type\r\n\t * @type String\r\n\t */\r\n\tpublic type:string = undefined;\r\n\r\n\t/**\r\n\t * Reference to target object\r\n\t * @property target\r\n\t * @type Object\r\n\t */\r\n\tpublic target:any = undefined;\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current event.\r\n\t * @return An exact duplicate of the current event.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new Event(this.type);\r\n\t}\r\n}\r\n\r\nexport = Event;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * @class away.events.HTTPStatusEvent\r\n */\r\nclass HTTPStatusEvent extends Event\r\n{\r\n\r\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\r\n\r\n\tpublic status:number;\r\n\r\n\tconstructor(type:string, status:number = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.status = status;\r\n\r\n\t}\r\n}\r\n\r\nexport = HTTPStatusEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass IOErrorEvent extends Event\r\n{\r\n\r\n\tpublic static IO_ERROR:string = \"ioError\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t}\r\n}\r\n\r\nexport = IOErrorEvent;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LoaderEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a resource and all of its dependencies is retrieved.\r\n\t */\r\n\tpublic static RESOURCE_COMPLETE:string = \"resourceComplete\";\r\n\r\n\tprivate _url:string;\r\n\tprivate _content:IAsset;\r\n\tprivate _assets:IAsset[];\r\n\r\n\t/**\r\n\t * Create a new LoaderEvent object.\r\n\t *\r\n\t * @param type The event type.\r\n\t * @param url The url of the loaded resource.\r\n\t * @param assets The assets of the loaded resource.\r\n\t */\r\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._url = url;\r\n\t\tthis._content = content;\r\n\t\tthis._assets = assets;\r\n\t}\r\n\r\n\t/**\r\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\r\n\t */\r\n\tpublic get content():IAsset\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The url of the loaded resource.\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n\r\n\t/**\r\n\t * The error string on loadError.\r\n\t */\r\n\tpublic get assets():IAsset[]\r\n\t{\r\n\t\treturn this._assets;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current event.\r\n\t * @return An exact duplicate of the current event.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn <Event> new LoaderEvent(this.type, this._url, this._content, this._assets);\r\n\t}\r\n}\r\n\r\nexport = LoaderEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ParserEvent extends Event\r\n{\r\n\tprivate _message:string;\r\n\r\n\t/**\r\n\t * Dispatched when parsing of an asset completed.\r\n\t */\r\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\r\n\r\n\t/**\r\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\r\n\t * incorrectly formatted.)\r\n\t */\r\n\tpublic static PARSE_ERROR:string = 'parseError';\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\r\n\t * This is an internal event that should rarely (if ever) be listened for by\r\n\t * external classes.\r\n\t */\r\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\r\n\r\n\r\n\tconstructor(type:string, message:string = '')\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._message = message;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\r\n\t */\r\n\tpublic get message():string\r\n\t{\r\n\t\treturn this._message;\r\n\t}\r\n\r\n\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new ParserEvent(this.type, this.message);\r\n\t}\r\n}\r\n\r\nexport = ParserEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ProgressEvent extends Event\r\n{\r\n\tpublic static PROGRESS:string = \"progress\";\r\n\r\n\tpublic bytesLoaded:number;\r\n\r\n\tpublic bytesTotal:number;\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = ProgressEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nclass ProjectionEvent extends Event\r\n{\r\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\r\n\r\n\tprivate _projection:IProjection;\r\n\r\n\tconstructor(type:string, projection:IProjection)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis._projection = projection;\r\n\t}\r\n\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n}\r\n\r\nexport = ProjectionEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass TimerEvent extends Event\r\n{\r\n\r\n\tpublic static TIMER:string = \"timer\";\r\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t}\r\n}\r\n\r\nexport = TimerEvent",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n/**\r\n * A Box object is an area defined by its position, as indicated by its\r\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\r\n * height and depth.\r\n *\r\n *\r\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n * <code>height</code> <code>depth</code> properties of the Box class are\r\n * independent of each other; changing the value of one property has no effect\r\n * on the others. However, the <code>right</code>, <code>bottom</code> and\r\n * <code>back</code> properties are integrally related to those six\r\n * properties. For example, if you change the value of the <code>right</code>\r\n * property, the value of the <code>width</code> property changes; if you\r\n * change the <code>bottom</code> property, the value of the\r\n * <code>height</code> property changes. </p>\r\n *\r\n * <p>The following methods and properties use Box objects:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Box()</code> constructor to create a\r\n * Box object.</p>\r\n *\r\n * <p><b>Note:</b> The Box class does not define a cubic Shape\r\n * display object.\r\n */\r\nclass Box\r\n{\r\n\tprivate _size:Vector3D;\r\n\tprivate _bottomRightBack:Vector3D;\r\n\tprivate _topLeftFront:Vector3D;\r\n\r\n\t/**\r\n\t * The height of the box, in pixels. Changing the <code>height</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The width of the box, in pixels. Changing the <code>width</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic depth:number;\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>x</code> property of a Box object has no\r\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>x</code> property is equal to the value of the\r\n\t * <code>left</code> property.</p>\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>y</code> property of a Box object has no\r\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>y</code> property is equal to the value of the\r\n\t * <code>top</code> property.</p>\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>z</code> property of a Box object has no\r\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>z</code> property is equal to the value of the\r\n\t * <code>front</code> property.</p>\r\n\t */\r\n\tpublic z:number\r\n\r\n\t/**\r\n\t * The sum of the <code>z</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get back():number\r\n\t{\r\n\t\treturn this.z + this.depth;\r\n\t}\r\n\r\n\tpublic set back(val:number)\r\n\t{\r\n\t\tthis.depth = val - this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>y</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get bottom():number\r\n\t{\r\n\t\treturn this.y + this.height;\r\n\t}\r\n\r\n\tpublic set bottom(val:number)\r\n\t{\r\n\t\tthis.height = val - this.y;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Box object's bottom-right corner, determined by the\r\n\t * values of the <code>right</code> and <code>bottom</code> properties.\r\n\t */\r\n\tpublic get bottomRightBack():Vector3D\r\n\t{\r\n\t\tif (this._bottomRightBack == null)\r\n\t\t\tthis._bottomRightBack = new Vector3D();\r\n\r\n\t\tthis._bottomRightBack.x = this.x + this.width;\r\n\t\tthis._bottomRightBack.y = this.y + this.height;\r\n\t\tthis._bottomRightBack.z = this.z + this.depth;\r\n\r\n\t\treturn this._bottomRightBack;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\r\n\t * the <code>front</code> property of a Box object has no effect on the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\r\n\t * properties. However it does affect the <code>depth</code> property,\r\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\r\n\t * <code>depth</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get front():number\r\n\t{\r\n\t\treturn this.z;\r\n\t}\r\n\r\n\tpublic set front(val:number)\r\n\t{\r\n\t\tthis.depth += this.z - val;\r\n\t\tthis.z = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\r\n\t * <code>left</code> property of a Box object has no effect on the\r\n\t * <code>y</code> and <code>height</code> properties. However it does affect\r\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\r\n\t * does <i>not</i> affect the <code>width</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get left():number\r\n\t{\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\tpublic set left(val:number)\r\n\t{\r\n\t\tthis.width += this.x - val;\r\n\t\tthis.x = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>x</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic get right():number\r\n\t{\r\n\t\treturn this.x + this.width;\r\n\t}\r\n\r\n\tpublic set right(val:number)\r\n\t{\r\n\t\tthis.width = val - this.x;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the Box object, expressed as a Vector3D object with the\r\n\t * values of the <code>width</code>, <code>height</code> and\r\n\t * <code>depth</code> properties.\r\n\t */\r\n\tpublic get size():Vector3D\r\n\t{\r\n\t\tif (this._size == null)\r\n\t\t\tthis._size = new Vector3D();\r\n\r\n\t\tthis._size.x = this.width;\r\n\t\tthis._size.y = this.height;\r\n\t\tthis._size.z = this.depth;\r\n\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\r\n\t * the <code>top</code> property of a Box object has no effect on the\r\n\t * <code>x</code> and <code>width</code> properties. However it does affect\r\n\t * the <code>height</code> property, whereas changing the <code>y</code>\r\n\t * value does <i>not</i> affect the <code>height</code> property.\r\n\t *\r\n\t * <p>The value of the <code>top</code> property is equal to the value of the\r\n\t * <code>y</code> property.</p>\r\n\t */\r\n\tpublic get top():number\r\n\t{\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\tpublic set top(val:number)\r\n\t{\r\n\t\tthis.height += (this.y - val);\r\n\t\tthis.y = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Box object's top-left-front corner, determined by the\r\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\r\n\t */\r\n\tpublic get topLeftFront():Vector3D\r\n\t{\r\n\t\tif (this._topLeftFront == null)\r\n\t\t\tthis._topLeftFront = new Vector3D();\r\n\r\n\t\tthis._topLeftFront.x = this.x;\r\n\t\tthis._topLeftFront.y = this.y;\r\n\t\tthis._topLeftFront.z = this.z;\r\n\r\n\t\treturn this._topLeftFront;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Box object with the top-left-front corner specified by the\r\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\r\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\r\n\t * parameters. If you call this public without parameters, a box with\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\r\n\t *\r\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param width  The width of the box, in pixels.\r\n\t * @param height The height of the box, in pixels.\r\n\t * @param depth The depth of the box, in pixels.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.depth = depth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Box object with the same values for the <code>x</code>,\r\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\r\n\t * and <code>depth</code> properties as the original Box object.\r\n\t *\r\n\t * @return A new Box object with the same values for the <code>x</code>,\r\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t *         <code>height</code> and <code>depth</code> properties as the\r\n\t *         original Box object.\r\n\t */\r\n\tpublic clone():Box\r\n\t{\r\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified position is contained within the cubic\r\n\t * region defined by this Box object.\r\n\t *\r\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\r\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\r\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\r\n\t * @return A value of <code>true</code> if the Box object contains the\r\n\t *         specified position; otherwise <code>false</code>.\r\n\t */\r\n\tpublic contains(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified position is contained within the cubic\r\n\t * region defined by this Box object. This method is similar to the\r\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\r\n\t * object as a parameter.\r\n\t *\r\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\r\n\t *                 <i>z</i> coordinates.\r\n\t * @return A value of <code>true</code> if the Box object contains the\r\n\t *         specified position; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsPoint(position:Vector3D):boolean\r\n\t{\r\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the Box object specified by the <code>box</code>\r\n\t * parameter is contained within this Box object. A Box object is said to\r\n\t * contain another if the second Box object falls entirely within the\r\n\t * boundaries of the first.\r\n\t *\r\n\t * @param box The Box object being checked.\r\n\t * @return A value of <code>true</code> if the Box object that you specify\r\n\t *         is contained by this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsBox(box:Box):boolean\r\n\t{\r\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of box data from the source Box object into the calling\r\n\t * Box object.\r\n\t *\r\n\t * @param sourceBox The Box object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceBox:Box)\r\n\t{\r\n\t\tthis.x = sourceBox.x;\r\n\t\tthis.y = sourceBox.y;\r\n\t\tthis.z = sourceBox.z;\r\n\t\tthis.width = sourceBox.width;\r\n\t\tthis.height = sourceBox.height;\r\n\t\tthis.depth = sourceBox.depth;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toCompare</code>\r\n\t * parameter is equal to this Box object. This method compares the\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties of an object against\r\n\t * the same properties of this Box object.\r\n\t *\r\n\t * @param toCompare The box to compare to this Box object.\r\n\t * @return A value of <code>true</code> if the object has exactly the same\r\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\r\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\r\n\t *         properties as this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic equals(toCompare:Box):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Box object by the specified amounts, in\r\n\t * pixels. The center point of the Box object stays the same, and its\r\n\t * size increases to the left and right by the <code>dx</code> value, to\r\n\t * the top and the bottom by the <code>dy</code> value, and to\r\n\t * the front and the back by the <code>dz</code> value.\r\n\t *\r\n\t * @param dx The value to be added to the left and the right of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           width and position of the box:\r\n\t * @param dy The value to be added to the top and the bottom of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           height and position of the box:\r\n\t * @param dz The value to be added to the front and the back of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           depth and position of the box:\r\n\t */\r\n\tpublic inflate(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tthis.x -= dx/2;\r\n\t\tthis.y -= dy/2;\r\n\t\tthis.z -= dz/2;\r\n\t\tthis.width += dx/2;\r\n\t\tthis.height += dy/2;\r\n\t\tthis.depth += dz/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Box object. This method is similar to the\r\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\r\n\t * a parameter.\r\n\t *\r\n\t * <p>The following two code examples give the same result:</p>\r\n\t *\r\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\r\n\t *              increase the horizontal dimension of the Box object.\r\n\t *              The <code>y</code> property is used to increase the vertical\r\n\t *              dimension of the Box object.\r\n\t *              The <code>z</code> property is used to increase the\r\n\t *              longitudinal dimension of the Box object.\r\n\t */\r\n\tpublic inflatePoint(delta:Vector3D)\r\n\t{\r\n\t\tthis.x -= delta.x/2;\r\n\t\tthis.y -= delta.y/2;\r\n\t\tthis.z -= delta.z/2;\r\n\t\tthis.width += delta.x/2;\r\n\t\tthis.height += delta.y/2;\r\n\t\tthis.depth += delta.z/2;\r\n\t}\r\n\r\n\t/**\r\n\t * If the Box object specified in the <code>toIntersect</code> parameter\r\n\t * intersects with this Box object, returns the area of intersection\r\n\t * as a Box object. If the boxes do not intersect, this method returns an\r\n\t * empty Box object with its properties set to 0.\r\n\t *\r\n\t * @param toIntersect The Box object to compare against to see if it\r\n\t *                    intersects with this Box object.\r\n\t * @return A Box object that equals the area of intersection. If the\r\n\t *         boxes do not intersect, this method returns an empty Box\r\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\r\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\r\n\t *         <code>depth</code> properties set to 0.\r\n\t */\r\n\tpublic intersection(toIntersect:Box):Box\r\n\t{\r\n\t\tif (this.intersects(toIntersect)) {\r\n\t\t\tvar i:Box = new Box();\r\n\r\n\t\t\tif (this.x > toIntersect.x) {\r\n\t\t\t\ti.x = this.x;\r\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\r\n\r\n\t\t\t\tif (i.width > this.width)\r\n\t\t\t\t\ti.width = this.width;\r\n\t\t\t} else {\r\n\t\t\t\ti.x = toIntersect.x;\r\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\r\n\r\n\t\t\t\tif (i.width > toIntersect.width)\r\n\t\t\t\t\ti.width = toIntersect.width;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.y > toIntersect.y) {\r\n\t\t\t\ti.y = this.y;\r\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\r\n\r\n\t\t\t\tif (i.height > this.height)\r\n\t\t\t\t\ti.height = this.height;\r\n\t\t\t} else {\r\n\t\t\t\ti.y = toIntersect.y;\r\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\r\n\r\n\t\t\t\tif (i.height > toIntersect.height)\r\n\t\t\t\t\ti.height = toIntersect.height;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this.z > toIntersect.z) {\r\n\t\t\t\ti.z = this.z;\r\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\r\n\r\n\t\t\t\tif (i.depth > this.depth)\r\n\t\t\t\t\ti.depth = this.depth;\r\n\t\t\t} else {\r\n\t\t\t\ti.z = toIntersect.z;\r\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\r\n\r\n\t\t\t\tif (i.depth > toIntersect.depth)\r\n\t\t\t\t\ti.depth = toIntersect.depth;\r\n\t\t\t}\r\n\r\n\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn new Box();\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Box object. This method checks the\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code>, and <code>depth</code> properties of the specified\r\n\t * Box object to see if it intersects with this Box object.\r\n\t *\r\n\t * @param toIntersect The Box object to compare against this Box object.\r\n\t * @return A value of <code>true</code> if the specified object intersects\r\n\t *         with this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic intersects(toIntersect:Box):boolean\r\n\t{\r\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif (this.containsPoint(position))\r\n\t\t\treturn 0;\r\n\r\n\t\tvar halfExtentsX:number = this.width/2;\r\n\t\tvar halfExtentsY:number = this.height/2;\r\n\t\tvar halfExtentsZ:number = this.depth/2;\r\n\r\n\t\tvar centerX:number = this.x + halfExtentsX;\r\n\t\tvar centerY:number = this.y + halfExtentsY;\r\n\t\tvar centerZ:number = this.z + halfExtentsZ;\r\n\r\n\t\tvar px:number = position.x - centerX;\r\n\t\tvar py:number = position.y - centerY;\r\n\t\tvar pz:number = position.z - centerZ;\r\n\r\n\t\tvar vx:number = direction.x\r\n\t\tvar vy:number = direction.y\r\n\t\tvar vz:number = direction.z;\r\n\r\n\t\tvar ix:number;\r\n\t\tvar iy:number;\r\n\t\tvar iz:number;\r\n\t\tvar rayEntryDistance:number;\r\n\r\n\t\t// ray-plane tests\r\n\t\tvar intersects:boolean;\r\n\t\tif (vx < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsX - px )/vx;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 1;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vx > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsX - px )/vx;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = -1;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vy < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsY - py )/vy;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 1;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vy > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsY - py )/vy;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = -1;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vz < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsZ - pz )/vz;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 1;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vz > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsZ - pz )/vz;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = -1;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn intersects? rayEntryDistance : -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\r\n\t *\r\n\t * @param point The point for which to find the closest point on the Box\r\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\r\n\t * @return\r\n\t */\r\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\r\n\t{\r\n\t\tvar p:number;\r\n\r\n\t\tif (target == null)\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\tp = point.x;\r\n\t\tif (p < this.x)\r\n\t\t\tp = this.x;\r\n\t\tif (p > this.x + this.width)\r\n\t\t\tp = this.x + this.width;\r\n\t\ttarget.x = p;\r\n\r\n\t\tp = point.y;\r\n\t\tif (p < this.y + this.height)\r\n\t\t\tp = this.y + this.height;\r\n\t\tif (p > this.y)\r\n\t\t\tp = this.y;\r\n\t\ttarget.y = p;\r\n\r\n\t\tp = point.z;\r\n\t\tif (p < this.z)\r\n\t\t\tp = this.z;\r\n\t\tif (p > this.z + this.depth)\r\n\t\t\tp = this.z + this.depth;\r\n\t\ttarget.z = p;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not this Box object is empty.\r\n\t *\r\n\t * @return A value of <code>true</code> if the Box object's width, height or\r\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\r\n\t */\r\n\tpublic isEmpty():boolean\r\n\t{\r\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Box object, as determined by its\r\n\t * top-left-front corner, by the specified amounts.\r\n\t *\r\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\r\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\r\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\r\n\t */\r\n\tpublic offset(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t\tthis.z += dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Box object using a Vector3D object as a\r\n\t * parameter. This method is similar to the <code>Box.offset()</code>\r\n\t * method, except that it takes a Vector3D object as a parameter.\r\n\t *\r\n\t * @param position A Vector3D object to use to offset this Box object.\r\n\t */\r\n\tpublic offsetPosition(position:Vector3D)\r\n\t{\r\n\t\tthis.x += position.x;\r\n\t\tthis.y += position.y;\r\n\t\tthis.z += position.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\r\n\t * width, height or depth is less than or equal to 0.\r\n\t *\r\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\r\n\t * <code>depth</code> properties to 0.</p>\r\n\t *\r\n\t */\r\n\tpublic setEmpty()\r\n\t{\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.z = 0;\r\n\t\tthis.width = 0;\r\n\t\tthis.height = 0;\r\n\t\tthis.depth = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Box to the specified values\r\n\t *\r\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param widtha  The width of the box, in pixels.\r\n\t * @param heighta The height of the box, in pixels.\r\n\t * @param deptha  The depth of the box, in pixels.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number)\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.z = za;\r\n\t\tthis.width = widtha;\r\n\t\tthis.height = heighta;\r\n\t\tthis.depth = deptha;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds and returns a string that lists the horizontal, vertical and\r\n\t * longitudinal positions and the width, height and depth of the Box object.\r\n\t *\r\n\t * @return A string listing the value of each of the following properties of\r\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\r\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Adds two boxes together to create a new Box object, by filling\r\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\r\n\t *\r\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\r\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\r\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\r\n\t *\r\n\t * @param toUnion A Box object to add to this Box object.\r\n\t * @return A new Box object that is the union of the two boxes.\r\n\t */\r\n\tpublic union(toUnion:Box):Box\r\n\t{\r\n\t\tvar u:Box = new Box();\r\n\r\n\t\tif (this.x < toUnion.x) {\r\n\t\t\tu.x = this.x;\r\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\r\n\r\n\t\t\tif (u.width < this.width)\r\n\t\t\t\tu.width = this.width;\r\n\t\t} else {\r\n\t\t\tu.x = toUnion.x;\r\n\t\t\tu.width = this.x - toUnion.x + this.width;\r\n\r\n\t\t\tif (u.width < toUnion.width)\r\n\t\t\t\tu.width = toUnion.width;\r\n\t\t}\r\n\r\n\t\tif (this.y < toUnion.y) {\r\n\t\t\tu.y = this.y;\r\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\r\n\r\n\t\t\tif (u.height < this.height)\r\n\t\t\t\tu.height = this.height;\r\n\t\t} else {\r\n\t\t\tu.y = toUnion.y;\r\n\t\t\tu.height = this.y - toUnion.y + this.height;\r\n\r\n\t\t\tif (u.height < toUnion.height)\r\n\t\t\t\tu.height = toUnion.height;\r\n\t\t}\r\n\r\n\t\tif (this.z < toUnion.z) {\r\n\t\t\tu.z = this.z;\r\n\t\t\tu.depth = toUnion.z - this.z + toUnion.depth;\r\n\r\n\t\t\tif (u.depth < this.depth)\r\n\t\t\t\tu.depth = this.depth;\r\n\t\t} else {\r\n\t\t\tu.z = toUnion.z;\r\n\t\t\tu.depth = this.z - toUnion.z + this.depth;\r\n\r\n\t\t\tif (u.depth < toUnion.depth)\r\n\t\t\t\tu.depth = toUnion.depth;\r\n\t\t}\r\n\r\n\t\treturn u;\r\n\t}\r\n}\r\n\r\nexport = Box;",
    "import ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\n\r\n/**\r\n * The ColorTransform class lets you adjust the color values in a display\r\n * object. The color adjustment or <i>color transformation</i> can be applied\r\n * to all four channels: red, green, blue, and alpha transparency.\r\n *\r\n * <p>When a ColorTransform object is applied to a display object, a new value\r\n * for each color channel is calculated like this:</p>\r\n *\r\n * <ul>\r\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\r\n * <code>redOffset</code></li>\r\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\r\n * <code>greenOffset</code></li>\r\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\r\n * <code>blueOffset</code></li>\r\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\r\n * <code>alphaOffset</code></li>\r\n * </ul>\r\n *\r\n * <p>If any of the color channel values is greater than 255 after the\r\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\r\n *\r\n * <p>You can use ColorTransform objects in the following ways:</p>\r\n *\r\n * <ul>\r\n *   <li>In the <code>colorTransform</code> parameter of the\r\n * <code>colorTransform()</code> method of the BitmapData class</li>\r\n *   <li>As the <code>colorTransform</code> property of a Transform object\r\n * (which can be used as the <code>transform</code> property of a display\r\n * object)</li>\r\n * </ul>\r\n *\r\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\r\n * a ColorTransform object before you can call the methods of the\r\n * ColorTransform object.</p>\r\n *\r\n * <p>Color transformations do not apply to the background color of a movie\r\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\r\n * that are attached to the movie clip.</p>\r\n */\r\nclass ColorTransform\r\n{\r\n\t/**\r\n\t * A decimal value that is multiplied with the alpha transparency channel\r\n\t * value.\r\n\t *\r\n\t * <p>If you set the alpha transparency value of a display object directly by\r\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\r\n\t * affects the value of the <code>alphaMultiplier</code> property of that\r\n\t * display object's <code>transform.colorTransform</code> property.</p>\r\n\t */\r\n\tpublic alphaMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the alpha transparency channel\r\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\r\n\t * value.\r\n\t */\r\n\tpublic alphaOffset:number;\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the blue channel value.\r\n\t */\r\n\tpublic blueMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the blue channel value after it\r\n\t * has been multiplied by the <code>blueMultiplier</code> value.\r\n\t */\r\n\tpublic blueOffset:number;\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the green channel value.\r\n\t */\r\n\tpublic greenMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the green channel value after\r\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\r\n\t */\r\n\tpublic greenOffset:number;\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the red channel value.\r\n\t */\r\n\tpublic redMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the red channel value after it\r\n\t * has been multiplied by the <code>redMultiplier</code> value.\r\n\t */\r\n\tpublic redOffset:number;\r\n\r\n\t/**\r\n\t * The RGB color value for a ColorTransform object.\r\n\t *\r\n\t * <p>When you set this property, it changes the three color offset values\r\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\r\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\r\n\t * multiplier values(<code>redMultiplier</code>,\r\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\r\n\t * alpha transparency multiplier and offset values do not change.</p>\r\n\t *\r\n\t * <p>When you pass a value for this property, use the format\r\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\r\n\t * hexadecimal digits that specify the offset of each color component. The 0x\r\n\t * tells the ActionScript compiler that the number is a hexadecimal\r\n\t * value.</p>\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn((this.redOffset << 16) | ( this.greenOffset << 8) | this.blueOffset);\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\r\n\r\n\t\tthis.redOffset = argb[1];  //(value >> 16) & 0xFF;\r\n\t\tthis.greenOffset = argb[2];  //(value >> 8) & 0xFF;\r\n\t\tthis.blueOffset = argb[3];  //value & 0xFF;\r\n\r\n\t\tthis.redMultiplier = 0;\r\n\t\tthis.greenMultiplier = 0;\r\n\t\tthis.blueMultiplier = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a ColorTransform object for a display object with the specified\r\n\t * color channel values and alpha values.\r\n\t *\r\n\t * @param redMultiplier   The value for the red multiplier, in the range from\r\n\t *                        0 to 1.\r\n\t * @param greenMultiplier The value for the green multiplier, in the range\r\n\t *                        from 0 to 1.\r\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\r\n\t *                        from 0 to 1.\r\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\r\n\t *                        the range from 0 to 1.\r\n\t * @param redOffset       The offset value for the red color channel, in the\r\n\t *                        range from -255 to 255.\r\n\t * @param greenOffset     The offset value for the green color channel, in\r\n\t *                        the range from -255 to 255.\r\n\t * @param blueOffset      The offset for the blue color channel value, in the\r\n\t *                        range from -255 to 255.\r\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\r\n\t *                        the range from -255 to 255.\r\n\t */\r\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\r\n\t{\r\n\t\tthis.redMultiplier = redMultiplier;\r\n\t\tthis.greenMultiplier = greenMultiplier;\r\n\t\tthis.blueMultiplier = blueMultiplier;\r\n\t\tthis.alphaMultiplier = alphaMultiplier;\r\n\t\tthis.redOffset = redOffset;\r\n\t\tthis.greenOffset = greenOffset;\r\n\t\tthis.blueOffset = blueOffset;\r\n\t\tthis.alphaOffset = alphaOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Concatenates the ColorTranform object specified by the <code>second</code>\r\n\t * parameter with the current ColorTransform object and sets the current\r\n\t * object as the result, which is an additive combination of the two color\r\n\t * transformations. When you apply the concatenated ColorTransform object,\r\n\t * the effect is the same as applying the <code>second</code> color\r\n\t * transformation after the <i>original</i> color transformation.\r\n\t *\r\n\t * @param second The ColorTransform object to be combined with the current\r\n\t *               ColorTransform object.\r\n\t */\r\n\tpublic concat(second:ColorTransform):void\r\n\t{\r\n\t\tthis.redMultiplier += second.redMultiplier;\r\n\t\tthis.greenMultiplier += second.greenMultiplier;\r\n\t\tthis.blueMultiplier += second.blueMultiplier;\r\n\t\tthis.alphaMultiplier += second.alphaMultiplier;\r\n\t}\r\n}\r\n\r\nexport = ColorTransform;",
    "/**\r\n* MathConsts provides some commonly used mathematical constants\r\n*/\r\nclass MathConsts\r\n{\r\n\t/**\r\n\t * The amount to multiply with when converting radians to degrees.\r\n\t */\r\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\r\n\r\n\t/**\r\n\t * The amount to multiply with when converting degrees to radians.\r\n\t */\r\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\r\n}\r\n\r\nexport = MathConsts;",
    "import Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n\r\n/**\r\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\r\n */\r\nclass Matrix3DUtils\r\n{\r\n\t/**\r\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\r\n\t */\r\n\tpublic static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\r\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\r\n\r\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\r\n\r\n\t/**\r\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\r\n\t *\r\n\t * @param    quarternion    The quarterion object to convert.\r\n\t */\r\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar x:number = quarternion.x;\r\n\t\tvar y:number = quarternion.y;\r\n\t\tvar z:number = quarternion.z;\r\n\t\tvar w:number = quarternion.w;\r\n\r\n\t\tvar xx:number = x*x;\r\n\t\tvar xy:number = x*y;\r\n\t\tvar xz:number = x*z;\r\n\t\tvar xw:number = x*w;\r\n\r\n\t\tvar yy:number = y*y;\r\n\t\tvar yz:number = y*z;\r\n\t\tvar yw:number = y*w;\r\n\r\n\t\tvar zz:number = z*z;\r\n\t\tvar zw:number = z*w;\r\n\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\traw[0] = 1 - 2*(yy + zz);\r\n\t\traw[1] = 2*(xy + zw);\r\n\t\traw[2] = 2*(xz - yw);\r\n\t\traw[4] = 2*(xy - zw);\r\n\t\traw[5] = 1 - 2*(xx + zz);\r\n\t\traw[6] = 2*(yz + xw);\r\n\t\traw[8] = 2*(xz + yw);\r\n\t\traw[9] = 2*(yz - xw);\r\n\t\traw[10] = 1 - 2*(xx + yy);\r\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (m) {\r\n\t\t\tm.copyRawDataFrom(raw);\r\n\t\t\treturn m;\r\n\t\t} else\r\n\t\t\treturn new Matrix3D(raw);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the forward vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The forward vector\r\n\t */\r\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\r\n\t\tif (v === null) {\r\n\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\t}\r\n\r\n\t\tm.copyColumnTo(2, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the up vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The up vector\r\n\t */\r\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\tif (v === null) {\r\n\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\t}\r\n\r\n\t\tm.copyColumnTo(1, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the right vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The right vector\r\n\t */\r\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\r\n\t\tif (v === null) {\r\n\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\t}\r\n\r\n\t\tm.copyColumnTo(0, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\r\n\t */\r\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\r\n\t{\r\n\t\tvar r1:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar r2:number[] = m2.rawData;\r\n\t\tm1.copyRawDataTo(r1);\r\n\r\n\t\tfor (var i:number = 0; i < 16; ++i) {\r\n\t\t\tif (r1[i] != r2[i])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D)\r\n\t{\r\n\t\tvar dirN:Vector3D;\r\n\t\tvar upN:Vector3D;\r\n\t\tvar lftN:Vector3D;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tlftN = dir.crossProduct(up);\r\n\t\tlftN.normalize();\r\n\r\n\t\tupN = lftN.crossProduct(dir);\r\n\t\tupN.normalize();\r\n\t\tdirN = dir.clone();\r\n\t\tdirN.normalize();\r\n\r\n\t\traw[0] = lftN.x;\r\n\t\traw[1] = upN.x;\r\n\t\traw[2] = -dirN.x;\r\n\t\traw[3] = 0.0;\r\n\r\n\t\traw[4] = lftN.y;\r\n\t\traw[5] = upN.y;\r\n\t\traw[6] = -dirN.y;\r\n\t\traw[7] = 0.0;\r\n\r\n\t\traw[8] = lftN.z;\r\n\t\traw[9] = upN.z;\r\n\t\traw[10] = -dirN.z;\r\n\t\traw[11] = 0.0;\r\n\r\n\t\traw[12] = -lftN.dotProduct(pos);\r\n\t\traw[13] = -upN.dotProduct(pos);\r\n\t\traw[14] = dirN.dotProduct(pos);\r\n\t\traw[15] = 1.0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n\r\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tif (target === null)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\r\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar ab2:number = -2*a*b;\r\n\t\tvar ac2:number = -2*a*c;\r\n\t\tvar bc2:number = -2*b*c;\r\n\t\t// reflection matrix\r\n\t\trawData[0] = 1 - 2*a*a;\r\n\t\trawData[4] = ab2;\r\n\t\trawData[8] = ac2;\r\n\t\trawData[12] = -2*a*d;\r\n\t\trawData[1] = ab2;\r\n\t\trawData[5] = 1 - 2*b*b;\r\n\t\trawData[9] = bc2;\r\n\t\trawData[13] = -2*b*d;\r\n\t\trawData[2] = ac2;\r\n\t\trawData[6] = bc2;\r\n\t\trawData[10] = 1 - 2*c*c;\r\n\t\trawData[14] = -2*c*d;\r\n\t\trawData[3] = 0;\r\n\t\trawData[7] = 0;\r\n\t\trawData[11] = 0;\r\n\t\trawData[15] = 1;\r\n\t\ttarget.copyRawDataFrom(rawData);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\r\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar d:number = raw[12];\r\n\t\tvar h:number = raw[13];\r\n\t\tvar l:number = raw[14];\r\n\t\tvar p:number = raw[15];\r\n\r\n\t\tvar x:number = vector.x;\r\n\t\tvar y:number = vector.y;\r\n\t\tvar z:number = vector.z;\r\n\t\tresult.x = a * x + b * y + c * z + d;\r\n\t\tresult.y = e * x + f * y + g * z + h;\r\n\t\tresult.z = i * x + j * y + k * z + l;\r\n\t\tresult.w = m * x + n * y + o * z + p;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar x:number = vector.x;\r\n\t\tvar y:number = vector.y;\r\n\t\tvar z:number = vector.z;\r\n\t\tresult.x = a * x + b * y + c * z;\r\n\t\tresult.y = e * x + f * y + g * z;\r\n\t\tresult.z = i * x + j * y + k * z;\r\n\t\tresult.w = m * x + n * y + o * z;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif(!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\ttransform.copyColumnTo(3, result);\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar outIndex:number = 0;\r\n\t\tvar length:number = vin.length;\r\n\t\tfor(var index:number = 0; index<length; index+=3) {\r\n\t\t\tvar x:number = vin[index];\r\n\t\t\tvar y:number = vin[index+1];\r\n\t\t\tvar z:number = vin[index+2];\r\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\r\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\r\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Matrix3DUtils;",
    "import Orientation3D\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\r\nimport Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\n\r\nclass Matrix3D\r\n{\r\n\t/**\r\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\r\n\t *\r\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\r\n\t * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\r\n\t */\r\n\tpublic rawData:number[];\r\n\r\n\t/**\r\n\t * Creates a Matrix3D object.\r\n\t */\r\n\tconstructor(v:number[] = null)\r\n\t{\r\n\t\tif (v != null && v.length == 16)\r\n\t\t\tthis.rawData = v.concat();\r\n\t\telse\r\n\t\t\tthis.rawData = [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\r\n\t}\r\n\r\n\t/**\r\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\r\n\t */\r\n\tpublic append(lhs:Matrix3D)\r\n\t{\r\n\t\tvar m111:number = this.rawData[0], m121:number = this.rawData[4], m131:number = this.rawData[8], m141:number = this.rawData[12], m112:number = this.rawData[1], m122:number = this.rawData[5], m132:number = this.rawData[9], m142:number = this.rawData[13], m113:number = this.rawData[2], m123:number = this.rawData[6], m133:number = this.rawData[10], m143:number = this.rawData[14], m114:number = this.rawData[3], m124:number = this.rawData[7], m134:number = this.rawData[11], m144:number = this.rawData[15], m211:number = lhs.rawData[0], m221:number = lhs.rawData[4], m231:number = lhs.rawData[8], m241:number = lhs.rawData[12], m212:number = lhs.rawData[1], m222:number = lhs.rawData[5], m232:number = lhs.rawData[9], m242:number = lhs.rawData[13], m213:number = lhs.rawData[2], m223:number = lhs.rawData[6], m233:number = lhs.rawData[10], m243:number = lhs.rawData[14], m214:number = lhs.rawData[3], m224:number = lhs.rawData[7], m234:number = lhs.rawData[11], m244:number = lhs.rawData[15];\r\n\r\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\r\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\r\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\r\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\r\n\r\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\r\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\r\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\r\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\r\n\r\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\r\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\r\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\r\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\r\n\r\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\r\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\r\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\r\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental rotation to a Matrix3D object.\r\n\t */\r\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null )\r\n\t{\r\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\r\n\r\n\t\tthis.append(m);\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\r\n\t */\r\n\tpublic appendScale(xScale:number, yScale:number, zScale:number)\r\n\t{\r\n\t\tthis.append(new Matrix3D([ xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0 ]));\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\r\n\t */\r\n\tpublic appendTranslation(x:number, y:number, z:number)\r\n\t{\r\n\t\tthis.rawData[12] += x;\r\n\t\tthis.rawData[13] += y;\r\n\t\tthis.rawData[14] += z;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\r\n\t */\r\n\tpublic clone():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.rawData.slice(0));\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\r\n\t */\r\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (column) {\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\r\n\t */\r\n\tpublic copyColumnTo(column:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (column) {\r\n\t\t\tcase 0:\r\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\r\n\t */\r\n\tpublic copyFrom(sourceMatrix3D:Matrix3D)\r\n\t{\r\n\t\tvar len:number = sourceMatrix3D.rawData.length;\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tthis.rawData[c] = sourceMatrix3D.rawData[c];\r\n\t}\r\n\r\n\tpublic copyRawDataFrom(vector:number[], index:number = 0, transpose:boolean = false):void\r\n\t{\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\r\n\t\tvar len:number = vector.length - index;\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tthis.rawData[c] = vector[c + index];\r\n\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\t}\r\n\r\n\tpublic copyRawDataTo(vector:number[], index:number = 0, transpose:boolean = false)\r\n\t{\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\r\n\t\tvar len:number = this.rawData.length\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tvector[c + index ] = this.rawData[c];\r\n\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\r\n\t */\r\n\tpublic copyRowFrom(row:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (row) {\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\r\n\t */\r\n\tpublic copyRowTo(row:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (row) {\r\n\t\t\tcase 0:\r\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies this Matrix3D object into a destination Matrix3D object.\r\n\t */\r\n\tpublic copyToMatrix3D(dest:Matrix3D)\r\n\t{\r\n\t\tdest.rawData = this.rawData.slice(0);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\r\n\t */\r\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\r\n\t{\r\n\t\tvar q:Quaternion;\r\n\r\n\t\t// Initial Tests - Not OK\r\n\r\n\t\tvar vec:Vector3D[] = [];\r\n\t\tvar m = this.clone();\r\n\t\tvar mr = m.rawData;\r\n\r\n\t\tvar pos:Vector3D = new Vector3D(mr[12], mr[13], mr[14]);\r\n\t\tmr[12] = 0;\r\n\t\tmr[13] = 0;\r\n\t\tmr[14] = 0;\r\n\r\n\t\tvar scale:Vector3D = new Vector3D();\r\n\r\n\t\tscale.x = Math.sqrt(mr[0]*mr[0] + mr[1]*mr[1] + mr[2]*mr[2]);\r\n\t\tscale.y = Math.sqrt(mr[4]*mr[4] + mr[5]*mr[5] + mr[6]*mr[6]);\r\n\t\tscale.z = Math.sqrt(mr[8]*mr[8] + mr[9]*mr[9] + mr[10]*mr[10]);\r\n\r\n\t\tif (mr[0]*(mr[5]*mr[10] - mr[6]*mr[9]) - mr[1]*(mr[4]*mr[10] - mr[6]*mr[8]) + mr[2]*(mr[4]*mr[9] - mr[5]*mr[8]) < 0)\r\n\t\t\tscale.z = -scale.z;\r\n\r\n\t\tmr[0] /= scale.x;\r\n\t\tmr[1] /= scale.x;\r\n\t\tmr[2] /= scale.x;\r\n\t\tmr[4] /= scale.y;\r\n\t\tmr[5] /= scale.y;\r\n\t\tmr[6] /= scale.y;\r\n\t\tmr[8] /= scale.z;\r\n\t\tmr[9] /= scale.z;\r\n\t\tmr[10] /= scale.z;\r\n\r\n\t\tvar rot = new Vector3D();\r\n\r\n\t\tswitch (orientationStyle) {\r\n\t\t\tcase Orientation3D.AXIS_ANGLE:\r\n\r\n\t\t\t\trot.w = Math.acos((mr[0] + mr[5] + mr[10] - 1)/2);\r\n\r\n\t\t\t\tvar len:number = Math.sqrt((mr[6] - mr[9])*(mr[6] - mr[9]) + (mr[8] - mr[2])*(mr[8] - mr[2]) + (mr[1] - mr[4])*(mr[1] - mr[4]));\r\n\t\t\t\trot.x = (mr[6] - mr[9])/len;\r\n\t\t\t\trot.y = (mr[8] - mr[2])/len;\r\n\t\t\t\trot.z = (mr[1] - mr[4])/len;\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase Orientation3D.QUATERNION:\r\n\r\n\t\t\t\tvar tr = mr[0] + mr[5] + mr[10];\r\n\r\n\t\t\t\tif (tr > 0) {\r\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\r\n\r\n\t\t\t\t\trot.x = (mr[6] - mr[9])/(4*rot.w);\r\n\t\t\t\t\trot.y = (mr[8] - mr[2])/(4*rot.w);\r\n\t\t\t\t\trot.z = (mr[1] - mr[4])/(4*rot.w);\r\n\t\t\t\t} else if ((mr[0] > mr[5]) && (mr[0] > mr[10])) {\r\n\t\t\t\t\trot.x = Math.sqrt(1 + mr[0] - mr[5] - mr[10])/2;\r\n\r\n\t\t\t\t\trot.w = (mr[6] - mr[9])/(4*rot.x);\r\n\t\t\t\t\trot.y = (mr[1] + mr[4])/(4*rot.x);\r\n\t\t\t\t\trot.z = (mr[8] + mr[2])/(4*rot.x);\r\n\t\t\t\t} else if (mr[5] > mr[10]) {\r\n\t\t\t\t\trot.y = Math.sqrt(1 + mr[5] - mr[0] - mr[10])/2;\r\n\r\n\t\t\t\t\trot.x = (mr[1] + mr[4])/(4*rot.y);\r\n\t\t\t\t\trot.w = (mr[8] - mr[2])/(4*rot.y);\r\n\t\t\t\t\trot.z = (mr[6] + mr[9])/(4*rot.y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trot.z = Math.sqrt(1 + mr[10] - mr[0] - mr[5])/2;\r\n\r\n\t\t\t\t\trot.x = (mr[8] + mr[2])/(4*rot.z);\r\n\t\t\t\t\trot.y = (mr[6] + mr[9])/(4*rot.z);\r\n\t\t\t\t\trot.w = (mr[1] - mr[4])/(4*rot.z);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase Orientation3D.EULER_ANGLES:\r\n\r\n\t\t\t\trot.y = Math.asin(-mr[2]);\r\n\r\n\t\t\t\t//var cos:number = Math.cos(rot.y);\r\n\r\n\t\t\t\tif (mr[2] != 1 && mr[2] != -1) {\r\n\t\t\t\t\trot.x = Math.atan2(mr[6], mr[10]);\r\n\t\t\t\t\trot.z = Math.atan2(mr[1], mr[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trot.z = 0;\r\n\t\t\t\t\trot.x = Math.atan2(mr[4], mr[5]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tvec.push(pos);\r\n\t\tvec.push(rot);\r\n\t\tvec.push(scale);\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\r\n\t * coordinate to another.\r\n\t */\r\n\tpublic deltaTransformVector(v:Vector3D):Vector3D\r\n\t{\r\n\t\tvar x:number = v.x;\r\n\t\tvar y:number = v.y;\r\n\t\tvar z:number = v.z;\r\n\r\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11]));\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the current matrix to an identity or unit matrix.\r\n\t */\r\n\tpublic identity()\r\n\t{\r\n\t\tthis.rawData = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\r\n\t}\r\n\r\n\t/**\r\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\r\n\t */\r\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tfor (var i:number = 0; i < 16; ++i)\r\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\r\n\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\r\n\t */\r\n\tpublic interpolateTo(toMat:Matrix3D, percent:number)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 16; ++i)\r\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts the current matrix.\r\n\t */\r\n\tpublic invert():boolean\r\n\t{\r\n\t\tvar d = this.determinant;\r\n\t\tvar invertable = Math.abs(d) > 0.00000000001;\r\n\r\n\t\tif (invertable) {\r\n\t\t\td = 1/d;\r\n\t\t\tvar m11:number = this.rawData[0];\r\n\t\t\tvar m21:number = this.rawData[4];\r\n\t\t\tvar m31:number = this.rawData[8];\r\n\t\t\tvar m41:number = this.rawData[12];\r\n\t\t\tvar m12:number = this.rawData[1];\r\n\t\t\tvar m22:number = this.rawData[5];\r\n\t\t\tvar m32:number = this.rawData[9];\r\n\t\t\tvar m42:number = this.rawData[13];\r\n\t\t\tvar m13:number = this.rawData[2];\r\n\t\t\tvar m23:number = this.rawData[6];\r\n\t\t\tvar m33:number = this.rawData[10];\r\n\t\t\tvar m43:number = this.rawData[14];\r\n\t\t\tvar m14:number = this.rawData[3];\r\n\t\t\tvar m24:number = this.rawData[7];\r\n\t\t\tvar m34:number = this.rawData[11];\r\n\t\t\tvar m44:number = this.rawData[15];\r\n\r\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\r\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\r\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\r\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\r\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\r\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\r\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\r\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\r\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\r\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\r\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\r\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\r\n\t\t}\r\n\t\treturn invertable;\r\n\t}\r\n\r\n\t/* TODO implement pointAt\r\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\r\n\t {\r\n\t }\r\n\t */\r\n\r\n\t/**\r\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\r\n\t */\r\n\tpublic prepend(rhs:Matrix3D)\r\n\t{\r\n\t\tvar m111:number = rhs.rawData[0], m121:number = rhs.rawData[4], m131:number = rhs.rawData[8], m141:number = rhs.rawData[12], m112:number = rhs.rawData[1], m122:number = rhs.rawData[5], m132:number = rhs.rawData[9], m142:number = rhs.rawData[13], m113:number = rhs.rawData[2], m123:number = rhs.rawData[6], m133:number = rhs.rawData[10], m143:number = rhs.rawData[14], m114:number = rhs.rawData[3], m124:number = rhs.rawData[7], m134:number = rhs.rawData[11], m144:number = rhs.rawData[15], m211:number = this.rawData[0], m221:number = this.rawData[4], m231:number = this.rawData[8], m241:number = this.rawData[12], m212:number = this.rawData[1], m222:number = this.rawData[5], m232:number = this.rawData[9], m242:number = this.rawData[13], m213:number = this.rawData[2], m223:number = this.rawData[6], m233:number = this.rawData[10], m243:number = this.rawData[14], m214:number = this.rawData[3], m224:number = this.rawData[7], m234:number = this.rawData[11], m244:number = this.rawData[15];\r\n\r\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\r\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\r\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\r\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\r\n\r\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\r\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\r\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\r\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\r\n\r\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\r\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\r\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\r\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\r\n\r\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\r\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\r\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\r\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental rotation to a Matrix3D object.\r\n\t */\r\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null )\r\n\t{\r\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\r\n\r\n\t\t/*\r\n\t\t if ( pivot != null )\r\n\t\t {\r\n\t\t var p:Vector3D = pivot;\r\n\t\t m.appendTranslation( p.x, p.y, p.z );\r\n\t\t }\r\n\t\t */\r\n\t\tthis.prepend(m);\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\r\n\t */\r\n\tpublic prependScale(xScale:number, yScale:number, zScale:number)\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tthis.prepend(new Matrix3D([ xScale, 0, 0, 0, 0, yScale, 0, 0, 0, 0, zScale, 0, 0, 0, 0, 1 ]));\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\r\n\t */\r\n\tpublic prependTranslation(x:number, y:number, z:number)\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tvar m = new Matrix3D();\r\n\t\tm.position = new Vector3D(x, y, z);\r\n\t\tthis.prepend(m);\r\n\t}\r\n\r\n\t// TODO orientationStyle\r\n\t/**\r\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\r\n\t */\r\n\tpublic recompose(components:Vector3D[]):boolean\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tif (components.length < 3) return false\r\n\r\n\t\t//components[2].x == 0 || components[2].y == 0 || components[2].z == 0) return false;\r\n\r\n\t\tthis.identity();\r\n\t\tthis.appendScale(components[2].x, components[2].y, components[2].z);\r\n\r\n\t\tvar angle:number;\r\n\t\tangle = -components[1].x;\r\n\t\tthis.append(new Matrix3D([1, 0, 0, 0, 0, Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0 , 0]));\r\n\t\tangle = -components[1].y;\r\n\t\tthis.append(new Matrix3D([Math.cos(angle), 0, Math.sin(angle), 0, 0, 1, 0, 0, -Math.sin(angle), 0, Math.cos(angle), 0, 0, 0, 0, 0]));\r\n\t\tangle = -components[1].z;\r\n\t\tthis.append(new Matrix3D([Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]));\r\n\r\n\t\tthis.position = components[0];\r\n\t\tthis.rawData[15] = 1;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic transformVector(v:Vector3D):Vector3D\r\n\t{\r\n\t\tif (v == null)\r\n\t\t\treturn new Vector3D();\r\n\r\n\t\tvar x:number = v.x;\r\n\t\tvar y:number = v.y;\r\n\t\tvar z:number = v.z;\r\n\r\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15]));\r\n\t}\r\n\r\n\t/**\r\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\r\n\t */\r\n\tpublic transformVectors(vin:number[], vout:number[])\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\r\n\r\n\t\twhile (i + 3 <= vin.length) {\r\n\t\t\tx = vin[i];\r\n\t\t\ty = vin[i + 1];\r\n\t\t\tz = vin[i + 2];\r\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\r\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\r\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\r\n\t\t\ti += 3;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\r\n\t */\r\n\tpublic transpose()\r\n\t{\r\n\r\n\t\t// Initial Tests - OK\r\n\r\n\t\tvar oRawData:number[] = this.rawData.slice(0);\r\n\r\n\t\tthis.rawData[1] = oRawData[4];\r\n\t\tthis.rawData[2] = oRawData[8];\r\n\t\tthis.rawData[3] = oRawData[12];\r\n\t\tthis.rawData[4] = oRawData[1];\r\n\t\tthis.rawData[6] = oRawData[9];\r\n\t\tthis.rawData[7] = oRawData[13];\r\n\t\tthis.rawData[8] = oRawData[2];\r\n\t\tthis.rawData[9] = oRawData[6];\r\n\t\tthis.rawData[11] = oRawData[14];\r\n\t\tthis.rawData[12] = oRawData[3];\r\n\t\tthis.rawData[13] = oRawData[7];\r\n\t\tthis.rawData[14] = oRawData[11];\r\n\t}\r\n\r\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\r\n\t{\r\n\r\n\t\t// internal class use by rotations which have been tested\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tvar rad = degrees*( Math.PI/180 );\r\n\t\tvar c:number = Math.cos(rad);\r\n\t\tvar s:number = Math.sin(rad);\r\n\t\tvar t:number = 1 - c;\r\n\t\tvar tmp1:number, tmp2:number;\r\n\r\n\t\tm.rawData[0] = c + x*x*t;\r\n\t\tm.rawData[5] = c + y*y*t;\r\n\t\tm.rawData[10] = c + z*z*t;\r\n\r\n\t\ttmp1 = x*y*t;\r\n\t\ttmp2 = z*s;\r\n\t\tm.rawData[1] = tmp1 + tmp2;\r\n\t\tm.rawData[4] = tmp1 - tmp2;\r\n\t\ttmp1 = x*z*t;\r\n\t\ttmp2 = y*s;\r\n\t\tm.rawData[8] = tmp1 + tmp2;\r\n\t\tm.rawData[2] = tmp1 - tmp2;\r\n\t\ttmp1 = y*z*t;\r\n\t\ttmp2 = x*s;\r\n\t\tm.rawData[9] = tmp1 - tmp2;\r\n\t\tm.rawData[6] = tmp1 + tmp2;\r\n\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * [read-only] A Number that determines whether a matrix is invertible.\r\n\t */\r\n\tpublic get determinant():number\r\n\t{\r\n\t\treturn    ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\r\n\t}\r\n\r\n\t/**\r\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\r\n\t * transformation's frame of reference.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.rawData[12], this.rawData[13], this.rawData[14]);\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis.rawData[12] = value.x;\r\n\t\tthis.rawData[13] = value.y;\r\n\t\tthis.rawData[14] = value.z;\r\n\t}\r\n\r\n\tpublic toFixed(decimalPlace:number):string\r\n\t{\r\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\r\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\r\n\t}\r\n}\r\n\r\nexport = Matrix3D;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\n\r\n/**\r\n * The Matrix class represents a transformation matrix that determines how to\r\n * map points from one coordinate space to another. You can perform various\r\n * graphical transformations on a display object by setting the properties of\r\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\r\n * property of a Transform object, and then applying that Transform object as\r\n * the <code>transform</code> property of the display object. These\r\n * transformation functions include translation(<i>x</i> and <i>y</i>\r\n * repositioning), rotation, scaling, and skewing.\r\n *\r\n * <p>Together these types of transformations are known as <i>affine\r\n * transformations</i>. Affine transformations preserve the straightness of\r\n * lines while transforming, so that parallel lines stay parallel.</p>\r\n *\r\n * <p>To apply a transformation matrix to a display object, you create a\r\n * Transform object, set its <code>matrix</code> property to the\r\n * transformation matrix, and then set the <code>transform</code> property of\r\n * the display object to the Transform object. Matrix objects are also used as\r\n * parameters of some methods, such as the following:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\r\n *   <li>The <code>beginBitmapFill()</code> method,\r\n * <code>beginGradientFill()</code> method, or\r\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\r\n * </ul>\r\n *\r\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\r\n * contents:</p>\r\n *\r\n * <p>In traditional transformation matrixes, the <code>u</code>,\r\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\r\n * The Matrix class can only operate in two-dimensional space, so it always\r\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\r\n * and that the property value <code>w</code> is 1.0. The effective values of\r\n * the matrix are as follows:</p>\r\n *\r\n * <p>You can get and set the values of all six of the other properties in a\r\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\r\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\r\n *\r\n * <p>The Matrix class supports the four major types of transformations:\r\n * translation, scaling, rotation, and skewing. You can set three of these\r\n * transformations by using specialized methods, as described in the following\r\n * table: </p>\r\n *\r\n * <p>Each transformation function alters the current matrix properties so\r\n * that you can effectively combine multiple transformations. To do this, you\r\n * call more than one transformation function before applying the matrix to\r\n * its display object target(by using the <code>transform</code> property of\r\n * that display object).</p>\r\n *\r\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\r\n * before you can call the methods of the Matrix object.</p>\r\n */\r\nclass Matrix\r\n{\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\r\n\t * when scaling or rotating an image.\r\n\t */\r\n\tpublic a:number;\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\r\n\t * when rotating or skewing an image.\r\n\t */\r\n\tpublic b:number;\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\r\n\t * when rotating or skewing an image.\r\n\t */\r\n\tpublic c:number;\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\r\n\t * when scaling or rotating an image.\r\n\t */\r\n\tpublic d:number;\r\n\r\n\t/**\r\n\t * The distance by which to translate each point along the <i>x</i> axis.\r\n\t */\r\n\tpublic tx:number;\r\n\r\n\t/**\r\n\t * The distance by which to translate each point along the <i>y</i> axis.\r\n\t */\r\n\tpublic ty:number;\r\n\r\n\t/**\r\n\t * Creates a new Matrix object with the specified parameters. In matrix\r\n\t * notation, the properties are organized like this:\r\n\t *\r\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\r\n\t * constructor, it creates an <i>identity matrix</i> with the following\r\n\t * values:</p>\r\n\t *\r\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\r\n\t *\r\n\t * @param a  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when scaling or rotating an image.\r\n\t * @param b  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when rotating or skewing an image.\r\n\t * @param c  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when rotating or skewing an image.\r\n\t * @param d  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when scaling or rotating an image..\r\n\t * @param tx The distance by which to translate each point along the <i>x</i>\r\n\t *           axis.\r\n\t * @param ty The distance by which to translate each point along the <i>y</i>\r\n\t *           axis.\r\n\t */\r\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\r\n\t{\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\r\n\t * copy of the contained object.\r\n\t *\r\n\t * @return A Matrix object.\r\n\t */\r\n\tpublic clone():Matrix\r\n\t{\r\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\r\n\t}\r\n\r\n\t/**\r\n\t * Concatenates a matrix with the current matrix, effectively combining the\r\n\t * geometric effects of the two. In mathematical terms, concatenating two\r\n\t * matrixes is the same as combining them using matrix multiplication.\r\n\t *\r\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\r\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\r\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\r\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\r\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\r\n\t *\r\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\r\n\t * you want to concatenate two matrixes without altering either of the two\r\n\t * source matrixes, first copy the source matrix by using the\r\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\r\n\t *\r\n\t * @param matrix The matrix to be concatenated to the source matrix.\r\n\t */\r\n\tpublic concat(matrix:Matrix):void\r\n\t{\r\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\r\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\r\n\t\tthis.a = a1;\r\n\r\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\r\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\r\n\r\n\t\tthis.c = c1;\r\n\r\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\r\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\r\n\t\tthis.tx = tx1;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\r\n\t * object.\r\n\t *\r\n\t * @param column   The column from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (column > 2) {\r\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\r\n\t\t} else if (column == 0) {\r\n\t\t\tthis.a = vector3D.x;\r\n\t\t\tthis.c = vector3D.y;\r\n\t\t} else if (column == 1) {\r\n\t\t\tthis.b = vector3D.x;\r\n\t\t\tthis.d = vector3D.y;\r\n\t\t} else {\r\n\t\t\tthis.tx = vector3D.x;\r\n\t\t\tthis.ty = vector3D.y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific column of the calling Matrix object into the Vector3D\r\n\t * object. The w element of the Vector3D object will not be changed.\r\n\t *\r\n\t * @param column   The column from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (column > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (column == 0) {\r\n\t\t\tvector3D.x = this.a;\r\n\t\t\tvector3D.y = this.c;\r\n\t\t\tvector3D.z = 0;\r\n\t\t} else if (column == 1) {\r\n\t\t\tvector3D.x = this.b;\r\n\t\t\tvector3D.y = this.d;\r\n\t\t\tvector3D.z = 0;\r\n\t\t} else {\r\n\t\t\tvector3D.x = this.tx;\r\n\t\t\tvector3D.y = this.ty;\r\n\t\t\tvector3D.z = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of the matrix data from the source Point object into the\r\n\t * calling Matrix object.\r\n\t *\r\n\t * @param sourceMatrix The Matrix object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceMatrix:Matrix):void\r\n\t{\r\n\t\tthis.a = sourceMatrix.a;\r\n\t\tthis.b = sourceMatrix.b;\r\n\t\tthis.c = sourceMatrix.c;\r\n\t\tthis.d = sourceMatrix.d;\r\n\t\tthis.tx = sourceMatrix.tx;\r\n\t\tthis.ty = sourceMatrix.ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\r\n\t *\r\n\t * @param row      The row from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (row > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (row == 0) {\r\n\t\t\tthis.a = vector3D.x;\r\n\t\t\tthis.c = vector3D.y;\r\n\t\t} else if (row == 1) {\r\n\t\t\tthis.b = vector3D.x;\r\n\t\t\tthis.d = vector3D.y;\r\n\t\t} else {\r\n\t\t\tthis.tx = vector3D.x;\r\n\t\t\tthis.ty = vector3D.y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\r\n\t * The w element of the Vector3D object will not be changed.\r\n\t *\r\n\t * @param row      The row from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (row > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (row == 0) {\r\n\t\t\tvector3D.x = this.a;\r\n\t\t\tvector3D.y = this.b;\r\n\t\t\tvector3D.z = this.tx;\r\n\t\t} else if (row == 1) {\r\n\t\t\tvector3D.x = this.c;\r\n\t\t\tvector3D.y = this.d;\r\n\t\t\tvector3D.z = this.ty;\r\n\t\t} else {\r\n\t\t\tvector3D.setTo(0, 0, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Includes parameters for scaling, rotation, and translation. When applied\r\n\t * to a matrix it sets the matrix's values based on those parameters.\r\n\t *\r\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\r\n\t * matrix as you would if you applied the <code>identity()</code>,\r\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\r\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\r\n\t * 100, 100)</code> has the same effect as the following:</p>\r\n\t *\r\n\t * @param scaleX   The factor by which to scale horizontally.\r\n\t * @param scaleY   The factor by which scale vertically.\r\n\t * @param rotation The amount to rotate, in radians.\r\n\t * @param tx       The number of pixels to translate(move) to the right\r\n\t *                 along the <i>x</i> axis.\r\n\t * @param ty       The number of pixels to translate(move) down along the\r\n\t *                 <i>y</i> axis.\r\n\t */\r\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\r\n\t{\r\n\t\tthis.a = scaleX;\r\n\t\tthis.d = scaleY;\r\n\t\tthis.b = rotation;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the specific style of matrix expected by the\r\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\r\n\t * methods of the Graphics class. Width and height are scaled to a\r\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\r\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\r\n\t * height.\r\n\t *\r\n\t * <p>For example, consider a gradient with the following\r\n\t * characteristics:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li><code>GradientType.LINEAR</code></li>\r\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\r\n\t * 255]</code></li>\r\n\t *   <li><code>SpreadMethod.PAD</code></li>\r\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The following illustrations show gradients in which the matrix was\r\n\t * defined using the <code>createGradientBox()</code> method with different\r\n\t * parameter settings:</p>\r\n\t *\r\n\t * @param width    The width of the gradient box.\r\n\t * @param height   The height of the gradient box.\r\n\t * @param rotation The amount to rotate, in radians.\r\n\t * @param tx       The distance, in pixels, to translate to the right along\r\n\t *                 the <i>x</i> axis. This value is offset by half of the\r\n\t *                 <code>width</code> parameter.\r\n\t * @param ty       The distance, in pixels, to translate down along the\r\n\t *                 <i>y</i> axis. This value is offset by half of the\r\n\t *                 <code>height</code> parameter.\r\n\t */\r\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\r\n\t{\r\n\t\tthis.a = width/1638.4;\r\n\t\tthis.d = height/1638.4;\r\n\r\n\t\tif (rotation != 0.0) {\r\n\t\t\tvar cos = Math.cos(rotation);\r\n\t\t\tvar sin = Math.sin(rotation);\r\n\r\n\t\t\tthis.b = sin*this.d;\r\n\t\t\tthis.c = -sin*this.a;\r\n\t\t\tthis.a *= cos;\r\n\t\t\tthis.d *= cos;\r\n\t\t} else {\r\n\t\t\tthis.b = this.c = 0;\r\n\t\t}\r\n\r\n\t\tthis.tx = tx + width/2;\r\n\t\tthis.ty = ty + height/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a point in the pretransform coordinate space, returns the\r\n\t * coordinates of that point after the transformation occurs. Unlike the\r\n\t * standard transformation applied using the <code>transformPoint()</code>\r\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\r\n\t * does not consider the translation parameters <code>tx</code> and\r\n\t * <code>ty</code>.\r\n\t *\r\n\t * @param point The point for which you want to get the result of the matrix\r\n\t *              transformation.\r\n\t * @return The point resulting from applying the matrix transformation.\r\n\t */\r\n\tpublic deltaTransformPoint(point:Point):Point\r\n\t{\r\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets each matrix property to a value that causes a null transformation. An\r\n\t * object transformed by applying an identity matrix will be identical to the\r\n\t * original.\r\n\t *\r\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\r\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\r\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\r\n\t * <code>ty</code>=0.</p>\r\n\t *\r\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\r\n\t *\r\n\t */\r\n\tpublic identity():void\r\n\t{\r\n\t\tthis.a = 1;\r\n\t\tthis.b = 0;\r\n\t\tthis.c = 0;\r\n\t\tthis.d = 1;\r\n\t\tthis.tx = 0;\r\n\t\tthis.ty = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the opposite transformation of the original matrix. You can apply\r\n\t * an inverted matrix to an object to undo the transformation performed when\r\n\t * applying the original matrix.\r\n\t */\r\n\tpublic invert():void\r\n\t{\r\n\t\tvar norm = this.a*this.d - this.b*this.c;\r\n\r\n\t\tif (norm == 0) {\r\n\t\t\tthis.a = this.b = this.c = this.d = 0;\r\n\t\t\tthis.tx = -this.tx;\r\n\t\t\tthis.ty = -this.ty;\r\n\t\t} else {\r\n\t\t\tnorm = 1.0/norm;\r\n\t\t\tvar a1 = this.d*norm;\r\n\t\t\tthis.d = this.a*norm;\r\n\t\t\tthis.a = a1;\r\n\t\t\tthis.b *= -norm;\r\n\t\t\tthis.c *= -norm;\r\n\r\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\r\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\r\n\t\t\tthis.tx = tx1;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\r\n\t * copy of the contained object.\r\n\t *\r\n\t * @param matrix The matrix for which you want to get the result of the matrix\r\n\t *               transformation.\r\n\t * @return A Matrix object.\r\n\t */\r\n\tpublic multiply(matrix:Matrix):Matrix\r\n\t{\r\n\t\tvar result = new Matrix();\r\n\r\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\r\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\r\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\r\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\r\n\r\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\r\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a rotation transformation to the Matrix object.\r\n\t *\r\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\r\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\r\n\t * Matrix object. In matrix notation, this is the same as concatenating the\r\n\t * current matrix with the following:</p>\r\n\t *\r\n\t * @param angle The rotation angle in radians.\r\n\t */\r\n\tpublic rotate(angle:number):void\r\n\t{\r\n\t\tvar cos = Math.cos(angle);\r\n\t\tvar sin = Math.sin(angle);\r\n\r\n\t\tvar a1 = this.a*cos - this.b*sin;\r\n\t\tthis.b = this.a*sin + this.b*cos;\r\n\t\tthis.a = a1;\r\n\r\n\t\tvar c1 = this.c*cos - this.d*sin;\r\n\t\tthis.d = this.c*sin + this.d*cos;\r\n\t\tthis.c = c1;\r\n\r\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\r\n\t\tthis.ty = this.tx*sin + this.ty*cos;\r\n\t\tthis.tx = tx1;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\r\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\r\n\t * <code>sy</code>.\r\n\t *\r\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\r\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\r\n\t * is the same as concatenating the current matrix with the following\r\n\t * matrix:</p>\r\n\t *\r\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\r\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\r\n\t */\r\n\tpublic scale(sx:number, sy:number):void\r\n\t{\r\n\t\tthis.a *= sx;\r\n\t\tthis.b *= sy;\r\n\r\n\t\tthis.c *= sx;\r\n\t\tthis.d *= sy;\r\n\r\n\t\tthis.tx *= sx;\r\n\t\tthis.ty *= sy;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Matrix to the specified values.\r\n\t *\r\n\t * @param a  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when scaling or rotating an image.\r\n\t * @param b  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when rotating or skewing an image.\r\n\t * @param c  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when rotating or skewing an image.\r\n\t * @param d  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when scaling or rotating an image..\r\n\t * @param tx The distance by which to translate each point along the <i>x</i>\r\n\t *           axis.\r\n\t * @param ty The distance by which to translate each point along the <i>y</i>\r\n\t *           axis.\r\n\t */\r\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\r\n\t{\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a text value listing the properties of the Matrix object.\r\n\t *\r\n\t * @return A string containing the values of the properties of the Matrix\r\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\r\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the result of applying the geometric transformation represented by\r\n\t * the Matrix object to the specified point.\r\n\t *\r\n\t * @param point The point for which you want to get the result of the Matrix\r\n\t *              transformation.\r\n\t * @return The point resulting from applying the Matrix transformation.\r\n\t */\r\n\tpublic transformPoint(point:Point):Point\r\n\t{\r\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\r\n\t}\r\n\r\n\t/**\r\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\r\n\t * by the <code>dx</code> and <code>dy</code> parameters.\r\n\t *\r\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\r\n\t *           pixels.\r\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\r\n\t */\r\n\tpublic translate(dx:number, dy:number):void\r\n\t{\r\n\t\tthis.tx += dx;\r\n\t\tthis.ty += dy;\r\n\t}\r\n}\r\n\r\nexport = Matrix;",
    "/**\r\n * A Quaternion object which can be used to represent rotations.\r\n */\r\nclass Orientation3D\r\n{\r\n\t/**\r\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\r\n\r\n\t/**\r\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\r\n\r\n\t/**\r\n\t * The quaternion orientation uses complex numbers.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static QUATERNION:string = \"quaternion\";\r\n}\r\n\r\nexport = Orientation3D;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\n/**\r\n * <p>The PerspectiveProjection class provides an easy way to assign or modify\r\n * the perspective transformations of a display object and all of its\r\n * children. For more complex or custom perspective transformations, use the\r\n * Matrix3D class. While the PerspectiveProjection class provides basic\r\n * three-dimensional presentation properties, the Matrix3D class provides more\r\n * detailed control over the three-dimensional presentation of display objects.\r\n * </p>\r\n *\r\n * <p>Projection is a way of representing a three-dimensional object in a\r\n * two-dimensional space, like a cube projected onto a computer screen.\r\n * Perspective projection uses a viewing frustum (a rectangular pyramid) to\r\n * model and project a three-dimensional world and its objects on the screen.\r\n * The viewing frustum becomes increasingly wider as it moves further from the\r\n * origin of the viewpoint. The origin of the viewpoint could be a camera or\r\n * the eyes of an observer facing the screen. The projected perspective\r\n * produces the illusion of three dimensions with depth and distance, where\r\n * the objects closer to the screen appear larger than the objects farther\r\n * from the screen.</p>\r\n *\r\n * <p>A default PerspectiveProjection object is a framework defined for\r\n * perspective transformation of the root object, based on the field of view\r\n * and aspect ratio (dimensions) of the stage. The projection center, the\r\n * vanishing point, is set to the center of the stage, which means the\r\n * three-dimensional display objects disappear toward the center of the stage\r\n * as they move back in the z axis. The default viewpoint is at point (0,0)\r\n * looking down the positive z axis. The y-axis points down toward the bottom\r\n * of the screen. You can gain access to the root display object's perspective\r\n * projection settings and change the field of view and projection center\r\n * properties of the perspectiveProjection property through the root object's\r\n * <code>DisplayObject.transform</code> property.</p>\r\n *\r\n * <p>You can also set a different perspective projection setting for a\r\n * display object through the parent's perspective projection. First, create a\r\n * PerspectiveProjection object and set its <code>fieldOfView</code> and\r\n * <code>projectionCenter</code> properties. Next, assign the\r\n * PerspectiveProjection object to the parent display object using the\r\n * <code>DisplayObject.transform</code> property. The specified projection\r\n * matrix and transformation will then apply to all the display object's\r\n * three-dimensional children.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass PerspectiveProjection\r\n{\r\n\tprivate _matrix3D:Matrix3D;\r\n\r\n\t/**\r\n\t * Specifies an angle, as a degree between 0 and 180, for the field of\r\n\t * view in three dimensions. This value determines how strong the\r\n\t * perspective transformation and distortion apply to a\r\n\t * three-dimensional display object with a non-zero z-coordinate.\r\n\t *\r\n\t * <p>A degree close to 0 means that the screen's two-dimensional x-\r\n\t * and y-coordinates are roughly the same as the three-dimensional x-,\r\n\t * y-, and z-coordinates with little or no distortion. In other words,\r\n\t * for a small angle, a display object moving down the z axis appears\r\n\t * to stay near the same size and moves little.</p>\r\n\t *\r\n\t * <p>A value close to 180 degrees results in a fisheye projection effect:\r\n\t * positions with a z value smaller than 0 are magnified, while\r\n\t * positions with a z value larger than 0 are minimized. With a large\r\n\t * angle, a display object moving down the z axis appears to change\r\n\t * size quickly and moves a great distance. If the field of view is\r\n\t * set to 0 or 180, nothing is seen on the screen.</p>\r\n\t */\r\n\tpublic fieldOfView:number;\r\n\r\n\t/**\r\n\t * The distance between the eye or the viewpoint's origin (0,0,0) and\r\n\t * the display object located in the z axis. During the perspective\r\n\t * transformation, the <code>focalLength</code> is calculated\r\n\t * dynamically using the angle of the field of view and the stage's\r\n\t * aspect ratio (stage width divided by stage height).\r\n\t *\r\n\t * @see away.geom.PerspectiveProjection#fieldOfView\r\n\t */\r\n\tpublic focalLength:number;\r\n\r\n\t/**\r\n\t * A two-dimensional point representing the center of the projection,\r\n\t * the vanishing point for the display object.\r\n\t *\r\n\t * <p>The <code>projectionCenter</code> property is an offset to the\r\n\t * default registration point that is the upper left of the stage,\r\n\t * point (0,0). The default projection transformation center is in the\r\n\t * middle of the stage, which means the three-dimensional display\r\n\t * objects disappear toward the center of the stage as they move\r\n\t * backwards in the z axis.</p>\r\n\t */\r\n\tpublic projectionCenter:Point;\r\n\r\n\t/**\r\n\t * Creates an instance of a PerspectiveProjection object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t * Returns the underlying Matrix3D object of the display object.\r\n\t *\r\n\t * <p>A display object, like the root object, can have a\r\n\t * PerspectiveProjection object without needing a Matrix3D property\r\n\t * defined for its transformations. In fact, use either a\r\n\t * PerspectiveProjection or a Matrix3D object to specify the\r\n\t * perspective transformation. If when using the PerspectiveProjection\r\n\t * object, a Matrix3D object was needed, the <code>toMatrix3D()</code>\r\n\t * method can retrieve the underlying Matrix3D object of the display\r\n\t * object. For example, the <code>toMatrix3D()</code> method can be\r\n\t * used with the <code>Utils3D.projectVectors()</code> method.</p>\r\n\t *\r\n\t * @see away.geom.Matrix3D\r\n\t */\r\n\tpublic toMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._matrix3D;\r\n\t}\r\n}\r\n\r\nexport = PerspectiveProjection;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass Plane3D\r\n{\r\n\t/**\r\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\r\n\t */\r\n\tpublic a:number;\r\n\r\n\t/**\r\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\r\n\t */\r\n\tpublic b:number;\r\n\r\n\t/**\r\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\r\n\t */\r\n\tpublic c:number;\r\n\r\n\t/**\r\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\r\n\t */\r\n\tpublic d:number;\r\n\r\n\tpublic _iAlignment:number;\r\n\r\n\t// indicates the alignment of the plane\r\n\tpublic static ALIGN_ANY:number = 0;\r\n\tpublic static ALIGN_XY_AXIS:number = 1;\r\n\tpublic static ALIGN_YZ_AXIS:number = 2;\r\n\tpublic static ALIGN_XZ_AXIS:number = 3;\r\n\r\n\t/**\r\n\t * Create a Plane3D with ABCD coefficients\r\n\t */\r\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\r\n\t{\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\r\n\t\tif (a == 0 && b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (b == 0 && c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (a == 0 && c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\r\n\t * @param p0 Vector3D\r\n\t * @param p1 Vector3D\r\n\t * @param p2 Vector3D\r\n\t */\r\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D)\r\n\t{\r\n\t\tvar d1x:number = p1.x - p0.x;\r\n\t\tvar d1y:number = p1.y - p0.y;\r\n\t\tvar d1z:number = p1.z - p0.z;\r\n\r\n\t\tvar d2x:number = p2.x - p0.x;\r\n\t\tvar d2y:number = p2.y - p0.y;\r\n\t\tvar d2z:number = p2.z - p0.z;\r\n\r\n\t\tthis.a = d1y*d2z - d1z*d2y;\r\n\t\tthis.b = d1z*d2x - d1x*d2z;\r\n\t\tthis.c = d1x*d2y - d1y*d2x;\r\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\r\n\r\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\r\n\t\tif (this.a == 0 && this.b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (this.b == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (this.a == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\r\n\t * @param normal Vector3D\r\n\t * @param point  Vector3D\r\n\t */\r\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D)\r\n\t{\r\n\t\tthis.a = normal.x;\r\n\t\tthis.b = normal.y;\r\n\t\tthis.c = normal.z;\r\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\r\n\t\tif (this.a == 0 && this.b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (this.b == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (this.a == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize this Plane3D\r\n\t * @return Plane3D This Plane3D.\r\n\t */\r\n\tpublic normalize():Plane3D\r\n\t{\r\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\r\n\t\tthis.a *= len;\r\n\t\tthis.b *= len;\r\n\t\tthis.c *= len;\r\n\t\tthis.d *= len;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the signed distance between this Plane3D and the point p.\r\n\t * @param p Vector3D\r\n\t * @returns Number\r\n\t */\r\n\tpublic distance(p:Vector3D):number\r\n\t{\r\n\r\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\r\n\r\n\t\t\treturn this.a*p.x - this.d;\r\n\r\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\r\n\t\t\treturn this.b*p.y - this.d;\r\n\t\t}\r\n\r\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\r\n\r\n\t\t\treturn this.c*p.z - this.d;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\r\n\t * @param p Vector3D\r\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\r\n\t */\r\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\r\n\t{\r\n\t\t// check NaN\r\n\t\tif (this.d != this.d)\r\n\t\t\treturn PlaneClassification.FRONT;\r\n\r\n\t\tvar len:number;\r\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\r\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\r\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\r\n\t\t\tlen = this.c*p.z - this.d; else\r\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\r\n\r\n\t\tif (len < -epsilon)\r\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\r\n\t\t\treturn PlaneClassification.FRONT; else\r\n\t\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\r\n\t}\r\n}\r\n\r\nexport = Plane3D;",
    "class PlaneClassification\r\n{\r\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\r\n\tpublic static BACK:number = 0;\r\n\tpublic static FRONT:number = 1;\r\n\r\n\tpublic static IN:number = 0;\r\n\tpublic static OUT:number = 1;\r\n\tpublic static INTERSECT:number = 2;\r\n\r\n}\r\n\r\nexport = PlaneClassification;",
    "/**\r\n * The Point object represents a location in a two-dimensional coordinate\r\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\r\n * represents the vertical axis.\r\n *\r\n * <p>The following code creates a point at(0,0):</p>\r\n *\r\n * <p>Methods and properties of the following classes use Point objects:</p>\r\n *\r\n * <ul>\r\n *   <li>BitmapData</li>\r\n *   <li>DisplayObject</li>\r\n *   <li>DisplayObjectContainer</li>\r\n *   <li>DisplacementMapFilter</li>\r\n *   <li>NativeWindow</li>\r\n *   <li>Matrix</li>\r\n *   <li>Rectangle</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Point()</code> constructor to create a Point\r\n * object.</p>\r\n */\r\nclass Point\r\n{\r\n\t/**\r\n\t * The horizontal coordinate of the point. The default value is 0.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate of the point. The default value is 0.\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The length of the line segment from(0,0) to this point.\r\n\t */\r\n\tpublic get length():number\r\n\t{\r\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new point. If you pass no parameters to this method, a point is\r\n\t * created at(0,0).\r\n\t *\r\n\t * @param x The horizontal coordinate.\r\n\t * @param y The vertical coordinate.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the coordinates of another point to the coordinates of this point to\r\n\t * create a new point.\r\n\t *\r\n\t * @param v The point to be added.\r\n\t * @return The new point.\r\n\t */\r\n\tpublic add(v:Point):Point\r\n\t{\r\n\t\treturn new Point(this.x + v.x, this.y + v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of this Point object.\r\n\t *\r\n\t * @return The new Point object.\r\n\t */\r\n\tpublic clone():Point\r\n\t{\r\n\t\treturn new Point(this.x, this.y);\r\n\t}\r\n\r\n\tpublic copyFrom(sourcePoint:Point)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether two points are equal. Two points are equal if they have\r\n\t * the same <i>x</i> and <i>y</i> values.\r\n\t *\r\n\t * @param toCompare The point to be compared.\r\n\t * @return A value of <code>true</code> if the object is equal to this Point\r\n\t *         object; <code>false</code> if it is not equal.\r\n\t */\r\n\tpublic equals(toCompare:Point):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the line segment between(0,0) and the current point to a set\r\n\t * length.\r\n\t *\r\n\t * @param thickness The scaling value. For example, if the current point is\r\n\t *                 (0,5), and you normalize it to 1, the point returned is\r\n\t *                  at(0,1).\r\n\t */\r\n\tpublic normalize(thickness:number = 1)\r\n\t{\r\n\t\tif (this.length != 0) {\r\n\t\t\tvar invLength = thickness/this.length;\r\n\t\t\tthis.x *= invLength;\r\n\t\t\tthis.y *= invLength;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthrow \"Cannot divide by zero length.\";\r\n\t}\r\n\r\n\t/**\r\n\t * Offsets the Point object by the specified amount. The value of\r\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\r\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\r\n\t * value of <i>y</i> to create the new <i>y</i> value.\r\n\t *\r\n\t * @param dx The amount by which to offset the horizontal coordinate,\r\n\t *           <i>x</i>.\r\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\r\n\t */\r\n\tpublic offset(dx:number, dy:number)\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t}\r\n\r\n\tpublic setTo(xa:number, ya:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the coordinates of another point from the coordinates of this\r\n\t * point to create a new point.\r\n\t *\r\n\t * @param v The point to be subtracted.\r\n\t * @return The new point.\r\n\t */\r\n\tpublic subtract(v:Point):Point\r\n\t{\r\n\t\treturn new Point(this.x - v.x, this.y - v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\r\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\r\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\r\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\r\n\t *\r\n\t * @return The string representation of the coordinates.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\r\n\t *\r\n\t * @param pt1 The first point.\r\n\t * @param pt2 The second point.\r\n\t * @return The distance between the first and second points.\r\n\t */\r\n\tpublic static distance(pt1:Point, pt2:Point):number\r\n\t{\r\n\t\tvar dx:number = pt2.x - pt1.x;\r\n\t\tvar dy:number = pt2.y - pt1.y;\r\n\r\n\t\treturn Math.sqrt(dx*dx + dy*dy);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines a point between two specified points. The parameter\r\n\t * <code>f</code> determines where the new interpolated point is located\r\n\t * relative to the two end points specified by parameters <code>pt1</code>\r\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\r\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\r\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\r\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\r\n\t * point(parameter <code>pt2</code>).\r\n\t *\r\n\t * @param pt1 The first point.\r\n\t * @param pt2 The second point.\r\n\t * @param f   The level of interpolation between the two points. Indicates\r\n\t *            where the new point will be, along the line between\r\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\r\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\r\n\t *            <code>pt2</code> is returned.\r\n\t * @return The new, interpolated point.\r\n\t */\r\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\r\n\t{\r\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\r\n\t *\r\n\t * @param len   The length coordinate of the polar pair.\r\n\t * @param angle The angle, in radians, of the polar pair.\r\n\t * @return The Cartesian point.\r\n\t */\r\n\tpublic static polar(len:number, angle:number):Point\r\n\t{\r\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\r\n\t}\r\n}\r\n\r\nexport = Point;\r\n",
    "class PoissonLookup\r\n{\r\n\tpublic static _distributions:Array<Array<number>>;\r\n\r\n\tpublic static initDistributions():void\r\n\t{\r\n\t\t// precalculated for best control\r\n\t\tthis._distributions = new Array<Array<number>>();\r\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\r\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\r\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\r\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\r\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\r\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\r\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\r\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\r\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\r\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\r\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\r\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\r\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\r\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\r\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\r\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\r\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\r\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\r\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\r\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\r\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\r\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\r\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\r\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\r\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\r\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\r\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\r\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\r\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\r\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\r\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\r\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\r\n\t}\r\n\r\n\tpublic static getDistribution(n:number /*int*/):Array<number>\r\n\t{\r\n\t\tif (!this._distributions)\r\n\t\t\tthis.initDistributions();\r\n\r\n\t\tif (n < 2 || n > 32)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this._distributions[n - 1];\r\n\t}\r\n}\r\n\r\nexport = PoissonLookup;",
    "import Matrix3DUtils\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Orientation3D\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\r\nimport Matrix3D\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n/**\r\n * A Quaternion object which can be used to represent rotations.\r\n */\r\nclass Quaternion\r\n{\r\n\t/**\r\n\t * The x value of the quaternion.\r\n\t */\r\n\tpublic x:number = 0;\r\n\r\n\t/**\r\n\t * The y value of the quaternion.\r\n\t */\r\n\tpublic y:number = 0;\r\n\r\n\t/**\r\n\t * The z value of the quaternion.\r\n\t */\r\n\tpublic z:number = 0;\r\n\r\n\t/**\r\n\t * The w value of the quaternion.\r\n\t */\r\n\tpublic w:number = 1;\r\n\r\n\t/**\r\n\t * Creates a new Quaternion object.\r\n\t * @param x The x value of the quaternion.\r\n\t * @param y The y value of the quaternion.\r\n\t * @param z The z value of the quaternion.\r\n\t * @param w The w value of the quaternion.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the magnitude of the quaternion object.\r\n\t */\r\n\tpublic get magnitude():number\r\n\t{\r\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\r\n\t *\r\n\t * @param    qa    The first quaternion in the multiplication.\r\n\t * @param    qb    The second quaternion in the multiplication.\r\n\t */\r\n\tpublic multiply(qa:Quaternion, qb:Quaternion)\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\r\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\r\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\r\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\r\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\r\n\t}\r\n\r\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\r\n\t{\r\n\t\t//target ||= new Quaternion();\r\n\t\tif (target === null) {\r\n\t\t\ttarget = new Quaternion();\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar x2:number = vector.x;\r\n\t\tvar y2:number = vector.y;\r\n\t\tvar z2:number = vector.z;\r\n\r\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\r\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\r\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\r\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with values representing the given rotation around a vector.\r\n\t *\r\n\t * @param    axis    The axis around which to rotate\r\n\t * @param    angle    The angle in radians of the rotation.\r\n\t */\r\n\tpublic fromAxisAngle(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar sin_a:number = Math.sin(angle/2);\r\n\t\tvar cos_a:number = Math.cos(angle/2);\r\n\r\n\t\tthis.x = axis.x*sin_a;\r\n\t\tthis.y = axis.y*sin_a;\r\n\t\tthis.z = axis.z*sin_a;\r\n\t\tthis.w = cos_a;\r\n\r\n\t\tthis.normalize();\r\n\t}\r\n\r\n\t/**\r\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\r\n\t * @param qa The first quaternion to interpolate.\r\n\t * @param qb The second quaternion to interpolate.\r\n\t * @param t The interpolation weight, a value between 0 and 1.\r\n\t */\r\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number)\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\r\n\r\n\t\t// shortest direction\r\n\t\tif (dot < 0) {\r\n\t\t\tdot = -dot;\r\n\t\t\tw2 = -w2;\r\n\t\t\tx2 = -x2;\r\n\t\t\ty2 = -y2;\r\n\t\t\tz2 = -z2;\r\n\t\t}\r\n\r\n\t\tif (dot < 0.95) {\r\n\t\t\t// interpolate angle linearly\r\n\t\t\tvar angle:number = Math.acos(dot);\r\n\t\t\tvar s:number = 1/Math.sin(angle);\r\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\r\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\r\n\t\t\tthis.w = w1*s1 + w2*s2;\r\n\t\t\tthis.x = x1*s1 + x2*s2;\r\n\t\t\tthis.y = y1*s1 + y2*s2;\r\n\t\t\tthis.z = z1*s1 + z2*s2;\r\n\t\t} else {\r\n\t\t\t// nearly identical angle, interpolate linearly\r\n\t\t\tthis.w = w1 + t*(w2 - w1);\r\n\t\t\tthis.x = x1 + t*(x2 - x1);\r\n\t\t\tthis.y = y1 + t*(y2 - y1);\r\n\t\t\tthis.z = z1 + t*(z2 - z1);\r\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t\t\tthis.w *= len;\r\n\t\t\tthis.x *= len;\r\n\t\t\tthis.y *= len;\r\n\t\t\tthis.z *= len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolates between two quaternions.\r\n\t * @param qa The first quaternion to interpolate.\r\n\t * @param qb The second quaternion to interpolate.\r\n\t * @param t The interpolation weight, a value between 0 and 1.\r\n\t */\r\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number)\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\t\tvar len:number;\r\n\r\n\t\t// shortest direction\r\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\r\n\t\t\tw2 = -w2;\r\n\t\t\tx2 = -x2;\r\n\t\t\ty2 = -y2;\r\n\t\t\tz2 = -z2;\r\n\t\t}\r\n\r\n\t\tthis.w = w1 + t*(w2 - w1);\r\n\t\tthis.x = x1 + t*(x2 - x1);\r\n\t\tthis.y = y1 + t*(y2 - y1);\r\n\t\tthis.z = z1 + t*(z2 - z1);\r\n\r\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t\tthis.w *= len;\r\n\t\tthis.x *= len;\r\n\t\tthis.y *= len;\r\n\t\tthis.z *= len;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with values representing the given euler rotation.\r\n\t *\r\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\r\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\r\n\t * @param    az        The angle in radians of the rotation around the az axis.\r\n\t */\r\n\tpublic fromEulerAngles(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\r\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\r\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\r\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\r\n\r\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\r\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\r\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\r\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\r\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\r\n\t * @return The Vector3D containing the Euler angles.\r\n\t */\r\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\r\n\t{\r\n\r\n\t\t//target ||= new Vector3D();\r\n\t\tif (target === null) {\r\n\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\t}\r\n\r\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\r\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\r\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalises the quaternion object.\r\n\t */\r\n\tpublic normalize(val:number = 1)\r\n\t{\r\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\r\n\r\n\t\tthis.x *= mag;\r\n\t\tthis.y *= mag;\r\n\t\tthis.z *= mag;\r\n\t\tthis.w *= mag;\r\n\t}\r\n\r\n\t/**\r\n\t * Used to trace the values of a quaternion.\r\n\t *\r\n\t * @return A string representation of the quaternion object.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\r\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\r\n\t * @return A Matrix3D object representing an equivalent rotation.\r\n\t */\r\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\r\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\r\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\r\n\r\n\t\trawData[0] = xx - yy - zz + ww;\r\n\t\trawData[4] = xy2 - zw2;\r\n\t\trawData[8] = xz2 + yw2;\r\n\t\trawData[12] = 0;\r\n\t\trawData[1] = xy2 + zw2;\r\n\t\trawData[5] = -xx + yy - zz + ww;\r\n\t\trawData[9] = yz2 - xw2;\r\n\t\trawData[13] = 0;\r\n\t\trawData[2] = xz2 - yw2;\r\n\t\trawData[6] = yz2 + xw2;\r\n\t\trawData[10] = -xx - yy + zz + ww;\r\n\t\trawData[14] = 0;\r\n\t\trawData[3] = 0.0;\r\n\t\trawData[7] = 0.0;\r\n\t\trawData[11] = 0;\r\n\t\trawData[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\treturn new Matrix3D(rawData);\r\n\r\n\t\ttarget.copyRawDataFrom(rawData);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\r\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\r\n\t */\r\n\tpublic fromMatrix(matrix:Matrix3D)\r\n\t{\r\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = v.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\r\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\r\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\r\n\t */\r\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false)\r\n\t{\r\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\r\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\r\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\r\n\r\n\t\ttarget[0] = xx - yy - zz + ww;\r\n\t\ttarget[1] = xy2 - zw2;\r\n\t\ttarget[2] = xz2 + yw2;\r\n\t\ttarget[4] = xy2 + zw2;\r\n\t\ttarget[5] = -xx + yy - zz + ww;\r\n\t\ttarget[6] = yz2 - xw2;\r\n\t\ttarget[8] = xz2 - yw2;\r\n\t\ttarget[9] = yz2 + xw2;\r\n\t\ttarget[10] = -xx - yy + zz + ww;\r\n\t\ttarget[3] = target[7] = target[11] = 0;\r\n\r\n\t\tif (!exclude4thRow) {\r\n\t\t\ttarget[12] = target[13] = target[14] = 0;\r\n\t\t\ttarget[15] = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the quaternion.\r\n\t * @return An exact duplicate of the current Quaternion.\r\n\t */\r\n\tpublic clone():Quaternion\r\n\t{\r\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates a point.\r\n\t * @param vector The Vector3D object to be rotated.\r\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\r\n\t * @return A Vector3D object containing the rotated point.\r\n\t */\r\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\r\n\t{\r\n\t\tvar x1:number, y1:number, z1:number, w1:number;\r\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\r\n\r\n\t\t//target ||= new Vector3D();\r\n\t\tif (target === null) {\r\n\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\t}\r\n\r\n\t\t// p*q'\r\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\r\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\r\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\r\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\r\n\r\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\r\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\r\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the data from a quaternion into this instance.\r\n\t * @param q The quaternion to copy from.\r\n\t */\r\n\tpublic copyFrom(q:Quaternion)\r\n\t{\r\n\t\tthis.x = q.x;\r\n\t\tthis.y = q.y;\r\n\t\tthis.z = q.z;\r\n\t\tthis.w = q.w;\r\n\t}\r\n}\r\n\r\nexport = Quaternion;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\n/**\r\n * A Rectangle object is an area defined by its position, as indicated by its\r\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\r\n *\r\n *\r\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\r\n * <code>height</code> properties of the Rectangle class are independent of\r\n * each other; changing the value of one property has no effect on the others.\r\n * However, the <code>right</code> and <code>bottom</code> properties are\r\n * integrally related to those four properties. For example, if you change the\r\n * value of the <code>right</code> property, the value of the\r\n * <code>width</code> property changes; if you change the <code>bottom</code>\r\n * property, the value of the <code>height</code> property changes. </p>\r\n *\r\n * <p>The following methods and properties use Rectangle objects:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\r\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\r\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\r\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\r\n * <code>merge()</code>, <code>paletteMap()</code>,\r\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\r\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\r\n * BitmapData class</li>\r\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\r\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\r\n * DisplayObject class</li>\r\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\r\n * class</li>\r\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\r\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\r\n * method of the Sprite class</li>\r\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\r\n * method of the PrintJob class</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\r\n * Rectangle object.</p>\r\n *\r\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\r\n * display object. To draw a rectangular Shape object onscreen, use the\r\n * <code>drawRect()</code> method of the Graphics class.</p>\r\n */\r\nclass Rectangle\r\n{\r\n\tprivate _size:Point;\r\n\tprivate _bottomRight:Point;\r\n\tprivate _topLeft:Point;\r\n\r\n\t/**\r\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\r\n\t * value of a Rectangle object has no effect on the <code>x</code>,\r\n\t * <code>y</code>, and <code>width</code> properties.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\r\n\t * value of a Rectangle object has no effect on the <code>x</code>,\r\n\t * <code>y</code>, and <code>height</code> properties.\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the value of the <code>x</code> property of a Rectangle object has no\r\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\r\n\t * properties.\r\n\t *\r\n\t * <p>The value of the <code>x</code> property is equal to the value of the\r\n\t * <code>left</code> property.</p>\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the value of the <code>y</code> property of a Rectangle object has no\r\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\r\n\t * properties.\r\n\t *\r\n\t * <p>The value of the <code>y</code> property is equal to the value of the\r\n\t * <code>top</code> property.</p>\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The sum of the <code>y</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get bottom():number\r\n\t{\r\n\t\treturn this.y + this.height;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Rectangle object's bottom-right corner, determined by\r\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\r\n\t */\r\n\tpublic get bottomRight():Point\r\n\t{\r\n\t\tif (this._bottomRight == null)\r\n\t\t\tthis._bottomRight = new Point();\r\n\r\n\t\tthis._bottomRight.x = this.x + this.width;\r\n\t\tthis._bottomRight.y = this.y + this.height;\r\n\r\n\t\treturn this._bottomRight;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the <code>left</code> property of a Rectangle object has no effect on the\r\n\t * <code>y</code> and <code>height</code> properties. However it does affect\r\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\r\n\t * does <i>not</i> affect the <code>width</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get left():number\r\n\t{\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>x</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic get right():number\r\n\t{\r\n\t\treturn this.x + this.width;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the Rectangle object, expressed as a Point object with the\r\n\t * values of the <code>width</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get size():Point\r\n\t{\r\n\t\tif (this._size == null)\r\n\t\t\tthis._size = new Point();\r\n\r\n\t\tthis._size.x = this.width;\r\n\t\tthis._size.y = this.height;\r\n\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the <code>top</code> property of a Rectangle object has no effect on the\r\n\t * <code>x</code> and <code>width</code> properties. However it does affect\r\n\t * the <code>height</code> property, whereas changing the <code>y</code>\r\n\t * value does <i>not</i> affect the <code>height</code> property.\r\n\t *\r\n\t * <p>The value of the <code>top</code> property is equal to the value of the\r\n\t * <code>y</code> property.</p>\r\n\t */\r\n\tpublic get top():number\r\n\t{\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Rectangle object's top-left corner, determined by the\r\n\t * <i>x</i> and <i>y</i> coordinates of the point.\r\n\t */\r\n\tpublic get topLeft():Point\r\n\t{\r\n\t\tif (this._topLeft == null)\r\n\t\t\tthis._topLeft = new Point();\r\n\r\n\t\tthis._topLeft.x = this.x;\r\n\t\tthis._topLeft.y = this.y;\r\n\r\n\t\treturn this._topLeft;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Rectangle object with the top-left corner specified by the\r\n\t * <code>x</code> and <code>y</code> parameters and with the specified\r\n\t * <code>width</code> and <code>height</code> parameters. If you call this\r\n\t * public without parameters, a rectangle with <code>x</code>,\r\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\r\n\t * to 0 is created.\r\n\t *\r\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\r\n\t *               rectangle.\r\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\r\n\t *               rectangle.\r\n\t * @param width  The width of the rectangle, in pixels.\r\n\t * @param height The height of the rectangle, in pixels.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Rectangle object with the same values for the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties as the original Rectangle object.\r\n\t *\r\n\t * @return A new Rectangle object with the same values for the\r\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t *         <code>height</code> properties as the original Rectangle object.\r\n\t */\r\n\tpublic clone():Rectangle\r\n\t{\r\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified point is contained within the rectangular\r\n\t * region defined by this Rectangle object.\r\n\t *\r\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\r\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\r\n\t * @return A value of <code>true</code> if the Rectangle object contains the\r\n\t *         specified point; otherwise <code>false</code>.\r\n\t */\r\n\tpublic contains(x:number, y:number):boolean\r\n\t{\r\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified point is contained within the rectangular\r\n\t * region defined by this Rectangle object. This method is similar to the\r\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\r\n\t * object as a parameter.\r\n\t *\r\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\r\n\t *              coordinates.\r\n\t * @return A value of <code>true</code> if the Rectangle object contains the\r\n\t *         specified point; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsPoint(point:Point):boolean\r\n\t{\r\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\r\n\t * parameter is contained within this Rectangle object. A Rectangle object is\r\n\t * said to contain another if the second Rectangle object falls entirely\r\n\t * within the boundaries of the first.\r\n\t *\r\n\t * @param rect The Rectangle object being checked.\r\n\t * @return A value of <code>true</code> if the Rectangle object that you\r\n\t *         specify is contained by this Rectangle object; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic containsRect(rect:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of rectangle data from the source Rectangle object into the\r\n\t * calling Rectangle object.\r\n\t *\r\n\t * @param sourceRect The Rectangle object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceRect:Rectangle)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toCompare</code>\r\n\t * parameter is equal to this Rectangle object. This method compares the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties of an object against the same properties of\r\n\t * this Rectangle object.\r\n\t *\r\n\t * @param toCompare The rectangle to compare to this Rectangle object.\r\n\t * @return A value of <code>true</code> if the object has exactly the same\r\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\r\n\t *         and <code>height</code> properties as this Rectangle object;\r\n\t *         otherwise <code>false</code>.\r\n\t */\r\n\tpublic equals(toCompare:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Rectangle object by the specified amounts, in\r\n\t * pixels. The center point of the Rectangle object stays the same, and its\r\n\t * size increases to the left and right by the <code>dx</code> value, and to\r\n\t * the top and the bottom by the <code>dy</code> value.\r\n\t *\r\n\t * @param dx The value to be added to the left and the right of the Rectangle\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           width and position of the rectangle:\r\n\t * @param dy The value to be added to the top and the bottom of the\r\n\t *           Rectangle. The following equation is used to calculate the new\r\n\t *           height and position of the rectangle:\r\n\t */\r\n\tpublic inflate(dx:number, dy:number)\r\n\t{\r\n\t\tthis.x -= dx/2;\r\n\t\tthis.y -= dy/2;\r\n\t\tthis.width += dx/2;\r\n\t\tthis.height += dy/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Rectangle object. This method is similar to the\r\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\r\n\t * a parameter.\r\n\t *\r\n\t * <p>The following two code examples give the same result:</p>\r\n\t *\r\n\t * @param point The <code>x</code> property of this Point object is used to\r\n\t *              increase the horizontal dimension of the Rectangle object.\r\n\t *              The <code>y</code> property is used to increase the vertical\r\n\t *              dimension of the Rectangle object.\r\n\t */\r\n\tpublic inflatePoint(point:Point)\r\n\t{\r\n\t\tthis.x -= point.x/2;\r\n\t\tthis.y -= point.y/2;\r\n\t\tthis.width += point.x/2;\r\n\t\tthis.height += point.y/2;\r\n\t}\r\n\r\n\t/**\r\n\t * If the Rectangle object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Rectangle object, returns the area of\r\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\r\n\t * this method returns an empty Rectangle object with its properties set to\r\n\t * 0.\r\n\t *\r\n\t * @param toIntersect The Rectangle object to compare against to see if it\r\n\t *                    intersects with this Rectangle object.\r\n\t * @return A Rectangle object that equals the area of intersection. If the\r\n\t *         rectangles do not intersect, this method returns an empty\r\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\r\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\r\n\t *         properties set to 0.\r\n\t */\r\n\tpublic intersection(toIntersect:Rectangle):Rectangle\r\n\t{\r\n\t\tif (this.intersects(toIntersect)) {\r\n\t\t\tvar i:Rectangle = new Rectangle();\r\n\r\n\t\t\tif (this.x > toIntersect.x) {\r\n\t\t\t\ti.x = this.x;\r\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\r\n\r\n\t\t\t\tif (i.width > this.width)\r\n\t\t\t\t\ti.width = this.width;\r\n\t\t\t} else {\r\n\t\t\t\ti.x = toIntersect.x;\r\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\r\n\r\n\t\t\t\tif (i.width > toIntersect.width)\r\n\t\t\t\t\ti.width = toIntersect.width;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.y > toIntersect.y) {\r\n\t\t\t\ti.y = this.y;\r\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\r\n\r\n\t\t\t\tif (i.height > this.height)\r\n\t\t\t\t\ti.height = this.height;\r\n\t\t\t} else {\r\n\t\t\t\ti.y = toIntersect.y;\r\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\r\n\r\n\t\t\t\tif (i.height > toIntersect.height)\r\n\t\t\t\t\ti.height = toIntersect.height;\r\n\t\t\t}\r\n\r\n\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn new Rectangle();\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Rectangle object. This method checks the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties of the specified Rectangle object to see if\r\n\t * it intersects with this Rectangle object.\r\n\t *\r\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\r\n\t *                    object.\r\n\t * @return A value of <code>true</code> if the specified object intersects\r\n\t *         with this Rectangle object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic intersects(toIntersect:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not this Rectangle object is empty.\r\n\t *\r\n\t * @return A value of <code>true</code> if the Rectangle object's width or\r\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\r\n\t */\r\n\tpublic isEmpty():boolean\r\n\t{\r\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Rectangle object, as determined by its\r\n\t * top-left corner, by the specified amounts.\r\n\t *\r\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\r\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\r\n\t */\r\n\tpublic offset(dx:number, dy:number)\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Rectangle object using a Point object as a\r\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\r\n\t * method, except that it takes a Point object as a parameter.\r\n\t *\r\n\t * @param point A Point object to use to offset this Rectangle object.\r\n\t */\r\n\tpublic offsetPoint(point:Point)\r\n\t{\r\n\t\tthis.x += point.x;\r\n\t\tthis.y += point.y;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\r\n\t * empty if its width or height is less than or equal to 0.\r\n\t *\r\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\r\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\r\n\t *\r\n\t */\r\n\tpublic setEmpty()\r\n\t{\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.width = 0;\r\n\t\tthis.height = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Rectangle to the specified values\r\n\t *\r\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\r\n\t *                rectangle.\r\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\r\n\t *                rectangle.\r\n\t * @param widtha  The width of the rectangle, in pixels.\r\n\t * @param heighta The height of the rectangle, in pixels.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number)\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.width = widtha;\r\n\t\tthis.height = heighta;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds and returns a string that lists the horizontal and vertical\r\n\t * positions and the width and height of the Rectangle object.\r\n\t *\r\n\t * @return A string listing the value of each of the following properties of\r\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\r\n\t *         <code>width</code>, and <code>height</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Adds two rectangles together to create a new Rectangle object, by filling\r\n\t * in the horizontal and vertical space between the two rectangles.\r\n\t *\r\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\r\n\t * <code>0</code> as the height or width value, such as: <code>var\r\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\r\n\t *\r\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\r\n\t * @return A new Rectangle object that is the union of the two rectangles.\r\n\t */\r\n\tpublic union(toUnion:Rectangle):Rectangle\r\n\t{\r\n\t\tvar u:Rectangle = new Rectangle();\r\n\r\n\t\tif (this.x < toUnion.x) {\r\n\t\t\tu.x = this.x;\r\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\r\n\r\n\t\t\tif (u.width < this.width)\r\n\t\t\t\tu.width = this.width;\r\n\t\t} else {\r\n\t\t\tu.x = toUnion.x;\r\n\t\t\tu.width = this.x - toUnion.x + this.width;\r\n\r\n\t\t\tif (u.width < toUnion.width)\r\n\t\t\t\tu.width = toUnion.width;\r\n\t\t}\r\n\r\n\t\tif (this.y < toUnion.y) {\r\n\t\t\tu.y = this.y;\r\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\r\n\r\n\t\t\tif (u.height < this.height)\r\n\t\t\t\tu.height = this.height;\r\n\t\t} else {\r\n\t\t\tu.y = toUnion.y;\r\n\t\t\tu.height = this.y - toUnion.y + this.height;\r\n\r\n\t\t\tif (u.height < toUnion.height)\r\n\t\t\t\tu.height = toUnion.height;\r\n\t\t}\r\n\r\n\t\treturn u;\r\n\t}\r\n}\r\n\r\nexport = Rectangle;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass Sphere\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic z:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic radius:number;\r\n\r\n\t/**\r\n\t * Create a Sphere with ABCD coefficients\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, radius:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.radius = radius;\r\n\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif (this.containsPoint(position))\r\n\t\t\treturn 0;\r\n\r\n\t\tvar px:number = position.x - this.x, py:number = position.y - this.y, pz:number = position.z - this.z;\r\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\r\n\t\tvar rayEntryDistance:number;\r\n\r\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\r\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\r\n\t\tvar c:number = px*px + py*py + pz*pz - this.radius*this.radius;\r\n\t\tvar det:number = b*b - 4*a*c;\r\n\r\n\t\tif (det >= 0) { // ray goes through sphere\r\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\r\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\r\n\t\t\tif (rayEntryDistance >= 0) {\r\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\r\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\r\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\r\n\t\t\t\ttargetNormal.normalize();\r\n\r\n\t\t\t\treturn rayEntryDistance;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ray misses sphere\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic containsPoint(position:Vector3D):boolean\r\n\t{\r\n\t\tvar px:number = position.x - this.x;\r\n\t\tvar py:number = position.y - this.y;\r\n\t\tvar pz:number = position.z - this.z;\r\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\r\n\t\treturn distance <= this.radius;\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\r\n\t}\r\n}\r\n\r\nexport = Sphere;",
    "import Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nclass UVTransform\r\n{\r\n\tprivate _uvMatrix:Matrix = new Matrix();\r\n\tprivate _uvMatrixDirty:boolean;\r\n\r\n\tprivate _rotation:number = 0;\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\tprivate _offsetU:number = 0;\r\n\tprivate _offsetV:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get offsetU():number\r\n\t{\r\n\t\treturn this._offsetU;\r\n\t}\r\n\r\n\tpublic set offsetU(value:number)\r\n\t{\r\n\t\tif (value == this._offsetU)\r\n\t\t\treturn;\r\n\r\n\t\tthis._offsetU = value;\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get offsetV():number\r\n\t{\r\n\t\treturn this._offsetV;\r\n\t}\r\n\r\n\tpublic set offsetV(value:number)\r\n\t{\r\n\t\tif (value == this._offsetV)\r\n\t\t\treturn;\r\n\r\n\t\tthis._offsetV = value;\r\n\t\tthis._uvMatrixDirty = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rotation():number\r\n\t{\r\n\t\treturn this._rotation;\r\n\t}\r\n\r\n\tpublic set rotation(value:number)\r\n\t{\r\n\t\tif (value == this._rotation)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotation = value;\r\n\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (value == this._scaleU)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (value == this._scaleV)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get matrix():Matrix\r\n\t{\r\n\t\tif (this._uvMatrixDirty)\r\n\t\t\tthis.updateUVMatrix();\r\n\r\n\t\treturn this._uvMatrix;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate updateUVMatrix()\r\n\t{\r\n\t\tthis._uvMatrix.identity();\r\n\r\n\t\tif (this._rotation != 0)\r\n\t\t\tthis._uvMatrix.rotate(this._rotation);\r\n\r\n\t\tif (this._scaleU != 1 || this._scaleV != 1)\r\n\t\t\tthis._uvMatrix.scale(this._scaleU, this._scaleV);\r\n\r\n\t\tthis._uvMatrix.translate(this._offsetU, this._offsetV);\r\n\r\n\t\tthis._uvMatrixDirty = false;\r\n\t}\r\n}\r\n\r\nexport = UVTransform;",
    "/**\r\n * The Vector3D class represents a point or a location in the three-dimensional\r\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\r\n * space, the x property represents the horizontal axis and the y property\r\n * represents the vertical axis. In three-dimensional space, the z property\r\n * represents depth. The value of the x property increases as the object moves\r\n * to the right. The value of the y property increases as the object moves\r\n * down. The z property increases as the object moves farther from the point\r\n * of view. Using perspective projection and scaling, the object is seen to be\r\n * bigger when near and smaller when farther away from the screen. As in a\r\n * right-handed three-dimensional coordinate system, the positive z-axis points\r\n * away from the viewer and the value of the z property increases as the object\r\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\r\n * space is the upper-left corner of the stage.\r\n *\r\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\r\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\r\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\r\n *\r\n * <p>Quaternion notation introduces a fourth element, the w property, which\r\n * provides additional orientation information. For example, the w property can\r\n * define an angle of rotation of a Vector3D object. The combination of the\r\n * angle of rotation and the coordinates x, y, and z can determine the display\r\n * object's orientation. Here is a representation of Vector3D elements in\r\n * matrix notation:</p>\r\n */\r\nclass Vector3D\r\n{\r\n\t/**\r\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\r\n\t */\r\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\r\n\r\n\t/**\r\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\r\n\t */\r\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\r\n\r\n\t/**\r\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\r\n\t */\r\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\r\n\r\n\t/**\r\n\t * The first element of a Vector3D object, such as the x coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/*\r\n\t *The second element of a Vector3D object, such as the y coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The third element of a Vector3D object, such as the y coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic z:number;\r\n\r\n\t/**\r\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\r\n\t * and z properties) can hold data such as the angle of rotation. The\r\n\t * default value is 0.\r\n\t *\r\n\t * <p>Quaternion notation employs an angle as the fourth element in\r\n\t * its calculation of three-dimensional rotation. The w property can\r\n\t * be used to define the angle of rotation about the Vector3D object.\r\n\t * The combination of the rotation angle and the coordinates (x,y,z)\r\n\t * determines the display object's orientation.</p>\r\n\t *\r\n\t * <p>In addition, the w property can be used as a perspective warp\r\n\t * factor for a projected three-dimensional position or as a projection\r\n\t * transform value in representing a three-dimensional coordinate\r\n\t * projected into the two-dimensional space. For example, you can\r\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\r\n\t * property, that, when applied to a Vector3D object, produces a\r\n\t * transform value in the Vector3D object's fourth element (the w\r\n\t * property). Dividing the Vector3D object's other elements by the\r\n\t * transform value then produces a projected Vector3D object. You can\r\n\t * use the <code>Vector3D.project()</code> method to divide the first\r\n\t * three elements of a Vector3D object by its fourth element.</p>\r\n\t */\r\n\tpublic w:number;\r\n\r\n\t/**\r\n\t * The length, magnitude, of the current Vector3D object from the\r\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\r\n\t * property is ignored. A unit vector has a length or magnitude of\r\n\t * one.\r\n\t */\r\n\tpublic get length():number\r\n\t{\r\n\t\treturn Math.sqrt(this.lengthSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * The square of the length of the current Vector3D object, calculated\r\n\t * using the x, y, and z properties. The w property is ignored. Use the\r\n\t * <code>lengthSquared()</code> method whenever possible instead of the\r\n\t * slower <code>Math.sqrt()</code> method call of the\r\n\t * <code>Vector3D.length()</code> method.\r\n\t */\r\n\tpublic get lengthSquared():number\r\n\t{\r\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an instance of a Vector3D object. If you do not specify a\r\n\t * parameter for the constructor, a Vector3D object is created with\r\n\t * the elements (0,0,0,0).\r\n\t *\r\n\t * @param x The first element, such as the x coordinate.\r\n\t * @param y The second element, such as the y coordinate.\r\n\t * @param z The third element, such as the z coordinate.\r\n\t * @param w An optional element for additional data such as the angle\r\n\t *          of rotation.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the value of the x, y, and z elements of the current Vector3D\r\n\t * object to the values of the x, y, and z elements of another Vector3D\r\n\t * object. The <code>add()</code> method does not change the current\r\n\t * Vector3D object. Instead, it returns a new Vector3D object with\r\n\t * the new values.\r\n\t *\r\n\t * <p>The result of adding two vectors together is a resultant vector.\r\n\t * One way to visualize the result is by drawing a vector from the\r\n\t * origin or tail of the first vector to the end or head of the second\r\n\t * vector. The resultant vector is the distance between the origin\r\n\t * point of the first vector and the end point of the second vector.\r\n\t * </p>\r\n\t */\r\n\tpublic add(a:Vector3D):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the angle in radians between two vectors. The returned angle\r\n\t * is the smallest radian the first Vector3D object rotates until it\r\n\t * aligns with the second Vector3D object.\r\n\t *\r\n\t * <p>The <code>angleBetween()</code> method is a static method. You\r\n\t * can use it directly as a method of the Vector3D class.</p>\r\n\t *\r\n\t * <p>To convert a degree to a radian, you can use the following\r\n\t * formula:</p>\r\n\t *\r\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\r\n\t *\r\n\t * @param a The first Vector3D object.\r\n\t * @param b The second Vector3D object.\r\n\t * @returns The angle between two Vector3D objects.\r\n\t */\r\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\r\n\t{\r\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Vector3D object that is an exact copy of the current\r\n\t * Vector3D object.\r\n\t *\r\n\t * @returns A new Vector3D object that is a copy of the current\r\n\t * Vector3D object.\r\n\t */\r\n\tpublic clone():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of vector data from the source Vector3D object into the\r\n\t * calling Vector3D object.\r\n\t *\r\n\t * @param src The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(src:Vector3D):void\r\n\t{\r\n\t\tthis.x = src.x;\r\n\t\tthis.y = src.y;\r\n\t\tthis.z = src.z;\r\n\t\tthis.w = src.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Vector3D object that is perpendicular (at a right\r\n\t * angle) to the current Vector3D and another Vector3D object. If the\r\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\r\n\t * Vector3D objects are parallel to each other.\r\n\t *\r\n\t * <p>You can use the normalized cross product of two vertices of a\r\n\t * polygon surface with the normalized vector of the camera or eye\r\n\t * viewpoint to get a dot product. The value of the dot product can\r\n\t * identify whether a surface of a three-dimensional object is hidden\r\n\t * from the viewpoint.</p>\r\n\t *\r\n\t * @param a A second Vector3D object.\r\n\t * @returns A new Vector3D object that is perpendicular to the current\r\n\t *          Vector3D object and the Vector3D object specified as the\r\n\t *          parameter.\r\n\t */\r\n\tpublic crossProduct(a:Vector3D):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Decrements the value of the x, y, and z elements of the current\r\n\t * Vector3D object by the values of the x, y, and z elements of\r\n\t * specified Vector3D object. Unlike the\r\n\t * <code>Vector3D.subtract()</code> method, the\r\n\t * <code>decrementBy()</code> method changes the current Vector3D\r\n\t * object and does not return a new Vector3D object.\r\n\t *\r\n\t * @param a The Vector3D object containing the values to subtract from\r\n\t *          the current Vector3D object.\r\n\t */\r\n\tpublic decrementBy(a:Vector3D)\r\n\t{\r\n\t\tthis.x -= a.x;\r\n\t\tthis.y -= a.y;\r\n\t\tthis.z -= a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the distance between two Vector3D objects. The\r\n\t * <code>distance()</code> method is a static method. You can use it\r\n\t * directly as a method of the Vector3D class to get the Euclidean\r\n\t * distance between two three-dimensional points.\r\n\t *\r\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\r\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\r\n\t * @returns The distance between two Vector3D objects.\r\n\t */\r\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\r\n\t{\r\n\t\tvar x:number = (pt1.x - pt2.x);\r\n\t\tvar y:number = (pt1.y - pt2.y);\r\n\t\tvar z:number = (pt1.z - pt2.z);\r\n\t\treturn Math.sqrt(x*x + y*y + z*z);\r\n\t}\r\n\r\n\t/**\r\n\t * If the current Vector3D object and the one specified as the\r\n\t * parameter are unit vertices, this method returns the cosine of the\r\n\t * angle between the two vertices. Unit vertices are vertices that\r\n\t * point to the same direction but their length is one. They remove the\r\n\t * length of the vector as a factor in the result. You can use the\r\n\t * <code>normalize()</code> method to convert a vector to a unit\r\n\t * vector.\r\n\t *\r\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\r\n\t * vertices. It is also used in backface culling or lighting\r\n\t * calculations. Backface culling is a procedure for determining which\r\n\t * surfaces are hidden from the viewpoint. You can use the normalized\r\n\t * vertices from the camera, or eye, viewpoint and the cross product of\r\n\t * the vertices of a polygon surface to get the dot product. If the dot\r\n\t * product is less than zero, then the surface is facing the camera or\r\n\t * the viewer. If the two unit vertices are perpendicular to each\r\n\t * other, they are orthogonal and the dot product is zero. If the two\r\n\t * vertices are parallel to each other, the dot product is one.</p>\r\n\t *\r\n\t * @param a The second Vector3D object.\r\n\t * @returns A scalar which is the dot product of the current Vector3D\r\n\t *          object and the specified Vector3D object.\r\n\t *\r\n\t * @see away.geom.Vector3D#crossProduct()\r\n\t * @see away.geom.Vector3D#normalize()\r\n\t */\r\n\tpublic dotProduct(a:Vector3D):number\r\n\t{\r\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether two Vector3D objects are equal by comparing the\r\n\t * x, y, and z elements of the current Vector3D object with a\r\n\t * specified Vector3D object. If the values of these elements are the\r\n\t * same, the two Vector3D objects are equal. If the second optional\r\n\t * parameter is set to true, all four elements of the Vector3D objects,\r\n\t * including the w property, are compared.\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t * @param toCompare The Vector3D object to be compared with the current\r\n\t *                  Vector3D object.\r\n\t * @param allFour   An optional parameter that specifies whether the w\r\n\t *                  property of the Vector3D objects is used in the\r\n\t *                  comparison.\r\n\t * @returns A value of true if the specified Vector3D object is equal\r\n\t *          to the current Vector3D object; false if it is not equal.\r\n\t */\r\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the value of the x, y, and z elements of the current\r\n\t * Vector3D object by the values of the x, y, and z elements of a\r\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\r\n\t * method, the <code>incrementBy()</code> method changes the current\r\n\t * Vector3D object and does not return a new Vector3D object.\r\n\t *\r\n\t * @param a The Vector3D object to be added to the current Vector3D\r\n\t *          object.\r\n\t */\r\n\tpublic incrementBy(a:Vector3D)\r\n\t{\r\n\t\tthis.x += a.x;\r\n\t\tthis.y += a.y;\r\n\t\tthis.z += a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Compares the elements of the current Vector3D object with the\r\n\t * elements of a specified Vector3D object to determine whether they\r\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\r\n\t * value of all the elements of the two vertices are equal, or the\r\n\t * result of the comparison is within the tolerance range. The\r\n\t * difference between two elements must be less than the number\r\n\t * specified as the tolerance parameter. If the third optional\r\n\t * parameter is set to <code>true</code>, all four elements of the\r\n\t * Vector3D objects, including the <code>w</code> property, are\r\n\t * compared. Otherwise, only the x, y, and z elements are included in\r\n\t * the comparison.\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t * @param toCompare The Vector3D object to be compared with the current\r\n\t *                  Vector3D object.\r\n\t * @param tolerance A number determining the tolerance factor. If the\r\n\t *                  difference between the values of the Vector3D\r\n\t *                  element specified in the toCompare parameter and\r\n\t *                  the current Vector3D element is less than the\r\n\t *                  tolerance number, the two values are considered\r\n\t *                  nearly equal.\r\n\t * @param allFour   An optional parameter that specifies whether the w\r\n\t *                  property of the Vector3D objects is used in the\r\n\t *                  comparison.\r\n\t * @returns A value of true if the specified Vector3D object is nearly\r\n\t *          equal to the current Vector3D object; false if it is not\r\n\t *          equal.\r\n\t *\r\n\t * @see away.geom.Vector3D#equals()\r\n\t */\r\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\r\n\t{\r\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the current Vector3D object to its inverse. The inverse object\r\n\t * is also considered the opposite of the original object. The value of\r\n\t * the x, y, and z properties of the current Vector3D object is changed\r\n\t * to -x, -y, and -z.\r\n\t */\r\n\tpublic negate():void\r\n\t{\r\n\t\tthis.x = -this.x;\r\n\t\tthis.y = -this.y;\r\n\t\tthis.z = -this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a Vector3D object to a unit vector by dividing the first\r\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\r\n\t * are vertices that have a direction but their length is one. They\r\n\t * simplify vector calculations by removing length as a factor.\r\n\t */\r\n\t/**\r\n\t * Scales the line segment between(0,0) and the current point to a set\r\n\t * length.\r\n\t *\r\n\t * @param thickness The scaling value. For example, if the current\r\n\t *                  Vector3D object is (0,3,4), and you normalize it to\r\n\t *                  1, the point returned is at(0,0.6,0.8).\r\n\t */\r\n\tpublic normalize(thickness:number = 1)\r\n\t{\r\n\t\tif (this.length != 0) {\r\n\t\t\tvar invLength = thickness/this.length;\r\n\t\t\tthis.x *= invLength;\r\n\t\t\tthis.y *= invLength;\r\n\t\t\tthis.z *= invLength;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\r\n\t * <code>z</code> properties of the current Vector3D object by the\r\n\t * value of its <code>w</code> property.\r\n\t *\r\n\t * <p>If the current Vector3D object is the result of multiplying a\r\n\t * Vector3D object by a projection Matrix3D object, the w property can\r\n\t * hold the transform value. The <code>project()</code> method then can\r\n\t * complete the projection by dividing the elements by the\r\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\r\n\t * property to create a projection Matrix3D object.</p>\r\n\t */\r\n\tpublic project():void\r\n\t{\r\n\t\tthis.x /= this.w;\r\n\t\tthis.y /= this.w;\r\n\t\tthis.z /= this.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\r\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\r\n\t * number specified in the parameter. For example, if the vector is\r\n\t * scaled by ten, the result is a vector that is ten times longer. The\r\n\t * scalar can also change the direction of the vector. Multiplying the\r\n\t * vector by a negative number reverses its direction.\r\n\t *\r\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\r\n\r\n\t */\r\n\tpublic scaleBy(s:number):void\r\n\t{\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\t\tthis.z *= s;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Vector3D to the specified values\r\n\t *\r\n\t * @param xa The first element, such as the x coordinate.\r\n\t * @param ya The second element, such as the y coordinate.\r\n\t * @param za The third element, such as the z coordinate.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, za:number):void\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.z = za;\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the value of the x, y, and z elements of the current\r\n\t * Vector3D object from the values of the x, y, and z elements of\r\n\t * another Vector3D object. The <code>subtract()</code> method does not\r\n\t * change the current Vector3D object. Instead, this method returns a\r\n\t * new Vector3D object with the new values.\r\n\t *\r\n\t * @param a The Vector3D object to be subtracted from the current\r\n\t *          Vector3D object.\r\n\t * @returns A new Vector3D object that is the difference between the\r\n\t *          current Vector3D and the specified Vector3D object.\r\n\t *\r\n\t * @see away.geom.Vector3D#decrementBy()\r\n\t */\r\n\tpublic subtract(a:Vector3D):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a string representation of the current Vector3D object. The\r\n\t * string contains the values of the x, y, and z properties.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\r\n\t}\r\n}\r\n\r\nexport = Vector3D;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetLibrary\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\r\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\r\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\r\nimport ConflictStrategy\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategy\");\r\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\n/**\r\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\r\n * Its purpose is to create a container for 3D data management, both before and after parsing.\r\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\r\n */\r\nclass AssetLibraryBundle extends EventDispatcher\r\n{\r\n\tpublic static _iInstances:Object = new Object();\r\n\r\n\tprivate _loadingSessions:Array<AssetLoader>;\r\n\tprivate _strategy:ConflictStrategyBase;\r\n\tprivate _strategyPreference:string;\r\n\tprivate _assets:Array<IAsset>;\r\n\tprivate _assetDictionary:Object;\r\n\tprivate _assetDictDirty:boolean;\r\n\tprivate _loadingSessionsGarbage:Array<AssetLoader> = new Array<AssetLoader>();\r\n\tprivate _gcTimeoutIID:number;\r\n\r\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\r\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\r\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>AssetLibraryBundle</code> object.\r\n\t *\r\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\r\n\t\tthis._assetDictionary = new Object();\r\n\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\r\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\r\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\r\n\r\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\r\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\r\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\r\n\t * pass a string key to this method to define which bundle should be returned. This is\r\n\t * referred to as using the AssetLibrary as a multiton.\r\n\t *\r\n\t * @param key Defines which multiton instance should be returned.\r\n\t * @return An instance of the asset library\r\n\t */\r\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\r\n\t{\r\n\t\tif (!key)\r\n\t\t\tkey = 'default';\r\n\r\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\r\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\r\n\r\n\t\treturn AssetLibraryBundle._iInstances[key];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enableParser(parserClass:Object)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enableParsers(parserClasses:Object[])\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\r\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\r\n\t * is used which means that a numeric suffix is appended to one of the assets. The\r\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\r\n\t * be renamed.\r\n\t *\r\n\t * @see naming.ConflictStrategy\r\n\t * @see AssetLibrary.conflictPrecedence\r\n\t */\r\n\tpublic get conflictStrategy():ConflictStrategyBase\r\n\t{\r\n\t\treturn this._strategy;\r\n\t}\r\n\r\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\r\n\t{\r\n\r\n\t\tif (!val)\r\n\t\t\tthrow new Error('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\r\n\r\n\t\tthis._strategy = val.create();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines which asset should have precedence when resolving a naming conflict between\r\n\t * two assets of which one has just been renamed by the user or by a parser. By default\r\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\r\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\r\n\t *\r\n\t * This property is ignored for conflict strategies that do not actually rename an\r\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\r\n\t *\r\n\t * @see away.library.ConflictPrecedence\r\n\t * @see away.library.ConflictStrategy\r\n\t */\r\n\tpublic get conflictPrecedence():string\r\n\t{\r\n\t\treturn this._strategyPreference;\r\n\t}\r\n\r\n\tpublic set conflictPrecedence(val:string)\r\n\t{\r\n\t\tthis._strategyPreference = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\r\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\r\n\t * namespace. A \"null\" filter value means no filter of that type is used.\r\n\t *\r\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\r\n\t * null to not filter on asset type.\r\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\r\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\r\n\t * included in the iteration or not. This needs to be a function that takes a single\r\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\r\n\t *\r\n\t * @see away.library.AssetType\r\n\t */\r\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\r\n\t{\r\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a file and (optionally) all of its dependencies.\r\n\t *\r\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\r\n\t * @return A handle to the retrieved resource.\r\n\t */\r\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar loader:AssetLoader = new AssetLoader();\r\n\r\n\t\tif (!this._loadingSessions)\r\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\r\n\t\tthis._loadingSessions.push(loader);\r\n\r\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn loader.load(req, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a resource from existing data in memory.\r\n\t *\r\n\t * @param data The data object containing all resource information.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\r\n\t * @return A handle to the retrieved resource.\r\n\t */\r\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar loader:AssetLoader = new AssetLoader();\r\n\r\n\t\tif (!this._loadingSessions)\r\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\r\n\t\tthis._loadingSessions.push(loader);\r\n\r\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn loader.loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getAsset(name:string, ns:string = null):IAsset\r\n\t{\r\n\t\t//var asset : IAsset;\r\n\r\n\t\tif (this._assetDictDirty)\r\n\t\t\tthis.rehashAssetDict();\r\n\r\n\t\tif (ns == null)\r\n\t\t\tns = NamedAssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\treturn null;\r\n\r\n\t\treturn this._assetDictionary[ns][name];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an asset to the asset library, first making sure that it's name is unique\r\n\t * using the method defined by the <code>conflictStrategy</code> and\r\n\t * <code>conflictPrecedence</code> properties.\r\n\t */\r\n\tpublic addAsset(asset:IAsset)\r\n\t{\r\n\t\tvar ns:string;\r\n\t\tvar old:IAsset;\r\n\r\n\t\t// Bail if asset has already been added.\r\n\t\tif (this._assets.indexOf(asset) >= 0)\r\n\t\t\treturn;\r\n\r\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\r\n\t\tns = asset.assetNamespace || NamedAssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (old != null)\r\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\r\n\r\n\t\t//create unique-id (for now this is used in AwayBuilder only\r\n\t\t//asset.id = IDUtil.createUID();\r\n\r\n\t\t// Add it\r\n\t\tthis._assets.push(asset);\r\n\r\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\tthis._assetDictionary[ns] = new Object();\r\n\r\n\t\tthis._assetDictionary[ns][asset.name] = asset;\r\n\r\n\t\tasset.addEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\r\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an asset from the library, and optionally disposes that asset by calling\r\n\t * it's disposeAsset() method (which for most assets is implemented as a default\r\n\t * version of that type's dispose() method.\r\n\t *\r\n\t * @param asset The asset which should be removed from this library.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t */\r\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true)\r\n\t{\r\n\t\tvar idx:number;\r\n\r\n\t\tthis.removeAssetFromDict(asset);\r\n\r\n\t\tasset.removeEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\r\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\r\n\r\n\t\tidx = this._assets.indexOf(asset);\r\n\r\n\t\tif (idx >= 0)\r\n\t\t\tthis._assets.splice(idx, 1);\r\n\r\n\t\tif (dispose)\r\n\t\t\tasset.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an asset which is specified using name and namespace.\r\n\t *\r\n\t * @param name The name of the asset to be removed.\r\n\t * @param ns The namespace to which the desired asset belongs.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see away.library.AssetLibrary.removeAsset()\r\n\t */\r\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\r\n\t{\r\n\r\n\t\tvar asset:IAsset = this.getAsset(name, ns);\r\n\r\n\t\tif (asset)\r\n\t\t\tthis.removeAsset(asset, dispose);\r\n\r\n\t\treturn asset;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all assets from the asset library, optionally disposing them as they\r\n\t * are removed.\r\n\t *\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t */\r\n\tpublic removeAllAssets(dispose:boolean = true)\r\n\t{\r\n\t\tif (dispose) {\r\n\t\t\tvar asset:IAsset;\r\n\r\n\t\t\tfor (var c:number = 0; c < this._assets.length; c++) {\r\n\t\t\t\tasset = this._assets[ c ];\r\n\t\t\t\tasset.dispose();\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\t for each (asset in _assets)\r\n\t\t\t asset.dispose();\r\n\t\t\t */\r\n\t\t}\r\n\r\n\t\tthis._assets.length = 0;\r\n\t\tthis.rehashAssetDict();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all assets belonging to a particular namespace (null for default)\r\n\t * from the asset library, and optionall disposes them by calling their\r\n\t * disposeAsset() method.\r\n\t *\r\n\t * @param ns The namespace from which all assets should be removed.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see away.library.AssetLibrary.removeAsset()\r\n\t */\r\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true)\r\n\t{\r\n\t\tvar idx:number = 0;\r\n\t\tvar asset:IAsset;\r\n\t\tvar old_assets:IAsset[];\r\n\r\n\t\t// Empty the assets vector after having stored a copy of it.\r\n\t\t// The copy will be filled with all assets which weren't removed.\r\n\t\told_assets = this._assets.concat();\r\n\t\tthis._assets.length = 0;\r\n\r\n\t\tif (ns == null)\r\n\t\t\tns = NamedAssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tfor (var d:number = 0; d < old_assets.length; d++) {\r\n\t\t\tasset = old_assets[d];\r\n\r\n\t\t\t// Remove from dict if in the supplied namespace. If not,\r\n\t\t\t// transfer over to the new vector.\r\n\t\t\tif (asset.assetNamespace == ns) {\r\n\t\t\t\tif (dispose)\r\n\t\t\t\t\tasset.dispose();\r\n\r\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\r\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\r\n\t\t\t\t// test that is not needed since we know that the namespace\r\n\t\t\t\t// will be empty when loop finishes.\r\n\t\t\t\tthis.removeAssetFromDict(asset, false);\r\n\t\t\t} else {\r\n\t\t\t\tthis._assets[idx++] = asset;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t for each (asset in old_assets) {\r\n\t\t // Remove from dict if in the supplied namespace. If not,\r\n\t\t // transfer over to the new vector.\r\n\t\t if (asset.assetNamespace == ns) {\r\n\t\t if (dispose)\r\n\t\t asset.dispose();\r\n\r\n\t\t // Remove asset from dictionary, but don't try to auto-remove\r\n\t\t // the namespace, which will trigger an unnecessarily expensive\r\n\t\t // test that is not needed since we know that the namespace\r\n\t\t // will be empty when loop finishes.\r\n\t\t removeAssetFromDict(asset, false);\r\n\t\t } else\r\n\t\t _assets[idx++] = asset;\r\n\r\n\t\t }\r\n\t\t */\r\n\r\n\t\t// Remove empty namespace\r\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\tdelete this._assetDictionary[ns];\r\n\t}\r\n\r\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true)\r\n\t{\r\n\t\tif (this._assetDictDirty)\r\n\t\t\tthis.rehashAssetDict();\r\n\r\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\r\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\r\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\r\n\r\n\t\t\tif (autoRemoveEmptyNamespace) {\r\n\r\n\t\t\t\tvar key:string;\r\n\t\t\t\tvar empty:boolean = true;\r\n\r\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\r\n\t\t\t\t\tempty = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (empty)\r\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic stopAllLoadingSessions()\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (!this._loadingSessions)\r\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\r\n\t\tvar length:number = this._loadingSessions.length;\r\n\r\n\t\tfor (i = 0; i < length; i++)\r\n\t\t\tthis.killLoadingSession(this._loadingSessions[i]);\r\n\r\n\t\tthis._loadingSessions = null;\r\n\t}\r\n\r\n\tprivate rehashAssetDict()\r\n\t{\r\n\t\tvar asset:IAsset;\r\n\r\n\t\tthis._assetDictionary = {};\r\n\r\n\t\tvar l:number = this._assets.length;\r\n\r\n\t\tfor (var c:number = 0; c < l; c++) {\r\n\t\t\tasset = this._assets[c];\r\n\r\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\r\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\r\n\r\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\r\n\r\n\t\t}\r\n\r\n\t\tthis._assetDictDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during loading.\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing.\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\t// Only add asset to library the first time.\r\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\r\n\t\t\tthis.addAsset(event.asset);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tvar loader:AssetLoader = <AssetLoader> event.target;\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tvar index:number = this._loadingSessions.indexOf(loader);\r\n\t\tthis._loadingSessions.splice(index, 1);\r\n\r\n\t\t// Add loader to a garbage array - for a collection sweep and kill\r\n\t\tthis._loadingSessionsGarbage.push(loader);\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loadingSessionGC()}, 100);\r\n\t}\r\n\r\n\tprivate loadingSessionGC():void\r\n\t{\r\n\t\tvar loader:AssetLoader;\r\n\r\n\t\twhile (this._loadingSessionsGarbage.length > 0) {\r\n\t\t\tloader = this._loadingSessionsGarbage.pop();\r\n\t\t\tthis.killLoadingSession(loader);\r\n\t\t}\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\r\n\t}\r\n\r\n\tprivate killLoadingSession(loader:AssetLoader)\r\n\t{\r\n\t\tloader.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t\tloader.stop();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when unespected error occurs\r\n\t */\r\n\t/*\r\n\t private onResourceError() : void\r\n\t {\r\n\t var msg:string = \"Unexpected parser error\";\r\n\t if(hasEventListener(LoaderEvent.DEPENDENCY_ERROR)){\r\n\t var re:LoaderEvent = new LoaderEvent(LoaderEvent.DEPENDENCY_ERROR, \"\");\r\n\t dispatchEvent(re);\r\n\t } else{\r\n\t throw new Error(msg);\r\n\t }\r\n\t }\r\n\t */\r\n\r\n\tprivate onAssetRename(event:AssetEvent)\r\n\t{\r\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\r\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\r\n\r\n\t\tif (old != null) {\r\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\r\n\t\t} else {\r\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\r\n\r\n\t\t\tif (dict == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tdict[event.assetPrevName] = null;\r\n\t\t\tdict[event.asset.name] = event.asset;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetConflictResolved(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event.clone());\r\n\t}\r\n}\r\n\r\nexport = AssetLibraryBundle;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nclass AssetLibraryIterator\r\n{\r\n\r\n\tprivate  _assets:Array<IAsset>;\r\n\tprivate _filtered:Array<IAsset>;\r\n\r\n\tprivate _idx:number;\r\n\r\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\r\n\t{\r\n\t\tthis._assets = assets;\r\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\tpublic get currentAsset():IAsset\r\n\t{\r\n\t\t// Return current, or null if no current\r\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\r\n\t}\r\n\r\n\tpublic get numAssets():number\r\n\t{\r\n\t\treturn this._filtered.length;\r\n\t}\r\n\r\n\tpublic next():IAsset\r\n\t{\r\n\t\tvar next:IAsset = null;\r\n\r\n\t\tif (this._idx < this._filtered.length)\r\n\t\t\tnext = this._filtered[this._idx];\r\n\r\n\t\tthis._idx++;\r\n\r\n\t\treturn next;\r\n\t}\r\n\r\n\tpublic reset()\r\n\t{\r\n\t\tthis._idx = 0;\r\n\t}\r\n\r\n\tpublic setIndex(index:number)\r\n\t{\r\n\t\tthis._idx = index;\r\n\t}\r\n\r\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc)\r\n\t{\r\n\t\tif (assetTypeFilter || namespaceFilter) {\r\n\r\n\t\t\tvar idx:number;\r\n\t\t\tvar asset:IAsset;\r\n\r\n\r\n\t\t\tidx = 0;\r\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\r\n\r\n\t\t\tvar l:number = this._assets.length;\r\n\r\n\t\t\tfor (var c:number = 0; c < l; c++) {\r\n\r\n\t\t\t\tasset = <IAsset> this._assets[c];\r\n\r\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\r\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\r\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\r\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tthis._filtered[idx++] = asset;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/*\r\n\t\t\t for each (asset in _assets) {\r\n\t\t\t // Skip this assets if filtering on type and this is wrong type\r\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\r\n\t\t\t continue;\r\n\r\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\r\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\r\n\t\t\t continue;\r\n\r\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\r\n\t\t\t if (filterFunc != null && !filterFunc(asset))\r\n\t\t\t continue;\r\n\r\n\t\t\t _filtered[idx++] = asset;\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t} else {\r\n\t\t\tthis._filtered = this._assets;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = AssetLibraryIterator;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetLibraryBundle\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\r\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\n/**\r\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\r\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\r\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\r\n */\r\nclass AssetLibrary\r\n{\r\n\t/**\r\n\t * Creates a new <code>AssetLibrary</code> object.\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t//*/\r\n\t/**\r\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\r\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\r\n\t * pass a string key to this method to define which bundle should be returned. This is\r\n\t * referred to as using the AssetLibraryBundle as a multiton.\r\n\t *\r\n\t * @param key Defines which multiton instance should be returned.\r\n\t * @return An instance of the asset library\r\n\t */\r\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\r\n\t{\r\n\t\treturn AssetLibraryBundle.getInstance(key);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static enableParser(parserClass)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for conflictStrategy property on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.conflictStrategy\r\n\t */\r\n\tpublic static get conflictStrategy():ConflictStrategyBase\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\r\n\t}\r\n\r\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\r\n\t{\r\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.conflictPrecedence\r\n\t */\r\n\tpublic static get conflictPrecedence():string\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\r\n\t}\r\n\r\n\tpublic static set conflictPrecedence(val:string)\r\n\t{\r\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for createIterator() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.createIterator()\r\n\t */\r\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for load() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.load()\r\n\t */\r\n\tpublic static load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().load(req, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for loadData() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.loadData()\r\n\t */\r\n\tpublic static loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().loadData(data, context, ns, parser);\r\n\t}\r\n\r\n\tpublic static stopLoad()\r\n\t{\r\n\t\tAssetLibrary.getBundle().stopAllLoadingSessions();\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for getAsset() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.getAsset()\r\n\t */\r\n\tpublic static getAsset(name:string, ns:string = null):IAsset\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for addEventListener() method on default asset library bundle.\r\n\t */\r\n\tpublic static addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeEventListener() method on default asset library bundle.\r\n\t */\r\n\tpublic static removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for hasEventListener() method on default asset library bundle.\r\n\r\n\t public static hasEventListener(type:string):boolean\r\n\t {\r\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\r\n\t}\r\n\r\n\t public static willTrigger(type:string):boolean\r\n\t {\r\n\t\treturn getBundle().willTrigger(type);\r\n\t}\r\n\t */\r\n\r\n\t/**\r\n\t * Short-hand for addAsset() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.addAsset()\r\n\t */\r\n\tpublic static addAsset(asset:IAsset)\r\n\t{\r\n\t\tAssetLibrary.getBundle().addAsset(asset);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAsset() method on default asset library bundle.\r\n\t *\r\n\t * @param asset The asset which should be removed from the library.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAsset()\r\n\t */\r\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\r\n\t *\r\n\t * @param name The name of the asset to be removed.\r\n\t * @param ns The namespace to which the desired asset belongs.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAssetByName()\r\n\t */\r\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\r\n\t *\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAllAssets()\r\n\t */\r\n\tpublic static removeAllAssets(dispose:boolean = true)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\r\n\t */\r\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\r\n\t}\r\n}\r\n\r\nexport = AssetLibrary;",
    "class AssetLoaderContext\r\n{\r\n\tpublic static UNDEFINED:number = 0;\r\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\r\n\tpublic static MULTIPASS_MATERIALS:number = 2;\r\n\r\n\tprivate _includeDependencies:boolean;\r\n\tprivate _dependencyBaseUrl:string;\r\n\tprivate _embeddedDataByUrl:Object;\r\n\tprivate _remappedUrls:Object;\r\n\tprivate _materialMode:number;\r\n\r\n\tprivate _overrideAbsPath:boolean;\r\n\tprivate _overrideFullUrls:boolean;\r\n\r\n\t/**\r\n\t * AssetLoaderContext provides configuration for the AssetLoader load() and parse() operations.\r\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\r\n\t * embedded data.\r\n\t *\r\n\t * @see away.loading.AssetLoader\r\n\t */\r\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\r\n\t{\r\n\t\tthis._includeDependencies = includeDependencies;\r\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\r\n\t\tthis._embeddedDataByUrl = {};\r\n\t\tthis._remappedUrls = {};\r\n\t\tthis._materialMode = AssetLoaderContext.UNDEFINED;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\r\n\t * parseData() operations) should be automatically loaded. Defaults to true.\r\n\t */\r\n\tpublic get includeDependencies():boolean\r\n\t{\r\n\t\treturn this._includeDependencies;\r\n\t}\r\n\r\n\tpublic set includeDependencies(val:boolean)\r\n\t{\r\n\t\tthis._includeDependencies = val;\r\n\t}\r\n\r\n\t/**\r\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\r\n\t * Options:\r\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\r\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\r\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\r\n\t *\r\n\t */\r\n\tpublic get materialMode():number\r\n\t{\r\n\t\treturn this._materialMode;\r\n\t}\r\n\r\n\tpublic set materialMode(materialMode:number)\r\n\t{\r\n\t\tthis._materialMode = materialMode;\r\n\t}\r\n\r\n\t/**\r\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\r\n\t * Absolute paths will not be affected by the value of this property.\r\n\t */\r\n\tpublic get dependencyBaseUrl():string\r\n\t{\r\n\t\treturn this._dependencyBaseUrl;\r\n\t}\r\n\r\n\tpublic set dependencyBaseUrl(val:string)\r\n\t{\r\n\t\tthis._dependencyBaseUrl = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\r\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\r\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\r\n\t */\r\n\tpublic get overrideAbsolutePaths():boolean\r\n\t{\r\n\t\treturn this._overrideAbsPath;\r\n\t}\r\n\r\n\tpublic set overrideAbsolutePaths(val:boolean)\r\n\t{\r\n\t\tthis._overrideAbsPath = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\r\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\r\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\r\n\t */\r\n\tpublic get overrideFullURLs():boolean\r\n\t{\r\n\t\treturn this._overrideFullUrls;\r\n\t}\r\n\r\n\tpublic set overrideFullURLs(val:boolean)\r\n\t{\r\n\t\tthis._overrideFullUrls = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\r\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\r\n\t * expected by the loaded file.\r\n\t *\r\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\r\n\t * @param newUrl The URL from which away.should load the resource instead.\r\n\t *\r\n\t * @see mapUrlToData()\r\n\t */\r\n\tpublic mapUrl(originalUrl:string, newUrl:string)\r\n\t{\r\n\t\tthis._remappedUrls[originalUrl] = newUrl;\r\n\t}\r\n\r\n\t/**\r\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\r\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\r\n\t *\r\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\r\n\t * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\r\n\t */\r\n\tpublic mapUrlToData(originalUrl:string, data:any)\r\n\t{\r\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Defines whether embedded data has been mapped to a particular URL.\r\n\t */\r\n\tpublic _iHasDataForUrl(url:string):boolean\r\n\t{\r\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Returns embedded data for a particular URL.\r\n\t */\r\n\tpublic _iGetDataForUrl(url:string):any\r\n\t{\r\n\t\treturn this._embeddedDataByUrl[url];\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Defines whether a replacement URL has been mapped to a particular URL.\r\n\t */\r\n\tpublic _iHasMappingForUrl(url:string):boolean\r\n\t{\r\n\t\treturn this._remappedUrls.hasOwnProperty(url);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Returns new (replacement) URL for a particular original URL.\r\n\t */\r\n\tpublic _iGetRemappedUrl(originalUrl:string):string\r\n\t{\r\n\t\treturn this._remappedUrls[originalUrl];\r\n\t}\r\n}\r\n\r\nexport = AssetLoaderContext;",
    "import AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\n/**\r\n * Dispatched when any asset finishes parsing. Also see specific events for each\r\n * individual asset type (meshes, materials et c.)\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a full resource (including dependencies) finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a single dependency (which may be the main file of a resource)\r\n * finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during loading. I\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during parsing.\r\n *\r\n * @eventType away.events.ParserEvent\r\n */\r\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a skybox asset has been costructed from a ressource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"skyboxComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a camera3d asset has been costructed from a ressource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"cameraComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a mesh asset has been costructed from a ressource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"meshComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a geometry asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"geometryComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a skeleton asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"skeletonComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a skeleton pose asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"skeletonPoseComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a container asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"containerComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a texture asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"textureComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Dispatched when a texture projector asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"textureProjectorComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a material asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"materialComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a animator asset has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"animatorComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an animation set has been constructed from a group of animation state resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"animationSetComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an animation state has been constructed from a group of animation node resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"animationStateComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an animation node has been constructed from a resource.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"animationNodeComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an animation state transition has been constructed from a group of animation node resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"stateTransitionComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an light asset has been constructed from a resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"lightComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an light picker asset has been constructed from a resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"lightPickerComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an effect method asset has been constructed from a resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"effectMethodComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an shadow map method asset has been constructed from a resources.\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"shadowMapMethodComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * Instances of this class are returned as tokens by loading operations\r\n * to provide an object on which events can be listened for in cases where\r\n * the actual asset loader is not directly available (e.g. when using the\r\n * AssetLibrary to perform the load.)\r\n *\r\n * By listening for events on this class instead of directly on the\r\n * AssetLibrary, one can distinguish different loads from each other.\r\n *\r\n * The token will dispatch all events that the original AssetLoader dispatches,\r\n * while not providing an interface to obstruct the load and is as such a\r\n * safer return value for loader wrappers than the loader itself.\r\n */\r\nclass AssetLoaderToken extends EventDispatcher\r\n{\r\n\tpublic _iLoader:AssetLoader;\r\n\r\n\tconstructor(loader:AssetLoader)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iLoader = loader;\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._iLoader.addEventListener(type, listener);\r\n\t}\r\n\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._iLoader.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string, listener:Function = null):boolean\r\n\t{\r\n\t\treturn this._iLoader.hasEventListener(type, listener);\r\n\t}\r\n\r\n\t/*\r\n\t public willTrigger(type:string):boolean\r\n\t {\r\n\t return this._iLoader.willTrigger(type);\r\n\t }\r\n\t */\r\n}\r\n\r\nexport = AssetLoaderToken;",
    "import AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport CubeTextureParser\t\t= require(\"awayjs-core/lib/parsers/CubeTextureParser\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport Texture2DParser\t\t\t= require(\"awayjs-core/lib/parsers/Texture2DParser\");\r\n\r\n/**\r\n * Dispatched when any asset finishes parsing. Also see specific events for each\r\n * individual asset type (meshes, materials et c.)\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a full resource (including dependencies) finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a single dependency (which may be the main file of a resource)\r\n * finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during loading. I\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during parsing.\r\n *\r\n * @eventType away.events.ParserEvent\r\n */\r\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\r\n\r\n/**\r\n * Dispatched when an image asset dimensions are not a power of 2\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * AssetLoader can load any file format that away.supports (or for which a third-party parser\r\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\r\n * and for when the resource (or it's dependencies) have been loaded.\r\n *\r\n * The AssetLoader will not make assets available in any other way than through the dispatched\r\n * events. To store assets and make them available at any point from any module in an application,\r\n * use the AssetLibrary to load and manage assets.\r\n *\r\n * @see away.library.AssetLibrary\r\n */\r\nclass AssetLoader extends EventDispatcher\r\n{\r\n\tprivate _context:AssetLoaderContext;\r\n\tprivate _token:AssetLoaderToken;\r\n\tprivate _uri:string;\r\n\tprivate _materialMode:number;\r\n\r\n\tprivate _errorHandlers:Array<Function>;\r\n\tprivate _parseErrorHandlers:Array<Function>;\r\n\r\n\tprivate _stack:Array<ResourceDependency>;\r\n\tprivate _baseDependency:ResourceDependency;\r\n\tprivate _currentDependency:ResourceDependency;\r\n\tprivate _namespace:string;\r\n\r\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\r\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\r\n\tprivate _onLoadCompleteDelegate:(event:Event) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => void;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\r\n\r\n\t// Image parser only parser that is added by default, to save file size.\r\n\tprivate static _parsers:Array<any> = new Array<any>(Texture2DParser, CubeTextureParser);\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parser The parser class to enable.\r\n\t *\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parser)\r\n\t{\r\n\t\tif (AssetLoader._parsers.indexOf(parser) < 0)\r\n\t\t\tAssetLoader._parsers.push(parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * AssetLoader can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parsers A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parsers:Array<Object>)\r\n\t{\r\n\t\tfor (var c:number = 0; c < parsers.length; c++)\r\n\t\t\tAssetLoader.enableParser(parsers[ c ]);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the base dependency of the loader\r\n\t */\r\n\tpublic get baseDependency():ResourceDependency\r\n\t{\r\n\t\treturn this._baseDependency;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new ResourceLoadSession object.\r\n\t */\r\n\tconstructor(materialMode:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._materialMode = materialMode;\r\n\r\n\t\tthis._stack = new Array<ResourceDependency>();\r\n\t\tthis._errorHandlers = new Array<Function>();\r\n\t\tthis._parseErrorHandlers = new Array<Function>();\r\n\r\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\r\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t\tthis._onLoadCompleteDelegate = (event:Event) => this.onLoadComplete(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a file and (optionally) all of its dependencies.\r\n\t *\r\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\r\n\t */\r\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tif (!this._token) {\r\n\t\t\tthis._token = new AssetLoaderToken(this);\r\n\r\n\t\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\r\n\t\t\tthis._context = context;\r\n\t\t\tthis._namespace = ns;\r\n\r\n\t\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\r\n\t\t\tthis.retrieveDependency(this._baseDependency);\r\n\r\n\t\t\treturn this._token;\r\n\t\t}\r\n\r\n\t\t// TODO: Throw error (already loading)\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a resource from already loaded data.\r\n\t *\r\n\t * @param data The data object containing all resource information.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\r\n\t */\r\n\tpublic loadData(data:any, id:string, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tif (!this._token) {\r\n\t\t\tthis._token = new AssetLoaderToken(this);\r\n\r\n\t\t\tthis._uri = id;\r\n\t\t\tthis._context = context;\r\n\t\t\tthis._namespace = ns;\r\n\r\n\t\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\r\n\t\t\tthis.retrieveDependency(this._baseDependency);\r\n\r\n\t\t\treturn this._token;\r\n\t\t}\r\n\r\n\t\t// TODO: Throw error (already loading)\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\r\n\t * stack when complete and continues on the top set.\r\n\t * @param parser The parser that will translate the data into a usable resource.\r\n\t */\r\n\tprivate retrieveNext(parser:ParserBase = null)\r\n\t{\r\n\t\tif (this._currentDependency.dependencies.length) {\r\n\r\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\r\n\r\n\t\t\tthis._stack.push(this._currentDependency);\r\n\t\t\tthis.retrieveDependency(next);\r\n\r\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\r\n\r\n\t\t\tthis._currentDependency.parser._iResumeParsingAfterDependencies();\r\n\t\t\tthis._stack.pop();\r\n\r\n\t\t} else if (this._stack.length) {\r\n\r\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\r\n\r\n\t\t\tthis._currentDependency = this._stack.pop();\r\n\r\n\t\t\tif (prev._iSuccess)\r\n\t\t\t\tprev.resolve();\r\n\r\n\t\t\tthis.retrieveNext(parser);\r\n\r\n\t\t} else {\r\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.RESOURCE_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves a single dependency.\r\n\t * @param parser The parser that will translate the data into a usable resource.\r\n\t */\r\n\tprivate retrieveDependency(dependency:ResourceDependency)\r\n\t{\r\n\t\tvar data:any;\r\n\r\n\t\tif (this._context && this._context.materialMode != 0)\r\n\t\t\tthis._materialMode = this._context.materialMode;\r\n\r\n\t\tthis._currentDependency = dependency;\r\n\r\n\t\tdependency._iLoader = new URLLoader();\r\n\r\n\t\tthis.addEventListeners(dependency._iLoader);\r\n\r\n\t\t// Get already loaded (or mapped) data if available\r\n\t\tdata = dependency.data;\r\n\r\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\r\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\r\n\r\n\t\tif (data) {\r\n\t\t\tif (data.constructor === Function)\r\n\t\t\t\tdata = new data();\r\n\r\n\t\t\tdependency._iSetData(data);\r\n\r\n\t\t\tif (dependency.retrieveAsRawData) {\r\n\t\t\t\t// No need to parse. The parent parser is expecting this\r\n\t\t\t\t// to be raw data so it can be passed directly.\r\n\t\t\t\tdependency.resolve();\r\n\r\n\t\t\t\t// Move on to next dependency\r\n\t\t\t\tthis.retrieveNext();\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis.parseDependency(dependency);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// Resolve URL and start loading\r\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\r\n\r\n\t\t\tif (dependency.retrieveAsRawData) {\r\n\t\t\t\t// Always use binary for raw data loading\r\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (!dependency.parser)\r\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\r\n\r\n\t\t\t\tif (dependency.parser) {\r\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\r\n\t\t\t\t\t// file type check will determine format after load, and if\r\n\t\t\t\t\t// binary, a text load will have broken the file data.\r\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdependency._iLoader.load(dependency.request);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate joinUrl(base:string, end:string):string\r\n\t{\r\n\t\tif (end.charAt(0) == '/')\r\n\t\t\tend = end.substr(1);\r\n\r\n\t\tif (base.length == 0)\r\n\t\t\treturn end;\r\n\r\n\t\tif (base.charAt(base.length - 1) == '/')\r\n\t\t\tbase = base.substr(0, base.length - 1);\r\n\r\n\t\treturn base.concat('/', end);\r\n\r\n\t}\r\n\r\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\r\n\t{\r\n\t\tvar scheme_re:RegExp;\r\n\t\tvar base:string;\r\n\t\tvar url:string = dependency.request.url;\r\n\r\n\t\t// Has the user re-mapped this URL?\r\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\r\n\t\t\treturn this._context._iGetRemappedUrl(url);\r\n\r\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\r\n\t\t// We will not try to resolve this since the user can probably be\r\n\t\t// thrusted to know this URL better than our automatic resolver. :)\r\n\t\tif (url == this._uri)\r\n\t\t\treturn url;\r\n\r\n\r\n\t\t// Absolute URL? Check if starts with slash or a URL\r\n\t\t// scheme definition (e.g. ftp://, http://, file://)\r\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\r\n\r\n\t\tif (url.charAt(0) == '/') {\r\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\r\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\r\n\t\t\t\treturn url;\r\n\t\t} else if (scheme_re.test(url)) {\r\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\r\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\r\n\t\t\tif (this._context && this._context.overrideFullURLs) {\r\n\r\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\r\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Since not absolute, just get rid of base file name to find it's\r\n\t\t// folder and then concatenate dynamic URL\r\n\t\tif (this._context && this._context.dependencyBaseUrl) {\r\n\t\t\tbase = this._context.dependencyBaseUrl;\r\n\t\t\treturn this.joinUrl(base, url);\r\n\t\t} else {\r\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\r\n\t\t\treturn this.joinUrl(base, url);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate retrieveParserDependencies()\r\n\t{\r\n\t\tif (!this._currentDependency)\r\n\t\t\treturn;\r\n\r\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies\r\n\t\tvar i:number, len:number = parserDependancies.length;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\r\n\r\n\r\n\t\t// Since more dependencies might be added eventually, empty this\r\n\t\t// list so that the same dependency isn't retrieved more than once.\r\n\t\tparserDependancies.length = 0;\r\n\r\n\t\tthis._stack.push(this._currentDependency);\r\n\r\n\t\tthis.retrieveNext();\r\n\t}\r\n\r\n\tprivate resolveParserDependencies()\r\n\t{\r\n\t\tthis._currentDependency._iSuccess = true;\r\n\r\n\t\t// Retrieve any last dependencies remaining on this parser, or\r\n\t\t// if none exists, just move on.\r\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\r\n\t\t\tthis.retrieveParserDependencies();\r\n\t\telse\r\n\t\t\tthis.retrieveNext();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent)\r\n\t{\r\n\t\tvar handled:boolean;\r\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\r\n\t\tvar loader:URLLoader = <URLLoader> event.target;//TODO: keep on eye on this one\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR )) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\thandled = true;\r\n\t\t} else {\r\n\t\t\t// TODO: Consider not doing this even when AssetLoader does have it's own LOAD_ERROR listener\r\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tif (!handled)\r\n\t\t\t\t\thandled = <boolean> this._errorHandlers[i](event);\r\n\t\t}\r\n\r\n\t\tif (handled) {\r\n\r\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\r\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\r\n\r\n\t\t\t\tthis._currentDependency.resolveFailure();\r\n\t\t\t\tthis.retrieveNext();\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// Either this was the base file (last left in the stack) or\r\n\t\t\t\t// default behavior was prevented by the handlers, and hence\r\n\t\t\t\t// there is nothing more to do than clean up and bail.\r\n\t\t\t\tthis.dispose();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\r\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\r\n\t * @param event\r\n\t */\r\n\tprivate onParseError(event:ParserEvent)\r\n\t{\r\n\t\tvar handled:boolean;\r\n\r\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\r\n\r\n\t\tvar loader:URLLoader = <URLLoader>event.target;\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\thandled = true;\r\n\t\t} else {\r\n\t\t\t// TODO: Consider not doing this even when AssetLoader does\r\n\t\t\t// have it's own LOAD_ERROR listener\r\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\r\n\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tif (!handled)\r\n\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\r\n\t\t}\r\n\r\n\t\tif (handled) {\r\n\t\t\tthis.dispose();\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\r\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\r\n\t\t\tthrow new Error(event.message);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\t// Add loaded asset to list of assets retrieved as part\r\n\t\t// of the current dependency. This list will be inspected\r\n\t\t// by the parent parser when dependency is resolved\r\n\t\tif (this._currentDependency)\r\n\t\t\tthis._currentDependency.assets.push(event.asset);\r\n\r\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\r\n\r\n\t\tif (!this._currentDependency.suppresAssetEvents)\r\n\t\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tprivate onReadyForDependencies(event:ParserEvent)\r\n\t{\r\n\t\tvar parser:ParserBase = <ParserBase> event.target;\r\n\r\n\t\tif (this._context && !this._context.includeDependencies)\r\n\t\t\tparser._iResumeParsingAfterDependencies();\r\n\t\telse\r\n\t\t\tthis.retrieveParserDependencies();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadComplete(event:Event)\r\n\t{\r\n\t\tvar loader:URLLoader = <URLLoader> event.target;\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\t// Resolve this dependency\r\n\t\tthis._currentDependency._iSetData(loader.data);\r\n\r\n\t\tif (this._currentDependency.retrieveAsRawData) {\r\n\t\t\t// No need to parse this data, which should be returned as is\r\n\t\t\tthis.resolveParserDependencies();\r\n\t\t} else {\r\n\t\t\tthis.parseDependency(this._currentDependency);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when parsing is complete.\r\n\t */\r\n\tprivate onParseComplete(event:ParserEvent):void\r\n\t{\r\n\t\tvar parser:ParserBase = <ParserBase> event.target;\r\n\r\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\r\n\r\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\r\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\r\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\r\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an image is too large or it's dimensions are not a power of 2\r\n\t * @param event\r\n\t */\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tprivate addEventListeners(loader:URLLoader)\r\n\t{\r\n\t\tloader.addEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\r\n\t\tloader.addEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\r\n\t}\r\n\r\n\tprivate removeEventListeners(loader:URLLoader)\r\n\t{\r\n\t\tloader.removeEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\r\n\t\tloader.removeEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\r\n\t}\r\n\r\n\tpublic stop()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\tprivate dispose()\r\n\t{\r\n\t\tthis._errorHandlers = null;\r\n\t\tthis._parseErrorHandlers = null;\r\n\t\tthis._context = null;\r\n\t\tthis._token = null;\r\n\t\tthis._stack = null;\r\n\r\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\r\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\r\n\r\n\t\tthis._currentDependency = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\r\n\t * add error event listeners to the AssetLoader instance. This system is used instead of\r\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\r\n\t * that if hasEventListener() returns true, it's client code that's listening for the\r\n\t * event. Secondly, functions added as error handler through this custom method are\r\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\r\n\t * whether they in turn had any client code listening for the event.) If no handlers\r\n\t * return true, the AssetLoader knows that the event wasn't handled and will throw an RTE.\r\n\t */\r\n\r\n\tpublic _iAddParseErrorHandler(handler)\r\n\t{\r\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\r\n\t\t\tthis._parseErrorHandlers.push(handler);\r\n\t}\r\n\r\n\tpublic _iAddErrorHandler(handler)\r\n\t{\r\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\r\n\t\t\tthis._errorHandlers.push(handler);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Guesses the parser to be used based on the file contents.\r\n\t * @param data The data to be parsed.\r\n\t * @param uri The url or id of the object to be parsed.\r\n\t * @return An instance of the guessed parser.\r\n\t */\r\n\tprivate getParserFromData(data:any):ParserBase\r\n\t{\r\n\t\tvar len:number = AssetLoader._parsers.length;\r\n\r\n\t\t// go in reverse order to allow application override of default parser added in away.proper\r\n\t\tfor (var i:number = len - 1; i >= 0; i--)\r\n\t\t\tif (AssetLoader._parsers[i].supportsData(data))\r\n\t\t\t\treturn new AssetLoader._parsers[i]();\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Initiates parsing of the loaded dependency.\r\n\t *\r\n\t * @param The dependency to be parsed.\r\n\t */\r\n\tprivate parseDependency(dependency:ResourceDependency):void\r\n\t{\r\n\t\tvar parser:ParserBase = dependency.parser;\r\n\r\n\t\t// If no parser has been defined, try to find one by letting\r\n\t\t// all plugged in parsers inspect the actual data.\r\n\t\tif (!parser)\r\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\r\n\r\n\t\tif (parser) {\r\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\r\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\r\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\r\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t\tif (dependency.request && dependency.request.url)\r\n\t\t\t\tparser._iFileName = dependency.request.url;\r\n\r\n\t\t\tparser.materialMode = this._materialMode;\r\n\r\n\t\t\tparser.parseAsync(dependency.data);\r\n\r\n\t\t} else {\r\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\"\r\n\t\t\tif(this.hasEventListener(ParserEvent.PARSE_ERROR))\r\n\t\t\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\r\n\t\t\telse\r\n\t\t\t\tthrow new Error(message);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Guesses the parser to be used based on the file extension.\r\n\t * @return An instance of the guessed parser.\r\n\t */\r\n\tprivate getParserFromSuffix(url:string):ParserBase\r\n\t{\r\n\t\t// Get rid of query string if any and extract extension\r\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\r\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\r\n\r\n\t\tvar len:number = AssetLoader._parsers.length;\r\n\r\n\t\t// go in reverse order to allow application override of default parser added in away.proper\r\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\r\n\t\t\tvar parserClass:any = AssetLoader._parsers[i];\r\n\t\t\tif (parserClass.supportsType(fileExtension))\r\n\t\t\t\treturn new parserClass();\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport = AssetLoader;",
    "class AssetType\r\n{\r\n\tpublic static ANIMATION_NODE:string = 'animationNode';\r\n\tpublic static ANIMATION_SET:string = 'animationSet';\r\n\tpublic static ANIMATION_STATE:string = 'animationState';\r\n\tpublic static ANIMATOR:string = 'animator';\r\n\tpublic static BILLBOARD:string = 'billboard';\r\n\tpublic static CAMERA:string = 'camera';\r\n\tpublic static CONTAINER:string = 'container';\r\n\tpublic static EFFECTS_METHOD:string = 'effectsMethod';\r\n\tpublic static FONT:string = 'font';\r\n\tpublic static GEOMETRY:string = 'geometry';\r\n\tpublic static LINE_SEGMENT:string = 'lineSegment';\r\n\tpublic static LIGHT:string = 'light';\r\n\tpublic static LIGHT_PICKER:string = 'lightPicker';\r\n\tpublic static MATERIAL:string = 'material';\r\n\tpublic static MESH:string = 'mesh';\r\n\tpublic static TRIANGLE_SUB_MESH:string = 'triangleSubMesh';\r\n    public static CURVE_SUB_MESH:string = 'curveSubMesh';\r\n\tpublic static LINE_SUB_MESH:string = 'lineSubMesh';\r\n\tpublic static PRIMITIVE_PREFAB:string = 'primitivePrefab';\r\n\tpublic static SHADOW_MAP_METHOD:string = 'shadowMapMethod';\r\n\tpublic static SKELETON:string = 'skeleton';\r\n\tpublic static SKELETON_POSE:string = 'skeletonPose';\r\n\tpublic static SKYBOX:string = 'skybox';\r\n\tpublic static STATE_TRANSITION:string = 'stateTransition';\r\n\tpublic static TEXTFIELD:string = 'textfield';\r\n\tpublic static TEXTFORMAT:string = 'textformat';\r\n\tpublic static TEXTURE:string = 'texture';\r\n\tpublic static TEXTURE_PROJECTOR:string = 'textureProjector';\r\n\tpublic static TIMELINE:string = 'timeline';\r\n}\r\n\r\nexport = AssetType;",
    "/**\r\n * Enumaration class for precedence when resolving naming conflicts in the library.\r\n *\r\n * @see away.library.AssetLibrary.conflictPrecedence\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.naming.ConflictStrategy\r\n */\r\nclass ConflictPrecedence\r\n{\r\n\t/**\r\n\t * Signals that in a conflict, the previous owner of the conflicting name\r\n\t * should be favored (and keep it's name) and that the newly renamed asset\r\n\t * is reverted to a non-conflicting name.\r\n\t */\r\n\tpublic static FAVOR_OLD:string = 'favorOld';\r\n\r\n\t/**\r\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\r\n\t * it's newly defined name) and that the previous owner of that name gets\r\n\t * renamed to a non-conflicting name.\r\n\t */\r\n\tpublic static FAVOR_NEW:string = 'favorNew';\r\n}\r\n\r\nexport = ConflictPrecedence;",
    "import ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\n\r\n/**\r\n * Abstract base class for naming conflict resolution classes. Extend this to create a\r\n * strategy class which the asset library can use to resolve asset naming conflicts, or\r\n * use one of the bundled concrete strategy classes:\r\n *\r\n * <ul>\r\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\r\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\r\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\r\n * </ul>\r\n *\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.ConflictStrategy\r\n * @see away.library.IgnoreConflictStrategy\r\n * @see away.library.ErrorConflictStrategy\r\n * @see away.library.NumSuffixConflictStrategy\r\n */\r\nclass ConflictStrategyBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\r\n\t * classes.\r\n\t */\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\r\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\r\n\t * would break any state caching that happens inside the strategy class.\r\n\t */\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\r\n\t * the conflict resolution by applying the new names and dispatching the correct events.\r\n\t */\r\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tvar loser_prev_name:string;\r\n\t\tvar winner:IAsset;\r\n\t\tvar loser:IAsset;\r\n\r\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\r\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\r\n\r\n\t\tloser_prev_name = loser.name;\r\n\r\n\t\tassetsDictionary[winner.name] = winner;\r\n\t\tassetsDictionary[nonConflictingName] = loser;\r\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\r\n\r\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\r\n\t}\r\n}\r\n\r\nexport = ConflictStrategyBase;",
    "import ConflictStrategyBase\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport ErrorConflictStrategy\t\t= require(\"awayjs-core/lib/library/ErrorConflictStrategy\");\r\nimport IgnoreConflictStrategy\t\t= require(\"awayjs-core/lib/library/IgnoreConflictStrategy\");\r\nimport NumSuffixConflictStrategy\t= require(\"awayjs-core/lib/library/NumSuffixConflictStrategy\");\r\n\r\n/**\r\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\r\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\r\n * property on an AssetLibrary to define how that library resolves naming conflicts.\r\n *\r\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\r\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\r\n *\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.naming.ConflictStrategyBase\r\n */\r\nclass ConflictStrategy\r\n{\r\n\t/**\r\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\r\n\t * a numeric suffix appended to the base name.\r\n\t */\r\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\r\n\r\n\t/**\r\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\r\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\r\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\r\n\t */\r\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\r\n\r\n\t/**\r\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\r\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\r\n\t * to have the library automatically rename assets to avoid such conflicts.\r\n\t */\r\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\r\n\r\n\tconstructor(include?:ConflictStrategyBase)\r\n\t{\r\n\t\t//TODO: find out why typescript d.ts files do not include this class\r\n\t}\r\n}\r\n\r\nexport = ConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass ErrorConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tthrow new Error('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new ErrorConflictStrategy();\r\n\t}\r\n}\r\n\r\nexport = ErrorConflictStrategy;",
    "class IDUtil\r\n{\r\n\t/**\r\n\t *  @private\r\n\t *  Char codes for 0123456789ABCDEF\r\n\t */\r\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\r\n\r\n\t/**\r\n\t *  Generates a UID (unique identifier) based on ActionScript's\r\n\t *  pseudo-random number generator and the current time.\r\n\t *\r\n\t *  <p>The UID has the form\r\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\r\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\r\n\t *\r\n\t *  <p>This UID will not be truly globally unique; but it is the best\r\n\t *  we can do without player support for UID generation.</p>\r\n\t *\r\n\t *  @return The newly-generated UID.\r\n\t *\r\n\t *  @langversion 3.0\r\n\t *  @playerversion Flash 9\r\n\t *  @playerversion AIR 1.1\r\n\t *  @productversion Flex 3\r\n\t */\r\n\tpublic static createUID():string\r\n\t{\r\n\t\tvar uid = new Array(36);\r\n\t\tvar index:number = 0;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\r\n\t\tfor (i = 0; i < 8; i++)\r\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\r\n\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\tuid[index++] = 45; // charCode for \"-\"\r\n\r\n\t\t\tfor (j = 0; j < 4; j++)\r\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\t\t}\r\n\r\n\t\tuid[index++] = 45; // charCode for \"-\"\r\n\r\n\t\tvar time:number = new Date().getTime();\r\n\t\t// Note: time is the number of milliseconds since 1970,\r\n\t\t// which is currently more than one trillion.\r\n\t\t// We use the low 8 hex digits of this number in the UID.\r\n\t\t// Just in case the system clock has been reset to\r\n\t\t// Jan 1-4, 1970 (in which case this number could have only\r\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\r\n\t\t// before taking the low digits.\r\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\r\n\r\n\t\tfor (i = 0; i < 8; i++)\r\n\t\t\tuid[index++] = timeString.charCodeAt(i);\r\n\r\n\t\tfor (i = 0; i < 4; i++)\r\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\r\n\t\treturn String.fromCharCode.apply(null, uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the decimal representation of a hex digit.\r\n\t * @private\r\n\r\n\t private static getDigit(hex:string):number\r\n\t {\r\n\t\tswitch (hex) {\r\n\t\t\tcase \"A\":\r\n\t\t\tcase \"a\":\r\n\t\t\t\treturn 10;\r\n\t\t\tcase \"B\":\r\n\t\t\tcase \"b\":\r\n\t\t\t\treturn 11;\r\n\t\t\tcase \"C\":\r\n\t\t\tcase \"c\":\r\n\t\t\t\treturn 12;\r\n\t\t\tcase \"D\":\r\n\t\t\tcase \"d\":\r\n\t\t\t\treturn 13;\r\n\t\t\tcase \"E\":\r\n\t\t\tcase \"e\":\r\n\t\t\t\treturn 14;\r\n\t\t\tcase \"F\":\r\n\t\t\tcase \"f\":\r\n\t\t\t\treturn 15;\r\n\t\t\tdefault:\r\n\t\t\t\treturn new uint(hex);\r\n\t\t}\r\n\t}\r\n\t */\r\n\r\n}\r\n\r\nexport = IDUtil;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nclass IgnoreConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\t// Do nothing, ignore the fact that there is a conflict.\r\n\t\treturn;\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new IgnoreConflictStrategy();\r\n\t}\r\n}\r\n\r\nexport = IgnoreConflictStrategy;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nclass NamedAssetBase extends EventDispatcher\r\n{\r\n\tpublic static ID_COUNT:number = 0;\r\n\r\n\tprivate _originalName:string;\r\n\tprivate _namespace:string;\r\n\tprivate _name:string;\r\n\tprivate _id:number;\r\n\tprivate _full_path:Array<string>;\r\n\r\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\r\n\r\n\tconstructor(name:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._id = NamedAssetBase.ID_COUNT++;\r\n\r\n\t\tif (name == null)\r\n\t\t\tname = 'null';\r\n\r\n\t\tthis._name = name;\r\n\t\tthis._originalName = name;\r\n\r\n\t\tthis.updateFullPath();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * The original name used for this asset in the resource (e.g. file) in which\r\n\t * it was found. This may not be the same as <code>name</code>, which may\r\n\t * have changed due to of a name conflict.\r\n\t */\r\n\tpublic get originalName():string\r\n\t{\r\n\t\treturn this._originalName;\r\n\t}\r\n\r\n\t/**\r\n\t * A unique id for the asset, used to identify assets in an associative array\r\n\t */\r\n\tpublic get id():number\r\n\t{\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic get name():string\r\n\t{\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic set name(val:string)\r\n\t{\r\n\t\tvar prev:string;\r\n\r\n\t\tprev = this._name;\r\n\t\tthis._name = val;\r\n\r\n\t\tif (this._name == null)\r\n\t\t\tthis._name = 'null';\r\n\r\n\t\tthis.updateFullPath();\r\n\r\n\t\t//if (hasEventListener(AssetEvent.ASSET_RENAME))\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_RENAME, <IAsset> this, prev));\r\n\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get assetNamespace():string\r\n\t{\r\n\t\treturn this._namespace;\r\n\t}\r\n\r\n\tpublic get assetFullPath():Array<string>\r\n\t{\r\n\t\treturn this._full_path;\r\n\t}\r\n\r\n\tpublic assetPathEquals(name:string, ns:string):boolean\r\n\t{\r\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\r\n\t}\r\n\r\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\r\n\t{\r\n\r\n\t\tthis._name = name? name : 'null';\r\n\t\tthis._namespace = ns? ns : NamedAssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (overrideOriginal)\r\n\t\t\tthis._originalName = this._name;\r\n\r\n\t\tthis.updateFullPath();\r\n\t}\r\n\r\n\tprivate updateFullPath():void\r\n\t{\r\n\t\tthis._full_path = [ this._namespace, this._name ];\r\n\t}\r\n}\r\n\r\nexport = NamedAssetBase;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nclass NumSuffixConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tprivate _separator:string;\r\n\tprivate _next_suffix:Object;\r\n\r\n\tconstructor(separator:string = '.')\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._separator = separator;\r\n\t\tthis._next_suffix = {};\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tvar orig:string;\r\n\t\tvar new_name:string;\r\n\t\tvar base:string;\r\n\t\tvar suffix:number;\r\n\r\n\t\torig = changedAsset.name;\r\n\r\n\t\tif (orig.indexOf(this._separator) >= 0) {\r\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\r\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\r\n\t\t\t// use entire name as base\r\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\r\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\r\n\r\n\t\t\tif (isNaN(suffix)) {\r\n\t\t\t\tbase = orig;\r\n\t\t\t\tsuffix = 0;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tbase = orig;\r\n\t\t\tsuffix = 0;\r\n\t\t}\r\n\r\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\r\n\r\n\t\t\tsuffix = this._next_suffix[base];\r\n\r\n\t\t}\r\n\r\n\t\t// Find the first suffixed name that does\r\n\t\t// not collide with other names.\r\n\t\tdo {\r\n\r\n\t\t\tsuffix++;\r\n\r\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\r\n\r\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\r\n\r\n\t\tthis._next_suffix[ base ] = suffix;\r\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\r\n\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new NumSuffixConflictStrategy(this._separator);\r\n\t}\r\n}\r\n\r\nexport = NumSuffixConflictStrategy;",
    "class CrossDomainPolicy\r\n{\r\n\tpublic static ANONYMOUS:string = 'anonymous';\r\n\r\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\r\n}\r\n\r\nexport = CrossDomainPolicy;\r\n",
    "class URLLoaderDataFormat\r\n{\r\n\t/**\r\n\t * TEXT\r\n\t * @type {string}\r\n\t */\r\n\tpublic static TEXT:string = \"text\";\r\n\r\n\t/**\r\n\t * Variables / Value Pairs\r\n\t * @type {string}\r\n\t */\r\n\tpublic static VARIABLES:string = \"variables\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static BLOB:string = \"blob\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static BINARY:string = \"binary\";\r\n}\r\n\r\nexport = URLLoaderDataFormat;",
    "import URLLoaderDataFormat\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\r\nimport URLVariables\t\t\t\t\t= require(\"awayjs-core/lib/net/URLVariables\");\r\nimport AwayEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport HTTPStatusEvent\t\t\t\t= require(\"awayjs-core/lib/events/HTTPStatusEvent\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport AwayProgressEvent\t\t\t= require(\"awayjs-core/lib/events/ProgressEvent\");\r\n\r\n/**\r\n * The URLLoader is used to load a single file, as part of a resource.\r\n *\r\n * While URLLoader can be used directly, e.g. to create a third-party asset\r\n * management system, it's recommended to use any of the classes Loader3D, AssetLoader\r\n * and AssetLibrary instead in most cases.\r\n *\r\n * @see AssetLoader\r\n * @see away.library.AssetLibrary\r\n */\r\nclass URLLoader extends EventDispatcher\r\n{\r\n\tprivate _XHR:XMLHttpRequest;\r\n\tprivate _bytesLoaded:number = 0;\r\n\tprivate _bytesTotal:number = 0;\r\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\r\n\tprivate _loadError:boolean = false;\r\n\r\n\tprivate _request:URLRequest;\r\n\tprivate _data:any;\r\n\r\n\tprivate _loadStartEvent:AwayEvent;\r\n\tprivate _loadErrorEvent:IOErrorEvent;\r\n\tprivate _loadCompleteEvent:AwayEvent;\r\n\tprivate _progressEvent:AwayProgressEvent;\r\n\r\n\t/**\r\n\t * Creates a new URLLoader object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\r\n\t\treturn this._request? this._request.url : '';\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * URLLoaderDataFormat.BINARY\r\n\t * URLLoaderDataFormat.TEXT\r\n\t * URLLoaderDataFormat.VARIABLES\r\n\t *\r\n\t * @param format\r\n\t */\r\n\tpublic set dataFormat(format:string)\r\n\t{\r\n\t\tthis._dataFormat = format;\r\n\t}\r\n\r\n\tpublic get dataFormat():string\r\n\t{\r\n\t\treturn this._dataFormat;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get bytesLoaded():number\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get bytesTotal():number\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * Load a resource from a file.\r\n\t *\r\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\r\n\t */\r\n\tpublic load(request:URLRequest):void\r\n\t{\r\n\t\tthis._request = request;\r\n\r\n\t\tthis.initXHR();\r\n\r\n\t\tif (request.method === URLRequestMethod.POST)\r\n\t\t\tthis.postRequest(request);\r\n\t\telse\r\n\t\t\tthis.getRequest(request);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic close():void\r\n\t{\r\n\t\tthis._XHR.abort();\r\n\t\tthis.disposeXHR();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tif (this._XHR)\r\n\t\t\tthis._XHR.abort();\r\n\r\n\t\tthis.disposeXHR();\r\n\r\n\t\tthis._data = null;\r\n\t\tthis._dataFormat = null;\r\n\t\tthis._bytesLoaded = null;\r\n\t\tthis._bytesTotal = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param xhr\r\n\t * @param responseType\r\n\t */\r\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\r\n\t{\r\n\t\tswitch (responseType) {\r\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\r\n\t\t\tcase URLLoaderDataFormat.BLOB:\r\n\t\t\tcase URLLoaderDataFormat.TEXT:\r\n\t\t\t\txhr.responseType = responseType;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\r\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.BINARY:\r\n\t\t\t\txhr.responseType = '';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param request {URLRequest}\r\n\t */\r\n\tprivate getRequest(request:URLRequest):void\r\n\t{\r\n\t\ttry {\r\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\r\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\r\n\t\t\tthis._XHR.send(); // No data to send\r\n\t\t} catch (e /* <XMLHttpRequestException> */) {\r\n\t\t\tthis.handleXmlHttpRequestException(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param request {URLRequest}\r\n\t */\r\n\tprivate postRequest(request:URLRequest):void\r\n\t{\r\n\t\tthis._loadError = false;\r\n\r\n\t\tthis._XHR.open(request.method, request.url, request.async);\r\n\r\n\t\tif (request.data != null) {\r\n\t\t\tif (request.data instanceof URLVariables) {\r\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._XHR.responseType = 'text';\r\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\r\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\r\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\r\n\r\n\t\t\t\tif (request.data)\r\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._XHR.send(); // no data to send\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._XHR.send(); // No data to send\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param error {XMLHttpRequestException}\r\n\t */\r\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\r\n\t{\r\n\t\tswitch (error.code) {\r\n\r\n\t\t/******************************************************************************************************************************************************************************************************\r\n\t\t *\r\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\r\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\r\n\t\t *\r\n\t\t ******************************************************************************************************************************************************************************************************/\r\n\r\n\t\t\tcase 101:\r\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate initXHR()\r\n\t{\r\n\t\tif (!this._XHR) {\r\n\t\t\tthis._XHR = new XMLHttpRequest();\r\n\r\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\r\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\r\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\r\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\r\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\r\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\r\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\r\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate disposeXHR()\r\n\t{\r\n\t\tif (this._XHR !== null) {\r\n\t\t\tthis._XHR.onloadstart = null;\r\n\t\t\tthis._XHR.onprogress = null;\r\n\t\t\tthis._XHR.onabort = null;\r\n\t\t\tthis._XHR.onerror = null;\r\n\t\t\tthis._XHR.onload = null;\r\n\t\t\tthis._XHR.ontimeout = null;\r\n\t\t\tthis._XHR.onloadend = null;\r\n\t\t\tthis._XHR = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tpublic decodeURLVariables(source:string):Object\r\n\t{\r\n\t\tvar result:Object = new Object();\r\n\r\n\t\tsource = source.split(\"+\").join(\" \");\r\n\r\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n\t\twhile (tokens = re.exec(source))\r\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// XMLHttpRequest - Event Handlers\r\n\r\n\t/**\r\n\t * When XHR state changes\r\n\t * @param event\r\n\t */\r\n\tprivate onReadyStateChange(event:Event)\r\n\t{\r\n\t\tif (this._XHR.readyState == 4) {\r\n\t\t\tif (this._XHR.status == 404) {\r\n\t\t\t\tthis._loadError = true;\r\n\r\n\t\t\t\tif (!this._loadErrorEvent)\r\n\t\t\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\r\n\r\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchEvent(new HTTPStatusEvent(HTTPStatusEvent.HTTP_STATUS, this._XHR.status));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has completed, regardless of whether or not it was successful.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadEnd(event:ProgressEvent)\r\n\t{\r\n\t\tif (this._loadError === true)\r\n\t\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * When the author specified timeout has passed before the request could complete.\r\n\t * @param event\r\n\t */\r\n\tprivate onTimeOut(event:Event)\r\n\t{\r\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\r\n\t * @param event\r\n\t */\r\n\tprivate onAbort(event:UIEvent)\r\n\t{\r\n\t\t// TODO: investigate whether this needs to be an IOError\r\n\t}\r\n\r\n\t/**\r\n\t * While loading and sending data.\r\n\t * @param event\r\n\t */\r\n\tprivate onProgress(event:ProgressEvent)\r\n\t{\r\n\t\tif (!this._progressEvent)\r\n\t\t\tthis._progressEvent = new AwayProgressEvent(AwayProgressEvent.PROGRESS);\r\n\r\n\t\tthis._progressEvent.bytesTotal = event.total;\r\n\t\tthis._progressEvent.bytesLoaded = event.loaded;\r\n\r\n\t\tthis.dispatchEvent(this._progressEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * When the request starts.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadStart(event:ProgressEvent)\r\n\t{\r\n\t\tif (!this._loadStartEvent)\r\n\t\t\tthis._loadStartEvent = new AwayEvent(AwayEvent.OPEN);\r\n\r\n\t\tthis.dispatchEvent(this._loadStartEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has successfully completed.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadComplete(event:Event)\r\n\t{\r\n\t\tif (this._loadError === true)\r\n\t\t\treturn;\r\n\r\n\t\tswitch (this._dataFormat) {\r\n\t\t\tcase URLLoaderDataFormat.TEXT:\r\n\t\t\t\tthis._data = this._XHR.responseText;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\r\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.BLOB:\r\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\r\n\t\t\tcase URLLoaderDataFormat.BINARY:\r\n\t\t\t\tthis._data = this._XHR.response;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthis._data = this._XHR.responseText;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (!this._loadCompleteEvent)\r\n\t\t\tthis._loadCompleteEvent = new AwayEvent(AwayEvent.COMPLETE);\r\n\r\n\t\tthis.dispatchEvent(this._loadCompleteEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has failed. ( due to network issues ).\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadError(event:Event)\r\n\t{\r\n\t\tthis._loadError = true;\r\n\r\n\t\tif (!this._loadErrorEvent)\r\n\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\r\n\r\n\t\tthis.dispatchEvent(this._loadErrorEvent);\r\n\t}\r\n}\r\n\r\nexport = URLLoader;",
    "class URLRequestMethod\r\n{\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static POST:string = 'POST';\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static GET:string = 'GET';\r\n}\r\n\r\nexport = URLRequestMethod;",
    "import URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\r\n\r\nclass URLRequest\r\n{\r\n\t/*\r\n\t * The MIME content type of the content in the the data property.\r\n\t * @type {string}\r\n\t */\r\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\r\n\r\n\t/**\r\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\r\n\t *\r\n\t */\r\n\tpublic data:any;\r\n\r\n\t/**\r\n\t *\r\n\t * away.net.URLRequestMethod.GET\r\n\t * away.net.URLRequestMethod.POST\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic method:string = URLRequestMethod.GET;\r\n\r\n\t/**\r\n\t * Use asynchronous XMLHttpRequest\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic async:boolean = true;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _url:string;\r\n\r\n\t/**\r\n\r\n\t * @param url\r\n\t */\r\n\tconstructor(url:string = null)\r\n\t{\r\n\t\tthis._url = url;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set url(value:string)\r\n\t{\r\n\t\tthis._url = value;\r\n\t}\r\n\r\n\t/**\r\n\t * dispose\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.data = null;\r\n\t\tthis._url = null;\r\n\t}\r\n}\r\n\r\nexport = URLRequest;",
    "class URLVariables\r\n{\r\n\tprivate _variables:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tconstructor(source:string = null)\r\n\t{\r\n\t\tif (source !== null)\r\n\t\t\tthis.decode(source);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tpublic decode(source:string):void\r\n\t{\r\n\t\tsource = source.split(\"+\").join(\" \");\r\n\r\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n\t\twhile (tokens = re.exec(source))\r\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic get variables():Object\r\n\t{\r\n\t\treturn this._variables;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic get formData():FormData\r\n\t{\r\n\t\tvar fd:FormData = new FormData();\r\n\r\n\t\tfor (var s in this._variables)\r\n\t\t\tfd.append(s, this._variables[s]);\r\n\r\n\t\treturn fd;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic set variables(obj:Object)\r\n\t{\r\n\t\tthis._variables = obj;\r\n\t}\r\n}\r\n\r\nexport = URLVariables;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ImageCubeTexture\t\t\t= require(\"awayjs-core/lib/textures/ImageCubeTexture\");\r\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\n\r\n/**\r\n * CubeTextureParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nclass CubeTextureParser extends ParserBase\r\n{\r\n\tprivate static posX:string = 'posX';\r\n\tprivate static negX:string = 'negX';\r\n\tprivate static posY:string = 'posY';\r\n\tprivate static negY:string = 'negY';\r\n\tprivate static posZ:string = 'posZ';\r\n\tprivate static negZ:string = 'negZ';\r\n\r\n\tprivate _imgDependencyDictionary:Object;\r\n\r\n\t/**\r\n\t * Creates a new CubeTextureParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"cube\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\ttry {\r\n\t\t\tvar obj = JSON.parse(data);\r\n\r\n\t\t\tif (obj) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\r\n\t\t\tvar asset:ImageCubeTexture = new ImageCubeTexture(\r\n\r\n\t\t\t\tthis._getHTMLImageElement(CubeTextureParser.posX), this._getHTMLImageElement(CubeTextureParser.negX), this._getHTMLImageElement(CubeTextureParser.posY), this._getHTMLImageElement(CubeTextureParser.negY), this._getHTMLImageElement(CubeTextureParser.posZ), this._getHTMLImageElement(CubeTextureParser.negZ));\r\n\r\n\t\t\t//clear dictionary\r\n\t\t\tthis._imgDependencyDictionary = null;\r\n\r\n\t\t\tasset.name = this._iFileName;\r\n\r\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tvar json:any = JSON.parse(this.data);\r\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\r\n\t\t\tvar rec:any;\r\n\r\n\t\t\tif (data.length != 6)\r\n\t\t\t\tthis._pDieWithError('CubeTextureParser: Error - cube texture should have exactly 6 images');\r\n\r\n\t\t\tif (json) {\r\n\t\t\t\tthis._imgDependencyDictionary = new Object();\r\n\r\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\r\n\t\t\t\t\trec = data[c];\r\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this._validateCubeData()) {\r\n\r\n\t\t\t\t\tthis._pDieWithError(\"CubeTextureParser: JSON data error - cubes require id of:   \\n\" + CubeTextureParser.posX + ', ' + CubeTextureParser.negX + ',  \\n' + CubeTextureParser.posY + ', ' + CubeTextureParser.negY + ',  \\n' + CubeTextureParser.posZ + ', ' + CubeTextureParser.negZ);\r\n\r\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\r\n\t\t}\r\n\r\n\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t}\r\n\r\n\tprivate _validateCubeData():boolean\r\n\t{\r\n\t\treturn  ( this._imgDependencyDictionary[ CubeTextureParser.posX ] != null && this._imgDependencyDictionary[ CubeTextureParser.negX ] != null && this._imgDependencyDictionary[ CubeTextureParser.posY ] != null && this._imgDependencyDictionary[ CubeTextureParser.negY ] != null && this._imgDependencyDictionary[ CubeTextureParser.posZ ] != null && this._imgDependencyDictionary[ CubeTextureParser.negZ ] != null );\r\n\t}\r\n\r\n\tprivate _getHTMLImageElement(name:string):HTMLImageElement\r\n\t{\r\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\r\n\r\n\t\tif (dependency) {\r\n\t\t\treturn <HTMLImageElement> (<ImageTexture> dependency.assets[0]).htmlImageElement;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n\r\nexport = CubeTextureParser;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\r\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\nimport Timer\t\t\t\t\t= require(\"awayjs-core/lib/utils/Timer\");\r\nimport getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\n/**\r\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\r\n * supported by away.\r\n *\r\n * If used by <code>AssetLoader</code> to automatically determine the parser type, two public static methods should\r\n * be implemented, with the following signatures:\r\n *\r\n * <code>public static supportsType(extension : string) : boolean</code>\r\n * Indicates whether or not a given file extension is supported by the parser.\r\n *\r\n * <code>public static supportsData(data : *) : boolean</code>\r\n * Tests whether a data block can be parsed by the parser.\r\n *\r\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\r\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\r\n * handle regardless of whether the object was loaded or not.\r\n *\r\n * @see AssetLoader\r\n */\r\nclass ParserBase extends EventDispatcher\r\n{\r\n\tpublic _iFileName:string;\r\n\tprivate _dataFormat:string;\r\n\tprivate _data:any;\r\n\tprivate _frameLimit:number;\r\n\tprivate _lastFrameTime:number;\r\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\r\n\tpublic _pContent:IAsset;\r\n\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\t// Needs to be implemented in all Parsers (\r\n\t//<code>public static supportsType(extension : string) : boolean</code>\r\n\t//* Indicates whether or not a given file extension is supported by the parser.\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/* TODO: Implement ParserUtils;\r\n\t public _pGetTextData():string\r\n\t {\r\n\t return ParserUtils.toString(_data);\r\n\t }\r\n\r\n\t public _pGetByteData():ByteArray\r\n\t {\r\n\t return ParserUtils.toByteArray(_data);\r\n\t }\r\n\t */\r\n\tprivate _dependencies:Array<ResourceDependency>;\r\n\tprivate _parsingPaused:boolean;\r\n\tprivate _parsingComplete:boolean;\r\n\tprivate _parsingFailure:boolean;\r\n\tprivate _timer:Timer;\r\n\tprivate _materialMode:number;\r\n\r\n\t/**\r\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\r\n\t */\r\n\tpublic static PARSING_DONE:boolean = true;\r\n\t/* Protected */\r\n\r\n\t/**\r\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\r\n\t */\r\n\tpublic static MORE_TO_PARSE:boolean = false;\r\n\t/* Protected */\r\n\r\n\r\n\tpublic get content():IAsset\r\n\t{\r\n\t\treturn this._pContent;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new ParserBase object\r\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\r\n\t *\r\n\t * @see away.loading.parsers.ParserDataFormat\r\n\t */\r\n\tconstructor(format:string)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._materialMode = 0;\r\n\t\tthis._dataFormat = format;\r\n\t\tthis._dependencies = new Array<ResourceDependency>();\r\n\r\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\r\n\t */\r\n\r\n\tpublic isBitmapDataValid(bitmapData:BitmapData):boolean\r\n\t{\r\n\t\tvar isValid:boolean = TextureUtils.isBitmapDataValid(bitmapData);\r\n\r\n\t\tif (!isValid) {\r\n\r\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\r\n\t\t}\r\n\r\n\t\treturn isValid;\r\n\t}\r\n\r\n\tpublic set parsingFailure(b:boolean)\r\n\t{\r\n\t\tthis._parsingFailure = b;\r\n\t}\r\n\r\n\tpublic get parsingFailure():boolean\r\n\t{\r\n\t\treturn this._parsingFailure;\r\n\t}\r\n\r\n\tpublic get parsingPaused():boolean\r\n\t{\r\n\t\treturn this._parsingPaused;\r\n\t}\r\n\r\n\tpublic get parsingComplete():boolean\r\n\t{\r\n\t\treturn this._parsingComplete;\r\n\t}\r\n\r\n\tpublic set materialMode(newMaterialMode:number)\r\n\t{\r\n\t\tthis._materialMode = newMaterialMode;\r\n\t}\r\n\r\n\tpublic get materialMode():number\r\n\t{\r\n\t\treturn this._materialMode;\r\n\t}\r\n\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\t/**\r\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\r\n\t */\r\n\tpublic get dataFormat():string\r\n\t{\r\n\t\treturn this._dataFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\r\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\r\n\t * next frame.\r\n\t *\r\n\t * @param data The untyped data object in which the loaded data resides.\r\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\r\n\t * actual time spent on a frame can exceed this number since time-checks can\r\n\t * only be performed between logical sections of the parsing procedure.\r\n\t */\r\n\tpublic parseAsync(data:any, frameLimit:number = 30)\r\n\t{\r\n\t\tthis._data = data;\r\n\t\tthis._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\t/**\r\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\r\n\t */\r\n\tpublic get dependencies():Array<ResourceDependency>\r\n\t{\r\n\t\treturn this._dependencies;\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\r\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\r\n\t * dependency should be a member of the dependencies property.\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\treturn asset.name;\r\n\t}\r\n\r\n\tpublic _iResumeParsingAfterDependencies()\r\n\t{\r\n\t\tthis._parsingPaused = false;\r\n\r\n\t\tif (this._timer)\r\n\t\t\tthis._timer.start();\r\n\t}\r\n\r\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null)\r\n\t{\r\n\t\tvar type_event:string;\r\n\t\tvar type_name:string;\r\n\r\n\t\tif (name != null)\r\n\t\t\tasset.name = name;\r\n\r\n\t\t// If the asset has no name, give it\r\n\t\t// a per-type default name.\r\n\t\tif (!asset.name)\r\n\t\t\tasset.name = asset.assetType;\r\n\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\r\n\t}\r\n\r\n\t/**\r\n\t * Parse the next block of data.\r\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\r\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pDieWithError(message:string = 'Unknown parsing error')\r\n\t{\r\n\t\tif (this._timer) {\r\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\t\tthis._timer.stop();\r\n\t\t\tthis._timer = null;\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\r\n\t}\r\n\r\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false):ResourceDependency\r\n\t{\r\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents);\r\n\t\tthis._dependencies.push(dependency);\r\n\r\n\t\treturn dependency;\r\n\t}\r\n\r\n\tpublic _pPauseAndRetrieveDependencies()\r\n\t{\r\n\t\tif (this._timer)\r\n\t\t\tthis._timer.stop();\r\n\r\n\t\tthis._parsingPaused = true;\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\r\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\r\n\t */\r\n\tpublic _pHasTime():boolean\r\n\t{\r\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the parsing pause interval has passed and parsing can proceed.\r\n\t */\r\n\tpublic _pOnInterval(event:TimerEvent = null)\r\n\t{\r\n\t\tthis._lastFrameTime = getTimer();\r\n\r\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\r\n\t\t\tthis._pFinishParsing();\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the parsing of data.\r\n\t * @param frameLimit The maximum duration of a parsing session.\r\n\t */\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tthis._frameLimit = frameLimit;\r\n\t\tthis._timer = new Timer(this._frameLimit, 0);\r\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\tthis._timer.start();\r\n\t}\r\n\r\n\t/**\r\n\t * Finish parsing the data.\r\n\t */\r\n\tpublic _pFinishParsing()\r\n\t{\r\n\t\tif (this._timer) {\r\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\t\tthis._timer.stop();\r\n\t\t}\r\n\r\n\t\tthis._timer = null;\r\n\t\tthis._parsingComplete = true;\r\n\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetTextData():string\r\n\t{\r\n\t\treturn ParserUtils.toString(this._data);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetByteData():ByteArray\r\n\t{\r\n\t\treturn ParserUtils.toByteArray(this._data);\r\n\t}\r\n}\r\n\r\nexport = ParserBase;",
    "/**\r\n * An enumeration providing values to describe the data format of parsed data.\r\n */\r\nclass ParserDataFormat\r\n{\r\n\t/**\r\n\t * Describes the format of a binary file.\r\n\t */\r\n\tpublic static BINARY:string = \"binary\";\r\n\r\n\t/**\r\n\t * Describes the format of a plain text file.\r\n\t */\r\n\tpublic static PLAIN_TEXT:string = \"plainText\";\r\n\r\n\t/**\r\n\t * Describes the format of an image file\r\n\t */\r\n\tpublic static IMAGE:string = \"image\";\r\n\r\n}\r\n\r\nexport = ParserDataFormat;",
    "import ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nclass ParserUtils\r\n{\r\n\r\n\t/**\r\n\t * Converts an ArrayBuffer to a base64 string\r\n\t *\r\n\t * @param image data as a ByteArray\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\r\n\t{\r\n\t\tvar byteStr:string = '';\r\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\r\n\t\tvar len:number = bytes.byteLength;\r\n\r\n\t\tfor (var i = 0; i < len; i++)\r\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\r\n\r\n\t\tvar base64Image:string = window.btoa(byteStr);\r\n\t\tvar str:string = 'data:image/png;base64,' + base64Image;\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = str;\r\n\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\r\n\t *\r\n\t * @param image data as a ByteArray\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\r\n\t{\r\n\t\tvar byteStr:string = '';\r\n\t\tvar bytes:Uint8Array = new Uint8Array(data.arraybytes);\r\n\t\tvar len:number = bytes.byteLength;\r\n\r\n\t\tfor (var i = 0; i < len; i++)\r\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\r\n\r\n\t\tvar base64Image:string = window.btoa(byteStr);\r\n\t\tvar str:string = 'data:image/png;base64,' + base64Image;\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = str;\r\n\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Blob to an Image - returns an HTMLImageElement\r\n\t *\r\n\t * @param image data as a Blob\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static blobToImage(data:Blob):HTMLImageElement\r\n\t{\r\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\r\n\t\tvar src = URLObj.createObjectURL(data);\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = src;\r\n\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a object as ByteArray, if possible.\r\n\t *\r\n\t * @param data The object to return as ByteArray\r\n\t *\r\n\t * @return The ByteArray or null\r\n\t *\r\n\t */\r\n\tpublic static toByteArray(data:any):ByteArray\r\n\t{\r\n\t\tvar b:ByteArray = new ByteArray();\r\n\t\tb.setArrayBuffer(data);\r\n\t\treturn b;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a object as String, if possible.\r\n\t *\r\n\t * @param data The object to return as String\r\n\t * @param length The length of the returned String\r\n\t *\r\n\t * @return The String or null\r\n\t *\r\n\t */\r\n\tpublic static toString(data:any, length:number = 0):string\r\n\t{\r\n\r\n\t\tif (typeof data === 'string') {\r\n\t\t\tvar s:string = <string> data;\r\n\r\n\t\t\tif (s['substr'] != null)\r\n\t\t\t\treturn s.substr(0, s.length);\r\n\t\t}\r\n\r\n\t\tif (data instanceof ByteArray) {\r\n\t\t\tvar ba:ByteArray = <ByteArray> data;\r\n\t\t\tba.position = 0;\r\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t\t/*\r\n\t\t var ba:ByteArray;\r\n\r\n\t\t length ||= uint.MAX_VALUE;\r\n\r\n\t\t if (data is String)\r\n\t\t return String(data).substr(0, length);\r\n\r\n\t\t ba = toByteArray(data);\r\n\t\t if (ba) {\r\n\t\t ba.position = 0;\r\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\r\n\t\t }\r\n\r\n\t\t return null;\r\n\r\n\t\t */\r\n\r\n\t}\r\n}\r\n\r\nexport = ParserUtils;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\n/**\r\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\r\n * required by a parser, used by ResourceLoadSession.\r\n *\r\n */\r\nclass ResourceDependency\r\n{\r\n\tprivate _id:string;\r\n\tprivate _request:URLRequest;\r\n\tprivate _assets:Array<IAsset>;\r\n\tprivate _parser:ParserBase;\r\n\tprivate _parentParser:ParserBase;\r\n\tprivate _data:any;\r\n\tprivate _retrieveAsRawData:boolean;\r\n\tprivate _suppressAssetEvents:boolean;\r\n\tprivate _dependencies:Array<ResourceDependency>;\r\n\r\n\tpublic _iLoader:URLLoader;\r\n\tpublic _iSuccess:boolean;\r\n\r\n\r\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false)\r\n\t{\r\n\t\tthis._id = id;\r\n\t\tthis._request = request;\r\n\t\tthis._data = data;\r\n\t\tthis._parser = parser;\r\n\t\tthis._parentParser = parentParser;\r\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\r\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\r\n\r\n\t\tthis._assets = new Array<IAsset>();\r\n\t\tthis._dependencies = new Array<ResourceDependency>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get id():string\r\n\t{\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get request():URLRequest\r\n\t{\r\n\t\treturn this._request;\r\n\t}\r\n\r\n\t/**\r\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\r\n\t */\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parser():ParserBase\r\n\t{\r\n\t\treturn this._parser;\r\n\t}\r\n\r\n\t/**\r\n\t * The parser which is dependent on this ResourceDependency object.\r\n\t */\r\n\tpublic get parentParser():ParserBase\r\n\t{\r\n\t\treturn this._parentParser;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get retrieveAsRawData():boolean\r\n\t{\r\n\t\treturn this._retrieveAsRawData;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get suppresAssetEvents():boolean\r\n\t{\r\n\t\treturn this._suppressAssetEvents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assets():Array<IAsset>\r\n\t{\r\n\t\treturn this._assets;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get dependencies():Array<ResourceDependency>\r\n\t{\r\n\t\treturn this._dependencies;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Method to set data after having already created the dependency object, e.g. after load.\r\n\t */\r\n\tpublic _iSetData(data:any):void\r\n\t{\r\n\t\tthis._data = data;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t */\r\n\tpublic _iSetParser(parser:ParserBase):void\r\n\t{\r\n\t\tthis._parser = parser;\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\r\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\r\n\t * to its intended parent. The dependency should be a member of the dependencies property.\r\n\t */\r\n\tpublic resolve():void\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\tthis._parentParser._iResolveDependency(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\r\n\t */\r\n\tpublic resolveFailure():void\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve the dependencies name\r\n\t */\r\n\tpublic resolveName(asset:IAsset):string\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\r\n\r\n\t\treturn asset.name;\r\n\t}\r\n}\r\n\r\nexport = ResourceDependency;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\n/**\r\n * Texture2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nclass Texture2DParser extends ParserBase\r\n{\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _doneParsing:boolean;\r\n\tprivate _loadingImage:boolean;\r\n\tprivate _htmlImageElement:HTMLImageElement;\r\n\r\n\t/**\r\n\t * Creates a new Texture2DParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.BLOB);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\r\n\t\tif (data  instanceof HTMLImageElement)\r\n\t\t\treturn true;\r\n\r\n\t\tif (!(data instanceof ByteArray))\r\n\t\t\treturn false;\r\n\r\n\t\tvar ba:ByteArray = <ByteArray> data;\r\n\t\tba.position = 0;\r\n\r\n\t\tif (ba.readUnsignedShort() == 0xffd8)\r\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readShort() == 0x424D)\r\n\t\t\treturn true; // BMP\r\n\r\n\t\tba.position = 1;\r\n\t\tif (ba.readUTFBytes(3) == 'PNG')\r\n\t\t\treturn true;\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\r\n\t\t\treturn true;\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUTFBytes(3) == 'ATF')\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\r\n\t\tvar asset:Texture2DBase;\r\n\t\tvar sizeError:boolean = false;\r\n\r\n\t\tif (this._loadingImage) {\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t} else if (this._htmlImageElement) {\r\n\t\t\tif (TextureUtils.isHTMLImageElementValid(this._htmlImageElement)) {\r\n\t\t\t\tasset = new ImageTexture(this._htmlImageElement);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t}\r\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\r\n\r\n\t\t\tif (TextureUtils.isHTMLImageElementValid(<HTMLImageElement> this.data)) {\r\n\t\t\t\tasset = new ImageTexture(<HTMLImageElement> this.data);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t} else {\r\n\t\t\t\tsizeError = true;\r\n\t\t\t}\r\n\r\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\r\n\r\n\t\t\tvar ba:ByteArray = this.data;\r\n\t\t\tba.position = 0;\r\n\t\t\tvar htmlImageElement:HTMLImageElement = ParserUtils.byteArrayToImage(this.data);\r\n\r\n\t\t\tif (TextureUtils.isHTMLImageElementValid(htmlImageElement)) {\r\n\t\t\t\tasset = new ImageTexture(htmlImageElement);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t} else {\r\n\t\t\t\tsizeError = true;\r\n\t\t\t}\r\n\r\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\r\n\r\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\r\n\r\n\t\t\tasset = new ImageTexture(this._htmlImageElement);\r\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\r\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\r\n\r\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\r\n\r\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\r\n\t\t\tthis._loadingImage = true;\r\n\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t}\r\n\r\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\r\n\t\t{\r\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\r\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\r\n\t\t}\r\n\r\n\t\tthis._pContent = asset;\r\n\r\n\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t}\r\n\r\n\tpublic onLoadComplete(event)\r\n\t{\r\n\t\tthis._loadingImage = false;\r\n\t}\r\n}\r\n\r\nexport = Texture2DParser;",
    "/**\r\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\r\n *\r\n * @see away.projections.PerspectiveLens#coordinateSystem\r\n */\r\nclass CoordinateSystem\r\n{\r\n\t/**\r\n\t * Default option, projects to a left-handed coordinate system\r\n\t */\r\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\r\n\r\n\t/**\r\n\t * Projects to a right-handed coordinate system\r\n\t */\r\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\r\n}\r\n\r\nexport = CoordinateSystem;",
    "import PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass FreeMatrixProjection extends ProjectionBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tthis._pNear = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tthis._pFar = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set iAspectRatio(value:number)\r\n\t{\r\n\t\tthis._pAspectRatio = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\r\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone.pInvalidateMatrix();\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}\r\n\r\nexport = FreeMatrixProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass ObliqueNearPlaneProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _baseProjection:IProjection;\r\n\tprivate _plane:Plane3D;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.baseProjection = baseProjection;\r\n\t\tthis.plane = plane;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get frustumCorners():number[]\r\n\t{\r\n\t\treturn this._baseProjection.frustumCorners;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get near():number\r\n\t{\r\n\t\treturn this._baseProjection.near;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tthis._baseProjection.near = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get far():number\r\n\t{\r\n\t\treturn this._baseProjection.far;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tthis._baseProjection.far = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get iAspectRatio():number\r\n\t{\r\n\t\treturn this._baseProjection._iAspectRatio;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set iAspectRatio(value:number)\r\n\t{\r\n\t\tthis._baseProjection._iAspectRatio = value;\r\n\t}\r\n\r\n\tpublic get plane():Plane3D\r\n\t{\r\n\t\treturn this._plane;\r\n\t}\r\n\r\n\tpublic set plane(value:Plane3D)\r\n\t{\r\n\t\tthis._plane = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic set baseProjection(value:IProjection)\r\n\t{\r\n\t\tif (this._baseProjection) {\r\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\t}\r\n\t\tthis._baseProjection = value;\r\n\r\n\t\tif (this._baseProjection) {\r\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\t}\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\r\n\r\n\t\tvar cx:number = this._plane.a;\r\n\t\tvar cy:number = this._plane.b;\r\n\t\tvar cz:number = this._plane.c;\r\n\t\tvar cw:number = -this._plane.d + .05;\r\n\t\tvar signX:number = cx >= 0? 1 : -1;\r\n\t\tvar signY:number = cy >= 0? 1 : -1;\r\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\r\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\r\n\t\tinverse.invert();\r\n\t\tvar q:Vector3D = inverse.transformVector(p);\r\n\t\tthis._pMatrix.copyRowTo(3, p);\r\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\r\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\r\n\t}\r\n}\r\n\r\nexport = ObliqueNearPlaneProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass OrthographicOffCenterProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _minX:number;\r\n\tprivate _maxX:number;\r\n\tprivate _minY:number;\r\n\tprivate _maxY:number;\r\n\r\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._minX = minX;\r\n\t\tthis._maxX = maxX;\r\n\t\tthis._minY = minY;\r\n\t\tthis._maxY = maxY;\r\n\t}\r\n\r\n\tpublic get minX():number\r\n\t{\r\n\t\treturn this._minX;\r\n\t}\r\n\r\n\tpublic set minX(value:number)\r\n\t{\r\n\t\tthis._minX = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get maxX():number\r\n\t{\r\n\t\treturn this._maxX;\r\n\t}\r\n\r\n\tpublic set maxX(value:number)\r\n\t{\r\n\t\tthis._maxX = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get minY():number\r\n\t{\r\n\t\treturn this._minY;\r\n\t}\r\n\r\n\tpublic set minY(value:number)\r\n\t{\r\n\t\tthis._minY = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get maxY():number\r\n\t{\r\n\t\treturn this._maxY;\r\n\t}\r\n\r\n\tpublic set maxY(value:number)\r\n\t{\r\n\t\tthis._maxY = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tvar raw:number[] = [];\r\n\t\tvar w:number = 1/(this._maxX - this._minX);\r\n\t\tvar h:number = 1/(this._maxY - this._minY);\r\n\t\tvar d:number = 1/(this._pFar - this._pNear);\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(this._maxX + this._minX)*w;\r\n\t\traw[13] = -(this._maxY + this._minY)*h;\r\n\t\traw[14] = -this._pNear*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}\r\n\r\nexport = OrthographicOffCenterProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass OrthographicProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _projectionHeight:number;\r\n\tprivate _xMax:number;\r\n\tprivate _yMax:number;\r\n\r\n\tconstructor(projectionHeight:number = 500)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._projectionHeight = projectionHeight;\r\n\t}\r\n\r\n\tpublic get projectionHeight():number\r\n\t{\r\n\t\treturn this._projectionHeight;\r\n\t}\r\n\r\n\tpublic set projectionHeight(value:number)\r\n\t{\r\n\t\tif (value == this._projectionHeight) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._projectionHeight = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone.projectionHeight = this._projectionHeight;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tvar raw:number[] = [];\r\n\t\tthis._yMax = this._projectionHeight*.5;\r\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\r\n\r\n\t\tvar left:number;\r\n\t\tvar right:number;\r\n\t\tvar top:number;\r\n\t\tvar bottom:number;\r\n\r\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\r\n\t\t\t// assume symmetric frustum\r\n\r\n\t\t\tleft = -this._xMax;\r\n\t\t\tright = this._xMax;\r\n\t\t\ttop = -this._yMax;\r\n\t\t\tbottom = this._yMax;\r\n\r\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\r\n\t\t\traw[5] = 2/this._projectionHeight;\r\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\r\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\r\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\r\n\t\t\traw[15] = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\r\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\r\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\r\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\r\n\r\n\t\t\tleft = center - xWidth;\r\n\t\t\tright = center + xWidth;\r\n\t\t\ttop = middle - yHgt;\r\n\t\t\tbottom = middle + yHgt;\r\n\r\n\t\t\traw[0] = 2*1/(right - left);\r\n\t\t\traw[5] = -2*1/(top - bottom);\r\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\r\n\r\n\t\t\traw[12] = (right + left)/(right - left);\r\n\t\t\traw[13] = (bottom + top)/(bottom - top);\r\n\t\t\traw[14] = this._pNear/(this.near - this.far);\r\n\r\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\t\traw[15] = 1;\r\n\t\t}\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}\r\n\r\nexport= OrthographicProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport CoordinateSystem\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass PerspectiveProjection extends ProjectionBase\r\n{\r\n\tprivate _fieldOfView:number = 60;\r\n\tprivate _focalLength:number = 1000;\r\n\tprivate _hFieldOfView:number = 60;\r\n\tprivate _hFocalLength:number = 1000;\r\n\tprivate _preserveAspectRatio:boolean = true;\r\n\tprivate _preserveFocalLength:boolean = false;\r\n\r\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\r\n\t{\r\n\t\tsuper(coordinateSystem);\r\n\t\tthis.fieldOfView = fieldOfView;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get preserveAspectRatio():boolean\r\n\t{\r\n\t\treturn this._preserveAspectRatio;\r\n\t}\r\n\r\n\tpublic set preserveAspectRatio(value:boolean)\r\n\t{\r\n\t\tif (this._preserveAspectRatio == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._preserveAspectRatio = value;\r\n\r\n\t\tif (this._preserveAspectRatio)\r\n\t\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get preserveFocalLength():boolean\r\n\t{\r\n\t\treturn this._preserveFocalLength;\r\n\t}\r\n\r\n\tpublic set preserveFocalLength(value:boolean)\r\n\t{\r\n\t\tif (this._preserveFocalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._preserveFocalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get fieldOfView():number\r\n\t{\r\n\t\treturn this._fieldOfView;\r\n\t}\r\n\r\n\tpublic set fieldOfView(value:number)\r\n\t{\r\n\t\tif (this._fieldOfView == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._fieldOfView = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get focalLength():number\r\n\t{\r\n\t\treturn this._focalLength;\r\n\t}\r\n\r\n\tpublic set focalLength(value:number)\r\n\t{\r\n\t\tif (this._focalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._focalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get hFieldOfView():number\r\n\t{\r\n\t\treturn this._hFieldOfView;\r\n\t}\r\n\r\n\tpublic set hFieldOfView(value:number)\r\n\t{\r\n\t\tif (this._hFieldOfView == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._hFieldOfView = value;\r\n\r\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get hFocalLength():number\r\n\t{\r\n\t\treturn this._hFocalLength;\r\n\t}\r\n\r\n\tpublic set hFocalLength(value:number)\r\n\t{\r\n\t\tif (this._hFocalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._hFocalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\r\n\r\n\t\tv.x *= sZ;\r\n\t\tv.y *= sZ;\r\n\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tvar raw:number[] = [];\r\n\r\n\t\tif (this._preserveFocalLength) {\r\n\t\t\tif (this._preserveAspectRatio)\r\n\t\t\t\tthis._hFocalLength = this._focalLength;\r\n\r\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\r\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\r\n\t\t} else {\r\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\r\n\r\n\t\t\tif (this._preserveAspectRatio)\r\n\t\t\t\tthis._hFocalLength = this._focalLength;\r\n\t\t\telse\r\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\r\n\t\t}\r\n\r\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\r\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\r\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\r\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\r\n\r\n\t\tvar left:number;\r\n\t\tvar right:number;\r\n\t\tvar top:number;\r\n\t\tvar bottom:number;\r\n\r\n\t\t// assume scissored frustum\r\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\r\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\r\n\r\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\r\n\t\tright = center;\r\n\t\ttop = middle;\r\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\r\n\r\n\t\traw[0] = 2/(right - left);\r\n\t\traw[5] = 2/(bottom - top);\r\n\t\traw[8] = (right + left)/(right - left);\r\n\t\traw[9] = (bottom + top)/(bottom - top);\r\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\r\n\r\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\r\n\t\t\traw[5] = -raw[5];\r\n\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\r\n\r\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\r\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\r\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\r\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\r\n\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\r\n\r\n\t}\r\n}\r\n\r\nexport = PerspectiveProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nclass ProjectionBase extends EventDispatcher implements IProjection\r\n{\r\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\r\n\tpublic _pScissorRect:Rectangle = new Rectangle();\r\n\tpublic _pViewPort:Rectangle = new Rectangle();\r\n\tpublic _pNear:number = 20;\r\n\tpublic _pFar:number = 3000;\r\n\tpublic _pAspectRatio:number = 1;\r\n\r\n\tpublic _pMatrixInvalid:boolean = true;\r\n\tpublic _pFrustumCorners:number[] = [];\r\n\tpublic _pCoordinateSystem:string;\r\n\tpublic _pOriginX:number = 0.5;\r\n\tpublic _pOriginY:number = 0.5;\r\n\r\n\tprivate _unprojection:Matrix3D;\r\n\tprivate _unprojectionInvalid:boolean = true;\r\n\r\n\tconstructor(coordinateSystem:string = \"leftHanded\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coordinateSystem = coordinateSystem;\r\n\t}\r\n\r\n\t/**\r\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\r\n\t */\r\n\tpublic get coordinateSystem():string\r\n\t{\r\n\t\treturn this._pCoordinateSystem;\r\n\t}\r\n\r\n\tpublic set coordinateSystem(value:string)\r\n\t{\r\n\t\tif (this._pCoordinateSystem == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pCoordinateSystem = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get frustumCorners():number[]\r\n\t{\r\n\t\treturn this._pFrustumCorners;\r\n\t}\r\n\r\n\tpublic set frustumCorners(frustumCorners:number[])\r\n\t{\r\n\t\tthis._pFrustumCorners = frustumCorners;\r\n\t}\r\n\r\n\tpublic get matrix():Matrix3D\r\n\t{\r\n\t\tif (this._pMatrixInvalid) {\r\n\t\t\tthis.pUpdateMatrix();\r\n\t\t\tthis._pMatrixInvalid = false;\r\n\t\t}\r\n\t\treturn this._pMatrix;\r\n\t}\r\n\r\n\tpublic set matrix(value:Matrix3D)\r\n\t{\r\n\t\tthis._pMatrix = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get near():number\r\n\t{\r\n\t\treturn this._pNear;\r\n\t}\r\n\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tif (value == this._pNear) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pNear = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get originX():number\r\n\t{\r\n\t\treturn this._pOriginX;\r\n\t}\r\n\r\n\tpublic set originX(value:number)\r\n\t{\r\n\t\tif (this._pOriginX == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pOriginX = value;\r\n\t}\r\n\r\n\tpublic get originY():number\r\n\t{\r\n\t\treturn this._pOriginY;\r\n\t}\r\n\r\n\tpublic set originY(value:number)\r\n\t{\r\n\t\tif (this._pOriginY == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pOriginY = value;\r\n\t}\r\n\r\n\tpublic get far():number\r\n\t{\r\n\t\treturn this._pFar;\r\n\t}\r\n\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tif (value == this._pFar) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pFar = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\r\n\t\tv.x = v.x/v.w;\r\n\t\tv.y = -v.y/v.w;\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = point3d.z;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic get unprojectionMatrix():Matrix3D\r\n\t{\r\n\t\tif (this._unprojectionInvalid) {\r\n\t\t\tif (!this._unprojection)\r\n\t\t\t\tthis._unprojection = new Matrix3D();\r\n\r\n\t\t\tthis._unprojection.copyFrom(this.matrix);\r\n\t\t\tthis._unprojection.invert();\r\n\t\t\tthis._unprojectionInvalid = false;\r\n\t\t}\r\n\t\treturn this._unprojection;\r\n\t}\r\n\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get _iAspectRatio():number\r\n\t{\r\n\t\treturn this._pAspectRatio;\r\n\t}\r\n\r\n\tpublic set _iAspectRatio(value:number)\r\n\t{\r\n\t\tif (this._pAspectRatio == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAspectRatio = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic pInvalidateMatrix()\r\n\t{\r\n\t\tthis._pMatrixInvalid = true;\r\n\t\tthis._unprojectionInvalid = true;\r\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\r\n\t}\r\n\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\t\tthis._pScissorRect.x = x;\r\n\t\tthis._pScissorRect.y = y;\r\n\t\tthis._pScissorRect.width = width;\r\n\t\tthis._pScissorRect.height = height;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number)\r\n\t{\r\n\t\tthis._pViewPort.x = x;\r\n\t\tthis._pViewPort.y = y;\r\n\t\tthis._pViewPort.width = width;\r\n\t\tthis._pViewPort.height = height;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n}\r\n\r\nexport = ProjectionBase;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport CubeTextureBase\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\n\r\n\r\nclass BitmapCubeTexture extends CubeTextureBase\r\n{\r\n\tprivate _bitmapDatas:Array<BitmapData> = new Array<BitmapData>(6);\r\n\r\n\t/**\r\n\t * The texture on the cube's right face.\r\n\t */\r\n\tpublic get positiveX():BitmapData\r\n\t{\r\n\t\treturn this._bitmapDatas[0];\r\n\t}\r\n\r\n\tpublic set positiveX(value:BitmapData)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._bitmapDatas[0] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's left face.\r\n\t */\r\n\tpublic get negativeX():BitmapData\r\n\t{\r\n\t\treturn this._bitmapDatas[1];\r\n\t}\r\n\r\n\tpublic set negativeX(value:BitmapData)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._bitmapDatas[1] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's top face.\r\n\t */\r\n\tpublic get positiveY():BitmapData\r\n\t{\r\n\t\treturn this._bitmapDatas[2];\r\n\t}\r\n\r\n\tpublic set positiveY(value:BitmapData)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._bitmapDatas[2] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's bottom face.\r\n\t */\r\n\tpublic get negativeY():BitmapData\r\n\t{\r\n\t\treturn this._bitmapDatas[3];\r\n\t}\r\n\r\n\tpublic set negativeY(value:BitmapData)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._bitmapDatas[3] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's far face.\r\n\t */\r\n\tpublic get positiveZ():BitmapData\r\n\t{\r\n\t\treturn this._bitmapDatas[4];\r\n\t}\r\n\r\n\tpublic set positiveZ(value:BitmapData)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._bitmapDatas[4] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's near face.\r\n\t */\r\n\tpublic get negativeZ():BitmapData\r\n\t{\r\n\t\treturn this._bitmapDatas[5];\r\n\t}\r\n\r\n\tpublic set negativeZ(value:BitmapData)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._bitmapDatas[5] = value;\r\n\t}\r\n\r\n\tconstructor(posX:BitmapData, negX:BitmapData, posY:BitmapData, negY:BitmapData, posZ:BitmapData, negZ:BitmapData)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._testSize(this._bitmapDatas[0] = posX);\r\n\t\tthis._testSize(this._bitmapDatas[1] = negX);\r\n\t\tthis._testSize(this._bitmapDatas[2] = posY);\r\n\t\tthis._testSize(this._bitmapDatas[3] = negY);\r\n\t\tthis._testSize(this._bitmapDatas[4] = posZ);\r\n\t\tthis._testSize(this._bitmapDatas[5] = negZ);\r\n\r\n\t\tthis.invalidateContent();\r\n\r\n\t\tthis._pSetSize(posX.width);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t * @private\r\n\t */\r\n\tprivate _testSize(value:BitmapData)\r\n\t{\r\n\t\tif (value.width != value.height)\r\n\t\t\tthrow new Error(\"BitmapData should have equal width and height!\");\r\n\t\tif (!TextureUtils.isBitmapDataValid(value))\r\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tvar len:number = this._bitmapDatas.length\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tthis._bitmapDatas[i].dispose();\r\n\t\t\tthis._bitmapDatas[i] = null;\r\n\t\t}\r\n\r\n\t\tthis._bitmapDatas = null;\r\n\t}\r\n\r\n\tpublic _iGetTextureData(side:number):BitmapData\r\n\t{\r\n\t\treturn this._bitmapDatas[side];\r\n\t}\r\n}\r\n\r\nexport = BitmapCubeTexture;",
    "﻿import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\n\r\n\r\nclass BitmapTexture extends Texture2DBase\r\n{\r\n\tpublic _bitmapData:BitmapData;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get bitmapData():BitmapData\r\n\t{\r\n\t\treturn this._bitmapData;\r\n\t}\r\n\r\n\tpublic set bitmapData(value:BitmapData)\r\n\t{\r\n\t\tif (this._bitmapData == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!TextureUtils.isBitmapDataValid(value))\r\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._bitmapData = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\r\n\t\tthis._pSetSize(value.width, value.height);\r\n\t}\r\n\r\n\tconstructor(bitmapData:BitmapData)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.bitmapData = bitmapData;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._bitmapData.dispose();\r\n\t\tthis._bitmapData = null;\r\n\t}\r\n\r\n\tpublic _iGetTextureData():BitmapData\r\n\t{\r\n\t\treturn this._bitmapData;\r\n\t}\r\n}\r\n\r\nexport = BitmapTexture;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport MipmapGenerator\t\t\t= require(\"awayjs-core/lib/textures/MipmapGenerator\");\r\nimport TextureProxyBase\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass CubeTextureBase extends TextureProxyBase\r\n{\r\n\tpublic _mipmapDataArray:Array<Array<BitmapData>> = new Array<Array<BitmapData>>(6);\r\n\tpublic _mipmapDataDirtyArray:Array<boolean> = new Array<boolean>(6);\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _pSetSize(size:number)\r\n\t{\r\n\t\tif (this._pSize != size)\r\n\t\t\tthis.invalidateSize();\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tthis._mipmapDataDirtyArray[i] = true;\r\n\r\n\t\tthis._pSize = size;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tvar mipmapData:Array<BitmapData> = this._mipmapDataArray[i];\r\n\t\t\tvar len:number = mipmapData.length;\r\n\t\t\tfor (var j:number = 0; j < len; j++)\r\n\t\t\t\tMipmapGenerator.freeMipMapHolder(mipmapData[j]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tsuper.invalidateContent();\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tthis._mipmapDataDirtyArray[i] = true;\r\n\t}\r\n\r\n\tpublic _iGetMipmapData(side:number):Array<BitmapData>\r\n\t{\r\n\t\tif (this._mipmapDataDirtyArray[side]) {\r\n\t\t\tthis._mipmapDataDirtyArray[side] = false;\r\n\r\n\t\t\tvar mipmapData:Array<BitmapData> = this._mipmapDataArray[side] || (this._mipmapDataArray[side] = new Array<BitmapData>());\r\n\t\t\tMipmapGenerator.generateMipMaps(this._iGetTextureData(side), mipmapData, true);\r\n\t\t}\r\n\r\n\t\treturn this._mipmapDataArray[side];\r\n\t}\r\n\r\n\tpublic _iGetTextureData(side:number):any\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = CubeTextureBase;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport CubeTextureBase\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\n\r\nclass ImageCubeTexture extends CubeTextureBase\r\n{\r\n\tprivate _htmlImageElements:Array<HTMLImageElement> = new Array<HTMLImageElement>(6);\r\n\r\n\t/**\r\n\t * The texture on the cube's right face.\r\n\t */\r\n\tpublic get positiveX():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElements[0];\r\n\t}\r\n\r\n\tpublic set positiveX(value:HTMLImageElement)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._htmlImageElements[0] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's left face.\r\n\t */\r\n\tpublic get negativeX():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElements[1];\r\n\t}\r\n\r\n\tpublic set negativeX(value:HTMLImageElement)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._htmlImageElements[1] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's top face.\r\n\t */\r\n\tpublic get positiveY():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElements[2];\r\n\t}\r\n\r\n\tpublic set positiveY(value:HTMLImageElement)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._htmlImageElements[2] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's bottom face.\r\n\t */\r\n\tpublic get negativeY():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElements[3];\r\n\t}\r\n\r\n\tpublic set negativeY(value:HTMLImageElement)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._htmlImageElements[3] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's far face.\r\n\t */\r\n\tpublic get positiveZ():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElements[4];\r\n\t}\r\n\r\n\tpublic set positiveZ(value:HTMLImageElement)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._htmlImageElements[4] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture on the cube's near face.\r\n\t */\r\n\tpublic get negativeZ():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElements[5];\r\n\t}\r\n\r\n\tpublic set negativeZ(value:HTMLImageElement)\r\n\t{\r\n\t\tthis._testSize(value);\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width);\r\n\t\tthis._htmlImageElements[5] = value;\r\n\t}\r\n\r\n\tconstructor(posX:HTMLImageElement, negX:HTMLImageElement, posY:HTMLImageElement, negY:HTMLImageElement, posZ:HTMLImageElement, negZ:HTMLImageElement)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._testSize(this._htmlImageElements[0] = posX);\r\n\t\tthis._testSize(this._htmlImageElements[1] = negX);\r\n\t\tthis._testSize(this._htmlImageElements[2] = posY);\r\n\t\tthis._testSize(this._htmlImageElements[3] = negY);\r\n\t\tthis._testSize(this._htmlImageElements[4] = posZ);\r\n\t\tthis._testSize(this._htmlImageElements[5] = negZ);\r\n\r\n\t\tthis.invalidateContent();\r\n\r\n\t\tthis._pSetSize(posX.width);\r\n\t}\r\n\r\n\tprivate _testSize(value:HTMLImageElement)\r\n\t{\r\n\t\tif (value.width != value.height)\r\n\t\t\tthrow new Error(\"BitmapData should have equal width and height!\");\r\n\t\tif (!TextureUtils.isHTMLImageElementValid(value))\r\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\t}\r\n\r\n\tpublic _iGetTextureData(side:number):HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElements[side];\r\n\t}\r\n}\r\n\r\nexport = ImageCubeTexture;",
    "﻿import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\n\r\n\r\nclass ImageTexture extends Texture2DBase\r\n{\r\n\tprivate _htmlImageElement:HTMLImageElement;\r\n\r\n\t/**\r\n\t *\r\n\t * @param htmlImageElement\r\n\t * @param generateMipmaps\r\n\t */\r\n\tconstructor(htmlImageElement:HTMLImageElement)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.htmlImageElement = htmlImageElement;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlImageElement():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElement;\r\n\t}\r\n\r\n\tpublic set htmlImageElement(value:HTMLImageElement)\r\n\t{\r\n\t\tif (this._htmlImageElement == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!TextureUtils.isHTMLImageElementValid(value))\r\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._htmlImageElement = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(value.width, value.height);\r\n\t}\r\n\r\n\tpublic _iGetTextureData():HTMLImageElement\r\n\t{\r\n\t\treturn this._htmlImageElement;\r\n\t}\r\n}\r\n\r\nexport = ImageTexture;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\n\r\n/**\r\n * MipmapGenerator is a helper class that uploads BitmapData to a Texture including mipmap levels.\r\n */\r\nclass MipmapGenerator\r\n{\r\n\tprivate static _mipMaps = [];\r\n\tprivate static _mipMapUses = [];\r\n\r\n\tprivate static _matrix:Matrix = new Matrix();\r\n\tprivate static _rect:Rectangle = new Rectangle();\r\n\tprivate static _source:BitmapData;\r\n\r\n\t/**\r\n\t * Uploads a BitmapData with mip maps to a target Texture object.\r\n\t * @param source The source to upload.\r\n\t * @param target The target Texture to upload to.\r\n\t * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\r\n\t * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\r\n\t */\r\n\tpublic static generateMipMaps(source:HTMLImageElement, output?:Array<BitmapData>, alpha?:boolean);\r\n\tpublic static generateMipMaps(source:BitmapData, output?:Array<BitmapData>, alpha?:boolean);\r\n\tpublic static generateMipMaps(source:any, output?:Array<BitmapData>, alpha:boolean = false)\r\n\t{\r\n\t\tvar w:number = source.width;\r\n\t\tvar h:number = source.height;\r\n\t\tvar i:number = 0;\r\n\r\n\t\tvar mipmap:BitmapData;\r\n\r\n\t\tMipmapGenerator._rect.width = w;\r\n\t\tMipmapGenerator._rect.height = h;\r\n\r\n\t\t//use (OR) to create non-square texture mipmaps\r\n\t\twhile (w >= 1 || h >= 1) {\r\n\r\n\t\t\tmipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\r\n\r\n\t\t\tif (alpha)\r\n\t\t\t\tmipmap.fillRect(MipmapGenerator._rect, 0);\r\n\r\n\t\t\tMipmapGenerator._matrix.a = MipmapGenerator._rect.width/source.width;\r\n\t\t\tMipmapGenerator._matrix.d = MipmapGenerator._rect.height/source.height;\r\n\r\n\t\t\tmipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\r\n\r\n\t\t\tw >>= 1;\r\n\t\t\th >>= 1;\r\n\r\n\t\t\tMipmapGenerator._rect.width = w > 1? w : 1;\r\n\t\t\tMipmapGenerator._rect.height = h > 1? h : 1;\r\n\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _getMipmapHolder(mipMapHolder:BitmapData, newW:number, newH:number):BitmapData\r\n\t{\r\n\t\tif (mipMapHolder) {\r\n\t\t\tif (mipMapHolder.width == newW && mipMapHolder.height == newH)\r\n\t\t\t\treturn mipMapHolder;\r\n\r\n\t\t\tMipmapGenerator.freeMipMapHolder(mipMapHolder);\r\n\t\t}\r\n\r\n\t\tif (!MipmapGenerator._mipMaps[newW]) {\r\n\t\t\tMipmapGenerator._mipMaps[newW] = [];\r\n\t\t\tMipmapGenerator._mipMapUses[newW] = [];\r\n\t\t}\r\n\r\n\t\tif (!MipmapGenerator._mipMaps[newW][newH]) {\r\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapData(newW, newH, true);\r\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = 1;\r\n\t\t} else {\r\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\r\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH];\r\n\t\t}\r\n\r\n\t\treturn mipMapHolder;\r\n\t}\r\n\r\n\tpublic static freeMipMapHolder(mipMapHolder:BitmapData)\r\n\t{\r\n\t\tvar holderWidth:number = mipMapHolder.width;\r\n\t\tvar holderHeight:number = mipMapHolder.height;\r\n\r\n\t\tif (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\r\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\r\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = MipmapGenerator;",
    "﻿import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\n\r\n\r\nclass RenderTexture extends Texture2DBase\r\n{\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (value == this._pWidth)\r\n\t\t\treturn;\r\n\r\n\t\tif (!TextureUtils.isDimensionValid(value))\r\n\t\t\tthrow new Error(\"Invalid size: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis.invalidateContent();\r\n\r\n\t\tthis._pSetSize(value, this._pHeight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (value == this._pHeight)\r\n\t\t\treturn;\r\n\r\n\t\tif (!TextureUtils.isDimensionValid(value))\r\n\t\t\tthrow new Error(\"Invalid size: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis.invalidateContent();\r\n\t\tthis._pSetSize(this._pWidth, value);\r\n\t}\r\n\r\n\tconstructor(width:number, height:number)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pSetSize(width, height);\r\n\t}\r\n}\r\n\r\nexport = RenderTexture;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport BitmapDataChannel\t\t= require(\"awayjs-core/lib/base/BitmapDataChannel\");\r\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\n\r\n/**\r\n * A convenience texture that encodes a specular map in the red channel, and the gloss map in the green channel, as expected by BasicSpecularMapMethod\r\n */\r\nclass SpecularBitmapTexture extends BitmapTexture\r\n{\r\n\tprivate _specularMap:BitmapData;\r\n\tprivate _glossMap:BitmapData;\r\n\t\r\n\tconstructor(specularMap:BitmapData = null, glossMap:BitmapData = null)\r\n\t{\r\n\t\tvar bmd:BitmapData = specularMap? specularMap : glossMap;\r\n\r\n\t\tbmd = bmd? new BitmapData(bmd.width, bmd.height, false, 0xffffff) : new BitmapData(1, 1, false, 0xffffff);\r\n\t\t\r\n\t\tsuper(bmd);\r\n\t\t\r\n\t\tthis.specularMap = specularMap;\r\n\t\tthis.glossMap = glossMap;\r\n\t}\r\n\t\r\n\tpublic get specularMap():BitmapData\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\t\r\n\tpublic set specularMap(value:BitmapData)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t\t\r\n\t\tthis._testSize();\r\n\t}\r\n\t\r\n\tpublic get glossMap():BitmapData\r\n\t{\r\n\t\treturn this._glossMap;\r\n\t}\r\n\t\r\n\tpublic set glossMap(value:BitmapData)\r\n\t{\r\n\t\tthis._glossMap = value;\r\n\t\tthis.invalidateContent();\r\n\t\t\r\n\t\tthis._testSize();\r\n\t}\r\n\t\r\n\tprivate _testSize()\r\n\t{\r\n\t\tvar w:Number, h:Number;\r\n\t\t\r\n\t\tif (this._specularMap) {\r\n\t\t\tw = this._specularMap.width;\r\n\t\t\th = this._specularMap.height;\r\n\t\t} else if (this._glossMap) {\r\n\t\t\tw = this._glossMap.width;\r\n\t\t\th = this._glossMap.height;\r\n\t\t} else {\r\n\t\t\tw = 1;\r\n\t\t\th = 1;\r\n\t\t}\r\n\t\t\r\n\t\tif (w != this._bitmapData.width && h != this._bitmapData.height) {\r\n\t\t\tvar oldBitmap:BitmapData = this._bitmapData;\r\n\t\t\tthis.bitmapData = new BitmapData(this._specularMap.width, this._specularMap.height, false, 0xffffff);\r\n\t\t\toldBitmap.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _iGetTextureData():BitmapData\r\n\t{\r\n\t\tvar rect:Rectangle = this._specularMap.rect;\r\n\t\tvar origin:Point = new Point();\r\n\r\n\t\tthis._bitmapData.fillRect(rect, 0xffffff);\r\n\r\n\t\tif (this._glossMap)\r\n\t\t\tthis._bitmapData.copyChannel(this._glossMap, rect, origin, BitmapDataChannel.GREEN, BitmapDataChannel.GREEN);\r\n\r\n\t\tif (this._specularMap)\r\n\t\t\tthis._bitmapData.copyChannel(this._specularMap, rect, origin, BitmapDataChannel.RED, BitmapDataChannel.RED);\r\n\r\n\t\treturn this._bitmapData;\r\n\t}\r\n}\r\n\r\nexport = SpecularBitmapTexture;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport MipmapGenerator\t\t\t= require(\"awayjs-core/lib/textures/MipmapGenerator\");\r\nimport TextureProxyBase\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass Texture2DBase extends TextureProxyBase\r\n{\r\n\tprivate _mipmapData:Array<BitmapData>;\r\n\tprivate _mipmapDataDirty:boolean;\r\n\tpublic _pWidth:number;\r\n\tpublic _pHeight:number;\r\n\t\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\tpublic get size():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this._mipmapData) {\r\n\t\t\tvar len:number = this._mipmapData.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t\tMipmapGenerator.freeMipMapHolder(this._mipmapData[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tsuper.invalidateContent();\r\n\r\n\t\tthis._mipmapDataDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _pSetSize(width:number, height:number)\r\n\t{\r\n\t\tif (this._pWidth != width || this._pHeight != height)\r\n\t\t\tthis.invalidateSize();\r\n\r\n\t\tthis._mipmapDataDirty = true;\r\n\r\n\t\tthis._pWidth = width;\r\n\t\tthis._pHeight = height;\r\n\t}\r\n\r\n\tpublic _iGetMipmapData():Array<BitmapData>\r\n\t{\r\n\t\tif (this._mipmapDataDirty) {\r\n\t\t\tthis._mipmapDataDirty = false;\r\n\r\n\t\t\tif (!this._mipmapData)\r\n\t\t\t\tthis._mipmapData = new Array<BitmapData>();\r\n\r\n\t\t\tMipmapGenerator.generateMipMaps(this._iGetTextureData(), this._mipmapData, true);\r\n\t\t}\r\n\r\n\t\treturn this._mipmapData;\r\n\t}\r\n\r\n\tpublic _iGetTextureData():any\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = Texture2DBase;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport ITextureData\t\t\t\t= require(\"awayjs-core/lib/pool/ITextureData\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureProxyBase extends NamedAssetBase implements IAsset\r\n{\r\n\tpublic _pSize:number;\r\n\tpublic _pFormat:string = \"bgra\"\r\n\tprivate _textureData:Array<ITextureData> = new Array<ITextureData>();\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(generateMipmaps:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get size():number\r\n\t{\r\n\t\treturn this._pSize;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get format():string\r\n\t{\r\n\t\treturn this._pFormat;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.TEXTURE;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureData.length\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureData[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureData.length)\r\n\t\t\tthis._textureData[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureData.length)\r\n\t\t\tthis._textureData[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureData(textureData:ITextureData):ITextureData\r\n\t{\r\n\t\tthis._textureData.push(textureData);\r\n\r\n\t\treturn textureData;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureData(textureData:ITextureData):ITextureData\r\n\t{\r\n\t\tthis._textureData.splice(this._textureData.indexOf(textureData), 1);\r\n\r\n\t\treturn textureData;\r\n\t}\r\n}\r\n\r\nexport = TextureProxyBase;",
    "class Keyboard\r\n{\r\n\t/**\r\n\t * Constant associated with the key code value for the A key (65).\r\n\t */\r\n\tpublic static A:number /*uint*/ = 65;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\r\n\t */\r\n\tpublic static ALTERNATE:number /*uint*/ = 18;\r\n\r\n\t/**\r\n\t * Select the audio mode\r\n\t */\r\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the B key (66).\r\n\t */\r\n\tpublic static B:number /*uint*/ = 66;\r\n\r\n\t/**\r\n\t * Return to previous page in application\r\n\t */\r\n\tpublic static BACK:number /*uint*/ = 0x01000016;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ` key (192).\r\n\t */\r\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the \\ key (220).\r\n\t */\r\n\tpublic static BACKSLASH:number /*uint*/ = 220;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Backspace key (8).\r\n\t */\r\n\tpublic static BACKSPACE:number /*uint*/ = 8;\r\n\r\n\t/**\r\n\t * Blue function key button\r\n\t */\r\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the C key (67).\r\n\t */\r\n\tpublic static C:number /*uint*/ = 67;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Caps Lock key (20).\r\n\t */\r\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\r\n\r\n\t/**\r\n\t * Channel down\r\n\t */\r\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\r\n\r\n\t/**\r\n\t * Channel up\r\n\t */\r\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the , key (188).\r\n\t */\r\n\tpublic static COMMA:number /*uint*/ = 188;\r\n\r\n\t/**\r\n\t * Constant associated with the Mac command key (15). This constant is\r\n\t * currently only used for setting menu key equivalents.\r\n\t */\r\n\tpublic static COMMAND:number /*uint*/ = 15;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Control key (17).\r\n\t */\r\n\tpublic static CONTROL:number /*uint*/ = 17;\r\n\r\n\t/**\r\n\t * An array containing all the defined key name constants.\r\n\t */\r\n\tpublic static CharCodeStrings:Array<any>;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the D key (68).\r\n\t */\r\n\tpublic static D:number /*uint*/ = 68;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Delete key (46).\r\n\t */\r\n\tpublic static DELETE:number /*uint*/ = 46;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Down Arrow key (40).\r\n\t */\r\n\tpublic static DOWN:number /*uint*/ = 40;\r\n\r\n\t/**\r\n\t * Engage DVR application mode\r\n\t */\r\n\tpublic static DVR:number /*uint*/ = 0x01000019;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the E key (69).\r\n\t */\r\n\tpublic static E:number /*uint*/ = 69;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the End key (35).\r\n\t */\r\n\tpublic static END:number /*uint*/ = 35;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Enter key (13).\r\n\t */\r\n\tpublic static ENTER:number /*uint*/ = 13;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the = key (187).\r\n\t */\r\n\tpublic static EQUAL:number /*uint*/ = 187;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Escape key (27).\r\n\t */\r\n\tpublic static ESCAPE:number /*uint*/ = 27;\r\n\r\n\t/**\r\n\t * Exits current application mode\r\n\t */\r\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F key (70).\r\n\t */\r\n\tpublic static F:number /*uint*/ = 70;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F1 key (112).\r\n\t */\r\n\tpublic static F1:number /*uint*/ = 112;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F10 key (121).\r\n\t */\r\n\tpublic static F10:number /*uint*/ = 121;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F11 key (122).\r\n\t */\r\n\tpublic static F11:number /*uint*/ = 122;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F12 key (123).\r\n\t */\r\n\tpublic static F12:number /*uint*/ = 123;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F13 key (124).\r\n\t */\r\n\tpublic static F13:number /*uint*/ = 124;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F14 key (125).\r\n\t */\r\n\tpublic static F14:number /*uint*/ = 125;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F15 key (126).\r\n\t */\r\n\tpublic static F15:number /*uint*/ = 126;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F2 key (113).\r\n\t */\r\n\tpublic static F2:number /*uint*/ = 113;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F3 key (114).\r\n\t */\r\n\tpublic static F3:number /*uint*/ = 114;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F4 key (115).\r\n\t */\r\n\tpublic static F4:number /*uint*/ = 115;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F5 key (116).\r\n\t */\r\n\tpublic static F5:number /*uint*/ = 116;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F6 key (117).\r\n\t */\r\n\tpublic static F6:number /*uint*/ = 117;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F7 key (118).\r\n\t */\r\n\tpublic static F7:number /*uint*/ = 118;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F8 key (119).\r\n\t */\r\n\tpublic static F8:number /*uint*/ = 119;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F9 key (120).\r\n\t */\r\n\tpublic static F9:number /*uint*/ = 120;\r\n\r\n\t/**\r\n\t * Engage fast-forward transport mode\r\n\t */\r\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the G key (71).\r\n\t */\r\n\tpublic static G:number /*uint*/ = 71;\r\n\r\n\t/**\r\n\t * Green function key button\r\n\t */\r\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\r\n\r\n\t/**\r\n\t * Engage program guide\r\n\t */\r\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the H key (72).\r\n\t */\r\n\tpublic static H:number /*uint*/ = 72;\r\n\r\n\t/**\r\n\t * Engage help application or context-sensitive help\r\n\t */\r\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Home key (36).\r\n\t */\r\n\tpublic static HOME:number /*uint*/ = 36;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the I key (73).\r\n\t */\r\n\tpublic static I:number /*uint*/ = 73;\r\n\r\n\t/**\r\n\t * Info button\r\n\t */\r\n\tpublic static INFO:number /*uint*/ = 0x01000013;\r\n\r\n\t/**\r\n\t * Cycle input\r\n\t */\r\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Insert key (45).\r\n\t */\r\n\tpublic static INSERT:number /*uint*/ = 45;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the J key (74).\r\n\t */\r\n\tpublic static J:number /*uint*/ = 74;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the K key (75).\r\n\t */\r\n\tpublic static K:number /*uint*/ = 75;\r\n\r\n\t/**\r\n\t * The Begin key\r\n\t */\r\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\r\n\r\n\t/**\r\n\t * The Break key\r\n\t */\r\n\tpublic static KEYNAME_BREAK:string = \"Break\";\r\n\r\n\t/**\r\n\t * The Clear Display key\r\n\t */\r\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\r\n\r\n\t/**\r\n\t * The Clear Line key\r\n\t */\r\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\r\n\r\n\t/**\r\n\t * The Delete key\r\n\t */\r\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\r\n\r\n\t/**\r\n\t * The Delete Character key\r\n\t */\r\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\r\n\r\n\t/**\r\n\t * The Delete Line key\r\n\t */\r\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\r\n\r\n\t/**\r\n\t * The down arrow\r\n\t */\r\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\r\n\r\n\t/**\r\n\t * The End key\r\n\t */\r\n\tpublic static KEYNAME_END:string = \"End\";\r\n\r\n\t/**\r\n\t * The Execute key\r\n\t */\r\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\r\n\r\n\t/**\r\n\t * The F1 key\r\n\t */\r\n\tpublic static KEYNAME_F1:string = \"F1\";\r\n\r\n\t/**\r\n\t * The F10 key\r\n\t */\r\n\tpublic static KEYNAME_F10:string = \"F10\";\r\n\r\n\t/**\r\n\t * The F11 key\r\n\t */\r\n\tpublic static KEYNAME_F11:string = \"F11\";\r\n\r\n\t/**\r\n\t * The F12 key\r\n\t */\r\n\tpublic static KEYNAME_F12:string = \"F12\";\r\n\r\n\t/**\r\n\t * The F13 key\r\n\t */\r\n\tpublic static KEYNAME_F13:string = \"F13\";\r\n\r\n\t/**\r\n\t * The F14 key\r\n\t */\r\n\tpublic static KEYNAME_F14:string = \"F14\";\r\n\r\n\t/**\r\n\t * The F15 key\r\n\t */\r\n\tpublic static KEYNAME_F15:string = \"F15\";\r\n\r\n\t/**\r\n\t * The F16 key\r\n\t */\r\n\tpublic static KEYNAME_F16:string = \"F16\";\r\n\r\n\t/**\r\n\t * The F17 key\r\n\t */\r\n\tpublic static KEYNAME_F17:string = \"F17\";\r\n\r\n\t/**\r\n\t * The F18 key\r\n\t */\r\n\tpublic static KEYNAME_F18:string = \"F18\";\r\n\r\n\t/**\r\n\t * The F19 key\r\n\t */\r\n\tpublic static KEYNAME_F19:string = \"F19\";\r\n\r\n\t/**\r\n\t * The F2 key\r\n\t */\r\n\tpublic static KEYNAME_F2:string = \"F2\";\r\n\r\n\t/**\r\n\t * The F20 key\r\n\t */\r\n\tpublic static KEYNAME_F20:string = \"F20\";\r\n\r\n\t/**\r\n\t * The F21 key\r\n\t */\r\n\tpublic static KEYNAME_F21:string = \"F21\";\r\n\r\n\t/**\r\n\t * The F22 key\r\n\t */\r\n\tpublic static KEYNAME_F22:string = \"F22\";\r\n\r\n\t/**\r\n\t * The F23 key\r\n\t */\r\n\tpublic static KEYNAME_F23:string = \"F23\";\r\n\r\n\t/**\r\n\t * The F24 key\r\n\t */\r\n\tpublic static KEYNAME_F24:string = \"F24\";\r\n\r\n\t/**\r\n\t * The F25 key\r\n\t */\r\n\tpublic static KEYNAME_F25:string = \"F25\";\r\n\r\n\t/**\r\n\t * The F26 key\r\n\t */\r\n\tpublic static KEYNAME_F26:string = \"F26\";\r\n\r\n\t/**\r\n\t * The F27 key\r\n\t */\r\n\tpublic static KEYNAME_F27:string = \"F27\";\r\n\r\n\t/**\r\n\t * The F28 key\r\n\t */\r\n\tpublic static KEYNAME_F28:string = \"F28\";\r\n\r\n\t/**\r\n\t * The F29 key\r\n\t */\r\n\tpublic static KEYNAME_F29:string = \"F29\";\r\n\r\n\t/**\r\n\t * The F3 key\r\n\t */\r\n\tpublic static KEYNAME_F3:string = \"F3\";\r\n\r\n\t/**\r\n\t * The F30 key\r\n\t */\r\n\tpublic static KEYNAME_F30:string = \"F30\";\r\n\r\n\t/**\r\n\t * The F31 key\r\n\t */\r\n\tpublic static KEYNAME_F31:string = \"F31\";\r\n\r\n\t/**\r\n\t * The F32 key\r\n\t */\r\n\tpublic static KEYNAME_F32:string = \"F32\";\r\n\r\n\t/**\r\n\t * The F33 key\r\n\t */\r\n\tpublic static KEYNAME_F33:string = \"F33\";\r\n\r\n\t/**\r\n\t * The F34 key\r\n\t */\r\n\tpublic static KEYNAME_F34:string = \"F34\";\r\n\r\n\t/**\r\n\t * The F35 key\r\n\t */\r\n\tpublic static KEYNAME_F35:string = \"F35\";\r\n\r\n\t/**\r\n\t * The F4 key\r\n\t */\r\n\tpublic static KEYNAME_F4:string = \"F4\";\r\n\r\n\t/**\r\n\t * The F5 key\r\n\t */\r\n\tpublic static KEYNAME_F5:string = \"F5\";\r\n\r\n\t/**\r\n\t * The F6 key\r\n\t */\r\n\tpublic static KEYNAME_F6:string = \"F6\";\r\n\r\n\t/**\r\n\t * The F7 key\r\n\t */\r\n\tpublic static KEYNAME_F7:string = \"F7\";\r\n\r\n\t/**\r\n\t * The F8 key\r\n\t */\r\n\tpublic static KEYNAME_F8:string = \"F8\";\r\n\r\n\t/**\r\n\t * The F9 key\r\n\t */\r\n\tpublic static KEYNAME_F9:string = \"F9\";\r\n\r\n\t/**\r\n\t * The Find key\r\n\t */\r\n\tpublic static KEYNAME_FIND:string = \"Find\";\r\n\r\n\t/**\r\n\t * The Help key\r\n\t */\r\n\tpublic static KEYNAME_HELP:string = \"Help\";\r\n\r\n\t/**\r\n\t * The Home key\r\n\t */\r\n\tpublic static KEYNAME_HOME:string = \"Home\";\r\n\r\n\t/**\r\n\t * The Insert key\r\n\t */\r\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\r\n\r\n\t/**\r\n\t * The Insert Character key\r\n\t */\r\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\r\n\r\n\t/**\r\n\t * The Insert Line key\r\n\t */\r\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\r\n\r\n\t/**\r\n\t * The left arrow\r\n\t */\r\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\r\n\r\n\t/**\r\n\t * The Menu key\r\n\t */\r\n\tpublic static KEYNAME_MENU:string = \"Menu\";\r\n\r\n\t/**\r\n\t * The Mode Switch key\r\n\t */\r\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\r\n\r\n\t/**\r\n\t * The Next key\r\n\t */\r\n\tpublic static KEYNAME_NEXT:string = \"Next\";\r\n\r\n\t/**\r\n\t * The Page Down key\r\n\t */\r\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\r\n\r\n\t/**\r\n\t * The Page Up key\r\n\t */\r\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\r\n\r\n\t/**\r\n\t * The Pause key\r\n\t */\r\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\r\n\r\n\t/**\r\n\t * The Previous key\r\n\t */\r\n\tpublic static KEYNAME_PREV:string = \"Prev\";\r\n\r\n\t/**\r\n\t * The PRINT key\r\n\t */\r\n\tpublic static KEYNAME_PRINT:string = \"Print\";\r\n\r\n\t/**\r\n\t * The PRINT Screen\r\n\t */\r\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\r\n\r\n\t/**\r\n\t * The Redo key\r\n\t */\r\n\tpublic static KEYNAME_REDO:string = \"Redo\";\r\n\r\n\t/**\r\n\t * The Reset key\r\n\t */\r\n\tpublic static KEYNAME_RESET:string = \"Reset\";\r\n\r\n\t/**\r\n\t * The right arrow\r\n\t */\r\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\r\n\r\n\t/**\r\n\t * The Scroll Lock key\r\n\t */\r\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\r\n\r\n\t/**\r\n\t * The Select key\r\n\t */\r\n\tpublic static KEYNAME_SELECT:string = \"Select\";\r\n\r\n\t/**\r\n\t * The Stop key\r\n\t */\r\n\tpublic static KEYNAME_STOP:string = \"Stop\";\r\n\r\n\t/**\r\n\t * The System Request key\r\n\t */\r\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\r\n\r\n\t/**\r\n\t * The System key\r\n\t */\r\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\r\n\r\n\t/**\r\n\t * The Undo key\r\n\t */\r\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\r\n\r\n\t/**\r\n\t * The up arrow\r\n\t */\r\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\r\n\r\n\t/**\r\n\t * The User key\r\n\t */\r\n\tpublic static KEYNAME_USER:string = \"User\";\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the L key (76).\r\n\t */\r\n\tpublic static L:number /*uint*/ = 76;\r\n\r\n\t/**\r\n\t * Watch last channel or show watched\r\n\t */\r\n\tpublic static LAST:number /*uint*/ = 0x01000011;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Left Arrow key (37).\r\n\t */\r\n\tpublic static LEFT:number /*uint*/ = 37;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the [ key (219).\r\n\t */\r\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\r\n\r\n\t/**\r\n\t * Return to live [position in broadcast]\r\n\t */\r\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the M key (77).\r\n\t */\r\n\tpublic static M:number /*uint*/ = 77;\r\n\r\n\t/**\r\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\r\n\t */\r\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\r\n\r\n\t/**\r\n\t * Engage menu\r\n\t */\r\n\tpublic static MENU:number /*uint*/ = 0x01000012;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the - key (189).\r\n\t */\r\n\tpublic static MINUS:number /*uint*/ = 189;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the N key (78).\r\n\t */\r\n\tpublic static N:number /*uint*/ = 78;\r\n\r\n\t/**\r\n\t * Skip to next track or chapter\r\n\t */\r\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 0 key (48).\r\n\t */\r\n\tpublic static NUMBER_0:number /*uint*/ = 48;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 1 key (49).\r\n\t */\r\n\tpublic static NUMBER_1:number /*uint*/ = 49;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 2 key (50).\r\n\t */\r\n\tpublic static NUMBER_2:number /*uint*/ = 50;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 3 key (51).\r\n\t */\r\n\tpublic static NUMBER_3:number /*uint*/ = 51;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 4 key (52).\r\n\t */\r\n\tpublic static NUMBER_4:number /*uint*/ = 52;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 5 key (53).\r\n\t */\r\n\tpublic static NUMBER_5:number /*uint*/ = 53;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 6 key (54).\r\n\t */\r\n\tpublic static NUMBER_6:number /*uint*/ = 54;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 7 key (55).\r\n\t */\r\n\tpublic static NUMBER_7:number /*uint*/ = 55;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 8 key (56).\r\n\t */\r\n\tpublic static NUMBER_8:number /*uint*/ = 56;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 9 key (57).\r\n\t */\r\n\tpublic static NUMBER_9:number /*uint*/ = 57;\r\n\r\n\t/**\r\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\r\n\t */\r\n\tpublic static NUMPAD:number /*uint*/ = 21;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\r\n\t */\r\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\r\n\t */\r\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\r\n\t */\r\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\r\n\t */\r\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\r\n\t */\r\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\r\n\t */\r\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\r\n\t */\r\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\r\n\t */\r\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\r\n\t */\r\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\r\n\t */\r\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the addition key on the number pad (107).\r\n\t */\r\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\r\n\t */\r\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the division key on the number pad (111).\r\n\t */\r\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\r\n\t */\r\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\r\n\t */\r\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\r\n\t */\r\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the O key (79).\r\n\t */\r\n\tpublic static O:number /*uint*/ = 79;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the P key (80).\r\n\t */\r\n\tpublic static P:number /*uint*/ = 80;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Page Down key (34).\r\n\t */\r\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Page Up key (33).\r\n\t */\r\n\tpublic static PAGE_UP:number /*uint*/ = 33;\r\n\r\n\t/**\r\n\t * Engage pause transport mode\r\n\t */\r\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the . key (190).\r\n\t */\r\n\tpublic static PERIOD:number /*uint*/ = 190;\r\n\r\n\t/**\r\n\t * Engage play transport mode\r\n\t */\r\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\r\n\r\n\t/**\r\n\t * Skip to previous track or chapter\r\n\t */\r\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Q key (81).\r\n\t */\r\n\tpublic static Q:number /*uint*/ = 81;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ' key (222).\r\n\t */\r\n\tpublic static QUOTE:number /*uint*/ = 222;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the R key (82).\r\n\t */\r\n\tpublic static R:number /*uint*/ = 82;\r\n\r\n\t/**\r\n\t * Record item or engage record transport mode\r\n\t */\r\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\r\n\r\n\t/**\r\n\t * Red function key button\r\n\t */\r\n\tpublic static RED:number /*uint*/ = 0x01000000;\r\n\r\n\t/**\r\n\t * Engage rewind transport mode\r\n\t */\r\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Right Arrow key (39).\r\n\t */\r\n\tpublic static RIGHT:number /*uint*/ = 39;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ] key (221).\r\n\t */\r\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the S key (83).\r\n\t */\r\n\tpublic static S:number /*uint*/ = 83;\r\n\r\n\t/**\r\n\t * Search button\r\n\t */\r\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ; key (186).\r\n\t */\r\n\tpublic static SEMICOLON:number /*uint*/ = 186;\r\n\r\n\t/**\r\n\t * Engage setup application or menu\r\n\t */\r\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Shift key (16).\r\n\t */\r\n\tpublic static SHIFT:number /*uint*/ = 16;\r\n\r\n\t/**\r\n\t * Quick skip backward (usually 7-10 seconds)\r\n\t */\r\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\r\n\r\n\t/**\r\n\t * Quick skip ahead (usually 30 seconds)\r\n\t */\r\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the / key (191).\r\n\t */\r\n\tpublic static SLASH:number /*uint*/ = 191;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Spacebar (32).\r\n\t */\r\n\tpublic static SPACE:number /*uint*/ = 32;\r\n\r\n\t/**\r\n\t * Engage stop transport mode\r\n\t */\r\n\tpublic static STOP:number /*uint*/ = 0x01000009;\r\n\r\n\t/**\r\n\t * Toggle subtitles\r\n\t */\r\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the T key (84).\r\n\t */\r\n\tpublic static T:number /*uint*/ = 84;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Tab key (9).\r\n\t */\r\n\tpublic static TAB:number /*uint*/ = 9;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the U key (85).\r\n\t */\r\n\tpublic static U:number /*uint*/ = 85;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Up Arrow key (38).\r\n\t */\r\n\tpublic static UP:number /*uint*/ = 38;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the V key (86).\r\n\t */\r\n\tpublic static V:number /*uint*/ = 86;\r\n\r\n\t/**\r\n\t * Engage video-on-demand\r\n\t */\r\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the W key (87).\r\n\t */\r\n\tpublic static W:number /*uint*/ = 87;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the X key (88).\r\n\t */\r\n\tpublic static X:number /*uint*/ = 88;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Y key (89).\r\n\t */\r\n\tpublic static Y:number /*uint*/ = 89;\r\n\r\n\t/**\r\n\t * Yellow function key button\r\n\t */\r\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Z key (90).\r\n\t */\r\n\tpublic static Z:number /*uint*/ = 90;\r\n\r\n}\r\n\r\nexport = Keyboard;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nclass ByteArrayBase\r\n{\r\n\tpublic position:number = 0;\r\n\tpublic length:number = 0;\r\n\tpublic _mode:string = \"\";\r\n\r\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\tpublic writeByte(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readByte():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedByte():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedShort():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedInt():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeFloat(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic toFloatBits(x:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readFloat(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic fromFloatBits(x:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic getBytesAvailable():number\r\n\t{\r\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\r\n\t}\r\n\r\n\tpublic compareEqual(other, count)\r\n\t{\r\n\t\tif (count == undefined || count > this.length - this.position)\r\n\t\t\tcount = this.length - this.position;\r\n\t\tif (count > other.length - other.position)\r\n\t\t\tcount = other.length - other.position;\r\n\t\tvar co0 = count;\r\n\t\tvar r = true;\r\n\t\twhile (r && count >= 4) {\r\n\t\t\tcount -= 4;\r\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\r\n\t\t}\r\n\t\twhile (r && count >= 1) {\r\n\t\t\tcount--;\r\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\r\n\t\t}\r\n\t\tvar c0;\r\n\t\tthis.position -= (c0 - count);\r\n\t\tother.position -= (c0 - count);\r\n\t\treturn r;\r\n\t}\r\n\r\n\tpublic writeBase64String(s:string)\r\n\t{\r\n\t\tfor (var i:number = 0; i < s.length; i++) {\r\n\t\t\tvar v = s.charAt(i);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic dumpToConsole()\r\n\t{\r\n\t\tvar oldpos = this.position;\r\n\t\tthis.position = 0;\r\n\t\tvar nstep:number = 8;\r\n\r\n\t\tfunction asHexString(x, digits)\r\n\t\t{\r\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\r\n\t\t\tvar sh:string = \"\";\r\n\t\t\tfor (var d:number = 0; d < digits; d++) {\r\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\r\n\t\t\t}\r\n\t\t\treturn sh;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < this.length; i += nstep) {\r\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\r\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\r\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\r\n\t\t\t}\r\n\t\t\tconsole.log(s);\r\n\t\t}\r\n\t\tthis.position = oldpos;\r\n\t}\r\n\r\n\tpublic readBase64String(count:number)\r\n\t{\r\n\t\tif (count == undefined || count > this.length - this.position)\r\n\t\t\tcount = this.length - this.position;\r\n\t\tif (!(count > 0)) return \"\";\r\n\r\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\r\n\t}\r\n\r\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self)\r\n\t{ // return base64 string of the next count bytes\r\n\t\tvar r = \"\";\r\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\r\n\t\tvar base64Key = ByteArrayBase.Base64Key;\r\n\t\twhile (count >= 3) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\r\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\r\n\t\t\tenc4 = b2 & 63;\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\r\n\t\t\tcount -= 3;\r\n\t\t}\r\n\t\t// pad\r\n\t\tif (count == 2) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\r\n\t\t\tenc3 = ((b1 & 15) << 2);\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\r\n\t\t} else if (count == 1) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4);\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\r\n\t\t}\r\n\t\treturn r;\r\n\t}\r\n}\r\n\r\nexport = ByteArrayBase;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\r\n\r\nclass ByteArrayBuffer extends ByteArrayBase\r\n{\r\n\r\n\t/*\r\n\t public maxlength:number = 0;\r\n\t public arraybytes; //ArrayBuffer\r\n\t public unalignedarraybytestemp; //ArrayBuffer\r\n\t */\r\n\r\n\tpublic _bytes:number[];\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._bytes = [];\r\n\t\tthis._mode = \"Array\";\r\n\t}\r\n\r\n\tpublic writeByte(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readByte():number\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\treturn this._bytes[ this.position++ ];\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[this.position++] = bi & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedByte():number\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\treturn this._bytes[ this.position++ ];\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedShort():number\r\n\t{\r\n\t\tif (this.position + 2 > this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\r\n\t\tthis.position += 2;\r\n\t\treturn r;\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedInt():number\r\n\t{\r\n\t\tif (this.position + 4 > this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\r\n\t\tthis.position += 4;\r\n\t\treturn r >>> 0;\r\n\t}\r\n\r\n\tpublic writeFloat(b:number)\r\n\t{\r\n\t\t// this is crazy slow and silly, but as a fallback...\r\n\r\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\r\n\t}\r\n\r\n\tpublic toFloatBits(x:number)\r\n\t{\r\n\t\t// don't handle inf/nan yet\r\n\t\t// special case zero\r\n\t\tif (x == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// remove the sign, after this we only deal with positive numbers\r\n\t\tvar sign:number = 0;\r\n\t\tif (x < 0) {\r\n\t\t\tx = -x;\r\n\t\t\tsign = 1;\r\n\t\t} else {\r\n\t\t\tsign = 0;\r\n\t\t}\r\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\r\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\r\n\t\texponent = Math.floor(exponent);\r\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\r\n\t\tvar mantissa = Math.floor(x) - 0x800000;\r\n\t\texponent = exponent + 127;\r\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\r\n\t}\r\n\r\n\tpublic readFloat(b:number)\r\n\t{\r\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\r\n\t}\r\n\r\n\tpublic fromFloatBits(x:number)\r\n\t{\r\n\t\tif (x == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\r\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\r\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\r\n\t\tif (x >>> 31 != 0) {\r\n\t\t\ty = -y;\r\n\t\t}\r\n\t\treturn y;\r\n\t}\r\n\r\n\t/*\r\n\t public ensureWriteableSpace( n:number )\r\n\t {\r\n\t this.ensureSpace( n + this.position );\r\n\t }\r\n\r\n\t private ensureSpace( n:number )\r\n\t {\r\n\t if ( n > this.maxlength ) {\r\n\t var newmaxlength:number = (n+255)&(~255);\r\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\r\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\r\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\r\n\t newview.set(view);      // memcpy\r\n\t this.arraybytes = newarraybuffer;\r\n\t this.maxlength = newmaxlength;\r\n\t }\r\n\t }\r\n\t */\r\n}\r\n\r\nexport = ByteArrayBuffer;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\r\n\r\nclass ByteArray extends ByteArrayBase\r\n{\r\n\tpublic maxlength:number = 0;\r\n\tpublic arraybytes; //ArrayBuffer\r\n\tpublic unalignedarraybytestemp; //ArrayBuffer\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._mode = \"Typed array\";\r\n\t\tthis.maxlength = 4;\r\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\r\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\r\n\t}\r\n\r\n\tpublic ensureWriteableSpace(n:number)\r\n\t{\r\n\t\tthis.ensureSpace(n + this.position);\r\n\t}\r\n\r\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\r\n\t{\r\n\r\n\t\tthis.ensureSpace(aBuffer.byteLength);\r\n\r\n\t\tthis.length = aBuffer.byteLength;\r\n\r\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\r\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\r\n\r\n\t\tlocalInt8View.set(inInt8AView);\r\n\r\n\t\tthis.position = 0;\r\n\r\n\t}\r\n\r\n\tpublic getBytesAvailable():number\r\n\t{\r\n\t\treturn ( this.length ) - ( this.position );\r\n\t}\r\n\r\n\tpublic ensureSpace(n:number)\r\n\t{\r\n\t\tif (n > this.maxlength) {\r\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\r\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\r\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\r\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\r\n\t\t\tnewview.set(view);      // memcpy\r\n\t\t\tthis.arraybytes = newarraybuffer;\r\n\t\t\tthis.maxlength = newmaxlength;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeByte(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(1);\r\n\t\tvar view = new Int8Array(this.arraybytes);\r\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readByte()\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar view = new Int8Array(this.arraybytes);\r\n\r\n\t\treturn view[ this.position++ ];\r\n\t}\r\n\r\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0)\r\n\t{\r\n\r\n\t\tif (length == null) {\r\n\t\t\tlength = bytes.length;\r\n\t\t}\r\n\r\n\t\tbytes.ensureWriteableSpace(offset + length);\r\n\r\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\r\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\r\n\r\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\r\n\r\n\t\tthis.position += length;\r\n\r\n\t\tif (length + offset > bytes.length) {\r\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(1);\r\n\t\tvar view = new Uint8Array(this.arraybytes);\r\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedByte()\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar view = new Uint8Array(this.arraybytes);\r\n\t\treturn view[this.position++];\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(2);\r\n\t\tif (( this.position & 1 ) == 0) {\r\n\t\t\tvar view = new Uint16Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\r\n\t\t} else {\r\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = (~~b) & 0xffff;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\t\tthis.position += 2;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUTFBytes(len:number):string\r\n\t{\r\n\r\n\t\tvar value:string = \"\";\r\n\t\tvar max:number = this.position + len;\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\r\n\t\t// utf8-encode\r\n\t\twhile (this.position < max) {\r\n\r\n\t\t\tvar c:number = data.getUint8(this.position++);\r\n\r\n\t\t\tif (c < 0x80) {\r\n\r\n\t\t\t\tif (c == 0) break;\r\n\t\t\t\tvalue += String.fromCharCode(c);\r\n\r\n\t\t\t} else if (c < 0xE0) {\r\n\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t} else if (c < 0xF0) {\r\n\r\n\t\t\t\tvar c2 = data.getUint8(this.position++);\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar c2 = data.getUint8(this.position++);\r\n\t\t\t\tvar c3 = data.getUint8(this.position++);\r\n\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tpublic readInt():number\r\n\t{\r\n\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar int:number = data.getInt32(this.position, true);\r\n\r\n\t\tthis.position += 4;\r\n\r\n\t\treturn int;\r\n\r\n\t}\r\n\r\n\tpublic readShort():number\r\n\t{\r\n\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar short:number = data.getInt16(this.position, true);\r\n\r\n\t\tthis.position += 2;\r\n\t\treturn short;\r\n\r\n\t}\r\n\r\n\tpublic readDouble():number\r\n\t{\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar double:number = data.getFloat64(this.position, true);\r\n\r\n\t\tthis.position += 8;\r\n\t\treturn double;\r\n\r\n\t}\r\n\r\n\tpublic readUnsignedShort()\r\n\t{\r\n\t\tif (this.position > this.length + 2) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tif (( this.position & 1 ) == 0) {\r\n\t\t\tvar view = new Uint16Array(this.arraybytes);\r\n\t\t\tvar pa:number = this.position >> 1;\r\n\t\t\tthis.position += 2;\r\n\t\t\treturn view[ pa ];\r\n\t\t} else {\r\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 2;\r\n\t\t\treturn view[0];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(4);\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Uint32Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\r\n\t\t} else {\r\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = (~~b) & 0xffffffff;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\t\tthis.position += 4;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedInt()\r\n\t{\r\n\r\n\t\tif (this.position > this.length + 4) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Uint32Array(this.arraybytes);\r\n\t\t\tvar pa:number = this.position >> 2;\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[ pa ];\r\n\t\t} else {\r\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[0];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeFloat(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(4);\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Float32Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 2 ] = b;\r\n\t\t} else {\r\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = b;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\t\tthis.position += 4;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readFloat()\r\n\t{\r\n\t\tif (this.position > this.length + 4) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tif ((this.position & 3) == 0) {\r\n\t\t\tvar view = new Float32Array(this.arraybytes);\r\n\t\t\tvar pa = this.position >> 2;\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[pa];\r\n\t\t} else {\r\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[ 0 ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ByteArray;",
    "class CSS\r\n{\r\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number)\r\n\t{\r\n\t\telement.style.width = width + \"px\";\r\n\t\telement.style.height = height + \"px\";\r\n\t\telement[\"width\"] = width;\r\n\t\telement[\"height\"] = height;\r\n\t}\r\n\r\n\tpublic static setElementWidth(element:HTMLElement, width:number)\r\n\t{\r\n\t\telement.style.width = width + \"px\";\r\n\t\telement[\"width\"] = width;\r\n\t}\r\n\r\n\tpublic static setElementHeight(element:HTMLElement, height:number)\r\n\t{\r\n\t\telement.style.height = height + \"px\";\r\n\t\telement[\"height\"] = height;\r\n\t}\r\n\r\n\tpublic static setElementX(element:HTMLElement, x:number)\r\n\t{\r\n\t\telement.style.position = 'absolute';\r\n\t\telement.style.left = x + \"px\";\r\n\t}\r\n\r\n\tpublic static setElementY(element:HTMLElement, y:number)\r\n\t{\r\n\t\telement.style.position = 'absolute';\r\n\t\telement.style.top = y + \"px\";\r\n\t}\r\n\r\n\tpublic static getElementVisibility(element:HTMLElement):boolean\r\n\t{\r\n\t\treturn element.style.visibility == 'visible';\r\n\t}\r\n\r\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean)\r\n\t{\r\n\t\tif (visible) {\r\n\t\t\telement.style.visibility = 'visible';\r\n\t\t} else {\r\n\t\t\telement.style.visibility = 'hidden';\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number)\r\n\t{\r\n\t\tif (element instanceof HTMLCanvasElement) {\r\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\r\n\t\t\tcontext.globalAlpha = alpha;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false)\r\n\t{\r\n\t\tif (absolute) {\r\n\t\t\telement.style.position = \"absolute\";\r\n\t\t} else {\r\n\t\t\telement.style.position = \"relative\";\r\n\t\t}\r\n\r\n\t\telement.style.left = x + \"px\";\r\n\t\telement.style.top = y + \"px\";\r\n\t}\r\n}\r\n\r\nexport = CSS;",
    "/**\r\n *\r\n */\r\nclass ColorUtils\r\n{\r\n\tpublic static float32ColorToARGB(float32Color:number):number[]\r\n\t{\r\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24\r\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\r\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\r\n\t\tvar b:number = float32Color & 0xff;\r\n\t\tvar result:number[] = [ a, r , g , b ];\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprivate static componentToHex(c:number):string\r\n\t{\r\n\t\tvar hex = c.toString(16);\r\n\t\treturn hex.length == 1? \"0\" + hex : hex;\r\n\t}\r\n\r\n\tpublic static RGBToHexString(argb:number[]):string\r\n\t{\r\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\r\n\t}\r\n\r\n\tpublic static ARGBToHexString(argb:number[]):string\r\n\t{\r\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\r\n\t}\r\n}\r\n\r\nexport = ColorUtils;",
    "import PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\n\r\n/**\r\n *\r\n */\r\nclass Debug\r\n{\r\n\tpublic static THROW_ERRORS:boolean = true;\r\n\tpublic static ENABLE_LOG:boolean = true;\r\n\tpublic static LOG_PI_ERRORS:boolean = true;\r\n\r\n\tprivate static keyword:string = null;\r\n\r\n\tpublic static breakpoint():void\r\n\t{\r\n\t\tDebug['break']();\r\n\t}\r\n\r\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true)\r\n\t{\r\n\t\tif (!enable)\r\n\t\t\tDebug.keyword = null;\r\n\t\telse\r\n\t\t\tDebug.keyword = str;\r\n\t}\r\n\r\n\tpublic static throwPIR(clss:string, fnc:string, msg:string)\r\n\t{\r\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\r\n\r\n\t\tif (Debug.THROW_ERRORS) {\r\n\t\t\tif (Debug.keyword) {\r\n\t\t\t\tvar e:string = clss + fnc + msg;\r\n\r\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static logPIR(clss:string, fnc:string, msg:string = '')\r\n\t{\r\n\t\tif (Debug.LOG_PI_ERRORS)\r\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\r\n\t}\r\n\r\n\tpublic static log(...args:any[])\r\n\t{\r\n\t\tif (Debug.ENABLE_LOG)\r\n\t\t\tconsole.log(args);\r\n\t}\r\n}\r\n\r\nexport = Debug;",
    "import getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nclass RequestAnimationFrame\r\n{\r\n\tprivate _callback:Function;\r\n\tprivate _callbackContext:Object;\r\n\tprivate _active:boolean = false;\r\n\tprivate _rafUpdateFunction:any;\r\n\tprivate _prevTime:number;\r\n\tprivate _dt:number;\r\n\tprivate _currentTime:number;\r\n\tprivate _argsArray:Array<any> = new Array();\r\n\tprivate _getTimer:Function;\r\n\r\n\tconstructor(callback:Function, callbackContext:Object)\r\n\t{\r\n\t\tthis._getTimer = getTimer;\r\n\r\n\t\tthis.setCallback(callback, callbackContext);\r\n\r\n\t\tthis._rafUpdateFunction = () => {\r\n\t\t\tif (this._active)\r\n\t\t\t\tthis._tick();\r\n\t\t}\r\n\r\n\t\tthis._argsArray.push(this._dt);\r\n\t}\r\n\r\n\t// Public\r\n\r\n\t/**\r\n\t *\r\n\t * @param callback\r\n\t * @param callbackContext\r\n\t */\r\n\tpublic setCallback(callback:Function, callbackContext:Object)\r\n\t{\r\n\t\tthis._callback = callback;\r\n\t\tthis._callbackContext = callbackContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic start()\r\n\t{\r\n\t\tthis._prevTime = this._getTimer();\r\n\t\tthis._active = true;\r\n\r\n\t\tif (window.requestAnimationFrame) {\r\n\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\r\n\t\t} else {\r\n\t\t\tif (window['mozRequestAnimationFrame'])\r\n\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\r\n\t\t\telse if (window['webkitRequestAnimationFrame'])\r\n\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\r\n\t\t\telse if (window['oRequestAnimationFrame'])\r\n\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic stop()\r\n\t{\r\n\t\tthis._active = false;\r\n\t}\r\n\r\n\t// Get / Set\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic get active():boolean\r\n\t{\r\n\t\treturn this._active;\r\n\t}\r\n\r\n\t// Private\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _tick():void\r\n\t{\r\n\t\tthis._currentTime = this._getTimer();\r\n\t\tthis._dt = this._currentTime - this._prevTime;\r\n\t\tthis._argsArray[0] = this._dt;\r\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\r\n\r\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\r\n\r\n\t\tthis._prevTime = this._currentTime;\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = RequestAnimationFrame;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\n\r\nclass TextureUtils\r\n{\r\n\tprivate static MAX_SIZE:number = 2048;\r\n\r\n\tpublic static isBitmapDataValid(bitmapData:BitmapData):boolean\r\n\t{\r\n\t\tif (bitmapData == null) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn TextureUtils.isDimensionValid(bitmapData.width) && TextureUtils.isDimensionValid(bitmapData.height);\r\n\r\n\t}\r\n\r\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\r\n\t{\r\n\t\tif (image == null)\r\n\t\t\treturn true;\r\n\r\n\t\treturn TextureUtils.isDimensionValid(image.width) && TextureUtils.isDimensionValid(image.height);\r\n\r\n\t}\r\n\r\n\tpublic static isDimensionValid(d:number):boolean\r\n\t{\r\n\r\n\t\treturn d >= 1 && d <= TextureUtils.MAX_SIZE && TextureUtils.isPowerOfTwo(d);\r\n\r\n\t}\r\n\r\n\tpublic static isPowerOfTwo(value:number):boolean\r\n\t{\r\n\r\n\t\treturn value? ( ( value & -value ) == value ) : false;\r\n\r\n\t}\r\n\r\n\tpublic static getBestPowerOf2(value:number):number\r\n\t{\r\n\t\tvar p:number = 1;\r\n\r\n\t\twhile (p < value)\r\n\t\t\tp <<= 1;\r\n\r\n\t\tif (p > TextureUtils.MAX_SIZE)\r\n\t\t\tp = TextureUtils.MAX_SIZE;\r\n\r\n\t\treturn p;\r\n\t}\r\n}\r\n\r\nexport = TextureUtils",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\r\n\r\nclass Timer extends EventDispatcher\r\n{\r\n\r\n\tprivate _delay:number;\r\n\tprivate _repeatCount:number = 0;\r\n\tprivate _currentCount:number = 0;\r\n\tprivate _iid:number;\r\n\tprivate _running:boolean = false;\r\n\r\n\tconstructor(delay:number, repeatCount:number = 0)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\r\n\t\tthis._delay = delay;\r\n\t\tthis._repeatCount = repeatCount;\r\n\r\n\t\tif (isNaN(delay) || delay < 0) {\r\n\t\t\tthrow new Error(\"Delay is negative or not a number\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic get currentCount():number\r\n\t{\r\n\r\n\t\treturn this._currentCount;\r\n\r\n\t}\r\n\r\n\tpublic get delay():number\r\n\t{\r\n\r\n\t\treturn this._delay;\r\n\r\n\t}\r\n\r\n\tpublic set delay(value:number)\r\n\t{\r\n\r\n\t\tthis._delay = value;\r\n\r\n\t\tif (this._running) {\r\n\t\t\tthis.stop();\r\n\t\t\tthis.start();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic get repeatCount():number\r\n\t{\r\n\r\n\t\treturn this._repeatCount;\r\n\t}\r\n\r\n\tpublic set repeatCount(value:number)\r\n\t{\r\n\r\n\t\tthis._repeatCount = value;\r\n\t}\r\n\r\n\tpublic reset():void\r\n\t{\r\n\r\n\t\tif (this._running) {\r\n\t\t\tthis.stop();\r\n\t\t}\r\n\r\n\t\tthis._currentCount = 0;\r\n\r\n\t}\r\n\r\n\tpublic get running():boolean\r\n\t{\r\n\r\n\t\treturn this._running;\r\n\r\n\t}\r\n\r\n\tpublic start():void\r\n\t{\r\n\r\n\t\tthis._running = true;\r\n\t\tclearInterval(this._iid);\r\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\r\n\r\n\t}\r\n\r\n\tpublic stop():void\r\n\t{\r\n\r\n\t\tthis._running = false;\r\n\t\tclearInterval(this._iid);\r\n\r\n\t}\r\n\r\n\tprivate tick():void\r\n\t{\r\n\r\n\t\tthis._currentCount++;\r\n\r\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\r\n\r\n\t\t\tthis.stop();\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\nexport = Timer;",
    "/**\r\n *\r\n *\r\n * @returns {number}\r\n */\r\nfunction getTimer():number\r\n{\r\n\t// number milliseconds of 1970/01/01\r\n\t// this different to AS3 implementation which gets the number of milliseconds\r\n\t// since instance of Flash player was initialised\r\n\treturn Date.now();\r\n}\r\n\r\nexport = getTimer;"
  ],
  "sourceRoot": ""
}