{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-core.js",
    "awayjs-core/lib/attributes/AttributesBuffer.ts",
    "awayjs-core/lib/attributes/AttributesView.ts",
    "awayjs-core/lib/attributes/Byte4Attributes.ts",
    "awayjs-core/lib/attributes/Float1Attributes.ts",
    "awayjs-core/lib/attributes/Float2Attributes.ts",
    "awayjs-core/lib/attributes/Float3Attributes.ts",
    "awayjs-core/lib/attributes/Float4Attributes.ts",
    "awayjs-core/lib/attributes/Short2Attributes.ts",
    "awayjs-core/lib/attributes/Short3Attributes.ts",
    "awayjs-core/lib/data/BitmapImage2D.ts",
    "awayjs-core/lib/data/BitmapImageChannel.ts",
    "awayjs-core/lib/data/BitmapImageCube.ts",
    "awayjs-core/lib/data/BlendMode.ts",
    "awayjs-core/lib/data/Image2D.ts",
    "awayjs-core/lib/data/ImageBase.ts",
    "awayjs-core/lib/data/ImageCube.ts",
    "awayjs-core/lib/data/Sampler2D.ts",
    "awayjs-core/lib/data/SamplerBase.ts",
    "awayjs-core/lib/data/SamplerCube.ts",
    "awayjs-core/lib/data/SpecularImage2D.ts",
    "awayjs-core/lib/data/WaveAudio.ts",
    "awayjs-core/lib/errors/AbstractMethodError.ts",
    "awayjs-core/lib/errors/ArgumentError.ts",
    "awayjs-core/lib/errors/DocumentError.ts",
    "awayjs-core/lib/errors/Error.ts",
    "awayjs-core/lib/errors/PartialImplementationError.ts",
    "awayjs-core/lib/errors/RangeError.ts",
    "awayjs-core/lib/events/AssetEvent.ts",
    "awayjs-core/lib/events/EventDispatcher.ts",
    "awayjs-core/lib/events/Event.ts",
    "awayjs-core/lib/events/HTTPStatusEvent.ts",
    "awayjs-core/lib/events/IOErrorEvent.ts",
    "awayjs-core/lib/events/LoaderEvent.ts",
    "awayjs-core/lib/events/ParserEvent.ts",
    "awayjs-core/lib/events/ProgressEvent.ts",
    "awayjs-core/lib/events/ProjectionEvent.ts",
    "awayjs-core/lib/events/TimerEvent.ts",
    "awayjs-core/lib/geom/Box.ts",
    "awayjs-core/lib/geom/ColorTransform.ts",
    "awayjs-core/lib/geom/MathConsts.ts",
    "awayjs-core/lib/geom/Matrix3DUtils.ts",
    "awayjs-core/lib/geom/Matrix3D.ts",
    "awayjs-core/lib/geom/Matrix.ts",
    "awayjs-core/lib/geom/Orientation3D.ts",
    "awayjs-core/lib/geom/PerspectiveProjection.ts",
    "awayjs-core/lib/geom/Plane3D.ts",
    "awayjs-core/lib/geom/PlaneClassification.ts",
    "awayjs-core/lib/geom/Point.ts",
    "awayjs-core/lib/geom/PoissonLookup.ts",
    "awayjs-core/lib/geom/Quaternion.ts",
    "awayjs-core/lib/geom/Rectangle.ts",
    "awayjs-core/lib/geom/Sphere.ts",
    "awayjs-core/lib/geom/UVTransform.ts",
    "awayjs-core/lib/geom/Vector3D.ts",
    "awayjs-core/lib/library/AssetBase.ts",
    "awayjs-core/lib/library/AssetLibraryBundle.ts",
    "awayjs-core/lib/library/AssetLibraryIterator.ts",
    "awayjs-core/lib/library/AssetLibrary.ts",
    "awayjs-core/lib/library/ConflictPrecedence.ts",
    "awayjs-core/lib/library/ConflictStrategyBase.ts",
    "awayjs-core/lib/library/ConflictStrategy.ts",
    "awayjs-core/lib/library/ErrorConflictStrategy.ts",
    "awayjs-core/lib/library/IDUtil.ts",
    "awayjs-core/lib/library/IgnoreConflictStrategy.ts",
    "awayjs-core/lib/library/LoaderContext.ts",
    "awayjs-core/lib/library/LoaderSession.ts",
    "awayjs-core/lib/library/NumSuffixConflictStrategy.ts",
    "awayjs-core/lib/net/CrossDomainPolicy.ts",
    "awayjs-core/lib/net/URLLoaderDataFormat.ts",
    "awayjs-core/lib/net/URLLoader.ts",
    "awayjs-core/lib/net/URLRequestMethod.ts",
    "awayjs-core/lib/net/URLRequest.ts",
    "awayjs-core/lib/net/URLVariables.ts",
    "awayjs-core/lib/parsers/Image2DParser.ts",
    "awayjs-core/lib/parsers/ImageCubeParser.ts",
    "awayjs-core/lib/parsers/ParserBase.ts",
    "awayjs-core/lib/parsers/ParserDataFormat.ts",
    "awayjs-core/lib/parsers/ParserUtils.ts",
    "awayjs-core/lib/parsers/ResourceDependency.ts",
    "awayjs-core/lib/parsers/TextureAtlasParser.ts",
    "awayjs-core/lib/parsers/WaveAudioParser.ts",
    "awayjs-core/lib/projections/CoordinateSystem.ts",
    "awayjs-core/lib/projections/FreeMatrixProjection.ts",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection.ts",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection.ts",
    "awayjs-core/lib/projections/OrthographicProjection.ts",
    "awayjs-core/lib/projections/PerspectiveProjection.ts",
    "awayjs-core/lib/projections/ProjectionBase.ts",
    "awayjs-core/lib/ui/Keyboard.ts",
    "awayjs-core/lib/utils/BitmapImageUtils.ts",
    "awayjs-core/lib/utils/ByteArrayBase.ts",
    "awayjs-core/lib/utils/ByteArrayBuffer.ts",
    "awayjs-core/lib/utils/ByteArray.ts",
    "awayjs-core/lib/utils/CSS.ts",
    "awayjs-core/lib/utils/ColorUtils.ts",
    "awayjs-core/lib/utils/Debug.ts",
    "awayjs-core/lib/utils/ImageUtils.ts",
    "awayjs-core/lib/utils/MipmapGenerator.ts",
    "awayjs-core/lib/utils/RequestAnimationFrame.ts",
    "awayjs-core/lib/utils/Timer.ts",
    "awayjs-core/lib/utils/XmlUtils.ts",
    "awayjs-core/lib/utils/getTimer.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AttributesBuffer",
    "_super",
    "stride",
    "count",
    "_attributesBufferVO",
    "Array",
    "_count",
    "_stride",
    "_newStride",
    "_viewVOs",
    "_buffer",
    "ArrayBuffer",
    "_bufferView",
    "Uint8Array",
    "byteLength",
    "Object",
    "defineProperty",
    "get",
    "assetType",
    "enumerable",
    "configurable",
    "_lengthDirty",
    "_updateLength",
    "set",
    "value",
    "invalidateLength",
    "_contentDirty",
    "buffer",
    "invalidateContent",
    "len",
    "invalidate",
    "dispose",
    "clone",
    "attributesBuffer",
    "bufferView",
    "view",
    "_internalClone",
    "getView",
    "index",
    "_setAttributes",
    "viewIndex",
    "arrayBufferView",
    "offset",
    "array",
    "viewVO",
    "vLength",
    "vOffset",
    "vCount",
    "subarray",
    "_getLocalArrayBuffer",
    "localBuffer",
    "localBufferView",
    "_iAddAttributesBufferVO",
    "AttributesBufferVO",
    "push",
    "_iRemoveAttributesBufferVO",
    "splice",
    "indexOf",
    "_addView",
    "ViewVO",
    "_index",
    "_removeView",
    "_getOffset",
    "j",
    "newLength",
    "newBuffer",
    "newView",
    "vOldOffset",
    "oldOffset",
    "Math",
    "min",
    "size",
    "dimensions",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-core/lib/attributes/AttributesView",
    "AttributesView",
    "arrayClass",
    "attributesBufferCount",
    "_arrayClass",
    "_size",
    "BYTES_PER_ELEMENT",
    "_dimensions",
    "_attributesBuffer",
    "values",
    "_localArrayBuffer",
    "_cloneCache",
    "cloneCache",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "Byte4Attributes",
    "attributesBufferLength",
    "unsigned",
    "Int8Array",
    "awayjs-core/lib/attributes/Float1Attributes",
    "Float1Attributes",
    "Float32Array",
    "awayjs-core/lib/attributes/Float2Attributes",
    "Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "Float3Attributes",
    "awayjs-core/lib/attributes/Float4Attributes",
    "Float4Attributes",
    "awayjs-core/lib/attributes/Short2Attributes",
    "Short2Attributes",
    "Uint16Array",
    "Int16Array",
    "awayjs-core/lib/attributes/Short3Attributes",
    "Short3Attributes",
    "awayjs-core/lib/data/BitmapImage2D",
    "Image2D",
    "ColorUtils",
    "BitmapImageUtils",
    "BitmapImage2D",
    "width",
    "height",
    "transparent",
    "fillColor",
    "powerOfTwo",
    "_locked",
    "_transparent",
    "_imageCanvas",
    "document",
    "createElement",
    "_context",
    "getContext",
    "fillRect",
    "_rect",
    "draw",
    "colorTransform",
    "rect",
    "_imageData",
    "getImageData",
    "data",
    "x",
    "y",
    "redMultiplier",
    "redOffset",
    "greenMultiplier",
    "greenOffset",
    "blueMultiplier",
    "blueOffset",
    "alphaMultiplier",
    "alphaOffset",
    "putImageData",
    "copyChannel",
    "sourceBitmap",
    "sourceRect",
    "destPoint",
    "sourceChannel",
    "destChannel",
    "imageData",
    "sourceData",
    "destData",
    "sourceOffset",
    "round",
    "log",
    "destOffset",
    "sourceIndex",
    "destIndex",
    "copyPixels",
    "source",
    "destRect",
    "getCanvas",
    "_copyPixels",
    "matrix",
    "blendMode",
    "clipRect",
    "smoothing",
    "_draw",
    "color",
    "_fillRect",
    "getPixel",
    "g",
    "pixelData",
    "getPixel32",
    "lock",
    "setArray",
    "inputArray",
    "argb",
    "float32ColorToARGB",
    "setPixel",
    "setPixel32",
    "setPixels",
    "inputByteArray",
    "position",
    "readUnsignedInt",
    "unlock",
    "_setSize",
    "awayjs-core/lib/data/Image2D",
    "awayjs-core/lib/utils/BitmapImageUtils",
    "awayjs-core/lib/utils/ColorUtils",
    "awayjs-core/lib/data/BitmapImageChannel",
    "BitmapImageChannel",
    "ALPHA",
    "BLUE",
    "GREEN",
    "RED",
    "awayjs-core/lib/data/BitmapImageCube",
    "ImageCube",
    "Rectangle",
    "BitmapImageCube",
    "side",
    "posX",
    "negX",
    "posY",
    "negY",
    "posZ",
    "negZ",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/data/BlendMode",
    "BlendMode",
    "ADD",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "NORMAL",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "SUBTRACT",
    "ImageBase",
    "ImageUtils",
    "_powerOfTwo",
    "_testDimensions",
    "invalidateSize",
    "isDimensionValid",
    "awayjs-core/lib/data/ImageBase",
    "awayjs-core/lib/utils/ImageUtils",
    "_imageObject",
    "_iAddImageObject",
    "ImageObject",
    "_iRemoveImageObject",
    "awayjs-core/lib/data/Sampler2D",
    "SamplerBase",
    "Sampler2D",
    "image2D",
    "repeat",
    "smooth",
    "mipmap",
    "_offsetX",
    "_offsetY",
    "_scaleX",
    "_scaleY",
    "_updateRect",
    "_repeat",
    "_imageRect",
    "_frameRect",
    "awayjs-core/lib/data/SamplerBase",
    "_pFormat",
    "_smooth",
    "_mipmap",
    "awayjs-core/lib/data/SamplerCube",
    "SamplerCube",
    "imageCube",
    "awayjs-core/lib/data/SpecularImage2D",
    "Point",
    "SpecularImage2D",
    "specularSource",
    "glossSource",
    "_specularSource",
    "_glossSource",
    "_output",
    "_testSize",
    "origin",
    "w",
    "h",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/data/WaveAudio",
    "Event",
    "WaveAudio",
    "audioCtx",
    "_this",
    "_volume",
    "_startTime",
    "_currentTime",
    "_duration",
    "_audioCtx",
    "_gainNode",
    "createGain",
    "gain",
    "connect",
    "destination",
    "_onEndedDelegate",
    "event",
    "onEnded",
    "_source",
    "loop",
    "_loop",
    "_isPlaying",
    "currentTime",
    "createBufferSource",
    "disconnect",
    "start",
    "stop",
    "play",
    "_createSource",
    "_disposeSource",
    "onLoadComplete",
    "duration",
    "onended",
    "onError",
    "decodeAudioData",
    "dispatchEvent",
    "awayjs-core/lib/events/Event",
    "awayjs-core/lib/errors/AbstractMethodError",
    "AbstractMethodError",
    "message",
    "id",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/ArgumentError",
    "ArgumentError",
    "awayjs-core/lib/errors/DocumentError",
    "DocumentError",
    "DOCUMENT_DOES_NOT_EXIST",
    "_name",
    "_errorID",
    "_messsage",
    "name",
    "awayjs-core/lib/errors/PartialImplementationError",
    "PartialImplementationError",
    "dependency",
    "awayjs-core/lib/errors/RangeError",
    "RangeError",
    "awayjs-core/lib/events/AssetEvent",
    "AssetEvent",
    "type",
    "asset",
    "prevName",
    "_asset",
    "_prevName",
    "assetPrevName",
    "ASSET_COMPLETE",
    "ASSET_RENAME",
    "ASSET_CONFLICT_RESOLVED",
    "TEXTURE_SIZE_ERROR",
    "awayjs-core/lib/events/EventDispatcher",
    "EventDispatcher",
    "target",
    "listeners",
    "addEventListener",
    "listener",
    "undefined",
    "getEventListenerIndex",
    "removeEventListener",
    "listenerArray",
    "hasEventListener",
    "COMPLETE",
    "OPEN",
    "ENTER_FRAME",
    "EXIT_FRAME",
    "RESIZE",
    "ERROR",
    "CHANGE",
    "awayjs-core/lib/events/HTTPStatusEvent",
    "HTTPStatusEvent",
    "status",
    "HTTP_STATUS",
    "awayjs-core/lib/events/IEventDispatcher",
    "awayjs-core/lib/events/IOErrorEvent",
    "IOErrorEvent",
    "IO_ERROR",
    "awayjs-core/lib/events/LoaderEvent",
    "LoaderEvent",
    "url",
    "content",
    "assets",
    "_url",
    "_content",
    "_assets",
    "RESOURCE_COMPLETE",
    "awayjs-core/lib/events/ParserEvent",
    "ParserEvent",
    "_message",
    "PARSE_COMPLETE",
    "PARSE_ERROR",
    "READY_FOR_DEPENDENCIES",
    "awayjs-core/lib/events/ProgressEvent",
    "ProgressEvent",
    "PROGRESS",
    "awayjs-core/lib/events/ProjectionEvent",
    "ProjectionEvent",
    "projection",
    "_projection",
    "MATRIX_CHANGED",
    "awayjs-core/lib/events/TimerEvent",
    "TimerEvent",
    "TIMER",
    "TIMER_COMPLETE",
    "awayjs-core/lib/geom/Box",
    "Vector3D",
    "Box",
    "z",
    "depth",
    "val",
    "_bottomRightBack",
    "_topLeftFront",
    "contains",
    "containsPoint",
    "containsBox",
    "box",
    "copyFrom",
    "sourceBox",
    "equals",
    "toCompare",
    "inflate",
    "dx",
    "dy",
    "dz",
    "inflatePoint",
    "delta",
    "intersection",
    "toIntersect",
    "intersects",
    "rayIntersection",
    "direction",
    "targetNormal",
    "halfExtentsX",
    "halfExtentsY",
    "halfExtentsZ",
    "centerX",
    "centerY",
    "centerZ",
    "px",
    "py",
    "pz",
    "vx",
    "vy",
    "vz",
    "ix",
    "iy",
    "iz",
    "rayEntryDistance",
    "closestPointToPoint",
    "point",
    "isEmpty",
    "offsetPosition",
    "setEmpty",
    "setTo",
    "xa",
    "ya",
    "za",
    "widtha",
    "heighta",
    "deptha",
    "toString",
    "union",
    "toUnion",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/geom/ColorTransform",
    "ColorTransform",
    "clear",
    "copyTo",
    "prepend",
    "ct",
    "awayjs-core/lib/geom/MathConsts",
    "MathConsts",
    "RADIANS_TO_DEGREES",
    "PI",
    "DEGREES_TO_RADIANS",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "Matrix3D",
    "Matrix3DUtils",
    "quaternion2matrix",
    "quarternion",
    "m",
    "xx",
    "xy",
    "xz",
    "xw",
    "yy",
    "yz",
    "yw",
    "zz",
    "zw",
    "raw",
    "RAW_DATA_CONTAINER",
    "copyRawDataFrom",
    "getForward",
    "v",
    "copyColumnTo",
    "normalize",
    "getUp",
    "getRight",
    "compare",
    "m1",
    "m2",
    "r1",
    "r2",
    "rawData",
    "copyRawDataTo",
    "lookAt",
    "pos",
    "dir",
    "up",
    "dirN",
    "upN",
    "lftN",
    "crossProduct",
    "dotProduct",
    "reflection",
    "plane",
    "c",
    "ab2",
    "ac2",
    "bc2",
    "transformVector",
    "vector",
    "result",
    "k",
    "deltaTransformVector",
    "getTranslation",
    "transform",
    "deltaTransformVectors",
    "vin",
    "vout",
    "outIndex",
    "CALCULATION_MATRIX",
    "awayjs-core/lib/geom/Matrix3D",
    "Orientation3D",
    "identity",
    "append",
    "lhs",
    "lrd",
    "m111",
    "m112",
    "m113",
    "m114",
    "m121",
    "m122",
    "m123",
    "m124",
    "m131",
    "m132",
    "m133",
    "m134",
    "m141",
    "m142",
    "m143",
    "m144",
    "m211",
    "m212",
    "m213",
    "m214",
    "m221",
    "m222",
    "m223",
    "m224",
    "m231",
    "m232",
    "m233",
    "m234",
    "m241",
    "m242",
    "m243",
    "m244",
    "appendRotation",
    "degrees",
    "axis",
    "getAxisRotation",
    "appendSkew",
    "xSkew",
    "ySkew",
    "zSkew",
    "tempRawData",
    "tempMatrix",
    "appendScale",
    "xScale",
    "yScale",
    "zScale",
    "appendTranslation",
    "copyColumnFrom",
    "column",
    "vector3D",
    "sourceMatrix3D",
    "sourceRaw",
    "transpose",
    "copyRowFrom",
    "row",
    "copyRowTo",
    "copyToMatrix3D",
    "dest",
    "decompose",
    "orientationStyle",
    "q",
    "vec",
    "colX",
    "colY",
    "colZ",
    "scale",
    "skew",
    "scaleBy",
    "combine",
    "rot",
    "AXIS_ANGLE",
    "acos",
    "sqrt",
    "QUATERNION",
    "tr",
    "EULER_ANGLES",
    "asin",
    "atan2",
    "interpolate",
    "thisMat",
    "toMat",
    "percent",
    "interpolateTo",
    "invert",
    "determinant",
    "invertable",
    "abs",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "m41",
    "m42",
    "m43",
    "m44",
    "rhs",
    "prependRotation",
    "prependScale",
    "prependTranslation",
    "recompose",
    "components",
    "angle",
    "rotation",
    "sin",
    "cos",
    "transformBox",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "transformVectors",
    "rad",
    "tmp1",
    "tmp2",
    "toFixed",
    "decimalPlace",
    "magnitude",
    "pow",
    "awayjs-core/lib/geom/Orientation3D",
    "awayjs-core/lib/geom/Matrix",
    "Matrix",
    "tx",
    "ty",
    "concat",
    "a1",
    "c1",
    "tx1",
    "sourceMatrix",
    "createBox",
    "scaleX",
    "scaleY",
    "createGradientBox",
    "deltaTransformPoint",
    "norm",
    "multiply",
    "rotate",
    "sx",
    "sy",
    "transformPoint",
    "translate",
    "awayjs-core/lib/geom/PerspectiveProjection",
    "PerspectiveProjection",
    "toMatrix3D",
    "_matrix3D",
    "awayjs-core/lib/geom/Plane3D",
    "PlaneClassification",
    "Plane3D",
    "_iAlignment",
    "ALIGN_XY_AXIS",
    "ALIGN_YZ_AXIS",
    "ALIGN_XZ_AXIS",
    "ALIGN_ANY",
    "fromPoints",
    "p0",
    "p1",
    "p2",
    "d1x",
    "d1y",
    "d1z",
    "d2x",
    "d2y",
    "d2z",
    "fromNormalAndPoint",
    "normal",
    "distance",
    "classifyPoint",
    "epsilon",
    "FRONT",
    "BACK",
    "INTERSECT",
    "awayjs-core/lib/geom/PlaneClassification",
    "IN",
    "OUT",
    "add",
    "sourcePoint",
    "thickness",
    "invLength",
    "subtract",
    "pt1",
    "pt2",
    "polar",
    "awayjs-core/lib/geom/PoissonLookup",
    "PoissonLookup",
    "initDistributions",
    "_distributions",
    "getDistribution",
    "awayjs-core/lib/geom/Quaternion",
    "Quaternion",
    "qa",
    "qb",
    "w1",
    "x1",
    "y1",
    "z1",
    "w2",
    "x2",
    "y2",
    "z2",
    "multiplyVector",
    "fromAxisAngle",
    "sin_a",
    "cos_a",
    "slerp",
    "dot",
    "s1",
    "s2",
    "lerp",
    "fromEulerAngles",
    "ax",
    "ay",
    "az",
    "halfX",
    "halfY",
    "halfZ",
    "cosX",
    "sinX",
    "cosY",
    "sinY",
    "cosZ",
    "sinZ",
    "toEulerAngles",
    "mag",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "ww",
    "fromMatrix",
    "toRawData",
    "exclude4thRow",
    "rotatePoint",
    "_bottomRight",
    "_topLeft",
    "containsRect",
    "offsetPoint",
    "awayjs-core/lib/geom/Sphere",
    "Sphere",
    "radius",
    "det",
    "sqrtDet",
    "awayjs-core/lib/geom/UVTransform",
    "UVTransform",
    "_uvMatrix",
    "_rotation",
    "_scaleU",
    "_scaleV",
    "_offsetU",
    "_offsetV",
    "_uvMatrixDirty",
    "updateUVMatrix",
    "lengthSquared",
    "angleBetween",
    "ascl",
    "bscl",
    "src",
    "decrementBy",
    "allFour",
    "incrementBy",
    "nearEquals",
    "tolerance",
    "negate",
    "project",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "_id",
    "ID_COUNT",
    "_originalName",
    "updateFullPath",
    "prev",
    "_namespace",
    "_full_path",
    "assetPathEquals",
    "ns",
    "isAsset",
    "assetClass",
    "resetAssetPath",
    "overrideOriginal",
    "DEFAULT_NAMESPACE",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "AssetLibraryIterator",
    "LoaderSession",
    "ConflictPrecedence",
    "ConflictStrategy",
    "AssetLibraryBundle",
    "_loaderSessionsGarbage",
    "_assetDictionary",
    "_loaderSessions",
    "conflictStrategy",
    "IGNORE",
    "create",
    "conflictPrecedence",
    "FAVOR_NEW",
    "_onAssetRenameDelegate",
    "onAssetRename",
    "_onAssetConflictResolvedDelegate",
    "onAssetConflictResolved",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "getInstance",
    "key",
    "_iInstances",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "_strategy",
    "_strategyPreference",
    "createIterator",
    "assetTypeFilter",
    "namespaceFilter",
    "filterFunc",
    "load",
    "req",
    "context",
    "parser",
    "getLoaderSession",
    "loadData",
    "loader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "disposeLoaderSession",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "getAsset",
    "_assetDictDirty",
    "rehashAssetDict",
    "getAllAssets",
    "addAsset",
    "old",
    "assetNamespace",
    "resolveConflict",
    "removeAsset",
    "idx",
    "removeAssetFromDict",
    "removeAssetByName",
    "removeAllAssets",
    "removeNamespaceAssets",
    "old_assets",
    "autoRemoveEmptyNamespace",
    "empty",
    "stopAllLoaderSessions",
    "killloaderSession",
    "pop",
    "clearTimeout",
    "dict",
    "awayjs-core/lib/library/AssetLibraryIterator",
    "awayjs-core/lib/library/ConflictPrecedence",
    "awayjs-core/lib/library/ConflictStrategy",
    "awayjs-core/lib/library/LoaderSession",
    "filter",
    "_idx",
    "_filtered",
    "next",
    "reset",
    "setIndex",
    "awayjs-core/lib/library/AssetLibrary",
    "AssetLibrary",
    "getBundle",
    "stopLoad",
    "FAVOR_OLD",
    "awayjs-core/lib/library/ConflictStrategyBase",
    "ConflictStrategyBase",
    "changedAsset",
    "oldAsset",
    "assetsDictionary",
    "precedence",
    "_pUpdateNames",
    "nonConflictingName",
    "newAsset",
    "loser_prev_name",
    "winner",
    "loser",
    "ErrorConflictStrategy",
    "IgnoreConflictStrategy",
    "NumSuffixConflictStrategy",
    "include",
    "APPEND_NUM_SUFFIX",
    "THROW_ERROR",
    "awayjs-core/lib/library/ErrorConflictStrategy",
    "awayjs-core/lib/library/IgnoreConflictStrategy",
    "awayjs-core/lib/library/NumSuffixConflictStrategy",
    "assetFullPath",
    "awayjs-core/lib/library/IAssetClass",
    "awayjs-core/lib/library/IAsset",
    "awayjs-core/lib/library/IDUtil",
    "IDUtil",
    "createUID",
    "uid",
    "ALPHA_CHAR_CODES",
    "floor",
    "random",
    "time",
    "Date",
    "getTime",
    "timeString",
    "toUpperCase",
    "substr",
    "charCodeAt",
    "String",
    "fromCharCode",
    "apply",
    "awayjs-core/lib/library/IWrapperClass",
    "awayjs-core/lib/library/LoaderContext",
    "LoaderContext",
    "includeDependencies",
    "dependencyBaseUrl",
    "_includeDependencies",
    "_dependencyBaseUrl",
    "_embeddedDataByUrl",
    "_remappedUrls",
    "_materialMode",
    "UNDEFINED",
    "materialMode",
    "_overrideAbsPath",
    "_overrideFullUrls",
    "mapUrl",
    "originalUrl",
    "newUrl",
    "mapUrlToData",
    "_iHasDataForUrl",
    "_iGetDataForUrl",
    "_iHasMappingForUrl",
    "_iGetRemappedUrl",
    "SINGLEPASS_MATERIALS",
    "MULTIPASS_MATERIALS",
    "URLLoader",
    "URLLoaderDataFormat",
    "Image2DParser",
    "ImageCubeParser",
    "TextureAtlasParser",
    "ResourceDependency",
    "WaveAudioParser",
    "_stack",
    "_errorHandlers",
    "_parseErrorHandlers",
    "_onReadyForDependenciesDelegate",
    "onReadyForDependencies",
    "_onParseCompleteDelegate",
    "onParseComplete",
    "_onLoadCompleteDelegate",
    "_parsers",
    "parsers",
    "_baseDependency",
    "_uri",
    "replace",
    "retrieveDependency",
    "retrieveNext",
    "_currentDependency",
    "dependencies",
    "parsingPaused",
    "_iResumeParsing",
    "_iSuccess",
    "resolve",
    "_iLoader",
    "addEventListeners",
    "request",
    "Function",
    "_iSetData",
    "retrieveAsRawData",
    "parseDependency",
    "resolveDependencyUrl",
    "dataFormat",
    "BINARY",
    "_iSetParser",
    "getParserFromSuffix",
    "joinUrl",
    "base",
    "end",
    "charAt",
    "scheme_re",
    "RegExp",
    "overrideAbsolutePaths",
    "test",
    "overrideFullURLs",
    "noscheme_url",
    "substring",
    "lastIndexOf",
    "retrieveParserDependencies",
    "parserDependancies",
    "resolveParserDependencies",
    "handled",
    "isDependency",
    "removeEventListeners",
    "resolveFailure",
    "suppresAssetEvents",
    "resolveName",
    "handler",
    "getParserFromData",
    "supportsData",
    "_iFileName",
    "parseAsync",
    "split",
    "fileExtension",
    "toLowerCase",
    "supportsType",
    "awayjs-core/lib/net/URLLoader",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/parsers/Image2DParser",
    "awayjs-core/lib/parsers/ImageCubeParser",
    "awayjs-core/lib/parsers/ResourceDependency",
    "awayjs-core/lib/parsers/TextureAtlasParser",
    "awayjs-core/lib/parsers/WaveAudioParser",
    "separator",
    "_separator",
    "_next_suffix",
    "orig",
    "new_name",
    "suffix",
    "parseInt",
    "isNaN",
    "awayjs-core/lib/net/CrossDomainPolicy",
    "CrossDomainPolicy",
    "ANONYMOUS",
    "USE_CREDENTIALS",
    "TEXT",
    "VARIABLES",
    "BLOB",
    "ARRAY_BUFFER",
    "URLRequestMethod",
    "URLVariables",
    "AwayEvent",
    "AwayProgressEvent",
    "_bytesLoaded",
    "_bytesTotal",
    "_dataFormat",
    "_loadError",
    "_request",
    "_data",
    "format",
    "initXHR",
    "method",
    "POST",
    "postRequest",
    "getRequest",
    "close",
    "_XHR",
    "abort",
    "disposeXHR",
    "setResponseType",
    "xhr",
    "responseType",
    "open",
    "async",
    "send",
    "handleXmlHttpRequestException",
    "urlVars",
    "formData",
    "error",
    "XMLHttpRequest",
    "onloadstart",
    "onLoadStart",
    "onprogress",
    "onProgress",
    "onabort",
    "onAbort",
    "onerror",
    "onload",
    "ontimeout",
    "onTimeOut",
    "onloadend",
    "onLoadEnd",
    "onreadystatechange",
    "onReadyStateChange",
    "decodeURLVariables",
    "join",
    "tokens",
    "re",
    "exec",
    "decodeURIComponent",
    "readyState",
    "_loadErrorEvent",
    "_progressEvent",
    "bytesTotal",
    "total",
    "bytesLoaded",
    "loaded",
    "_loadStartEvent",
    "responseText",
    "response",
    "_loadCompleteEvent",
    "awayjs-core/lib/net/URLRequestMethod",
    "awayjs-core/lib/net/URLVariables",
    "GET",
    "awayjs-core/lib/net/URLRequest",
    "URLRequest",
    "_variables",
    "decode",
    "obj",
    "fd",
    "FormData",
    "ParserBase",
    "ParserUtils",
    "ByteArray",
    "extension",
    "HTMLImageElement",
    "ba",
    "readUnsignedShort",
    "readShort",
    "readUTFBytes",
    "readByte",
    "_pProceedParsing",
    "sizeError",
    "_loadingImage",
    "MORE_TO_PARSE",
    "_htmlImageElement",
    "isHTMLImageElementValid",
    "imageToBitmapImage2D",
    "_pFinalizeAsset",
    "htmlImageElement",
    "byteArrayToImage",
    "arrayBufferToImage",
    "Blob",
    "blobToImage",
    "_pContent",
    "PARSING_DONE",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-core/lib/utils/ByteArray",
    "JSON",
    "parse",
    "_iResolveDependency",
    "resourceDependency",
    "_iResolveDependencyFailure",
    "_imgDependencyDictionary",
    "_getBitmapImage2D",
    "json",
    "rec",
    "_pDieWithError",
    "_pAddDependency",
    "image",
    "_validateCubeData",
    "_pPauseAndRetrieveDependencies",
    "Timer",
    "getTimer",
    "_dependencies",
    "_pOnIntervalDelegate",
    "_pOnInterval",
    "isBitmapImage2DValid",
    "bitmapImage2D",
    "isValid",
    "isImage2DValid",
    "console",
    "_parsingFailure",
    "_parsingPaused",
    "_parsingComplete",
    "newMaterialMode",
    "frameLimit",
    "_pStartParsing",
    "_iResolveDependencyName",
    "_timer",
    "_isParsing",
    "type_event",
    "type_name",
    "suppressErrorEvents",
    "sub_id",
    "_pPauseParsing",
    "_pHasTime",
    "_lastFrameTime",
    "_frameLimit",
    "_pFinishParsing",
    "_pGetTextData",
    "_pGetByteData",
    "toByteArray",
    "awayjs-core/lib/utils/Timer",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-core/lib/parsers/ParserDataFormat",
    "ParserDataFormat",
    "PLAIN_TEXT",
    "IMAGE",
    "arrayBufferToBase64",
    "mimeType",
    "byteStr",
    "bytes",
    "base64Image",
    "window",
    "btoa",
    "arrayBufferToAudio",
    "fileType",
    "str",
    "audio",
    "Audio",
    "img",
    "Image",
    "arraybytes",
    "byteArrayToAudio",
    "filetype",
    "URLObj",
    "createObjectURL",
    "blobToAudio",
    "bitmapData",
    "setArrayBuffer",
    "getBytesAvailable",
    "parentParser",
    "suppressAssetEvents",
    "_sub_id",
    "_parser",
    "_parentParser",
    "_retrieveAsRawData",
    "_suppressAssetEvents",
    "XmlUtils",
    "_parseState",
    "TextureAtlasParserState",
    "PARSE_SUBTEXTURES",
    "nodes",
    "PARSE_XML",
    "_doc",
    "getChildrenWithTag",
    "strToXml",
    "_imagePath",
    "readAttributeValue",
    "_subTextureNodes",
    "PARSE_IMAGE",
    "bitmap",
    "element",
    "imageRect",
    "frameRect",
    "awayjs-core/lib/utils/XmlUtils",
    "getAudioContext",
    "sampleRate",
    "parseFileType",
    "_noAudio",
    "awayjs-core/lib/pool/IImageObject",
    "awayjs-core/lib/projections/CoordinateSystem",
    "CoordinateSystem",
    "LEFT_HANDED",
    "RIGHT_HANDED",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ProjectionBase",
    "FreeMatrixProjection",
    "_pMatrix",
    "_pNear",
    "_pFar",
    "_pAspectRatio",
    "pInvalidateMatrix",
    "pUpdateMatrix",
    "_pMatrixInvalid",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-core/lib/projections/ProjectionBase",
    "awayjs-core/lib/projections/IProjection",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection",
    "ObliqueNearPlaneProjection",
    "baseProjection",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_baseProjection",
    "frustumCorners",
    "near",
    "far",
    "_iAspectRatio",
    "_plane",
    "cx",
    "cy",
    "cz",
    "cw",
    "signX",
    "signY",
    "inverse",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "OrthographicOffCenterProjection",
    "_minX",
    "_maxX",
    "_minY",
    "_maxY",
    "unproject",
    "nX",
    "nY",
    "sZ",
    "unprojectionMatrix",
    "_pFrustumCorners",
    "awayjs-core/lib/projections/OrthographicProjection",
    "OrthographicProjection",
    "projectionHeight",
    "_projectionHeight",
    "_yMax",
    "_xMax",
    "left",
    "right",
    "top",
    "bottom",
    "_pScissorRect",
    "_pViewPort",
    "xWidth",
    "yHgt",
    "center",
    "middle",
    "fieldOfView",
    "coordinateSystem",
    "_fieldOfView",
    "_focalLength",
    "_hFieldOfView",
    "_hFocalLength",
    "_preserveAspectRatio",
    "_preserveFocalLength",
    "tan",
    "_pCoordinateSystem",
    "atan",
    "tanMinX",
    "_pOriginX",
    "tanMaxX",
    "tanMinY",
    "_pOriginY",
    "tanMaxY",
    "_unprojectionInvalid",
    "point3d",
    "_unprojection",
    "_iUpdateScissorRect",
    "_iUpdateViewport",
    "awayjs-core/lib/ui/Keyboard",
    "Keyboard",
    "A",
    "ALTERNATE",
    "AUDIO",
    "B",
    "BACKQUOTE",
    "BACKSLASH",
    "BACKSPACE",
    "C",
    "CAPS_LOCK",
    "CHANNEL_DOWN",
    "CHANNEL_UP",
    "COMMA",
    "COMMAND",
    "CONTROL",
    "D",
    "DELETE",
    "DOWN",
    "DVR",
    "E",
    "END",
    "ENTER",
    "EQUAL",
    "ESCAPE",
    "EXIT",
    "F",
    "F1",
    "F10",
    "F11",
    "F12",
    "F13",
    "F14",
    "F15",
    "F2",
    "F3",
    "F4",
    "F5",
    "F6",
    "F7",
    "F8",
    "F9",
    "FAST_FORWARD",
    "G",
    "GUIDE",
    "H",
    "HELP",
    "HOME",
    "I",
    "INFO",
    "INPUT",
    "INSERT",
    "J",
    "K",
    "KEYNAME_BEGIN",
    "KEYNAME_BREAK",
    "KEYNAME_CLEARDISPLAY",
    "KEYNAME_CLEARLINE",
    "KEYNAME_DELETE",
    "KEYNAME_DELETECHAR",
    "KEYNAME_DELETELINE",
    "KEYNAME_DOWNARROW",
    "KEYNAME_END",
    "KEYNAME_EXECUTE",
    "KEYNAME_F1",
    "KEYNAME_F10",
    "KEYNAME_F11",
    "KEYNAME_F12",
    "KEYNAME_F13",
    "KEYNAME_F14",
    "KEYNAME_F15",
    "KEYNAME_F16",
    "KEYNAME_F17",
    "KEYNAME_F18",
    "KEYNAME_F19",
    "KEYNAME_F2",
    "KEYNAME_F20",
    "KEYNAME_F21",
    "KEYNAME_F22",
    "KEYNAME_F23",
    "KEYNAME_F24",
    "KEYNAME_F25",
    "KEYNAME_F26",
    "KEYNAME_F27",
    "KEYNAME_F28",
    "KEYNAME_F29",
    "KEYNAME_F3",
    "KEYNAME_F30",
    "KEYNAME_F31",
    "KEYNAME_F32",
    "KEYNAME_F33",
    "KEYNAME_F34",
    "KEYNAME_F35",
    "KEYNAME_F4",
    "KEYNAME_F5",
    "KEYNAME_F6",
    "KEYNAME_F7",
    "KEYNAME_F8",
    "KEYNAME_F9",
    "KEYNAME_FIND",
    "KEYNAME_HELP",
    "KEYNAME_HOME",
    "KEYNAME_INSERT",
    "KEYNAME_INSERTCHAR",
    "KEYNAME_INSERTLINE",
    "KEYNAME_LEFTARROW",
    "KEYNAME_MENU",
    "KEYNAME_MODESWITCH",
    "KEYNAME_NEXT",
    "KEYNAME_PAGEDOWN",
    "KEYNAME_PAGEUP",
    "KEYNAME_PAUSE",
    "KEYNAME_PREV",
    "KEYNAME_PRINT",
    "KEYNAME_PRINTSCREEN",
    "KEYNAME_REDO",
    "KEYNAME_RESET",
    "KEYNAME_RIGHTARROW",
    "KEYNAME_SCROLLLOCK",
    "KEYNAME_SELECT",
    "KEYNAME_STOP",
    "KEYNAME_SYSREQ",
    "KEYNAME_SYSTEM",
    "KEYNAME_UNDO",
    "KEYNAME_UPARROW",
    "KEYNAME_USER",
    "L",
    "LAST",
    "LEFT",
    "LEFTBRACKET",
    "LIVE",
    "M",
    "MASTER_SHELL",
    "MENU",
    "MINUS",
    "N",
    "NEXT",
    "NUMBER_0",
    "NUMBER_1",
    "NUMBER_2",
    "NUMBER_3",
    "NUMBER_4",
    "NUMBER_5",
    "NUMBER_6",
    "NUMBER_7",
    "NUMBER_8",
    "NUMBER_9",
    "NUMPAD",
    "NUMPAD_0",
    "NUMPAD_1",
    "NUMPAD_2",
    "NUMPAD_3",
    "NUMPAD_4",
    "NUMPAD_5",
    "NUMPAD_6",
    "NUMPAD_7",
    "NUMPAD_8",
    "NUMPAD_9",
    "NUMPAD_ADD",
    "NUMPAD_DECIMAL",
    "NUMPAD_DIVIDE",
    "NUMPAD_ENTER",
    "NUMPAD_MULTIPLY",
    "NUMPAD_SUBTRACT",
    "O",
    "P",
    "PAGE_DOWN",
    "PAGE_UP",
    "PAUSE",
    "PERIOD",
    "PLAY",
    "PREVIOUS",
    "Q",
    "QUOTE",
    "R",
    "RECORD",
    "REWIND",
    "RIGHT",
    "RIGHTBRACKET",
    "S",
    "SEARCH",
    "SEMICOLON",
    "SETUP",
    "SHIFT",
    "SKIP_BACKWARD",
    "SKIP_FORWARD",
    "SLASH",
    "SPACE",
    "STOP",
    "SUBTITLE",
    "T",
    "TAB",
    "U",
    "UP",
    "V",
    "VOD",
    "W",
    "X",
    "Y",
    "YELLOW",
    "Z",
    "clearRect",
    "fillStyle",
    "bmpd",
    "drawImage",
    "save",
    "setTransform",
    "restore",
    "awayjs-core/lib/utils/ByteArrayBase",
    "ByteArrayBase",
    "_mode",
    "writeByte",
    "writeUnsignedByte",
    "readUnsignedByte",
    "writeUnsignedShort",
    "writeUnsignedInt",
    "writeFloat",
    "toFloatBits",
    "readFloat",
    "fromFloatBits",
    "compareEqual",
    "other",
    "co0",
    "c0",
    "writeBase64String",
    "dumpToConsole",
    "oldpos",
    "nstep",
    "asHexString",
    "digits",
    "lut",
    "sh",
    "readBase64String",
    "internalGetBase64String",
    "getUnsignedByteFunc",
    "self",
    "b0",
    "b1",
    "b2",
    "enc1",
    "enc2",
    "enc3",
    "enc4",
    "base64Key",
    "Base64Key",
    "awayjs-core/lib/utils/ByteArrayBuffer",
    "ByteArrayBuffer",
    "_bytes",
    "bi",
    "Number",
    "sign",
    "exponent",
    "mantissa",
    "maxlength",
    "max",
    "unalignedarraybytestemp",
    "ensureWriteableSpace",
    "ensureSpace",
    "aBuffer",
    "inInt8AView",
    "localInt8View",
    "newmaxlength",
    "newarraybuffer",
    "newview",
    "readBytes",
    "byteView",
    "localByteView",
    "view2",
    "view3",
    "DataView",
    "getUint8",
    "c2",
    "c3",
    "readInt",
    "int",
    "getInt32",
    "short",
    "getInt16",
    "readDouble",
    "double",
    "getFloat64",
    "pa",
    "Uint32Array",
    "awayjs-core/lib/utils/CSS",
    "CSS",
    "setElementSize",
    "style",
    "setElementWidth",
    "setElementHeight",
    "setElementX",
    "setElementY",
    "getElementVisibility",
    "visibility",
    "setElementVisibility",
    "visible",
    "setElementAlpha",
    "alpha",
    "HTMLCanvasElement",
    "globalAlpha",
    "setElementPosition",
    "absolute",
    "float32Color",
    "ARGBtoFloat32",
    "componentToHex",
    "hex",
    "RGBToHexString",
    "ARGBToHexString",
    "awayjs-core/lib/utils/Debug",
    "Debug",
    "breakpoint",
    "throwPIROnKeyWordOnly",
    "enable",
    "keyword",
    "throwPIR",
    "clss",
    "fnc",
    "msg",
    "logPIR",
    "THROW_ERRORS",
    "LOG_PI_ERRORS",
    "args",
    "_i",
    "arguments",
    "ENABLE_LOG",
    "awayjs-core/lib/utils/IArrayBufferViewClass",
    "MAX_SIZE",
    "isPowerOfTwo",
    "getBestPowerOf2",
    "awayjs-core/lib/utils/MipmapGenerator",
    "MipmapGenerator",
    "_generateMipMaps",
    "output",
    "_getMipmapHolder",
    "_matrix",
    "mipMapHolder",
    "newW",
    "newH",
    "_freeMipMapHolder",
    "_mipMaps",
    "_mipMapUses",
    "holderWidth",
    "holderHeight",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "RequestAnimationFrame",
    "callback",
    "callbackContext",
    "_active",
    "_argsArray",
    "_getTimer",
    "setCallback",
    "_rafUpdateFunction",
    "_tick",
    "_dt",
    "_callback",
    "_callbackContext",
    "_prevTime",
    "requestAnimationFrame",
    "delay",
    "repeatCount",
    "_repeatCount",
    "_currentCount",
    "_running",
    "_delay",
    "clearInterval",
    "_iid",
    "setInterval",
    "tick",
    "node",
    "tag",
    "fragment",
    "createDocumentFragment",
    "num",
    "childNodes",
    "child",
    "nodeName",
    "appendChild",
    "filterListByParam",
    "paramName",
    "paramValue",
    "attributes",
    "getNamedItem",
    "DOMParser",
    "parseFromString",
    "nodeToString",
    "XMLSerializer",
    "serializeToString",
    "attrName",
    "attrs",
    "attribute",
    "writeAttributeValue",
    "attrValue",
    "Attr",
    "setNamedItem",
    "hasAttribute",
    "now",
    "awayjs-core/lib/vos/IAttributesBufferVO",
    "awayjs-core/lib/vos/IAttributesVO"
  ],
  "mappings": "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",
  "file": "awayjs-core.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAttributesBufferVO\t\t= require(\"awayjs-core/lib/vos/IAttributesBufferVO\");\r\n\r\nclass AttributesBuffer extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[assets AttributesBuffer]\";\r\n\r\n\tprivate _attributesBufferVO:Array<IAttributesBufferVO> = new Array<IAttributesBufferVO>();\r\n\tprivate _count:number = 0;\r\n\tprivate _stride:number = 0;\r\n\tprivate _newStride:number = 0;\r\n\r\n\tprivate _buffer:ArrayBuffer;\r\n\tprivate _bufferView:Uint8Array;\r\n\tprivate _contentDirty:boolean;\r\n\tprivate _lengthDirty:boolean;\r\n\tprivate _viewVOs:Array<ViewVO> = new Array<ViewVO>();\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AttributesBuffer.assetType;\r\n\t}\r\n\r\n\tpublic get stride():number\r\n\t{\r\n\t\tif (this._lengthDirty)\r\n\t\t\tthis._updateLength();\r\n\r\n\t\treturn this._stride;\r\n\t}\r\n\r\n\tpublic set stride(value:number)\r\n\t{\r\n\t\tif (this._newStride == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._newStride = value;\r\n\r\n\t\tthis.invalidateLength();\r\n\t}\r\n\t\r\n\tpublic get count():number\r\n\t{\r\n\t\treturn this._count;\r\n\t}\r\n\t\r\n\tpublic set count(value:number)\r\n\t{\r\n\t\tif (this._count == value)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tthis._count = value;\r\n\t\t\r\n\t\tthis.invalidateLength();\r\n\t}\r\n\r\n\r\n\tpublic get buffer():ArrayBuffer\r\n\t{\r\n\t\tif (this._lengthDirty)\r\n\t\t\tthis._updateLength();\r\n\r\n\t\tthis._contentDirty = false;\r\n\r\n\t\treturn this._buffer;\r\n\t}\r\n\r\n\r\n\tpublic get bufferView():Uint8Array\r\n\t{\r\n\t\tif (this._lengthDirty)\r\n\t\t\tthis._updateLength();\r\n\r\n\t\tthis._contentDirty = false;\r\n\r\n\t\treturn this._bufferView;\r\n\t}\r\n\r\n\tpublic set bufferView(value:Uint8Array)\r\n\t{\r\n\t\tthis._bufferView = value;\r\n\t\tthis._buffer = this._bufferView.buffer;\r\n\t}\r\n\r\n\tpublic get length()\r\n\t{\r\n\t\treturn this._count*this.stride;\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(stride:number = 0, count:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._stride = this._newStride = stride;\r\n\t\tthis._count = count;\r\n\r\n\t\tthis._buffer = new ArrayBuffer(this._stride*this._count);\r\n\t\tthis._bufferView = new Uint8Array(this._buffer, 0, this._buffer.byteLength);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tif (this._contentDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar len:number = this._attributesBufferVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._attributesBufferVO[i].invalidate();\r\n\r\n\t\tthis._contentDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateLength():void\r\n\t{\r\n\t\tif (this._lengthDirty)\r\n\t\t\treturn;\r\n\r\n\t\twhile (this._attributesBufferVO.length)\r\n\t\t\tthis._attributesBufferVO[0].dispose();\r\n\r\n\t\tthis._lengthDirty = true;\r\n\t}\r\n\r\n\tpublic clone():AttributesBuffer\r\n\t{\r\n\t\tvar attributesBuffer:AttributesBuffer = new AttributesBuffer(this._stride, this._count);\r\n\t\tattributesBuffer.bufferView.set(this.bufferView);\r\n\r\n\t\tvar len:number = this._viewVOs.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._viewVOs[i].view._internalClone(attributesBuffer);\r\n\r\n\t\treturn attributesBuffer;\r\n\t}\r\n\r\n\tpublic getView(index:number):AttributesView\r\n\t{\r\n\t\tif (index < this._viewVOs.length)\r\n\t\t\treturn this._viewVOs[index].view;\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._attributesBufferVO.length)\r\n\t\t\tthis._attributesBufferVO[0].dispose();\r\n\t}\r\n\r\n\tpublic _setAttributes(viewIndex:number, arrayBufferView:ArrayBufferView, offset:number = 0)\r\n\t{\r\n\t\tvar array:Uint8Array = (arrayBufferView instanceof Uint8Array)? <Uint8Array> arrayBufferView : new Uint8Array(arrayBufferView.buffer);\r\n\r\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\r\n\t\tvar vLength:number = viewVO.length;\r\n\t\tvar vOffset:number = viewVO.offset;\r\n\t\tvar vCount:number = array.length/vLength;\r\n\r\n\t\t//make sure there is enough space in the buffer\r\n\t\tif (this.count < vCount + offset)\r\n\t\t\tthis.count = vCount + offset;\r\n\r\n\t\tif (this._lengthDirty)\r\n\t\t\tthis._updateLength();\r\n\r\n\t\t//fast path for separate buffers\r\n\t\tif (this._viewVOs.length == 1) {\r\n\t\t\tthis._bufferView.set(array);\r\n\t\t} else {\r\n\t\t\tfor (var i:number = 0; i < vCount; i++)\r\n\t\t\t\tthis._bufferView.set(array.subarray(i*vLength, (i+1)*vLength), (i+offset)*this._stride + vOffset);\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tpublic _getLocalArrayBuffer(viewIndex:number):ArrayBuffer\r\n\t{\r\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\r\n\t\tvar vLength:number = viewVO.length;\r\n\t\tvar vOffset:number = viewVO.offset;\r\n\r\n\t\tif (this._lengthDirty)\r\n\t\t\tthis._updateLength();\r\n\r\n\t\t//fast path for separate buffers\r\n\t\tif (this._viewVOs.length == 1)\r\n\t\t\treturn this._buffer;\r\n\r\n\t\tvar localBuffer:ArrayBuffer = new ArrayBuffer(this._count*vLength);\r\n\t\tvar localBufferView:Uint8Array = new Uint8Array(localBuffer);\r\n\r\n\t\tfor (var i:number = 0; i < this._count; i++)\r\n\t\t\tlocalBufferView.set(this._bufferView.subarray(i*this._stride + vOffset, i*this._stride + vOffset + vLength), i*vLength);\r\n\r\n\t\treturn localBuffer;\r\n\t}\r\n\r\n\tpublic _iAddAttributesBufferVO(AttributesBufferVO:IAttributesBufferVO):IAttributesBufferVO\r\n\t{\r\n\t\tthis._attributesBufferVO.push(AttributesBufferVO);\r\n\r\n\t\treturn AttributesBufferVO;\r\n\t}\r\n\r\n\tpublic _iRemoveAttributesBufferVO(AttributesBufferVO:IAttributesBufferVO):IAttributesBufferVO\r\n\t{\r\n\t\tthis._attributesBufferVO.splice(this._attributesBufferVO.indexOf(AttributesBufferVO), 1);\r\n\r\n\t\treturn AttributesBufferVO;\r\n\t}\r\n\r\n\tpublic _addView(view:AttributesView)\r\n\t{\r\n\t\tvar viewVO:ViewVO = new ViewVO(view);\r\n\t\tvar len:number = this._viewVOs.length;\r\n\r\n\t\tviewVO.offset = len? this._viewVOs[len - 1].offset + this._viewVOs[len - 1].length : 0;\r\n\r\n\t\tthis._viewVOs.push(viewVO);\r\n\r\n\t\tif (this._newStride < viewVO.offset + viewVO.length) {\r\n\t\t\tthis._newStride = viewVO.offset + viewVO.length;\r\n\t\t\tthis.invalidateLength();\r\n\t\t}\r\n\r\n\t\tview._index = len;\r\n\t}\r\n\r\n\tpublic _removeView(view:AttributesView)\r\n\t{\r\n\t\tvar viewIndex:number = view._index;\r\n\t\tvar viewVO:ViewVO = this._viewVOs.splice(viewIndex, 1)[0];\r\n\t\tvar len:number = this._viewVOs.length;\r\n\r\n\t\tviewVO.dispose();\r\n\r\n\t\tfor (var i:number = viewIndex; i < len; i++) {\r\n\t\t\tviewVO = this._viewVOs[i];\r\n\t\t\tviewVO.offset = i? this._viewVOs[i - 1].offset + this._viewVOs[i - 1].length : 0;\r\n\t\t\tviewVO.view._index = i;\r\n\t\t}\r\n\r\n\t\tthis._newStride = viewVO.offset + viewVO.length;\r\n\r\n\t\tthis.invalidateLength();\r\n\t}\r\n\r\n\tpublic _getOffset(viewIndex:number):number\r\n\t{\r\n\t\treturn this._viewVOs[viewIndex].offset;\r\n\t}\r\n\r\n\tpublic _updateLength()\r\n\t{\r\n\t\tthis._lengthDirty = false;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar len:number = this._viewVOs.length;\r\n\r\n\t\tvar newLength:number = this._newStride*this._count;\r\n\r\n\t\tif (!this._buffer || this._buffer.byteLength != newLength) {\r\n\t\t\tvar newBuffer:ArrayBuffer = new ArrayBuffer(newLength);\r\n\t\t\tvar newView:Uint8Array = new Uint8Array(newBuffer, 0, newBuffer.byteLength);\r\n\t\t\tvar viewVO:ViewVO;\r\n\t\t\tvar vLength:number;\r\n\t\t\tvar vOffset:number;\r\n\t\t\tvar vOldOffset:number;\r\n\r\n\t\t\tif (this._stride != this._newStride) {\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tviewVO = this._viewVOs[i];\r\n\t\t\t\t\tvLength = viewVO.length;\r\n\t\t\t\t\tvOffset = viewVO.offset;\r\n\t\t\t\t\tvOldOffset = viewVO.oldOffset;\r\n\t\t\t\t\tfor (j = 0; j < this._count; j++)\r\n\t\t\t\t\t\tif (vOldOffset != null)\r\n\t\t\t\t\t\t\tnewView.set(new Uint8Array(this._buffer, j*this._stride + vOldOffset, vLength), j*this._newStride + vOffset);\r\n\r\n\t\t\t\t\tviewVO.oldOffset = viewVO.offset;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._stride = this._newStride;\r\n\t\t\t} else {\r\n\t\t\t\tnewView.set(new Uint8Array(this._buffer, 0, Math.min(newLength, this._buffer.byteLength))); //TODO: bypass quantisation of bytearray on instantiation\r\n\t\t\t}\r\n\r\n\t\t\tthis._buffer = newBuffer;\r\n\t\t\tthis._bufferView = newView;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ViewVO\r\n{\r\n\tpublic view:AttributesView;\r\n\r\n\tpublic length;\r\n\r\n\tpublic offset;\r\n\r\n\tpublic oldOffset;\r\n\r\n\tconstructor(view:AttributesView)\r\n\t{\r\n\t\tthis.view = view;\r\n\t\tthis.length = view.size*view.dimensions;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.view = null;\r\n\t}\r\n\r\n\tpublic clone():ViewVO\r\n\t{\r\n\t\treturn new ViewVO(this.view);\r\n\t}\r\n}\r\n\r\nexport = AttributesBuffer;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\r\n\r\nclass AttributesView extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[attributes AttributesView]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AttributesView.assetType;\r\n\t}\r\n\r\n\tpublic _cloneCache:AttributesView;\r\n\tpublic _attributesBuffer:AttributesBuffer;\r\n\tpublic _bufferDirty:boolean;\r\n\tprivate _size:number;\r\n\tprivate _dimensions:number;\r\n\r\n\tpublic _index:number;\r\n\tpublic _arrayClass:IArrayBufferViewClass;\r\n\r\n\tpublic _localArrayBuffer:ArrayBuffer;\r\n\r\n\tpublic normalized:boolean;\r\n\r\n\tpublic get buffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._attributesBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get size():number\r\n\t{\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\tpublic set size(value:number)\r\n\t{\r\n\t\tif (this._size == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._size = value;\r\n\r\n\t\tthis._attributesBuffer._removeView(this);\r\n\t\tthis._attributesBuffer._addView(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get dimensions():number\r\n\t{\r\n\t\treturn this._dimensions;\r\n\t}\r\n\r\n\tpublic set dimensions(value:number)\r\n\t{\r\n\t\tif (this._dimensions == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._dimensions = value;\r\n\r\n\t\t//reset view\r\n\t\tthis._attributesBuffer._removeView(this);\r\n\t\tthis._attributesBuffer._addView(this);\r\n\t}\r\n\r\n\tpublic get count():number\r\n\t{\r\n\t\treturn this._attributesBuffer.count;\r\n\t}\r\n\r\n\tpublic set count(value:number)\r\n\t{\r\n\t\tthis._attributesBuffer.count = value;\r\n\t}\r\n\r\n\tpublic get offset():number\r\n\t{\r\n\t\treturn this._attributesBuffer._getOffset(this._index);\r\n\t}\r\n\r\n\tpublic get length():number\r\n\t{\r\n\t\treturn this._attributesBuffer.count*this._dimensions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, count?:number);\r\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBuffer?:AttributesBuffer);\r\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBufferCount:any = 0)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._arrayClass = arrayClass;\r\n\t\tthis._size = arrayClass.BYTES_PER_ELEMENT;\r\n\t\tthis._dimensions = dimensions;\r\n\t\tthis._attributesBuffer = (attributesBufferCount instanceof AttributesBuffer)? <AttributesBuffer> attributesBufferCount : new AttributesBuffer(this._dimensions*this._size, attributesBufferCount);\r\n\r\n\t\tthis._attributesBuffer._addView(this);\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(arrayBufferView:ArrayBufferView, offset?:number);\r\n\tpublic set(values:any, offset:number = 0)\r\n\t{\r\n\t\tthis._attributesBuffer._setAttributes(this._index, (values instanceof Array)? new (this._arrayClass)(values) : <ArrayBufferView> values, offset);\r\n\r\n\t\tthis._localArrayBuffer = null;\r\n\t}\r\n\r\n\tpublic get(count:number, offset:number = 0):ArrayBufferView\r\n\t{\r\n\t\tif (!this._localArrayBuffer)\r\n\t\t\tthis._localArrayBuffer = this._attributesBuffer._getLocalArrayBuffer(this._index);\r\n\r\n\t\tvar len:number = this._dimensions*this._size;\r\n\t\treturn new (this._arrayClass)(this._localArrayBuffer, offset*len, count*this._dimensions);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):AttributesView\r\n\t{\r\n\t\treturn (this._cloneCache = new AttributesView(this._arrayClass, this._dimensions, attributesBuffer));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):AttributesView\r\n\t{\r\n\t\tif (attributesBuffer)\r\n\t\t\tthis._internalClone(attributesBuffer);\r\n\r\n\t\tif (!this._cloneCache)\r\n\t\t\tthis._attributesBuffer.clone();\r\n\r\n\t\tvar cloneCache:AttributesView = this._cloneCache;\r\n\t\tthis._cloneCache = null;\r\n\r\n\t\treturn cloneCache;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._attributesBuffer._removeView(this);\r\n\t\tthis._attributesBuffer = null;\r\n\t}\r\n}\r\n\r\nexport = AttributesView;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\r\n\r\nclass Byte4Attributes extends AttributesView\r\n{\r\n\tpublic static assetType:string = \"[attributes Byte4Attributes]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Byte4Attributes.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(length?:number, unsigned?:boolean);\r\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\r\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\r\n\t{\r\n\t\tsuper(unsigned? Uint8Array : Int8Array, 4, attributesBufferLength);\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(typedArray:Float32Array, offset?:number);\r\n\tpublic set(typedArray:Uint8Array, offset?:number);\r\n\tpublic set(typedArray:Int8Array, offset?:number);\r\n\tpublic set(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.set(values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset?:number):Uint8Array;\r\n\tpublic get(count:number, offset?:number):Int8Array;\r\n\tpublic get(count:number, offset:number = 0):any\r\n\t{\r\n\t\treturn super.get(count, offset);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte4Attributes\r\n\t{\r\n\t\treturn (this._cloneCache = new Byte4Attributes(attributesBuffer, this._arrayClass == Uint8Array));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte4Attributes\r\n\t{\r\n\t\treturn <Byte4Attributes> super.clone(attributesBuffer);\r\n\t}\r\n}\r\n\r\nexport = Byte4Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\r\n\r\nclass Float1Attributes extends AttributesView\r\n{\r\n\tpublic static assetType:string = \"[attributes Float1Attributes]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Float1Attributes.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(length?:number);\r\n\tconstructor(attributesBuffer?:AttributesBuffer);\r\n\tconstructor(attributesBufferLength?:any)\r\n\t{\r\n\t\tsuper(Float32Array, 1, attributesBufferLength)\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(typedArray:Float32Array, offset?:number);\r\n\tpublic set(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.set(values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset:number = 0):Float32Array\r\n\t{\r\n\t\treturn <Float32Array> super.get(count, offset);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float1Attributes\r\n\t{\r\n\t\treturn (this._cloneCache = new Float1Attributes(attributesBuffer));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float1Attributes\r\n\t{\r\n\t\treturn <Float1Attributes> super.clone(attributesBuffer);\r\n\t}\r\n}\r\n\r\nexport = Float1Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\r\n\r\nclass Float2Attributes extends AttributesView\r\n{\r\n\tpublic static assetType:string = \"[attributes Float2Attributes]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Float2Attributes.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(length?:number);\r\n\tconstructor(attributesBuffer?:AttributesBuffer);\r\n\tconstructor(attributesBufferLength?:any)\r\n\t{\r\n\t\tsuper(Float32Array, 2, attributesBufferLength)\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(typedArray:Float32Array, offset?:number);\r\n\tpublic set(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.set(values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset:number = 0):Float32Array\r\n\t{\r\n\t\treturn <Float32Array> super.get(count, offset);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float2Attributes\r\n\t{\r\n\t\treturn (this._cloneCache = new Float2Attributes(attributesBuffer));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float2Attributes\r\n\t{\r\n\t\treturn <Float2Attributes> super.clone(attributesBuffer);\r\n\t}\r\n}\r\n\r\nexport = Float2Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\r\n\r\nclass Float3Attributes extends AttributesView\r\n{\r\n\tpublic static assetType:string = \"[attributes Float3Attributes]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Float3Attributes.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(length?:number);\r\n\tconstructor(attributesBuffer?:AttributesBuffer);\r\n\tconstructor(attributesBufferLength?:any)\r\n\t{\r\n\t\tsuper(Float32Array, 3, attributesBufferLength)\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(typedArray:Float32Array, offset?:number);\r\n\tpublic set(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.set(values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset:number = 0):Float32Array\r\n\t{\r\n\t\treturn <Float32Array> super.get(count, offset);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\treturn (this._cloneCache = new Float3Attributes(attributesBuffer));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float3Attributes\r\n\t{\r\n\t\treturn <Float3Attributes> super.clone(attributesBuffer);\r\n\t}\r\n}\r\n\r\nexport = Float3Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\r\n\r\nclass Float4Attributes extends AttributesView\r\n{\r\n\tpublic static assetType:string = \"[attributes Float4Attributes]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Float4Attributes.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(length?:number);\r\n\tconstructor(attributesBuffer?:AttributesBuffer);\r\n\tconstructor(attributesBufferLength?:any)\r\n\t{\r\n\t\tsuper(Float32Array, 4, attributesBufferLength)\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(typedArray:Float32Array, offset?:number);\r\n\tpublic set(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.set(values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset:number = 0):Float32Array\r\n\t{\r\n\t\treturn <Float32Array> super.get(count, offset);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float4Attributes\r\n\t{\r\n\t\treturn (this._cloneCache = new Float4Attributes(attributesBuffer));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float4Attributes\r\n\t{\r\n\t\treturn <Float4Attributes> super.clone(attributesBuffer);\r\n\t}\r\n}\r\n\r\nexport = Float4Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\r\n\r\nclass Short2Attributes extends AttributesView\r\n{\r\n\tpublic static assetType:string = \"[attributes Short2Attributes]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Short2Attributes.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(length?:number, unsigned?:boolean);\r\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\r\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\r\n\t{\r\n\t\tsuper(unsigned? Uint16Array : Int16Array, 2, attributesBufferLength)\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(typedArray:Uint16Array, offset?:number);\r\n\tpublic set(typedArray:Int16Array, offset?:number);\r\n\tpublic set(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.set(values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset?:number):Uint16Array;\r\n\tpublic get(count:number, offset?:number):Int16Array;\r\n\tpublic get(count:number, offset:number = 0):any\r\n\t{\r\n\t\treturn super.get(count, offset);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short2Attributes\r\n\t{\r\n\t\treturn (this._cloneCache = new Short2Attributes(attributesBuffer, this._arrayClass == Uint16Array));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short2Attributes\r\n\t{\r\n\t\treturn <Short2Attributes> super.clone(attributesBuffer);\r\n\t}\r\n}\r\n\r\nexport = Short2Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\r\n\r\nclass Short3Attributes extends AttributesView\r\n{\r\n\tpublic static assetType:string = \"[attributes Short3Attributes]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Short3Attributes.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(length?:number, unsigned?:boolean);\r\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\r\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\r\n\t{\r\n\t\tsuper(unsigned? Uint16Array : Int16Array, 3, attributesBufferLength)\r\n\t}\r\n\r\n\tpublic set(array:Array<number>, offset?:number);\r\n\tpublic set(typedArray:Uint16Array, offset?:number);\r\n\tpublic set(typedArray:Int16Array, offset?:number);\r\n\tpublic set(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.set(values, offset);\r\n\t}\r\n\r\n\tpublic get(count:number, offset?:number):Uint16Array;\r\n\tpublic get(count:number, offset?:number):Int16Array;\r\n\tpublic get(count:number, offset:number = 0):any\r\n\t{\r\n\t\treturn super.get(count, offset);\r\n\t}\r\n\r\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short3Attributes\r\n\t{\r\n\t\treturn (this._cloneCache = new Short3Attributes(attributesBuffer, this._arrayClass == Uint16Array));\r\n\t}\r\n\r\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short3Attributes\r\n\t{\r\n\t\treturn <Short3Attributes> super.clone(attributesBuffer);\r\n\t}\r\n}\r\n\r\nexport = Short3Attributes;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\n/**\r\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\r\n * object. You can use the methods of the BitmapImage2D class to create\r\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\r\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\r\n * image that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes.\r\n *\r\n * <p>This class lets you separate bitmap rendering operations from the\r\n * internal display updating routines of flash. By manipulating a\r\n * BitmapImage2D object directly, you can create complex images without incurring\r\n * the per-frame overhead of constantly redrawing the content from vector\r\n * data.</p>\r\n *\r\n * <p>The methods of the BitmapImage2D class support effects that are not\r\n * available through the filters available to non-bitmap display objects.</p>\r\n *\r\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\r\n * represent either a fully opaque bitmap or a transparent bitmap that\r\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\r\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\r\n * of a single pixel in the bitmap.</p>\r\n *\r\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\r\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\r\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\r\n * represents the alpha channel value, followed by red, green, and blue.)</p>\r\n *\r\n * <p>The four channels(alpha, red, green, and blue) are represented as\r\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\r\n * method or the <code>DisplacementMapFilter.componentX</code> and\r\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\r\n * are represented by the following constants in the BitmapImage2DChannel\r\n * class:</p>\r\n *\r\n * <ul>\r\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n * </ul>\r\n *\r\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\r\n * <code>bitmapData</code> property of the Bitmap object.</p>\r\n *\r\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\r\n * <code>Graphics.beginBitmapFill()</code> method.</p>\r\n *\r\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\r\n * using the <code>flash.display.Tilesheet</code> class.</p>\r\n *\r\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\r\n * is 8,191 pixels in width or height, and the total number of pixels cannot\r\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\r\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\r\n * is 2,880 pixels in height and 2,880 in width.</p>\r\n */\r\nclass BitmapImage2D extends Image2D\r\n{\r\n\tpublic static assetType:string = \"[image BitmapImage2D]\";\r\n\r\n\tprivate _imageCanvas:HTMLCanvasElement;\r\n\tprivate _context:CanvasRenderingContext2D;\r\n\tprivate _imageData:ImageData;\r\n\tprivate _transparent:boolean;\r\n\tprivate _locked:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BitmapImage2D.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\r\n\t * set this value only when you construct a BitmapImage2D object by passing in\r\n\t * <code>true</code> for the <code>transparent</code> parameter of the\r\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\r\n\t * whether it supports per-pixel transparency by determining if the value of\r\n\t * the <code>transparent</code> property is <code>true</code>.\r\n\t */\r\n\tpublic get transparent():boolean\r\n\t{\r\n\t\treturn this._transparent;\r\n\t}\r\n\r\n\tpublic set transparent(value:boolean)\r\n\t{\r\n\t\tthis._transparent = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a BitmapImage2D object with a specified width and height. If you\r\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\r\n\t * the bitmap is set to that color.\r\n\t *\r\n\t * <p>By default, the bitmap is created as transparent, unless you pass\r\n\t * the value <code>false</code> for the transparent parameter. After you\r\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\r\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\r\n\t * information. If you define the bitmap as transparent, every pixel uses 32\r\n\t * bits of color channel information, including an alpha transparency\r\n\t * channel.</p>\r\n\t *\r\n\t * @param width       The width of the bitmap image in pixels.\r\n\t * @param height      The height of the bitmap image in pixels.\r\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\r\n\t *                    transparency. The default value is <code>true</code>\r\n\t *                    (transparent). To create a fully transparent bitmap,\r\n\t *                    set the value of the <code>transparent</code>\r\n\t *                    parameter to <code>true</code> and the value of the\r\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\r\n\t *                    0). Setting the <code>transparent</code> property to\r\n\t *                    <code>false</code> can result in minor improvements\r\n\t *                    in rendering performance.\r\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\r\n\t *                    bitmap image area. The default value is\r\n\t *                    0xFFFFFFFF(solid white).\r\n\t */\r\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null, powerOfTwo:boolean = true)\r\n\t{\r\n\t\tsuper(width, height, powerOfTwo);\r\n\r\n\t\tthis._transparent = transparent;\r\n\t\tthis._imageCanvas = <HTMLCanvasElement> document.createElement(\"canvas\");\r\n\t\tthis._imageCanvas.width = width;\r\n\t\tthis._imageCanvas.height = height;\r\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\r\n\t\t\r\n\t\tif (fillColor != null)\r\n\t\t\tthis.fillRect(this._rect, fillColor);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\r\n\t * with an exact copy of the contained bitmap.\r\n\t *\r\n\t * @return A new BitmapImage2D object that is identical to the original.\r\n\t */\r\n\tpublic clone():BitmapImage2D\r\n\t{\r\n\t\tvar t:BitmapImage2D = new BitmapImage2D(this.width, this.height, this.transparent);\r\n\t\tt.draw(this);\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the color values in a specified area of a bitmap image by using a\r\n\t * <code>ColorTransform</code> object. If the rectangle matches the\r\n\t * boundaries of the bitmap image, this method transforms the color values of\r\n\t * the entire image.\r\n\t *\r\n\t * @param rect           A Rectangle object that defines the area of the\r\n\t *                       image in which the ColorTransform object is applied.\r\n\t * @param colorTransform A ColorTransform object that describes the color\r\n\t *                       transformation values to apply.\r\n\t */\r\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar data:Array<number> = this._imageData.data;\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\r\n\r\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\r\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\r\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\r\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Transfers data from one channel of another BitmapImage2D object or the\r\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\r\n\t * All of the data in the other channels in the destination BitmapImage2D object\r\n\t * are preserved.\r\n\t *\r\n\t * <p>The source channel value and destination channel value can be one of\r\n\t * following values: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n\t * </ul>\r\n\t *\r\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\r\n\t *                         can be a different BitmapImage2D object or it can\r\n\t *                         refer to the current BitmapImage2D object.\r\n\t * @param sourceRect       The source Rectangle object. To copy only channel\r\n\t *                         data from a smaller area within the bitmap,\r\n\t *                         specify a source rectangle that is smaller than\r\n\t *                         the overall size of the BitmapImage2D object.\r\n\t * @param destPoint        The destination Point object that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new channel data is placed. To copy only\r\n\t *                         channel data from one area to a different area in\r\n\t *                         the destination image, specify a point other than\r\n\t *                        (0,0).\r\n\t * @param sourceChannel    The source channel. Use a value from the\r\n\t *                         BitmapImage2DChannel class\r\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\r\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n\t * @param destChannel      The destination channel. Use a value from the\r\n\t *                         BitmapImage2DChannel class\r\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\r\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\r\n\t */\r\n\tpublic copyChannel(sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\r\n\t{\r\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\r\n\t\tvar destData:Array<number> = this._imageData.data;\r\n\r\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\r\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\r\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\r\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\r\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\r\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\r\n\r\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a fast routine to perform pixel manipulation between images with\r\n\t * no stretching, rotation, or color effects. This method copies a\r\n\t * rectangular area of a source image to a rectangular area of the same size\r\n\t * at the destination point of the destination BitmapImage2D object.\r\n\t *\r\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\r\n\t * parameters, you can use a secondary image as an alpha source for the\r\n\t * source image. If the source image has alpha data, both sets of alpha data\r\n\t * are used to composite pixels from the source image to the destination\r\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\r\n\t * image that corresponds to the upper-left corner of the source rectangle.\r\n\t * Any pixels outside the intersection of the source image and alpha image\r\n\t * are not copied to the destination image.</p>\r\n\t *\r\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\r\n\t * channel is used when a transparent image is copied onto another\r\n\t * transparent image. To copy pixels with the alpha channel data, set the\r\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\r\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\r\n\t *\r\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\r\n\t *                         The source image can be a different BitmapImage2D\r\n\t *                         instance, or it can refer to the current\r\n\t *                         BitmapImage2D instance.\r\n\t * @param sourceRect       A rectangle that defines the area of the source\r\n\t *                         image to use as input.\r\n\t * @param destPoint        The destination point that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new pixels are placed.\r\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\r\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\r\n\t *                         that corresponds to the upper-left corner of the\r\n\t *                         <code>sourceRect</code> parameter.\r\n\t * @param mergeAlpha       To use the alpha channel, set the value to\r\n\t *                         <code>true</code>. To copy pixels with no alpha\r\n\t *                         channel, set the value to <code>false</code>.\r\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\r\n\t */\r\n\tpublic copyPixels(source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(source:HTMLElement, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(source:any, sourceRect:Rectangle, destRect:Rectangle)\r\n\t{\r\n\t\tif (source instanceof BitmapImage2D)\r\n\t\t\tsource = source.getCanvas();\r\n\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) draw object\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Frees memory that is used to store the BitmapImage2D object.\r\n\t *\r\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\r\n\t * and height of the image are set to 0. All subsequent calls to methods or\r\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\r\n\t * </p>\r\n\t *\r\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\r\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\r\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\r\n\t * object is no longer usable and an exception may be thrown if\r\n\t * you call functions on the BitmapImage2D object. However,\r\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\r\n\t * object(approximately 128 bytes); the memory occupied by the actual\r\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\r\n\t * collected by the garbage collector.</p>\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._context = null;\r\n\t\tthis._imageCanvas = null;\r\n\t\tthis._imageData = null;\r\n\t\tthis._rect = null;\r\n\t\tthis._transparent = null;\r\n\t\tthis._locked = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the <code>source</code> display object onto the bitmap image, using\r\n\t * the NME software renderer. You can specify <code>matrix</code>,\r\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\r\n\t * <code>clipRect</code> parameter to control how the rendering performs.\r\n\t * Optionally, you can specify whether the bitmap should be smoothed when\r\n\t * scaled(this works only if the source object is a BitmapImage2D object).\r\n\t *\r\n\t * <p>The source display object does not use any of its applied\r\n\t * transformations for this call. It is treated as it exists in the library\r\n\t * or file, with no matrix transform, no color transform, and no blend mode.\r\n\t * To draw a display object(such as a movie clip) by using its own transform\r\n\t * properties, you can copy its <code>transform</code> property object to the\r\n\t * <code>transform</code> property of the Bitmap object that uses the\r\n\t * BitmapImage2D object.</p>\r\n\t *\r\n\t * @param source         The display object or BitmapImage2D object to draw to\r\n\t *                       the BitmapImage2D object.(The DisplayObject and\r\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\r\n\t *                       interface.)\r\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\r\n\t *                       the coordinates of the bitmap. If you do not want to\r\n\t *                       apply a matrix transformation to the image, set this\r\n\t *                       parameter to an identity matrix, created with the\r\n\t *                       default <code>new Matrix()</code> constructor, or\r\n\t *                       pass a <code>null</code> value.\r\n\t * @param colorTransform A ColorTransform object that you use to adjust the\r\n\t *                       color values of the bitmap. If no object is\r\n\t *                       supplied, the bitmap image's colors are not\r\n\t *                       transformed. If you must pass this parameter but you\r\n\t *                       do not want to transform the image, set this\r\n\t *                       parameter to a ColorTransform object created with\r\n\t *                       the default <code>new ColorTransform()</code>\r\n\t *                       constructor.\r\n\t * @param blendMode      A string value, from the flash.display.BlendMode\r\n\t *                       class, specifying the blend mode to be applied to\r\n\t *                       the resulting bitmap.\r\n\t * @param clipRect       A Rectangle object that defines the area of the\r\n\t *                       source object to draw. If you do not supply this\r\n\t *                       value, no clipping occurs and the entire source\r\n\t *                       object is drawn.\r\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\r\n\t *                       object is smoothed when scaled or rotated, due to a\r\n\t *                       scaling or rotation in the <code>matrix</code>\r\n\t *                       parameter. The <code>smoothing</code> parameter only\r\n\t *                       applies if the <code>source</code> parameter is a\r\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\r\n\t *                       to <code>false</code>, the rotated or scaled\r\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\r\n\t *                       example, the following two images use the same\r\n\t *                       BitmapImage2D object for the <code>source</code>\r\n\t *                       parameter, but the <code>smoothing</code> parameter\r\n\t *                       is set to <code>true</code> on the left and\r\n\t *                       <code>false</code> on the right:\r\n\t *\r\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\r\n\t *                       to <code>true</code> takes longer than doing so with\r\n\t *                       <code>smoothing</code> set to\r\n\t *                       <code>false</code>.</p>\r\n\t * @throws ArgumentError The <code>source</code> parameter is not a\r\n\t *                       BitmapImage2D or DisplayObject object.\r\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\r\n\t *                       object.\r\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\r\n\t *                       Sprite or MovieClip object) all of its child objects\r\n\t *                       do not come from the same domain as the caller, or\r\n\t *                       are not in a content that is accessible to the\r\n\t *                       caller by having called the\r\n\t *                       <code>Security.allowDomain()</code> method. This\r\n\t *                       restriction does not apply to AIR content in the\r\n\t *                       application security sandbox.\r\n\t */\r\n\tpublic draw(source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\r\n\t{\r\n\t\tif (source instanceof BitmapImage2D)\r\n\t\t\tsource = source.getCanvas();\r\n\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) draw object\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Fills a rectangular area of pixels with a specified ARGB color.\r\n\t *\r\n\t * @param rect  The rectangular area to fill.\r\n\t * @param color The ARGB color value that fills the area. ARGB colors are\r\n\t *              often specified in hexadecimal format; for example,\r\n\t *              0xFF336699.\r\n\t * @throws TypeError The rect is null.\r\n\t */\r\n\tpublic fillRect(rect:Rectangle, color:number)\r\n\t{\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) apply fill\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tif (this._imageData)\r\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\r\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\r\n\r\n\t\t\tif (this._imageData)\r\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\r\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\r\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\r\n\t * alpha information is returned.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\r\n\t *         method returns 0.\r\n\t */\r\n\tpublic getPixel(x, y):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\t\tr = this._imageData.data[index + 0];\r\n\t\t\tg = this._imageData.data[index + 1];\r\n\t\t\tb = this._imageData.data[index + 2];\r\n\t\t\ta = this._imageData.data[index + 3];\r\n\t\t}\r\n\r\n\t\t//returns black if fully transparent\r\n\t\tif (!a)\r\n\t\t\treturn 0x0;\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\r\n\t * This method is similar to the <code>getPixel()</code> method, which\r\n\t * returns an RGB color without alpha channel data.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\r\n\t *         returned.\r\n\t */\r\n\tpublic getPixel32(x, y):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\t\tr = this._imageData.data[index + 0];\r\n\t\t\tg = this._imageData.data[index + 1];\r\n\t\t\tb = this._imageData.data[index + 2];\r\n\t\t\ta = this._imageData.data[index + 3];\r\n\t\t}\r\n\r\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\r\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\r\n\t * changes. To improve performance, use this method along with the\r\n\t * <code>unlock()</code> method before and after numerous calls to the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\r\n\t *\r\n\t */\r\n\tpublic lock()\r\n\t{\r\n\t\tif (this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = true;\r\n\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\r\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\r\n\t * in the Array is expected to be 32-bit ARGB pixel values.\r\n\t *\r\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\r\n\t *                    object.\r\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\r\n\t *                    values to be used in the rectangular region.\r\n\t * @throws RangeError The vector array is not large enough to read all the\r\n\t *                    pixel data.\r\n\t */\r\n\tpublic setArray(rect:Rectangle, inputArray:Array<number>)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\r\n\r\n\t\t\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\t\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\t\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\t\t\tthis._imageData.data[index + 3] = argb[0];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\r\n\t * value of the image pixel is preserved during this operation. The value of\r\n\t * the RGB color parameter is treated as an unmultiplied color value.\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapImage2D instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting RGB color for the pixel.\r\n\t */\r\n\tpublic setPixel(x:number, y:number, color:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\tthis._imageData.data[index + 3] = 255;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the color and alpha transparency values of a single pixel of a\r\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\r\n\t * method; the main difference is that the <code>setPixel32()</code> method\r\n\t * takes an ARGB color value that contains alpha channel information.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapImage2D instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\r\n\t *              opaque(not transparent), the alpha transparency portion of\r\n\t *              this color value is ignored.\r\n\t */\r\n\tpublic setPixel32(x, y, color:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\r\n\r\n\t\tthis._imageData.data[index + 0] = argb[1];\r\n\t\tthis._imageData.data[index + 1] = argb[2];\r\n\t\tthis._imageData.data[index + 2] = argb[3];\r\n\t\tthis._imageData.data[index + 3] = argb[0];\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a byte array into a rectangular region of pixel data. For each\r\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\r\n\t * the return value is written into the pixel. If the byte array ends before\r\n\t * the full rectangle is written, the function returns. The data in the byte\r\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\r\n\t * on the byte array before or after the pixels are read.\r\n\t *\r\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\r\n\t *                       object.\r\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\r\n\t *                       unmultiplied pixel values to be used in the\r\n\t *                       rectangular region.\r\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\r\n\t *                   enough data to fill the area of the <code>rect</code>\r\n\t *                   rectangle. The method fills as many pixels as possible\r\n\t *                   before throwing the exception.\r\n\t * @throws TypeError The rect or inputByteArray are null.\r\n\t */\r\n\tpublic setPixels(rect:Rectangle, inputByteArray:ByteArray)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\tinputByteArray.position = 0;\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\r\n\r\n\t\t\t\tthis._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\r\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\r\n\t * To improve performance, use this method along with the <code>lock()</code>\r\n\t * method before and after numerous calls to the <code>setPixel()</code> or\r\n\t * <code>setPixel32()</code> method.\r\n\t *\r\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\r\n\t *                   you do not specify a value for this parameter, the\r\n\t *                   entire area of the BitmapImage2D object is considered\r\n\t *                   changed.\r\n\t */\r\n\tpublic unlock()\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = false;\r\n\r\n\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\r\n\t\tthis._imageData = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {ImageData}\r\n\t */\r\n\tpublic getImageData():ImageData\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\r\n\t\treturn this._imageData;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {HTMLCanvasElement}\r\n\t */\r\n\tpublic getCanvas():HTMLCanvasElement\r\n\t{\r\n\t\treturn this._imageCanvas;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tif (this._locked)\r\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\r\n\r\n\t\tthis._imageCanvas.width = width;\r\n\t\tthis._imageCanvas.height = height;\r\n\t\t\r\n\t\tsuper._setSize(width, height);\r\n\r\n\t\tif (this._locked)\r\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\r\n\t}\r\n}\r\n\r\nexport = BitmapImage2D;",
    "class BitmapImageChannel\r\n{\r\n\tpublic static ALPHA:number /*uint*/ = 8;\r\n\tpublic static BLUE:number /*uint*/ = 4;\r\n\tpublic static GREEN:number /*uint*/ = 2;\r\n\tpublic static RED:number /*uint*/ = 1;\r\n}\r\n\r\nexport = BitmapImageChannel;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\r\n\r\n/**\r\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\r\n * object. You can use the methods of the BitmapImage2D class to create\r\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\r\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\r\n * image that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes.\r\n *\r\n * <p>This class lets you separate bitmap rendering operations from the\r\n * internal display updating routines of flash. By manipulating a\r\n * BitmapImage2D object directly, you can create complex images without incurring\r\n * the per-frame overhead of constantly redrawing the content from vector\r\n * data.</p>\r\n *\r\n * <p>The methods of the BitmapImage2D class support effects that are not\r\n * available through the filters available to non-bitmap display objects.</p>\r\n *\r\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\r\n * represent either a fully opaque bitmap or a transparent bitmap that\r\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\r\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\r\n * of a single pixel in the bitmap.</p>\r\n *\r\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\r\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\r\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\r\n * represents the alpha channel value, followed by red, green, and blue.)</p>\r\n *\r\n * <p>The four channels(alpha, red, green, and blue) are represented as\r\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\r\n * method or the <code>DisplacementMapFilter.componentX</code> and\r\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\r\n * are represented by the following constants in the BitmapImage2DChannel\r\n * class:</p>\r\n *\r\n * <ul>\r\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n * </ul>\r\n *\r\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\r\n * <code>bitmapData</code> property of the Bitmap object.</p>\r\n *\r\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\r\n * <code>Graphics.beginBitmapFill()</code> method.</p>\r\n *\r\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\r\n * using the <code>flash.display.Tilesheet</code> class.</p>\r\n *\r\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\r\n * is 8,191 pixels in width or height, and the total number of pixels cannot\r\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\r\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\r\n * is 2,880 pixels in height and 2,880 in width.</p>\r\n */\r\nclass BitmapImageCube extends ImageCube\r\n{\r\n\tpublic static assetType:string = \"[image BitmapImageCube]\";\r\n\r\n\tpublic static posX:number = 0;\r\n\tpublic static negX:number = 1;\r\n\tpublic static posY:number = 2;\r\n\tpublic static negY:number = 3;\r\n\tpublic static posZ:number = 4;\r\n\tpublic static negZ:number = 5;\r\n\r\n\tprivate _imageCanvas:Array<HTMLCanvasElement> = new Array<HTMLCanvasElement>(6);\r\n\tprivate _context:Array<CanvasRenderingContext2D> = new Array<CanvasRenderingContext2D>(6);\r\n\tprivate _imageData:Array<ImageData> = new Array<ImageData>(6);\r\n\tprivate _transparent:boolean;\r\n\tprivate _locked:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BitmapImageCube.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\r\n\t * set this value only when you construct a BitmapImage2D object by passing in\r\n\t * <code>true</code> for the <code>transparent</code> parameter of the\r\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\r\n\t * whether it supports per-pixel transparency by determining if the value of\r\n\t * the <code>transparent</code> property is <code>true</code>.\r\n\t */\r\n\tpublic get transparent():boolean\r\n\t{\r\n\t\treturn this._transparent;\r\n\t}\r\n\r\n\tpublic set transparent(value:boolean)\r\n\t{\r\n\t\tthis._transparent = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a BitmapImage2D object with a specified width and height. If you\r\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\r\n\t * the bitmap is set to that color.\r\n\t *\r\n\t * <p>By default, the bitmap is created as transparent, unless you pass\r\n\t * the value <code>false</code> for the transparent parameter. After you\r\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\r\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\r\n\t * information. If you define the bitmap as transparent, every pixel uses 32\r\n\t * bits of color channel information, including an alpha transparency\r\n\t * channel.</p>\r\n\t *\r\n\t * @param width       The width of the bitmap image in pixels.\r\n\t * @param height      The height of the bitmap image in pixels.\r\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\r\n\t *                    transparency. The default value is <code>true</code>\r\n\t *                    (transparent). To create a fully transparent bitmap,\r\n\t *                    set the value of the <code>transparent</code>\r\n\t *                    parameter to <code>true</code> and the value of the\r\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\r\n\t *                    0). Setting the <code>transparent</code> property to\r\n\t *                    <code>false</code> can result in minor improvements\r\n\t *                    in rendering performance.\r\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\r\n\t *                    bitmap image area. The default value is\r\n\t *                    0xFFFFFFFF(solid white).\r\n\t */\r\n\tconstructor(size:number, transparent:boolean = true, fillColor:number = null)\r\n\t{\r\n\t\tsuper(size);\r\n\r\n\t\tthis._transparent = transparent;\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tthis._imageCanvas[i] = <HTMLCanvasElement> document.createElement(\"canvas\");\r\n\t\t\tthis._imageCanvas[i].width = size;\r\n\t\t\tthis._imageCanvas[i].height = size;\r\n\t\t\tthis._context[i] = this._imageCanvas[i].getContext(\"2d\");\r\n\r\n\t\t\tif (fillColor != null)\r\n\t\t\t\tthis.fillRect(i, new Rectangle(0, 0, size, size), fillColor);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\r\n\t * with an exact copy of the contained bitmap.\r\n\t *\r\n\t * @return A new BitmapImage2D object that is identical to the original.\r\n\t */\r\n\tpublic clone():BitmapImageCube\r\n\t{\r\n\t\tvar t:BitmapImageCube = new BitmapImageCube(this._size, this.transparent);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tt.draw(i, this.getCanvas(i));\r\n\t\t}\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the color values in a specified area of a bitmap image by using a\r\n\t * <code>ColorTransform</code> object. If the rectangle matches the\r\n\t * boundaries of the bitmap image, this method transforms the color values of\r\n\t * the entire image.\r\n\t *\r\n\t * @param rect           A Rectangle object that defines the area of the\r\n\t *                       image in which the ColorTransform object is applied.\r\n\t * @param colorTransform A ColorTransform object that describes the color\r\n\t *                       transformation values to apply.\r\n\t */\r\n\tpublic colorTransform(side:number, rect:Rectangle, colorTransform:ColorTransform)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar data:Array<number> = this._imageData[side].data;\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\r\n\r\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\r\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\r\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\r\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Transfers data from one channel of another BitmapImage2D object or the\r\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\r\n\t * All of the data in the other channels in the destination BitmapImage2D object\r\n\t * are preserved.\r\n\t *\r\n\t * <p>The source channel value and destination channel value can be one of\r\n\t * following values: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\r\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\r\n\t * </ul>\r\n\t *\r\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\r\n\t *                         can be a different BitmapImage2D object or it can\r\n\t *                         refer to the current BitmapImage2D object.\r\n\t * @param sourceRect       The source Rectangle object. To copy only channel\r\n\t *                         data from a smaller area within the bitmap,\r\n\t *                         specify a source rectangle that is smaller than\r\n\t *                         the overall size of the BitmapImage2D object.\r\n\t * @param destPoint        The destination Point object that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new channel data is placed. To copy only\r\n\t *                         channel data from one area to a different area in\r\n\t *                         the destination image, specify a point other than\r\n\t *                        (0,0).\r\n\t * @param sourceChannel    The source channel. Use a value from the\r\n\t *                         BitmapImage2DChannel class\r\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\r\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n\t * @param destChannel      The destination channel. Use a value from the\r\n\t *                         BitmapImage2DChannel class\r\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\r\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\r\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\r\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\r\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\r\n\t */\r\n\tpublic copyChannel(side:number, sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\r\n\t{\r\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\r\n\t\tvar destData:Array<number> = this._imageData[side].data;\r\n\r\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\r\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\r\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\r\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\r\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\r\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this._size)*4;\r\n\r\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a fast routine to perform pixel manipulation between images with\r\n\t * no stretching, rotation, or color effects. This method copies a\r\n\t * rectangular area of a source image to a rectangular area of the same size\r\n\t * at the destination point of the destination BitmapImage2D object.\r\n\t *\r\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\r\n\t * parameters, you can use a secondary image as an alpha source for the\r\n\t * source image. If the source image has alpha data, both sets of alpha data\r\n\t * are used to composite pixels from the source image to the destination\r\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\r\n\t * image that corresponds to the upper-left corner of the source rectangle.\r\n\t * Any pixels outside the intersection of the source image and alpha image\r\n\t * are not copied to the destination image.</p>\r\n\t *\r\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\r\n\t * channel is used when a transparent image is copied onto another\r\n\t * transparent image. To copy pixels with the alpha channel data, set the\r\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\r\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\r\n\t *\r\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\r\n\t *                         The source image can be a different BitmapImage2D\r\n\t *                         instance, or it can refer to the current\r\n\t *                         BitmapImage2D instance.\r\n\t * @param sourceRect       A rectangle that defines the area of the source\r\n\t *                         image to use as input.\r\n\t * @param destPoint        The destination point that represents the\r\n\t *                         upper-left corner of the rectangular area where\r\n\t *                         the new pixels are placed.\r\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\r\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\r\n\t *                         that corresponds to the upper-left corner of the\r\n\t *                         <code>sourceRect</code> parameter.\r\n\t * @param mergeAlpha       To use the alpha channel, set the value to\r\n\t *                         <code>true</code>. To copy pixels with no alpha\r\n\t *                         channel, set the value to <code>false</code>.\r\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\r\n\t */\r\n\tpublic copyPixels(side:number, source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(side:number, source:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\r\n\tpublic copyPixels(side:number, source:any, sourceRect:Rectangle, destRect:Rectangle)\r\n\t{\r\n\t\tif (source instanceof BitmapImage2D)\r\n\t\t\tsource = source.getCanvas();\r\n\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) draw object\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\r\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Frees memory that is used to store the BitmapImage2D object.\r\n\t *\r\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\r\n\t * and height of the image are set to 0. All subsequent calls to methods or\r\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\r\n\t * </p>\r\n\t *\r\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\r\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\r\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\r\n\t * object is no longer usable and an exception may be thrown if\r\n\t * you call functions on the BitmapImage2D object. However,\r\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\r\n\t * object(approximately 128 bytes); the memory occupied by the actual\r\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\r\n\t * collected by the garbage collector.</p>\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tthis._context[i] = null;\r\n\t\t\tthis._imageCanvas[i] = null;\r\n\t\t\tthis._imageData[i] = null;\r\n\t\t}\r\n\r\n\t\tthis._transparent = null;\r\n\t\tthis._locked = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the <code>source</code> display object onto the bitmap image, using\r\n\t * the NME software renderer. You can specify <code>matrix</code>,\r\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\r\n\t * <code>clipRect</code> parameter to control how the rendering performs.\r\n\t * Optionally, you can specify whether the bitmap should be smoothed when\r\n\t * scaled(this works only if the source object is a BitmapImage2D object).\r\n\t *\r\n\t * <p>The source display object does not use any of its applied\r\n\t * transformations for this call. It is treated as it exists in the library\r\n\t * or file, with no matrix transform, no color transform, and no blend mode.\r\n\t * To draw a display object(such as a movie clip) by using its own transform\r\n\t * properties, you can copy its <code>transform</code> property object to the\r\n\t * <code>transform</code> property of the Bitmap object that uses the\r\n\t * BitmapImage2D object.</p>\r\n\t *\r\n\t * @param source         The display object or BitmapImage2D object to draw to\r\n\t *                       the BitmapImage2D object.(The DisplayObject and\r\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\r\n\t *                       interface.)\r\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\r\n\t *                       the coordinates of the bitmap. If you do not want to\r\n\t *                       apply a matrix transformation to the image, set this\r\n\t *                       parameter to an identity matrix, created with the\r\n\t *                       default <code>new Matrix()</code> constructor, or\r\n\t *                       pass a <code>null</code> value.\r\n\t * @param colorTransform A ColorTransform object that you use to adjust the\r\n\t *                       color values of the bitmap. If no object is\r\n\t *                       supplied, the bitmap image's colors are not\r\n\t *                       transformed. If you must pass this parameter but you\r\n\t *                       do not want to transform the image, set this\r\n\t *                       parameter to a ColorTransform object created with\r\n\t *                       the default <code>new ColorTransform()</code>\r\n\t *                       constructor.\r\n\t * @param blendMode      A string value, from the flash.display.BlendMode\r\n\t *                       class, specifying the blend mode to be applied to\r\n\t *                       the resulting bitmap.\r\n\t * @param clipRect       A Rectangle object that defines the area of the\r\n\t *                       source object to draw. If you do not supply this\r\n\t *                       value, no clipping occurs and the entire source\r\n\t *                       object is drawn.\r\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\r\n\t *                       object is smoothed when scaled or rotated, due to a\r\n\t *                       scaling or rotation in the <code>matrix</code>\r\n\t *                       parameter. The <code>smoothing</code> parameter only\r\n\t *                       applies if the <code>source</code> parameter is a\r\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\r\n\t *                       to <code>false</code>, the rotated or scaled\r\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\r\n\t *                       example, the following two images use the same\r\n\t *                       BitmapImage2D object for the <code>source</code>\r\n\t *                       parameter, but the <code>smoothing</code> parameter\r\n\t *                       is set to <code>true</code> on the left and\r\n\t *                       <code>false</code> on the right:\r\n\t *\r\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\r\n\t *                       to <code>true</code> takes longer than doing so with\r\n\t *                       <code>smoothing</code> set to\r\n\t *                       <code>false</code>.</p>\r\n\t * @throws ArgumentError The <code>source</code> parameter is not a\r\n\t *                       BitmapImage2D or DisplayObject object.\r\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\r\n\t *                       object.\r\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\r\n\t *                       Sprite or MovieClip object) all of its child objects\r\n\t *                       do not come from the same domain as the caller, or\r\n\t *                       are not in a content that is accessible to the\r\n\t *                       caller by having called the\r\n\t *                       <code>Security.allowDomain()</code> method. This\r\n\t *                       restriction does not apply to AIR content in the\r\n\t *                       application security sandbox.\r\n\t */\r\n\tpublic draw(side:number, source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(side:number, source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\r\n\tpublic draw(side:number, source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\r\n\t{\r\n\t\tif (source instanceof BitmapImage2D)\r\n\t\t\tsource = source.getCanvas();\r\n\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) draw object\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\r\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Fills a rectangular area of pixels with a specified ARGB color.\r\n\t *\r\n\t * @param rect  The rectangular area to fill.\r\n\t * @param color The ARGB color value that fills the area. ARGB colors are\r\n\t *              often specified in hexadecimal format; for example,\r\n\t *              0xFF336699.\r\n\t * @throws TypeError The rect is null.\r\n\t */\r\n\tpublic fillRect(side:number, rect:Rectangle, color:number)\r\n\t{\r\n\t\tif (this._locked) {\r\n\r\n\t\t\t// If canvas is locked:\r\n\t\t\t//\r\n\t\t\t//      1) copy image data back to canvas\r\n\t\t\t//      2) apply fill\r\n\t\t\t//      3) read _imageData back out\r\n\r\n\t\t\tif (this._imageData[side])\r\n\t\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\r\n\r\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\r\n\r\n\t\t\tif (this._imageData[side])\r\n\t\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\t\t} else {\r\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\r\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\r\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\r\n\t * alpha information is returned.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\r\n\t *         method returns 0.\r\n\t */\r\n\tpublic getPixel(side:number, x:number, y:number):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tvar index:number = (x + y*this._size)*4;\r\n\r\n\t\t\tr = this._imageData[side].data[index + 0];\r\n\t\t\tg = this._imageData[side].data[index + 1];\r\n\t\t\tb = this._imageData[side].data[index + 2];\r\n\t\t\ta = this._imageData[side].data[index + 3];\r\n\t\t}\r\n\r\n\t\t//returns black if fully transparent\r\n\t\tif (!a)\r\n\t\t\treturn 0x0;\r\n\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\r\n\t * This method is similar to the <code>getPixel()</code> method, which\r\n\t * returns an RGB color without alpha channel data.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * @param x The <i>x</i> position of the pixel.\r\n\t * @param y The <i>y</i> position of the pixel.\r\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\r\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\r\n\t *         returned.\r\n\t */\r\n\tpublic getPixel32(side:number, x, y):number\r\n\t{\r\n\t\tvar r:number;\r\n\t\tvar g:number;\r\n\t\tvar b:number;\r\n\t\tvar a:number;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\r\n\r\n\t\t\tr = pixelData.data[0];\r\n\t\t\tg = pixelData.data[1];\r\n\t\t\tb = pixelData.data[2];\r\n\t\t\ta = pixelData.data[3];\r\n\r\n\t\t} else {\r\n\t\t\tvar index:number = (x + y*this._size)*4;\r\n\r\n\t\t\tr = this._imageData[side].data[index + 0];\r\n\t\t\tg = this._imageData[side].data[index + 1];\r\n\t\t\tb = this._imageData[side].data[index + 2];\r\n\t\t\ta = this._imageData[side].data[index + 3];\r\n\t\t}\r\n\r\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\t/**\r\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\r\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\r\n\t * changes. To improve performance, use this method along with the\r\n\t * <code>unlock()</code> method before and after numerous calls to the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\r\n\t *\r\n\t */\r\n\tpublic lock()\r\n\t{\r\n\t\tif (this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = true;\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\r\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\r\n\t * in the Array is expected to be 32-bit ARGB pixel values.\r\n\t *\r\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\r\n\t *                    object.\r\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\r\n\t *                    values to be used in the rectangular region.\r\n\t * @throws RangeError The vector array is not large enough to read all the\r\n\t *                    pixel data.\r\n\t */\r\n\tpublic setArray(side:number, rect:Rectangle, inputArray:Array<number>)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\r\n\r\n\t\t\t\tthis._imageData[side].data[index + 0] = argb[1];\r\n\t\t\t\tthis._imageData[side].data[index + 1] = argb[2];\r\n\t\t\t\tthis._imageData[side].data[index + 2] = argb[3];\r\n\t\t\t\tthis._imageData[side].data[index + 3] = argb[0];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\r\n\t * value of the image pixel is preserved during this operation. The value of\r\n\t * the RGB color parameter is treated as an unmultiplied color value.\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapImage2D instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting RGB color for the pixel.\r\n\t */\r\n\tpublic setPixel(side:number, x:number, y:number, color:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar index:number = (x + y*this._size)*4;\r\n\r\n\t\tthis._imageData[side].data[index + 0] = argb[1];\r\n\t\tthis._imageData[side].data[index + 1] = argb[2];\r\n\t\tthis._imageData[side].data[index + 2] = argb[3];\r\n\t\tthis._imageData[side].data[index + 3] = 255;\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the color and alpha transparency values of a single pixel of a\r\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\r\n\t * method; the main difference is that the <code>setPixel32()</code> method\r\n\t * takes an ARGB color value that contains alpha channel information.\r\n\t *\r\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\r\n\t * values. A premultiplied image pixel has the red, green, and blue color\r\n\t * channel values already multiplied by the alpha data. For example, if the\r\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\r\n\t * of their unmultiplied values. This loss of data can cause some problems\r\n\t * when you perform operations. All BitmapImage2D methods take and return\r\n\t * unmultiplied values. The internal pixel representation is converted from\r\n\t * premultiplied to unmultiplied before it is returned as a value. During a\r\n\t * set operation, the pixel value is premultiplied before the raw image pixel\r\n\t * is set.</p>\r\n\t *\r\n\t * <p><b>Note:</b> To increase performance, when you use the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\r\n\t * call the <code>lock()</code> method before you call the\r\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\r\n\t * the <code>unlock()</code> method when you have made all pixel changes.\r\n\t * This process prevents objects that reference this BitmapImage2D instance from\r\n\t * updating until you finish making the pixel changes.</p>\r\n\t *\r\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\r\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\r\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\r\n\t *              opaque(not transparent), the alpha transparency portion of\r\n\t *              this color value is ignored.\r\n\t */\r\n\tpublic setPixel32(side:number, x, y, color:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tvar index:number = (x + y*this._size)*4;\r\n\r\n\t\tthis._imageData[side].data[index + 0] = argb[1];\r\n\t\tthis._imageData[side].data[index + 1] = argb[2];\r\n\t\tthis._imageData[side].data[index + 2] = argb[3];\r\n\t\tthis._imageData[side].data[index + 3] = argb[0];\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a byte array into a rectangular region of pixel data. For each\r\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\r\n\t * the return value is written into the pixel. If the byte array ends before\r\n\t * the full rectangle is written, the function returns. The data in the byte\r\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\r\n\t * on the byte array before or after the pixels are read.\r\n\t *\r\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\r\n\t *                       object.\r\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\r\n\t *                       unmultiplied pixel values to be used in the\r\n\t *                       rectangular region.\r\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\r\n\t *                   enough data to fill the area of the <code>rect</code>\r\n\t *                   rectangle. The method fills as many pixels as possible\r\n\t *                   before throwing the exception.\r\n\t * @throws TypeError The rect or inputByteArray are null.\r\n\t */\r\n\tpublic setPixels(side:number, rect:Rectangle, inputByteArray:ByteArray)\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\tinputByteArray.position = 0;\r\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\r\n\t\tfor (i = 0; i < rect.width; ++i) {\r\n\t\t\tfor (j = 0; j < rect.height; ++j) {\r\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\r\n\r\n\t\t\t\tthis._imageData[side].data[index + 0] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData[side].data[index + 1] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData[side].data[index + 2] = inputByteArray.readUnsignedInt();\r\n\t\t\t\tthis._imageData[side].data[index + 3] = inputByteArray.readUnsignedInt();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._locked) {\r\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\r\n\t\t\tthis._imageData[side] = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\r\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\r\n\t * To improve performance, use this method along with the <code>lock()</code>\r\n\t * method before and after numerous calls to the <code>setPixel()</code> or\r\n\t * <code>setPixel32()</code> method.\r\n\t *\r\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\r\n\t *                   you do not specify a value for this parameter, the\r\n\t *                   entire area of the BitmapImage2D object is considered\r\n\t *                   changed.\r\n\t */\r\n\tpublic unlock()\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn;\r\n\r\n\t\tthis._locked = false;\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0); // at coords 0,0\r\n\t\t\tthis._imageData[i] = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {ImageData}\r\n\t */\r\n\tpublic getImageData(side:number):ImageData\r\n\t{\r\n\t\tif (!this._locked)\r\n\t\t\treturn this._context[side].getImageData(0, 0, this._size, this._size);\r\n\r\n\t\treturn this._imageData[side];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {HTMLCanvasElement}\r\n\t */\r\n\tpublic getCanvas(side:number):HTMLCanvasElement\r\n\t{\r\n\t\treturn this._imageCanvas[side];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(size:number)\r\n\t{\r\n\t\tsuper._setSize(size);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++) {\r\n\t\t\tif (this._locked)\r\n\t\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0);\r\n\r\n\t\t\tthis._imageCanvas[i].width = size;\r\n\t\t\tthis._imageCanvas[i].height = size;\r\n\r\n\t\t\tif (this._locked)\r\n\t\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = BitmapImageCube;",
    "/**\r\n * A class that provides constant values for visual blend mode effects. These\r\n * constants are used in the following:\r\n * <ul>\r\n *   <li> The <code>blendMode</code> property of the\r\n * flash.display.DisplayObject class.</li>\r\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\r\n * method of the flash.display.BitmapData class</li>\r\n * </ul>\r\n */\r\nclass BlendMode\r\n{\r\n\t/**\r\n\t * Adds the values of the constituent colors of the display object to the\r\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\r\n\t * commonly used for animating a lightening dissolve between two objects.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\r\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\r\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\r\n\t */\r\n\tpublic static ADD:string = \"add\";\r\n\r\n\t/**\r\n\t * Applies the alpha value of each pixel of the display object to the\r\n\t * background. This requires the <code>blendMode</code> property of the\r\n\t * parent display object be set to\r\n\t * <code>away.base.BlendMode.LAYER</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static ALPHA:string = \"alpha\";\r\n\r\n\t/**\r\n\t * Selects the darker of the constituent colors of the display object and the\r\n\t * colors of the background(the colors with the smaller values). This\r\n\t * setting is commonly used for superimposing type.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\r\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static DARKEN:string = \"darken\";\r\n\r\n\t/**\r\n\t * Compares the constituent colors of the display object with the colors of\r\n\t * its background, and subtracts the darker of the values of the two\r\n\t * constituent colors from the lighter value. This setting is commonly used\r\n\t * for more vibrant colors.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\r\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\r\n\t */\r\n\tpublic static DIFFERENCE:string = \"difference\";\r\n\r\n\t/**\r\n\t * Erases the background based on the alpha value of the display object. This\r\n\t * process requires that the <code>blendMode</code> property of the parent\r\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static ERASE:string = \"erase\";\r\n\r\n\t/**\r\n\t * Adjusts the color of each pixel based on the darkness of the display\r\n\t * object. If the display object is lighter than 50% gray, the display object\r\n\t * and background colors are screened, which results in a lighter color. If\r\n\t * the display object is darker than 50% gray, the colors are multiplied,\r\n\t * which results in a darker color. This setting is commonly used for shading\r\n\t * effects.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static HARDLIGHT:string = \"hardlight\";\r\n\r\n\t/**\r\n\t * Inverts the background.\r\n\t */\r\n\tpublic static INVERT:string = \"invert\";\r\n\r\n\t/**\r\n\t * Forces the creation of a transparency group for the display object. This\r\n\t * means that the display object is precomposed in a temporary buffer before\r\n\t * it is processed further. The precomposition is done automatically if the\r\n\t * display object is precached by means of bitmap caching or if the display\r\n\t * object is a display object container that has at least one child object\r\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static LAYER:string = \"layer\";\r\n\r\n\t/**\r\n\t * Selects the lighter of the constituent colors of the display object and\r\n\t * the colors of the background(the colors with the larger values). This\r\n\t * setting is commonly used for superimposing type.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\r\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\r\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static LIGHTEN:string = \"lighten\";\r\n\r\n\t/**\r\n\t * Multiplies the values of the display object constituent colors by the\r\n\t * constituent colors of the background color, and normalizes by dividing by\r\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\r\n\t * shadows and depth effects.\r\n\t *\r\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\r\n\t * display object and the corresponding color of the pixel in the background\r\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\r\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\r\n\t * shade than the color of the display object or the color of the\r\n\t * background.</p>\r\n\t */\r\n\tpublic static MULTIPLY:string = \"multiply\";\r\n\r\n\t/**\r\n\t * The display object appears in front of the background. Pixel values of the\r\n\t * display object override the pixel values of the background. Where the\r\n\t * display object is transparent, the background is visible.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * Adjusts the color of each pixel based on the darkness of the background.\r\n\t * If the background is lighter than 50% gray, the display object and\r\n\t * background colors are screened, which results in a lighter color. If the\r\n\t * background is darker than 50% gray, the colors are multiplied, which\r\n\t * results in a darker color. This setting is commonly used for shading\r\n\t * effects.\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static OVERLAY:string = \"overlay\";\r\n\r\n\t/**\r\n\t * Multiplies the complement(inverse) of the display object color by the\r\n\t * complement of the background color, resulting in a bleaching effect. This\r\n\t * setting is commonly used for highlights or to remove black areas of the\r\n\t * display object.\r\n\t */\r\n\tpublic static SCREEN:string = \"screen\";\r\n\r\n\t/**\r\n\t * Uses a shader to define the blend between objects.\r\n\t *\r\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\r\n\t * automatically sets the display object's <code>blendMode</code> property to\r\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\r\n\t * set to <code>BlendMode.SHADER</code> without first setting the\r\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\r\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\r\n\t * <code>blendShader</code> property is set(which sets the\r\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\r\n\t * later the value of the <code>blendMode</code> property is changed, the\r\n\t * blend mode can be reset to use the blend shader simply by setting the\r\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\r\n\t * <code>blendShader</code> property does not need to be set again except to\r\n\t * change the shader that's used to define the blend mode.</p>\r\n\t *\r\n\t * <p>Not supported under GPU rendering.</p>\r\n\t */\r\n\tpublic static SHADER:string = \"shader\";\r\n\r\n\t/**\r\n\t * Subtracts the values of the constituent colors in the display object from\r\n\t * the values of the background color, applying a floor of 0. This setting is\r\n\t * commonly used for animating a darkening dissolve between two objects.\r\n\t *\r\n\t * <p>For example, if the display object has a pixel with an RGB value of\r\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\r\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\r\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\r\n\t */\r\n\tpublic static SUBTRACT:string = \"subtract\";\r\n}\r\n\r\nexport = BlendMode;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nclass Image2D extends ImageBase\r\n{\r\n\tpublic static assetType:string = \"[image Image2D]\";\r\n\r\n\tpublic _rect:Rectangle;\r\n\r\n\tprivate _powerOfTwo:boolean = true;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Image2D.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the image in pixels.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._rect.height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._rect.height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._setSize(this._rect.width, value);\r\n\t}\r\n\r\n\t/**\r\n\t * The rectangle that defines the size and location of the bitmap image. The\r\n\t * top and left of the rectangle are 0; the width and height are equal to the\r\n\t * width and height in pixels of the BitmapData object.\r\n\t */\r\n\tpublic get rect():Rectangle\r\n\t{\r\n\t\treturn this._rect;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the bitmap image in pixels.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._rect.width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._rect.width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._setSize(value, this._rect.height);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(width:number, height:number, powerOfTwo:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._rect = new Rectangle(0, 0, width, height);\r\n\t\tthis._powerOfTwo = powerOfTwo;\r\n\t\tthis._testDimensions();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tif (this._rect.width != width || this._rect.height != height)\r\n\t\t\tthis.invalidateSize();\r\n\r\n\t\tthis._rect.width = width;\r\n\t\tthis._rect.height = height;\r\n\r\n\t\tthis._testDimensions();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _testDimensions()\r\n\t{\r\n\t\tif (this._powerOfTwo && (!ImageUtils.isDimensionValid(this._rect.width) || !ImageUtils.isDimensionValid(this._rect.height)))\r\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\r\n\t}\r\n\r\n\t/**\r\n\t * Enable POT texture size validation\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic get powerOfTwo():boolean {\r\n\t\treturn this._powerOfTwo;\r\n\t}\r\n\r\n\tpublic set powerOfTwo(value:boolean) {\r\n\t\tif(this._powerOfTwo == value) return;\r\n\t\tthis._powerOfTwo = value;\r\n\t\tthis._testDimensions();\r\n\t}\r\n}\r\n\r\nexport = Image2D;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IImageObject\t\t\t\t= require(\"awayjs-core/lib/pool/IImageObject\");\r\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\n\r\nclass ImageBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _imageObject:Array<IImageObject> = new Array<IImageObject>();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._imageObject.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._imageObject[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._imageObject.length)\r\n\t\t\tthis._imageObject[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._imageObject.length)\r\n\t\t\tthis._imageObject[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddImageObject(ImageObject:IImageObject):IImageObject\r\n\t{\r\n\t\tthis._imageObject.push(ImageObject);\r\n\r\n\t\treturn ImageObject;\r\n\t}\r\n\r\n\tpublic _iRemoveImageObject(ImageObject:IImageObject):IImageObject\r\n\t{\r\n\t\tthis._imageObject.splice(this._imageObject.indexOf(ImageObject), 1);\r\n\r\n\t\treturn ImageObject;\r\n\t}\r\n}\r\n\r\nexport = ImageBase;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nclass ImageCube extends ImageBase\r\n{\r\n\tpublic static assetType:string = \"[image ImageCube]\";\r\n\r\n\tpublic _size:number;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn ImageCube.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube bitmap in pixels.\r\n\t */\r\n\tpublic get size():number\r\n\t{\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\tpublic set size(value:number)\r\n\t{\r\n\t\tif (this._size == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._setSize(this._size);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(size:number)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._size = size;\r\n\r\n\t\tthis._testDimensions();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(size:number)\r\n\t{\r\n\t\tif (this._size != size)\r\n\t\t\tthis.invalidateSize();\r\n\r\n\t\tthis._size = size;\r\n\r\n\t\tthis._testDimensions();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _testDimensions()\r\n\t{\r\n\t\tif (!ImageUtils.isDimensionValid(this._size))\r\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\r\n\t}\r\n}\r\n\r\nexport = ImageCube;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\n/**\r\n * The Sampler2D class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Sampler2D()</code> constructor.\r\n *\r\n * <p>The <code>Sampler2D()</code> constructor allows you to create a Sampler2D\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Sampler2D object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Sampler2D object can share its Image2D reference among several Sampler2D\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Sampler2D objects that reference the same Image2D object,\r\n * multiple texture objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each texture\r\n * object instance.</p>\r\n\r\n */\r\nclass Sampler2D extends SamplerBase\r\n{\r\n\tpublic static assetType:string = \"[asset Sampler2D]\";\r\n\r\n\tprivate _offsetX:number = 0;\r\n\tprivate _offsetY:number = 0;\r\n\r\n\tprivate _scaleX:number = 1;\r\n\tprivate _scaleY:number = 1;\r\n\r\n\tprivate _rect:Rectangle;\r\n\tprivate _imageRect:Rectangle;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _repeat:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Sampler2D.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D;\r\n\r\n\t/**\r\n\t * Controls whether or not the Sampler2D object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\t//var pixelSnapping:PixelSnapping;\r\n\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get offsetX():number\r\n\t{\r\n\t\treturn this._offsetX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get offsetY():number\r\n\t{\r\n\t\treturn this._offsetY;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._scaleX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._scaleY;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\t//TODO: update dependencies\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get imageRect():Rectangle\r\n\t{\r\n\t\treturn this._imageRect;\r\n\t}\r\n\tpublic set imageRect(value:Rectangle)\r\n\t{\r\n\t\tif (this._imageRect == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._imageRect = value;\r\n\r\n\t\tthis._updateRect();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\tpublic set frameRect(value:Rectangle)\r\n\t{\r\n\t\tif (this._frameRect == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._frameRect = value;\r\n\r\n\t\tthis._updateRect();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rect():Rectangle\r\n\t{\r\n\t\treturn this._rect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param image2D\r\n\t * @param smoothing\r\n\t */\r\n\tconstructor(image2D:Image2D = null, repeat:boolean = false, smooth:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.image2D = image2D;\r\n\r\n\t\tthis.repeat = repeat;\r\n\t\tthis.smooth = smooth;\r\n\t\tthis.mipmap = mipmap;\r\n\r\n\t\tthis._updateRect();\r\n\t}\r\n\r\n\tprivate _updateRect()\r\n\t{\r\n\t\tif (this._imageRect)\r\n\t\t\tthis._rect = this._imageRect;\r\n\t\telse\r\n\t\t\tthis._rect = this.image2D.rect;\r\n\r\n\t\tif (this._imageRect) {\r\n\t\t\tthis._offsetX = this._imageRect.x/this.image2D.width;\r\n\t\t\tthis._offsetY = this._imageRect.y/this.image2D.height;\r\n\r\n\t\t\tthis._scaleX = this._imageRect.width/this.image2D.width;\r\n\t\t\tthis._scaleY = this._imageRect.height/this.image2D.height;\r\n\t\t} else {\r\n\t\t\tthis._offsetX = 0;\r\n\t\t\tthis._offsetY = 0;\r\n\r\n\t\t\tthis._scaleX = 1;\r\n\t\t\tthis._scaleY = 1;\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\nexport = Sampler2D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n *\r\n */\r\nclass SamplerBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _smooth:boolean;\r\n\tprivate _mipmap:boolean;\r\n\r\n\tpublic _pFormat:string = \"bgra\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\t//TODO: update dependencies\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\t//TODO: update dependencies\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get format():string\r\n\t{\r\n\t\treturn this._pFormat;\r\n\t}\r\n}\r\n\r\nexport = SamplerBase;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\n/**\r\n * The Bitmap class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Bitmap()</code> constructor.\r\n *\r\n * <p>The <code>Bitmap()</code> constructor allows you to create a Bitmap\r\n * object that contains a reference to a BitmapData object. After you create a\r\n * Bitmap object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Bitmap object can share its BitmapData reference among several Bitmap\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Bitmap objects that reference the same BitmapData object,\r\n * multiple texture objects can use the same complex BitmapData object without\r\n * incurring the memory overhead of a BitmapData object for each texture\r\n * object instance.</p>\r\n\r\n */\r\nclass SamplerCube extends SamplerBase\r\n{\r\n\tpublic static assetType:string = \"[asset SamplerCube]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SamplerCube.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The ImageCube object being referenced.\r\n\t */\r\n\tpublic imageCube:ImageCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @param bitmapData\r\n\t * @param smoothing\r\n\t */\r\n\tconstructor(imageCube:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.imageCube = imageCube;\r\n\t}\r\n}\r\n\r\nexport = SamplerCube;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageChannel\t\t= require(\"awayjs-core/lib/data/BitmapImageChannel\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\n/**\r\n *\r\n */\r\nclass SpecularImage2D extends Image2D\r\n{\r\n\tpublic static assetType:string = \"[asset SpecularImage2D]\";\r\n\r\n\tprivate _specularSource:BitmapImage2D;\r\n\tprivate _glossSource:BitmapImage2D;\r\n\tprivate _output:BitmapImage2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SpecularImage2D.assetType;\r\n\t}\r\n\r\n\tpublic get specularSource():BitmapImage2D\r\n\t{\r\n\t\treturn this._specularSource;\r\n\t}\r\n\r\n\tpublic set specularSource(value:BitmapImage2D)\r\n\t{\r\n\t\tif (this._specularSource == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularSource = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\r\n\t\tthis._testSize();\r\n\t}\r\n\r\n\r\n\tpublic get glossSource():BitmapImage2D\r\n\t{\r\n\t\treturn this._glossSource;\r\n\t}\r\n\r\n\tpublic set glossSource(value:BitmapImage2D)\r\n\t{\r\n\t\tif (this._glossSource == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._glossSource = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\r\n\t\tthis._testSize();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(specularSource:BitmapImage2D = null, glossSource:BitmapImage2D = null)\r\n\t{\r\n\t\tsuper(1, 1);\r\n\r\n\t\tthis._specularSource = specularSource;\r\n\t\tthis._glossSource = glossSource;\r\n\r\n\t\tthis._output = new BitmapImage2D(1, 1, false, 0xffffff);\r\n\r\n\t\tthis._testSize();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new SpecularImage2D object that is a clone of the original instance\r\n\t * with an exact copy of the contained bitmap.\r\n\t *\r\n\t * @return A new SpecularImage2D object that is identical to the original.\r\n\t */\r\n\tpublic clone():SpecularImage2D\r\n\t{\r\n\t\treturn new SpecularImage2D(this._specularSource, this._glossSource);\r\n\t}\r\n\r\n\t/**\r\n\t * Frees memory that is used to store the SpecularImage2D object.\r\n\t *\r\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\r\n\t * and height of the image are set to 0. All subsequent calls to methods or\r\n\t * properties of this SpecularImage2D instance fail, and an exception is thrown.\r\n\t * </p>\r\n\t *\r\n\t * <p><code>SpecularImage2D.dispose()</code> releases the memory occupied by the\r\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\r\n\t * memory). After using <code>SpecularImage2D.dispose()</code>, the SpecularImage2D\r\n\t * object is no longer usable and an exception may be thrown if\r\n\t * you call functions on the SpecularImage2D object. However,\r\n\t * <code>SpecularImage2D.dispose()</code> does not garbage collect the SpecularImage2D\r\n\t * object(approximately 128 bytes); the memory occupied by the actual\r\n\t * SpecularImage2D object is released at the time the SpecularImage2D object is\r\n\t * collected by the garbage collector.</p>\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._rect = null;\r\n\r\n\t\tthis._output.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {ImageData}\r\n\t */\r\n\tpublic getImageData():ImageData\r\n\t{\r\n\t\tvar origin:Point = new Point();\r\n\r\n\t\tthis._output.fillRect(this._rect, 0xffffff);\r\n\r\n\t\tif (this._glossSource)\r\n\t\t\tthis._output.copyChannel(this._glossSource, this._rect, origin, BitmapImageChannel.GREEN, BitmapImageChannel.GREEN);\r\n\r\n\t\tif (this._specularSource)\r\n\t\t\tthis._output.copyChannel(this._specularSource, this._rect, origin, BitmapImageChannel.RED, BitmapImageChannel.RED);\r\n\r\n\t\treturn this._output.getImageData();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {HTMLCanvasElement}\r\n\t */\r\n\tpublic getCanvas():HTMLCanvasElement\r\n\t{\r\n\t\treturn this._output.getCanvas();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param width\r\n\t * @param height\r\n\t * @private\r\n\t */\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tsuper._setSize(width, height);\r\n\r\n\t\tthis._output._setSize(width, height);\r\n\t}\r\n\r\n\tprivate _testSize()\r\n\t{\r\n\t\tvar w:number, h:number;\r\n\r\n\t\tif (this._specularSource) {\r\n\t\t\tw = this._specularSource.width;\r\n\t\t\th = this._specularSource.height;\r\n\t\t} else if (this._glossSource) {\r\n\t\t\tw = this._glossSource.width;\r\n\t\t\th = this._glossSource.height;\r\n\t\t} else {\r\n\t\t\tw = 1;\r\n\t\t\th = 1;\r\n\t\t}\r\n\r\n\t\tif (w != this._output.width && h != this._output.height) {\r\n\t\t\tthis._output.dispose();\r\n\t\t\tthis._output = new BitmapImage2D(w, h, false, 0xffffff);\r\n\t\t}\r\n\r\n\t\tthis._setSize(w, h);\r\n\t}\r\n}\r\n\r\nexport = SpecularImage2D;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n// TODO: Audio should probably be an interface containing play/stop/seek functionality\r\nclass WaveAudio extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset WaveAudio]\";\r\n\r\n\tprivate _audioCtx;\r\n\tprivate _buffer:ArrayBuffer;\r\n\tprivate _loop:boolean;\r\n\tprivate _source;\r\n\tprivate _volume:number = 1;\r\n\tprivate _gainNode;\r\n\tprivate _startTime:number = 0;\r\n\tprivate _currentTime:number = 0;\r\n\tprivate _isPlaying:boolean;\r\n\tprivate _duration:number = 0;\r\n\tprivate _onEndedDelegate : (event:any) => void;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn WaveAudio.assetType;\r\n\t}\r\n\r\n\tpublic get loop():boolean\r\n\t{\r\n\t\treturn this._source.loop;\r\n\t}\r\n\r\n\tpublic set loop(value:boolean)\r\n\t{\r\n\t\tif (this._loop == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._loop = value;\r\n\r\n\t\tif (this._source)\r\n\t\t\tthis._source.loop = this._loop;\r\n\t}\r\n\r\n\tpublic get volume():number\r\n\t{\r\n\t\treturn this._volume;\r\n\t}\r\n\r\n\tpublic set volume(value:number)\r\n\t{\r\n\t\tif (this._volume == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._volume = value;\r\n\r\n\t\tthis._gainNode.gain.value = this._volume;\r\n\t}\r\n\r\n\tpublic get currentTime():number\r\n\t{\r\n\t\tif (!this._isPlaying)\r\n\t\t\treturn this._currentTime;\r\n\r\n\t\treturn this._audioCtx.currentTime - this._startTime;\r\n\t}\r\n\r\n\tpublic set currentTime(value:number)\r\n\t{\r\n\t\tthis._currentTime = value;\r\n\r\n\t\tif (this._isPlaying) {\r\n\t\t\t//swap for new source\r\n\t\t\tvar source = this._audioCtx.createBufferSource();\r\n\t\t\tsource.buffer = this._source.buffer;\r\n\r\n\t\t\t//dispose of old source\r\n\t\t\tthis._source.disconnect();\r\n\t\t\tdelete this._source;\r\n\r\n\t\t\t//attach new source\r\n\t\t\tthis._source = source;\r\n\t\t\tthis._source.loop = this._loop;\r\n\t\t\tthis._source.connect(this._gainNode);\r\n\r\n\t\t\tthis._startTime = this._audioCtx.currentTime - this._currentTime;\r\n\t\t\tthis._source.start(this._audioCtx.currentTime, this._currentTime);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic get duration():number\r\n\t{\r\n\t\treturn this._duration; //TODO: extract this data independently\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(buffer:ArrayBuffer, audioCtx)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._buffer = buffer;\r\n\t\tthis._audioCtx = audioCtx;\r\n\r\n\t\tthis._gainNode = this._audioCtx.createGain();\r\n\t\tthis._gainNode.gain.value = this._volume;\r\n\r\n\t\tthis._gainNode.connect(this._audioCtx.destination);\r\n\r\n\t\tthis._onEndedDelegate = (event) => this.onEnded(event);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.stop();\r\n\r\n\t\tdelete this._audioCtx;\r\n\t\tthis._audioCtx = null;\r\n\t\tdelete this._buffer\r\n\t\tthis._buffer = null;\r\n\t}\r\n\r\n\tpublic play()\r\n\t{\r\n\t\tif (this._isPlaying)\r\n\t\t\treturn;\r\n\r\n\t\tthis._createSource();\r\n\t}\r\n\r\n\tpublic stop()\r\n\t{\r\n\t\tif (!this._isPlaying)\r\n\t\t\treturn;\r\n\r\n\t\tthis._isPlaying = false;\r\n\t\tthis._currentTime = this._audioCtx.currentTime - this._startTime;\r\n\r\n\t\tthis._source.stop(this._audioCtx.currentTime);\r\n\r\n\t\tthis._disposeSource();\r\n\t}\r\n\r\n\tpublic clone()\r\n\t{\r\n\t\treturn new WaveAudio(this._buffer, this._audioCtx);\r\n\t}\r\n\r\n\tpublic onLoadComplete(buffer)\r\n\t{\r\n\t\tthis._source.buffer = buffer;\r\n\t\tthis._duration = buffer.duration;\r\n\r\n\t\tthis._isPlaying = true;\r\n\r\n\t\tthis._startTime = this._audioCtx.currentTime - this._currentTime;\r\n\t\tthis._source.onended = this._onEndedDelegate;\r\n\t\tthis._source.start(this._audioCtx.currentTime, this._currentTime);\r\n\t}\r\n\r\n\tpublic onError(event)\r\n\t{\r\n\t}\r\n\r\n\tprivate _createSource()\r\n\t{\r\n\t\t//safeguard against multiple calls to play method\r\n\t\tif (this._source)\r\n\t\t\treturn;\r\n\r\n\t\t//create the source for this WaveAudio object\r\n\t\tthis._source = this._audioCtx.createBufferSource();\r\n\r\n\t\tthis._source.loop = this._loop;\r\n\t\tthis._source.connect(this._gainNode);\r\n\r\n\t\tthis._audioCtx.decodeAudioData(this._buffer, (buffer) => this.onLoadComplete(buffer), (event) => this.onError(event));\r\n\t}\r\n\r\n\tprivate _disposeSource()\r\n\t{\r\n\t\t//clear up\r\n\t\tthis._source.disconnect();\r\n\t\tdelete this._source;\r\n\t\tthis._source = null;\r\n\t}\r\n\r\n\tprivate onEnded(event):void\r\n\t{\r\n\t\tthis.stop();\r\n\r\n\t\tthis.dispatchEvent(new Event('ended'))\r\n\t}\r\n}\r\n\r\nexport = WaveAudio;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nclass AbstractMethodError extends Error\r\n{\r\n\t/**\r\n\t * Create a new AbstractMethodError.\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\r\n\t}\r\n}\r\n\r\nexport = AbstractMethodError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nclass ArgumentError extends Error\r\n{\r\n\t/**\r\n\t * Create a new ArgumentError.\r\n\t *\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"ArgumentError\", id);\r\n\t}\r\n}\r\n\r\nexport = ArgumentError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass DocumentError extends Error\r\n{\r\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\r\n\r\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\r\n\t{\r\n\t\tsuper(message, id);\r\n\t}\r\n}\r\n\r\nexport = DocumentError;",
    "class Error\r\n{\r\n\r\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\r\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\r\n\tprivate _name:string = '';  // Contains the name of the Error object.\r\n\r\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\r\n\t{\r\n\r\n\t\tthis._messsage = message;\r\n\t\tthis._name = name;\r\n\t\tthis._errorID = id;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get message():string\r\n\t{\r\n\r\n\t\treturn this._messsage;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set message(value:string)\r\n\t{\r\n\r\n\t\tthis._messsage = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get name():string\r\n\t{\r\n\r\n\t\treturn this._name;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set name(value:string)\r\n\t{\r\n\r\n\t\tthis._name = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get errorID():number\r\n\t{\r\n\r\n\t\treturn this._errorID;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = Error;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\r\n * by a concrete subclass.\r\n */\r\nclass PartialImplementationError extends Error\r\n{\r\n\t/**\r\n\t * Create a new AbstractMethodError.\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(dependency:string = '', id:number = 0)\r\n\t{\r\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\r\n\t}\r\n}\r\n\r\nexport = PartialImplementationError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\n/**\r\n * RangeError is thrown when an index is accessed out of range of the number of\r\n * available indices on an Array.\r\n */\r\nclass RangeError extends Error\r\n{\r\n\t/**\r\n\t * Create a new RangeError.\r\n\t *\r\n\t * @param message An optional message to override the default error message.\r\n\t * @param id The id of the error.\r\n\t */\r\n\tconstructor(message:string = null, id:number = 0)\r\n\t{\r\n\t\tsuper(message || \"RangeError\", id);\r\n\t}\r\n}\r\n\r\nexport = RangeError;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * @class away.events.AssetEvent\r\n */\r\nclass AssetEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ASSET_RENAME:string = 'assetRename';\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\r\n\r\n\tprivate _asset:IAsset;\r\n\tprivate _prevName:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(type:string, asset:IAsset = null, prevName:string = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._asset = asset;\r\n\t\tthis._prevName = prevName || (this._asset? this._asset.name : null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get asset():IAsset\r\n\t{\r\n\t\treturn this._asset;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetPrevName():string\r\n\t{\r\n\t\treturn this._prevName;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn <Event> new AssetEvent(this.type, this.asset, this.assetPrevName);\r\n\t}\r\n}\r\n\r\nexport = AssetEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Base class for dispatching events\r\n*\r\n* @class away.events.EventDispatcher\r\n*\r\n*/\r\nclass EventDispatcher\r\n{\r\n\tprivate listeners:Array<Array<Function>> = new Array<Array<Function>>();\r\n\tprivate target:any;\r\n\r\n\tconstructor(target:any = null)\r\n\t{\r\n\t\tthis.target = target || this;\r\n\t}\r\n\r\n\t/**\r\n\t * Add an event listener\r\n\t * @method addEventListener\r\n\t * @param {String} Name of event to add a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tif (this.listeners[ type ] === undefined)\r\n\t\t\tthis.listeners[ type ] = new Array<Function>();\r\n\r\n\t\tif (this.getEventListenerIndex(type, listener) === -1)\r\n\t\t\tthis.listeners[ type ].push(listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an event listener\r\n\t * @method removeEventListener\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tvar index:number = this.getEventListenerIndex(type, listener);\r\n\r\n\t\tif (index !== -1)\r\n\t\t\tthis.listeners[ type ].splice(index, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatch an event\r\n\t * @method dispatchEvent\r\n\t * @param {Event} Event to dispatch\r\n\t */\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\tvar listenerArray:Array<Function> = this.listeners[ event.type ];\r\n\r\n\t\tif (listenerArray !== undefined) {\r\n\t\t\tvar l:number = listenerArray.length;\r\n\r\n\t\t\tevent.target = this.target;\r\n\r\n\t\t\tfor (var i:number = 0; i < l; i++)\r\n\t\t\t\tlistenerArray[i](event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get Event Listener Index in array. Returns -1 if no listener is added\r\n\t * @method getEventListenerIndex\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tprivate getEventListenerIndex(type:string, listener:Function):number\r\n\t{\r\n\t\tif (this.listeners[ type ] !== undefined) {\r\n\t\t\tvar a:Array<Function> = this.listeners[ type ];\r\n\t\t\tvar l:number = a.length;\r\n\r\n\t\t\tfor (var i:number = 0; i < l; i++)\r\n\t\t\t\tif (listener == a[i])\r\n\t\t\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * check if an object has an event listener assigned to it\r\n\t * @method hasListener\r\n\t * @param {String} Name of event to remove a listener for\r\n\t * @param {Function} Callback function\r\n\t */\r\n\tpublic hasEventListener(type:string, listener?:Function):boolean\r\n\t{\r\n\t\tif (listener != null) {\r\n\t\t\treturn ( this.getEventListenerIndex(type, listener) !== -1 );\r\n\t\t} else {\r\n\t\t\tif (this.listeners[ type ] !== undefined)\r\n\t\t\t\treturn ( this.listeners[ type ].length > 0 );\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = EventDispatcher;",
    "class Event\r\n{\r\n\r\n\tpublic static COMPLETE:string = 'complete';\r\n\tpublic static OPEN:string = 'open';\r\n\r\n\tpublic static ENTER_FRAME:string = 'enterFrame';\r\n\tpublic static EXIT_FRAME:string = 'exitFrame';\r\n\r\n\r\n\tpublic static RESIZE:string = \"resize\";\r\n\tpublic static ERROR:string = \"error\";\r\n\tpublic static CHANGE:string = \"change\";\r\n\r\n\t/**\r\n\t * Type of event\r\n\t * @property type\r\n\t * @type String\r\n\t */\r\n\tpublic type:string = undefined;\r\n\r\n\t/**\r\n\t * Reference to target object\r\n\t * @property target\r\n\t * @type Object\r\n\t */\r\n\tpublic target:any = undefined;\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current event.\r\n\t * @return An exact duplicate of the current event.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new Event(this.type);\r\n\t}\r\n}\r\n\r\nexport = Event;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * @class away.events.HTTPStatusEvent\r\n */\r\nclass HTTPStatusEvent extends Event\r\n{\r\n\r\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\r\n\r\n\tpublic status:number;\r\n\r\n\tconstructor(type:string, status:number = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.status = status;\r\n\r\n\t}\r\n}\r\n\r\nexport = HTTPStatusEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass IOErrorEvent extends Event\r\n{\r\n\r\n\tpublic static IO_ERROR:string = \"ioError\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t}\r\n}\r\n\r\nexport = IOErrorEvent;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LoaderEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a resource and all of its dependencies is retrieved.\r\n\t */\r\n\tpublic static RESOURCE_COMPLETE:string = \"resourceComplete\";\r\n\r\n\tprivate _url:string;\r\n\tprivate _content:IAsset;\r\n\tprivate _assets:IAsset[];\r\n\r\n\t/**\r\n\t * Create a new LoaderEvent object.\r\n\t *\r\n\t * @param type The event type.\r\n\t * @param url The url of the loaded resource.\r\n\t * @param assets The assets of the loaded resource.\r\n\t */\r\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._url = url;\r\n\t\tthis._content = content;\r\n\t\tthis._assets = assets;\r\n\t}\r\n\r\n\t/**\r\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\r\n\t */\r\n\tpublic get content():IAsset\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The url of the loaded resource.\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n\r\n\t/**\r\n\t * The error string on loadError.\r\n\t */\r\n\tpublic get assets():IAsset[]\r\n\t{\r\n\t\treturn this._assets;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current event.\r\n\t * @return An exact duplicate of the current event.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn <Event> new LoaderEvent(this.type, this._url, this._content, this._assets);\r\n\t}\r\n}\r\n\r\nexport = LoaderEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ParserEvent extends Event\r\n{\r\n\tprivate _message:string;\r\n\r\n\t/**\r\n\t * Dispatched when parsing of an asset completed.\r\n\t */\r\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\r\n\r\n\t/**\r\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\r\n\t * incorrectly formatted.)\r\n\t */\r\n\tpublic static PARSE_ERROR:string = 'parseError';\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\r\n\t * This is an internal event that should rarely (if ever) be listened for by\r\n\t * external classes.\r\n\t */\r\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\r\n\r\n\r\n\tconstructor(type:string, message:string = '')\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._message = message;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\r\n\t */\r\n\tpublic get message():string\r\n\t{\r\n\t\treturn this._message;\r\n\t}\r\n\r\n\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new ParserEvent(this.type, this.message);\r\n\t}\r\n}\r\n\r\nexport = ParserEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ProgressEvent extends Event\r\n{\r\n\tpublic static PROGRESS:string = \"progress\";\r\n\r\n\tpublic bytesLoaded:number;\r\n\r\n\tpublic bytesTotal:number;\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = ProgressEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nclass ProjectionEvent extends Event\r\n{\r\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\r\n\r\n\tprivate _projection:IProjection;\r\n\r\n\tconstructor(type:string, projection:IProjection)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis._projection = projection;\r\n\t}\r\n\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n}\r\n\r\nexport = ProjectionEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass TimerEvent extends Event\r\n{\r\n\r\n\tpublic static TIMER:string = \"timer\";\r\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t}\r\n}\r\n\r\nexport = TimerEvent",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n/**\r\n * A Box object is an area defined by its position, as indicated by its\r\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\r\n * height and depth.\r\n *\r\n *\r\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n * <code>height</code> <code>depth</code> properties of the Box class are\r\n * independent of each other; changing the value of one property has no effect\r\n * on the others. However, the <code>right</code>, <code>bottom</code> and\r\n * <code>back</code> properties are integrally related to those six\r\n * properties. For example, if you change the value of the <code>right</code>\r\n * property, the value of the <code>width</code> property changes; if you\r\n * change the <code>bottom</code> property, the value of the\r\n * <code>height</code> property changes. </p>\r\n *\r\n * <p>The following methods and properties use Box objects:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Box()</code> constructor to create a\r\n * Box object.</p>\r\n *\r\n * <p><b>Note:</b> The Box class does not define a cubic Shape\r\n * display object.\r\n */\r\nclass Box\r\n{\r\n\tprivate _size:Vector3D;\r\n\tprivate _bottomRightBack:Vector3D;\r\n\tprivate _topLeftFront:Vector3D;\r\n\r\n\t/**\r\n\t * The height of the box, in pixels. Changing the <code>height</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The width of the box, in pixels. Changing the <code>width</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\r\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic depth:number;\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>x</code> property of a Box object has no\r\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>x</code> property is equal to the value of the\r\n\t * <code>left</code> property.</p>\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>y</code> property of a Box object has no\r\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>y</code> property is equal to the value of the\r\n\t * <code>top</code> property.</p>\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\r\n\t * Changing the value of the <code>z</code> property of a Box object has no\r\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties.\r\n\t *\r\n\t * <p>The value of the <code>z</code> property is equal to the value of the\r\n\t * <code>front</code> property.</p>\r\n\t */\r\n\tpublic z:number\r\n\r\n\t/**\r\n\t * The sum of the <code>z</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get back():number\r\n\t{\r\n\t\treturn this.z + this.depth;\r\n\t}\r\n\r\n\tpublic set back(val:number)\r\n\t{\r\n\t\tthis.depth = val - this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>y</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get bottom():number\r\n\t{\r\n\t\treturn this.y + this.height;\r\n\t}\r\n\r\n\tpublic set bottom(val:number)\r\n\t{\r\n\t\tthis.height = val - this.y;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Box object's bottom-right corner, determined by the\r\n\t * values of the <code>right</code> and <code>bottom</code> properties.\r\n\t */\r\n\tpublic get bottomRightBack():Vector3D\r\n\t{\r\n\t\tif (this._bottomRightBack == null)\r\n\t\t\tthis._bottomRightBack = new Vector3D();\r\n\r\n\t\tthis._bottomRightBack.x = this.x + this.width;\r\n\t\tthis._bottomRightBack.y = this.y + this.height;\r\n\t\tthis._bottomRightBack.z = this.z + this.depth;\r\n\r\n\t\treturn this._bottomRightBack;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\r\n\t * the <code>front</code> property of a Box object has no effect on the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\r\n\t * properties. However it does affect the <code>depth</code> property,\r\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\r\n\t * <code>depth</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get front():number\r\n\t{\r\n\t\treturn this.z;\r\n\t}\r\n\r\n\tpublic set front(val:number)\r\n\t{\r\n\t\tthis.depth += this.z - val;\r\n\t\tthis.z = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\r\n\t * <code>left</code> property of a Box object has no effect on the\r\n\t * <code>y</code> and <code>height</code> properties. However it does affect\r\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\r\n\t * does <i>not</i> affect the <code>width</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get left():number\r\n\t{\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\tpublic set left(val:number)\r\n\t{\r\n\t\tthis.width += this.x - val;\r\n\t\tthis.x = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>x</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic get right():number\r\n\t{\r\n\t\treturn this.x + this.width;\r\n\t}\r\n\r\n\tpublic set right(val:number)\r\n\t{\r\n\t\tthis.width = val - this.x;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the Box object, expressed as a Vector3D object with the\r\n\t * values of the <code>width</code>, <code>height</code> and\r\n\t * <code>depth</code> properties.\r\n\t */\r\n\tpublic get size():Vector3D\r\n\t{\r\n\t\tif (this._size == null)\r\n\t\t\tthis._size = new Vector3D();\r\n\r\n\t\tthis._size.x = this.width;\r\n\t\tthis._size.y = this.height;\r\n\t\tthis._size.z = this.depth;\r\n\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\r\n\t * the <code>top</code> property of a Box object has no effect on the\r\n\t * <code>x</code> and <code>width</code> properties. However it does affect\r\n\t * the <code>height</code> property, whereas changing the <code>y</code>\r\n\t * value does <i>not</i> affect the <code>height</code> property.\r\n\t *\r\n\t * <p>The value of the <code>top</code> property is equal to the value of the\r\n\t * <code>y</code> property.</p>\r\n\t */\r\n\tpublic get top():number\r\n\t{\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\tpublic set top(val:number)\r\n\t{\r\n\t\tthis.height += (this.y - val);\r\n\t\tthis.y = val;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Box object's top-left-front corner, determined by the\r\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\r\n\t */\r\n\tpublic get topLeftFront():Vector3D\r\n\t{\r\n\t\tif (this._topLeftFront == null)\r\n\t\t\tthis._topLeftFront = new Vector3D();\r\n\r\n\t\tthis._topLeftFront.x = this.x;\r\n\t\tthis._topLeftFront.y = this.y;\r\n\t\tthis._topLeftFront.z = this.z;\r\n\r\n\t\treturn this._topLeftFront;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Box object with the top-left-front corner specified by the\r\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\r\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\r\n\t * parameters. If you call this public without parameters, a box with\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\r\n\t *\r\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\r\n\t *               box.\r\n\t * @param width  The width of the box, in pixels.\r\n\t * @param height The height of the box, in pixels.\r\n\t * @param depth The depth of the box, in pixels.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.depth = depth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Box object with the same values for the <code>x</code>,\r\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\r\n\t * and <code>depth</code> properties as the original Box object.\r\n\t *\r\n\t * @return A new Box object with the same values for the <code>x</code>,\r\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t *         <code>height</code> and <code>depth</code> properties as the\r\n\t *         original Box object.\r\n\t */\r\n\tpublic clone():Box\r\n\t{\r\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified position is contained within the cubic\r\n\t * region defined by this Box object.\r\n\t *\r\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\r\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\r\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\r\n\t * @return A value of <code>true</code> if the Box object contains the\r\n\t *         specified position; otherwise <code>false</code>.\r\n\t */\r\n\tpublic contains(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified position is contained within the cubic\r\n\t * region defined by this Box object. This method is similar to the\r\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\r\n\t * object as a parameter.\r\n\t *\r\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\r\n\t *                 <i>z</i> coordinates.\r\n\t * @return A value of <code>true</code> if the Box object contains the\r\n\t *         specified position; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsPoint(position:Vector3D):boolean\r\n\t{\r\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the Box object specified by the <code>box</code>\r\n\t * parameter is contained within this Box object. A Box object is said to\r\n\t * contain another if the second Box object falls entirely within the\r\n\t * boundaries of the first.\r\n\t *\r\n\t * @param box The Box object being checked.\r\n\t * @return A value of <code>true</code> if the Box object that you specify\r\n\t *         is contained by this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsBox(box:Box):boolean\r\n\t{\r\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of box data from the source Box object into the calling\r\n\t * Box object.\r\n\t *\r\n\t * @param sourceBox The Box object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceBox:Box)\r\n\t{\r\n\t\tthis.x = sourceBox.x;\r\n\t\tthis.y = sourceBox.y;\r\n\t\tthis.z = sourceBox.z;\r\n\t\tthis.width = sourceBox.width;\r\n\t\tthis.height = sourceBox.height;\r\n\t\tthis.depth = sourceBox.depth;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toCompare</code>\r\n\t * parameter is equal to this Box object. This method compares the\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code> and <code>depth</code> properties of an object against\r\n\t * the same properties of this Box object.\r\n\t *\r\n\t * @param toCompare The box to compare to this Box object.\r\n\t * @return A value of <code>true</code> if the object has exactly the same\r\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\r\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\r\n\t *         properties as this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic equals(toCompare:Box):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Box object by the specified amounts, in\r\n\t * pixels. The center point of the Box object stays the same, and its\r\n\t * size increases to the left and right by the <code>dx</code> value, to\r\n\t * the top and the bottom by the <code>dy</code> value, and to\r\n\t * the front and the back by the <code>dz</code> value.\r\n\t *\r\n\t * @param dx The value to be added to the left and the right of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           width and position of the box:\r\n\t * @param dy The value to be added to the top and the bottom of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           height and position of the box:\r\n\t * @param dz The value to be added to the front and the back of the Box\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           depth and position of the box:\r\n\t */\r\n\tpublic inflate(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tthis.x -= dx/2;\r\n\t\tthis.y -= dy/2;\r\n\t\tthis.z -= dz/2;\r\n\t\tthis.width += dx/2;\r\n\t\tthis.height += dy/2;\r\n\t\tthis.depth += dz/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Box object. This method is similar to the\r\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\r\n\t * a parameter.\r\n\t *\r\n\t * <p>The following two code examples give the same result:</p>\r\n\t *\r\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\r\n\t *              increase the horizontal dimension of the Box object.\r\n\t *              The <code>y</code> property is used to increase the vertical\r\n\t *              dimension of the Box object.\r\n\t *              The <code>z</code> property is used to increase the\r\n\t *              longitudinal dimension of the Box object.\r\n\t */\r\n\tpublic inflatePoint(delta:Vector3D)\r\n\t{\r\n\t\tthis.x -= delta.x/2;\r\n\t\tthis.y -= delta.y/2;\r\n\t\tthis.z -= delta.z/2;\r\n\t\tthis.width += delta.x/2;\r\n\t\tthis.height += delta.y/2;\r\n\t\tthis.depth += delta.z/2;\r\n\t}\r\n\r\n\t/**\r\n\t * If the Box object specified in the <code>toIntersect</code> parameter\r\n\t * intersects with this Box object, returns the area of intersection\r\n\t * as a Box object. If the boxes do not intersect, this method returns an\r\n\t * empty Box object with its properties set to 0.\r\n\t *\r\n\t * @param toIntersect The Box object to compare against to see if it\r\n\t *                    intersects with this Box object.\r\n\t * @return A Box object that equals the area of intersection. If the\r\n\t *         boxes do not intersect, this method returns an empty Box\r\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\r\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\r\n\t *         <code>depth</code> properties set to 0.\r\n\t */\r\n\tpublic intersection(toIntersect:Box):Box\r\n\t{\r\n\t\tif (this.intersects(toIntersect)) {\r\n\t\t\tvar i:Box = new Box();\r\n\r\n\t\t\tif (this.x > toIntersect.x) {\r\n\t\t\t\ti.x = this.x;\r\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\r\n\r\n\t\t\t\tif (i.width > this.width)\r\n\t\t\t\t\ti.width = this.width;\r\n\t\t\t} else {\r\n\t\t\t\ti.x = toIntersect.x;\r\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\r\n\r\n\t\t\t\tif (i.width > toIntersect.width)\r\n\t\t\t\t\ti.width = toIntersect.width;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.y > toIntersect.y) {\r\n\t\t\t\ti.y = this.y;\r\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\r\n\r\n\t\t\t\tif (i.height > this.height)\r\n\t\t\t\t\ti.height = this.height;\r\n\t\t\t} else {\r\n\t\t\t\ti.y = toIntersect.y;\r\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\r\n\r\n\t\t\t\tif (i.height > toIntersect.height)\r\n\t\t\t\t\ti.height = toIntersect.height;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this.z > toIntersect.z) {\r\n\t\t\t\ti.z = this.z;\r\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\r\n\r\n\t\t\t\tif (i.depth > this.depth)\r\n\t\t\t\t\ti.depth = this.depth;\r\n\t\t\t} else {\r\n\t\t\t\ti.z = toIntersect.z;\r\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\r\n\r\n\t\t\t\tif (i.depth > toIntersect.depth)\r\n\t\t\t\t\ti.depth = toIntersect.depth;\r\n\t\t\t}\r\n\r\n\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn new Box();\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Box object. This method checks the\r\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\r\n\t * <code>height</code>, and <code>depth</code> properties of the specified\r\n\t * Box object to see if it intersects with this Box object.\r\n\t *\r\n\t * @param toIntersect The Box object to compare against this Box object.\r\n\t * @return A value of <code>true</code> if the specified object intersects\r\n\t *         with this Box object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic intersects(toIntersect:Box):boolean\r\n\t{\r\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif (this.containsPoint(position))\r\n\t\t\treturn 0;\r\n\r\n\t\tvar halfExtentsX:number = this.width/2;\r\n\t\tvar halfExtentsY:number = this.height/2;\r\n\t\tvar halfExtentsZ:number = this.depth/2;\r\n\r\n\t\tvar centerX:number = this.x + halfExtentsX;\r\n\t\tvar centerY:number = this.y + halfExtentsY;\r\n\t\tvar centerZ:number = this.z + halfExtentsZ;\r\n\r\n\t\tvar px:number = position.x - centerX;\r\n\t\tvar py:number = position.y - centerY;\r\n\t\tvar pz:number = position.z - centerZ;\r\n\r\n\t\tvar vx:number = direction.x\r\n\t\tvar vy:number = direction.y\r\n\t\tvar vz:number = direction.z;\r\n\r\n\t\tvar ix:number;\r\n\t\tvar iy:number;\r\n\t\tvar iz:number;\r\n\t\tvar rayEntryDistance:number;\r\n\r\n\t\t// ray-plane tests\r\n\t\tvar intersects:boolean;\r\n\t\tif (vx < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsX - px )/vx;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 1;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vx > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsX - px )/vx;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = -1;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vy < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsY - py )/vy;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 1;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vy > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsY - py )/vy;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiz = pz + rayEntryDistance*vz;\r\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = -1;\r\n\t\t\t\t\ttargetNormal.z = 0;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vz < 0) {\r\n\t\t\trayEntryDistance = ( halfExtentsZ - pz )/vz;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = 1;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!intersects && vz > 0) {\r\n\t\t\trayEntryDistance = ( -halfExtentsZ - pz )/vz;\r\n\t\t\tif (rayEntryDistance > 0) {\r\n\t\t\t\tix = px + rayEntryDistance*vx;\r\n\t\t\t\tiy = py + rayEntryDistance*vy;\r\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\r\n\t\t\t\t\ttargetNormal.x = 0;\r\n\t\t\t\t\ttargetNormal.y = 0;\r\n\t\t\t\t\ttargetNormal.z = -1;\r\n\t\t\t\t\tintersects = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn intersects? rayEntryDistance : -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\r\n\t *\r\n\t * @param point The point for which to find the closest point on the Box\r\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\r\n\t * @return\r\n\t */\r\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\r\n\t{\r\n\t\tvar p:number;\r\n\r\n\t\tif (target == null)\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\tp = point.x;\r\n\t\tif (p < this.x)\r\n\t\t\tp = this.x;\r\n\t\tif (p > this.x + this.width)\r\n\t\t\tp = this.x + this.width;\r\n\t\ttarget.x = p;\r\n\r\n\t\tp = point.y;\r\n\t\tif (p < this.y + this.height)\r\n\t\t\tp = this.y + this.height;\r\n\t\tif (p > this.y)\r\n\t\t\tp = this.y;\r\n\t\ttarget.y = p;\r\n\r\n\t\tp = point.z;\r\n\t\tif (p < this.z)\r\n\t\t\tp = this.z;\r\n\t\tif (p > this.z + this.depth)\r\n\t\t\tp = this.z + this.depth;\r\n\t\ttarget.z = p;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not this Box object is empty.\r\n\t *\r\n\t * @return A value of <code>true</code> if the Box object's width, height or\r\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\r\n\t */\r\n\tpublic isEmpty():boolean\r\n\t{\r\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Box object, as determined by its\r\n\t * top-left-front corner, by the specified amounts.\r\n\t *\r\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\r\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\r\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\r\n\t */\r\n\tpublic offset(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t\tthis.z += dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Box object using a Vector3D object as a\r\n\t * parameter. This method is similar to the <code>Box.offset()</code>\r\n\t * method, except that it takes a Vector3D object as a parameter.\r\n\t *\r\n\t * @param position A Vector3D object to use to offset this Box object.\r\n\t */\r\n\tpublic offsetPosition(position:Vector3D)\r\n\t{\r\n\t\tthis.x += position.x;\r\n\t\tthis.y += position.y;\r\n\t\tthis.z += position.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\r\n\t * width, height or depth is less than or equal to 0.\r\n\t *\r\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\r\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\r\n\t * <code>depth</code> properties to 0.</p>\r\n\t *\r\n\t */\r\n\tpublic setEmpty()\r\n\t{\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.z = 0;\r\n\t\tthis.width = 0;\r\n\t\tthis.height = 0;\r\n\t\tthis.depth = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Box to the specified values\r\n\t *\r\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\r\n\t *                box.\r\n\t * @param widtha  The width of the box, in pixels.\r\n\t * @param heighta The height of the box, in pixels.\r\n\t * @param deptha  The depth of the box, in pixels.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number)\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.z = za;\r\n\t\tthis.width = widtha;\r\n\t\tthis.height = heighta;\r\n\t\tthis.depth = deptha;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds and returns a string that lists the horizontal, vertical and\r\n\t * longitudinal positions and the width, height and depth of the Box object.\r\n\t *\r\n\t * @return A string listing the value of each of the following properties of\r\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\r\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Adds two boxes together to create a new Box object, by filling\r\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\r\n\t *\r\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\r\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\r\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\r\n\t *\r\n\t * @param toUnion A Box object to add to this Box object.\r\n\t * @return A new Box object that is the union of the two boxes.\r\n\t */\r\n\tpublic union(toUnion:Box):Box\r\n\t{\r\n\t\tvar u:Box = new Box();\r\n\r\n\t\tif (this.x < toUnion.x) {\r\n\t\t\tu.x = this.x;\r\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\r\n\r\n\t\t\tif (u.width < this.width)\r\n\t\t\t\tu.width = this.width;\r\n\t\t} else {\r\n\t\t\tu.x = toUnion.x;\r\n\t\t\tu.width = this.x - toUnion.x + this.width;\r\n\r\n\t\t\tif (u.width < toUnion.width)\r\n\t\t\t\tu.width = toUnion.width;\r\n\t\t}\r\n\r\n\t\tif (this.y < toUnion.y) {\r\n\t\t\tu.y = this.y;\r\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\r\n\r\n\t\t\tif (u.height < this.height)\r\n\t\t\t\tu.height = this.height;\r\n\t\t} else {\r\n\t\t\tu.y = toUnion.y;\r\n\t\t\tu.height = this.y - toUnion.y + this.height;\r\n\r\n\t\t\tif (u.height < toUnion.height)\r\n\t\t\t\tu.height = toUnion.height;\r\n\t\t}\r\n\r\n\t\tif (this.z < toUnion.z) {\r\n\t\t\tu.z = this.z;\r\n\t\t\tu.depth = toUnion.z - this.z + toUnion.depth;\r\n\r\n\t\t\tif (u.depth < this.depth)\r\n\t\t\t\tu.depth = this.depth;\r\n\t\t} else {\r\n\t\t\tu.z = toUnion.z;\r\n\t\t\tu.depth = this.z - toUnion.z + this.depth;\r\n\r\n\t\t\tif (u.depth < toUnion.depth)\r\n\t\t\t\tu.depth = toUnion.depth;\r\n\t\t}\r\n\r\n\t\treturn u;\r\n\t}\r\n}\r\n\r\nexport = Box;",
    "import ColorUtils\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\n\r\n/**\r\n * The ColorTransform class lets you adjust the color values in a display\r\n * object. The color adjustment or <i>color transformation</i> can be applied\r\n * to all four channels: red, green, blue, and alpha transparency.\r\n *\r\n * <p>When a ColorTransform object is applied to a display object, a new value\r\n * for each color channel is calculated like this:</p>\r\n *\r\n * <ul>\r\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\r\n * <code>redOffset</code></li>\r\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\r\n * <code>greenOffset</code></li>\r\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\r\n * <code>blueOffset</code></li>\r\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\r\n * <code>alphaOffset</code></li>\r\n * </ul>\r\n *\r\n * <p>If any of the color channel values is greater than 255 after the\r\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\r\n *\r\n * <p>You can use ColorTransform objects in the following ways:</p>\r\n *\r\n * <ul>\r\n *   <li>In the <code>colorTransform</code> parameter of the\r\n * <code>colorTransform()</code> method of the BitmapData class</li>\r\n *   <li>As the <code>colorTransform</code> property of a Transform object\r\n * (which can be used as the <code>transform</code> property of a display\r\n * object)</li>\r\n * </ul>\r\n *\r\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\r\n * a ColorTransform object before you can call the methods of the\r\n * ColorTransform object.</p>\r\n *\r\n * <p>Color transformations do not apply to the background color of a movie\r\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\r\n * that are attached to the movie clip.</p>\r\n */\r\nclass ColorTransform\r\n{\r\n\t/**\r\n\t * A decimal value that is multiplied with the alpha transparency channel\r\n\t * value.\r\n\t *\r\n\t * <p>If you set the alpha transparency value of a display object directly by\r\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\r\n\t * affects the value of the <code>alphaMultiplier</code> property of that\r\n\t * display object's <code>transform.colorTransform</code> property.</p>\r\n\t */\r\n\tpublic alphaMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the alpha transparency channel\r\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\r\n\t * value.\r\n\t */\r\n    public alphaOffset:number;\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the blue channel value.\r\n\t */\r\n    public blueMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the blue channel value after it\r\n\t * has been multiplied by the <code>blueMultiplier</code> value.\r\n\t */\r\n    public blueOffset:number;\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the green channel value.\r\n\t */\r\n    public greenMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the green channel value after\r\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\r\n\t */\r\n    public greenOffset:number;\r\n\r\n\t/**\r\n\t * A decimal value that is multiplied with the red channel value.\r\n\t */\r\n    public redMultiplier:number;\r\n\r\n\t/**\r\n\t * A number from -255 to 255 that is added to the red channel value after it\r\n\t * has been multiplied by the <code>redMultiplier</code> value.\r\n\t */\r\n    public redOffset:number;\r\n\r\n\t/**\r\n\t * The RGB color value for a ColorTransform object.\r\n\t *\r\n\t * <p>When you set this property, it changes the three color offset values\r\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\r\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\r\n\t * multiplier values(<code>redMultiplier</code>,\r\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\r\n\t * alpha transparency multiplier and offset values do not change.</p>\r\n\t *\r\n\t * <p>When you pass a value for this property, use the format\r\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\r\n\t * hexadecimal digits that specify the offset of each color component. The 0x\r\n\t * tells the ActionScript compiler that the number is a hexadecimal\r\n\t * value.</p>\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn((this.redOffset << 16) | ( this.greenOffset << 8) | this.blueOffset);\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\r\n\r\n\t\tthis.redOffset = argb[1];  //(value >> 16) & 0xFF;\r\n\t\tthis.greenOffset = argb[2];  //(value >> 8) & 0xFF;\r\n\t\tthis.blueOffset = argb[3];  //value & 0xFF;\r\n\r\n\t\tthis.redMultiplier = 0;\r\n\t\tthis.greenMultiplier = 0;\r\n\t\tthis.blueMultiplier = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a ColorTransform object for a display object with the specified\r\n\t * color channel values and alpha values.\r\n\t *\r\n\t * @param redMultiplier   The value for the red multiplier, in the range from\r\n\t *                        0 to 1.\r\n\t * @param greenMultiplier The value for the green multiplier, in the range\r\n\t *                        from 0 to 1.\r\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\r\n\t *                        from 0 to 1.\r\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\r\n\t *                        the range from 0 to 1.\r\n\t * @param redOffset       The offset value for the red color channel, in the\r\n\t *                        range from -255 to 255.\r\n\t * @param greenOffset     The offset value for the green color channel, in\r\n\t *                        the range from -255 to 255.\r\n\t * @param blueOffset      The offset for the blue color channel value, in the\r\n\t *                        range from -255 to 255.\r\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\r\n\t *                        the range from -255 to 255.\r\n\t */\r\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\r\n\t{\r\n\t\tthis.redMultiplier = redMultiplier;\r\n\t\tthis.greenMultiplier = greenMultiplier;\r\n\t\tthis.blueMultiplier = blueMultiplier;\r\n\t\tthis.alphaMultiplier = alphaMultiplier;\r\n\t\tthis.redOffset = redOffset;\r\n\t\tthis.greenOffset = greenOffset;\r\n\t\tthis.blueOffset = blueOffset;\r\n\t\tthis.alphaOffset = alphaOffset;\r\n\t}\r\n\r\n    public clear()\r\n    {\r\n        this.redMultiplier = 1;\r\n        this.greenMultiplier = 1;\r\n        this.blueMultiplier = 1;\r\n        this.alphaMultiplier = 1;\r\n        this.redOffset = 0;\r\n        this.greenOffset = 0;\r\n        this.blueOffset = 0;\r\n        this.alphaOffset = 0;\r\n    }\r\n\r\n    public clone():ColorTransform\r\n    {\r\n        return new ColorTransform(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\r\n    }\r\n\r\n    public copyFrom(source:ColorTransform)\r\n    {\r\n        this.redMultiplier = source.redMultiplier;\r\n        this.greenMultiplier = source.greenMultiplier;\r\n        this.blueMultiplier = source.blueMultiplier;\r\n        this.alphaMultiplier = source.alphaMultiplier;\r\n        this.redOffset = source.redOffset;\r\n        this.greenOffset = source.greenOffset;\r\n        this.blueOffset = source.blueOffset;\r\n        this.alphaOffset = source.alphaOffset;\r\n    }\r\n\r\n    public copyTo(destination:ColorTransform)\r\n    {\r\n        destination.copyFrom(this);\r\n    }\r\n\r\n    public prepend(ct:ColorTransform)\r\n    {\r\n        this.redOffset += ct.redOffset * this.redMultiplier;\r\n        this.greenOffset += ct.greenOffset * this.greenMultiplier;\r\n        this.blueOffset += ct.blueOffset * this.blueMultiplier;\r\n        this.alphaOffset += ct.alphaOffset * this.alphaMultiplier;\r\n\r\n        this.redMultiplier *= ct.redMultiplier;\r\n        this.greenMultiplier *= ct.greenMultiplier;\r\n        this.blueMultiplier *= ct.blueMultiplier;\r\n        this.alphaMultiplier *= ct.alphaMultiplier;\r\n    }\r\n}\r\n\r\nexport = ColorTransform;",
    "/**\r\n* MathConsts provides some commonly used mathematical constants\r\n*/\r\nclass MathConsts\r\n{\r\n\t/**\r\n\t * The amount to multiply with when converting radians to degrees.\r\n\t */\r\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\r\n\r\n\t/**\r\n\t * The amount to multiply with when converting degrees to radians.\r\n\t */\r\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\r\n}\r\n\r\nexport = MathConsts;",
    "import Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n\r\n/**\r\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\r\n */\r\nclass Matrix3DUtils\r\n{\r\n\t/**\r\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\r\n\t */\r\n\tpublic static RAW_DATA_CONTAINER:Float32Array = new Float32Array(16);\r\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\r\n\r\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\r\n\r\n\t/**\r\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\r\n\t *\r\n\t * @param    quarternion    The quarterion object to convert.\r\n\t */\r\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar x:number = quarternion.x;\r\n\t\tvar y:number = quarternion.y;\r\n\t\tvar z:number = quarternion.z;\r\n\t\tvar w:number = quarternion.w;\r\n\r\n\t\tvar xx:number = x*x;\r\n\t\tvar xy:number = x*y;\r\n\t\tvar xz:number = x*z;\r\n\t\tvar xw:number = x*w;\r\n\r\n\t\tvar yy:number = y*y;\r\n\t\tvar yz:number = y*z;\r\n\t\tvar yw:number = y*w;\r\n\r\n\t\tvar zz:number = z*z;\r\n\t\tvar zw:number = z*w;\r\n\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\traw[0] = 1 - 2*(yy + zz);\r\n\t\traw[1] = 2*(xy + zw);\r\n\t\traw[2] = 2*(xz - yw);\r\n\t\traw[4] = 2*(xy - zw);\r\n\t\traw[5] = 1 - 2*(xx + zz);\r\n\t\traw[6] = 2*(yz + xw);\r\n\t\traw[8] = 2*(xz + yw);\r\n\t\traw[9] = 2*(yz - xw);\r\n\t\traw[10] = 1 - 2*(xx + yy);\r\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (m) {\r\n\t\t\tm.copyRawDataFrom(raw);\r\n\t\t\treturn m;\r\n\t\t} else\r\n\t\t\treturn new Matrix3D(raw);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the forward vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The forward vector\r\n\t */\r\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\r\n\t\tif (v === null) {\r\n\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\t}\r\n\r\n\t\tm.copyColumnTo(2, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the up vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The up vector\r\n\t */\r\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\tif (v === null) {\r\n\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\t}\r\n\r\n\t\tm.copyColumnTo(1, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\r\n\t * @param    m        The Matrix3D object to use to get the right vector\r\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\r\n\t * @return            The right vector\r\n\t */\r\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\r\n\t{\r\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\r\n\t\tif (v === null) {\r\n\r\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\t\t}\r\n\r\n\t\tm.copyColumnTo(0, v);\r\n\t\tv.normalize();\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\r\n\t */\r\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\r\n\t{\r\n\t\tvar r1:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar r2:Float32Array = m2.rawData;\r\n\t\tm1.copyRawDataTo(r1);\r\n\r\n\t\tfor (var i:number = 0; i < 16; ++i) {\r\n\t\t\tif (r1[i] != r2[i])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D)\r\n\t{\r\n\t\tvar dirN:Vector3D;\r\n\t\tvar upN:Vector3D;\r\n\t\tvar lftN:Vector3D;\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tlftN = dir.crossProduct(up);\r\n\t\tlftN.normalize();\r\n\r\n\t\tupN = lftN.crossProduct(dir);\r\n\t\tupN.normalize();\r\n\t\tdirN = dir.clone();\r\n\t\tdirN.normalize();\r\n\r\n\t\traw[0] = lftN.x;\r\n\t\traw[1] = upN.x;\r\n\t\traw[2] = -dirN.x;\r\n\t\traw[3] = 0.0;\r\n\r\n\t\traw[4] = lftN.y;\r\n\t\traw[5] = upN.y;\r\n\t\traw[6] = -dirN.y;\r\n\t\traw[7] = 0.0;\r\n\r\n\t\traw[8] = lftN.z;\r\n\t\traw[9] = upN.z;\r\n\t\traw[10] = -dirN.z;\r\n\t\traw[11] = 0.0;\r\n\r\n\t\traw[12] = -lftN.dotProduct(pos);\r\n\t\traw[13] = -upN.dotProduct(pos);\r\n\t\traw[14] = dirN.dotProduct(pos);\r\n\t\traw[15] = 1.0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n\r\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tif (target === null)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\r\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar ab2:number = -2*a*b;\r\n\t\tvar ac2:number = -2*a*c;\r\n\t\tvar bc2:number = -2*b*c;\r\n\t\t// reflection matrix\r\n\t\trawData[0] = 1 - 2*a*a;\r\n\t\trawData[4] = ab2;\r\n\t\trawData[8] = ac2;\r\n\t\trawData[12] = -2*a*d;\r\n\t\trawData[1] = ab2;\r\n\t\trawData[5] = 1 - 2*b*b;\r\n\t\trawData[9] = bc2;\r\n\t\trawData[13] = -2*b*d;\r\n\t\trawData[2] = ac2;\r\n\t\trawData[6] = bc2;\r\n\t\trawData[10] = 1 - 2*c*c;\r\n\t\trawData[14] = -2*c*d;\r\n\t\trawData[3] = 0;\r\n\t\trawData[7] = 0;\r\n\t\trawData[11] = 0;\r\n\t\trawData[15] = 1;\r\n\t\ttarget.copyRawDataFrom(rawData);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\r\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar d:number = raw[12];\r\n\t\tvar h:number = raw[13];\r\n\t\tvar l:number = raw[14];\r\n\t\tvar p:number = raw[15];\r\n\r\n\t\tvar x:number = vector.x;\r\n\t\tvar y:number = vector.y;\r\n\t\tvar z:number = vector.z;\r\n\t\tresult.x = a * x + b * y + c * z + d;\r\n\t\tresult.y = e * x + f * y + g * z + h;\r\n\t\tresult.z = i * x + j * y + k * z + l;\r\n\t\tresult.w = m * x + n * y + o * z + p;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar x:number = vector.x;\r\n\t\tvar y:number = vector.y;\r\n\t\tvar z:number = vector.z;\r\n\t\tresult.x = a * x + b * y + c * z;\r\n\t\tresult.y = e * x + f * y + g * z;\r\n\t\tresult.z = i * x + j * y + k * z;\r\n\t\tresult.w = m * x + n * y + o * z;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif(!result)\r\n\t\t\tresult = new Vector3D();\r\n\r\n\t\ttransform.copyColumnTo(3, result);\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>)\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\t\tvar a:number = raw[0];\r\n\t\tvar e:number = raw[1];\r\n\t\tvar i:number = raw[2];\r\n\t\tvar m:number = raw[3];\r\n\t\tvar b:number = raw[4];\r\n\t\tvar f:number = raw[5];\r\n\t\tvar j:number = raw[6];\r\n\t\tvar n:number = raw[7];\r\n\t\tvar c:number = raw[8];\r\n\t\tvar g:number = raw[9];\r\n\t\tvar k:number = raw[10];\r\n\t\tvar o:number = raw[11];\r\n\t\tvar outIndex:number = 0;\r\n\t\tvar length:number = vin.length;\r\n\t\tfor(var index:number = 0; index<length; index+=3) {\r\n\t\t\tvar x:number = vin[index];\r\n\t\t\tvar y:number = vin[index+1];\r\n\t\t\tvar z:number = vin[index+2];\r\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\r\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\r\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Matrix3DUtils;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Orientation3D\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\r\nimport Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\n\r\nclass Matrix3D\r\n{\r\n\t/**\r\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\r\n\t *\r\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\r\n\t * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\r\n\t */\r\n\tpublic rawData:Float32Array = new Float32Array(16);\r\n\r\n\tprivate static tempMatrix:Matrix3D = new Matrix3D();\r\n\tprivate static tempRawData:Float32Array = Matrix3D.tempMatrix.rawData;\r\n\r\n\t/**\r\n\t * Creates a Matrix3D object.\r\n\t */\r\n\tconstructor(v:Float32Array = null)\r\n\t{\r\n\t\tif (v != null && v.length == 16) {\r\n\t\t\tthis.copyRawDataFrom(v);\r\n\t\t} else {\r\n\t\t\tthis.identity();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\r\n\t */\r\n\tpublic append(lhs:Matrix3D)\r\n\t{\r\n\t\tvar lrd:Float32Array = lhs.rawData;\r\n\r\n\t\tvar m111:number = this.rawData[0];\r\n\t\tvar m112:number = this.rawData[1];\r\n\t\tvar m113:number = this.rawData[2];\r\n\t\tvar m114:number = this.rawData[3];\r\n\t\tvar m121:number = this.rawData[4];\r\n\t\tvar m122:number = this.rawData[5];\r\n\t\tvar m123:number = this.rawData[6];\r\n\t\tvar m124:number = this.rawData[7];\r\n\t\tvar m131:number = this.rawData[8];\r\n\t\tvar m132:number = this.rawData[9];\r\n\t\tvar m133:number = this.rawData[10];\r\n\t\tvar m134:number = this.rawData[11];\r\n\t\tvar m141:number = this.rawData[12];\r\n\t\tvar m142:number = this.rawData[13];\r\n\t\tvar m143:number = this.rawData[14];\r\n\t\tvar m144:number = this.rawData[15];\r\n\t\tvar m211:number = lrd[0];\r\n\t\tvar m212:number = lrd[1];\r\n\t\tvar m213:number = lrd[2];\r\n\t\tvar m214:number = lrd[3];\r\n\t\tvar m221:number = lrd[4];\r\n\t\tvar m222:number = lrd[5];\r\n\t\tvar m223:number = lrd[6];\r\n\t\tvar m224:number = lrd[7];\r\n\t\tvar m231:number = lrd[8];\r\n\t\tvar m232:number = lrd[9];\r\n\t\tvar m233:number = lrd[10];\r\n\t\tvar m234:number = lrd[11];\r\n\t\tvar m241:number = lrd[12];\r\n\t\tvar m242:number = lrd[13];\r\n\t\tvar m243:number = lrd[14];\r\n\t\tvar m244:number = lrd[15];\r\n\r\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\r\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\r\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\r\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\r\n\r\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\r\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\r\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\r\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\r\n\r\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\r\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\r\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\r\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\r\n\r\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\r\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\r\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\r\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental rotation to a Matrix3D object.\r\n\t */\r\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null )\r\n\t{\r\n\t\tthis.append(Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees));\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental skew change along the x, y, and z axes to a Matrix3D object.\r\n\t */\r\n\tpublic appendSkew(xSkew:number, ySkew:number, zSkew:number)\r\n\t{\r\n\t\tif(xSkew == 0 && ySkew == 0 && zSkew == 0) return;\r\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\r\n\t\traw[0] = 1;\r\n\t\traw[1] = 0;\r\n\t\traw[2] = 0;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = xSkew;\r\n\t\traw[5] = 1;\r\n\t\traw[6] = 0;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = ySkew;\r\n\t\traw[9] = zSkew;\r\n\t\traw[10] = 1;\r\n\t\traw[11] = 0;\r\n\r\n\t\traw[8] = 0;\r\n\t\traw[9] = 0;\r\n\t\traw[10] = 0;\r\n\t\traw[11] = 0;\r\n\r\n\t\traw[12] = 0;\r\n\t\traw[13] = 0;\r\n\t\traw[14] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tthis.append(Matrix3D.tempMatrix);\r\n\t\t//this.append(new Matrix3D([ 1.0, 0.0, 0.0, 0.0, xSkew, 1.0, 0.0, 0.0, ySkew, zSkew, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0 ]));\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\r\n\t */\r\n\tpublic appendScale(xScale:number, yScale:number, zScale:number)\r\n\t{\r\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\r\n\t\t\treturn;\r\n\r\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\r\n\r\n\t\traw[0] = xScale;\r\n\t\traw[1] = 0;\r\n\t\traw[2] = 0;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = 0;\r\n\t\traw[5] = yScale;\r\n\t\traw[6] = 0;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = 0;\r\n\t\traw[9] = 0;\r\n\t\traw[10] = zScale;\r\n\t\traw[11] = 0;\r\n\r\n\t\traw[12] = 0;\r\n\t\traw[13] = 0;\r\n\t\traw[14] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\t//this.append(new Matrix3D([ xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0 ]));\r\n\t\tthis.append(Matrix3D.tempMatrix);\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\r\n\t */\r\n\tpublic appendTranslation(x:number, y:number, z:number)\r\n\t{\r\n\t\tthis.rawData[12] += x;\r\n\t\tthis.rawData[13] += y;\r\n\t\tthis.rawData[14] += z;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\r\n\t */\r\n\tpublic clone():Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(this.rawData);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\r\n\t */\r\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (column) {\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\r\n\t */\r\n\tpublic copyColumnTo(column:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (column) {\r\n\t\t\tcase 0:\r\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\r\n\t */\r\n\tpublic copyFrom(sourceMatrix3D:Matrix3D)\r\n\t{\r\n\t\tvar sourceRaw:Float32Array = sourceMatrix3D.rawData;\r\n\t\tvar len:number = sourceRaw.length;\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tthis.rawData[c] = sourceRaw[c];\r\n\t}\r\n\r\n\tpublic copyRawDataFrom(vector:Float32Array, index:number = 0, transpose:boolean = false):void\r\n\t{\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\r\n\t\tvar len:number = vector.length - index;\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tthis.rawData[c] = vector[c + index];\r\n\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\t}\r\n\r\n\tpublic copyRawDataTo(vector:Float32Array, index:number = 0, transpose:boolean = false)\r\n\t{\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\r\n\t\tvar len:number = this.rawData.length;\r\n\t\tfor (var c:number = 0; c < len; c++)\r\n\t\t\tvector[c + index ] = this.rawData[c];\r\n\r\n\t\tif (transpose)\r\n\t\t\tthis.transpose();\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\r\n\t */\r\n\tpublic copyRowFrom(row:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (row) {\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\r\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\r\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\r\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\r\n\t */\r\n\tpublic copyRowTo(row:number, vector3D:Vector3D)\r\n\t{\r\n\t\tswitch (row) {\r\n\t\t\tcase 0:\r\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\r\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\r\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\r\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies this Matrix3D object into a destination Matrix3D object.\r\n\t */\r\n\tpublic copyToMatrix3D(dest:Matrix3D)\r\n\t{\r\n\t\tthis.copyRawDataTo(dest.rawData);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\r\n\t */\r\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\r\n\t{\r\n\t\tvar q:Quaternion;\r\n\r\n\t\t// Initial Tests - Not OK\r\n\r\n\t\tvar vec:Vector3D[] = [];\r\n\r\n\t\tvar colX:Vector3D = new Vector3D(this.rawData[0], this.rawData[1], this.rawData[2]);\r\n\t\tvar colY:Vector3D = new Vector3D(this.rawData[4], this.rawData[5], this.rawData[6]);\r\n\t\tvar colZ:Vector3D = new Vector3D(this.rawData[8], this.rawData[9], this.rawData[10]);\r\n\r\n\t\tvar pos:Vector3D = new Vector3D(this.rawData[12], this.rawData[13], this.rawData[14]);\r\n\t\tvar scale:Vector3D = new Vector3D();\r\n\t\tvar skew:Vector3D = new Vector3D();\r\n\r\n\t\t//compute X scale factor and normalise colX\r\n\t\tscale.x = colX.length;\r\n\t\tcolX.scaleBy(1/scale.x);\r\n\r\n\t\t//compute XY shear factor and make colY orthogonal to colX\r\n\t\tskew.x = colX.dotProduct(colY);\r\n\t\tcolY = Vector3D.combine(colY, colX, 1, -skew.x);\r\n\r\n\t\t//compute Y scale factor and normalise colY\r\n\t\tscale.y = colY.length;\r\n\t\tcolY.scaleBy(1/scale.y);\r\n\t\tskew.x /= scale.y;\r\n\r\n\t\t//compute XZ and YZ shears and make colZ orthogonal to colX and colY\r\n\t\tskew.y = colX.dotProduct(colZ);\r\n\t\tcolZ = Vector3D.combine(colZ, colX, 1, -skew.y);\r\n\t\tskew.z = colY.dotProduct(colZ);\r\n\t\tcolZ = Vector3D.combine(colZ, colY, 1, -skew.z);\r\n\r\n\t\t//compute Z scale and normalise colZ\r\n\t\tscale.z = colZ.length;\r\n\t\tcolZ.scaleBy(1/scale.z);\r\n\t\tskew.y /= scale.z;\r\n\t\tskew.z /= scale.z;\r\n\r\n\t\t//at this point, the matrix (in cols) is orthonormal\r\n\t\t//check for a coordinate system flip. If the determinant is -1, negate the z scaling factor\r\n\t\tif (colX.dotProduct(colY.crossProduct(colZ)) < 0) {\r\n\t\t\tscale.z = -scale.z;\r\n\t\t\tcolZ.x = -colZ.x;\r\n\t\t\tcolZ.y = -colZ.y;\r\n\t\t\tcolZ.z = -colZ.z;\r\n\t\t}\r\n\r\n\t\tvar rot = new Vector3D();\r\n\r\n\t\tswitch (orientationStyle) {\r\n\t\t\tcase Orientation3D.AXIS_ANGLE:\r\n\r\n\t\t\t\trot.w = Math.acos((colX.x + colY.y + colZ.z - 1)/2);\r\n\r\n\t\t\t\tvar len:number = Math.sqrt((colY.z - colZ.y)*(colY.z - colZ.y) + (colZ.x - colX.z)*(colZ.x - colX.z) + (colX.y - colY.x)*(colX.y - colY.x));\r\n\t\t\t\trot.x = (colY.z - colZ.y)/len;\r\n\t\t\t\trot.y = (colZ.x - colX.z)/len;\r\n\t\t\t\trot.z = (colX.y - colY.x)/len;\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase Orientation3D.QUATERNION:\r\n\r\n\t\t\t\tvar tr = colX.x + colY.y + colZ.z;\r\n\r\n\t\t\t\tif (tr > 0) {\r\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\r\n\r\n\t\t\t\t\trot.x = (colY.z - colZ.y)/(4*rot.w);\r\n\t\t\t\t\trot.y = (colZ.x - colX.z)/(4*rot.w);\r\n\t\t\t\t\trot.z = (colX.y - colY.x)/(4*rot.w);\r\n\t\t\t\t} else if ((colX.x > colY.y) && (colX.x > colZ.z)) {\r\n\t\t\t\t\trot.x = Math.sqrt(1 + colX.x - colY.y - colZ.z)/2;\r\n\r\n\t\t\t\t\trot.w = (colY.z - colZ.y)/(4*rot.x);\r\n\t\t\t\t\trot.y = (colX.y + colY.x)/(4*rot.x);\r\n\t\t\t\t\trot.z = (colZ.x + colX.z)/(4*rot.x);\r\n\t\t\t\t} else if (colY.y > colZ.z) {\r\n\t\t\t\t\trot.y = Math.sqrt(1 + colY.y - colX.x - colZ.z)/2;\r\n\r\n\t\t\t\t\trot.x = (colX.y + colY.x)/(4*rot.y);\r\n\t\t\t\t\trot.w = (colZ.x - colX.z)/(4*rot.y);\r\n\t\t\t\t\trot.z = (colY.z + colZ.y)/(4*rot.y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trot.z = Math.sqrt(1 + colZ.z - colX.x - colY.y)/2;\r\n\r\n\t\t\t\t\trot.x = (colZ.x + colX.z)/(4*rot.z);\r\n\t\t\t\t\trot.y = (colY.z + colZ.y)/(4*rot.z);\r\n\t\t\t\t\trot.w = (colX.y - colY.x)/(4*rot.z);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase Orientation3D.EULER_ANGLES:\r\n\r\n\t\t\t\trot.y = Math.asin(-colX.z);\r\n\r\n\t\t\t\t//var cos:number = Math.cos(rot.y);\r\n\r\n\t\t\t\tif (colX.z != 1 && colX.z != -1) {\r\n\t\t\t\t\trot.x = Math.atan2(colY.z, colZ.z);\r\n\t\t\t\t\trot.z = Math.atan2(colX.y, colX.x);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trot.z = 0;\r\n\t\t\t\t\trot.x = Math.atan2(colY.x, colY.y);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tvec.push(pos);\r\n\t\tvec.push(rot);\r\n\t\tvec.push(skew);\r\n\t\tvec.push(scale);\r\n\r\n\t\treturn vec;\r\n\t}\r\n\r\n\t/**\r\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\r\n\t * coordinate to another.\r\n\t */\r\n\tpublic deltaTransformVector(v:Vector3D):Vector3D\r\n\t{\r\n\t\tvar x:number = v.x;\r\n\t\tvar y:number = v.y;\r\n\t\tvar z:number = v.z;\r\n\r\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11]));\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the current matrix to an identity or unit matrix.\r\n\t */\r\n\tpublic identity()\r\n\t{\r\n\t\tthis.rawData[0] = 1;\r\n\t\tthis.rawData[1] = 0;\r\n\t\tthis.rawData[2] = 0;\r\n\t\tthis.rawData[3] = 0;\r\n\t\tthis.rawData[4] = 0;\r\n\t\tthis.rawData[5] = 1;\r\n\t\tthis.rawData[6] = 0;\r\n\t\tthis.rawData[7] = 0;\r\n\t\tthis.rawData[8] = 0;\r\n\t\tthis.rawData[9] = 0;\r\n\t\tthis.rawData[10] = 1;\r\n\t\tthis.rawData[11] = 0;\r\n\t\tthis.rawData[12] = 0;\r\n\t\tthis.rawData[13] = 0;\r\n\t\tthis.rawData[14] = 0;\r\n\t\tthis.rawData[15] = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\r\n\t */\r\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tfor (var i:number = 0; i < 16; ++i)\r\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\r\n\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\r\n\t */\r\n\tpublic interpolateTo(toMat:Matrix3D, percent:number)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 16; ++i)\r\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts the current matrix.\r\n\t */\r\n\tpublic invert():boolean\r\n\t{\r\n\t\tvar d = this.determinant;\r\n\t\tvar invertable:boolean = Math.abs(d) > 0.00000000001;\r\n\r\n\t\tif (invertable) {\r\n\t\t\td = 1/d;\r\n\t\t\tvar m11:number = this.rawData[0];\r\n\t\t\tvar m12:number = this.rawData[1];\r\n\t\t\tvar m13:number = this.rawData[2];\r\n\t\t\tvar m14:number = this.rawData[3];\r\n\t\t\tvar m21:number = this.rawData[4];\r\n\t\t\tvar m22:number = this.rawData[5];\r\n\t\t\tvar m23:number = this.rawData[6];\r\n\t\t\tvar m24:number = this.rawData[7];\r\n\t\t\tvar m31:number = this.rawData[8];\r\n\t\t\tvar m32:number = this.rawData[9];\r\n\t\t\tvar m33:number = this.rawData[10];\r\n\t\t\tvar m34:number = this.rawData[11];\r\n\t\t\tvar m41:number = this.rawData[12];\r\n\t\t\tvar m42:number = this.rawData[13];\r\n\t\t\tvar m43:number = this.rawData[14];\r\n\t\t\tvar m44:number = this.rawData[15];\r\n\r\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\r\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\r\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\r\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\r\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\r\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\r\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\r\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\r\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\r\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\r\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\r\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\r\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\r\n\t\t}\r\n\t\treturn invertable;\r\n\t}\r\n\r\n\t/* TODO implement pointAt\r\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\r\n\t {\r\n\t }\r\n\t */\r\n\r\n\t/**\r\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\r\n\t */\r\n\tpublic prepend(rhs:Matrix3D)\r\n\t{\r\n\t\tvar m111:number = rhs.rawData[0];\r\n\t\tvar m112:number = rhs.rawData[1];\r\n\t\tvar m113:number = rhs.rawData[2];\r\n\t\tvar m114:number = rhs.rawData[3];\r\n\t\tvar m121:number = rhs.rawData[4];\r\n\t\tvar m122:number = rhs.rawData[5];\r\n\t\tvar m123:number = rhs.rawData[6];\r\n\t\tvar m124:number = rhs.rawData[7];\r\n\t\tvar m131:number = rhs.rawData[8];\r\n\t\tvar m132:number = rhs.rawData[9];\r\n\t\tvar m133:number = rhs.rawData[10];\r\n\t\tvar m134:number = rhs.rawData[11];\r\n\t\tvar m141:number = rhs.rawData[12];\r\n\t\tvar m142:number = rhs.rawData[13];\r\n\t\tvar m143:number = rhs.rawData[14];\r\n\t\tvar m144:number = rhs.rawData[15];\r\n\r\n\t\tvar m211:number = this.rawData[0];\r\n\t\tvar m212:number = this.rawData[1];\r\n\t\tvar m213:number = this.rawData[2];\r\n\t\tvar m214:number = this.rawData[3];\r\n\t\tvar m221:number = this.rawData[4];\r\n\t\tvar m222:number = this.rawData[5];\r\n\t\tvar m223:number = this.rawData[6];\r\n\t\tvar m224:number = this.rawData[7];\r\n\t\tvar m231:number = this.rawData[8];\r\n\t\tvar m232:number = this.rawData[9];\r\n\t\tvar m233:number = this.rawData[10];\r\n\t\tvar m234:number = this.rawData[11];\r\n\t\tvar m241:number = this.rawData[12];\r\n\t\tvar m242:number = this.rawData[13];\r\n\t\tvar m243:number = this.rawData[14];\r\n\t\tvar m244:number = this.rawData[15];\r\n\r\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\r\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\r\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\r\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\r\n\r\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\r\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\r\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\r\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\r\n\r\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\r\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\r\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\r\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\r\n\r\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\r\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\r\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\r\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental rotation to a Matrix3D object.\r\n\t */\r\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null )\r\n\t{\r\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\r\n\r\n\t\t/*\r\n\t\t if ( pivot != null )\r\n\t\t {\r\n\t\t var p:Vector3D = pivot;\r\n\t\t m.appendTranslation( p.x, p.y, p.z );\r\n\t\t }\r\n\t\t */\r\n\t\tthis.prepend(m);\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\r\n\t */\r\n\tpublic prependScale(xScale:number, yScale:number, zScale:number)\r\n\t{\r\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\r\n\t\t\treturn;\r\n\r\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\r\n\r\n\t\traw[0] = xScale;\r\n\t\traw[1] = 0;\r\n\t\traw[2] = 0;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = 0;\r\n\t\traw[5] = yScale;\r\n\t\traw[6] = 0;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = 0;\r\n\t\traw[9] = 0;\r\n\t\traw[10] = zScale;\r\n\t\traw[11] = 0;\r\n\r\n\t\traw[12] = 0;\r\n\t\traw[13] = 0;\r\n\t\traw[14] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tthis.prepend(Matrix3D.tempMatrix);\r\n\t}\r\n\r\n\t/**\r\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\r\n\t */\r\n\tpublic prependTranslation(x:number, y:number, z:number)\r\n\t{\r\n\t\tvar m = new Matrix3D();\r\n\t\tm.position = new Vector3D(x, y, z);\r\n\t\tthis.prepend(m);\r\n\t}\r\n\r\n\t// TODO orientationStyle\r\n\t/**\r\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\r\n\t */\r\n\tpublic recompose(components:Vector3D[]):boolean\r\n\t{\r\n\t\tif (components.length < 3)\r\n\t\t\treturn false;\r\n\r\n\t\tthis.identity();\r\n\t\tvar scale:Vector3D = components[3];\r\n\t\tif(scale.x !=1 || scale.y != 1 || scale.z != 1) this.appendScale(scale.x, scale.y, scale.z);\r\n\r\n\t\tvar skew:Vector3D = components[2];\r\n\t\tif(skew.x !=0 || skew.y != 0 || skew.z != 0)\tthis.appendSkew(skew.x, skew.y, skew.z);\r\n\r\n\t\tvar angle:number;\r\n\t\tvar rotation:Vector3D = components[1];\r\n\t\tangle = -rotation.x;\r\n\t\tif(angle != 0){\r\n\t\t\tvar sin:number = Math.sin(angle);\r\n\t\t\tvar cos:number = Math.cos(angle);\r\n\t\t\tvar raw:Float32Array = Matrix3D.tempRawData;\r\n\t\t\traw[0] = 1;\r\n\t\t\traw[1] = 0;\r\n\t\t\traw[2] = 0;\r\n\t\t\traw[3] = 0;\r\n\r\n\t\t\traw[4] = 0;\r\n\t\t\traw[5] = cos;\r\n\t\t\traw[6] = -sin;\r\n\t\t\traw[7] = 0;\r\n\r\n\t\t\traw[8] = 0;\r\n\t\t\traw[9] = sin;\r\n\t\t\traw[10] = cos;\r\n\t\t\traw[11] = 0;\r\n\r\n\t\t\traw[12] = 0;\r\n\t\t\traw[13] = 0;\r\n\t\t\traw[14] = 0;\r\n\t\t\traw[15] = 0;\r\n\t\t\t//this.append(new Matrix3D([1, 0, 0, 0, 0, cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0 , 0]));\r\n\t\t\tthis.append(Matrix3D.tempMatrix);\r\n\t\t}\r\n\t\tangle = -rotation.y;\r\n\t\tif(angle != 0){\r\n\t\t\tsin = Math.sin(angle);\r\n\t\t\tcos = Math.cos(angle);\r\n\t\t\tvar raw:Float32Array = Matrix3D.tempRawData;\r\n\t\t\traw[0] = cos;\r\n\t\t\traw[1] = 0;\r\n\t\t\traw[2] = sin;\r\n\t\t\traw[3] = 0;\r\n\r\n\t\t\traw[4] = 0;\r\n\t\t\traw[5] = 1;\r\n\t\t\traw[6] = 0;\r\n\t\t\traw[7] = 0;\r\n\r\n\t\t\traw[8] = -sin;\r\n\t\t\traw[9] = 0;\r\n\t\t\traw[10] = cos;\r\n\t\t\traw[11] = 0;\r\n\r\n\t\t\traw[12] = 0;\r\n\t\t\traw[13] = 0;\r\n\t\t\traw[14] = 0;\r\n\t\t\traw[15] = 0;\r\n\t\t\tthis.append(Matrix3D.tempMatrix);\r\n\t\t\t//this.append(new Matrix3D([cos, 0, sin, 0, 0, 1, 0, 0, -sin, 0, cos, 0, 0, 0, 0, 0]));\r\n\t\t}\r\n\t\tangle = -rotation.z;\r\n\t\tif(angle != 0){\r\n\t\t\tsin = Math.sin(angle);\r\n\t\t\tcos = Math.cos(angle);\r\n\r\n\t\t\tvar raw:Float32Array = Matrix3D.tempRawData;\r\n\t\t\traw[0] = cos;\r\n\t\t\traw[1] = -sin;\r\n\t\t\traw[2] = 0;\r\n\t\t\traw[3] = 0;\r\n\r\n\t\t\traw[4] = sin;\r\n\t\t\traw[5] = cos;\r\n\t\t\traw[6] = 0;\r\n\t\t\traw[7] = 0;\r\n\r\n\t\t\traw[8] = 0;\r\n\t\t\traw[9] = 0;\r\n\t\t\traw[10] = 1;\r\n\t\t\traw[11] = 0;\r\n\r\n\t\t\traw[12] = 0;\r\n\t\t\traw[13] = 0;\r\n\t\t\traw[14] = 0;\r\n\t\t\traw[15] = 0;\r\n\t\t\tthis.append(Matrix3D.tempMatrix);\r\n\t\t\t//this.append(new Matrix3D([cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]));\r\n\t\t}\r\n\r\n\t\tthis.position = components[0];\r\n\t\tthis.rawData[15] = 1;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic transformVector(v:Vector3D, t:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (v == null)\r\n\t\t\treturn t || new Vector3D();\r\n\r\n\t\tvar x:number = v.x;\r\n\t\tvar y:number = v.y;\r\n\t\tvar z:number = v.z;\r\n\r\n\t\tif (!t)\r\n\t\t\tt = new Vector3D();\r\n\r\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\r\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\r\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\r\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15];\r\n\r\n\t\treturn t;\r\n\t}\r\n\r\n\tpublic transformBox(b:Box):Box\r\n\t{\r\n\t\tif (b == null)\r\n\t\t\treturn new Box();\r\n\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tmaxX = b.width + (minX = b.x);\r\n\t\tmaxY = b.height + (minY = b.y);\r\n\t\tmaxZ = b.depth + (minZ = b.z);\r\n\r\n\t\tvar box:Box = new Box();\r\n\r\n\t\t//TODO: take account of shear\r\n\t\tbox.width = maxX*this.rawData[0] + maxY*this.rawData[4] + maxZ*this.rawData[8] + this.rawData[12] - (box.x = minX*this.rawData[0] + minY*this.rawData[4] + minZ*this.rawData[8] + this.rawData[12]);\r\n\t\tbox.height = maxX*this.rawData[1] + maxY*this.rawData[5] + maxZ*this.rawData[9] + this.rawData[13] - (box.y = minX*this.rawData[1] + minY*this.rawData[5] + minZ*this.rawData[9] + this.rawData[13]);\r\n\t\tbox.depth = maxX*this.rawData[2] + maxY*this.rawData[6] + maxZ*this.rawData[10] + this.rawData[14] - (box.z = minX*this.rawData[2] + minY*this.rawData[6] + minZ*this.rawData[10] + this.rawData[14]);\r\n\r\n\t\treturn box;\r\n\t}\r\n\r\n\t/**\r\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\r\n\t */\r\n\tpublic transformVectors(vin:number[], vout:number[])\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\r\n\r\n\t\twhile (i + 3 <= vin.length) {\r\n\t\t\tx = vin[i];\r\n\t\t\ty = vin[i + 1];\r\n\t\t\tz = vin[i + 2];\r\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\r\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\r\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\r\n\t\t\ti += 3;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\r\n\t */\r\n\tpublic transpose()\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\r\n\t\tthis.copyRawDataTo(raw);\r\n\r\n\t\tthis.rawData[1] = raw[4];\r\n\t\tthis.rawData[2] = raw[8];\r\n\t\tthis.rawData[3] = raw[12];\r\n\t\tthis.rawData[4] = raw[1];\r\n\t\tthis.rawData[6] = raw[9];\r\n\t\tthis.rawData[7] = raw[13];\r\n\t\tthis.rawData[8] = raw[2];\r\n\t\tthis.rawData[9] = raw[6];\r\n\t\tthis.rawData[11] = raw[14];\r\n\t\tthis.rawData[12] = raw[3];\r\n\t\tthis.rawData[13] = raw[7];\r\n\t\tthis.rawData[14] = raw[11];\r\n\t}\r\n\r\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\r\n\t{\r\n\r\n\t\t// internal class use by rotations which have been tested\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tvar rad = degrees*( Math.PI/180 );\r\n\t\tvar c:number = Math.cos(rad);\r\n\t\tvar s:number = Math.sin(rad);\r\n\t\tvar t:number = 1 - c;\r\n\t\tvar tmp1:number, tmp2:number;\r\n\r\n\t\tm.rawData[0] = c + x*x*t;\r\n\t\tm.rawData[5] = c + y*y*t;\r\n\t\tm.rawData[10] = c + z*z*t;\r\n\r\n\t\ttmp1 = x*y*t;\r\n\t\ttmp2 = z*s;\r\n\t\tm.rawData[1] = tmp1 + tmp2;\r\n\t\tm.rawData[4] = tmp1 - tmp2;\r\n\t\ttmp1 = x*z*t;\r\n\t\ttmp2 = y*s;\r\n\t\tm.rawData[8] = tmp1 + tmp2;\r\n\t\tm.rawData[2] = tmp1 - tmp2;\r\n\t\ttmp1 = y*z*t;\r\n\t\ttmp2 = x*s;\r\n\t\tm.rawData[9] = tmp1 - tmp2;\r\n\t\tm.rawData[6] = tmp1 + tmp2;\r\n\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * [read-only] A Number that determines whether a matrix is invertible.\r\n\t */\r\n\tpublic get determinant():number\r\n\t{\r\n\t\treturn ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\r\n\t}\r\n\r\n\t/**\r\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\r\n\t * transformation's frame of reference.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.rawData[12], this.rawData[13], this.rawData[14]);\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis.rawData[12] = value.x;\r\n\t\tthis.rawData[13] = value.y;\r\n\t\tthis.rawData[14] = value.z;\r\n\t}\r\n\r\n\tpublic toFixed(decimalPlace:number):string\r\n\t{\r\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\r\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\r\n\t}\r\n}\r\n\r\nexport = Matrix3D;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\n\r\n/**\r\n * The Matrix class represents a transformation matrix that determines how to\r\n * map points from one coordinate space to another. You can perform various\r\n * graphical transformations on a display object by setting the properties of\r\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\r\n * property of a Transform object, and then applying that Transform object as\r\n * the <code>transform</code> property of the display object. These\r\n * transformation functions include translation(<i>x</i> and <i>y</i>\r\n * repositioning), rotation, scaling, and skewing.\r\n *\r\n * <p>Together these types of transformations are known as <i>affine\r\n * transformations</i>. Affine transformations preserve the straightness of\r\n * lines while transforming, so that parallel lines stay parallel.</p>\r\n *\r\n * <p>To apply a transformation matrix to a display object, you create a\r\n * Transform object, set its <code>matrix</code> property to the\r\n * transformation matrix, and then set the <code>transform</code> property of\r\n * the display object to the Transform object. Matrix objects are also used as\r\n * parameters of some methods, such as the following:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\r\n *   <li>The <code>beginBitmapFill()</code> method,\r\n * <code>beginGradientFill()</code> method, or\r\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\r\n * </ul>\r\n *\r\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\r\n * contents:</p>\r\n *\r\n * <p>In traditional transformation matrixes, the <code>u</code>,\r\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\r\n * The Matrix class can only operate in two-dimensional space, so it always\r\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\r\n * and that the property value <code>w</code> is 1.0. The effective values of\r\n * the matrix are as follows:</p>\r\n *\r\n * <p>You can get and set the values of all six of the other properties in a\r\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\r\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\r\n *\r\n * <p>The Matrix class supports the four major types of transformations:\r\n * translation, scaling, rotation, and skewing. You can set three of these\r\n * transformations by using specialized methods, as described in the following\r\n * table: </p>\r\n *\r\n * <p>Each transformation function alters the current matrix properties so\r\n * that you can effectively combine multiple transformations. To do this, you\r\n * call more than one transformation function before applying the matrix to\r\n * its display object target(by using the <code>transform</code> property of\r\n * that display object).</p>\r\n *\r\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\r\n * before you can call the methods of the Matrix object.</p>\r\n */\r\nclass Matrix\r\n{\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\r\n\t * when scaling or rotating an image.\r\n\t */\r\n\tpublic a:number;\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\r\n\t * when rotating or skewing an image.\r\n\t */\r\n\tpublic b:number;\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\r\n\t * when rotating or skewing an image.\r\n\t */\r\n\tpublic c:number;\r\n\r\n\t/**\r\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\r\n\t * when scaling or rotating an image.\r\n\t */\r\n\tpublic d:number;\r\n\r\n\t/**\r\n\t * The distance by which to translate each point along the <i>x</i> axis.\r\n\t */\r\n\tpublic tx:number;\r\n\r\n\t/**\r\n\t * The distance by which to translate each point along the <i>y</i> axis.\r\n\t */\r\n\tpublic ty:number;\r\n\r\n\t/**\r\n\t * Creates a new Matrix object with the specified parameters. In matrix\r\n\t * notation, the properties are organized like this:\r\n\t *\r\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\r\n\t * constructor, it creates an <i>identity matrix</i> with the following\r\n\t * values:</p>\r\n\t *\r\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\r\n\t *\r\n\t * @param a  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when scaling or rotating an image.\r\n\t * @param b  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when rotating or skewing an image.\r\n\t * @param c  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when rotating or skewing an image.\r\n\t * @param d  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when scaling or rotating an image..\r\n\t * @param tx The distance by which to translate each point along the <i>x</i>\r\n\t *           axis.\r\n\t * @param ty The distance by which to translate each point along the <i>y</i>\r\n\t *           axis.\r\n\t */\r\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\r\n\t{\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\r\n\t * copy of the contained object.\r\n\t *\r\n\t * @return A Matrix object.\r\n\t */\r\n\tpublic clone():Matrix\r\n\t{\r\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\r\n\t}\r\n\r\n\t/**\r\n\t * Concatenates a matrix with the current matrix, effectively combining the\r\n\t * geometric effects of the two. In mathematical terms, concatenating two\r\n\t * matrixes is the same as combining them using matrix multiplication.\r\n\t *\r\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\r\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\r\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\r\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\r\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\r\n\t *\r\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\r\n\t * you want to concatenate two matrixes without altering either of the two\r\n\t * source matrixes, first copy the source matrix by using the\r\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\r\n\t *\r\n\t * @param matrix The matrix to be concatenated to the source matrix.\r\n\t */\r\n\tpublic concat(matrix:Matrix):void\r\n\t{\r\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\r\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\r\n\t\tthis.a = a1;\r\n\r\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\r\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\r\n\r\n\t\tthis.c = c1;\r\n\r\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\r\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\r\n\t\tthis.tx = tx1;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\r\n\t * object.\r\n\t *\r\n\t * @param column   The column from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (column > 2) {\r\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\r\n\t\t} else if (column == 0) {\r\n\t\t\tthis.a = vector3D.x;\r\n\t\t\tthis.c = vector3D.y;\r\n\t\t} else if (column == 1) {\r\n\t\t\tthis.b = vector3D.x;\r\n\t\t\tthis.d = vector3D.y;\r\n\t\t} else {\r\n\t\t\tthis.tx = vector3D.x;\r\n\t\t\tthis.ty = vector3D.y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific column of the calling Matrix object into the Vector3D\r\n\t * object. The w element of the Vector3D object will not be changed.\r\n\t *\r\n\t * @param column   The column from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (column > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (column == 0) {\r\n\t\t\tvector3D.x = this.a;\r\n\t\t\tvector3D.y = this.c;\r\n\t\t\tvector3D.z = 0;\r\n\t\t} else if (column == 1) {\r\n\t\t\tvector3D.x = this.b;\r\n\t\t\tvector3D.y = this.d;\r\n\t\t\tvector3D.z = 0;\r\n\t\t} else {\r\n\t\t\tvector3D.x = this.tx;\r\n\t\t\tvector3D.y = this.ty;\r\n\t\t\tvector3D.z = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of the matrix data from the source Point object into the\r\n\t * calling Matrix object.\r\n\t *\r\n\t * @param sourceMatrix The Matrix object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceMatrix:Matrix):void\r\n\t{\r\n\t\tthis.a = sourceMatrix.a;\r\n\t\tthis.b = sourceMatrix.b;\r\n\t\tthis.c = sourceMatrix.c;\r\n\t\tthis.d = sourceMatrix.d;\r\n\t\tthis.tx = sourceMatrix.tx;\r\n\t\tthis.ty = sourceMatrix.ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\r\n\t *\r\n\t * @param row      The row from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (row > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (row == 0) {\r\n\t\t\tthis.a = vector3D.x;\r\n\t\t\tthis.c = vector3D.y;\r\n\t\t} else if (row == 1) {\r\n\t\t\tthis.b = vector3D.x;\r\n\t\t\tthis.d = vector3D.y;\r\n\t\t} else {\r\n\t\t\tthis.tx = vector3D.x;\r\n\t\t\tthis.ty = vector3D.y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\r\n\t * The w element of the Vector3D object will not be changed.\r\n\t *\r\n\t * @param row      The row from which to copy the data from.\r\n\t * @param vector3D The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\r\n\t{\r\n\t\tif (row > 2) {\r\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\r\n\t\t} else if (row == 0) {\r\n\t\t\tvector3D.x = this.a;\r\n\t\t\tvector3D.y = this.b;\r\n\t\t\tvector3D.z = this.tx;\r\n\t\t} else if (row == 1) {\r\n\t\t\tvector3D.x = this.c;\r\n\t\t\tvector3D.y = this.d;\r\n\t\t\tvector3D.z = this.ty;\r\n\t\t} else {\r\n\t\t\tvector3D.setTo(0, 0, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Includes parameters for scaling, rotation, and translation. When applied\r\n\t * to a matrix it sets the matrix's values based on those parameters.\r\n\t *\r\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\r\n\t * matrix as you would if you applied the <code>identity()</code>,\r\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\r\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\r\n\t * 100, 100)</code> has the same effect as the following:</p>\r\n\t *\r\n\t * @param scaleX   The factor by which to scale horizontally.\r\n\t * @param scaleY   The factor by which scale vertically.\r\n\t * @param rotation The amount to rotate, in radians.\r\n\t * @param tx       The number of pixels to translate(move) to the right\r\n\t *                 along the <i>x</i> axis.\r\n\t * @param ty       The number of pixels to translate(move) down along the\r\n\t *                 <i>y</i> axis.\r\n\t */\r\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\r\n\t{\r\n\t\tthis.a = scaleX;\r\n\t\tthis.d = scaleY;\r\n\t\tthis.b = rotation;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the specific style of matrix expected by the\r\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\r\n\t * methods of the Graphics class. Width and height are scaled to a\r\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\r\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\r\n\t * height.\r\n\t *\r\n\t * <p>For example, consider a gradient with the following\r\n\t * characteristics:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li><code>GradientType.LINEAR</code></li>\r\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\r\n\t * 255]</code></li>\r\n\t *   <li><code>SpreadMethod.PAD</code></li>\r\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The following illustrations show gradients in which the matrix was\r\n\t * defined using the <code>createGradientBox()</code> method with different\r\n\t * parameter settings:</p>\r\n\t *\r\n\t * @param width    The width of the gradient box.\r\n\t * @param height   The height of the gradient box.\r\n\t * @param rotation The amount to rotate, in radians.\r\n\t * @param tx       The distance, in pixels, to translate to the right along\r\n\t *                 the <i>x</i> axis. This value is offset by half of the\r\n\t *                 <code>width</code> parameter.\r\n\t * @param ty       The distance, in pixels, to translate down along the\r\n\t *                 <i>y</i> axis. This value is offset by half of the\r\n\t *                 <code>height</code> parameter.\r\n\t */\r\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\r\n\t{\r\n\t\tthis.a = width/1638.4;\r\n\t\tthis.d = height/1638.4;\r\n\r\n\t\tif (rotation != 0.0) {\r\n\t\t\tvar cos = Math.cos(rotation);\r\n\t\t\tvar sin = Math.sin(rotation);\r\n\r\n\t\t\tthis.b = sin*this.d;\r\n\t\t\tthis.c = -sin*this.a;\r\n\t\t\tthis.a *= cos;\r\n\t\t\tthis.d *= cos;\r\n\t\t} else {\r\n\t\t\tthis.b = this.c = 0;\r\n\t\t}\r\n\r\n\t\tthis.tx = tx + width/2;\r\n\t\tthis.ty = ty + height/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a point in the pretransform coordinate space, returns the\r\n\t * coordinates of that point after the transformation occurs. Unlike the\r\n\t * standard transformation applied using the <code>transformPoint()</code>\r\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\r\n\t * does not consider the translation parameters <code>tx</code> and\r\n\t * <code>ty</code>.\r\n\t *\r\n\t * @param point The point for which you want to get the result of the matrix\r\n\t *              transformation.\r\n\t * @return The point resulting from applying the matrix transformation.\r\n\t */\r\n\tpublic deltaTransformPoint(point:Point):Point\r\n\t{\r\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets each matrix property to a value that causes a null transformation. An\r\n\t * object transformed by applying an identity matrix will be identical to the\r\n\t * original.\r\n\t *\r\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\r\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\r\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\r\n\t * <code>ty</code>=0.</p>\r\n\t *\r\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\r\n\t *\r\n\t */\r\n\tpublic identity():void\r\n\t{\r\n\t\tthis.a = 1;\r\n\t\tthis.b = 0;\r\n\t\tthis.c = 0;\r\n\t\tthis.d = 1;\r\n\t\tthis.tx = 0;\r\n\t\tthis.ty = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the opposite transformation of the original matrix. You can apply\r\n\t * an inverted matrix to an object to undo the transformation performed when\r\n\t * applying the original matrix.\r\n\t */\r\n\tpublic invert():void\r\n\t{\r\n\t\tvar norm = this.a*this.d - this.b*this.c;\r\n\r\n\t\tif (norm == 0) {\r\n\t\t\tthis.a = this.b = this.c = this.d = 0;\r\n\t\t\tthis.tx = -this.tx;\r\n\t\t\tthis.ty = -this.ty;\r\n\t\t} else {\r\n\t\t\tnorm = 1.0/norm;\r\n\t\t\tvar a1 = this.d*norm;\r\n\t\t\tthis.d = this.a*norm;\r\n\t\t\tthis.a = a1;\r\n\t\t\tthis.b *= -norm;\r\n\t\t\tthis.c *= -norm;\r\n\r\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\r\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\r\n\t\t\tthis.tx = tx1;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\r\n\t * copy of the contained object.\r\n\t *\r\n\t * @param matrix The matrix for which you want to get the result of the matrix\r\n\t *               transformation.\r\n\t * @return A Matrix object.\r\n\t */\r\n\tpublic multiply(matrix:Matrix):Matrix\r\n\t{\r\n\t\tvar result = new Matrix();\r\n\r\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\r\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\r\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\r\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\r\n\r\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\r\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a rotation transformation to the Matrix object.\r\n\t *\r\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\r\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\r\n\t * Matrix object. In matrix notation, this is the same as concatenating the\r\n\t * current matrix with the following:</p>\r\n\t *\r\n\t * @param angle The rotation angle in radians.\r\n\t */\r\n\tpublic rotate(angle:number):void\r\n\t{\r\n\t\tvar cos = Math.cos(angle);\r\n\t\tvar sin = Math.sin(angle);\r\n\r\n\t\tvar a1 = this.a*cos - this.b*sin;\r\n\t\tthis.b = this.a*sin + this.b*cos;\r\n\t\tthis.a = a1;\r\n\r\n\t\tvar c1 = this.c*cos - this.d*sin;\r\n\t\tthis.d = this.c*sin + this.d*cos;\r\n\t\tthis.c = c1;\r\n\r\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\r\n\t\tthis.ty = this.tx*sin + this.ty*cos;\r\n\t\tthis.tx = tx1;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\r\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\r\n\t * <code>sy</code>.\r\n\t *\r\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\r\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\r\n\t * is the same as concatenating the current matrix with the following\r\n\t * matrix:</p>\r\n\t *\r\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\r\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\r\n\t */\r\n\tpublic scale(sx:number, sy:number):void\r\n\t{\r\n\t\tthis.a *= sx;\r\n\t\tthis.b *= sy;\r\n\r\n\t\tthis.c *= sx;\r\n\t\tthis.d *= sy;\r\n\r\n\t\tthis.tx *= sx;\r\n\t\tthis.ty *= sy;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Matrix to the specified values.\r\n\t *\r\n\t * @param a  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when scaling or rotating an image.\r\n\t * @param b  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when rotating or skewing an image.\r\n\t * @param c  The value that affects the positioning of pixels along the\r\n\t *           <i>x</i> axis when rotating or skewing an image.\r\n\t * @param d  The value that affects the positioning of pixels along the\r\n\t *           <i>y</i> axis when scaling or rotating an image..\r\n\t * @param tx The distance by which to translate each point along the <i>x</i>\r\n\t *           axis.\r\n\t * @param ty The distance by which to translate each point along the <i>y</i>\r\n\t *           axis.\r\n\t */\r\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\r\n\t{\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a text value listing the properties of the Matrix object.\r\n\t *\r\n\t * @return A string containing the values of the properties of the Matrix\r\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\r\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the result of applying the geometric transformation represented by\r\n\t * the Matrix object to the specified point.\r\n\t *\r\n\t * @param point The point for which you want to get the result of the Matrix\r\n\t *              transformation.\r\n\t * @return The point resulting from applying the Matrix transformation.\r\n\t */\r\n\tpublic transformPoint(point:Point):Point\r\n\t{\r\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\r\n\t}\r\n\r\n\t/**\r\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\r\n\t * by the <code>dx</code> and <code>dy</code> parameters.\r\n\t *\r\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\r\n\t *           pixels.\r\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\r\n\t */\r\n\tpublic translate(dx:number, dy:number):void\r\n\t{\r\n\t\tthis.tx += dx;\r\n\t\tthis.ty += dy;\r\n\t}\r\n}\r\n\r\nexport = Matrix;",
    "/**\r\n * A Quaternion object which can be used to represent rotations.\r\n */\r\nclass Orientation3D\r\n{\r\n\t/**\r\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\r\n\r\n\t/**\r\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\r\n\r\n\t/**\r\n\t * The quaternion orientation uses complex numbers.\r\n\t * @type {string}\r\n\t */\r\n\tpublic static QUATERNION:string = \"quaternion\";\r\n}\r\n\r\nexport = Orientation3D;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\n/**\r\n * <p>The PerspectiveProjection class provides an easy way to assign or modify\r\n * the perspective transformations of a display object and all of its\r\n * children. For more complex or custom perspective transformations, use the\r\n * Matrix3D class. While the PerspectiveProjection class provides basic\r\n * three-dimensional presentation properties, the Matrix3D class provides more\r\n * detailed control over the three-dimensional presentation of display objects.\r\n * </p>\r\n *\r\n * <p>Projection is a way of representing a three-dimensional object in a\r\n * two-dimensional space, like a cube projected onto a computer screen.\r\n * Perspective projection uses a viewing frustum (a rectangular pyramid) to\r\n * model and project a three-dimensional world and its objects on the screen.\r\n * The viewing frustum becomes increasingly wider as it moves further from the\r\n * origin of the viewpoint. The origin of the viewpoint could be a camera or\r\n * the eyes of an observer facing the screen. The projected perspective\r\n * produces the illusion of three dimensions with depth and distance, where\r\n * the objects closer to the screen appear larger than the objects farther\r\n * from the screen.</p>\r\n *\r\n * <p>A default PerspectiveProjection object is a framework defined for\r\n * perspective transformation of the root object, based on the field of view\r\n * and aspect ratio (dimensions) of the stage. The projection center, the\r\n * vanishing point, is set to the center of the stage, which means the\r\n * three-dimensional display objects disappear toward the center of the stage\r\n * as they move back in the z axis. The default viewpoint is at point (0,0)\r\n * looking down the positive z axis. The y-axis points down toward the bottom\r\n * of the screen. You can gain access to the root display object's perspective\r\n * projection settings and change the field of view and projection center\r\n * properties of the perspectiveProjection property through the root object's\r\n * <code>DisplayObject.transform</code> property.</p>\r\n *\r\n * <p>You can also set a different perspective projection setting for a\r\n * display object through the parent's perspective projection. First, create a\r\n * PerspectiveProjection object and set its <code>fieldOfView</code> and\r\n * <code>projectionCenter</code> properties. Next, assign the\r\n * PerspectiveProjection object to the parent display object using the\r\n * <code>DisplayObject.transform</code> property. The specified projection\r\n * matrix and transformation will then apply to all the display object's\r\n * three-dimensional children.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass PerspectiveProjection\r\n{\r\n\tprivate _matrix3D:Matrix3D;\r\n\r\n\t/**\r\n\t * Specifies an angle, as a degree between 0 and 180, for the field of\r\n\t * view in three dimensions. This value determines how strong the\r\n\t * perspective transformation and distortion apply to a\r\n\t * three-dimensional display object with a non-zero z-coordinate.\r\n\t *\r\n\t * <p>A degree close to 0 means that the screen's two-dimensional x-\r\n\t * and y-coordinates are roughly the same as the three-dimensional x-,\r\n\t * y-, and z-coordinates with little or no distortion. In other words,\r\n\t * for a small angle, a display object moving down the z axis appears\r\n\t * to stay near the same size and moves little.</p>\r\n\t *\r\n\t * <p>A value close to 180 degrees results in a fisheye projection effect:\r\n\t * positions with a z value smaller than 0 are magnified, while\r\n\t * positions with a z value larger than 0 are minimized. With a large\r\n\t * angle, a display object moving down the z axis appears to change\r\n\t * size quickly and moves a great distance. If the field of view is\r\n\t * set to 0 or 180, nothing is seen on the screen.</p>\r\n\t */\r\n\tpublic fieldOfView:number;\r\n\r\n\t/**\r\n\t * The distance between the eye or the viewpoint's origin (0,0,0) and\r\n\t * the display object located in the z axis. During the perspective\r\n\t * transformation, the <code>focalLength</code> is calculated\r\n\t * dynamically using the angle of the field of view and the stage's\r\n\t * aspect ratio (stage width divided by stage height).\r\n\t *\r\n\t * @see away.geom.PerspectiveProjection#fieldOfView\r\n\t */\r\n\tpublic focalLength:number;\r\n\r\n\t/**\r\n\t * A two-dimensional point representing the center of the projection,\r\n\t * the vanishing point for the display object.\r\n\t *\r\n\t * <p>The <code>projectionCenter</code> property is an offset to the\r\n\t * default registration point that is the upper left of the stage,\r\n\t * point (0,0). The default projection transformation center is in the\r\n\t * middle of the stage, which means the three-dimensional display\r\n\t * objects disappear toward the center of the stage as they move\r\n\t * backwards in the z axis.</p>\r\n\t */\r\n\tpublic projectionCenter:Point;\r\n\r\n\t/**\r\n\t * Creates an instance of a PerspectiveProjection object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t * Returns the underlying Matrix3D object of the display object.\r\n\t *\r\n\t * <p>A display object, like the root object, can have a\r\n\t * PerspectiveProjection object without needing a Matrix3D property\r\n\t * defined for its transformations. In fact, use either a\r\n\t * PerspectiveProjection or a Matrix3D object to specify the\r\n\t * perspective transformation. If when using the PerspectiveProjection\r\n\t * object, a Matrix3D object was needed, the <code>toMatrix3D()</code>\r\n\t * method can retrieve the underlying Matrix3D object of the display\r\n\t * object. For example, the <code>toMatrix3D()</code> method can be\r\n\t * used with the <code>Utils3D.projectVectors()</code> method.</p>\r\n\t *\r\n\t * @see away.geom.Matrix3D\r\n\t */\r\n\tpublic toMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._matrix3D;\r\n\t}\r\n}\r\n\r\nexport = PerspectiveProjection;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass Plane3D\r\n{\r\n\t/**\r\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\r\n\t */\r\n\tpublic a:number;\r\n\r\n\t/**\r\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\r\n\t */\r\n\tpublic b:number;\r\n\r\n\t/**\r\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\r\n\t */\r\n\tpublic c:number;\r\n\r\n\t/**\r\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\r\n\t */\r\n\tpublic d:number;\r\n\r\n\tpublic _iAlignment:number;\r\n\r\n\t// indicates the alignment of the plane\r\n\tpublic static ALIGN_ANY:number = 0;\r\n\tpublic static ALIGN_XY_AXIS:number = 1;\r\n\tpublic static ALIGN_YZ_AXIS:number = 2;\r\n\tpublic static ALIGN_XZ_AXIS:number = 3;\r\n\r\n\t/**\r\n\t * Create a Plane3D with ABCD coefficients\r\n\t */\r\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\r\n\t{\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\r\n\t\tif (a == 0 && b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (b == 0 && c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (a == 0 && c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\r\n\t * @param p0 Vector3D\r\n\t * @param p1 Vector3D\r\n\t * @param p2 Vector3D\r\n\t */\r\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D)\r\n\t{\r\n\t\tvar d1x:number = p1.x - p0.x;\r\n\t\tvar d1y:number = p1.y - p0.y;\r\n\t\tvar d1z:number = p1.z - p0.z;\r\n\r\n\t\tvar d2x:number = p2.x - p0.x;\r\n\t\tvar d2y:number = p2.y - p0.y;\r\n\t\tvar d2z:number = p2.z - p0.z;\r\n\r\n\t\tthis.a = d1y*d2z - d1z*d2y;\r\n\t\tthis.b = d1z*d2x - d1x*d2z;\r\n\t\tthis.c = d1x*d2y - d1y*d2x;\r\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\r\n\r\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\r\n\t\tif (this.a == 0 && this.b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (this.b == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (this.a == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\r\n\t * @param normal Vector3D\r\n\t * @param point  Vector3D\r\n\t */\r\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D)\r\n\t{\r\n\t\tthis.a = normal.x;\r\n\t\tthis.b = normal.y;\r\n\t\tthis.c = normal.z;\r\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\r\n\t\tif (this.a == 0 && this.b == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\r\n\r\n\t\t} else if (this.b == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\r\n\r\n\t\t} else if (this.a == 0 && this.c == 0) {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize this Plane3D\r\n\t * @return Plane3D This Plane3D.\r\n\t */\r\n\tpublic normalize():Plane3D\r\n\t{\r\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\r\n\t\tthis.a *= len;\r\n\t\tthis.b *= len;\r\n\t\tthis.c *= len;\r\n\t\tthis.d *= len;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the signed distance between this Plane3D and the point p.\r\n\t * @param p Vector3D\r\n\t * @returns Number\r\n\t */\r\n\tpublic distance(p:Vector3D):number\r\n\t{\r\n\r\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\r\n\r\n\t\t\treturn this.a*p.x - this.d;\r\n\r\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\r\n\t\t\treturn this.b*p.y - this.d;\r\n\t\t}\r\n\r\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\r\n\r\n\t\t\treturn this.c*p.z - this.d;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\r\n\t * @param p Vector3D\r\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\r\n\t */\r\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\r\n\t{\r\n\t\t// check NaN\r\n\t\tif (this.d != this.d)\r\n\t\t\treturn PlaneClassification.FRONT;\r\n\r\n\t\tvar len:number;\r\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\r\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\r\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\r\n\t\t\tlen = this.c*p.z - this.d; else\r\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\r\n\r\n\t\tif (len < -epsilon)\r\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\r\n\t\t\treturn PlaneClassification.FRONT; else\r\n\t\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\r\n\t}\r\n}\r\n\r\nexport = Plane3D;",
    "class PlaneClassification\r\n{\r\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\r\n\tpublic static BACK:number = 0;\r\n\tpublic static FRONT:number = 1;\r\n\r\n\tpublic static IN:number = 0;\r\n\tpublic static OUT:number = 1;\r\n\tpublic static INTERSECT:number = 2;\r\n\r\n}\r\n\r\nexport = PlaneClassification;",
    "/**\r\n * The Point object represents a location in a two-dimensional coordinate\r\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\r\n * represents the vertical axis.\r\n *\r\n * <p>The following code creates a point at(0,0):</p>\r\n *\r\n * <p>Methods and properties of the following classes use Point objects:</p>\r\n *\r\n * <ul>\r\n *   <li>BitmapData</li>\r\n *   <li>DisplayObject</li>\r\n *   <li>DisplayObjectContainer</li>\r\n *   <li>DisplacementMapFilter</li>\r\n *   <li>NativeWindow</li>\r\n *   <li>Matrix</li>\r\n *   <li>Rectangle</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Point()</code> constructor to create a Point\r\n * object.</p>\r\n */\r\nclass Point\r\n{\r\n\t/**\r\n\t * The horizontal coordinate of the point. The default value is 0.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate of the point. The default value is 0.\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The length of the line segment from(0,0) to this point.\r\n\t */\r\n\tpublic get length():number\r\n\t{\r\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new point. If you pass no parameters to this method, a point is\r\n\t * created at(0,0).\r\n\t *\r\n\t * @param x The horizontal coordinate.\r\n\t * @param y The vertical coordinate.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the coordinates of another point to the coordinates of this point to\r\n\t * create a new point.\r\n\t *\r\n\t * @param v The point to be added.\r\n\t * @return The new point.\r\n\t */\r\n\tpublic add(v:Point):Point\r\n\t{\r\n\t\treturn new Point(this.x + v.x, this.y + v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of this Point object.\r\n\t *\r\n\t * @return The new Point object.\r\n\t */\r\n\tpublic clone():Point\r\n\t{\r\n\t\treturn new Point(this.x, this.y);\r\n\t}\r\n\r\n\tpublic copyFrom(sourcePoint:Point)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether two points are equal. Two points are equal if they have\r\n\t * the same <i>x</i> and <i>y</i> values.\r\n\t *\r\n\t * @param toCompare The point to be compared.\r\n\t * @return A value of <code>true</code> if the object is equal to this Point\r\n\t *         object; <code>false</code> if it is not equal.\r\n\t */\r\n\tpublic equals(toCompare:Point):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the line segment between(0,0) and the current point to a set\r\n\t * length.\r\n\t *\r\n\t * @param thickness The scaling value. For example, if the current point is\r\n\t *                 (0,5), and you normalize it to 1, the point returned is\r\n\t *                  at(0,1).\r\n\t */\r\n\tpublic normalize(thickness:number = 1)\r\n\t{\r\n\t\tif (this.length != 0) {\r\n\t\t\tvar invLength = thickness/this.length;\r\n\t\t\tthis.x *= invLength;\r\n\t\t\tthis.y *= invLength;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthrow \"Cannot divide by zero length.\";\r\n\t}\r\n\r\n\t/**\r\n\t * Offsets the Point object by the specified amount. The value of\r\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\r\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\r\n\t * value of <i>y</i> to create the new <i>y</i> value.\r\n\t *\r\n\t * @param dx The amount by which to offset the horizontal coordinate,\r\n\t *           <i>x</i>.\r\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\r\n\t */\r\n\tpublic offset(dx:number, dy:number)\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t}\r\n\r\n\tpublic setTo(xa:number, ya:number)\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the coordinates of another point from the coordinates of this\r\n\t * point to create a new point.\r\n\t *\r\n\t * @param v The point to be subtracted.\r\n\t * @return The new point.\r\n\t */\r\n\tpublic subtract(v:Point):Point\r\n\t{\r\n\t\treturn new Point(this.x - v.x, this.y - v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\r\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\r\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\r\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\r\n\t *\r\n\t * @return The string representation of the coordinates.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\r\n\t *\r\n\t * @param pt1 The first point.\r\n\t * @param pt2 The second point.\r\n\t * @return The distance between the first and second points.\r\n\t */\r\n\tpublic static distance(pt1:Point, pt2:Point):number\r\n\t{\r\n\t\tvar dx:number = pt2.x - pt1.x;\r\n\t\tvar dy:number = pt2.y - pt1.y;\r\n\r\n\t\treturn Math.sqrt(dx*dx + dy*dy);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines a point between two specified points. The parameter\r\n\t * <code>f</code> determines where the new interpolated point is located\r\n\t * relative to the two end points specified by parameters <code>pt1</code>\r\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\r\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\r\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\r\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\r\n\t * point(parameter <code>pt2</code>).\r\n\t *\r\n\t * @param pt1 The first point.\r\n\t * @param pt2 The second point.\r\n\t * @param f   The level of interpolation between the two points. Indicates\r\n\t *            where the new point will be, along the line between\r\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\r\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\r\n\t *            <code>pt2</code> is returned.\r\n\t * @return The new, interpolated point.\r\n\t */\r\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\r\n\t{\r\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\r\n\t *\r\n\t * @param len   The length coordinate of the polar pair.\r\n\t * @param angle The angle, in radians, of the polar pair.\r\n\t * @return The Cartesian point.\r\n\t */\r\n\tpublic static polar(len:number, angle:number):Point\r\n\t{\r\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\r\n\t}\r\n}\r\n\r\nexport = Point;\r\n",
    "class PoissonLookup\r\n{\r\n\tpublic static _distributions:Array<Array<number>>;\r\n\r\n\tpublic static initDistributions():void\r\n\t{\r\n\t\t// precalculated for best control\r\n\t\tthis._distributions = new Array<Array<number>>();\r\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\r\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\r\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\r\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\r\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\r\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\r\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\r\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\r\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\r\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\r\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\r\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\r\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\r\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\r\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\r\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\r\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\r\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\r\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\r\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\r\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\r\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\r\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\r\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\r\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\r\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\r\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\r\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\r\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\r\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\r\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\r\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\r\n\t}\r\n\r\n\tpublic static getDistribution(n:number /*int*/):Array<number>\r\n\t{\r\n\t\tif (!this._distributions)\r\n\t\t\tthis.initDistributions();\r\n\r\n\t\tif (n < 2 || n > 32)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this._distributions[n - 1];\r\n\t}\r\n}\r\n\r\nexport = PoissonLookup;",
    "import Matrix3DUtils\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Orientation3D\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\r\nimport Matrix3D\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n/**\r\n * A Quaternion object which can be used to represent rotations.\r\n */\r\nclass Quaternion\r\n{\r\n\t/**\r\n\t * The x value of the quaternion.\r\n\t */\r\n\tpublic x:number = 0;\r\n\r\n\t/**\r\n\t * The y value of the quaternion.\r\n\t */\r\n\tpublic y:number = 0;\r\n\r\n\t/**\r\n\t * The z value of the quaternion.\r\n\t */\r\n\tpublic z:number = 0;\r\n\r\n\t/**\r\n\t * The w value of the quaternion.\r\n\t */\r\n\tpublic w:number = 1;\r\n\r\n\t/**\r\n\t * Creates a new Quaternion object.\r\n\t * @param x The x value of the quaternion.\r\n\t * @param y The y value of the quaternion.\r\n\t * @param z The z value of the quaternion.\r\n\t * @param w The w value of the quaternion.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the magnitude of the quaternion object.\r\n\t */\r\n\tpublic get magnitude():number\r\n\t{\r\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\r\n\t *\r\n\t * @param    qa    The first quaternion in the multiplication.\r\n\t * @param    qb    The second quaternion in the multiplication.\r\n\t */\r\n\tpublic multiply(qa:Quaternion, qb:Quaternion)\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\r\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\r\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\r\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\r\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\r\n\t}\r\n\r\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\r\n\t{\r\n\t\t//target ||= new Quaternion();\r\n\t\tif (target === null) {\r\n\t\t\ttarget = new Quaternion();\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar x2:number = vector.x;\r\n\t\tvar y2:number = vector.y;\r\n\t\tvar z2:number = vector.z;\r\n\r\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\r\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\r\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\r\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with values representing the given rotation around a vector.\r\n\t *\r\n\t * @param    axis    The axis around which to rotate\r\n\t * @param    angle    The angle in radians of the rotation.\r\n\t */\r\n\tpublic fromAxisAngle(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar sin_a:number = Math.sin(angle/2);\r\n\t\tvar cos_a:number = Math.cos(angle/2);\r\n\r\n\t\tthis.x = axis.x*sin_a;\r\n\t\tthis.y = axis.y*sin_a;\r\n\t\tthis.z = axis.z*sin_a;\r\n\t\tthis.w = cos_a;\r\n\r\n\t\tthis.normalize();\r\n\t}\r\n\r\n\t/**\r\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\r\n\t * @param qa The first quaternion to interpolate.\r\n\t * @param qb The second quaternion to interpolate.\r\n\t * @param t The interpolation weight, a value between 0 and 1.\r\n\t */\r\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number)\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\r\n\r\n\t\t// shortest direction\r\n\t\tif (dot < 0) {\r\n\t\t\tdot = -dot;\r\n\t\t\tw2 = -w2;\r\n\t\t\tx2 = -x2;\r\n\t\t\ty2 = -y2;\r\n\t\t\tz2 = -z2;\r\n\t\t}\r\n\r\n\t\tif (dot < 0.95) {\r\n\t\t\t// interpolate angle linearly\r\n\t\t\tvar angle:number = Math.acos(dot);\r\n\t\t\tvar s:number = 1/Math.sin(angle);\r\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\r\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\r\n\t\t\tthis.w = w1*s1 + w2*s2;\r\n\t\t\tthis.x = x1*s1 + x2*s2;\r\n\t\t\tthis.y = y1*s1 + y2*s2;\r\n\t\t\tthis.z = z1*s1 + z2*s2;\r\n\t\t} else {\r\n\t\t\t// nearly identical angle, interpolate linearly\r\n\t\t\tthis.w = w1 + t*(w2 - w1);\r\n\t\t\tthis.x = x1 + t*(x2 - x1);\r\n\t\t\tthis.y = y1 + t*(y2 - y1);\r\n\t\t\tthis.z = z1 + t*(z2 - z1);\r\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t\t\tthis.w *= len;\r\n\t\t\tthis.x *= len;\r\n\t\t\tthis.y *= len;\r\n\t\t\tthis.z *= len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolates between two quaternions.\r\n\t * @param qa The first quaternion to interpolate.\r\n\t * @param qb The second quaternion to interpolate.\r\n\t * @param t The interpolation weight, a value between 0 and 1.\r\n\t */\r\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number)\r\n\t{\r\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\r\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\r\n\t\tvar len:number;\r\n\r\n\t\t// shortest direction\r\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\r\n\t\t\tw2 = -w2;\r\n\t\t\tx2 = -x2;\r\n\t\t\ty2 = -y2;\r\n\t\t\tz2 = -z2;\r\n\t\t}\r\n\r\n\t\tthis.w = w1 + t*(w2 - w1);\r\n\t\tthis.x = x1 + t*(x2 - x1);\r\n\t\tthis.y = y1 + t*(y2 - y1);\r\n\t\tthis.z = z1 + t*(z2 - z1);\r\n\r\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t\tthis.w *= len;\r\n\t\tthis.x *= len;\r\n\t\tthis.y *= len;\r\n\t\tthis.z *= len;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills the quaternion object with values representing the given euler rotation.\r\n\t *\r\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\r\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\r\n\t * @param    az        The angle in radians of the rotation around the az axis.\r\n\t */\r\n\tpublic fromEulerAngles(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\r\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\r\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\r\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\r\n\r\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\r\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\r\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\r\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\r\n\t}\r\n\r\n\t/**\r\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\r\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\r\n\t * @return The Vector3D containing the Euler angles.\r\n\t */\r\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\r\n\t{\r\n\r\n\t\t//target ||= new Vector3D();\r\n\t\tif (target === null) {\r\n\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\t}\r\n\r\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\r\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\r\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalises the quaternion object.\r\n\t */\r\n\tpublic normalize(val:number = 1)\r\n\t{\r\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\r\n\r\n\t\tthis.x *= mag;\r\n\t\tthis.y *= mag;\r\n\t\tthis.z *= mag;\r\n\t\tthis.w *= mag;\r\n\t}\r\n\r\n\t/**\r\n\t * Used to trace the values of a quaternion.\r\n\t *\r\n\t * @return A string representation of the quaternion object.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\r\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\r\n\t * @return A Matrix3D object representing an equivalent rotation.\r\n\t */\r\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\r\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\r\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\r\n\r\n\t\trawData[0] = xx - yy - zz + ww;\r\n\t\trawData[4] = xy2 - zw2;\r\n\t\trawData[8] = xz2 + yw2;\r\n\t\trawData[12] = 0;\r\n\t\trawData[1] = xy2 + zw2;\r\n\t\trawData[5] = -xx + yy - zz + ww;\r\n\t\trawData[9] = yz2 - xw2;\r\n\t\trawData[13] = 0;\r\n\t\trawData[2] = xz2 - yw2;\r\n\t\trawData[6] = yz2 + xw2;\r\n\t\trawData[10] = -xx - yy + zz + ww;\r\n\t\trawData[14] = 0;\r\n\t\trawData[3] = 0.0;\r\n\t\trawData[7] = 0.0;\r\n\t\trawData[11] = 0;\r\n\t\trawData[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\treturn new Matrix3D(rawData);\r\n\t\telse\r\n\t\t\ttarget.copyRawDataFrom(rawData);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\r\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\r\n\t */\r\n\tpublic fromMatrix(matrix:Matrix3D)\r\n\t{\r\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = v.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\r\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\r\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\r\n\t */\r\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false)\r\n\t{\r\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\r\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\r\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\r\n\r\n\t\ttarget[0] = xx - yy - zz + ww;\r\n\t\ttarget[1] = xy2 - zw2;\r\n\t\ttarget[2] = xz2 + yw2;\r\n\t\ttarget[4] = xy2 + zw2;\r\n\t\ttarget[5] = -xx + yy - zz + ww;\r\n\t\ttarget[6] = yz2 - xw2;\r\n\t\ttarget[8] = xz2 - yw2;\r\n\t\ttarget[9] = yz2 + xw2;\r\n\t\ttarget[10] = -xx - yy + zz + ww;\r\n\t\ttarget[3] = target[7] = target[11] = 0;\r\n\r\n\t\tif (!exclude4thRow) {\r\n\t\t\ttarget[12] = target[13] = target[14] = 0;\r\n\t\t\ttarget[15] = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the quaternion.\r\n\t * @return An exact duplicate of the current Quaternion.\r\n\t */\r\n\tpublic clone():Quaternion\r\n\t{\r\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates a point.\r\n\t * @param vector The Vector3D object to be rotated.\r\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\r\n\t * @return A Vector3D object containing the rotated point.\r\n\t */\r\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\r\n\t{\r\n\t\tvar x1:number, y1:number, z1:number, w1:number;\r\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\r\n\r\n\t\t//target ||= new Vector3D();\r\n\t\tif (target === null) {\r\n\r\n\t\t\ttarget = new Vector3D();\r\n\r\n\t\t}\r\n\r\n\t\t// p*q'\r\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\r\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\r\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\r\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\r\n\r\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\r\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\r\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the data from a quaternion into this instance.\r\n\t * @param q The quaternion to copy from.\r\n\t */\r\n\tpublic copyFrom(q:Quaternion)\r\n\t{\r\n\t\tthis.x = q.x;\r\n\t\tthis.y = q.y;\r\n\t\tthis.z = q.z;\r\n\t\tthis.w = q.w;\r\n\t}\r\n}\r\n\r\nexport = Quaternion;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\n/**\r\n * A Rectangle object is an area defined by its position, as indicated by its\r\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\r\n *\r\n *\r\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\r\n * <code>height</code> properties of the Rectangle class are independent of\r\n * each other; changing the value of one property has no effect on the others.\r\n * However, the <code>right</code> and <code>bottom</code> properties are\r\n * integrally related to those four properties. For example, if you change the\r\n * value of the <code>right</code> property, the value of the\r\n * <code>width</code> property changes; if you change the <code>bottom</code>\r\n * property, the value of the <code>height</code> property changes. </p>\r\n *\r\n * <p>The following methods and properties use Rectangle objects:</p>\r\n *\r\n * <ul>\r\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\r\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\r\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\r\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\r\n * <code>merge()</code>, <code>paletteMap()</code>,\r\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\r\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\r\n * BitmapData class</li>\r\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\r\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\r\n * DisplayObject class</li>\r\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\r\n * class</li>\r\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\r\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\r\n * method of the Sprite class</li>\r\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\r\n * method of the PrintJob class</li>\r\n * </ul>\r\n *\r\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\r\n * Rectangle object.</p>\r\n *\r\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\r\n * display object. To draw a rectangular Shape object onscreen, use the\r\n * <code>drawRect()</code> method of the Graphics class.</p>\r\n */\r\nclass Rectangle\r\n{\r\n\tprivate _size:Point;\r\n\tprivate _bottomRight:Point;\r\n\tprivate _topLeft:Point;\r\n\r\n\t/**\r\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\r\n\t * value of a Rectangle object has no effect on the <code>x</code>,\r\n\t * <code>y</code>, and <code>width</code> properties.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\r\n\t * value of a Rectangle object has no effect on the <code>x</code>,\r\n\t * <code>y</code>, and <code>height</code> properties.\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the value of the <code>x</code> property of a Rectangle object has no\r\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\r\n\t * properties.\r\n\t *\r\n\t * <p>The value of the <code>x</code> property is equal to the value of the\r\n\t * <code>left</code> property.</p>\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the value of the <code>y</code> property of a Rectangle object has no\r\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\r\n\t * properties.\r\n\t *\r\n\t * <p>The value of the <code>y</code> property is equal to the value of the\r\n\t * <code>top</code> property.</p>\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The sum of the <code>y</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get bottom():number\r\n\t{\r\n\t\treturn this.y + this.height;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Rectangle object's bottom-right corner, determined by\r\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\r\n\t */\r\n\tpublic get bottomRight():Point\r\n\t{\r\n\t\tif (this._bottomRight == null)\r\n\t\t\tthis._bottomRight = new Point();\r\n\r\n\t\tthis._bottomRight.x = this.x + this.width;\r\n\t\tthis._bottomRight.y = this.y + this.height;\r\n\r\n\t\treturn this._bottomRight;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the <code>left</code> property of a Rectangle object has no effect on the\r\n\t * <code>y</code> and <code>height</code> properties. However it does affect\r\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\r\n\t * does <i>not</i> affect the <code>width</code> property.\r\n\t *\r\n\t * <p>The value of the <code>left</code> property is equal to the value of\r\n\t * the <code>x</code> property.</p>\r\n\t */\r\n\tpublic get left():number\r\n\t{\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\t/**\r\n\t * The sum of the <code>x</code> and <code>width</code> properties.\r\n\t */\r\n\tpublic get right():number\r\n\t{\r\n\t\treturn this.x + this.width;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the Rectangle object, expressed as a Point object with the\r\n\t * values of the <code>width</code> and <code>height</code> properties.\r\n\t */\r\n\tpublic get size():Point\r\n\t{\r\n\t\tif (this._size == null)\r\n\t\t\tthis._size = new Point();\r\n\r\n\t\tthis._size.x = this.width;\r\n\t\tthis._size.y = this.height;\r\n\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\t/**\r\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\r\n\t * the <code>top</code> property of a Rectangle object has no effect on the\r\n\t * <code>x</code> and <code>width</code> properties. However it does affect\r\n\t * the <code>height</code> property, whereas changing the <code>y</code>\r\n\t * value does <i>not</i> affect the <code>height</code> property.\r\n\t *\r\n\t * <p>The value of the <code>top</code> property is equal to the value of the\r\n\t * <code>y</code> property.</p>\r\n\t */\r\n\tpublic get top():number\r\n\t{\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\t/**\r\n\t * The location of the Rectangle object's top-left corner, determined by the\r\n\t * <i>x</i> and <i>y</i> coordinates of the point.\r\n\t */\r\n\tpublic get topLeft():Point\r\n\t{\r\n\t\tif (this._topLeft == null)\r\n\t\t\tthis._topLeft = new Point();\r\n\r\n\t\tthis._topLeft.x = this.x;\r\n\t\tthis._topLeft.y = this.y;\r\n\r\n\t\treturn this._topLeft;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Rectangle object with the top-left corner specified by the\r\n\t * <code>x</code> and <code>y</code> parameters and with the specified\r\n\t * <code>width</code> and <code>height</code> parameters. If you call this\r\n\t * public without parameters, a rectangle with <code>x</code>,\r\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\r\n\t * to 0 is created.\r\n\t *\r\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\r\n\t *               rectangle.\r\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\r\n\t *               rectangle.\r\n\t * @param width  The width of the rectangle, in pixels.\r\n\t * @param height The height of the rectangle, in pixels.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Rectangle object with the same values for the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties as the original Rectangle object.\r\n\t *\r\n\t * @return A new Rectangle object with the same values for the\r\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t *         <code>height</code> properties as the original Rectangle object.\r\n\t */\r\n\tpublic clone():Rectangle\r\n\t{\r\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified point is contained within the rectangular\r\n\t * region defined by this Rectangle object.\r\n\t *\r\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\r\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\r\n\t * @return A value of <code>true</code> if the Rectangle object contains the\r\n\t *         specified point; otherwise <code>false</code>.\r\n\t */\r\n\tpublic contains(x:number, y:number):boolean\r\n\t{\r\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified point is contained within the rectangular\r\n\t * region defined by this Rectangle object. This method is similar to the\r\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\r\n\t * object as a parameter.\r\n\t *\r\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\r\n\t *              coordinates.\r\n\t * @return A value of <code>true</code> if the Rectangle object contains the\r\n\t *         specified point; otherwise <code>false</code>.\r\n\t */\r\n\tpublic containsPoint(point:Point):boolean\r\n\t{\r\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\r\n\t * parameter is contained within this Rectangle object. A Rectangle object is\r\n\t * said to contain another if the second Rectangle object falls entirely\r\n\t * within the boundaries of the first.\r\n\t *\r\n\t * @param rect The Rectangle object being checked.\r\n\t * @return A value of <code>true</code> if the Rectangle object that you\r\n\t *         specify is contained by this Rectangle object; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic containsRect(rect:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of rectangle data from the source Rectangle object into the\r\n\t * calling Rectangle object.\r\n\t *\r\n\t * @param sourceRect The Rectangle object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(sourceRect:Rectangle)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toCompare</code>\r\n\t * parameter is equal to this Rectangle object. This method compares the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties of an object against the same properties of\r\n\t * this Rectangle object.\r\n\t *\r\n\t * @param toCompare The rectangle to compare to this Rectangle object.\r\n\t * @return A value of <code>true</code> if the object has exactly the same\r\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\r\n\t *         and <code>height</code> properties as this Rectangle object;\r\n\t *         otherwise <code>false</code>.\r\n\t */\r\n\tpublic equals(toCompare:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Rectangle object by the specified amounts, in\r\n\t * pixels. The center point of the Rectangle object stays the same, and its\r\n\t * size increases to the left and right by the <code>dx</code> value, and to\r\n\t * the top and the bottom by the <code>dy</code> value.\r\n\t *\r\n\t * @param dx The value to be added to the left and the right of the Rectangle\r\n\t *           object. The following equation is used to calculate the new\r\n\t *           width and position of the rectangle:\r\n\t * @param dy The value to be added to the top and the bottom of the\r\n\t *           Rectangle. The following equation is used to calculate the new\r\n\t *           height and position of the rectangle:\r\n\t */\r\n\tpublic inflate(dx:number, dy:number)\r\n\t{\r\n\t\tthis.x -= dx/2;\r\n\t\tthis.y -= dy/2;\r\n\t\tthis.width += dx/2;\r\n\t\tthis.height += dy/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the size of the Rectangle object. This method is similar to the\r\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\r\n\t * a parameter.\r\n\t *\r\n\t * <p>The following two code examples give the same result:</p>\r\n\t *\r\n\t * @param point The <code>x</code> property of this Point object is used to\r\n\t *              increase the horizontal dimension of the Rectangle object.\r\n\t *              The <code>y</code> property is used to increase the vertical\r\n\t *              dimension of the Rectangle object.\r\n\t */\r\n\tpublic inflatePoint(point:Point)\r\n\t{\r\n\t\tthis.x -= point.x/2;\r\n\t\tthis.y -= point.y/2;\r\n\t\tthis.width += point.x/2;\r\n\t\tthis.height += point.y/2;\r\n\t}\r\n\r\n\t/**\r\n\t * If the Rectangle object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Rectangle object, returns the area of\r\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\r\n\t * this method returns an empty Rectangle object with its properties set to\r\n\t * 0.\r\n\t *\r\n\t * @param toIntersect The Rectangle object to compare against to see if it\r\n\t *                    intersects with this Rectangle object.\r\n\t * @return A Rectangle object that equals the area of intersection. If the\r\n\t *         rectangles do not intersect, this method returns an empty\r\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\r\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\r\n\t *         properties set to 0.\r\n\t */\r\n\tpublic intersection(toIntersect:Rectangle):Rectangle\r\n\t{\r\n\t\tif (this.intersects(toIntersect)) {\r\n\t\t\tvar i:Rectangle = new Rectangle();\r\n\r\n\t\t\tif (this.x > toIntersect.x) {\r\n\t\t\t\ti.x = this.x;\r\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\r\n\r\n\t\t\t\tif (i.width > this.width)\r\n\t\t\t\t\ti.width = this.width;\r\n\t\t\t} else {\r\n\t\t\t\ti.x = toIntersect.x;\r\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\r\n\r\n\t\t\t\tif (i.width > toIntersect.width)\r\n\t\t\t\t\ti.width = toIntersect.width;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.y > toIntersect.y) {\r\n\t\t\t\ti.y = this.y;\r\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\r\n\r\n\t\t\t\tif (i.height > this.height)\r\n\t\t\t\t\ti.height = this.height;\r\n\t\t\t} else {\r\n\t\t\t\ti.y = toIntersect.y;\r\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\r\n\r\n\t\t\t\tif (i.height > toIntersect.height)\r\n\t\t\t\t\ti.height = toIntersect.height;\r\n\t\t\t}\r\n\r\n\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn new Rectangle();\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the object specified in the <code>toIntersect</code>\r\n\t * parameter intersects with this Rectangle object. This method checks the\r\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\r\n\t * <code>height</code> properties of the specified Rectangle object to see if\r\n\t * it intersects with this Rectangle object.\r\n\t *\r\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\r\n\t *                    object.\r\n\t * @return A value of <code>true</code> if the specified object intersects\r\n\t *         with this Rectangle object; otherwise <code>false</code>.\r\n\t */\r\n\tpublic intersects(toIntersect:Rectangle):boolean\r\n\t{\r\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not this Rectangle object is empty.\r\n\t *\r\n\t * @return A value of <code>true</code> if the Rectangle object's width or\r\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\r\n\t */\r\n\tpublic isEmpty():boolean\r\n\t{\r\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Rectangle object, as determined by its\r\n\t * top-left corner, by the specified amounts.\r\n\t *\r\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\r\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\r\n\t */\r\n\tpublic offset(dx:number, dy:number)\r\n\t{\r\n\t\tthis.x += dx;\r\n\t\tthis.y += dy;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the location of the Rectangle object using a Point object as a\r\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\r\n\t * method, except that it takes a Point object as a parameter.\r\n\t *\r\n\t * @param point A Point object to use to offset this Rectangle object.\r\n\t */\r\n\tpublic offsetPoint(point:Point)\r\n\t{\r\n\t\tthis.x += point.x;\r\n\t\tthis.y += point.y;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\r\n\t * empty if its width or height is less than or equal to 0.\r\n\t *\r\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\r\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\r\n\t *\r\n\t */\r\n\tpublic setEmpty()\r\n\t{\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.width = 0;\r\n\t\tthis.height = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Rectangle to the specified values\r\n\t *\r\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\r\n\t *                rectangle.\r\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\r\n\t *                rectangle.\r\n\t * @param widtha  The width of the rectangle, in pixels.\r\n\t * @param heighta The height of the rectangle, in pixels.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number)\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.width = widtha;\r\n\t\tthis.height = heighta;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds and returns a string that lists the horizontal and vertical\r\n\t * positions and the width and height of the Rectangle object.\r\n\t *\r\n\t * @return A string listing the value of each of the following properties of\r\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\r\n\t *         <code>width</code>, and <code>height</code>.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\r\n\t}\r\n\r\n\t/**\r\n\t * Adds two rectangles together to create a new Rectangle object, by filling\r\n\t * in the horizontal and vertical space between the two rectangles.\r\n\t *\r\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\r\n\t * <code>0</code> as the height or width value, such as: <code>var\r\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\r\n\t *\r\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\r\n\t * @return A new Rectangle object that is the union of the two rectangles.\r\n\t */\r\n\tpublic union(toUnion:Rectangle):Rectangle\r\n\t{\r\n\t\tvar u:Rectangle = new Rectangle();\r\n\r\n\t\tif (this.x < toUnion.x) {\r\n\t\t\tu.x = this.x;\r\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\r\n\r\n\t\t\tif (u.width < this.width)\r\n\t\t\t\tu.width = this.width;\r\n\t\t} else {\r\n\t\t\tu.x = toUnion.x;\r\n\t\t\tu.width = this.x - toUnion.x + this.width;\r\n\r\n\t\t\tif (u.width < toUnion.width)\r\n\t\t\t\tu.width = toUnion.width;\r\n\t\t}\r\n\r\n\t\tif (this.y < toUnion.y) {\r\n\t\t\tu.y = this.y;\r\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\r\n\r\n\t\t\tif (u.height < this.height)\r\n\t\t\t\tu.height = this.height;\r\n\t\t} else {\r\n\t\t\tu.y = toUnion.y;\r\n\t\t\tu.height = this.y - toUnion.y + this.height;\r\n\r\n\t\t\tif (u.height < toUnion.height)\r\n\t\t\t\tu.height = toUnion.height;\r\n\t\t}\r\n\r\n\t\treturn u;\r\n\t}\r\n}\r\n\r\nexport = Rectangle;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass Sphere\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic z:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic radius:number;\r\n\r\n\t/**\r\n\t * Create a Sphere with ABCD coefficients\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, radius:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.radius = radius;\r\n\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif (this.containsPoint(position))\r\n\t\t\treturn 0;\r\n\r\n\t\tvar px:number = position.x - this.x, py:number = position.y - this.y, pz:number = position.z - this.z;\r\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\r\n\t\tvar rayEntryDistance:number;\r\n\r\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\r\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\r\n\t\tvar c:number = px*px + py*py + pz*pz - this.radius*this.radius;\r\n\t\tvar det:number = b*b - 4*a*c;\r\n\r\n\t\tif (det >= 0) { // ray goes through sphere\r\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\r\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\r\n\t\t\tif (rayEntryDistance >= 0) {\r\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\r\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\r\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\r\n\t\t\t\ttargetNormal.normalize();\r\n\r\n\t\t\t\treturn rayEntryDistance;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ray misses sphere\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic containsPoint(position:Vector3D):boolean\r\n\t{\r\n\t\tvar px:number = position.x - this.x;\r\n\t\tvar py:number = position.y - this.y;\r\n\t\tvar pz:number = position.z - this.z;\r\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\r\n\t\treturn distance <= this.radius;\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\r\n\t}\r\n}\r\n\r\nexport = Sphere;",
    "import Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nclass UVTransform\r\n{\r\n\tprivate _uvMatrix:Matrix = new Matrix();\r\n\tprivate _uvMatrixDirty:boolean;\r\n\r\n\tprivate _rotation:number = 0;\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\tprivate _offsetU:number = 0;\r\n\tprivate _offsetV:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get offsetU():number\r\n\t{\r\n\t\treturn this._offsetU;\r\n\t}\r\n\r\n\tpublic set offsetU(value:number)\r\n\t{\r\n\t\tif (value == this._offsetU)\r\n\t\t\treturn;\r\n\r\n\t\tthis._offsetU = value;\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get offsetV():number\r\n\t{\r\n\t\treturn this._offsetV;\r\n\t}\r\n\r\n\tpublic set offsetV(value:number)\r\n\t{\r\n\t\tif (value == this._offsetV)\r\n\t\t\treturn;\r\n\r\n\t\tthis._offsetV = value;\r\n\t\tthis._uvMatrixDirty = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rotation():number\r\n\t{\r\n\t\treturn this._rotation;\r\n\t}\r\n\r\n\tpublic set rotation(value:number)\r\n\t{\r\n\t\tif (value == this._rotation)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotation = value;\r\n\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (value == this._scaleU)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (value == this._scaleV)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._uvMatrixDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get matrix():Matrix\r\n\t{\r\n\t\tif (this._uvMatrixDirty)\r\n\t\t\tthis.updateUVMatrix();\r\n\r\n\t\treturn this._uvMatrix;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate updateUVMatrix()\r\n\t{\r\n\t\tthis._uvMatrix.identity();\r\n\r\n\t\tif (this._rotation != 0)\r\n\t\t\tthis._uvMatrix.rotate(this._rotation);\r\n\r\n\t\tif (this._scaleU != 1 || this._scaleV != 1)\r\n\t\t\tthis._uvMatrix.scale(this._scaleU, this._scaleV);\r\n\r\n\t\tthis._uvMatrix.translate(this._offsetU, this._offsetV);\r\n\r\n\t\tthis._uvMatrixDirty = false;\r\n\t}\r\n}\r\n\r\nexport = UVTransform;",
    "/**\r\n * The Vector3D class represents a point or a location in the three-dimensional\r\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\r\n * space, the x property represents the horizontal axis and the y property\r\n * represents the vertical axis. In three-dimensional space, the z property\r\n * represents depth. The value of the x property increases as the object moves\r\n * to the right. The value of the y property increases as the object moves\r\n * down. The z property increases as the object moves farther from the point\r\n * of view. Using perspective projection and scaling, the object is seen to be\r\n * bigger when near and smaller when farther away from the screen. As in a\r\n * right-handed three-dimensional coordinate system, the positive z-axis points\r\n * away from the viewer and the value of the z property increases as the object\r\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\r\n * space is the upper-left corner of the stage.\r\n *\r\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\r\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\r\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\r\n *\r\n * <p>Quaternion notation introduces a fourth element, the w property, which\r\n * provides additional orientation information. For example, the w property can\r\n * define an angle of rotation of a Vector3D object. The combination of the\r\n * angle of rotation and the coordinates x, y, and z can determine the display\r\n * object's orientation. Here is a representation of Vector3D elements in\r\n * matrix notation:</p>\r\n */\r\nclass Vector3D\r\n{\r\n\t/**\r\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\r\n\t */\r\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\r\n\r\n\t/**\r\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\r\n\t */\r\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\r\n\r\n\t/**\r\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\r\n\t */\r\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\r\n\r\n\t/**\r\n\t * The first element of a Vector3D object, such as the x coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/*\r\n\t *The second element of a Vector3D object, such as the y coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic y:number;\r\n\r\n\t/**\r\n\t * The third element of a Vector3D object, such as the y coordinate of\r\n\t * a point in the three-dimensional space. The default value is 0.\r\n\t */\r\n\tpublic z:number;\r\n\r\n\t/**\r\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\r\n\t * and z properties) can hold data such as the angle of rotation. The\r\n\t * default value is 0.\r\n\t *\r\n\t * <p>Quaternion notation employs an angle as the fourth element in\r\n\t * its calculation of three-dimensional rotation. The w property can\r\n\t * be used to define the angle of rotation about the Vector3D object.\r\n\t * The combination of the rotation angle and the coordinates (x,y,z)\r\n\t * determines the display object's orientation.</p>\r\n\t *\r\n\t * <p>In addition, the w property can be used as a perspective warp\r\n\t * factor for a projected three-dimensional position or as a projection\r\n\t * transform value in representing a three-dimensional coordinate\r\n\t * projected into the two-dimensional space. For example, you can\r\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\r\n\t * property, that, when applied to a Vector3D object, produces a\r\n\t * transform value in the Vector3D object's fourth element (the w\r\n\t * property). Dividing the Vector3D object's other elements by the\r\n\t * transform value then produces a projected Vector3D object. You can\r\n\t * use the <code>Vector3D.project()</code> method to divide the first\r\n\t * three elements of a Vector3D object by its fourth element.</p>\r\n\t */\r\n\tpublic w:number;\r\n\r\n\t/**\r\n\t * The length, magnitude, of the current Vector3D object from the\r\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\r\n\t * property is ignored. A unit vector has a length or magnitude of\r\n\t * one.\r\n\t */\r\n\tpublic get length():number\r\n\t{\r\n\t\treturn Math.sqrt(this.lengthSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * The square of the length of the current Vector3D object, calculated\r\n\t * using the x, y, and z properties. The w property is ignored. Use the\r\n\t * <code>lengthSquared()</code> method whenever possible instead of the\r\n\t * slower <code>Math.sqrt()</code> method call of the\r\n\t * <code>Vector3D.length()</code> method.\r\n\t */\r\n\tpublic get lengthSquared():number\r\n\t{\r\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an instance of a Vector3D object. If you do not specify a\r\n\t * parameter for the constructor, a Vector3D object is created with\r\n\t * the elements (0,0,0,0).\r\n\t *\r\n\t * @param x The first element, such as the x coordinate.\r\n\t * @param y The second element, such as the y coordinate.\r\n\t * @param z The third element, such as the z coordinate.\r\n\t * @param w An optional element for additional data such as the angle\r\n\t *          of rotation.\r\n\t */\r\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the value of the x, y, and z elements of the current Vector3D\r\n\t * object to the values of the x, y, and z elements of another Vector3D\r\n\t * object. The <code>add()</code> method does not change the current\r\n\t * Vector3D object. Instead, it returns a new Vector3D object with\r\n\t * the new values.\r\n\t *\r\n\t * <p>The result of adding two vectors together is a resultant vector.\r\n\t * One way to visualize the result is by drawing a vector from the\r\n\t * origin or tail of the first vector to the end or head of the second\r\n\t * vector. The resultant vector is the distance between the origin\r\n\t * point of the first vector and the end point of the second vector.\r\n\t * </p>\r\n\t */\r\n\tpublic add(a:Vector3D):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the angle in radians between two vectors. The returned angle\r\n\t * is the smallest radian the first Vector3D object rotates until it\r\n\t * aligns with the second Vector3D object.\r\n\t *\r\n\t * <p>The <code>angleBetween()</code> method is a static method. You\r\n\t * can use it directly as a method of the Vector3D class.</p>\r\n\t *\r\n\t * <p>To convert a degree to a radian, you can use the following\r\n\t * formula:</p>\r\n\t *\r\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\r\n\t *\r\n\t * @param a The first Vector3D object.\r\n\t * @param b The second Vector3D object.\r\n\t * @returns The angle between two Vector3D objects.\r\n\t */\r\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\r\n\t{\r\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Vector3D object that is an exact copy of the current\r\n\t * Vector3D object.\r\n\t *\r\n\t * @returns A new Vector3D object that is a copy of the current\r\n\t * Vector3D object.\r\n\t */\r\n\tpublic clone():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\r\n\t}\r\n\r\n\tpublic static combine(a:Vector3D, b:Vector3D, ascl:number, bscl:number):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(a.x*ascl + b.x*bscl, a.y*ascl + b.y*bscl, a.z*ascl + b.z*bscl);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of vector data from the source Vector3D object into the\r\n\t * calling Vector3D object.\r\n\t *\r\n\t * @param src The Vector3D object from which to copy the data.\r\n\t */\r\n\tpublic copyFrom(src:Vector3D):void\r\n\t{\r\n\t\tthis.x = src.x;\r\n\t\tthis.y = src.y;\r\n\t\tthis.z = src.z;\r\n\t\tthis.w = src.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Vector3D object that is perpendicular (at a right\r\n\t * angle) to the current Vector3D and another Vector3D object. If the\r\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\r\n\t * Vector3D objects are parallel to each other.\r\n\t *\r\n\t * <p>You can use the normalized cross product of two vertices of a\r\n\t * polygon surface with the normalized vector of the camera or eye\r\n\t * viewpoint to get a dot product. The value of the dot product can\r\n\t * identify whether a surface of a three-dimensional object is hidden\r\n\t * from the viewpoint.</p>\r\n\t *\r\n\t * @param a A second Vector3D object.\r\n\t * @returns A new Vector3D object that is perpendicular to the current\r\n\t *          Vector3D object and the Vector3D object specified as the\r\n\t *          parameter.\r\n\t */\r\n\tpublic crossProduct(a:Vector3D):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Decrements the value of the x, y, and z elements of the current\r\n\t * Vector3D object by the values of the x, y, and z elements of\r\n\t * specified Vector3D object. Unlike the\r\n\t * <code>Vector3D.subtract()</code> method, the\r\n\t * <code>decrementBy()</code> method changes the current Vector3D\r\n\t * object and does not return a new Vector3D object.\r\n\t *\r\n\t * @param a The Vector3D object containing the values to subtract from\r\n\t *          the current Vector3D object.\r\n\t */\r\n\tpublic decrementBy(a:Vector3D)\r\n\t{\r\n\t\tthis.x -= a.x;\r\n\t\tthis.y -= a.y;\r\n\t\tthis.z -= a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the distance between two Vector3D objects. The\r\n\t * <code>distance()</code> method is a static method. You can use it\r\n\t * directly as a method of the Vector3D class to get the Euclidean\r\n\t * distance between two three-dimensional points.\r\n\t *\r\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\r\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\r\n\t * @returns The distance between two Vector3D objects.\r\n\t */\r\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\r\n\t{\r\n\t\tvar x:number = (pt1.x - pt2.x);\r\n\t\tvar y:number = (pt1.y - pt2.y);\r\n\t\tvar z:number = (pt1.z - pt2.z);\r\n\t\treturn Math.sqrt(x*x + y*y + z*z);\r\n\t}\r\n\r\n\t/**\r\n\t * If the current Vector3D object and the one specified as the\r\n\t * parameter are unit vertices, this method returns the cosine of the\r\n\t * angle between the two vertices. Unit vertices are vertices that\r\n\t * point to the same direction but their length is one. They remove the\r\n\t * length of the vector as a factor in the result. You can use the\r\n\t * <code>normalize()</code> method to convert a vector to a unit\r\n\t * vector.\r\n\t *\r\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\r\n\t * vertices. It is also used in backface culling or lighting\r\n\t * calculations. Backface culling is a procedure for determining which\r\n\t * surfaces are hidden from the viewpoint. You can use the normalized\r\n\t * vertices from the camera, or eye, viewpoint and the cross product of\r\n\t * the vertices of a polygon surface to get the dot product. If the dot\r\n\t * product is less than zero, then the surface is facing the camera or\r\n\t * the viewer. If the two unit vertices are perpendicular to each\r\n\t * other, they are orthogonal and the dot product is zero. If the two\r\n\t * vertices are parallel to each other, the dot product is one.</p>\r\n\t *\r\n\t * @param a The second Vector3D object.\r\n\t * @returns A scalar which is the dot product of the current Vector3D\r\n\t *          object and the specified Vector3D object.\r\n\t *\r\n\t * @see away.geom.Vector3D#crossProduct()\r\n\t * @see away.geom.Vector3D#normalize()\r\n\t */\r\n\tpublic dotProduct(a:Vector3D):number\r\n\t{\r\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether two Vector3D objects are equal by comparing the\r\n\t * x, y, and z elements of the current Vector3D object with a\r\n\t * specified Vector3D object. If the values of these elements are the\r\n\t * same, the two Vector3D objects are equal. If the second optional\r\n\t * parameter is set to true, all four elements of the Vector3D objects,\r\n\t * including the w property, are compared.\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t * @param toCompare The Vector3D object to be compared with the current\r\n\t *                  Vector3D object.\r\n\t * @param allFour   An optional parameter that specifies whether the w\r\n\t *                  property of the Vector3D objects is used in the\r\n\t *                  comparison.\r\n\t * @returns A value of true if the specified Vector3D object is equal\r\n\t *          to the current Vector3D object; false if it is not equal.\r\n\t */\r\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\r\n\t{\r\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the value of the x, y, and z elements of the current\r\n\t * Vector3D object by the values of the x, y, and z elements of a\r\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\r\n\t * method, the <code>incrementBy()</code> method changes the current\r\n\t * Vector3D object and does not return a new Vector3D object.\r\n\t *\r\n\t * @param a The Vector3D object to be added to the current Vector3D\r\n\t *          object.\r\n\t */\r\n\tpublic incrementBy(a:Vector3D)\r\n\t{\r\n\t\tthis.x += a.x;\r\n\t\tthis.y += a.y;\r\n\t\tthis.z += a.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Compares the elements of the current Vector3D object with the\r\n\t * elements of a specified Vector3D object to determine whether they\r\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\r\n\t * value of all the elements of the two vertices are equal, or the\r\n\t * result of the comparison is within the tolerance range. The\r\n\t * difference between two elements must be less than the number\r\n\t * specified as the tolerance parameter. If the third optional\r\n\t * parameter is set to <code>true</code>, all four elements of the\r\n\t * Vector3D objects, including the <code>w</code> property, are\r\n\t * compared. Otherwise, only the x, y, and z elements are included in\r\n\t * the comparison.\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t * @param toCompare The Vector3D object to be compared with the current\r\n\t *                  Vector3D object.\r\n\t * @param tolerance A number determining the tolerance factor. If the\r\n\t *                  difference between the values of the Vector3D\r\n\t *                  element specified in the toCompare parameter and\r\n\t *                  the current Vector3D element is less than the\r\n\t *                  tolerance number, the two values are considered\r\n\t *                  nearly equal.\r\n\t * @param allFour   An optional parameter that specifies whether the w\r\n\t *                  property of the Vector3D objects is used in the\r\n\t *                  comparison.\r\n\t * @returns A value of true if the specified Vector3D object is nearly\r\n\t *          equal to the current Vector3D object; false if it is not\r\n\t *          equal.\r\n\t *\r\n\t * @see away.geom.Vector3D#equals()\r\n\t */\r\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\r\n\t{\r\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the current Vector3D object to its inverse. The inverse object\r\n\t * is also considered the opposite of the original object. The value of\r\n\t * the x, y, and z properties of the current Vector3D object is changed\r\n\t * to -x, -y, and -z.\r\n\t */\r\n\tpublic negate():void\r\n\t{\r\n\t\tthis.x = -this.x;\r\n\t\tthis.y = -this.y;\r\n\t\tthis.z = -this.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a Vector3D object to a unit vector by dividing the first\r\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\r\n\t * are vertices that have a direction but their length is one. They\r\n\t * simplify vector calculations by removing length as a factor.\r\n\t */\r\n\t/**\r\n\t * Scales the line segment between(0,0) and the current point to a set\r\n\t * length.\r\n\t *\r\n\t * @param thickness The scaling value. For example, if the current\r\n\t *                  Vector3D object is (0,3,4), and you normalize it to\r\n\t *                  1, the point returned is at(0,0.6,0.8).\r\n\t */\r\n\tpublic normalize(thickness:number = 1)\r\n\t{\r\n\t\tif (this.length != 0) {\r\n\t\t\tvar invLength = thickness/this.length;\r\n\t\t\tthis.x *= invLength;\r\n\t\t\tthis.y *= invLength;\r\n\t\t\tthis.z *= invLength;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\r\n\t * <code>z</code> properties of the current Vector3D object by the\r\n\t * value of its <code>w</code> property.\r\n\t *\r\n\t * <p>If the current Vector3D object is the result of multiplying a\r\n\t * Vector3D object by a projection Matrix3D object, the w property can\r\n\t * hold the transform value. The <code>project()</code> method then can\r\n\t * complete the projection by dividing the elements by the\r\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\r\n\t * property to create a projection Matrix3D object.</p>\r\n\t */\r\n\tpublic project():void\r\n\t{\r\n\t\tthis.x /= this.w;\r\n\t\tthis.y /= this.w;\r\n\t\tthis.z /= this.w;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\r\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\r\n\t * number specified in the parameter. For example, if the vector is\r\n\t * scaled by ten, the result is a vector that is ten times longer. The\r\n\t * scalar can also change the direction of the vector. Multiplying the\r\n\t * vector by a negative number reverses its direction.\r\n\t *\r\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\r\n\r\n\t */\r\n\tpublic scaleBy(s:number):void\r\n\t{\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\t\tthis.z *= s;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the members of Vector3D to the specified values\r\n\t *\r\n\t * @param xa The first element, such as the x coordinate.\r\n\t * @param ya The second element, such as the y coordinate.\r\n\t * @param za The third element, such as the z coordinate.\r\n\t */\r\n\tpublic setTo(xa:number, ya:number, za:number):void\r\n\t{\r\n\t\tthis.x = xa;\r\n\t\tthis.y = ya;\r\n\t\tthis.z = za;\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the value of the x, y, and z elements of the current\r\n\t * Vector3D object from the values of the x, y, and z elements of\r\n\t * another Vector3D object. The <code>subtract()</code> method does not\r\n\t * change the current Vector3D object. Instead, this method returns a\r\n\t * new Vector3D object with the new values.\r\n\t *\r\n\t * @param a The Vector3D object to be subtracted from the current\r\n\t *          Vector3D object.\r\n\t * @returns A new Vector3D object that is the difference between the\r\n\t *          current Vector3D and the specified Vector3D object.\r\n\t *\r\n\t * @see away.geom.Vector3D#decrementBy()\r\n\t */\r\n\tpublic subtract(a:Vector3D):Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a string representation of the current Vector3D object. The\r\n\t * string contains the values of the x, y, and z properties.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\r\n\t}\r\n}\r\n\r\nexport = Vector3D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nclass AssetBase extends EventDispatcher\r\n{\r\n\tpublic static ID_COUNT:number = 0;\r\n\r\n\tprivate _originalName:string;\r\n\tprivate _namespace:string;\r\n\tprivate _name:string;\r\n\tprivate _id:number;\r\n\tprivate _full_path:Array<string>;\r\n\r\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\r\n\r\n\tconstructor(name:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._id = AssetBase.ID_COUNT++;\r\n\r\n\t\tif (name == null)\r\n\t\t\tname = 'null';\r\n\r\n\t\tthis._name = name;\r\n\t\tthis._originalName = name;\r\n\r\n\t\tthis.updateFullPath();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * The original name used for this asset in the resource (e.g. file) in which\r\n\t * it was found. This may not be the same as <code>name</code>, which may\r\n\t * have changed due to of a name conflict.\r\n\t */\r\n\tpublic get originalName():string\r\n\t{\r\n\t\treturn this._originalName;\r\n\t}\r\n\r\n\t/**\r\n\t * A unique id for the asset, used to identify assets in an associative array\r\n\t */\r\n\tpublic get id():number\r\n\t{\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tpublic get name():string\r\n\t{\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic set name(val:string)\r\n\t{\r\n\t\tvar prev:string;\r\n\r\n\t\tprev = this._name;\r\n\t\tthis._name = val;\r\n\r\n\t\tif (this._name == null)\r\n\t\t\tthis._name = 'null';\r\n\r\n\t\tthis.updateFullPath();\r\n\r\n\t\t//if (hasEventListener(AssetEvent.ASSET_RENAME))\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_RENAME, <IAsset> this, prev));\r\n\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get assetNamespace():string\r\n\t{\r\n\t\treturn this._namespace;\r\n\t}\r\n\r\n\tpublic get assetFullPath():Array<string>\r\n\t{\r\n\t\treturn this._full_path;\r\n\t}\r\n\r\n\tpublic assetPathEquals(name:string, ns:string):boolean\r\n\t{\r\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\r\n\t}\r\n\r\n\r\n\tpublic isAsset(assetClass:IAssetClass):boolean\r\n\t{\r\n\t\treturn this.assetType == assetClass.assetType;\r\n\t}\r\n\r\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\r\n\t{\r\n\r\n\t\tthis._name = name? name : 'null';\r\n\t\tthis._namespace = ns? ns : AssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (overrideOriginal)\r\n\t\t\tthis._originalName = this._name;\r\n\r\n\t\tthis.updateFullPath();\r\n\t}\r\n\r\n\tprivate updateFullPath():void\r\n\t{\r\n\t\tthis._full_path = [ this._namespace, this._name ];\r\n\t}\r\n}\r\n\r\nexport = AssetBase;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetLibrary\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\r\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\r\nimport LoaderSession\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\r\nimport ConflictStrategy\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategy\");\r\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\n/**\r\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\r\n * Its purpose is to create a container for 3D data management, both before and after parsing.\r\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\r\n */\r\nclass AssetLibraryBundle extends EventDispatcher\r\n{\r\n\tpublic static _iInstances:Object = new Object();\r\n\r\n\tprivate _loaderSessions:Array<LoaderSession>;\r\n\tprivate _strategy:ConflictStrategyBase;\r\n\tprivate _strategyPreference:string;\r\n\tprivate _assets:Array<IAsset>;\r\n\tprivate _assetDictionary:Object;\r\n\tprivate _assetDictDirty:boolean;\r\n\tprivate _loaderSessionsGarbage:Array<LoaderSession> = new Array<LoaderSession>();\r\n\tprivate _gcTimeoutIID:number;\r\n\r\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\r\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\r\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>AssetLibraryBundle</code> object.\r\n\t *\r\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\r\n\t\tthis._assetDictionary = new Object();\r\n\t\tthis._loaderSessions = new Array<LoaderSession>();\r\n\r\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\r\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\r\n\r\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\r\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\r\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\r\n\t * pass a string key to this method to define which bundle should be returned. This is\r\n\t * referred to as using the AssetLibrary as a multiton.\r\n\t *\r\n\t * @param key Defines which multiton instance should be returned.\r\n\t * @return An instance of the asset library\r\n\t */\r\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\r\n\t{\r\n\t\tif (!key)\r\n\t\t\tkey = 'default';\r\n\r\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\r\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\r\n\r\n\t\treturn AssetLibraryBundle._iInstances[key];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enableParsers(parserClasses:Object[])\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\r\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\r\n\t * is used which means that a numeric suffix is appended to one of the assets. The\r\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\r\n\t * be renamed.\r\n\t *\r\n\t * @see naming.ConflictStrategy\r\n\t * @see AssetLibrary.conflictPrecedence\r\n\t */\r\n\tpublic get conflictStrategy():ConflictStrategyBase\r\n\t{\r\n\t\treturn this._strategy;\r\n\t}\r\n\r\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\r\n\t{\r\n\r\n\t\tif (!val)\r\n\t\t\tthrow new Error('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\r\n\r\n\t\tthis._strategy = val.create();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines which asset should have precedence when resolving a naming conflict between\r\n\t * two assets of which one has just been renamed by the user or by a parser. By default\r\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\r\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\r\n\t *\r\n\t * This property is ignored for conflict strategies that do not actually rename an\r\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\r\n\t *\r\n\t * @see away.library.ConflictPrecedence\r\n\t * @see away.library.ConflictStrategy\r\n\t */\r\n\tpublic get conflictPrecedence():string\r\n\t{\r\n\t\treturn this._strategyPreference;\r\n\t}\r\n\r\n\tpublic set conflictPrecedence(val:string)\r\n\t{\r\n\t\tthis._strategyPreference = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\r\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\r\n\t * namespace. A \"null\" filter value means no filter of that type is used.\r\n\t *\r\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\r\n\t * null to not filter on asset type.\r\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\r\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\r\n\t * included in the iteration or not. This needs to be a function that takes a single\r\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\r\n\t *\r\n\t * @see away.library.AssetType\r\n\t */\r\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\r\n\t{\r\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a file and (optionally) all of its dependencies.\r\n\t *\r\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\r\n\t * @return A handle to the retrieved resource.\r\n\t */\r\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis.getLoaderSession().load(req, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a resource from existing data in memory.\r\n\t *\r\n\t * @param data The data object containing all resource information.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\r\n\t * @return A handle to the retrieved resource.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis.getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tpublic getLoaderSession():LoaderSession\r\n\t{\r\n\t\tvar loader:LoaderSession = new LoaderSession();\r\n\r\n\t\tthis._loaderSessions.push(loader);\r\n\r\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn loader;\r\n\t}\r\n\t\r\n\tpublic disposeLoaderSession(loader:LoaderSession)\r\n\t{\r\n\t\tvar index:number = this._loaderSessions.indexOf(loader);\r\n\t\tthis._loaderSessions.splice(index, 1);\r\n\r\n\t\t// Add loader to a garbage array - for a collection sweep and kill\r\n\t\tthis._loaderSessionsGarbage.push(loader);\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getAsset(name:string, ns:string = null):IAsset\r\n\t{\r\n\t\tif (this._assetDictDirty)\r\n\t\t\tthis.rehashAssetDict();\r\n\r\n\t\tif (ns == null)\r\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\treturn null;\r\n\r\n\t\treturn this._assetDictionary[ns][name];\r\n\r\n\t}\r\n\tpublic getAllAssets():Array<IAsset>\r\n\t{\r\n\t\treturn this._assets;\r\n\t}\r\n\t/**\r\n\t * Adds an asset to the asset library, first making sure that it's name is unique\r\n\t * using the method defined by the <code>conflictStrategy</code> and\r\n\t * <code>conflictPrecedence</code> properties.\r\n\t */\r\n\tpublic addAsset(asset:IAsset)\r\n\t{\r\n\t\tvar ns:string;\r\n\t\tvar old:IAsset;\r\n\r\n\t\t// Bail if asset has already been added.\r\n\t\tif (this._assets.indexOf(asset) >= 0)\r\n\t\t\treturn;\r\n\r\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\r\n\t\tns = asset.assetNamespace || AssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tif (old != null)\r\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\r\n\r\n\t\t//create unique-id (for now this is used in AwayBuilder only\r\n\t\t//asset.id = IDUtil.createUID();\r\n\r\n\t\t// Add it\r\n\t\tthis._assets.push(asset);\r\n\r\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\tthis._assetDictionary[ns] = new Object();\r\n\r\n\t\tthis._assetDictionary[ns][asset.name] = asset;\r\n\r\n\t\tasset.addEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\r\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an asset from the library, and optionally disposes that asset by calling\r\n\t * it's disposeAsset() method (which for most assets is implemented as a default\r\n\t * version of that type's dispose() method.\r\n\t *\r\n\t * @param asset The asset which should be removed from this library.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t */\r\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true)\r\n\t{\r\n\t\tvar idx:number;\r\n\r\n\t\tthis.removeAssetFromDict(asset);\r\n\r\n\t\tasset.removeEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\r\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\r\n\r\n\t\tidx = this._assets.indexOf(asset);\r\n\r\n\t\tif (idx >= 0)\r\n\t\t\tthis._assets.splice(idx, 1);\r\n\r\n\t\tif (dispose)\r\n\t\t\tasset.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an asset which is specified using name and namespace.\r\n\t *\r\n\t * @param name The name of the asset to be removed.\r\n\t * @param ns The namespace to which the desired asset belongs.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see away.library.AssetLibrary.removeAsset()\r\n\t */\r\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\r\n\t{\r\n\t\tvar asset:IAsset = this.getAsset(name, ns);\r\n\r\n\t\tif (asset)\r\n\t\t\tthis.removeAsset(asset, dispose);\r\n\r\n\t\treturn asset;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all assets from the asset library, optionally disposing them as they\r\n\t * are removed.\r\n\t *\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t */\r\n\tpublic removeAllAssets(dispose:boolean = true)\r\n\t{\r\n\t\tif (dispose) {\r\n\t\t\tvar asset:IAsset;\r\n\t\t\tvar len:number = this._assets.length;\r\n\t\t\tfor (var c:number = 0; c < len; c++) {\r\n\t\t\t\tasset = this._assets[c];\r\n\t\t\t\tasset.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._assets.length = 0;\r\n\t\tthis.rehashAssetDict();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all assets belonging to a particular namespace (null for default)\r\n\t * from the asset library, and optionall disposes them by calling their\r\n\t * disposeAsset() method.\r\n\t *\r\n\t * @param ns The namespace from which all assets should be removed.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see away.library.AssetLibrary.removeAsset()\r\n\t */\r\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true)\r\n\t{\r\n\t\tvar idx:number = 0;\r\n\t\tvar asset:IAsset;\r\n\t\tvar old_assets:IAsset[];\r\n\r\n\t\t// Empty the assets vector after having stored a copy of it.\r\n\t\t// The copy will be filled with all assets which weren't removed.\r\n\t\told_assets = this._assets.concat();\r\n\t\tthis._assets.length = 0;\r\n\r\n\t\tif (ns == null)\r\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\r\n\r\n\t\tvar len:number = old_assets.length;\r\n\t\tfor (var d:number = 0; d < len; d++) {\r\n\t\t\tasset = old_assets[d];\r\n\r\n\t\t\t// Remove from dict if in the supplied namespace. If not,\r\n\t\t\t// transfer over to the new vector.\r\n\t\t\tif (asset.assetNamespace == ns) {\r\n\t\t\t\tif (dispose)\r\n\t\t\t\t\tasset.dispose();\r\n\r\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\r\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\r\n\t\t\t\t// test that is not needed since we know that the namespace\r\n\t\t\t\t// will be empty when loop finishes.\r\n\t\t\t\tthis.removeAssetFromDict(asset, false);\r\n\t\t\t} else {\r\n\t\t\t\tthis._assets[idx++] = asset;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t for each (asset in old_assets) {\r\n\t\t // Remove from dict if in the supplied namespace. If not,\r\n\t\t // transfer over to the new vector.\r\n\t\t if (asset.assetNamespace == ns) {\r\n\t\t if (dispose)\r\n\t\t asset.dispose();\r\n\r\n\t\t // Remove asset from dictionary, but don't try to auto-remove\r\n\t\t // the namespace, which will trigger an unnecessarily expensive\r\n\t\t // test that is not needed since we know that the namespace\r\n\t\t // will be empty when loop finishes.\r\n\t\t removeAssetFromDict(asset, false);\r\n\t\t } else\r\n\t\t _assets[idx++] = asset;\r\n\r\n\t\t }\r\n\t\t */\r\n\r\n\t\t// Remove empty namespace\r\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\r\n\t\t\tdelete this._assetDictionary[ns];\r\n\t}\r\n\r\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true)\r\n\t{\r\n\t\tif (this._assetDictDirty)\r\n\t\t\tthis.rehashAssetDict();\r\n\r\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\r\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\r\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\r\n\r\n\t\t\tif (autoRemoveEmptyNamespace) {\r\n\r\n\t\t\t\tvar key:string;\r\n\t\t\t\tvar empty:boolean = true;\r\n\r\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\r\n\t\t\t\t\tempty = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (empty)\r\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic stopAllLoaderSessions()\r\n\t{\r\n\t\tvar len:number = this._loaderSessions.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis.killloaderSession(this._loaderSessions[i]);\r\n\r\n\t\tthis._loaderSessions = new Array<LoaderSession>();\r\n\t}\r\n\r\n\tprivate rehashAssetDict()\r\n\t{\r\n\t\tvar asset:IAsset;\r\n\r\n\t\tthis._assetDictionary = {};\r\n\r\n\t\tvar len:number = this._assets.length;\r\n\t\tfor (var c:number = 0; c < len; c++) {\r\n\t\t\tasset = this._assets[c];\r\n\r\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\r\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\r\n\r\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\r\n\r\n\t\t}\r\n\r\n\t\tthis._assetDictDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during loading.\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing.\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\t// Only add asset to library the first time.\r\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\r\n\t\t\tthis.addAsset(event.asset);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tvar loader:LoaderSession = <LoaderSession> event.target;\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis.disposeLoaderSession(loader);\r\n\t}\r\n\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\tvar loader:LoaderSession;\r\n\r\n\t\twhile (this._loaderSessionsGarbage.length > 0) {\r\n\t\t\tloader = this._loaderSessionsGarbage.pop();\r\n\t\t\tthis.killloaderSession(loader);\r\n\t\t}\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate killloaderSession(loader:LoaderSession)\r\n\t{\r\n\t\tloader.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t\tloader.stop();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when unespected error occurs\r\n\t */\r\n\t/*\r\n\t private onResourceError() : void\r\n\t {\r\n\t var msg:string = \"Unexpected parser error\";\r\n\t if(hasEventListener(LoaderEvent.DEPENDENCY_ERROR)){\r\n\t var re:LoaderEvent = new LoaderEvent(LoaderEvent.DEPENDENCY_ERROR, \"\");\r\n\t dispatchEvent(re);\r\n\t } else{\r\n\t throw new Error(msg);\r\n\t }\r\n\t }\r\n\t */\r\n\r\n\tprivate onAssetRename(event:AssetEvent)\r\n\t{\r\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\r\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\r\n\r\n\t\tif (old != null) {\r\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\r\n\t\t} else {\r\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\r\n\r\n\t\t\tif (dict == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tdict[event.assetPrevName] = null;\r\n\t\t\tdict[event.asset.name] = event.asset;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetConflictResolved(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event.clone());\r\n\t}\r\n}\r\n\r\nexport = AssetLibraryBundle;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nclass AssetLibraryIterator\r\n{\r\n\r\n\tprivate  _assets:Array<IAsset>;\r\n\tprivate _filtered:Array<IAsset>;\r\n\r\n\tprivate _idx:number;\r\n\r\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\r\n\t{\r\n\t\tthis._assets = assets;\r\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\tpublic get currentAsset():IAsset\r\n\t{\r\n\t\t// Return current, or null if no current\r\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\r\n\t}\r\n\r\n\tpublic get numAssets():number\r\n\t{\r\n\t\treturn this._filtered.length;\r\n\t}\r\n\r\n\tpublic next():IAsset\r\n\t{\r\n\t\tvar next:IAsset = null;\r\n\r\n\t\tif (this._idx < this._filtered.length)\r\n\t\t\tnext = this._filtered[this._idx];\r\n\r\n\t\tthis._idx++;\r\n\r\n\t\treturn next;\r\n\t}\r\n\r\n\tpublic reset()\r\n\t{\r\n\t\tthis._idx = 0;\r\n\t}\r\n\r\n\tpublic setIndex(index:number)\r\n\t{\r\n\t\tthis._idx = index;\r\n\t}\r\n\r\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc)\r\n\t{\r\n\t\tif (assetTypeFilter || namespaceFilter) {\r\n\r\n\t\t\tvar idx:number;\r\n\t\t\tvar asset:IAsset;\r\n\r\n\r\n\t\t\tidx = 0;\r\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\r\n\r\n\t\t\tvar l:number = this._assets.length;\r\n\r\n\t\t\tfor (var c:number = 0; c < l; c++) {\r\n\r\n\t\t\t\tasset = <IAsset> this._assets[c];\r\n\r\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\r\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\r\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\r\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tthis._filtered[idx++] = asset;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/*\r\n\t\t\t for each (asset in _assets) {\r\n\t\t\t // Skip this assets if filtering on type and this is wrong type\r\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\r\n\t\t\t continue;\r\n\r\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\r\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\r\n\t\t\t continue;\r\n\r\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\r\n\t\t\t if (filterFunc != null && !filterFunc(asset))\r\n\t\t\t continue;\r\n\r\n\t\t\t _filtered[idx++] = asset;\r\n\t\t\t }\r\n\t\t\t */\r\n\r\n\t\t} else {\r\n\t\t\tthis._filtered = this._assets;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = AssetLibraryIterator;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetLibraryBundle\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\r\nimport LoaderSession\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\n/**\r\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\r\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\r\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\r\n */\r\nclass AssetLibrary\r\n{\r\n\t/**\r\n\t * Creates a new <code>AssetLibrary</code> object.\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t//*/\r\n\t/**\r\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\r\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\r\n\t * pass a string key to this method to define which bundle should be returned. This is\r\n\t * referred to as using the AssetLibraryBundle as a multiton.\r\n\t *\r\n\t * @param key Defines which multiton instance should be returned.\r\n\t * @return An instance of the asset library\r\n\t */\r\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\r\n\t{\r\n\t\treturn AssetLibraryBundle.getInstance(key);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static enableParser(parserClass)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for conflictStrategy property on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.conflictStrategy\r\n\t */\r\n\tpublic static get conflictStrategy():ConflictStrategyBase\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\r\n\t}\r\n\r\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\r\n\t{\r\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.conflictPrecedence\r\n\t */\r\n\tpublic static get conflictPrecedence():string\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\r\n\t}\r\n\r\n\tpublic static set conflictPrecedence(val:string)\r\n\t{\r\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for createIterator() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.createIterator()\r\n\t */\r\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for load() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.load()\r\n\t */\r\n\tpublic static load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tAssetLibrary.getBundle().load(req, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for loadData() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.loadData()\r\n\t */\r\n\tpublic static loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tAssetLibrary.getBundle().loadData(data, context, ns, parser);\r\n\t}\r\n\r\n\tpublic static stopLoad()\r\n\t{\r\n\t\tAssetLibrary.getBundle().stopAllLoaderSessions();\r\n\t}\r\n\r\n\tpublic static getLoaderSession():LoaderSession\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().getLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for getAsset() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.getAsset()\r\n\t */\r\n\tpublic static getAsset(name:string, ns:string = null):IAsset\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for getAsset() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.getAsset()\r\n\t */\r\n\tpublic static getAllAssets():Array<IAsset>\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().getAllAssets();\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for addEventListener() method on default asset library bundle.\r\n\t */\r\n\tpublic static addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeEventListener() method on default asset library bundle.\r\n\t */\r\n\tpublic static removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for hasEventListener() method on default asset library bundle.\r\n\r\n\t public static hasEventListener(type:string):boolean\r\n\t {\r\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\r\n\t}\r\n\r\n\t public static willTrigger(type:string):boolean\r\n\t {\r\n\t\treturn getBundle().willTrigger(type);\r\n\t}\r\n\t */\r\n\r\n\t/**\r\n\t * Short-hand for addAsset() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.addAsset()\r\n\t */\r\n\tpublic static addAsset(asset:IAsset)\r\n\t{\r\n\t\tAssetLibrary.getBundle().addAsset(asset);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAsset() method on default asset library bundle.\r\n\t *\r\n\t * @param asset The asset which should be removed from the library.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAsset()\r\n\t */\r\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\r\n\t *\r\n\t * @param name The name of the asset to be removed.\r\n\t * @param ns The namespace to which the desired asset belongs.\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAssetByName()\r\n\t */\r\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\r\n\t{\r\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\r\n\t *\r\n\t * @param dispose Defines whether the assets should also be disposed.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeAllAssets()\r\n\t */\r\n\tpublic static removeAllAssets(dispose:boolean = true)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\r\n\t}\r\n\r\n\t/**\r\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\r\n\t *\r\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\r\n\t */\r\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true)\r\n\t{\r\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\r\n\t}\r\n}\r\n\r\nexport = AssetLibrary;",
    "/**\r\n * Enumaration class for precedence when resolving naming conflicts in the library.\r\n *\r\n * @see away.library.AssetLibrary.conflictPrecedence\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.naming.ConflictStrategy\r\n */\r\nclass ConflictPrecedence\r\n{\r\n\t/**\r\n\t * Signals that in a conflict, the previous owner of the conflicting name\r\n\t * should be favored (and keep it's name) and that the newly renamed asset\r\n\t * is reverted to a non-conflicting name.\r\n\t */\r\n\tpublic static FAVOR_OLD:string = 'favorOld';\r\n\r\n\t/**\r\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\r\n\t * it's newly defined name) and that the previous owner of that name gets\r\n\t * renamed to a non-conflicting name.\r\n\t */\r\n\tpublic static FAVOR_NEW:string = 'favorNew';\r\n}\r\n\r\nexport = ConflictPrecedence;",
    "import ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\n\r\n/**\r\n * Abstract base class for naming conflict resolution classes. Extend this to create a\r\n * strategy class which the asset library can use to resolve asset naming conflicts, or\r\n * use one of the bundled concrete strategy classes:\r\n *\r\n * <ul>\r\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\r\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\r\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\r\n * </ul>\r\n *\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.ConflictStrategy\r\n * @see away.library.IgnoreConflictStrategy\r\n * @see away.library.ErrorConflictStrategy\r\n * @see away.library.NumSuffixConflictStrategy\r\n */\r\nclass ConflictStrategyBase\r\n{\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\r\n\t * classes.\r\n\t */\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\r\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\r\n\t * would break any state caching that happens inside the strategy class.\r\n\t */\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\r\n\t * the conflict resolution by applying the new names and dispatching the correct events.\r\n\t */\r\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tvar loser_prev_name:string;\r\n\t\tvar winner:IAsset;\r\n\t\tvar loser:IAsset;\r\n\r\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\r\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\r\n\r\n\t\tloser_prev_name = loser.name;\r\n\r\n\t\tassetsDictionary[winner.name] = winner;\r\n\t\tassetsDictionary[nonConflictingName] = loser;\r\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\r\n\r\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\r\n\t}\r\n}\r\n\r\nexport = ConflictStrategyBase;",
    "import ConflictStrategyBase\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport ErrorConflictStrategy\t\t= require(\"awayjs-core/lib/library/ErrorConflictStrategy\");\r\nimport IgnoreConflictStrategy\t\t= require(\"awayjs-core/lib/library/IgnoreConflictStrategy\");\r\nimport NumSuffixConflictStrategy\t= require(\"awayjs-core/lib/library/NumSuffixConflictStrategy\");\r\n\r\n/**\r\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\r\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\r\n * property on an AssetLibrary to define how that library resolves naming conflicts.\r\n *\r\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\r\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\r\n *\r\n * @see away.library.AssetLibrary.conflictStrategy\r\n * @see away.library.naming.ConflictStrategyBase\r\n */\r\nclass ConflictStrategy\r\n{\r\n\t/**\r\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\r\n\t * a numeric suffix appended to the base name.\r\n\t */\r\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\r\n\r\n\t/**\r\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\r\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\r\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\r\n\t */\r\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\r\n\r\n\t/**\r\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\r\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\r\n\t * to have the library automatically rename assets to avoid such conflicts.\r\n\t */\r\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\r\n\r\n\tconstructor(include?:ConflictStrategyBase)\r\n\t{\r\n\t\t//TODO: find out why typescript d.ts files do not include this class\r\n\t}\r\n}\r\n\r\nexport = ConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass ErrorConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tthrow new Error('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new ErrorConflictStrategy();\r\n\t}\r\n}\r\n\r\nexport = ErrorConflictStrategy;",
    "class IDUtil\r\n{\r\n\t/**\r\n\t *  @private\r\n\t *  Char codes for 0123456789ABCDEF\r\n\t */\r\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\r\n\r\n\t/**\r\n\t *  Generates a UID (unique identifier) based on ActionScript's\r\n\t *  pseudo-random number generator and the current time.\r\n\t *\r\n\t *  <p>The UID has the form\r\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\r\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\r\n\t *\r\n\t *  <p>This UID will not be truly globally unique; but it is the best\r\n\t *  we can do without player support for UID generation.</p>\r\n\t *\r\n\t *  @return The newly-generated UID.\r\n\t *\r\n\t *  @langversion 3.0\r\n\t *  @playerversion Flash 9\r\n\t *  @playerversion AIR 1.1\r\n\t *  @productversion Flex 3\r\n\t */\r\n\tpublic static createUID():string\r\n\t{\r\n\t\tvar uid = new Array(36);\r\n\t\tvar index:number = 0;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\r\n\t\tfor (i = 0; i < 8; i++)\r\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\r\n\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\tuid[index++] = 45; // charCode for \"-\"\r\n\r\n\t\t\tfor (j = 0; j < 4; j++)\r\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\t\t}\r\n\r\n\t\tuid[index++] = 45; // charCode for \"-\"\r\n\r\n\t\tvar time:number = new Date().getTime();\r\n\t\t// Note: time is the number of milliseconds since 1970,\r\n\t\t// which is currently more than one trillion.\r\n\t\t// We use the low 8 hex digits of this number in the UID.\r\n\t\t// Just in case the system clock has been reset to\r\n\t\t// Jan 1-4, 1970 (in which case this number could have only\r\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\r\n\t\t// before taking the low digits.\r\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\r\n\r\n\t\tfor (i = 0; i < 8; i++)\r\n\t\t\tuid[index++] = timeString.charCodeAt(i);\r\n\r\n\t\tfor (i = 0; i < 4; i++)\r\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\r\n\r\n\t\treturn String.fromCharCode.apply(null, uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the decimal representation of a hex digit.\r\n\t * @private\r\n\r\n\t private static getDigit(hex:string):number\r\n\t {\r\n\t\tswitch (hex) {\r\n\t\t\tcase \"A\":\r\n\t\t\tcase \"a\":\r\n\t\t\t\treturn 10;\r\n\t\t\tcase \"B\":\r\n\t\t\tcase \"b\":\r\n\t\t\t\treturn 11;\r\n\t\t\tcase \"C\":\r\n\t\t\tcase \"c\":\r\n\t\t\t\treturn 12;\r\n\t\t\tcase \"D\":\r\n\t\t\tcase \"d\":\r\n\t\t\t\treturn 13;\r\n\t\t\tcase \"E\":\r\n\t\t\tcase \"e\":\r\n\t\t\t\treturn 14;\r\n\t\t\tcase \"F\":\r\n\t\t\tcase \"f\":\r\n\t\t\t\treturn 15;\r\n\t\t\tdefault:\r\n\t\t\t\treturn new uint(hex);\r\n\t\t}\r\n\t}\r\n\t */\r\n\r\n}\r\n\r\nexport = IDUtil;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nclass IgnoreConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\t// Do nothing, ignore the fact that there is a conflict.\r\n\t\treturn;\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new IgnoreConflictStrategy();\r\n\t}\r\n}\r\n\r\nexport = IgnoreConflictStrategy;",
    "class LoaderContext\r\n{\r\n\tpublic static UNDEFINED:number = 0;\r\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\r\n\tpublic static MULTIPASS_MATERIALS:number = 2;\r\n\r\n\tprivate _includeDependencies:boolean;\r\n\tprivate _dependencyBaseUrl:string;\r\n\tprivate _embeddedDataByUrl:Object;\r\n\tprivate _remappedUrls:Object;\r\n\tprivate _materialMode:number;\r\n\r\n\tprivate _overrideAbsPath:boolean;\r\n\tprivate _overrideFullUrls:boolean;\r\n\r\n\t/**\r\n\t * LoaderContext provides configuration for the LoaderSession load() and parse() operations.\r\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\r\n\t * embedded data.\r\n\t *\r\n\t * @see away.loading.LoaderSession\r\n\t */\r\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\r\n\t{\r\n\t\tthis._includeDependencies = includeDependencies;\r\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\r\n\t\tthis._embeddedDataByUrl = {};\r\n\t\tthis._remappedUrls = {};\r\n\t\tthis._materialMode = LoaderContext.UNDEFINED;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\r\n\t * parseData() operations) should be automatically loaded. Defaults to true.\r\n\t */\r\n\tpublic get includeDependencies():boolean\r\n\t{\r\n\t\treturn this._includeDependencies;\r\n\t}\r\n\r\n\tpublic set includeDependencies(val:boolean)\r\n\t{\r\n\t\tthis._includeDependencies = val;\r\n\t}\r\n\r\n\t/**\r\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\r\n\t * Options:\r\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\r\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\r\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\r\n\t *\r\n\t */\r\n\tpublic get materialMode():number\r\n\t{\r\n\t\treturn this._materialMode;\r\n\t}\r\n\r\n\tpublic set materialMode(materialMode:number)\r\n\t{\r\n\t\tthis._materialMode = materialMode;\r\n\t}\r\n\r\n\t/**\r\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\r\n\t * Absolute paths will not be affected by the value of this property.\r\n\t */\r\n\tpublic get dependencyBaseUrl():string\r\n\t{\r\n\t\treturn this._dependencyBaseUrl;\r\n\t}\r\n\r\n\tpublic set dependencyBaseUrl(val:string)\r\n\t{\r\n\t\tthis._dependencyBaseUrl = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\r\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\r\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\r\n\t */\r\n\tpublic get overrideAbsolutePaths():boolean\r\n\t{\r\n\t\treturn this._overrideAbsPath;\r\n\t}\r\n\r\n\tpublic set overrideAbsolutePaths(val:boolean)\r\n\t{\r\n\t\tthis._overrideAbsPath = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\r\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\r\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\r\n\t */\r\n\tpublic get overrideFullURLs():boolean\r\n\t{\r\n\t\treturn this._overrideFullUrls;\r\n\t}\r\n\r\n\tpublic set overrideFullURLs(val:boolean)\r\n\t{\r\n\t\tthis._overrideFullUrls = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\r\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\r\n\t * expected by the loaded file.\r\n\t *\r\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\r\n\t * @param newUrl The URL from which away.should load the resource instead.\r\n\t *\r\n\t * @see mapUrlToData()\r\n\t */\r\n\tpublic mapUrl(originalUrl:string, newUrl:string)\r\n\t{\r\n\t\tthis._remappedUrls[originalUrl] = newUrl;\r\n\t}\r\n\r\n\t/**\r\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\r\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\r\n\t *\r\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\r\n\t * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\r\n\t */\r\n\tpublic mapUrlToData(originalUrl:string, data:any)\r\n\t{\r\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Defines whether embedded data has been mapped to a particular URL.\r\n\t */\r\n\tpublic _iHasDataForUrl(url:string):boolean\r\n\t{\r\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Returns embedded data for a particular URL.\r\n\t */\r\n\tpublic _iGetDataForUrl(url:string):any\r\n\t{\r\n\t\treturn this._embeddedDataByUrl[url];\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Defines whether a replacement URL has been mapped to a particular URL.\r\n\t */\r\n\tpublic _iHasMappingForUrl(url:string):boolean\r\n\t{\r\n\t\treturn this._remappedUrls.hasOwnProperty(url);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Returns new (replacement) URL for a particular original URL.\r\n\t */\r\n\tpublic _iGetRemappedUrl(originalUrl:string):string\r\n\t{\r\n\t\treturn this._remappedUrls[originalUrl];\r\n\t}\r\n}\r\n\r\nexport = LoaderContext;",
    "import LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport Image2DParser\t\t\t= require(\"awayjs-core/lib/parsers/Image2DParser\");\r\nimport ImageCubeParser\t\t\t= require(\"awayjs-core/lib/parsers/ImageCubeParser\");\r\nimport TextureAtlasParser\t\t= require(\"awayjs-core/lib/parsers/TextureAtlasParser\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport WaveAudioParser\t\t\t= require(\"awayjs-core/lib/parsers/WaveAudioParser\");\r\n\r\n\r\n\r\n/**\r\n * Dispatched when any asset finishes parsing. Also see specific events for each\r\n * individual asset type (meshes, materials et c.)\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a full resource (including dependencies) finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when a single dependency (which may be the main file of a resource)\r\n * finishes loading.\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during loading. I\r\n *\r\n * @eventType away.events.LoaderEvent\r\n */\r\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\r\n\r\n\r\n/**\r\n * Dispatched when an error occurs during parsing.\r\n *\r\n * @eventType away.events.ParserEvent\r\n */\r\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\r\n\r\n/**\r\n * Dispatched when an image asset dimensions are not a power of 2\r\n *\r\n * @eventType away.events.AssetEvent\r\n */\r\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\r\n\r\n/**\r\n * LoaderSession can load any file format that away.supports (or for which a third-party parser\r\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\r\n * and for when the resource (or it's dependencies) have been loaded.\r\n *\r\n * The LoaderSession will not make assets available in any other way than through the dispatched\r\n * events. To store assets and make them available at any point from any module in an application,\r\n * use the AssetLibrary to load and manage assets.\r\n *\r\n * @see away.library.AssetLibrary\r\n */\r\nclass LoaderSession extends EventDispatcher\r\n{\r\n\tprivate _context:LoaderContext;\r\n\tprivate _uri:string;\r\n\tprivate _materialMode:number;\r\n\r\n\tprivate _errorHandlers:Array<Function>;\r\n\tprivate _parseErrorHandlers:Array<Function>;\r\n\r\n\tprivate _stack:Array<ResourceDependency>;\r\n\tprivate _baseDependency:ResourceDependency;\r\n\tprivate _currentDependency:ResourceDependency;\r\n\tprivate _namespace:string;\r\n\r\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\r\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\r\n\tprivate _onLoadCompleteDelegate:(event:Event) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => void;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\r\n\r\n\t// Image parser only parser that is added by default, to save file size.\r\n\tprivate static _parsers:Array<any> = new Array<any>(Image2DParser, ImageCubeParser, TextureAtlasParser, WaveAudioParser);\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parser The parser class to enable.\r\n\t *\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parser)\r\n\t{\r\n\t\tif (LoaderSession._parsers.indexOf(parser) < 0)\r\n\t\t\tLoaderSession._parsers.push(parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * LoaderSession can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parsers A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parsers:Array<Object>)\r\n\t{\r\n\t\tfor (var c:number = 0; c < parsers.length; c++)\r\n\t\t\tLoaderSession.enableParser(parsers[ c ]);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the base dependency of the loader\r\n\t */\r\n\tpublic get baseDependency():ResourceDependency\r\n\t{\r\n\t\treturn this._baseDependency;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new ResourceLoadSession object.\r\n\t */\r\n\tconstructor(materialMode:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._materialMode = materialMode;\r\n\r\n\t\tthis._stack = new Array<ResourceDependency>();\r\n\t\tthis._errorHandlers = new Array<Function>();\r\n\t\tthis._parseErrorHandlers = new Array<Function>();\r\n\r\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\r\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t\tthis._onLoadCompleteDelegate = (event:Event) => this.onLoadComplete(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a file and (optionally) all of its dependencies.\r\n\t *\r\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\r\n\t */\r\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\r\n\t\tthis._context = context;\r\n\t\tthis._namespace = ns;\r\n\r\n\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\r\n\t\tthis.retrieveDependency(this._baseDependency);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a resource from already loaded data.\r\n\t *\r\n\t * @param data The data object containing all resource information.\r\n\t * @param context An optional context object providing additional parameters for loading\r\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\r\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\r\n\t */\r\n\tpublic loadData(data:any, id:string, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._uri = id;\r\n\t\tthis._context = context;\r\n\t\tthis._namespace = ns;\r\n\r\n\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\r\n\t\tthis.retrieveDependency(this._baseDependency);\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\r\n\t * stack when complete and continues on the top set.\r\n\t * @param parser The parser that will translate the data into a usable resource.\r\n\t */\r\n\tprivate retrieveNext(parser:ParserBase = null)\r\n\t{\r\n\t\tif (this._currentDependency.dependencies.length) {\r\n\r\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\r\n\r\n\t\t\tthis._stack.push(this._currentDependency);\r\n\t\t\tthis.retrieveDependency(next);\r\n\r\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\r\n\r\n\t\t\tthis._currentDependency.parser._iResumeParsing();\r\n\t\t\tthis._stack.pop();\r\n\r\n\t\t} else if (this._stack.length) {\r\n\r\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\r\n\r\n\t\t\tthis._currentDependency = this._stack.pop();\r\n\r\n\t\t\tif (prev._iSuccess)\r\n\t\t\t\tprev.resolve();\r\n\r\n\t\t\tthis.retrieveNext(parser);\r\n\r\n\t\t} else {\r\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.RESOURCE_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves a single dependency.\r\n\t * @param parser The parser that will translate the data into a usable resource.\r\n\t */\r\n\tprivate retrieveDependency(dependency:ResourceDependency)\r\n\t{\r\n\t\tvar data:any;\r\n\r\n\t\tif (this._context && this._context.materialMode != 0)\r\n\t\t\tthis._materialMode = this._context.materialMode;\r\n\r\n\t\tthis._currentDependency = dependency;\r\n\r\n\t\tdependency._iLoader = new URLLoader();\r\n\r\n\t\tthis.addEventListeners(dependency._iLoader);\r\n\r\n\t\t// Get already loaded (or mapped) data if available\r\n\t\tdata = dependency.data;\r\n\r\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\r\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\r\n\r\n\t\tif (data) {\r\n\t\t\tif (data.constructor === Function)\r\n\t\t\t\tdata = new data();\r\n\r\n\t\t\tdependency._iSetData(data);\r\n\r\n\t\t\tif (dependency.retrieveAsRawData) {\r\n\t\t\t\t// No need to parse. The parent parser is expecting this\r\n\t\t\t\t// to be raw data so it can be passed directly.\r\n\t\t\t\tdependency.resolve();\r\n\r\n\t\t\t\t// Move on to next dependency\r\n\t\t\t\tthis.retrieveNext();\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis.parseDependency(dependency);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// Resolve URL and start loading\r\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\r\n\r\n\t\t\tif (dependency.retrieveAsRawData) {\r\n\t\t\t\t// Always use binary for raw data loading\r\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (!dependency.parser)\r\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\r\n\r\n\t\t\t\tif (dependency.parser) {\r\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\r\n\t\t\t\t\t// file type check will determine format after load, and if\r\n\t\t\t\t\t// binary, a text load will have broken the file data.\r\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdependency._iLoader.load(dependency.request);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate joinUrl(base:string, end:string):string\r\n\t{\r\n\t\tif (end.charAt(0) == '/' || end.charAt(0) == '\\\\')\r\n\t\t\tend = end.substr(1);\r\n\r\n\t\tif (end.charAt(0) == '.')\r\n\t\t\tend = end.substr(2);\r\n\r\n\t\tif (base.length == 0)\r\n\t\t\treturn end;\r\n\r\n\t\tif (base.charAt(base.length - 1) == '/' || base.charAt(base.length - 1) == '\\\\')\r\n\t\t\tbase = base.substr(0, base.length - 1);\r\n\r\n\t\treturn base.concat('/', end);\r\n\r\n\t}\r\n\r\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\r\n\t{\r\n\t\tvar scheme_re:RegExp;\r\n\t\tvar base:string;\r\n\t\tvar url:string = dependency.request.url;\r\n\r\n\t\t// Has the user re-mapped this URL?\r\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\r\n\t\t\treturn this._context._iGetRemappedUrl(url);\r\n\r\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\r\n\t\t// We will not try to resolve this since the user can probably be\r\n\t\t// thrusted to know this URL better than our automatic resolver. :)\r\n\t\tif (url == this._uri)\r\n\t\t\treturn url;\r\n\r\n\r\n\t\t// Absolute URL? Check if starts with slash or a URL\r\n\t\t// scheme definition (e.g. ftp://, http://, file://)\r\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\r\n\r\n\t\tif (url.charAt(0) == '/') {\r\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\r\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\r\n\t\t\t\treturn url;\r\n\t\t} else if (scheme_re.test(url)) {\r\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\r\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\r\n\t\t\tif (this._context && this._context.overrideFullURLs) {\r\n\r\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\r\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Since not absolute, just get rid of base file name to find it's\r\n\t\t// folder and then concatenate dynamic URL\r\n\t\tif (this._context && this._context.dependencyBaseUrl) {\r\n\t\t\tbase = this._context.dependencyBaseUrl;\r\n\t\t\treturn this.joinUrl(base, url);\r\n\t\t} else {\r\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\r\n\t\t\treturn this.joinUrl(base, url);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate retrieveParserDependencies()\r\n\t{\r\n\t\tif (!this._currentDependency)\r\n\t\t\treturn;\r\n\r\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies;\r\n\t\tvar i:number, len:number = parserDependancies.length;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\r\n\r\n\t\t// Since more dependencies might be added eventually, empty this\r\n\t\t// list so that the same dependency isn't retrieved more than once.\r\n\t\tparserDependancies.length = 0;\r\n\r\n\t\tthis._stack.push(this._currentDependency);\r\n\r\n\t\tthis.retrieveNext();\r\n\t}\r\n\r\n\tprivate resolveParserDependencies()\r\n\t{\r\n\t\tthis._currentDependency._iSuccess = true;\r\n\r\n\t\t// Retrieve any last dependencies remaining on this parser, or\r\n\t\t// if none exists, just move on.\r\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\r\n\t\t\tthis.retrieveParserDependencies();\r\n\t\telse\r\n\t\t\tthis.retrieveNext();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent)\r\n\t{\r\n\t\tvar handled:boolean;\r\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\r\n\t\tvar loader:URLLoader = <URLLoader> event.target;//TODO: keep on eye on this one\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR )) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\thandled = true;\r\n\t\t} else {\r\n\t\t\t// TODO: Consider not doing this even when LoaderSession does have it's own LOAD_ERROR listener\r\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tif (!handled)\r\n\t\t\t\t\thandled = <boolean> this._errorHandlers[i](event);\r\n\t\t}\r\n\r\n\t\tif (handled) {\r\n\r\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\r\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\r\n\r\n\t\t\t\tthis._currentDependency.resolveFailure();\r\n\t\t\t\tthis.retrieveNext();\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// Either this was the base file (last left in the stack) or\r\n\t\t\t\t// default behavior was prevented by the handlers, and hence\r\n\t\t\t\t// there is nothing more to do than clean up and bail.\r\n\t\t\t\tthis.dispose();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\t// Error event was not handled by listeners directly on LoaderSession or\r\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\r\n\t * @param event\r\n\t */\r\n\tprivate onParseError(event:ParserEvent)\r\n\t{\r\n\t\tvar handled:boolean;\r\n\r\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\r\n\r\n\t\tvar loader:URLLoader = <URLLoader>event.target;\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\thandled = true;\r\n\t\t} else {\r\n\t\t\t// TODO: Consider not doing this even when LoaderSession does\r\n\t\t\t// have it's own LOAD_ERROR listener\r\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\r\n\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tif (!handled)\r\n\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\r\n\t\t}\r\n\r\n\t\tif (handled) {\r\n\t\t\tthis.retrieveNext();\r\n\t\t} else {\r\n\t\t\t// Error event was not handled by listeners directly on LoaderSession or\r\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\r\n\t\t\tthrow new Error(event.message);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\t// Add loaded asset to list of assets retrieved as part\r\n\t\t// of the current dependency. This list will be inspected\r\n\t\t// by the parent parser when dependency is resolved\r\n\t\tif (this._currentDependency)\r\n\t\t\tthis._currentDependency.assets.push(event.asset);\r\n\r\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\r\n\r\n\t\tif (!this._currentDependency.suppresAssetEvents)\r\n\t\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tprivate onReadyForDependencies(event:ParserEvent)\r\n\t{\r\n\t\tvar parser:ParserBase = <ParserBase> event.target;\r\n\r\n\t\tif (this._context && !this._context.includeDependencies)\r\n\t\t\tparser._iResumeParsing();\r\n\t\telse\r\n\t\t\tthis.retrieveParserDependencies();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadComplete(event:Event)\r\n\t{\r\n\t\tvar loader:URLLoader = <URLLoader> event.target;\r\n\r\n\t\tthis.removeEventListeners(loader);\r\n\r\n\t\t// Resolve this dependency\r\n\t\tthis._currentDependency._iSetData(loader.data);\r\n\r\n\t\tif (this._currentDependency.retrieveAsRawData) {\r\n\t\t\t// No need to parse this data, which should be returned as is\r\n\t\t\tthis.resolveParserDependencies();\r\n\t\t} else {\r\n\t\t\tthis.parseDependency(this._currentDependency);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when parsing is complete.\r\n\t */\r\n\tprivate onParseComplete(event:ParserEvent):void\r\n\t{\r\n\t\tvar parser:ParserBase = <ParserBase> event.target;\r\n\r\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\r\n\r\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\r\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\r\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\r\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an image is too large or it's dimensions are not a power of 2\r\n\t * @param event\r\n\t */\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tprivate addEventListeners(loader:URLLoader)\r\n\t{\r\n\t\tloader.addEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\r\n\t\tloader.addEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\r\n\t}\r\n\r\n\tprivate removeEventListeners(loader:URLLoader)\r\n\t{\r\n\t\tloader.removeEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\r\n\t\tloader.removeEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\r\n\t}\r\n\r\n\tpublic stop()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\tprivate dispose()\r\n\t{\r\n\t\tthis._errorHandlers = null;\r\n\t\tthis._parseErrorHandlers = null;\r\n\t\tthis._context = null;\r\n\t\tthis._stack = null;\r\n\r\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\r\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\r\n\r\n\t\tthis._currentDependency = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\r\n\t * add error event listeners to the LoaderSession instance. This system is used instead of\r\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\r\n\t * that if hasEventListener() returns true, it's client code that's listening for the\r\n\t * event. Secondly, functions added as error handler through this custom method are\r\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\r\n\t * whether they in turn had any client code listening for the event.) If no handlers\r\n\t * return true, the LoaderSession knows that the event wasn't handled and will throw an RTE.\r\n\t */\r\n\r\n\tpublic _iAddParseErrorHandler(handler)\r\n\t{\r\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\r\n\t\t\tthis._parseErrorHandlers.push(handler);\r\n\t}\r\n\r\n\tpublic _iAddErrorHandler(handler)\r\n\t{\r\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\r\n\t\t\tthis._errorHandlers.push(handler);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Guesses the parser to be used based on the file contents.\r\n\t * @param data The data to be parsed.\r\n\t * @param uri The url or id of the object to be parsed.\r\n\t * @return An instance of the guessed parser.\r\n\t */\r\n\tprivate getParserFromData(data:any):ParserBase\r\n\t{\r\n\t\tvar len:number = LoaderSession._parsers.length;\r\n\r\n\t\t// go in reverse order to allow application override of default parser added in away.proper\r\n\t\tfor (var i:number = len - 1; i >= 0; i--)\r\n\t\t\tif (LoaderSession._parsers[i].supportsData(data))\r\n\t\t\t\treturn new LoaderSession._parsers[i]();\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Initiates parsing of the loaded dependency.\r\n\t *\r\n\t * @param The dependency to be parsed.\r\n\t */\r\n\tprivate parseDependency(dependency:ResourceDependency):void\r\n\t{\r\n\t\tvar parser:ParserBase = dependency.parser;\r\n\r\n\t\t// If no parser has been defined, try to find one by letting\r\n\t\t// all plugged in parsers inspect the actual data.\r\n\t\tif (!parser)\r\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\r\n\r\n\t\tif (parser) {\r\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\r\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\r\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\r\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t\tif (dependency.request && dependency.request.url)\r\n\t\t\t\tparser._iFileName = dependency.request.url;\r\n\r\n\t\t\tparser.materialMode = this._materialMode;\r\n\r\n\t\t\tparser.parseAsync(dependency.data);\r\n\r\n\t\t} else {\r\n\t\t\tvar handled:boolean;\r\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\";\r\n\t\t\tvar event:ParserEvent = new ParserEvent(ParserEvent.PARSE_ERROR, message);\r\n\t\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\t\tthis.dispatchEvent(event);\r\n\t\t\t\thandled = true;\r\n\t\t\t} else {\r\n\t\t\t\t// TODO: Consider not doing this even when LoaderSession does\r\n\t\t\t\t// have it's own LOAD_ERROR listener\r\n\t\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\t\tif (!handled)\r\n\t\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\r\n\t\t\t}\r\n\r\n\t\t\tif (handled) {\r\n\t\t\t\tthis.retrieveNext();\r\n\t\t\t} else {\r\n\t\t\t\t// Error event was not handled by listeners directly on LoaderSession or\r\n\t\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\r\n\t\t\t\tthrow new Error(message);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Guesses the parser to be used based on the file extension.\r\n\t * @return An instance of the guessed parser.\r\n\t */\r\n\tprivate getParserFromSuffix(url:string):ParserBase\r\n\t{\r\n\t\t// Get rid of query string if any and extract extension\r\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\r\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\r\n\r\n\t\tvar len:number = LoaderSession._parsers.length;\r\n\r\n\t\t// go in reverse order to allow application override of default parser added in away.proper\r\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\r\n\t\t\tvar parserClass:any = LoaderSession._parsers[i];\r\n\t\t\tif (parserClass.supportsType(fileExtension))\r\n\t\t\t\treturn new parserClass();\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport = LoaderSession;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nclass NumSuffixConflictStrategy extends ConflictStrategyBase\r\n{\r\n\tprivate _separator:string;\r\n\tprivate _next_suffix:Object;\r\n\r\n\tconstructor(separator:string = '.')\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._separator = separator;\r\n\t\tthis._next_suffix = {};\r\n\t}\r\n\r\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\r\n\t{\r\n\t\tvar orig:string;\r\n\t\tvar new_name:string;\r\n\t\tvar base:string;\r\n\t\tvar suffix:number;\r\n\r\n\t\torig = changedAsset.name;\r\n\r\n\t\tif (orig.indexOf(this._separator) >= 0) {\r\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\r\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\r\n\t\t\t// use entire name as base\r\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\r\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\r\n\r\n\t\t\tif (isNaN(suffix)) {\r\n\t\t\t\tbase = orig;\r\n\t\t\t\tsuffix = 0;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tbase = orig;\r\n\t\t\tsuffix = 0;\r\n\t\t}\r\n\r\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\r\n\r\n\t\t\tsuffix = this._next_suffix[base];\r\n\r\n\t\t}\r\n\r\n\t\t// Find the first suffixed name that does\r\n\t\t// not collide with other names.\r\n\t\tdo {\r\n\r\n\t\t\tsuffix++;\r\n\r\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\r\n\r\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\r\n\r\n\t\tthis._next_suffix[ base ] = suffix;\r\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\r\n\r\n\t}\r\n\r\n\tpublic create():ConflictStrategyBase\r\n\t{\r\n\t\treturn new NumSuffixConflictStrategy(this._separator);\r\n\t}\r\n}\r\n\r\nexport = NumSuffixConflictStrategy;",
    "class CrossDomainPolicy\r\n{\r\n\tpublic static ANONYMOUS:string = 'anonymous';\r\n\r\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\r\n}\r\n\r\nexport = CrossDomainPolicy;\r\n",
    "class URLLoaderDataFormat\r\n{\r\n\t/**\r\n\t * TEXT\r\n\t * @type {string}\r\n\t */\r\n\tpublic static TEXT:string = \"text\";\r\n\r\n\t/**\r\n\t * Variables / Value Pairs\r\n\t * @type {string}\r\n\t */\r\n\tpublic static VARIABLES:string = \"variables\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static BLOB:string = \"blob\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static BINARY:string = \"binary\";\r\n}\r\n\r\nexport = URLLoaderDataFormat;",
    "import URLLoaderDataFormat\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\r\nimport URLVariables\t\t\t\t\t= require(\"awayjs-core/lib/net/URLVariables\");\r\nimport AwayEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport HTTPStatusEvent\t\t\t\t= require(\"awayjs-core/lib/events/HTTPStatusEvent\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport AwayProgressEvent\t\t\t= require(\"awayjs-core/lib/events/ProgressEvent\");\r\n\r\n/**\r\n * The URLLoader is used to load a single file, as part of a resource.\r\n *\r\n * While URLLoader can be used directly, e.g. to create a third-party asset\r\n * management system, it's recommended to use any of the classes Loader3D, LoaderSession\r\n * and AssetLibrary instead in most cases.\r\n *\r\n * @see LoaderSession\r\n * @see away.library.AssetLibrary\r\n */\r\nclass URLLoader extends EventDispatcher\r\n{\r\n\tprivate _XHR:XMLHttpRequest;\r\n\tprivate _bytesLoaded:number = 0;\r\n\tprivate _bytesTotal:number = 0;\r\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\r\n\tprivate _loadError:boolean = false;\r\n\r\n\tprivate _request:URLRequest;\r\n\tprivate _data:any;\r\n\r\n\tprivate _loadStartEvent:AwayEvent;\r\n\tprivate _loadErrorEvent:IOErrorEvent;\r\n\tprivate _loadCompleteEvent:AwayEvent;\r\n\tprivate _progressEvent:AwayProgressEvent;\r\n\r\n\t/**\r\n\t * Creates a new URLLoader object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\r\n\t\treturn this._request? this._request.url : '';\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * URLLoaderDataFormat.BINARY\r\n\t * URLLoaderDataFormat.TEXT\r\n\t * URLLoaderDataFormat.VARIABLES\r\n\t *\r\n\t * @param format\r\n\t */\r\n\tpublic set dataFormat(format:string)\r\n\t{\r\n\t\tthis._dataFormat = format;\r\n\t}\r\n\r\n\tpublic get dataFormat():string\r\n\t{\r\n\t\treturn this._dataFormat;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get bytesLoaded():number\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get bytesTotal():number\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * Load a resource from a file.\r\n\t *\r\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\r\n\t */\r\n\tpublic load(request:URLRequest):void\r\n\t{\r\n\t\tthis._request = request;\r\n\r\n\t\tthis.initXHR();\r\n\r\n\t\tif (request.method === URLRequestMethod.POST)\r\n\t\t\tthis.postRequest(request);\r\n\t\telse\r\n\t\t\tthis.getRequest(request);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic close():void\r\n\t{\r\n\t\tthis._XHR.abort();\r\n\t\tthis.disposeXHR();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tif (this._XHR)\r\n\t\t\tthis._XHR.abort();\r\n\r\n\t\tthis.disposeXHR();\r\n\r\n\t\tthis._data = null;\r\n\t\tthis._dataFormat = null;\r\n\t\tthis._bytesLoaded = null;\r\n\t\tthis._bytesTotal = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param xhr\r\n\t * @param responseType\r\n\t */\r\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\r\n\t{\r\n\t\tswitch (responseType) {\r\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\r\n\t\t\tcase URLLoaderDataFormat.BLOB:\r\n\t\t\tcase URLLoaderDataFormat.TEXT:\r\n\t\t\t\txhr.responseType = responseType;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\r\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.BINARY:\r\n\t\t\t\txhr.responseType = '';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param request {URLRequest}\r\n\t */\r\n\tprivate getRequest(request:URLRequest):void\r\n\t{\r\n\t\ttry {\r\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\r\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\r\n\t\t\tthis._XHR.send(); // No data to send\r\n\t\t} catch (e /* <XMLHttpRequestException> */) {\r\n\t\t\tthis.handleXmlHttpRequestException(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param request {URLRequest}\r\n\t */\r\n\tprivate postRequest(request:URLRequest):void\r\n\t{\r\n\t\tthis._loadError = false;\r\n\r\n\t\tthis._XHR.open(request.method, request.url, request.async);\r\n\r\n\t\tif (request.data != null) {\r\n\t\t\tif (request.data instanceof URLVariables) {\r\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._XHR.responseType = 'text';\r\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\r\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\r\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\r\n\r\n\t\t\t\tif (request.data)\r\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._XHR.send(); // no data to send\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._XHR.send(); // No data to send\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param error {XMLHttpRequestException}\r\n\t */\r\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\r\n\t{\r\n\t\tswitch (error.code) {\r\n\r\n\t\t/******************************************************************************************************************************************************************************************************\r\n\t\t *\r\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\r\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\r\n\t\t *\r\n\t\t ******************************************************************************************************************************************************************************************************/\r\n\r\n\t\t\tcase 101:\r\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate initXHR()\r\n\t{\r\n\t\tif (!this._XHR) {\r\n\t\t\tthis._XHR = new XMLHttpRequest();\r\n\r\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\r\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\r\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\r\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\r\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\r\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\r\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\r\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate disposeXHR()\r\n\t{\r\n\t\tif (this._XHR !== null) {\r\n\t\t\tthis._XHR.onloadstart = null;\r\n\t\t\tthis._XHR.onprogress = null;\r\n\t\t\tthis._XHR.onabort = null;\r\n\t\t\tthis._XHR.onerror = null;\r\n\t\t\tthis._XHR.onload = null;\r\n\t\t\tthis._XHR.ontimeout = null;\r\n\t\t\tthis._XHR.onloadend = null;\r\n\t\t\tthis._XHR = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tpublic decodeURLVariables(source:string):Object\r\n\t{\r\n\t\tvar result:Object = new Object();\r\n\r\n\t\tsource = source.split(\"+\").join(\" \");\r\n\r\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n\t\twhile (tokens = re.exec(source))\r\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// XMLHttpRequest - Event Handlers\r\n\r\n\t/**\r\n\t * When XHR state changes\r\n\t * @param event\r\n\t */\r\n\tprivate onReadyStateChange(event:Event)\r\n\t{\r\n\t\tif (this._XHR.readyState == 4) {\r\n\t\t\tif (this._XHR.status == 404) {\r\n\t\t\t\tthis._loadError = true;\r\n\r\n\t\t\t\tif (!this._loadErrorEvent)\r\n\t\t\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\r\n\r\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchEvent(new HTTPStatusEvent(HTTPStatusEvent.HTTP_STATUS, this._XHR.status));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has completed, regardless of whether or not it was successful.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadEnd(event:ProgressEvent)\r\n\t{\r\n\t\tif (this._loadError === true)\r\n\t\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * When the author specified timeout has passed before the request could complete.\r\n\t * @param event\r\n\t */\r\n\tprivate onTimeOut(event:Event)\r\n\t{\r\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\r\n\t * @param event\r\n\t */\r\n\tprivate onAbort(event:UIEvent)\r\n\t{\r\n\t\t// TODO: investigate whether this needs to be an IOError\r\n\t}\r\n\r\n\t/**\r\n\t * While loading and sending data.\r\n\t * @param event\r\n\t */\r\n\tprivate onProgress(event:ProgressEvent)\r\n\t{\r\n\t\tif (!this._progressEvent)\r\n\t\t\tthis._progressEvent = new AwayProgressEvent(AwayProgressEvent.PROGRESS);\r\n\r\n\t\tthis._progressEvent.bytesTotal = event.total;\r\n\t\tthis._progressEvent.bytesLoaded = event.loaded;\r\n\r\n\t\tthis.dispatchEvent(this._progressEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * When the request starts.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadStart(event:ProgressEvent)\r\n\t{\r\n\t\tif (!this._loadStartEvent)\r\n\t\t\tthis._loadStartEvent = new AwayEvent(AwayEvent.OPEN);\r\n\r\n\t\tthis.dispatchEvent(this._loadStartEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has successfully completed.\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadComplete(event:Event)\r\n\t{\r\n\t\tif (this._loadError === true)\r\n\t\t\treturn;\r\n\r\n\t\tswitch (this._dataFormat) {\r\n\t\t\tcase URLLoaderDataFormat.TEXT:\r\n\t\t\t\tthis._data = this._XHR.responseText;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\r\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase URLLoaderDataFormat.BLOB:\r\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\r\n\t\t\tcase URLLoaderDataFormat.BINARY:\r\n\t\t\t\tthis._data = this._XHR.response;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthis._data = this._XHR.responseText;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (!this._loadCompleteEvent)\r\n\t\t\tthis._loadCompleteEvent = new AwayEvent(AwayEvent.COMPLETE);\r\n\r\n\t\tthis.dispatchEvent(this._loadCompleteEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * When the request has failed. ( due to network issues ).\r\n\t * @param event\r\n\t */\r\n\tprivate onLoadError(event:Event)\r\n\t{\r\n\t\tthis._loadError = true;\r\n\r\n\t\tif (!this._loadErrorEvent)\r\n\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\r\n\r\n\t\tthis.dispatchEvent(this._loadErrorEvent);\r\n\t}\r\n}\r\n\r\nexport = URLLoader;",
    "class URLRequestMethod\r\n{\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static POST:string = 'POST';\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic static GET:string = 'GET';\r\n}\r\n\r\nexport = URLRequestMethod;",
    "import URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\r\n\r\nclass URLRequest\r\n{\r\n\t/*\r\n\t * The MIME content type of the content in the the data property.\r\n\t * @type {string}\r\n\t */\r\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\r\n\r\n\t/**\r\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\r\n\t *\r\n\t */\r\n\tpublic data:any;\r\n\r\n\t/**\r\n\t *\r\n\t * away.net.URLRequestMethod.GET\r\n\t * away.net.URLRequestMethod.POST\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic method:string = URLRequestMethod.GET;\r\n\r\n\t/**\r\n\t * Use asynchronous XMLHttpRequest\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic async:boolean = true;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _url:string;\r\n\r\n\t/**\r\n\r\n\t * @param url\r\n\t */\r\n\tconstructor(url:string = null)\r\n\t{\r\n\t\tthis._url = url;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set url(value:string)\r\n\t{\r\n\t\tthis._url = value;\r\n\t}\r\n\r\n\t/**\r\n\t * dispose\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.data = null;\r\n\t\tthis._url = null;\r\n\t}\r\n}\r\n\r\nexport = URLRequest;",
    "class URLVariables\r\n{\r\n\tprivate _variables:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tconstructor(source:string = null)\r\n\t{\r\n\t\tif (source !== null)\r\n\t\t\tthis.decode(source);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param source\r\n\t */\r\n\tpublic decode(source:string):void\r\n\t{\r\n\t\tsource = source.split(\"+\").join(\" \");\r\n\r\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n\t\twhile (tokens = re.exec(source))\r\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic get variables():Object\r\n\t{\r\n\t\treturn this._variables;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic get formData():FormData\r\n\t{\r\n\t\tvar fd:FormData = new FormData();\r\n\r\n\t\tfor (var s in this._variables)\r\n\t\t\tfd.append(s, this._variables[s]);\r\n\r\n\t\treturn fd;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic set variables(obj:Object)\r\n\t{\r\n\t\tthis._variables = obj;\r\n\t}\r\n}\r\n\r\nexport = URLVariables;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\n/**\r\n * Image2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nclass Image2DParser extends ParserBase\r\n{\r\n\tprivate _startedParsing:boolean;\r\n\tprivate _doneParsing:boolean;\r\n\tprivate _loadingImage:boolean;\r\n\tprivate _htmlImageElement:HTMLImageElement;\r\n\r\n\t/**\r\n\t * Creates a new Image2DParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.BLOB);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\r\n\t\tif (data  instanceof HTMLImageElement)\r\n\t\t\treturn true;\r\n\r\n\t\tif (!(data instanceof ByteArray))\r\n\t\t\treturn false;\r\n\r\n\t\tvar ba:ByteArray = <ByteArray> data;\r\n\t\tba.position = 0;\r\n\r\n\t\tif (ba.readUnsignedShort() == 0xffd8)\r\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readShort() == 0x424D)\r\n\t\t\treturn true; // BMP\r\n\r\n\t\tba.position = 1;\r\n\t\tif (ba.readUTFBytes(3) == 'PNG')\r\n\t\t\treturn true;\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\r\n\t\t\treturn true;\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUTFBytes(3) == 'ATF')\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\r\n\t\tvar asset:BitmapImage2D;\r\n\t\tvar sizeError:boolean = false;\r\n\r\n\t\tif (this._loadingImage) {\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t} else if (this._htmlImageElement) {\r\n\t\t\tif (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\r\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t}\r\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\r\n\t\t\tvar htmlImageElement:HTMLImageElement = <HTMLImageElement> this.data;\r\n\t\t\tif (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\r\n\r\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t} else {\r\n\t\t\t\tsizeError = true;\r\n\t\t\t}\r\n\r\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\r\n\r\n\t\t\tvar ba:ByteArray = this.data;\r\n\t\t\tba.position = 0;\r\n\t\t\tvar htmlImageElement:HTMLImageElement = ParserUtils.byteArrayToImage(this.data);\r\n\r\n\t\t\tif (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\r\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement);\r\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t\t\t} else {\r\n\t\t\t\tsizeError = true;\r\n\t\t\t}\r\n\r\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\r\n\r\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\r\n\r\n\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\r\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\r\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\r\n\r\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\r\n\r\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\r\n\t\t\tthis._loadingImage = true;\r\n\r\n\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t}\r\n\r\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\r\n\t\t{\r\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\r\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\r\n\t\t}\r\n\r\n\t\tthis._pContent = asset;\r\n\r\n\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t}\r\n\r\n\tpublic onLoadComplete(event)\r\n\t{\r\n\t\tthis._loadingImage = false;\r\n\t}\r\n}\r\n\r\nexport = Image2DParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\n\r\n/**\r\n * ImageCubeParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nclass ImageCubeParser extends ParserBase\r\n{\r\n\tprivate static posX:string = 'posX';\r\n\tprivate static negX:string = 'negX';\r\n\tprivate static posY:string = 'posY';\r\n\tprivate static negY:string = 'negY';\r\n\tprivate static posZ:string = 'posZ';\r\n\tprivate static negZ:string = 'negZ';\r\n\r\n\tprivate _imgDependencyDictionary:Object;\r\n\r\n\t/**\r\n\t * Creates a new ImageCubeParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"cube\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\ttry {\r\n\t\t\tvar obj = JSON.parse(data);\r\n\r\n\t\t\tif (obj) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\r\n\t\t\tvar asset:BitmapImageCube = new BitmapImageCube(this._getBitmapImage2D(ImageCubeParser.posX).width);\r\n\r\n\t\t\tasset.draw(BitmapImageCube.posX, this._getBitmapImage2D(ImageCubeParser.posX));\r\n\t\t\tasset.draw(BitmapImageCube.negX, this._getBitmapImage2D(ImageCubeParser.negX));\r\n\t\t\tasset.draw(BitmapImageCube.posY, this._getBitmapImage2D(ImageCubeParser.posY));\r\n\t\t\tasset.draw(BitmapImageCube.negY, this._getBitmapImage2D(ImageCubeParser.negY));\r\n\t\t\tasset.draw(BitmapImageCube.posZ, this._getBitmapImage2D(ImageCubeParser.posZ));\r\n\t\t\tasset.draw(BitmapImageCube.negZ, this._getBitmapImage2D(ImageCubeParser.negZ));\r\n\r\n\t\t\t//clear dictionary\r\n\t\t\tthis._imgDependencyDictionary = null;\r\n\r\n\t\t\tasset.name = this._iFileName;\r\n\r\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tvar json:any = JSON.parse(this.data);\r\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\r\n\t\t\tvar rec:any;\r\n\r\n\t\t\tif (data.length != 6)\r\n\t\t\t\tthis._pDieWithError('ImageCubeParser: Error - cube texture should have exactly 6 images');\r\n\r\n\t\t\tif (json) {\r\n\t\t\t\tthis._imgDependencyDictionary = new Object();\r\n\r\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\r\n\t\t\t\t\trec = data[c];\r\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this._validateCubeData()) {\r\n\r\n\t\t\t\t\tthis._pDieWithError(\"ImageCubeParser: JSON data error - cubes require id of:   \\n\" + ImageCubeParser.posX + ', ' + ImageCubeParser.negX + ',  \\n' + ImageCubeParser.posY + ', ' + ImageCubeParser.negY + ',  \\n' + ImageCubeParser.posZ + ', ' + ImageCubeParser.negZ);\r\n\r\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\r\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\r\n\t\t}\r\n\r\n\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t}\r\n\r\n\tprivate _validateCubeData():boolean\r\n\t{\r\n\t\treturn  ( this._imgDependencyDictionary[ ImageCubeParser.posX ] != null && this._imgDependencyDictionary[ ImageCubeParser.negX ] != null && this._imgDependencyDictionary[ ImageCubeParser.posY ] != null && this._imgDependencyDictionary[ ImageCubeParser.negY ] != null && this._imgDependencyDictionary[ ImageCubeParser.posZ ] != null && this._imgDependencyDictionary[ ImageCubeParser.negZ ] != null );\r\n\t}\r\n\r\n\tprivate _getBitmapImage2D(name:string):BitmapImage2D\r\n\t{\r\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\r\n\r\n\t\tif (dependency)\r\n\t\t\treturn <BitmapImage2D> dependency.assets[0];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n\r\nexport = ImageCubeParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\r\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\nimport Timer\t\t\t\t\t= require(\"awayjs-core/lib/utils/Timer\");\r\nimport getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\n/**\r\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\r\n * supported by away.\r\n *\r\n * If used by <code>LoaderSession</code> to automatically determine the parser type, two public static methods should\r\n * be implemented, with the following signatures:\r\n *\r\n * <code>public static supportsType(extension : string) : boolean</code>\r\n * Indicates whether or not a given file extension is supported by the parser.\r\n *\r\n * <code>public static supportsData(data : *) : boolean</code>\r\n * Tests whether a data block can be parsed by the parser.\r\n *\r\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\r\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\r\n * handle regardless of whether the object was loaded or not.\r\n *\r\n * @see LoaderSession\r\n */\r\nclass ParserBase extends EventDispatcher\r\n{\r\n\tpublic _isParsing:boolean;\r\n\tpublic _iFileName:string;\r\n\tprivate _dataFormat:string;\r\n\tprivate _data:any;\r\n\tprivate _frameLimit:number;\r\n\tprivate _lastFrameTime:number;\r\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\r\n\tpublic _pContent:IAsset;\r\n\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\t// Needs to be implemented in all Parsers (\r\n\t//<code>public static supportsType(extension : string) : boolean</code>\r\n\t//* Indicates whether or not a given file extension is supported by the parser.\r\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate _dependencies:Array<ResourceDependency>;\r\n\tprivate _parsingPaused:boolean;\r\n\tprivate _parsingComplete:boolean;\r\n\tprivate _parsingFailure:boolean;\r\n\tprivate _timer:Timer;\r\n\tprivate _materialMode:number;\r\n\r\n\t/**\r\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\r\n\t */\r\n\tpublic static PARSING_DONE:boolean = true;\r\n\t/* Protected */\r\n\r\n\t/**\r\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\r\n\t */\r\n\tpublic static MORE_TO_PARSE:boolean = false;\r\n\t/* Protected */\r\n\r\n\r\n\tpublic get content():IAsset\r\n\t{\r\n\t\treturn this._pContent;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new ParserBase object\r\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\r\n\t *\r\n\t * @see away.loading.parsers.ParserDataFormat\r\n\t */\r\n\tconstructor(format:string)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._materialMode = 0;\r\n\t\tthis._dataFormat = format;\r\n\t\tthis._dependencies = new Array<ResourceDependency>();\r\n\r\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\r\n\t */\r\n\r\n\tpublic isBitmapImage2DValid(bitmapImage2D:BitmapImage2D):boolean\r\n\t{\r\n\t\tvar isValid:boolean = ImageUtils.isImage2DValid(bitmapImage2D);\r\n\r\n\t\tif (!isValid) {\r\n\r\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\r\n\t\t}\r\n\r\n\t\treturn isValid;\r\n\t}\r\n\r\n\tpublic set parsingFailure(b:boolean)\r\n\t{\r\n\t\tthis._parsingFailure = b;\r\n\t}\r\n\r\n\tpublic get parsingFailure():boolean\r\n\t{\r\n\t\treturn this._parsingFailure;\r\n\t}\r\n\r\n\tpublic get parsingPaused():boolean\r\n\t{\r\n\t\treturn this._parsingPaused;\r\n\t}\r\n\r\n\tpublic get parsingComplete():boolean\r\n\t{\r\n\t\treturn this._parsingComplete;\r\n\t}\r\n\r\n\tpublic set materialMode(newMaterialMode:number)\r\n\t{\r\n\t\tthis._materialMode = newMaterialMode;\r\n\t}\r\n\r\n\tpublic get materialMode():number\r\n\t{\r\n\t\treturn this._materialMode;\r\n\t}\r\n\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\t/**\r\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\r\n\t */\r\n\tpublic get dataFormat():string\r\n\t{\r\n\t\treturn this._dataFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\r\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\r\n\t * next frame.\r\n\t *\r\n\t * @param data The untyped data object in which the loaded data resides.\r\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\r\n\t * actual time spent on a frame can exceed this number since time-checks can\r\n\t * only be performed between logical sections of the parsing procedure.\r\n\t */\r\n\tpublic parseAsync(data:any, frameLimit:number = 30)\r\n\t{\r\n\t\tthis._data = data;\r\n\t\tthis._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\t/**\r\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\r\n\t */\r\n\tpublic get dependencies():Array<ResourceDependency>\r\n\t{\r\n\t\treturn this._dependencies;\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\r\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\r\n\t * dependency should be a member of the dependencies property.\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency name\r\n\t *\r\n\t * @param resourceDependency The dependency to be resolved.\r\n\t */\r\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\r\n\t{\r\n\t\treturn asset.name;\r\n\t}\r\n\r\n\tpublic _iResumeParsing()\r\n\t{\r\n\t\tthis._parsingPaused = false;\r\n\r\n\t\tif (this._timer)\r\n\t\t\tthis._timer.start();\r\n\r\n\t\t//get started!\r\n\t\tif (!this._isParsing)\r\n\t\t\tthis._pOnInterval();\r\n\t}\r\n\r\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null)\r\n\t{\r\n\t\tvar type_event:string;\r\n\t\tvar type_name:string;\r\n\r\n\t\tif (name != null)\r\n\t\t\tasset.name = name;\r\n\r\n\t\t// If the asset has no name, give it\r\n\t\t// a per-type default name.\r\n\t\tif (!asset.name)\r\n\t\t\tasset.name = asset.assetType;\r\n\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\r\n\t}\r\n\r\n\t/**\r\n\t * Parse the next block of data.\r\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\r\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pDieWithError(message:string = 'Unknown parsing error')\r\n\t{\r\n\t\tif (this._timer) {\r\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\t\tthis._timer.stop();\r\n\t\t\tthis._timer = null;\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\r\n\t}\r\n\r\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false, sub_id:number=0):ResourceDependency\r\n\t{\r\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents, sub_id);\r\n\t\tthis._dependencies.push(dependency);\r\n\r\n\t\treturn dependency;\r\n\t}\r\n\r\n\tpublic _pPauseAndRetrieveDependencies()\r\n\t{\r\n\t\tthis._pPauseParsing();\r\n\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\r\n\t}\r\n\r\n\tpublic _pPauseParsing()\r\n\t{\r\n\t\tif (this._timer)\r\n\t\t\tthis._timer.stop();\r\n\r\n\t\tthis._parsingPaused = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\r\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\r\n\t */\r\n\tpublic _pHasTime():boolean\r\n\t{\r\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the parsing pause interval has passed and parsing can proceed.\r\n\t */\r\n\tpublic _pOnInterval(event:TimerEvent = null)\r\n\t{\r\n\t\tthis._lastFrameTime = getTimer();\r\n\t\tthis._isParsing = true;\r\n\r\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\r\n\t\t\tthis._pFinishParsing();\r\n\r\n\t\tthis._isParsing = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the parsing of data.\r\n\t * @param frameLimit The maximum duration of a parsing session.\r\n\t */\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\tthis._frameLimit = frameLimit;\r\n\t\tthis._timer = new Timer(this._frameLimit, 0);\r\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\tthis._timer.start();\r\n\r\n\t\t//get started!\r\n\t\tthis._pOnInterval();\r\n\t}\r\n\r\n\t/**\r\n\t * Finish parsing the data.\r\n\t */\r\n\tpublic _pFinishParsing()\r\n\t{\r\n\t\tif (this._timer) {\r\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\r\n\t\t\tthis._timer.stop();\r\n\t\t}\r\n\r\n\t\tthis._timer = null;\r\n\t\tthis._parsingComplete = true;\r\n\t\tthis._isParsing = false;\r\n\r\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetTextData():string\r\n\t{\r\n\t\treturn ParserUtils.toString(this._data);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetByteData():ByteArray\r\n\t{\r\n\t\treturn ParserUtils.toByteArray(this._data);\r\n\t}\r\n}\r\n\r\nexport = ParserBase;",
    "/**\r\n * An enumeration providing values to describe the data format of parsed data.\r\n */\r\nclass ParserDataFormat\r\n{\r\n\t/**\r\n\t * Describes the format of a binary file.\r\n\t */\r\n\tpublic static BINARY:string = \"binary\";\r\n\r\n\t/**\r\n\t * Describes the format of a plain text file.\r\n\t */\r\n\tpublic static PLAIN_TEXT:string = \"plainText\";\r\n\r\n\t/**\r\n\t * Describes the format of an image file\r\n\t */\r\n\tpublic static IMAGE:string = \"image\";\r\n\r\n}\r\n\r\nexport = ParserDataFormat;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport WaveAudio\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nclass ParserUtils\r\n{\r\n\tprivate static arrayBufferToBase64(data:ArrayBuffer, mimeType:string)\r\n\t{\r\n\t\tvar byteStr:string = '';\r\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\r\n\t\tvar len:number = bytes.byteLength;\r\n\r\n\t\tfor (var i = 0; i < len; i++)\r\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\r\n\r\n\t\tvar base64Image:string = window.btoa(byteStr);\r\n\t\treturn 'data:' + mimeType + ';base64,' + base64Image;\r\n\t}\r\n\r\n\tpublic static arrayBufferToAudio(data:ArrayBuffer, fileType:string):HTMLAudioElement\r\n\t{\r\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'audio/' + fileType);\r\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\r\n\t\taudio.src = str;\r\n\t\treturn audio;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an ArrayBuffer to a base64 string\r\n\t *\r\n\t * @param image data as a ByteArray\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\r\n\t{\r\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'image/png');\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = str;\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\r\n\t *\r\n\t * @param image data as a ByteArray\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\r\n\t{\r\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'image/png');\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = str;\r\n\t\treturn img;\r\n\t}\r\n\r\n\tpublic static byteArrayToAudio(data:ByteArray, filetype:string):HTMLAudioElement\r\n\t{\r\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'audio/' + filetype);\r\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\r\n\t\taudio.src = str;\r\n\t\treturn audio;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Blob to an Image - returns an HTMLImageElement\r\n\t *\r\n\t * @param image data as a Blob\r\n\t *\r\n\t * @return HTMLImageElement\r\n\t *\r\n\t */\r\n\tpublic static blobToImage(data:Blob):HTMLImageElement\r\n\t{\r\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\r\n\t\tvar src = URLObj.createObjectURL(data);\r\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\r\n\t\timg.src = src;\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Blob to audio - returns an HTMLAudioElement\r\n\t *\r\n\t * @param audio data as a Blob\r\n\t *\r\n\t * @return HTMLAudioElement\r\n\t *\r\n\t */\r\n\tpublic static blobToAudio(data:Blob):HTMLAudioElement\r\n\t{\r\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\r\n\t\tvar src = URLObj.createObjectURL(data);\r\n\t\tvar img:HTMLAudioElement = <HTMLAudioElement> new Audio();\r\n\t\timg.src = src;\r\n\t\treturn img;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static imageToBitmapImage2D(img:HTMLImageElement):BitmapImage2D\r\n\t{\r\n\t\tvar bitmapData:BitmapImage2D = new BitmapImage2D(img.width, img.height, true);\r\n\t\tbitmapData.draw(img);\r\n\r\n\t\treturn bitmapData;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a object as ByteArray, if possible.\r\n\t *\r\n\t * @param data The object to return as ByteArray\r\n\t *\r\n\t * @return The ByteArray or null\r\n\t *\r\n\t */\r\n\tpublic static toByteArray(data:any):ByteArray\r\n\t{\r\n\t\tvar b:ByteArray = new ByteArray();\r\n\t\tb.setArrayBuffer(data);\r\n\t\treturn b;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a object as String, if possible.\r\n\t *\r\n\t * @param data The object to return as String\r\n\t * @param length The length of the returned String\r\n\t *\r\n\t * @return The String or null\r\n\t *\r\n\t */\r\n\tpublic static toString(data:any, length:number = 0):string\r\n\t{\r\n\r\n\t\tif (typeof data === 'string') {\r\n\t\t\tvar s:string = <string> data;\r\n\r\n\t\t\tif (s['substr'] != null)\r\n\t\t\t\treturn s.substr(0, s.length);\r\n\t\t}\r\n\r\n\t\tif (data instanceof ByteArray) {\r\n\t\t\tvar ba:ByteArray = <ByteArray> data;\r\n\t\t\tba.position = 0;\r\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t\t/*\r\n\t\t var ba:ByteArray;\r\n\r\n\t\t length ||= uint.MAX_VALUE;\r\n\r\n\t\t if (data is String)\r\n\t\t return String(data).substr(0, length);\r\n\r\n\t\t ba = toByteArray(data);\r\n\t\t if (ba) {\r\n\t\t ba.position = 0;\r\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\r\n\t\t }\r\n\r\n\t\t return null;\r\n\r\n\t\t */\r\n\r\n\t}\r\n}\r\n\r\nexport = ParserUtils;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\n/**\r\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\r\n * required by a parser, used by ResourceLoadSession.\r\n *\r\n */\r\nclass ResourceDependency\r\n{\r\n\tprivate _id:string;\r\n\tprivate _sub_id:number;\r\n\r\n\tprivate _request:URLRequest;\r\n\tprivate _assets:Array<IAsset>;\r\n\tprivate _parser:ParserBase;\r\n\tprivate _parentParser:ParserBase;\r\n\tprivate _data:any;\r\n\tprivate _retrieveAsRawData:boolean;\r\n\tprivate _suppressAssetEvents:boolean;\r\n\tprivate _dependencies:Array<ResourceDependency>;\r\n\r\n\tpublic _iLoader:URLLoader;\r\n\tpublic _iSuccess:boolean;\r\n\r\n\r\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false, sub_id:number=0)\r\n\t{\r\n\t\tthis._id = id;\r\n\t\tthis._sub_id = sub_id;\r\n\t\tthis._request = request;\r\n\t\tthis._data = data;\r\n\t\tthis._parser = parser;\r\n\t\tthis._parentParser = parentParser;\r\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\r\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\r\n\t\tthis._assets = new Array<IAsset>();\r\n\t\tthis._dependencies = new Array<ResourceDependency>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get id():string\r\n\t{\r\n\t\treturn this._id;\r\n\t}\r\n\tpublic get sub_id():number\r\n\t{\r\n\t\treturn this._sub_id;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get request():URLRequest\r\n\t{\r\n\t\treturn this._request;\r\n\t}\r\n\r\n\t/**\r\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\r\n\t */\r\n\tpublic get data():any\r\n\t{\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parser():ParserBase\r\n\t{\r\n\t\treturn this._parser;\r\n\t}\r\n\r\n\t/**\r\n\t * The parser which is dependent on this ResourceDependency object.\r\n\t */\r\n\tpublic get parentParser():ParserBase\r\n\t{\r\n\t\treturn this._parentParser;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get retrieveAsRawData():boolean\r\n\t{\r\n\t\treturn this._retrieveAsRawData;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get suppresAssetEvents():boolean\r\n\t{\r\n\t\treturn this._suppressAssetEvents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assets():Array<IAsset>\r\n\t{\r\n\t\treturn this._assets;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get dependencies():Array<ResourceDependency>\r\n\t{\r\n\t\treturn this._dependencies;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * Method to set data after having already created the dependency object, e.g. after load.\r\n\t */\r\n\tpublic _iSetData(data:any):void\r\n\t{\r\n\t\tthis._data = data;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t */\r\n\tpublic _iSetParser(parser:ParserBase):void\r\n\t{\r\n\t\tthis._parser = parser;\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\r\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\r\n\t * to its intended parent. The dependency should be a member of the dependencies property.\r\n\t */\r\n\tpublic resolve():void\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\tthis._parentParser._iResolveDependency(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\r\n\t */\r\n\tpublic resolveFailure():void\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve the dependencies name\r\n\t */\r\n\tpublic resolveName(asset:IAsset):string\r\n\t{\r\n\t\tif (this._parentParser)\r\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\r\n\r\n\t\treturn asset.name;\r\n\t}\r\n}\r\n\r\nexport = ResourceDependency;",
    "import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\r\nimport XmlUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/XmlUtils\");\r\n\r\n/**\r\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\r\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\r\n * exception cases.\r\n */\r\nclass TextureAtlasParser extends ParserBase\r\n{\r\n\tprivate _doc:Node;\r\n\tprivate _imagePath:string;\r\n\tprivate _imageData:BitmapImage2D;\r\n\tprivate _subTextureNodes:NodeList;\r\n\tprivate _parseState:number = 0;\r\n\r\n\t/**\r\n\t * Creates a new TextureAtlasParser object.\r\n\t * @param uri The url or id of the data or file to be parsed.\r\n\t * @param extra The holder for extra contextual data that the parser might need.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.TEXT);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not a given file extension is supported by the parser.\r\n\t * @param extension The file extension of a potential file to be parsed.\r\n\t * @return Whether or not the given file type is supported.\r\n\t */\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"xml\";\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether a data block can be parsed by the parser.\r\n\t * @param data The data block to potentially be parsed.\r\n\t * @return Whether or not the given data is supported.\r\n\t */\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\ttry {\r\n\t\t\tvar content:string = ParserUtils.toString(data);\r\n\t\t\tif(content.indexOf(\"TextureAtlas\") != -1 || content.indexOf(\"textureatlas\") != -1)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\treturn false;\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tif(resourceDependency.assets.length) {\r\n\t\t\tthis._imageData = <BitmapImage2D> resourceDependency.assets[0];\r\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_SUBTEXTURES;\r\n\t\t} else {\r\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\r\n\t{\r\n\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tvar nodes:NodeList;\r\n\r\n\t\tswitch(this._parseState) {\r\n\t\t\tcase TextureAtlasParserState.PARSE_XML:\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._doc = XmlUtils.getChildrenWithTag(XmlUtils.strToXml(this._pGetTextData()), \"TextureAtlas\")[0];\r\n\r\n\t\t\t\t\tthis._imagePath = XmlUtils.readAttributeValue(this._doc, \"imagePath\");\r\n\r\n\t\t\t\t\tthis._subTextureNodes = XmlUtils.getChildrenWithTag(this._doc, \"SubTexture\");\r\n\r\n\t\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_IMAGE;\r\n\r\n\t\t\t\t} catch(Error) {\r\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase TextureAtlasParserState.PARSE_IMAGE:\r\n\t\t\t\tif (this._imagePath){\r\n\t\t\t\t\tthis._pAddDependency(this._imagePath, new URLRequest(this._imagePath));\r\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase TextureAtlasParserState.PARSE_SUBTEXTURES:\r\n\t\t\t\tvar bitmap:Sampler2D;\r\n\t\t\t\tvar element:Node;\r\n\t\t\t\tvar x:string;\r\n\t\t\t\tvar y:string;\r\n\t\t\t\tvar width:string;\r\n\t\t\t\tvar height:string;\r\n\t\t\t\tvar len:number = this._subTextureNodes.length;\r\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\t\t\telement = this._subTextureNodes[i];\r\n\t\t\t\t\tbitmap = new Sampler2D(this._imageData);\r\n\r\n\t\t\t\t\t//setup subtexture rect\r\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"x\");\r\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"y\");\r\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"width\");\r\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"height\");\r\n\t\t\t\t\tif (x || y || width || height)\r\n\t\t\t\t\t\tbitmap.imageRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\r\n\r\n\t\t\t\t\t//setup frame rect\r\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"frameX\");\r\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"frameY\");\r\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"frameWidth\");\r\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"frameHeight\");\r\n\t\t\t\t\tif (x || y || width || height)\r\n\t\t\t\t\t\tbitmap.frameRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\r\n\r\n\t\t\t\t\tthis._pFinalizeAsset(bitmap, XmlUtils.readAttributeValue(element, \"name\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase TextureAtlasParserState.PARSE_COMPLETE:\r\n\t\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t}\r\n\r\n\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t}\r\n}\r\n\r\nexport = TextureAtlasParser;\r\n\r\nclass TextureAtlasParserState {\r\n\tpublic static PARSE_XML:number = 0;\r\n\tpublic static PARSE_IMAGE:number = 1;\r\n\tpublic static PARSE_SUBTEXTURES:number = 2;\r\n\tpublic static PARSE_COMPLETE:number = 3;\r\n}",
    "import WaveAudio\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nclass WaveAudioParser extends ParserBase\r\n{\r\n\tprivate _noAudio:boolean;\r\n\r\n\tprivate static _audioCtx;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(URLLoaderDataFormat.BLOB);\r\n\t}\r\n\r\n\tpublic static getAudioContext()\r\n\t{\r\n\t\tvar audioCtx = this._audioCtx || (this._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\r\n\r\n\t\taudioCtx.sampleRate = 22050;\r\n\r\n\t\treturn audioCtx;\r\n\t}\r\n\r\n\tpublic static supportsType(extension:string):boolean\r\n\t{\r\n\r\n\t\textension = extension.toLowerCase();\r\n\t\treturn extension == \"wav\" || extension == \"mp3\" || extension == \"ogg\";\r\n\r\n\t}\r\n\r\n\tpublic static supportsData(data:any):boolean\r\n\t{\r\n\t\tif (!(data instanceof ByteArray))\r\n\t\t\treturn false;\r\n\r\n\t\tvar ba:ByteArray = <ByteArray> data;\r\n\t\tvar filetype : string = WaveAudioParser.parseFileType(ba);\r\n\t\treturn filetype? true : false;\r\n\t}\r\n\r\n\tpublic _pStartParsing(frameLimit:number)\r\n\t{\r\n\t\t//clear content\r\n\t\tdelete this._pContent;\r\n\t\tthis._pContent = null;\r\n\t\tthis._noAudio = false;\r\n\r\n\t\tsuper._pStartParsing(frameLimit);\r\n\t}\r\n\r\n\tpublic _pProceedParsing():boolean\r\n\t{\r\n\t\tif (this._noAudio || this._pContent) {\r\n\t\t\treturn ParserBase.PARSING_DONE;\r\n\t\t} else  if (this.data instanceof ByteArray) { // Parse a ByteArray\r\n\t\t\tthis._pContent = new WaveAudio(this.data.arraybytes, WaveAudioParser.getAudioContext());\r\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\r\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\r\n\t\t\tthis._pContent = new WaveAudio(this.data, WaveAudioParser.getAudioContext());\r\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\r\n\t\t}\r\n\r\n\t\treturn ParserBase.PARSING_DONE;\r\n\r\n\t}\r\n\r\n\tpublic onLoadComplete(buffer)\r\n\t{\r\n\t\tthis._pContent = new WaveAudio(buffer, WaveAudioParser.getAudioContext());\r\n\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\r\n\t\tthis._iResumeParsing();\r\n\t}\r\n\r\n\tpublic onError(event)\r\n\t{\r\n\t\tthis._noAudio = true;\r\n\t\tthis._iResumeParsing();\r\n\t}\r\n\t//\r\n\t//private _decodeData()\r\n\t//{\r\n\t//\tWaveAudioParser.getAudioContext().decodeAudioData(this._buffer, (buffer) => this.onLoadComplete(buffer), (event) => this.onError(event));\r\n\t//\r\n\t//}\r\n\t//\r\n\t//private _syncStream():boolean\r\n\t//{\r\n\t//\tvar b = new Uint8Array(this._buffer);\r\n\t//\tb[\"indexOf\"] = Array.prototype.indexOf;\r\n\t//\r\n\t//\tvar i:number = 1;\r\n\t//\twhile(1) {\r\n\t//\t\ti = b[\"indexOf\"](0xFF, i);\r\n\t//\r\n\t//\t\tif (i == -1 || (b[i+1] & 0xE0) == 0xE0)\r\n\t//\t\t\tbreak;\r\n\t//\r\n\t//\t\ti++;\r\n\t//\t}\r\n\t//\r\n\t//\tif (i != -1) {\r\n\t//\t\tvar temp = this._buffer.slice(i);\r\n\t//\t\tdelete(this._buffer);\r\n\t//\t\tthis._buffer = temp;\r\n\t//\t\treturn true;\r\n\t//\t}\r\n\t//\r\n\t//\treturn false;\r\n\t//}\r\n\r\n\t//public _pProceedParsing():boolean\r\n\t//{\r\n\t//\r\n\t//\tvar asset:WaveAudio;\r\n\t//\r\n\t//\tif (this._loadingImage) {\r\n\t//\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t//\t}\r\n\t//\telse if (this._htmlAudioElement) {\r\n\t//\t\tasset = ParserUtils.audioToWaveAudio(this._htmlAudioElement);\r\n\t//\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t//\t}\r\n\t//\telse if (this.data instanceof HTMLAudioElement) {// Parse HTMLImageElement\r\n\t//\t\tvar htmlAudioElement:HTMLAudioElement = <HTMLAudioElement> this.data;\r\n\t//\t\tasset = ParserUtils.audioToWaveAudio(htmlAudioElement);\r\n\t//\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t//\t}\r\n\t//\telse if (this.data instanceof ByteArray) { // Parse a ByteArray\r\n\t//\t\tvar ba:ByteArray = this.data;\r\n\t//\t\tvar filetype = WaveAudioParser.parseFileType(ba);\r\n\t//\t\tvar htmlAudioElement:HTMLAudioElement = ParserUtils.byteArrayToAudio(ba, filetype);\r\n\t//\t\tasset = ParserUtils.audioToWaveAudio(htmlAudioElement);\r\n\t//\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t//\t}\r\n\t//\telse if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\r\n\t//\t\tvar filetype = WaveAudioParser.parseFileType(this.data.arraybytes);\r\n\t//\t\tthis._htmlAudioElement = ParserUtils.arrayBufferToAudio(this.data, filetype);\r\n\t//\r\n\t//\t\tasset = ParserUtils.audioToWaveAudio(this._htmlAudioElement);\r\n\t//\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\r\n\t//\r\n\t//\t}\r\n\t//\telse if (this.data instanceof Blob) { // Parse a Blob\r\n\t//\r\n\t//\t\tthis._htmlAudioElement = ParserUtils.blobToAudio(this.data);\r\n\t//\r\n\t//\t\tthis._htmlAudioElement.onloadeddata = (event) => this.onLoadComplete(event);\r\n\t//\t\tthis._htmlAudioElement.onerror = (event) => this.onError(event);\r\n\t//\t\tthis._loadingImage = true;\r\n\t//\r\n\t//\t\treturn ParserBase.MORE_TO_PARSE;\r\n\t//\t}\r\n\t//\r\n\t//\tthis._pContent = asset;\r\n\t//\r\n\t//\treturn ParserBase.PARSING_DONE;\r\n\t//\r\n\t//}\r\n\t//\r\n\t//public onLoadComplete(event)\r\n\t//{\r\n\t//\tthis._loadingImage = false;\r\n\t//}\r\n\t//\r\n\t//public onError(event)\r\n\t//{\r\n\t//\tconsole.log(event.target.error);\r\n\t//\tthis._loadingImage = false;\r\n\t//}\r\n\r\n\tprivate static parseFileType(ba:ByteArray):string\r\n\t{\r\n\t\tba.position = 0;\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUnsignedShort() & 0xFFE0) {\r\n\t\t\treturn 'mp3'; // test for MP3 syncword\r\n\t\t}\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUTFBytes(4) == 'RIFF')\r\n\t\t\treturn 'wav';\r\n\r\n\t\tba.position = 0;\r\n\t\tif (ba.readUTFBytes(4) == 'OggS')\r\n\t\t\treturn 'ogg';\r\n\r\n\t\tba.position = 0;\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport = WaveAudioParser;",
    "/**\r\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\r\n *\r\n * @see away.projections.PerspectiveLens#coordinateSystem\r\n */\r\nclass CoordinateSystem\r\n{\r\n\t/**\r\n\t * Default option, projects to a left-handed coordinate system\r\n\t */\r\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\r\n\r\n\t/**\r\n\t * Projects to a right-handed coordinate system\r\n\t */\r\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\r\n}\r\n\r\nexport = CoordinateSystem;",
    "import PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass FreeMatrixProjection extends ProjectionBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tthis._pNear = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tthis._pFar = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set iAspectRatio(value:number)\r\n\t{\r\n\t\tthis._pAspectRatio = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\r\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone.pInvalidateMatrix();\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}\r\n\r\nexport = FreeMatrixProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass ObliqueNearPlaneProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _baseProjection:IProjection;\r\n\tprivate _plane:Plane3D;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.baseProjection = baseProjection;\r\n\t\tthis.plane = plane;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get frustumCorners():number[]\r\n\t{\r\n\t\treturn this._baseProjection.frustumCorners;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get near():number\r\n\t{\r\n\t\treturn this._baseProjection.near;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tthis._baseProjection.near = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get far():number\r\n\t{\r\n\t\treturn this._baseProjection.far;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tthis._baseProjection.far = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get iAspectRatio():number\r\n\t{\r\n\t\treturn this._baseProjection._iAspectRatio;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic set iAspectRatio(value:number)\r\n\t{\r\n\t\tthis._baseProjection._iAspectRatio = value;\r\n\t}\r\n\r\n\tpublic get plane():Plane3D\r\n\t{\r\n\t\treturn this._plane;\r\n\t}\r\n\r\n\tpublic set plane(value:Plane3D)\r\n\t{\r\n\t\tthis._plane = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic set baseProjection(value:IProjection)\r\n\t{\r\n\t\tif (this._baseProjection) {\r\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\t}\r\n\t\tthis._baseProjection = value;\r\n\r\n\t\tif (this._baseProjection) {\r\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\t}\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\r\n\r\n\t\tvar cx:number = this._plane.a;\r\n\t\tvar cy:number = this._plane.b;\r\n\t\tvar cz:number = this._plane.c;\r\n\t\tvar cw:number = -this._plane.d + .05;\r\n\t\tvar signX:number = cx >= 0? 1 : -1;\r\n\t\tvar signY:number = cy >= 0? 1 : -1;\r\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\r\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\r\n\t\tinverse.invert();\r\n\t\tvar q:Vector3D = inverse.transformVector(p);\r\n\t\tthis._pMatrix.copyRowTo(3, p);\r\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\r\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\r\n\t}\r\n}\r\n\r\nexport = ObliqueNearPlaneProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass OrthographicOffCenterProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _minX:number;\r\n\tprivate _maxX:number;\r\n\tprivate _minY:number;\r\n\tprivate _maxY:number;\r\n\r\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._minX = minX;\r\n\t\tthis._maxX = maxX;\r\n\t\tthis._minY = minY;\r\n\t\tthis._maxY = maxY;\r\n\t}\r\n\r\n\tpublic get minX():number\r\n\t{\r\n\t\treturn this._minX;\r\n\t}\r\n\r\n\tpublic set minX(value:number)\r\n\t{\r\n\t\tthis._minX = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get maxX():number\r\n\t{\r\n\t\treturn this._maxX;\r\n\t}\r\n\r\n\tpublic set maxX(value:number)\r\n\t{\r\n\t\tthis._maxX = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get minY():number\r\n\t{\r\n\t\treturn this._minY;\r\n\t}\r\n\r\n\tpublic set minY(value:number)\r\n\t{\r\n\t\tthis._minY = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get maxY():number\r\n\t{\r\n\t\treturn this._maxY;\r\n\t}\r\n\r\n\tpublic set maxY(value:number)\r\n\t{\r\n\t\tthis._maxY = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar w:number = 1/(this._maxX - this._minX);\r\n\t\tvar h:number = 1/(this._maxY - this._minY);\r\n\t\tvar d:number = 1/(this._pFar - this._pNear);\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(this._maxX + this._minX)*w;\r\n\t\traw[13] = -(this._maxY + this._minY)*h;\r\n\t\traw[14] = -this._pNear*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}\r\n\r\nexport = OrthographicOffCenterProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass OrthographicProjection extends ProjectionBase\r\n{\r\n\r\n\tprivate _projectionHeight:number;\r\n\tprivate _xMax:number;\r\n\tprivate _yMax:number;\r\n\r\n\tconstructor(projectionHeight:number = 500)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._projectionHeight = projectionHeight;\r\n\t}\r\n\r\n\tpublic get projectionHeight():number\r\n\t{\r\n\t\treturn this._projectionHeight;\r\n\t}\r\n\r\n\tpublic set projectionHeight(value:number)\r\n\t{\r\n\t\tif (value == this._projectionHeight) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._projectionHeight = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone.projectionHeight = this._projectionHeight;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tthis._yMax = this._projectionHeight*.5;\r\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\r\n\r\n\t\tvar left:number;\r\n\t\tvar right:number;\r\n\t\tvar top:number;\r\n\t\tvar bottom:number;\r\n\r\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\r\n\t\t\t// assume symmetric frustum\r\n\r\n\t\t\tleft = -this._xMax;\r\n\t\t\tright = this._xMax;\r\n\t\t\ttop = -this._yMax;\r\n\t\t\tbottom = this._yMax;\r\n\r\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\r\n\t\t\traw[5] = 2/this._projectionHeight;\r\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\r\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\r\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\r\n\t\t\traw[15] = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\r\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\r\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\r\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\r\n\r\n\t\t\tleft = center - xWidth;\r\n\t\t\tright = center + xWidth;\r\n\t\t\ttop = middle - yHgt;\r\n\t\t\tbottom = middle + yHgt;\r\n\r\n\t\t\traw[0] = 2*1/(right - left);\r\n\t\t\traw[5] = -2*1/(top - bottom);\r\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\r\n\r\n\t\t\traw[12] = (right + left)/(right - left);\r\n\t\t\traw[13] = (bottom + top)/(bottom - top);\r\n\t\t\traw[14] = this._pNear/(this.near - this.far);\r\n\r\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\t\traw[15] = 1;\r\n\t\t}\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\t}\r\n}\r\n\r\nexport= OrthographicProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport CoordinateSystem\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\r\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\r\n\r\nclass PerspectiveProjection extends ProjectionBase\r\n{\r\n\tprivate _fieldOfView:number = 60;\r\n\tprivate _focalLength:number = 1000;\r\n\tprivate _hFieldOfView:number = 60;\r\n\tprivate _hFocalLength:number = 1000;\r\n\tprivate _preserveAspectRatio:boolean = true;\r\n\tprivate _preserveFocalLength:boolean = false;\r\n\r\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\r\n\t{\r\n\t\tsuper(coordinateSystem);\r\n\t\tthis.fieldOfView = fieldOfView;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get preserveAspectRatio():boolean\r\n\t{\r\n\t\treturn this._preserveAspectRatio;\r\n\t}\r\n\r\n\tpublic set preserveAspectRatio(value:boolean)\r\n\t{\r\n\t\tif (this._preserveAspectRatio == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._preserveAspectRatio = value;\r\n\r\n\t\tif (this._preserveAspectRatio)\r\n\t\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get preserveFocalLength():boolean\r\n\t{\r\n\t\treturn this._preserveFocalLength;\r\n\t}\r\n\r\n\tpublic set preserveFocalLength(value:boolean)\r\n\t{\r\n\t\tif (this._preserveFocalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._preserveFocalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get fieldOfView():number\r\n\t{\r\n\t\treturn this._fieldOfView;\r\n\t}\r\n\r\n\tpublic set fieldOfView(value:number)\r\n\t{\r\n\t\tif (this._fieldOfView == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._fieldOfView = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get focalLength():number\r\n\t{\r\n\t\treturn this._focalLength;\r\n\t}\r\n\r\n\tpublic set focalLength(value:number)\r\n\t{\r\n\t\tif (this._focalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._focalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get hFieldOfView():number\r\n\t{\r\n\t\treturn this._hFieldOfView;\r\n\t}\r\n\r\n\tpublic set hFieldOfView(value:number)\r\n\t{\r\n\t\tif (this._hFieldOfView == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._hFieldOfView = value;\r\n\r\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get hFocalLength():number\r\n\t{\r\n\t\treturn this._hFocalLength;\r\n\t}\r\n\r\n\tpublic set hFocalLength(value:number)\r\n\t{\r\n\t\tif (this._hFocalLength == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._hFocalLength = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\r\n\t//@override\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\r\n\r\n\t\tv.x *= sZ;\r\n\t\tv.y *= sZ;\r\n\r\n\t\tv = this.unprojectionMatrix.transformVector(v);\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = sZ;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\r\n\t\tclone._pNear = this._pNear;\r\n\t\tclone._pFar = this._pFar;\r\n\t\tclone._pAspectRatio = this._pAspectRatio;\r\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tif (this._preserveFocalLength) {\r\n\t\t\tif (this._preserveAspectRatio)\r\n\t\t\t\tthis._hFocalLength = this._focalLength;\r\n\r\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\r\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\r\n\t\t} else {\r\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\r\n\r\n\t\t\tif (this._preserveAspectRatio)\r\n\t\t\t\tthis._hFocalLength = this._focalLength;\r\n\t\t\telse\r\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\r\n\t\t}\r\n\r\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\r\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\r\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\r\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\r\n\r\n\t\tvar left:number;\r\n\t\tvar right:number;\r\n\t\tvar top:number;\r\n\t\tvar bottom:number;\r\n\r\n\t\t// assume scissored frustum\r\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\r\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\r\n\r\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\r\n\t\tright = center;\r\n\t\ttop = middle;\r\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\r\n\r\n\t\traw[0] = 2/(right - left);\r\n\t\traw[5] = 2/(bottom - top);\r\n\t\traw[8] = (right + left)/(right - left);\r\n\t\traw[9] = (bottom + top)/(bottom - top);\r\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\r\n\r\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\r\n\t\t\traw[5] = -raw[5];\r\n\r\n\t\tthis._pMatrix.copyRawDataFrom(raw);\r\n\r\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\r\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\r\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\r\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\r\n\r\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\r\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\r\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\r\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\r\n\r\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\r\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\r\n\r\n\t\tthis._pMatrixInvalid = false;\r\n\r\n\r\n\t}\r\n}\r\n\r\nexport = PerspectiveProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nclass ProjectionBase extends EventDispatcher implements IProjection\r\n{\r\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\r\n\tpublic _pScissorRect:Rectangle = new Rectangle();\r\n\tpublic _pViewPort:Rectangle = new Rectangle();\r\n\tpublic _pNear:number = 20;\r\n\tpublic _pFar:number = 3000;\r\n\tpublic _pAspectRatio:number = 1;\r\n\r\n\tpublic _pMatrixInvalid:boolean = true;\r\n\tpublic _pFrustumCorners:number[] = [];\r\n\tpublic _pCoordinateSystem:string;\r\n\tpublic _pOriginX:number = 0.5;\r\n\tpublic _pOriginY:number = 0.5;\r\n\r\n\tprivate _unprojection:Matrix3D;\r\n\tprivate _unprojectionInvalid:boolean = true;\r\n\r\n\tconstructor(coordinateSystem:string = \"leftHanded\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coordinateSystem = coordinateSystem;\r\n\t}\r\n\r\n\t/**\r\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\r\n\t */\r\n\tpublic get coordinateSystem():string\r\n\t{\r\n\t\treturn this._pCoordinateSystem;\r\n\t}\r\n\r\n\tpublic set coordinateSystem(value:string)\r\n\t{\r\n\t\tif (this._pCoordinateSystem == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pCoordinateSystem = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get frustumCorners():number[]\r\n\t{\r\n\t\treturn this._pFrustumCorners;\r\n\t}\r\n\r\n\tpublic set frustumCorners(frustumCorners:number[])\r\n\t{\r\n\t\tthis._pFrustumCorners = frustumCorners;\r\n\t}\r\n\r\n\tpublic get matrix():Matrix3D\r\n\t{\r\n\t\tif (this._pMatrixInvalid) {\r\n\t\t\tthis.pUpdateMatrix();\r\n\t\t\tthis._pMatrixInvalid = false;\r\n\t\t}\r\n\t\treturn this._pMatrix;\r\n\t}\r\n\r\n\tpublic set matrix(value:Matrix3D)\r\n\t{\r\n\t\tthis._pMatrix = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get near():number\r\n\t{\r\n\t\treturn this._pNear;\r\n\t}\r\n\r\n\tpublic set near(value:number)\r\n\t{\r\n\t\tif (value == this._pNear) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pNear = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic get originX():number\r\n\t{\r\n\t\treturn this._pOriginX;\r\n\t}\r\n\r\n\tpublic set originX(value:number)\r\n\t{\r\n\t\tif (this._pOriginX == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pOriginX = value;\r\n\t}\r\n\r\n\tpublic get originY():number\r\n\t{\r\n\t\treturn this._pOriginY;\r\n\t}\r\n\r\n\tpublic set originY(value:number)\r\n\t{\r\n\t\tif (this._pOriginY == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pOriginY = value;\r\n\t}\r\n\r\n\tpublic get far():number\r\n\t{\r\n\t\treturn this._pFar;\r\n\t}\r\n\r\n\tpublic set far(value:number)\r\n\t{\r\n\t\tif (value == this._pFar) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pFar = value;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\r\n\t\tv.x = v.x/v.w;\r\n\t\tv.y = -v.y/v.w;\r\n\r\n\t\t//z is unaffected by transform\r\n\t\tv.z = point3d.z;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic get unprojectionMatrix():Matrix3D\r\n\t{\r\n\t\tif (this._unprojectionInvalid) {\r\n\t\t\tif (!this._unprojection)\r\n\t\t\t\tthis._unprojection = new Matrix3D();\r\n\r\n\t\t\tthis._unprojection.copyFrom(this.matrix);\r\n\t\t\tthis._unprojection.invert();\r\n\t\t\tthis._unprojectionInvalid = false;\r\n\t\t}\r\n\t\treturn this._unprojection;\r\n\t}\r\n\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():ProjectionBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get _iAspectRatio():number\r\n\t{\r\n\t\treturn this._pAspectRatio;\r\n\t}\r\n\r\n\tpublic set _iAspectRatio(value:number)\r\n\t{\r\n\t\tif (this._pAspectRatio == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAspectRatio = value;\r\n\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic pInvalidateMatrix()\r\n\t{\r\n\t\tthis._pMatrixInvalid = true;\r\n\t\tthis._unprojectionInvalid = true;\r\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\r\n\t}\r\n\r\n\tpublic pUpdateMatrix()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\t\tthis._pScissorRect.x = x;\r\n\t\tthis._pScissorRect.y = y;\r\n\t\tthis._pScissorRect.width = width;\r\n\t\tthis._pScissorRect.height = height;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n\r\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number)\r\n\t{\r\n\t\tthis._pViewPort.x = x;\r\n\t\tthis._pViewPort.y = y;\r\n\t\tthis._pViewPort.width = width;\r\n\t\tthis._pViewPort.height = height;\r\n\t\tthis.pInvalidateMatrix();\r\n\t}\r\n}\r\n\r\nexport = ProjectionBase;",
    "class Keyboard\r\n{\r\n\t/**\r\n\t * Constant associated with the key code value for the A key (65).\r\n\t */\r\n\tpublic static A:number /*uint*/ = 65;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\r\n\t */\r\n\tpublic static ALTERNATE:number /*uint*/ = 18;\r\n\r\n\t/**\r\n\t * Select the audio mode\r\n\t */\r\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the B key (66).\r\n\t */\r\n\tpublic static B:number /*uint*/ = 66;\r\n\r\n\t/**\r\n\t * Return to previous page in application\r\n\t */\r\n\tpublic static BACK:number /*uint*/ = 0x01000016;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ` key (192).\r\n\t */\r\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the \\ key (220).\r\n\t */\r\n\tpublic static BACKSLASH:number /*uint*/ = 220;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Backspace key (8).\r\n\t */\r\n\tpublic static BACKSPACE:number /*uint*/ = 8;\r\n\r\n\t/**\r\n\t * Blue function key button\r\n\t */\r\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the C key (67).\r\n\t */\r\n\tpublic static C:number /*uint*/ = 67;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Caps Lock key (20).\r\n\t */\r\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\r\n\r\n\t/**\r\n\t * Channel down\r\n\t */\r\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\r\n\r\n\t/**\r\n\t * Channel up\r\n\t */\r\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the , key (188).\r\n\t */\r\n\tpublic static COMMA:number /*uint*/ = 188;\r\n\r\n\t/**\r\n\t * Constant associated with the Mac command key (15). This constant is\r\n\t * currently only used for setting menu key equivalents.\r\n\t */\r\n\tpublic static COMMAND:number /*uint*/ = 15;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Control key (17).\r\n\t */\r\n\tpublic static CONTROL:number /*uint*/ = 17;\r\n\r\n\t/**\r\n\t * An array containing all the defined key name constants.\r\n\t */\r\n\tpublic static CharCodeStrings:Array<any>;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the D key (68).\r\n\t */\r\n\tpublic static D:number /*uint*/ = 68;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Delete key (46).\r\n\t */\r\n\tpublic static DELETE:number /*uint*/ = 46;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Down Arrow key (40).\r\n\t */\r\n\tpublic static DOWN:number /*uint*/ = 40;\r\n\r\n\t/**\r\n\t * Engage DVR application mode\r\n\t */\r\n\tpublic static DVR:number /*uint*/ = 0x01000019;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the E key (69).\r\n\t */\r\n\tpublic static E:number /*uint*/ = 69;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the End key (35).\r\n\t */\r\n\tpublic static END:number /*uint*/ = 35;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Enter key (13).\r\n\t */\r\n\tpublic static ENTER:number /*uint*/ = 13;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the = key (187).\r\n\t */\r\n\tpublic static EQUAL:number /*uint*/ = 187;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Escape key (27).\r\n\t */\r\n\tpublic static ESCAPE:number /*uint*/ = 27;\r\n\r\n\t/**\r\n\t * Exits current application mode\r\n\t */\r\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F key (70).\r\n\t */\r\n\tpublic static F:number /*uint*/ = 70;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F1 key (112).\r\n\t */\r\n\tpublic static F1:number /*uint*/ = 112;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F10 key (121).\r\n\t */\r\n\tpublic static F10:number /*uint*/ = 121;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F11 key (122).\r\n\t */\r\n\tpublic static F11:number /*uint*/ = 122;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F12 key (123).\r\n\t */\r\n\tpublic static F12:number /*uint*/ = 123;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F13 key (124).\r\n\t */\r\n\tpublic static F13:number /*uint*/ = 124;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F14 key (125).\r\n\t */\r\n\tpublic static F14:number /*uint*/ = 125;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F15 key (126).\r\n\t */\r\n\tpublic static F15:number /*uint*/ = 126;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F2 key (113).\r\n\t */\r\n\tpublic static F2:number /*uint*/ = 113;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F3 key (114).\r\n\t */\r\n\tpublic static F3:number /*uint*/ = 114;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F4 key (115).\r\n\t */\r\n\tpublic static F4:number /*uint*/ = 115;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F5 key (116).\r\n\t */\r\n\tpublic static F5:number /*uint*/ = 116;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F6 key (117).\r\n\t */\r\n\tpublic static F6:number /*uint*/ = 117;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F7 key (118).\r\n\t */\r\n\tpublic static F7:number /*uint*/ = 118;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F8 key (119).\r\n\t */\r\n\tpublic static F8:number /*uint*/ = 119;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the F9 key (120).\r\n\t */\r\n\tpublic static F9:number /*uint*/ = 120;\r\n\r\n\t/**\r\n\t * Engage fast-forward transport mode\r\n\t */\r\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the G key (71).\r\n\t */\r\n\tpublic static G:number /*uint*/ = 71;\r\n\r\n\t/**\r\n\t * Green function key button\r\n\t */\r\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\r\n\r\n\t/**\r\n\t * Engage program guide\r\n\t */\r\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the H key (72).\r\n\t */\r\n\tpublic static H:number /*uint*/ = 72;\r\n\r\n\t/**\r\n\t * Engage help application or context-sensitive help\r\n\t */\r\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Home key (36).\r\n\t */\r\n\tpublic static HOME:number /*uint*/ = 36;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the I key (73).\r\n\t */\r\n\tpublic static I:number /*uint*/ = 73;\r\n\r\n\t/**\r\n\t * Info button\r\n\t */\r\n\tpublic static INFO:number /*uint*/ = 0x01000013;\r\n\r\n\t/**\r\n\t * Cycle input\r\n\t */\r\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Insert key (45).\r\n\t */\r\n\tpublic static INSERT:number /*uint*/ = 45;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the J key (74).\r\n\t */\r\n\tpublic static J:number /*uint*/ = 74;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the K key (75).\r\n\t */\r\n\tpublic static K:number /*uint*/ = 75;\r\n\r\n\t/**\r\n\t * The Begin key\r\n\t */\r\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\r\n\r\n\t/**\r\n\t * The Break key\r\n\t */\r\n\tpublic static KEYNAME_BREAK:string = \"Break\";\r\n\r\n\t/**\r\n\t * The Clear Display key\r\n\t */\r\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\r\n\r\n\t/**\r\n\t * The Clear Line key\r\n\t */\r\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\r\n\r\n\t/**\r\n\t * The Delete key\r\n\t */\r\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\r\n\r\n\t/**\r\n\t * The Delete Character key\r\n\t */\r\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\r\n\r\n\t/**\r\n\t * The Delete Line key\r\n\t */\r\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\r\n\r\n\t/**\r\n\t * The down arrow\r\n\t */\r\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\r\n\r\n\t/**\r\n\t * The End key\r\n\t */\r\n\tpublic static KEYNAME_END:string = \"End\";\r\n\r\n\t/**\r\n\t * The Execute key\r\n\t */\r\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\r\n\r\n\t/**\r\n\t * The F1 key\r\n\t */\r\n\tpublic static KEYNAME_F1:string = \"F1\";\r\n\r\n\t/**\r\n\t * The F10 key\r\n\t */\r\n\tpublic static KEYNAME_F10:string = \"F10\";\r\n\r\n\t/**\r\n\t * The F11 key\r\n\t */\r\n\tpublic static KEYNAME_F11:string = \"F11\";\r\n\r\n\t/**\r\n\t * The F12 key\r\n\t */\r\n\tpublic static KEYNAME_F12:string = \"F12\";\r\n\r\n\t/**\r\n\t * The F13 key\r\n\t */\r\n\tpublic static KEYNAME_F13:string = \"F13\";\r\n\r\n\t/**\r\n\t * The F14 key\r\n\t */\r\n\tpublic static KEYNAME_F14:string = \"F14\";\r\n\r\n\t/**\r\n\t * The F15 key\r\n\t */\r\n\tpublic static KEYNAME_F15:string = \"F15\";\r\n\r\n\t/**\r\n\t * The F16 key\r\n\t */\r\n\tpublic static KEYNAME_F16:string = \"F16\";\r\n\r\n\t/**\r\n\t * The F17 key\r\n\t */\r\n\tpublic static KEYNAME_F17:string = \"F17\";\r\n\r\n\t/**\r\n\t * The F18 key\r\n\t */\r\n\tpublic static KEYNAME_F18:string = \"F18\";\r\n\r\n\t/**\r\n\t * The F19 key\r\n\t */\r\n\tpublic static KEYNAME_F19:string = \"F19\";\r\n\r\n\t/**\r\n\t * The F2 key\r\n\t */\r\n\tpublic static KEYNAME_F2:string = \"F2\";\r\n\r\n\t/**\r\n\t * The F20 key\r\n\t */\r\n\tpublic static KEYNAME_F20:string = \"F20\";\r\n\r\n\t/**\r\n\t * The F21 key\r\n\t */\r\n\tpublic static KEYNAME_F21:string = \"F21\";\r\n\r\n\t/**\r\n\t * The F22 key\r\n\t */\r\n\tpublic static KEYNAME_F22:string = \"F22\";\r\n\r\n\t/**\r\n\t * The F23 key\r\n\t */\r\n\tpublic static KEYNAME_F23:string = \"F23\";\r\n\r\n\t/**\r\n\t * The F24 key\r\n\t */\r\n\tpublic static KEYNAME_F24:string = \"F24\";\r\n\r\n\t/**\r\n\t * The F25 key\r\n\t */\r\n\tpublic static KEYNAME_F25:string = \"F25\";\r\n\r\n\t/**\r\n\t * The F26 key\r\n\t */\r\n\tpublic static KEYNAME_F26:string = \"F26\";\r\n\r\n\t/**\r\n\t * The F27 key\r\n\t */\r\n\tpublic static KEYNAME_F27:string = \"F27\";\r\n\r\n\t/**\r\n\t * The F28 key\r\n\t */\r\n\tpublic static KEYNAME_F28:string = \"F28\";\r\n\r\n\t/**\r\n\t * The F29 key\r\n\t */\r\n\tpublic static KEYNAME_F29:string = \"F29\";\r\n\r\n\t/**\r\n\t * The F3 key\r\n\t */\r\n\tpublic static KEYNAME_F3:string = \"F3\";\r\n\r\n\t/**\r\n\t * The F30 key\r\n\t */\r\n\tpublic static KEYNAME_F30:string = \"F30\";\r\n\r\n\t/**\r\n\t * The F31 key\r\n\t */\r\n\tpublic static KEYNAME_F31:string = \"F31\";\r\n\r\n\t/**\r\n\t * The F32 key\r\n\t */\r\n\tpublic static KEYNAME_F32:string = \"F32\";\r\n\r\n\t/**\r\n\t * The F33 key\r\n\t */\r\n\tpublic static KEYNAME_F33:string = \"F33\";\r\n\r\n\t/**\r\n\t * The F34 key\r\n\t */\r\n\tpublic static KEYNAME_F34:string = \"F34\";\r\n\r\n\t/**\r\n\t * The F35 key\r\n\t */\r\n\tpublic static KEYNAME_F35:string = \"F35\";\r\n\r\n\t/**\r\n\t * The F4 key\r\n\t */\r\n\tpublic static KEYNAME_F4:string = \"F4\";\r\n\r\n\t/**\r\n\t * The F5 key\r\n\t */\r\n\tpublic static KEYNAME_F5:string = \"F5\";\r\n\r\n\t/**\r\n\t * The F6 key\r\n\t */\r\n\tpublic static KEYNAME_F6:string = \"F6\";\r\n\r\n\t/**\r\n\t * The F7 key\r\n\t */\r\n\tpublic static KEYNAME_F7:string = \"F7\";\r\n\r\n\t/**\r\n\t * The F8 key\r\n\t */\r\n\tpublic static KEYNAME_F8:string = \"F8\";\r\n\r\n\t/**\r\n\t * The F9 key\r\n\t */\r\n\tpublic static KEYNAME_F9:string = \"F9\";\r\n\r\n\t/**\r\n\t * The Find key\r\n\t */\r\n\tpublic static KEYNAME_FIND:string = \"Find\";\r\n\r\n\t/**\r\n\t * The Help key\r\n\t */\r\n\tpublic static KEYNAME_HELP:string = \"Help\";\r\n\r\n\t/**\r\n\t * The Home key\r\n\t */\r\n\tpublic static KEYNAME_HOME:string = \"Home\";\r\n\r\n\t/**\r\n\t * The Insert key\r\n\t */\r\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\r\n\r\n\t/**\r\n\t * The Insert Character key\r\n\t */\r\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\r\n\r\n\t/**\r\n\t * The Insert Line key\r\n\t */\r\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\r\n\r\n\t/**\r\n\t * The left arrow\r\n\t */\r\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\r\n\r\n\t/**\r\n\t * The Menu key\r\n\t */\r\n\tpublic static KEYNAME_MENU:string = \"Menu\";\r\n\r\n\t/**\r\n\t * The Mode Switch key\r\n\t */\r\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\r\n\r\n\t/**\r\n\t * The Next key\r\n\t */\r\n\tpublic static KEYNAME_NEXT:string = \"Next\";\r\n\r\n\t/**\r\n\t * The Page Down key\r\n\t */\r\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\r\n\r\n\t/**\r\n\t * The Page Up key\r\n\t */\r\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\r\n\r\n\t/**\r\n\t * The Pause key\r\n\t */\r\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\r\n\r\n\t/**\r\n\t * The Previous key\r\n\t */\r\n\tpublic static KEYNAME_PREV:string = \"Prev\";\r\n\r\n\t/**\r\n\t * The PRINT key\r\n\t */\r\n\tpublic static KEYNAME_PRINT:string = \"Print\";\r\n\r\n\t/**\r\n\t * The PRINT Screen\r\n\t */\r\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\r\n\r\n\t/**\r\n\t * The Redo key\r\n\t */\r\n\tpublic static KEYNAME_REDO:string = \"Redo\";\r\n\r\n\t/**\r\n\t * The Reset key\r\n\t */\r\n\tpublic static KEYNAME_RESET:string = \"Reset\";\r\n\r\n\t/**\r\n\t * The right arrow\r\n\t */\r\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\r\n\r\n\t/**\r\n\t * The Scroll Lock key\r\n\t */\r\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\r\n\r\n\t/**\r\n\t * The Select key\r\n\t */\r\n\tpublic static KEYNAME_SELECT:string = \"Select\";\r\n\r\n\t/**\r\n\t * The Stop key\r\n\t */\r\n\tpublic static KEYNAME_STOP:string = \"Stop\";\r\n\r\n\t/**\r\n\t * The System Request key\r\n\t */\r\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\r\n\r\n\t/**\r\n\t * The System key\r\n\t */\r\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\r\n\r\n\t/**\r\n\t * The Undo key\r\n\t */\r\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\r\n\r\n\t/**\r\n\t * The up arrow\r\n\t */\r\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\r\n\r\n\t/**\r\n\t * The User key\r\n\t */\r\n\tpublic static KEYNAME_USER:string = \"User\";\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the L key (76).\r\n\t */\r\n\tpublic static L:number /*uint*/ = 76;\r\n\r\n\t/**\r\n\t * Watch last channel or show watched\r\n\t */\r\n\tpublic static LAST:number /*uint*/ = 0x01000011;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Left Arrow key (37).\r\n\t */\r\n\tpublic static LEFT:number /*uint*/ = 37;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the [ key (219).\r\n\t */\r\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\r\n\r\n\t/**\r\n\t * Return to live [position in broadcast]\r\n\t */\r\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the M key (77).\r\n\t */\r\n\tpublic static M:number /*uint*/ = 77;\r\n\r\n\t/**\r\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\r\n\t */\r\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\r\n\r\n\t/**\r\n\t * Engage menu\r\n\t */\r\n\tpublic static MENU:number /*uint*/ = 0x01000012;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the - key (189).\r\n\t */\r\n\tpublic static MINUS:number /*uint*/ = 189;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the N key (78).\r\n\t */\r\n\tpublic static N:number /*uint*/ = 78;\r\n\r\n\t/**\r\n\t * Skip to next track or chapter\r\n\t */\r\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 0 key (48).\r\n\t */\r\n\tpublic static NUMBER_0:number /*uint*/ = 48;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 1 key (49).\r\n\t */\r\n\tpublic static NUMBER_1:number /*uint*/ = 49;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 2 key (50).\r\n\t */\r\n\tpublic static NUMBER_2:number /*uint*/ = 50;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 3 key (51).\r\n\t */\r\n\tpublic static NUMBER_3:number /*uint*/ = 51;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 4 key (52).\r\n\t */\r\n\tpublic static NUMBER_4:number /*uint*/ = 52;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 5 key (53).\r\n\t */\r\n\tpublic static NUMBER_5:number /*uint*/ = 53;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 6 key (54).\r\n\t */\r\n\tpublic static NUMBER_6:number /*uint*/ = 54;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 7 key (55).\r\n\t */\r\n\tpublic static NUMBER_7:number /*uint*/ = 55;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 8 key (56).\r\n\t */\r\n\tpublic static NUMBER_8:number /*uint*/ = 56;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the 9 key (57).\r\n\t */\r\n\tpublic static NUMBER_9:number /*uint*/ = 57;\r\n\r\n\t/**\r\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\r\n\t */\r\n\tpublic static NUMPAD:number /*uint*/ = 21;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\r\n\t */\r\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\r\n\t */\r\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\r\n\t */\r\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\r\n\t */\r\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\r\n\t */\r\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\r\n\t */\r\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\r\n\t */\r\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\r\n\t */\r\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\r\n\t */\r\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\r\n\t */\r\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the addition key on the number pad (107).\r\n\t */\r\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\r\n\t */\r\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the division key on the number pad (111).\r\n\t */\r\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\r\n\t */\r\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\r\n\t */\r\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\r\n\t */\r\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the O key (79).\r\n\t */\r\n\tpublic static O:number /*uint*/ = 79;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the P key (80).\r\n\t */\r\n\tpublic static P:number /*uint*/ = 80;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Page Down key (34).\r\n\t */\r\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Page Up key (33).\r\n\t */\r\n\tpublic static PAGE_UP:number /*uint*/ = 33;\r\n\r\n\t/**\r\n\t * Engage pause transport mode\r\n\t */\r\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the . key (190).\r\n\t */\r\n\tpublic static PERIOD:number /*uint*/ = 190;\r\n\r\n\t/**\r\n\t * Engage play transport mode\r\n\t */\r\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\r\n\r\n\t/**\r\n\t * Skip to previous track or chapter\r\n\t */\r\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Q key (81).\r\n\t */\r\n\tpublic static Q:number /*uint*/ = 81;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ' key (222).\r\n\t */\r\n\tpublic static QUOTE:number /*uint*/ = 222;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the R key (82).\r\n\t */\r\n\tpublic static R:number /*uint*/ = 82;\r\n\r\n\t/**\r\n\t * Record item or engage record transport mode\r\n\t */\r\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\r\n\r\n\t/**\r\n\t * Red function key button\r\n\t */\r\n\tpublic static RED:number /*uint*/ = 0x01000000;\r\n\r\n\t/**\r\n\t * Engage rewind transport mode\r\n\t */\r\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Right Arrow key (39).\r\n\t */\r\n\tpublic static RIGHT:number /*uint*/ = 39;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ] key (221).\r\n\t */\r\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the S key (83).\r\n\t */\r\n\tpublic static S:number /*uint*/ = 83;\r\n\r\n\t/**\r\n\t * Search button\r\n\t */\r\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the ; key (186).\r\n\t */\r\n\tpublic static SEMICOLON:number /*uint*/ = 186;\r\n\r\n\t/**\r\n\t * Engage setup application or menu\r\n\t */\r\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Shift key (16).\r\n\t */\r\n\tpublic static SHIFT:number /*uint*/ = 16;\r\n\r\n\t/**\r\n\t * Quick skip backward (usually 7-10 seconds)\r\n\t */\r\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\r\n\r\n\t/**\r\n\t * Quick skip ahead (usually 30 seconds)\r\n\t */\r\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the / key (191).\r\n\t */\r\n\tpublic static SLASH:number /*uint*/ = 191;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Spacebar (32).\r\n\t */\r\n\tpublic static SPACE:number /*uint*/ = 32;\r\n\r\n\t/**\r\n\t * Engage stop transport mode\r\n\t */\r\n\tpublic static STOP:number /*uint*/ = 0x01000009;\r\n\r\n\t/**\r\n\t * Toggle subtitles\r\n\t */\r\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the T key (84).\r\n\t */\r\n\tpublic static T:number /*uint*/ = 84;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Tab key (9).\r\n\t */\r\n\tpublic static TAB:number /*uint*/ = 9;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the U key (85).\r\n\t */\r\n\tpublic static U:number /*uint*/ = 85;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Up Arrow key (38).\r\n\t */\r\n\tpublic static UP:number /*uint*/ = 38;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the V key (86).\r\n\t */\r\n\tpublic static V:number /*uint*/ = 86;\r\n\r\n\t/**\r\n\t * Engage video-on-demand\r\n\t */\r\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the W key (87).\r\n\t */\r\n\tpublic static W:number /*uint*/ = 87;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the X key (88).\r\n\t */\r\n\tpublic static X:number /*uint*/ = 88;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Y key (89).\r\n\t */\r\n\tpublic static Y:number /*uint*/ = 89;\r\n\r\n\t/**\r\n\t * Yellow function key button\r\n\t */\r\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\r\n\r\n\t/**\r\n\t * Constant associated with the key code value for the Z key (90).\r\n\t */\r\n\tpublic static Z:number /*uint*/ = 90;\r\n\r\n}\r\n\r\nexport = Keyboard;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\r\n\r\nclass BitmapImageUtils\r\n{\r\n\tpublic static _fillRect(context:CanvasRenderingContext2D, rect:Rectangle, color:number, transparent:boolean)\r\n\t{\r\n\t\tif (color == 0x0 && transparent) {\r\n\t\t\tcontext.clearRect(rect.x, rect.y, rect.width, rect.height);\r\n\t\t} else {\r\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\r\n\r\n\t\t\tif (transparent)\r\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\r\n\t\t\telse\r\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\r\n\r\n\t\t\tcontext.fillRect(rect.x, rect.y, rect.width, rect.height);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static _copyPixels(context:CanvasRenderingContext2D, bmpd:HTMLElement, sourceRect:Rectangle, destRect:Rectangle)\r\n\t{\r\n\t\tcontext.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\r\n\t}\r\n\r\n\tpublic static _draw(context:CanvasRenderingContext2D, source:HTMLElement, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean)\r\n\t{\r\n\t\tcontext.save();\r\n\r\n\t\tif (matrix != null)\r\n\t\t\tcontext.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\r\n\r\n\t\tif (clipRect != null)\r\n\t\t\tcontext.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\r\n\t\telse\r\n\t\t\tcontext.drawImage(source, 0, 0);\r\n\r\n\t\tcontext.restore();\r\n\t}\r\n}\r\n\r\nexport = BitmapImageUtils;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nclass ByteArrayBase\r\n{\r\n\tpublic position:number = 0;\r\n\tpublic length:number = 0;\r\n\tpublic _mode:string = \"\";\r\n\r\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\tpublic writeByte(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readByte():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedByte():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedShort():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readUnsignedInt():number\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic writeFloat(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic toFloatBits(x:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic readFloat(b:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic fromFloatBits(x:number)\r\n\t{\r\n\t\tthrow \"Virtual method\";\r\n\t}\r\n\r\n\tpublic getBytesAvailable():number\r\n\t{\r\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\r\n\t}\r\n\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\r\n\t}\r\n\r\n\tpublic compareEqual(other, count)\r\n\t{\r\n\t\tif (count == undefined || count > this.length - this.position)\r\n\t\t\tcount = this.length - this.position;\r\n\t\tif (count > other.length - other.position)\r\n\t\t\tcount = other.length - other.position;\r\n\t\tvar co0 = count;\r\n\t\tvar r = true;\r\n\t\twhile (r && count >= 4) {\r\n\t\t\tcount -= 4;\r\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\r\n\t\t}\r\n\t\twhile (r && count >= 1) {\r\n\t\t\tcount--;\r\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\r\n\t\t}\r\n\t\tvar c0;\r\n\t\tthis.position -= (c0 - count);\r\n\t\tother.position -= (c0 - count);\r\n\t\treturn r;\r\n\t}\r\n\r\n\tpublic writeBase64String(s:string)\r\n\t{\r\n\t\tfor (var i:number = 0; i < s.length; i++) {\r\n\t\t\tvar v = s.charAt(i);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic dumpToConsole()\r\n\t{\r\n\t\tvar oldpos = this.position;\r\n\t\tthis.position = 0;\r\n\t\tvar nstep:number = 8;\r\n\r\n\t\tfunction asHexString(x, digits)\r\n\t\t{\r\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\r\n\t\t\tvar sh:string = \"\";\r\n\t\t\tfor (var d:number = 0; d < digits; d++) {\r\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\r\n\t\t\t}\r\n\t\t\treturn sh;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < this.length; i += nstep) {\r\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\r\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\r\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\r\n\t\t\t}\r\n\t\t\tconsole.log(s);\r\n\t\t}\r\n\t\tthis.position = oldpos;\r\n\t}\r\n\r\n\tpublic readBase64String(count:number)\r\n\t{\r\n\t\tif (count == undefined || count > this.length - this.position)\r\n\t\t\tcount = this.length - this.position;\r\n\t\tif (!(count > 0)) return \"\";\r\n\r\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\r\n\t}\r\n\r\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self)\r\n\t{ // return base64 string of the next count bytes\r\n\t\tvar r = \"\";\r\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\r\n\t\tvar base64Key = ByteArrayBase.Base64Key;\r\n\t\twhile (count >= 3) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\r\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\r\n\t\t\tenc4 = b2 & 63;\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\r\n\t\t\tcount -= 3;\r\n\t\t}\r\n\t\t// pad\r\n\t\tif (count == 2) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\r\n\t\t\tenc3 = ((b1 & 15) << 2);\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\r\n\t\t} else if (count == 1) {\r\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\r\n\t\t\tenc1 = b0 >> 2;\r\n\t\t\tenc2 = ((b0 & 3) << 4);\r\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\r\n\t\t}\r\n\t\treturn r;\r\n\t}\r\n}\r\n\r\nexport = ByteArrayBase;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\r\n\r\nclass ByteArrayBuffer extends ByteArrayBase\r\n{\r\n\r\n\t/*\r\n\t public maxlength:number = 0;\r\n\t public arraybytes; //ArrayBuffer\r\n\t public unalignedarraybytestemp; //ArrayBuffer\r\n\t */\r\n\r\n\tpublic _bytes:number[];\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._bytes = [];\r\n\t\tthis._mode = \"Array\";\r\n\t}\r\n\r\n\tpublic writeByte(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readByte():number\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\treturn this._bytes[ this.position++ ];\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[this.position++] = bi & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedByte():number\r\n\t{\r\n\t\tif (this.position >= this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\treturn this._bytes[ this.position++ ];\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedShort():number\r\n\t{\r\n\t\tif (this.position + 2 > this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\r\n\t\tthis.position += 2;\r\n\t\treturn r;\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number)\r\n\t{\r\n\t\tvar bi:number = ~~b;\r\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\r\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readUnsignedInt():number\r\n\t{\r\n\t\tif (this.position + 4 > this.length) {\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\t\t}\r\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\r\n\t\tthis.position += 4;\r\n\t\treturn r >>> 0;\r\n\t}\r\n\r\n\tpublic writeFloat(b:number)\r\n\t{\r\n\t\t// this is crazy slow and silly, but as a fallback...\r\n\r\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\r\n\t}\r\n\r\n\tpublic toFloatBits(x:number)\r\n\t{\r\n\t\t// don't handle inf/nan yet\r\n\t\t// special case zero\r\n\t\tif (x == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// remove the sign, after this we only deal with positive numbers\r\n\t\tvar sign:number = 0;\r\n\t\tif (x < 0) {\r\n\t\t\tx = -x;\r\n\t\t\tsign = 1;\r\n\t\t} else {\r\n\t\t\tsign = 0;\r\n\t\t}\r\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\r\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\r\n\t\texponent = Math.floor(exponent);\r\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\r\n\t\tvar mantissa = Math.floor(x) - 0x800000;\r\n\t\texponent = exponent + 127;\r\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\r\n\t}\r\n\r\n\tpublic readFloat(b:number)\r\n\t{\r\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\r\n\t}\r\n\r\n\tpublic fromFloatBits(x:number)\r\n\t{\r\n\t\tif (x == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\r\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\r\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\r\n\t\tif (x >>> 31 != 0) {\r\n\t\t\ty = -y;\r\n\t\t}\r\n\t\treturn y;\r\n\t}\r\n\r\n\t/*\r\n\t public ensureWriteableSpace( n:number )\r\n\t {\r\n\t this.ensureSpace( n + this.position );\r\n\t }\r\n\r\n\t private ensureSpace( n:number )\r\n\t {\r\n\t if ( n > this.maxlength ) {\r\n\t var newmaxlength:number = (n+255)&(~255);\r\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\r\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\r\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\r\n\t newview.set(view);      // memcpy\r\n\t this.arraybytes = newarraybuffer;\r\n\t this.maxlength = newmaxlength;\r\n\t }\r\n\t }\r\n\t */\r\n}\r\n\r\nexport = ByteArrayBuffer;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\r\n\r\nclass ByteArray extends ByteArrayBase\r\n{\r\n\tpublic maxlength:number;\r\n\tpublic arraybytes; //ArrayBuffer\r\n\tpublic unalignedarraybytestemp; //ArrayBuffer\r\n\r\n\tconstructor(maxlength:number = 4)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._mode = \"Typed array\";\r\n\t\tthis.maxlength = Math.max((maxlength + 255) & (~255), 4);\r\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\r\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\r\n\t}\r\n\r\n\tpublic ensureWriteableSpace(n:number)\r\n\t{\r\n\t\tthis.ensureSpace(n + this.position);\r\n\t}\r\n\r\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\r\n\t{\r\n\t\tthis.ensureSpace(aBuffer.byteLength);\r\n\r\n\t\tthis.length = aBuffer.byteLength;\r\n\r\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\r\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\r\n\r\n\t\tlocalInt8View.set(inInt8AView);\r\n\r\n\t\tthis.position = 0;\r\n\r\n\t}\r\n\r\n\tpublic getBytesAvailable():number\r\n\t{\r\n\t\treturn ( this.length ) - ( this.position );\r\n\t}\r\n\r\n\tpublic ensureSpace(n:number)\r\n\t{\r\n\t\tif (n > this.maxlength) {\r\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\r\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\r\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\r\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\r\n\t\t\tnewview.set(view);      // memcpy\r\n\t\t\tthis.arraybytes = newarraybuffer;\r\n\t\t\tthis.maxlength = newmaxlength;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeByte(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(1);\r\n\r\n\t\tvar view = new Int8Array(this.arraybytes);\r\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\r\n\t\tif (this.position > this.length) {\r\n\t\t\tthis.length = this.position;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readByte()\r\n\t{\r\n\t\tif (this.position >= this.length)\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\r\n\t\tvar view = new Int8Array(this.arraybytes);\r\n\r\n\t\treturn view[ this.position++ ];\r\n\t}\r\n\r\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0)\r\n\t{\r\n\t\tif (length == null)\r\n\t\t\tlength = bytes.length;\r\n\r\n\t\tbytes.ensureWriteableSpace(offset + length);\r\n\r\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\r\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\r\n\r\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\r\n\r\n\t\tthis.position += length;\r\n\r\n\t\tif (length + offset > bytes.length)\r\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\r\n\t}\r\n\r\n\tpublic writeUnsignedByte(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(1);\r\n\r\n\t\tvar view = new Uint8Array(this.arraybytes);\r\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\r\n\r\n\t\tif (this.position > this.length)\r\n\t\t\tthis.length = this.position;\r\n\t}\r\n\r\n\tpublic readUnsignedByte()\r\n\t{\r\n\t\tif (this.position >= this.length)\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\r\n\t\tvar view = new Uint8Array(this.arraybytes);\r\n\t\treturn view[this.position++];\r\n\t}\r\n\r\n\tpublic writeUnsignedShort(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(2);\r\n\r\n\t\tif (( this.position & 1 ) == 0) {\r\n\t\t\tvar view = new Uint16Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\r\n\t\t} else {\r\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = (~~b) & 0xffff;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\r\n\t\tthis.position += 2;\r\n\r\n\t\tif (this.position > this.length)\r\n\t\t\tthis.length = this.position;\r\n\t}\r\n\r\n\tpublic readUTFBytes(len:number):string\r\n\t{\r\n\t\tvar value:string = \"\";\r\n\t\tvar max:number = this.position + len;\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\r\n\t\t// utf8-encode\r\n\t\twhile (this.position < max) {\r\n\r\n\t\t\tvar c:number = data.getUint8(this.position++);\r\n\r\n\t\t\tif (c < 0x80) {\r\n\r\n\t\t\t\tif (c == 0) break;\r\n\t\t\t\tvalue += String.fromCharCode(c);\r\n\r\n\t\t\t} else if (c < 0xE0) {\r\n\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t} else if (c < 0xF0) {\r\n\r\n\t\t\t\tvar c2 = data.getUint8(this.position++);\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar c2 = data.getUint8(this.position++);\r\n\t\t\t\tvar c3 = data.getUint8(this.position++);\r\n\r\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic readInt():number\r\n\t{\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar int:number = data.getInt32(this.position, true);\r\n\r\n\t\tthis.position += 4;\r\n\r\n\t\treturn int;\r\n\t}\r\n\r\n\tpublic readShort():number\r\n\t{\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar short:number = data.getInt16(this.position, true);\r\n\r\n\t\tthis.position += 2;\r\n\r\n\t\treturn short;\r\n\t}\r\n\r\n\tpublic readDouble():number\r\n\t{\r\n\t\tvar data:DataView = new DataView(this.arraybytes);\r\n\t\tvar double:number = data.getFloat64(this.position, true);\r\n\r\n\t\tthis.position += 8;\r\n\r\n\t\treturn double;\r\n\t}\r\n\r\n\tpublic readUnsignedShort()\r\n\t{\r\n\t\tif (this.position > this.length + 2)\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\r\n\t\tif (( this.position & 1 ) == 0) {\r\n\t\t\tvar view = new Uint16Array(this.arraybytes);\r\n\t\t\tvar pa:number = this.position >> 1;\r\n\t\t\tthis.position += 2;\r\n\t\t\treturn view[ pa ];\r\n\t\t} else {\r\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 2;\r\n\t\t\treturn view[0];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeUnsignedInt(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(4);\r\n\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Uint32Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\r\n\t\t} else {\r\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = (~~b) & 0xffffffff;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\t\tthis.position += 4;\r\n\r\n\t\tif (this.position > this.length)\r\n\t\t\tthis.length = this.position;\r\n\t}\r\n\r\n\tpublic readUnsignedInt()\r\n\t{\r\n\t\tif (this.position > this.length + 4)\r\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\r\n\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Uint32Array(this.arraybytes);\r\n\t\t\tvar pa:number = this.position >> 2;\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[ pa ];\r\n\t\t} else {\r\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[0];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeFloat(b:number)\r\n\t{\r\n\t\tthis.ensureWriteableSpace(4);\r\n\r\n\t\tif (( this.position & 3 ) == 0) {\r\n\t\t\tvar view = new Float32Array(this.arraybytes);\r\n\t\t\tview[ this.position >> 2 ] = b;\r\n\t\t} else {\r\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tview[0] = b;\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview2.set(view3);\r\n\t\t}\r\n\t\tthis.position += 4;\r\n\r\n\t\tif (this.position > this.length)\r\n\t\t\tthis.length = this.position;\r\n\t}\r\n\r\n\tpublic readFloat()\r\n\t{\r\n\t\tif (this.position > this.length + 4)\r\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\r\n\r\n\t\tif ((this.position & 3) == 0) {\r\n\t\t\tvar view = new Float32Array(this.arraybytes);\r\n\t\t\tvar pa = this.position >> 2;\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[pa];\r\n\t\t} else {\r\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\r\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\r\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\r\n\t\t\tview3.set(view2);\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn view[ 0 ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ByteArray;",
    "class CSS\r\n{\r\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number)\r\n\t{\r\n\t\telement.style.width = width + \"px\";\r\n\t\telement.style.height = height + \"px\";\r\n\t\telement[\"width\"] = width;\r\n\t\telement[\"height\"] = height;\r\n\t}\r\n\r\n\tpublic static setElementWidth(element:HTMLElement, width:number)\r\n\t{\r\n\t\telement.style.width = width + \"px\";\r\n\t\telement[\"width\"] = width;\r\n\t}\r\n\r\n\tpublic static setElementHeight(element:HTMLElement, height:number)\r\n\t{\r\n\t\telement.style.height = height + \"px\";\r\n\t\telement[\"height\"] = height;\r\n\t}\r\n\r\n\tpublic static setElementX(element:HTMLElement, x:number)\r\n\t{\r\n\t\telement.style.position = 'absolute';\r\n\t\telement.style.left = x + \"px\";\r\n\t}\r\n\r\n\tpublic static setElementY(element:HTMLElement, y:number)\r\n\t{\r\n\t\telement.style.position = 'absolute';\r\n\t\telement.style.top = y + \"px\";\r\n\t}\r\n\r\n\tpublic static getElementVisibility(element:HTMLElement):boolean\r\n\t{\r\n\t\treturn element.style.visibility == 'visible';\r\n\t}\r\n\r\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean)\r\n\t{\r\n\t\tif (visible) {\r\n\t\t\telement.style.visibility = 'visible';\r\n\t\t} else {\r\n\t\t\telement.style.visibility = 'hidden';\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number)\r\n\t{\r\n\t\tif (element instanceof HTMLCanvasElement) {\r\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\r\n\t\t\tcontext.globalAlpha = alpha;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false)\r\n\t{\r\n\t\tif (absolute) {\r\n\t\t\telement.style.position = \"absolute\";\r\n\t\t} else {\r\n\t\t\telement.style.position = \"relative\";\r\n\t\t}\r\n\r\n\t\telement.style.left = x + \"px\";\r\n\t\telement.style.top = y + \"px\";\r\n\t}\r\n}\r\n\r\nexport = CSS;",
    "/**\r\n *\r\n */\r\nclass ColorUtils\r\n{\r\n\tpublic static float32ColorToARGB(float32Color:number):number[]\r\n\t{\r\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24;\r\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\r\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\r\n\t\tvar b:number = float32Color & 0xff;\r\n\t\tvar result:number[] = [ a, r , g , b ];\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static ARGBtoFloat32(a:number, r:number, g:number, b:number):number\r\n\t{\r\n\t\treturn ((a << 24) | (r << 16) | (g << 8) | b);\r\n\t}\r\n\r\n\tprivate static componentToHex(c:number):string\r\n\t{\r\n\t\tvar hex = c.toString(16);\r\n\t\treturn hex.length == 1? \"0\" + hex : hex;\r\n\t}\r\n\r\n\tpublic static RGBToHexString(argb:number[]):string\r\n\t{\r\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\r\n\t}\r\n\r\n\tpublic static ARGBToHexString(argb:number[]):string\r\n\t{\r\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\r\n\t}\r\n}\r\n\r\nexport = ColorUtils;",
    "import PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\n\r\n/**\r\n *\r\n */\r\nclass Debug\r\n{\r\n\tpublic static THROW_ERRORS:boolean = true;\r\n\tpublic static ENABLE_LOG:boolean = true;\r\n\tpublic static LOG_PI_ERRORS:boolean = true;\r\n\r\n\tprivate static keyword:string = null;\r\n\r\n\tpublic static breakpoint():void\r\n\t{\r\n\t\tDebug['break']();\r\n\t}\r\n\r\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true)\r\n\t{\r\n\t\tif (!enable)\r\n\t\t\tDebug.keyword = null;\r\n\t\telse\r\n\t\t\tDebug.keyword = str;\r\n\t}\r\n\r\n\tpublic static throwPIR(clss:string, fnc:string, msg:string)\r\n\t{\r\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\r\n\r\n\t\tif (Debug.THROW_ERRORS) {\r\n\t\t\tif (Debug.keyword) {\r\n\t\t\t\tvar e:string = clss + fnc + msg;\r\n\r\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static logPIR(clss:string, fnc:string, msg:string = '')\r\n\t{\r\n\t\tif (Debug.LOG_PI_ERRORS)\r\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\r\n\t}\r\n\r\n\tpublic static log(...args:any[])\r\n\t{\r\n\t\tif (Debug.ENABLE_LOG)\r\n\t\t\tconsole.log(args);\r\n\t}\r\n}\r\n\r\nexport = Debug;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nclass ImageUtils\r\n{\r\n\tprivate static MAX_SIZE:number = 2048;\r\n\r\n\tpublic static isImage2DValid(image2D:Image2D):boolean\r\n\t{\r\n\t\tif (image2D == null)\r\n\t\t\treturn true;\r\n\r\n\t\treturn ImageUtils.isDimensionValid(image2D.width) && ImageUtils.isDimensionValid(image2D.height);\r\n\t}\r\n\r\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\r\n\t{\r\n\t\tif (image == null)\r\n\t\t\treturn true;\r\n\r\n\t\treturn ImageUtils.isDimensionValid(image.width) && ImageUtils.isDimensionValid(image.height);\r\n\t}\r\n\r\n\tpublic static isDimensionValid(d:number):boolean\r\n\t{\r\n\t\treturn d >= 1 && d <= ImageUtils.MAX_SIZE && ImageUtils.isPowerOfTwo(d);\r\n\t}\r\n\r\n\tpublic static isPowerOfTwo(value:number):boolean\r\n\t{\r\n\t\treturn value? ((value & -value) == value) : false;\r\n\t}\r\n\r\n\tpublic static getBestPowerOf2(value:number):number\r\n\t{\r\n\t\tvar p:number = 1;\r\n\r\n\t\twhile (p < value)\r\n\t\t\tp <<= 1;\r\n\r\n\t\tif (p > ImageUtils.MAX_SIZE)\r\n\t\t\tp = ImageUtils.MAX_SIZE;\r\n\r\n\t\treturn p;\r\n\t}\r\n}\r\n\r\nexport = ImageUtils",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\n\r\nclass MipmapGenerator\r\n{\r\n\tprivate static _mipMaps = [];\r\n\tprivate static _mipMapUses = [];\r\n\r\n\tprivate static _matrix:Matrix = new Matrix();\r\n\tprivate static _rect:Rectangle = new Rectangle();\r\n\tprivate static _source:BitmapImage2D;\r\n\r\n\t/**\r\n\t * Uploads a BitmapImage2D with mip maps to a target Texture object.\r\n\t * @param source The source to upload.\r\n\t * @param target The target Texture to upload to.\r\n\t * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\r\n\t * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\r\n\t */\r\n\tpublic static _generateMipMaps(source:HTMLElement, output?:Array<BitmapImage2D>, alpha?:boolean);\r\n\tpublic static _generateMipMaps(source:BitmapImage2D, output?:Array<BitmapImage2D>, alpha?:boolean);\r\n\tpublic static _generateMipMaps(source:any, output?:Array<BitmapImage2D>, alpha:boolean = false)\r\n\t{\r\n\t\tvar w:number = source.width;\r\n\t\tvar h:number = source.height;\r\n\t\tvar i:number = 0;\r\n\r\n\t\tvar mipmap:BitmapImage2D;\r\n\r\n\t\tMipmapGenerator._rect.width = w;\r\n\t\tMipmapGenerator._rect.height = h;\r\n\r\n\t\t//use (OR) to create non-square texture mipmaps\r\n\t\twhile (w >= 1 || h >= 1) {\r\n\r\n\t\t\tmipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\r\n\r\n\t\t\tif (alpha)\r\n\t\t\t\tmipmap.fillRect(MipmapGenerator._rect, 0);\r\n\r\n\t\t\tMipmapGenerator._matrix.a = MipmapGenerator._rect.width/source.width;\r\n\t\t\tMipmapGenerator._matrix.d = MipmapGenerator._rect.height/source.height;\r\n\r\n\t\t\tmipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\r\n\r\n\t\t\tw >>= 1;\r\n\t\t\th >>= 1;\r\n\r\n\t\t\tMipmapGenerator._rect.width = w > 1? w : 1;\r\n\t\t\tMipmapGenerator._rect.height = h > 1? h : 1;\r\n\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _getMipmapHolder(mipMapHolder:BitmapImage2D, newW:number, newH:number):BitmapImage2D\r\n\t{\r\n\t\tif (mipMapHolder) {\r\n\t\t\tif (mipMapHolder.width == newW && mipMapHolder.height == newH)\r\n\t\t\t\treturn mipMapHolder;\r\n\r\n\t\t\tMipmapGenerator._freeMipMapHolder(mipMapHolder);\r\n\t\t}\r\n\r\n\t\tif (!MipmapGenerator._mipMaps[newW]) {\r\n\t\t\tMipmapGenerator._mipMaps[newW] = [];\r\n\t\t\tMipmapGenerator._mipMapUses[newW] = [];\r\n\t\t}\r\n\r\n\t\tif (!MipmapGenerator._mipMaps[newW][newH]) {\r\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapImage2D(newW, newH, true);\r\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = 1;\r\n\t\t} else {\r\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\r\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH];\r\n\t\t}\r\n\r\n\t\treturn mipMapHolder;\r\n\t}\r\n\r\n\tpublic static _freeMipMapHolder(mipMapHolder:BitmapImage2D)\r\n\t{\r\n\t\tvar holderWidth:number = mipMapHolder.width;\r\n\t\tvar holderHeight:number = mipMapHolder.height;\r\n\r\n\t\tif (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\r\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\r\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = MipmapGenerator;",
    "import getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nclass RequestAnimationFrame\r\n{\r\n\tprivate _callback:Function;\r\n\tprivate _callbackContext:Object;\r\n\tprivate _active:boolean = false;\r\n\tprivate _rafUpdateFunction:any;\r\n\tprivate _prevTime:number;\r\n\tprivate _dt:number;\r\n\tprivate _currentTime:number;\r\n\tprivate _argsArray:Array<any> = new Array();\r\n\tprivate _getTimer:Function;\r\n\r\n\tconstructor(callback:Function, callbackContext:Object)\r\n\t{\r\n\t\tthis._getTimer = getTimer;\r\n\r\n\t\tthis.setCallback(callback, callbackContext);\r\n\r\n\t\tthis._rafUpdateFunction = () => {\r\n\t\t\tif (this._active)\r\n\t\t\t\tthis._tick();\r\n\t\t}\r\n\r\n\t\tthis._argsArray.push(this._dt);\r\n\t}\r\n\r\n\t// Public\r\n\r\n\t/**\r\n\t *\r\n\t * @param callback\r\n\t * @param callbackContext\r\n\t */\r\n\tpublic setCallback(callback:Function, callbackContext:Object)\r\n\t{\r\n\t\tthis._callback = callback;\r\n\t\tthis._callbackContext = callbackContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic start()\r\n\t{\r\n\t\tthis._prevTime = this._getTimer();\r\n\t\tthis._active = true;\r\n\r\n\t\tif (window.requestAnimationFrame) {\r\n\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\r\n\t\t} else {\r\n\t\t\tif (window['mozRequestAnimationFrame'])\r\n\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\r\n\t\t\telse if (window['webkitRequestAnimationFrame'])\r\n\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\r\n\t\t\telse if (window['oRequestAnimationFrame'])\r\n\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic stop()\r\n\t{\r\n\t\tthis._active = false;\r\n\t}\r\n\r\n\t// Get / Set\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic get active():boolean\r\n\t{\r\n\t\treturn this._active;\r\n\t}\r\n\r\n\t// Private\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _tick():void\r\n\t{\r\n\t\tthis._currentTime = this._getTimer();\r\n\t\tthis._dt = this._currentTime - this._prevTime;\r\n\t\tthis._argsArray[0] = this._dt;\r\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\r\n\r\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\r\n\r\n\t\tthis._prevTime = this._currentTime;\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport = RequestAnimationFrame;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\r\n\r\nclass Timer extends EventDispatcher\r\n{\r\n\tprivate _delay:number;\r\n\tprivate _repeatCount:number = 0;\r\n\tprivate _currentCount:number = 0;\r\n\tprivate _iid:number;\r\n\tprivate _running:boolean = false;\r\n\r\n\tconstructor(delay:number, repeatCount:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._delay = delay;\r\n\t\tthis._repeatCount = repeatCount;\r\n\r\n\t\tif (isNaN(delay) || delay < 0)\r\n\t\t\tthrow new Error(\"Delay is negative or not a number\");\r\n\t}\r\n\r\n\tpublic get currentCount():number\r\n\t{\r\n\t\treturn this._currentCount;\r\n\t}\r\n\r\n\tpublic get delay():number\r\n\t{\r\n\t\treturn this._delay;\r\n\t}\r\n\r\n\tpublic set delay(value:number)\r\n\t{\r\n\t\tthis._delay = value;\r\n\r\n\t\tif (this._running) {\r\n\t\t\tthis.stop();\r\n\t\t\tthis.start();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get repeatCount():number\r\n\t{\r\n\t\treturn this._repeatCount;\r\n\t}\r\n\r\n\tpublic set repeatCount(value:number)\r\n\t{\r\n\t\tthis._repeatCount = value;\r\n\t}\r\n\r\n\tpublic reset():void\r\n\t{\r\n\t\tif (this._running)\r\n\t\t\tthis.stop();\r\n\r\n\t\tthis._currentCount = 0;\r\n\t}\r\n\r\n\tpublic get running():boolean\r\n\t{\r\n\t\treturn this._running;\r\n\t}\r\n\r\n\tpublic start():void\r\n\t{\r\n\t\tthis._running = true;\r\n\t\tclearInterval(this._iid);\r\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\r\n\t}\r\n\r\n\tpublic stop():void\r\n\t{\r\n\t\tthis._running = false;\r\n\t\tclearInterval(this._iid);\r\n\t}\r\n\r\n\tprivate tick():void\r\n\t{\r\n\t\tthis._currentCount++;\r\n\r\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\r\n\r\n\t\t\tthis.stop();\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\r\n\r\n\t\t} else {\r\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Timer;",
    "class XmlUtils {\r\n\r\n\tpublic static getChildrenWithTag(node:Node, tag:string):NodeList {\r\n\r\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\r\n\r\n\t\tif(node) {\r\n\t\t\tvar num:number = node.childNodes.length;\r\n\t\t\tfor(var i:number = 0; i < num; i++) {\r\n\t\t\t\tvar child:Node = node.childNodes[i];\r\n\t\t\t\tif(child != null) {\r\n\t\t\t\t\tif(child.nodeName == tag) {\r\n\t\t\t\t\t\tfragment.appendChild(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn fragment.childNodes;\r\n\t}\r\n\r\n\tpublic static filterListByParam(nodes:NodeList, paramName:string, paramValue):NodeList {\r\n\r\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\r\n\r\n\t\tif(nodes) {\r\n\t\t\tvar num:number = nodes.length;\r\n\t\t\tfor(var i:number = 0; i < num; i++) {\r\n\t\t\t\tvar child:Node = nodes[i];\r\n\t\t\t\tif(child != null) {\r\n\t\t\t\t\tif(child.attributes.getNamedItem(paramName).value == paramValue) {\r\n\t\t\t\t\t\tfragment.appendChild(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn fragment.childNodes;\r\n\t}\r\n\r\n\tpublic static strToXml(str:string):Node {\r\n\t\tvar parser:DOMParser = new DOMParser();\r\n\t\tvar node:Node = parser.parseFromString(str, \"text/xml\");\r\n\t\treturn node;\r\n\t}\r\n\r\n\tpublic static nodeToString(node:Node):string {\r\n\t\tif(!node) return \"\";\r\n\t\tvar str = (new XMLSerializer()).serializeToString(node);\r\n\t\treturn str;\r\n\t}\r\n\r\n\tpublic static readAttributeValue(node:Node, attrName:string):string {\r\n\t\tvar attrs = node.attributes;\r\n\t\tif(attrs == undefined) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\r\n\t\tif(!attribute) {\r\n\t\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", attribute does not exist.\");\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", value: \" + attribute.value);\r\n\t\treturn attribute.value;\r\n\t}\r\n\r\n\tpublic static writeAttributeValue(node:Node, attrName:string, attrValue:string) {\r\n\t\tvar attribute:Attr = new Attr();\r\n\t\tattribute.name = attrName;\r\n\t\tattribute.value = attrValue;\r\n\t\tattribute = node.attributes.setNamedItem(attribute);\r\n\t\tconsole.log(\"XmlUltils - writeAttributeValue() - name: \" + attribute.name + \", value: \" + attribute.value);\r\n\t}\r\n\r\n\tpublic static hasAttribute(node:Node, attrName:string):boolean {\r\n\t\tvar attrs = node.attributes;\r\n\t\tif(attrs == undefined) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\r\n\t\treturn attribute != null;\r\n\t}\r\n}\r\nexport = XmlUtils;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "/**\r\n *\r\n *\r\n * @returns {number}\r\n */\r\nfunction getTimer():number\r\n{\r\n\t// number milliseconds of 1970/01/01\r\n\t// this different to AS3 implementation which gets the number of milliseconds\r\n\t// since instance of Flash player was initialised\r\n\treturn Date.now();\r\n}\r\n\r\nexport = getTimer;"
  ],
  "sourceRoot": ""
}