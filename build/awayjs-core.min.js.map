{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-core.js",
    "awayjs-core/lib/attributes/AttributesBuffer.ts",
    "awayjs-core/lib/attributes/AttributesView.ts",
    "awayjs-core/lib/attributes/Byte4Attributes.ts",
    "awayjs-core/lib/attributes/Float1Attributes.ts",
    "awayjs-core/lib/attributes/Float2Attributes.ts",
    "awayjs-core/lib/attributes/Float3Attributes.ts",
    "awayjs-core/lib/attributes/Float4Attributes.ts",
    "awayjs-core/lib/attributes/Short2Attributes.ts",
    "awayjs-core/lib/attributes/Short3Attributes.ts",
    "awayjs-core/lib/data/BitmapImage2D.ts",
    "awayjs-core/lib/data/BitmapImageChannel.ts",
    "awayjs-core/lib/data/BitmapImageCube.ts",
    "awayjs-core/lib/data/BlendMode.ts",
    "awayjs-core/lib/data/CPUCanvas.ts",
    "awayjs-core/lib/data/CPURenderingContext2D.ts",
    "awayjs-core/lib/data/Image2D.ts",
    "awayjs-core/lib/data/ImageBase.ts",
    "awayjs-core/lib/data/ImageCube.ts",
    "awayjs-core/lib/data/ImageData.ts",
    "awayjs-core/lib/data/Sampler2D.ts",
    "awayjs-core/lib/data/SamplerBase.ts",
    "awayjs-core/lib/data/SamplerCube.ts",
    "awayjs-core/lib/data/SpecularImage2D.ts",
    "awayjs-core/lib/data/WaveAudio.ts",
    "awayjs-core/lib/errors/AbstractMethodError.ts",
    "awayjs-core/lib/errors/ArgumentError.ts",
    "awayjs-core/lib/errors/DocumentError.ts",
    "awayjs-core/lib/errors/Error.ts",
    "awayjs-core/lib/errors/PartialImplementationError.ts",
    "awayjs-core/lib/errors/RangeError.ts",
    "awayjs-core/lib/events/AssetEvent.ts",
    "awayjs-core/lib/events/EventDispatcher.ts",
    "awayjs-core/lib/events/Event.ts",
    "awayjs-core/lib/events/HTTPStatusEvent.ts",
    "awayjs-core/lib/events/IOErrorEvent.ts",
    "awayjs-core/lib/events/LoaderEvent.ts",
    "awayjs-core/lib/events/ParserEvent.ts",
    "awayjs-core/lib/events/ProgressEvent.ts",
    "awayjs-core/lib/events/ProjectionEvent.ts",
    "awayjs-core/lib/events/TimerEvent.ts",
    "awayjs-core/lib/geom/Box.ts",
    "awayjs-core/lib/geom/ColorTransform.ts",
    "awayjs-core/lib/geom/MathConsts.ts",
    "awayjs-core/lib/geom/Matrix3DUtils.ts",
    "awayjs-core/lib/geom/Matrix3D.ts",
    "awayjs-core/lib/geom/Matrix.ts",
    "awayjs-core/lib/geom/Orientation3D.ts",
    "awayjs-core/lib/geom/PerspectiveProjection.ts",
    "awayjs-core/lib/geom/Plane3D.ts",
    "awayjs-core/lib/geom/PlaneClassification.ts",
    "awayjs-core/lib/geom/Point.ts",
    "awayjs-core/lib/geom/PoissonLookup.ts",
    "awayjs-core/lib/geom/Quaternion.ts",
    "awayjs-core/lib/geom/Rectangle.ts",
    "awayjs-core/lib/geom/Sphere.ts",
    "awayjs-core/lib/geom/UVTransform.ts",
    "awayjs-core/lib/geom/Vector3D.ts",
    "awayjs-core/lib/library/AssetBase.ts",
    "awayjs-core/lib/library/AssetLibraryBundle.ts",
    "awayjs-core/lib/library/AssetLibraryIterator.ts",
    "awayjs-core/lib/library/AssetLibrary.ts",
    "awayjs-core/lib/library/ConflictPrecedence.ts",
    "awayjs-core/lib/library/ConflictStrategyBase.ts",
    "awayjs-core/lib/library/ConflictStrategy.ts",
    "awayjs-core/lib/library/ErrorConflictStrategy.ts",
    "awayjs-core/lib/library/IDUtil.ts",
    "awayjs-core/lib/library/IgnoreConflictStrategy.ts",
    "awayjs-core/lib/library/LoaderContext.ts",
    "awayjs-core/lib/library/LoaderSession.ts",
    "awayjs-core/lib/library/NumSuffixConflictStrategy.ts",
    "awayjs-core/lib/managers/AudioChannel.ts",
    "awayjs-core/lib/managers/AudioManager.ts",
    "awayjs-core/lib/managers/EventAudioChannel.ts",
    "awayjs-core/lib/managers/StreamingAudioChannel.ts",
    "awayjs-core/lib/managers/WebAudioChannel.ts",
    "awayjs-core/lib/net/CrossDomainPolicy.ts",
    "awayjs-core/lib/net/URLLoaderDataFormat.ts",
    "awayjs-core/lib/net/URLLoader.ts",
    "awayjs-core/lib/net/URLRequestMethod.ts",
    "awayjs-core/lib/net/URLRequest.ts",
    "awayjs-core/lib/net/URLVariables.ts",
    "awayjs-core/lib/parsers/Image2DParser.ts",
    "awayjs-core/lib/parsers/ImageCubeParser.ts",
    "awayjs-core/lib/parsers/ParserBase.ts",
    "awayjs-core/lib/parsers/ParserDataFormat.ts",
    "awayjs-core/lib/parsers/ParserUtils.ts",
    "awayjs-core/lib/parsers/ResourceDependency.ts",
    "awayjs-core/lib/parsers/TextureAtlasParser.ts",
    "awayjs-core/lib/parsers/WaveAudioParser.ts",
    "awayjs-core/lib/projections/CoordinateSystem.ts",
    "awayjs-core/lib/projections/FreeMatrixProjection.ts",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection.ts",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection.ts",
    "awayjs-core/lib/projections/OrthographicProjection.ts",
    "awayjs-core/lib/projections/PerspectiveProjection.ts",
    "awayjs-core/lib/projections/ProjectionBase.ts",
    "awayjs-core/lib/ui/Keyboard.ts",
    "awayjs-core/lib/utils/BitmapImageUtils.ts",
    "awayjs-core/lib/utils/ByteArrayBase.ts",
    "awayjs-core/lib/utils/ByteArrayBuffer.ts",
    "awayjs-core/lib/utils/ByteArray.ts",
    "awayjs-core/lib/utils/CSS.ts",
    "awayjs-core/lib/utils/ColorUtils.ts",
    "awayjs-core/lib/utils/Debug.ts",
    "awayjs-core/lib/utils/Extensions.ts",
    "awayjs-core/lib/utils/ImageUtils.ts",
    "awayjs-core/lib/utils/MipmapGenerator.ts",
    "awayjs-core/lib/utils/RequestAnimationFrame.ts",
    "awayjs-core/lib/utils/Timer.ts",
    "awayjs-core/lib/utils/XmlUtils.ts",
    "awayjs-core/lib/utils/getTimer.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AttributesBuffer",
    "_super",
    "stride",
    "count",
    "_attributesBufferVO",
    "Array",
    "_count",
    "_stride",
    "_newStride",
    "_viewVOs",
    "_buffer",
    "ArrayBuffer",
    "_bufferView",
    "Uint8Array",
    "byteLength",
    "Object",
    "defineProperty",
    "get",
    "assetType",
    "enumerable",
    "configurable",
    "_lengthDirty",
    "_updateLength",
    "set",
    "value",
    "invalidateLength",
    "_contentDirty",
    "buffer",
    "invalidateContent",
    "len",
    "invalidate",
    "dispose",
    "clone",
    "attributesBuffer",
    "bufferView",
    "view",
    "_internalClone",
    "getView",
    "index",
    "_setAttributes",
    "viewIndex",
    "arrayBufferView",
    "offset",
    "array",
    "viewVO",
    "vLength",
    "vOffset",
    "vCount",
    "subarray",
    "_getLocalArrayBuffer",
    "localBuffer",
    "localBufferView",
    "_iAddAttributesBufferVO",
    "AttributesBufferVO",
    "push",
    "_iRemoveAttributesBufferVO",
    "splice",
    "indexOf",
    "_addView",
    "ViewVO",
    "_index",
    "_removeView",
    "_getOffset",
    "j",
    "newLength",
    "newBuffer",
    "newView",
    "vOldOffset",
    "oldOffset",
    "Math",
    "min",
    "size",
    "dimensions",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-core/lib/attributes/AttributesView",
    "AttributesView",
    "arrayClass",
    "attributesBufferCount",
    "_arrayClass",
    "_size",
    "BYTES_PER_ELEMENT",
    "_dimensions",
    "_attributesBuffer",
    "values",
    "_localArrayBuffer",
    "_cloneCache",
    "cloneCache",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "Byte4Attributes",
    "attributesBufferLength",
    "unsigned",
    "Int8Array",
    "awayjs-core/lib/attributes/Float1Attributes",
    "Float1Attributes",
    "Float32Array",
    "awayjs-core/lib/attributes/Float2Attributes",
    "Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "Float3Attributes",
    "awayjs-core/lib/attributes/Float4Attributes",
    "Float4Attributes",
    "awayjs-core/lib/attributes/Short2Attributes",
    "Short2Attributes",
    "Uint16Array",
    "Int16Array",
    "awayjs-core/lib/attributes/Short3Attributes",
    "Short3Attributes",
    "awayjs-core/lib/data/BitmapImage2D",
    "Image2D",
    "ColorUtils",
    "BitmapImageUtils",
    "CPUCanvas",
    "BitmapImage2D",
    "width",
    "height",
    "transparent",
    "fillColor",
    "powerOfTwo",
    "_locked",
    "_transparent",
    "document",
    "_imageCanvas",
    "createElement",
    "_context",
    "getContext",
    "fillRect",
    "_rect",
    "draw",
    "colorTransform",
    "rect",
    "_imageData",
    "getImageData",
    "data",
    "x",
    "y",
    "redMultiplier",
    "redOffset",
    "greenMultiplier",
    "greenOffset",
    "blueMultiplier",
    "blueOffset",
    "alphaMultiplier",
    "alphaOffset",
    "putImageData",
    "copyChannel",
    "sourceBitmap",
    "sourceRect",
    "destPoint",
    "sourceChannel",
    "destChannel",
    "imageData",
    "sourceData",
    "destData",
    "sourceOffset",
    "round",
    "log",
    "destOffset",
    "sourceIndex",
    "destIndex",
    "copyPixels",
    "source",
    "destRect",
    "getCanvas",
    "_copyPixels",
    "matrix",
    "blendMode",
    "clipRect",
    "smoothing",
    "_draw",
    "color",
    "_fillRect",
    "getPixel",
    "g",
    "pixelData",
    "getPixel32",
    "lock",
    "setArray",
    "inputArray",
    "argb",
    "float32ColorToARGB",
    "setPixel",
    "setPixel32",
    "setPixels",
    "inputByteArray",
    "position",
    "readUnsignedInt",
    "unlock",
    "_setSize",
    "awayjs-core/lib/data/CPUCanvas",
    "awayjs-core/lib/data/Image2D",
    "awayjs-core/lib/utils/BitmapImageUtils",
    "awayjs-core/lib/utils/ColorUtils",
    "awayjs-core/lib/data/BitmapImageChannel",
    "BitmapImageChannel",
    "ALPHA",
    "BLUE",
    "GREEN",
    "RED",
    "awayjs-core/lib/data/BitmapImageCube",
    "ImageCube",
    "Rectangle",
    "BitmapImageCube",
    "side",
    "posX",
    "negX",
    "posY",
    "negY",
    "posZ",
    "negZ",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/data/BlendMode",
    "BlendMode",
    "ADD",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "NORMAL",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "SUBTRACT",
    "CPURenderingContext2D",
    "ImageData",
    "reset",
    "contextId",
    "awayjs-core/lib/data/CPURenderingContext2D",
    "awayjs-core/lib/data/ImageData",
    "Matrix",
    "Point",
    "cpuCanvas",
    "point",
    "point2",
    "restore",
    "setTransform",
    "m11",
    "m12",
    "m21",
    "m22",
    "dx",
    "dy",
    "save",
    "arc",
    "radius",
    "startAngle",
    "endAngle",
    "anticlockwise",
    "measureText",
    "text",
    "undefined",
    "isPointInPath",
    "fillRule",
    "quadraticCurveTo",
    "cpx",
    "cpy",
    "imagedata",
    "dirtyX",
    "dirtyY",
    "dirtyWidth",
    "dirtyHeight",
    "rotate",
    "angle",
    "fillText",
    "maxWidth",
    "translate",
    "scale",
    "createRadialGradient",
    "x0",
    "y0",
    "r0",
    "x1",
    "y1",
    "r1",
    "lineTo",
    "getLineDash",
    "fill",
    "createImageData",
    "imageDataOrSw",
    "sh",
    "createPattern",
    "image",
    "repetition",
    "closePath",
    "w",
    "h",
    "clip",
    "clearRect",
    "moveTo",
    "sx",
    "sy",
    "sw",
    "applyPixel32",
    "target",
    "floor",
    "copyPixel32",
    "fromX",
    "fromY",
    "fromIndex",
    "fillStyle",
    "parsedFillStyle",
    "colorStrings",
    "substring",
    "lastIndexOf",
    "split",
    "parsedA",
    "parseFloat",
    "parsedR",
    "parseInt",
    "parsedG",
    "parsedB",
    "bezierCurveTo",
    "cp1x",
    "cp1y",
    "cp2x",
    "cp2y",
    "drawImage",
    "offsetX",
    "offsetY",
    "canvasOffsetX",
    "canvasOffsetY",
    "canvasImageWidth",
    "canvasImageHeight",
    "toString",
    "bitmap",
    "drawBitmap",
    "htmlImage",
    "htmlCanvas",
    "htmlContext",
    "htmlImageData",
    "resultBitmap",
    "passBitmap",
    "canvas",
    "canvasImageData",
    "scaleX",
    "sqrt",
    "scaleY",
    "c",
    "tx",
    "ty",
    "invert",
    "transformPoint",
    "sampleBilinear",
    "p1",
    "p2",
    "sampleBox",
    "sample",
    "transform",
    "stroke",
    "strokeRect",
    "setLineDash",
    "segments",
    "strokeText",
    "beginPath",
    "arcTo",
    "x2",
    "y2",
    "createLinearGradient",
    "v",
    "texture",
    "texelSizeX",
    "texelSizeY",
    "color00",
    "color10",
    "color01",
    "color11",
    "interColor0",
    "interpolateColor",
    "interColor1",
    "result",
    "area",
    "xsize",
    "ysize",
    "toY",
    "ceil",
    "max",
    "toX",
    "awayjs-core/lib/geom/Matrix",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/data/IImageCanvas",
    "ImageBase",
    "Sampler2D",
    "ImageUtils",
    "_powerOfTwo",
    "_testDimensions",
    "invalidateSize",
    "isDimensionValid",
    "createSampler",
    "awayjs-core/lib/data/ImageBase",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "AbstractMethodError",
    "_imageObject",
    "_pFormat",
    "_iAddImageObject",
    "ImageObject",
    "_iRemoveImageObject",
    "awayjs-core/lib/errors/AbstractMethodError",
    "SamplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "SamplerBase",
    "repeat",
    "smooth",
    "mipmap",
    "_repeat",
    "_updateRect",
    "_imageRect",
    "_frameRect",
    "awayjs-core/lib/data/SamplerBase",
    "_smooth",
    "_mipmap",
    "awayjs-core/lib/data/SpecularImage2D",
    "SpecularImage2D",
    "specularSource",
    "glossSource",
    "_specularSource",
    "_glossSource",
    "_output",
    "_testSize",
    "origin",
    "awayjs-core/lib/data/WaveAudio",
    "AudioManager",
    "WaveAudio",
    "_volume",
    "_audioChannel",
    "volume",
    "currentTime",
    "duration",
    "stop",
    "play",
    "loop",
    "getChannel",
    "id",
    "newInstance",
    "name",
    "awayjs-core/lib/managers/AudioManager",
    "message",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/ArgumentError",
    "ArgumentError",
    "awayjs-core/lib/errors/DocumentError",
    "DocumentError",
    "DOCUMENT_DOES_NOT_EXIST",
    "_name",
    "_errorID",
    "_messsage",
    "awayjs-core/lib/errors/PartialImplementationError",
    "PartialImplementationError",
    "dependency",
    "awayjs-core/lib/errors/RangeError",
    "RangeError",
    "awayjs-core/lib/events/AssetEvent",
    "Event",
    "AssetEvent",
    "type",
    "asset",
    "prevName",
    "_asset",
    "_prevName",
    "assetPrevName",
    "ASSET_COMPLETE",
    "ASSET_RENAME",
    "ASSET_CONFLICT_RESOLVED",
    "TEXTURE_SIZE_ERROR",
    "awayjs-core/lib/events/Event",
    "awayjs-core/lib/events/EventDispatcher",
    "EventDispatcher",
    "listeners",
    "addEventListener",
    "listener",
    "getEventListenerIndex",
    "removeEventListener",
    "dispatchEvent",
    "event",
    "listenerArray",
    "hasEventListener",
    "COMPLETE",
    "OPEN",
    "ENTER_FRAME",
    "EXIT_FRAME",
    "RESIZE",
    "ERROR",
    "CHANGE",
    "awayjs-core/lib/events/HTTPStatusEvent",
    "HTTPStatusEvent",
    "status",
    "HTTP_STATUS",
    "awayjs-core/lib/events/IEventDispatcher",
    "awayjs-core/lib/events/IOErrorEvent",
    "IOErrorEvent",
    "IO_ERROR",
    "awayjs-core/lib/events/LoaderEvent",
    "LoaderEvent",
    "url",
    "content",
    "assets",
    "_url",
    "_content",
    "_assets",
    "RESOURCE_COMPLETE",
    "awayjs-core/lib/events/ParserEvent",
    "ParserEvent",
    "_message",
    "PARSE_COMPLETE",
    "PARSE_ERROR",
    "READY_FOR_DEPENDENCIES",
    "awayjs-core/lib/events/ProgressEvent",
    "ProgressEvent",
    "PROGRESS",
    "awayjs-core/lib/events/ProjectionEvent",
    "ProjectionEvent",
    "projection",
    "_projection",
    "MATRIX_CHANGED",
    "awayjs-core/lib/events/TimerEvent",
    "TimerEvent",
    "TIMER",
    "TIMER_COMPLETE",
    "awayjs-core/lib/geom/Box",
    "Vector3D",
    "Box",
    "z",
    "depth",
    "val",
    "_bottomRightBack",
    "_topLeftFront",
    "contains",
    "containsPoint",
    "containsBox",
    "box",
    "copyFrom",
    "sourceBox",
    "equals",
    "toCompare",
    "inflate",
    "dz",
    "inflatePoint",
    "delta",
    "intersection",
    "toIntersect",
    "intersects",
    "rayIntersection",
    "direction",
    "targetNormal",
    "halfExtentsX",
    "halfExtentsY",
    "halfExtentsZ",
    "centerX",
    "centerY",
    "centerZ",
    "px",
    "py",
    "pz",
    "vx",
    "vy",
    "vz",
    "ix",
    "iy",
    "iz",
    "rayEntryDistance",
    "closestPointToPoint",
    "isEmpty",
    "offsetPosition",
    "setEmpty",
    "setTo",
    "xa",
    "ya",
    "za",
    "widtha",
    "heighta",
    "deptha",
    "union",
    "toUnion",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/geom/ColorTransform",
    "ColorTransform",
    "clear",
    "copyTo",
    "destination",
    "prepend",
    "ct",
    "awayjs-core/lib/geom/MathConsts",
    "MathConsts",
    "RADIANS_TO_DEGREES",
    "PI",
    "DEGREES_TO_RADIANS",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "Matrix3D",
    "Matrix3DUtils",
    "quaternion2matrix",
    "quarternion",
    "m",
    "xx",
    "xy",
    "xz",
    "xw",
    "yy",
    "yz",
    "yw",
    "zz",
    "zw",
    "raw",
    "RAW_DATA_CONTAINER",
    "copyRawDataFrom",
    "getForward",
    "copyColumnTo",
    "normalize",
    "getUp",
    "getRight",
    "compare",
    "m1",
    "m2",
    "r2",
    "rawData",
    "copyRawDataTo",
    "lookAt",
    "pos",
    "dir",
    "up",
    "dirN",
    "upN",
    "lftN",
    "crossProduct",
    "dotProduct",
    "reflection",
    "plane",
    "ab2",
    "ac2",
    "bc2",
    "transformVector",
    "vector",
    "k",
    "deltaTransformVector",
    "getTranslation",
    "deltaTransformVectors",
    "vin",
    "vout",
    "outIndex",
    "CALCULATION_MATRIX",
    "awayjs-core/lib/geom/Matrix3D",
    "Orientation3D",
    "identity",
    "append",
    "lhs",
    "lrd",
    "m111",
    "m112",
    "m113",
    "m114",
    "m121",
    "m122",
    "m123",
    "m124",
    "m131",
    "m132",
    "m133",
    "m134",
    "m141",
    "m142",
    "m143",
    "m144",
    "m211",
    "m212",
    "m213",
    "m214",
    "m221",
    "m222",
    "m223",
    "m224",
    "m231",
    "m232",
    "m233",
    "m234",
    "m241",
    "m242",
    "m243",
    "m244",
    "appendRotation",
    "degrees",
    "axis",
    "getAxisRotation",
    "appendSkew",
    "xSkew",
    "ySkew",
    "zSkew",
    "tempRawData",
    "tempMatrix",
    "appendScale",
    "xScale",
    "yScale",
    "zScale",
    "appendTranslation",
    "copyColumnFrom",
    "column",
    "vector3D",
    "sourceMatrix3D",
    "sourceRaw",
    "transpose",
    "copyRowFrom",
    "row",
    "copyRowTo",
    "copyToMatrix3D",
    "dest",
    "decompose",
    "orientationStyle",
    "q",
    "_components",
    "colX",
    "colY",
    "colZ",
    "skew",
    "scaleBy",
    "combine",
    "rot",
    "AXIS_ANGLE",
    "acos",
    "QUATERNION",
    "tr",
    "EULER_ANGLES",
    "asin",
    "atan2",
    "interpolate",
    "thisMat",
    "toMat",
    "percent",
    "interpolateTo",
    "determinant",
    "invertable",
    "abs",
    "m13",
    "m14",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "m41",
    "m42",
    "m43",
    "m44",
    "rhs",
    "prependRotation",
    "prependScale",
    "prependTranslation",
    "recompose",
    "components",
    "sin",
    "cos",
    "rotation",
    "transformBox",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "transformVectors",
    "rad",
    "tmp1",
    "tmp2",
    "_position",
    "toFixed",
    "decimalPlace",
    "magnitude",
    "pow",
    "awayjs-core/lib/geom/Orientation3D",
    "concat",
    "a1",
    "c1",
    "tx1",
    "sourceMatrix",
    "createBox",
    "createGradientBox",
    "deltaTransformPoint",
    "norm",
    "multiply",
    "awayjs-core/lib/geom/PerspectiveProjection",
    "PerspectiveProjection",
    "toMatrix3D",
    "_matrix3D",
    "awayjs-core/lib/geom/Plane3D",
    "PlaneClassification",
    "Plane3D",
    "_iAlignment",
    "ALIGN_XY_AXIS",
    "ALIGN_YZ_AXIS",
    "ALIGN_XZ_AXIS",
    "ALIGN_ANY",
    "fromPoints",
    "p0",
    "d1x",
    "d1y",
    "d1z",
    "d2x",
    "d2y",
    "d2z",
    "fromNormalAndPoint",
    "normal",
    "distance",
    "classifyPoint",
    "epsilon",
    "FRONT",
    "BACK",
    "INTERSECT",
    "awayjs-core/lib/geom/PlaneClassification",
    "IN",
    "OUT",
    "add",
    "sourcePoint",
    "thickness",
    "invLength",
    "subtract",
    "pt1",
    "pt2",
    "polar",
    "awayjs-core/lib/geom/PoissonLookup",
    "PoissonLookup",
    "initDistributions",
    "_distributions",
    "getDistribution",
    "awayjs-core/lib/geom/Quaternion",
    "Quaternion",
    "qa",
    "qb",
    "w1",
    "z1",
    "w2",
    "z2",
    "multiplyVector",
    "fromAxisAngle",
    "sin_a",
    "cos_a",
    "slerp",
    "dot",
    "s1",
    "s2",
    "lerp",
    "fromEulerAngles",
    "ax",
    "ay",
    "az",
    "halfX",
    "halfY",
    "halfZ",
    "cosX",
    "sinX",
    "cosY",
    "sinY",
    "cosZ",
    "sinZ",
    "toEulerAngles",
    "mag",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "ww",
    "fromMatrix",
    "toRawData",
    "exclude4thRow",
    "rotatePoint",
    "_bottomRight",
    "_topLeft",
    "containsRect",
    "offsetPoint",
    "awayjs-core/lib/geom/Sphere",
    "Sphere",
    "det",
    "sqrtDet",
    "awayjs-core/lib/geom/UVTransform",
    "UVTransform",
    "_uvMatrix",
    "_rotation",
    "_scaleU",
    "_scaleV",
    "_offsetU",
    "_offsetV",
    "_uvMatrixDirty",
    "updateUVMatrix",
    "lengthSquared",
    "angleBetween",
    "ascl",
    "bscl",
    "src",
    "decrementBy",
    "allFour",
    "incrementBy",
    "nearEquals",
    "tolerance",
    "negate",
    "project",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "_id",
    "ID_COUNT",
    "_originalName",
    "updateFullPath",
    "prev",
    "_clearInterfaces",
    "_namespace",
    "_full_path",
    "assetPathEquals",
    "ns",
    "isAsset",
    "assetClass",
    "resetAssetPath",
    "overrideOriginal",
    "DEFAULT_NAMESPACE",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "AssetLibraryIterator",
    "LoaderSession",
    "ConflictPrecedence",
    "ConflictStrategy",
    "AssetLibraryBundle",
    "_this",
    "_loaderSessionsGarbage",
    "_assetDictionary",
    "_loaderSessions",
    "conflictStrategy",
    "IGNORE",
    "create",
    "conflictPrecedence",
    "FAVOR_NEW",
    "_onAssetRenameDelegate",
    "onAssetRename",
    "_onAssetConflictResolvedDelegate",
    "onAssetConflictResolved",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "getInstance",
    "key",
    "_iInstances",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "_strategy",
    "_strategyPreference",
    "createIterator",
    "assetTypeFilter",
    "namespaceFilter",
    "filterFunc",
    "load",
    "req",
    "context",
    "parser",
    "getLoaderSession",
    "loadData",
    "loader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "disposeLoaderSession",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "getAsset",
    "_assetDictDirty",
    "rehashAssetDict",
    "getAllAssets",
    "addAsset",
    "old",
    "assetNamespace",
    "resolveConflict",
    "removeAsset",
    "idx",
    "removeAssetFromDict",
    "removeAssetByName",
    "removeAllAssets",
    "removeNamespaceAssets",
    "old_assets",
    "autoRemoveEmptyNamespace",
    "empty",
    "stopAllLoaderSessions",
    "killloaderSession",
    "pop",
    "clearTimeout",
    "dict",
    "awayjs-core/lib/library/AssetLibraryIterator",
    "awayjs-core/lib/library/ConflictPrecedence",
    "awayjs-core/lib/library/ConflictStrategy",
    "awayjs-core/lib/library/LoaderSession",
    "filter",
    "_idx",
    "_filtered",
    "next",
    "setIndex",
    "awayjs-core/lib/library/AssetLibrary",
    "AssetLibrary",
    "getBundle",
    "stopLoad",
    "FAVOR_OLD",
    "awayjs-core/lib/library/ConflictStrategyBase",
    "ConflictStrategyBase",
    "changedAsset",
    "oldAsset",
    "assetsDictionary",
    "precedence",
    "_pUpdateNames",
    "nonConflictingName",
    "newAsset",
    "loser_prev_name",
    "winner",
    "loser",
    "ErrorConflictStrategy",
    "IgnoreConflictStrategy",
    "NumSuffixConflictStrategy",
    "include",
    "APPEND_NUM_SUFFIX",
    "THROW_ERROR",
    "awayjs-core/lib/library/ErrorConflictStrategy",
    "awayjs-core/lib/library/IgnoreConflictStrategy",
    "awayjs-core/lib/library/NumSuffixConflictStrategy",
    "assetFullPath",
    "awayjs-core/lib/library/IAssetClass",
    "awayjs-core/lib/library/IAsset",
    "awayjs-core/lib/library/IDUtil",
    "IDUtil",
    "createUID",
    "uid",
    "ALPHA_CHAR_CODES",
    "random",
    "time",
    "Date",
    "getTime",
    "timeString",
    "toUpperCase",
    "substr",
    "charCodeAt",
    "String",
    "fromCharCode",
    "apply",
    "awayjs-core/lib/library/IWrapperClass",
    "awayjs-core/lib/library/LoaderContext",
    "LoaderContext",
    "includeDependencies",
    "dependencyBaseUrl",
    "_includeDependencies",
    "_dependencyBaseUrl",
    "_embeddedDataByUrl",
    "_remappedUrls",
    "_materialMode",
    "UNDEFINED",
    "materialMode",
    "_overrideAbsPath",
    "_overrideFullUrls",
    "mapUrl",
    "originalUrl",
    "newUrl",
    "mapUrlToData",
    "_iHasDataForUrl",
    "_iGetDataForUrl",
    "_iHasMappingForUrl",
    "_iGetRemappedUrl",
    "SINGLEPASS_MATERIALS",
    "MULTIPASS_MATERIALS",
    "URLLoader",
    "URLLoaderDataFormat",
    "Image2DParser",
    "ImageCubeParser",
    "TextureAtlasParser",
    "ResourceDependency",
    "WaveAudioParser",
    "_stack",
    "_errorHandlers",
    "_parseErrorHandlers",
    "_onReadyForDependenciesDelegate",
    "onReadyForDependencies",
    "_onParseCompleteDelegate",
    "onParseComplete",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_parsers",
    "parsers",
    "_baseDependency",
    "_uri",
    "replace",
    "retrieveDependency",
    "retrieveNext",
    "_currentDependency",
    "dependencies",
    "parsingPaused",
    "_iResumeParsing",
    "_iSuccess",
    "resolve",
    "_iLoader",
    "addEventListeners",
    "request",
    "Function",
    "_iSetData",
    "retrieveAsRawData",
    "parseDependency",
    "resolveDependencyUrl",
    "dataFormat",
    "BINARY",
    "_iSetParser",
    "getParserFromSuffix",
    "joinUrl",
    "base",
    "end",
    "charAt",
    "scheme_re",
    "RegExp",
    "overrideAbsolutePaths",
    "test",
    "overrideFullURLs",
    "noscheme_url",
    "retrieveParserDependencies",
    "parserDependancies",
    "resolveParserDependencies",
    "handled",
    "isDependency",
    "removeEventListeners",
    "resolveFailure",
    "suppresAssetEvents",
    "resolveName",
    "handler",
    "getParserFromData",
    "supportsData",
    "_iFileName",
    "parseAsync",
    "fileExtension",
    "toLowerCase",
    "supportsType",
    "awayjs-core/lib/net/URLLoader",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/parsers/Image2DParser",
    "awayjs-core/lib/parsers/ImageCubeParser",
    "awayjs-core/lib/parsers/ResourceDependency",
    "awayjs-core/lib/parsers/TextureAtlasParser",
    "awayjs-core/lib/parsers/WaveAudioParser",
    "separator",
    "_separator",
    "_next_suffix",
    "orig",
    "new_name",
    "suffix",
    "isNaN",
    "awayjs-core/lib/managers/AudioChannel",
    "AudioChannel",
    "_isPlaying",
    "_isLooping",
    "_audioCtx",
    "window",
    "_gainNode",
    "createGain",
    "connect",
    "_audio",
    "Audio",
    "onended",
    "_onEnded",
    "createMediaElementSource",
    "gain",
    "isPlaying",
    "isLooping",
    "isDecoding",
    "pause",
    "maxChannels",
    "_channels",
    "StreamingAudioChannel",
    "WebAudioChannel",
    "channelClass",
    "channel",
    "awayjs-core/lib/managers/StreamingAudioChannel",
    "awayjs-core/lib/managers/WebAudioChannel",
    "awayjs-core/lib/managers/EventAudioChannel",
    "ParserUtils",
    "EventAudioChannel",
    "_startTime",
    "ontimeupdate",
    "_onTimeUpdate",
    "_duration",
    "_base64Cache",
    "arrayBufferToBase64",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-core/lib/managers/IAudioChannelClass",
    "awayjs-core/lib/managers/IAudioChannel",
    "_sourceOpenDelegate",
    "_sourceOpen",
    "_updateEndDelegate",
    "_updateEnd",
    "_updateSource",
    "_sourceDirty",
    "_offset",
    "_isQueuing",
    "_isOpening",
    "_queueBuffer",
    "_mediaSource",
    "activeSourceBuffers",
    "console",
    "_sourceBuffer",
    "addSourceBuffer",
    "timestampOffset",
    "appendBuffer",
    "endOfStream",
    "_disposeSource",
    "MediaSource",
    "_urlString",
    "URL",
    "createObjectURL",
    "remove",
    "removeSourceBuffer",
    "revokeObjectURL",
    "_isDecoding",
    "_onEndedDelegate",
    "_currentTime",
    "_decodeCache",
    "_onDecodeComplete",
    "_errorCache",
    "decodeAudioData",
    "_onError",
    "_source",
    "createBufferSource",
    "start",
    "error",
    "disconnect",
    "awayjs-core/lib/net/CrossDomainPolicy",
    "CrossDomainPolicy",
    "ANONYMOUS",
    "USE_CREDENTIALS",
    "TEXT",
    "VARIABLES",
    "BLOB",
    "ARRAY_BUFFER",
    "URLRequestMethod",
    "URLVariables",
    "AwayEvent",
    "AwayProgressEvent",
    "_bytesLoaded",
    "_bytesTotal",
    "_dataFormat",
    "_loadError",
    "_request",
    "_data",
    "format",
    "initXHR",
    "method",
    "POST",
    "postRequest",
    "getRequest",
    "isSupported",
    "close",
    "_XHR",
    "abort",
    "disposeXHR",
    "setResponseType",
    "xhr",
    "responseType",
    "open",
    "async",
    "send",
    "handleXmlHttpRequestException",
    "urlVars",
    "formData",
    "XMLHttpRequest",
    "onloadstart",
    "onLoadStart",
    "onprogress",
    "onProgress",
    "onabort",
    "onAbort",
    "onerror",
    "onload",
    "ontimeout",
    "onTimeOut",
    "onloadend",
    "onLoadEnd",
    "onreadystatechange",
    "onReadyStateChange",
    "decodeURLVariables",
    "join",
    "tokens",
    "re",
    "exec",
    "decodeURIComponent",
    "readyState",
    "_loadErrorEvent",
    "_progressEvent",
    "bytesTotal",
    "total",
    "bytesLoaded",
    "loaded",
    "_loadStartEvent",
    "responseText",
    "response",
    "_loadCompleteEvent",
    "awayjs-core/lib/net/URLRequestMethod",
    "awayjs-core/lib/net/URLVariables",
    "GET",
    "awayjs-core/lib/net/URLRequest",
    "URLRequest",
    "_variables",
    "decode",
    "obj",
    "fd",
    "FormData",
    "ParserBase",
    "ByteArray",
    "extension",
    "HTMLImageElement",
    "ba",
    "readUnsignedShort",
    "readShort",
    "readUTFBytes",
    "readByte",
    "_pProceedParsing",
    "sizeError",
    "_loadingImage",
    "MORE_TO_PARSE",
    "_htmlImageElement",
    "isHTMLImageElementValid",
    "imageToBitmapImage2D",
    "_pFinalizeAsset",
    "htmlImageElement",
    "byteArrayToImage",
    "complete",
    "arrayBufferToImage",
    "Blob",
    "blobToImage",
    "_pContent",
    "PARSING_DONE",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/utils/ByteArray",
    "JSON",
    "parse",
    "_iResolveDependency",
    "resourceDependency",
    "_iResolveDependencyFailure",
    "_imgDependencyDictionary",
    "_getBitmapImage2D",
    "json",
    "rec",
    "_pDieWithError",
    "_pAddDependency",
    "_validateCubeData",
    "_pPauseAndRetrieveDependencies",
    "Timer",
    "getTimer",
    "_dependencies",
    "_pOnIntervalDelegate",
    "_pOnInterval",
    "isBitmapImage2DValid",
    "bitmapImage2D",
    "isValid",
    "isImage2DValid",
    "_parsingFailure",
    "_parsingPaused",
    "_parsingComplete",
    "newMaterialMode",
    "frameLimit",
    "_pStartParsing",
    "_iResolveDependencyName",
    "_timer",
    "_isParsing",
    "type_event",
    "type_name",
    "suppressErrorEvents",
    "sub_id",
    "_pPauseParsing",
    "_pHasTime",
    "_lastFrameTime",
    "_frameLimit",
    "_pFinishParsing",
    "_pGetTextData",
    "_pGetByteData",
    "toByteArray",
    "_pGetData",
    "awayjs-core/lib/utils/Timer",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-core/lib/parsers/ParserDataFormat",
    "ParserDataFormat",
    "PLAIN_TEXT",
    "IMAGE",
    "mimeType",
    "byteStr",
    "bytes",
    "base64Image",
    "btoa",
    "arrayBufferToAudio",
    "fileType",
    "str",
    "audio",
    "img",
    "Image",
    "arraybytes",
    "byteArrayToAudio",
    "filetype",
    "URLObj",
    "blobToAudio",
    "bitmapData",
    "setArrayBuffer",
    "getBytesAvailable",
    "parentParser",
    "suppressAssetEvents",
    "_sub_id",
    "_parser",
    "_parentParser",
    "_retrieveAsRawData",
    "_suppressAssetEvents",
    "XmlUtils",
    "_parseState",
    "TextureAtlasParserState",
    "PARSE_SUBTEXTURES",
    "nodes",
    "PARSE_XML",
    "_doc",
    "getChildrenWithTag",
    "strToXml",
    "_imagePath",
    "readAttributeValue",
    "_subTextureNodes",
    "PARSE_IMAGE",
    "sampler",
    "element",
    "imageRect",
    "frameRect",
    "awayjs-core/lib/utils/XmlUtils",
    "parseFileType",
    "awayjs-core/lib/pool/IImageObject",
    "awayjs-core/lib/projections/CoordinateSystem",
    "CoordinateSystem",
    "LEFT_HANDED",
    "RIGHT_HANDED",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ProjectionBase",
    "FreeMatrixProjection",
    "_pMatrix",
    "_pNear",
    "_pFar",
    "_pAspectRatio",
    "pInvalidateMatrix",
    "pUpdateMatrix",
    "_pMatrixInvalid",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-core/lib/projections/ProjectionBase",
    "awayjs-core/lib/projections/IProjection",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection",
    "ObliqueNearPlaneProjection",
    "baseProjection",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_baseProjection",
    "frustumCorners",
    "near",
    "far",
    "_iAspectRatio",
    "_plane",
    "cx",
    "cy",
    "cz",
    "cw",
    "signX",
    "signY",
    "inverse",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "OrthographicOffCenterProjection",
    "_minX",
    "_maxX",
    "_minY",
    "_maxY",
    "unproject",
    "nX",
    "nY",
    "sZ",
    "unprojectionMatrix",
    "_pFrustumCorners",
    "awayjs-core/lib/projections/OrthographicProjection",
    "OrthographicProjection",
    "projectionHeight",
    "_projectionHeight",
    "_yMax",
    "_xMax",
    "left",
    "right",
    "top",
    "bottom",
    "_pScissorRect",
    "_pViewPort",
    "xWidth",
    "yHgt",
    "center",
    "middle",
    "fieldOfView",
    "coordinateSystem",
    "_fieldOfView",
    "_focalLength",
    "_hFieldOfView",
    "_hFocalLength",
    "_preserveAspectRatio",
    "_preserveFocalLength",
    "tan",
    "_pCoordinateSystem",
    "atan",
    "tanMinX",
    "_pOriginX",
    "tanMaxX",
    "tanMinY",
    "_pOriginY",
    "tanMaxY",
    "_unprojectionInvalid",
    "point3d",
    "_unprojection",
    "_iUpdateScissorRect",
    "_iUpdateViewport",
    "awayjs-core/lib/ui/Keyboard",
    "Keyboard",
    "A",
    "ALTERNATE",
    "AUDIO",
    "B",
    "BACKQUOTE",
    "BACKSLASH",
    "BACKSPACE",
    "C",
    "CAPS_LOCK",
    "CHANNEL_DOWN",
    "CHANNEL_UP",
    "COMMA",
    "COMMAND",
    "CONTROL",
    "D",
    "DELETE",
    "DOWN",
    "DVR",
    "E",
    "END",
    "ENTER",
    "EQUAL",
    "ESCAPE",
    "EXIT",
    "F",
    "F1",
    "F10",
    "F11",
    "F12",
    "F13",
    "F14",
    "F15",
    "F2",
    "F3",
    "F4",
    "F5",
    "F6",
    "F7",
    "F8",
    "F9",
    "FAST_FORWARD",
    "G",
    "GUIDE",
    "H",
    "HELP",
    "HOME",
    "I",
    "INFO",
    "INPUT",
    "INSERT",
    "J",
    "K",
    "KEYNAME_BEGIN",
    "KEYNAME_BREAK",
    "KEYNAME_CLEARDISPLAY",
    "KEYNAME_CLEARLINE",
    "KEYNAME_DELETE",
    "KEYNAME_DELETECHAR",
    "KEYNAME_DELETELINE",
    "KEYNAME_DOWNARROW",
    "KEYNAME_END",
    "KEYNAME_EXECUTE",
    "KEYNAME_F1",
    "KEYNAME_F10",
    "KEYNAME_F11",
    "KEYNAME_F12",
    "KEYNAME_F13",
    "KEYNAME_F14",
    "KEYNAME_F15",
    "KEYNAME_F16",
    "KEYNAME_F17",
    "KEYNAME_F18",
    "KEYNAME_F19",
    "KEYNAME_F2",
    "KEYNAME_F20",
    "KEYNAME_F21",
    "KEYNAME_F22",
    "KEYNAME_F23",
    "KEYNAME_F24",
    "KEYNAME_F25",
    "KEYNAME_F26",
    "KEYNAME_F27",
    "KEYNAME_F28",
    "KEYNAME_F29",
    "KEYNAME_F3",
    "KEYNAME_F30",
    "KEYNAME_F31",
    "KEYNAME_F32",
    "KEYNAME_F33",
    "KEYNAME_F34",
    "KEYNAME_F35",
    "KEYNAME_F4",
    "KEYNAME_F5",
    "KEYNAME_F6",
    "KEYNAME_F7",
    "KEYNAME_F8",
    "KEYNAME_F9",
    "KEYNAME_FIND",
    "KEYNAME_HELP",
    "KEYNAME_HOME",
    "KEYNAME_INSERT",
    "KEYNAME_INSERTCHAR",
    "KEYNAME_INSERTLINE",
    "KEYNAME_LEFTARROW",
    "KEYNAME_MENU",
    "KEYNAME_MODESWITCH",
    "KEYNAME_NEXT",
    "KEYNAME_PAGEDOWN",
    "KEYNAME_PAGEUP",
    "KEYNAME_PAUSE",
    "KEYNAME_PREV",
    "KEYNAME_PRINT",
    "KEYNAME_PRINTSCREEN",
    "KEYNAME_REDO",
    "KEYNAME_RESET",
    "KEYNAME_RIGHTARROW",
    "KEYNAME_SCROLLLOCK",
    "KEYNAME_SELECT",
    "KEYNAME_STOP",
    "KEYNAME_SYSREQ",
    "KEYNAME_SYSTEM",
    "KEYNAME_UNDO",
    "KEYNAME_UPARROW",
    "KEYNAME_USER",
    "L",
    "LAST",
    "LEFT",
    "LEFTBRACKET",
    "LIVE",
    "M",
    "MASTER_SHELL",
    "MENU",
    "MINUS",
    "N",
    "NEXT",
    "NUMBER_0",
    "NUMBER_1",
    "NUMBER_2",
    "NUMBER_3",
    "NUMBER_4",
    "NUMBER_5",
    "NUMBER_6",
    "NUMBER_7",
    "NUMBER_8",
    "NUMBER_9",
    "NUMPAD",
    "NUMPAD_0",
    "NUMPAD_1",
    "NUMPAD_2",
    "NUMPAD_3",
    "NUMPAD_4",
    "NUMPAD_5",
    "NUMPAD_6",
    "NUMPAD_7",
    "NUMPAD_8",
    "NUMPAD_9",
    "NUMPAD_ADD",
    "NUMPAD_DECIMAL",
    "NUMPAD_DIVIDE",
    "NUMPAD_ENTER",
    "NUMPAD_MULTIPLY",
    "NUMPAD_SUBTRACT",
    "O",
    "P",
    "PAGE_DOWN",
    "PAGE_UP",
    "PAUSE",
    "PERIOD",
    "PLAY",
    "PREVIOUS",
    "Q",
    "QUOTE",
    "R",
    "RECORD",
    "REWIND",
    "RIGHT",
    "RIGHTBRACKET",
    "S",
    "SEARCH",
    "SEMICOLON",
    "SETUP",
    "SHIFT",
    "SKIP_BACKWARD",
    "SKIP_FORWARD",
    "SLASH",
    "SPACE",
    "STOP",
    "SUBTITLE",
    "T",
    "TAB",
    "U",
    "UP",
    "V",
    "VOD",
    "W",
    "X",
    "Y",
    "YELLOW",
    "Z",
    "bmpd",
    "awayjs-core/lib/utils/ByteArrayBase",
    "ByteArrayBase",
    "_mode",
    "writeByte",
    "writeUnsignedByte",
    "readUnsignedByte",
    "writeUnsignedShort",
    "writeUnsignedInt",
    "writeFloat",
    "toFloatBits",
    "readFloat",
    "fromFloatBits",
    "compareEqual",
    "other",
    "co0",
    "c0",
    "writeBase64String",
    "dumpToConsole",
    "oldpos",
    "nstep",
    "asHexString",
    "digits",
    "lut",
    "readBase64String",
    "internalGetBase64String",
    "getUnsignedByteFunc",
    "self",
    "b0",
    "b1",
    "b2",
    "enc1",
    "enc2",
    "enc3",
    "enc4",
    "base64Key",
    "Base64Key",
    "awayjs-core/lib/utils/ByteArrayBuffer",
    "ByteArrayBuffer",
    "_bytes",
    "bi",
    "Number",
    "sign",
    "exponent",
    "mantissa",
    "maxlength",
    "unalignedarraybytestemp",
    "ensureWriteableSpace",
    "ensureSpace",
    "aBuffer",
    "inInt8AView",
    "localInt8View",
    "newmaxlength",
    "newarraybuffer",
    "newview",
    "readBytes",
    "byteView",
    "localByteView",
    "view2",
    "view3",
    "DataView",
    "getUint8",
    "c2",
    "c3",
    "readInt",
    "int",
    "getInt32",
    "short",
    "getInt16",
    "readDouble",
    "double",
    "getFloat64",
    "pa",
    "Uint32Array",
    "awayjs-core/lib/utils/CSS",
    "CSS",
    "setElementSize",
    "style",
    "setElementWidth",
    "setElementHeight",
    "setElementX",
    "setElementY",
    "getElementVisibility",
    "visibility",
    "setElementVisibility",
    "visible",
    "setElementAlpha",
    "alpha",
    "HTMLCanvasElement",
    "globalAlpha",
    "setElementPosition",
    "absolute",
    "float32Color",
    "ARGBtoFloat32",
    "componentToHex",
    "hex",
    "RGBToHexString",
    "ARGBToHexString",
    "awayjs-core/lib/utils/Debug",
    "Debug",
    "breakpoint",
    "throwPIROnKeyWordOnly",
    "enable",
    "keyword",
    "throwPIR",
    "clss",
    "fnc",
    "msg",
    "logPIR",
    "THROW_ERRORS",
    "LOG_PI_ERRORS",
    "args",
    "_i",
    "arguments",
    "ENABLE_LOG",
    "awayjs-core/lib/utils/Extensions",
    "Extensions",
    "SIMD",
    "Boolean",
    "awayjs-core/lib/utils/IArrayBufferViewClass",
    "image2D",
    "MAX_SIZE",
    "isPowerOfTwo",
    "getBestPowerOf2",
    "awayjs-core/lib/utils/MipmapGenerator",
    "MipmapGenerator",
    "_generateMipMaps",
    "output",
    "_getMipmapHolder",
    "_matrix",
    "bitmapImage",
    "downsampleImage",
    "mipMapHolder",
    "newW",
    "newH",
    "_freeMipMapHolder",
    "_mipMaps",
    "_mipMapUses",
    "holderWidth",
    "holderHeight",
    "destBitmap",
    "BoxFilter",
    "xkernel",
    "PolyphaseKernel",
    "ykernel",
    "tempBitmap",
    "iscale",
    "kernelLength",
    "kernelWidth",
    "kernelWindowSize",
    "sumR",
    "sumG",
    "sumB",
    "sumA",
    "windowSize",
    "colorR",
    "colorG",
    "colorB",
    "colorA",
    "valueAt",
    "srcLength",
    "dstLength",
    "samples",
    "sum",
    "isamples",
    "evaluate",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "RequestAnimationFrame",
    "callback",
    "callbackContext",
    "_active",
    "_argsArray",
    "_getTimer",
    "setCallback",
    "_rafUpdateFunction",
    "_tick",
    "_dt",
    "_callback",
    "_callbackContext",
    "_prevTime",
    "requestAnimationFrame",
    "delay",
    "repeatCount",
    "_repeatCount",
    "_currentCount",
    "_running",
    "_delay",
    "clearInterval",
    "_iid",
    "setInterval",
    "tick",
    "node",
    "tag",
    "fragment",
    "createDocumentFragment",
    "num",
    "childNodes",
    "child",
    "nodeName",
    "appendChild",
    "filterListByParam",
    "paramName",
    "paramValue",
    "attributes",
    "getNamedItem",
    "DOMParser",
    "parseFromString",
    "nodeToString",
    "XMLSerializer",
    "serializeToString",
    "attrName",
    "attrs",
    "attribute",
    "writeAttributeValue",
    "attrValue",
    "Attr",
    "setNamedItem",
    "hasAttribute",
    "now",
    "awayjs-core/lib/vos/IAttributesBufferVO",
    "awayjs-core/lib/vos/IAttributesVO"
  ],
  "mappings": "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",
  "file": "awayjs-core.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAttributesBufferVO\t\t= require(\"awayjs-core/lib/vos/IAttributesBufferVO\");\n\nclass AttributesBuffer extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[assets AttributesBuffer]\";\n\n\tprivate _attributesBufferVO:Array<IAttributesBufferVO> = new Array<IAttributesBufferVO>();\n\tprivate _count:number = 0;\n\tprivate _stride:number = 0;\n\tprivate _newStride:number = 0;\n\n\tprivate _buffer:ArrayBuffer;\n\tprivate _bufferView:Uint8Array;\n\tprivate _contentDirty:boolean;\n\tprivate _lengthDirty:boolean;\n\tprivate _viewVOs:Array<ViewVO> = new Array<ViewVO>();\n\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesBuffer.assetType;\n\t}\n\n\tpublic get stride():number\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\treturn this._stride;\n\t}\n\n\tpublic set stride(value:number)\n\t{\n\t\tif (this._newStride == value)\n\t\t\treturn;\n\n\t\tthis._newStride = value;\n\n\t\tthis.invalidateLength();\n\t}\n\t\n\tpublic get count():number\n\t{\n\t\treturn this._count;\n\t}\n\t\n\tpublic set count(value:number)\n\t{\n\t\tif (this._count == value)\n\t\t\treturn;\n\t\t\n\t\tthis._count = value;\n\t\t\n\t\tthis.invalidateLength();\n\t}\n\n\n\tpublic get buffer():ArrayBuffer\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._buffer;\n\t}\n\n\n\tpublic get bufferView():Uint8Array\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._bufferView;\n\t}\n\n\tpublic set bufferView(value:Uint8Array)\n\t{\n\t\tthis._bufferView = value;\n\t\tthis._buffer = this._bufferView.buffer;\n\t}\n\n\tpublic get length()\n\t{\n\t\treturn this._count*this.stride;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tconstructor(stride:number = 0, count:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._stride = this._newStride = stride;\n\t\tthis._count = count;\n\n\t\tthis._buffer = new ArrayBuffer(this._stride*this._count);\n\t\tthis._bufferView = new Uint8Array(this._buffer, 0, this._buffer.byteLength);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tif (this._contentDirty)\n\t\t\treturn;\n\n\t\tvar len:number = this._attributesBufferVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._attributesBufferVO[i].invalidate();\n\n\t\tthis._contentDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateLength():void\n\t{\n\t\tif (this._lengthDirty)\n\t\t\treturn;\n\n\t\tfor (var i:number = this._attributesBufferVO.length - 1; i >= 0; i--)\n\t\t\tthis._attributesBufferVO[i].dispose();\n\n\t\tthis._lengthDirty = true;\n\n\t\t//dispose buffer if stride is 0\n\t\tif (!this._newStride) {\n\t\t\tthis._buffer = null;\n\t\t\tthis._bufferView = null;\n\t\t}\n\t}\n\n\tpublic clone():AttributesBuffer\n\t{\n\t\tvar attributesBuffer:AttributesBuffer = new AttributesBuffer(this._stride, this._count);\n\t\tattributesBuffer.bufferView.set(this.bufferView);\n\n\t\tvar len:number = this._viewVOs.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._viewVOs[i].view._internalClone(attributesBuffer);\n\n\t\treturn attributesBuffer;\n\t}\n\n\tpublic getView(index:number):AttributesView\n\t{\n\t\tif (index < this._viewVOs.length)\n\t\t\treturn this._viewVOs[index].view;\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._attributesBufferVO.length)\n\t\t\tthis._attributesBufferVO[0].dispose();\n\t}\n\n\tpublic _setAttributes(viewIndex:number, arrayBufferView:ArrayBufferView, offset:number = 0)\n\t{\n\t\tvar array:Uint8Array = (arrayBufferView instanceof Uint8Array)? <Uint8Array> arrayBufferView : new Uint8Array(arrayBufferView.buffer);\n\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\t\tvar vCount:number = array.length/vLength;\n\n\t\t//make sure there is enough space in the buffer\n\t\tif (this.count < vCount + offset)\n\t\t\tthis.count = vCount + offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1) {\n\t\t\tthis._bufferView.set(array);\n\t\t} else {\n\t\t\tfor (var i:number = 0; i < vCount; i++)\n\t\t\t\tthis._bufferView.set(array.subarray(i*vLength, (i+1)*vLength), (i+offset)*this._stride + vOffset);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\tpublic _getLocalArrayBuffer(viewIndex:number):ArrayBuffer\n\t{\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1)\n\t\t\treturn this._buffer;\n\n\t\tvar localBuffer:ArrayBuffer = new ArrayBuffer(this._count*vLength);\n\t\tvar localBufferView:Uint8Array = new Uint8Array(localBuffer);\n\n\t\tfor (var i:number = 0; i < this._count; i++)\n\t\t\tlocalBufferView.set(this._bufferView.subarray(i*this._stride + vOffset, i*this._stride + vOffset + vLength), i*vLength);\n\n\t\treturn localBuffer;\n\t}\n\n\tpublic _iAddAttributesBufferVO(AttributesBufferVO:IAttributesBufferVO):IAttributesBufferVO\n\t{\n\t\tthis._attributesBufferVO.push(AttributesBufferVO);\n\n\t\treturn AttributesBufferVO;\n\t}\n\n\tpublic _iRemoveAttributesBufferVO(AttributesBufferVO:IAttributesBufferVO):IAttributesBufferVO\n\t{\n\t\tthis._attributesBufferVO.splice(this._attributesBufferVO.indexOf(AttributesBufferVO), 1);\n\n\t\treturn AttributesBufferVO;\n\t}\n\n\tpublic _addView(view:AttributesView)\n\t{\n\t\tvar viewVO:ViewVO = new ViewVO(view);\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.offset = len? this._viewVOs[len - 1].offset + this._viewVOs[len - 1].length : 0;\n\n\t\tthis._viewVOs.push(viewVO);\n\n\t\tif (this._newStride < viewVO.offset + viewVO.length) {\n\t\t\tthis._newStride = viewVO.offset + viewVO.length;\n\t\t\tthis.invalidateLength();\n\t\t}\n\n\t\tview._index = len;\n\t}\n\n\tpublic _removeView(view:AttributesView)\n\t{\n\t\tvar viewIndex:number = view._index;\n\t\tvar viewVO:ViewVO = this._viewVOs.splice(viewIndex, 1)[0];\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.dispose();\n\n\t\tfor (var i:number = viewIndex; i < len; i++) {\n\t\t\tviewVO = this._viewVOs[i];\n\t\t\tviewVO.offset = i? this._viewVOs[i - 1].offset + this._viewVOs[i - 1].length : 0;\n\t\t\tviewVO.view._index = i;\n\t\t}\n\n\t\tthis._newStride = viewVO.offset + viewVO.length;\n\n\t\tthis.invalidateLength();\n\t}\n\n\tpublic _getOffset(viewIndex:number):number\n\t{\n\t\treturn this._viewVOs[viewIndex].offset;\n\t}\n\n\tpublic _updateLength()\n\t{\n\t\tthis._lengthDirty = false;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tvar newLength:number = this._newStride*this._count;\n\n\t\tif (!this._buffer || this._buffer.byteLength != newLength) {\n\t\t\tvar newBuffer:ArrayBuffer = new ArrayBuffer(newLength);\n\t\t\tvar newView:Uint8Array = new Uint8Array(newBuffer, 0, newBuffer.byteLength);\n\t\t\tvar viewVO:ViewVO;\n\t\t\tvar vLength:number;\n\t\t\tvar vOffset:number;\n\t\t\tvar vOldOffset:number;\n\n\t\t\tif (this._stride != this._newStride) {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tviewVO = this._viewVOs[i];\n\t\t\t\t\tvLength = viewVO.length;\n\t\t\t\t\tvOffset = viewVO.offset;\n\t\t\t\t\tvOldOffset = viewVO.oldOffset;\n\t\t\t\t\tfor (j = 0; j < this._count; j++)\n\t\t\t\t\t\tif (vOldOffset != null)\n\t\t\t\t\t\t\tnewView.set(new Uint8Array(this._buffer, j*this._stride + vOldOffset, vLength), j*this._newStride + vOffset);\n\n\t\t\t\t\tviewVO.oldOffset = viewVO.offset;\n\t\t\t\t}\n\n\t\t\t\tthis._stride = this._newStride;\n\t\t\t} else {\n\t\t\t\tnewView.set(new Uint8Array(this._buffer, 0, Math.min(newLength, this._buffer.byteLength))); //TODO: bypass quantisation of bytearray on instantiation\n\t\t\t}\n\n\t\t\tthis._buffer = newBuffer;\n\t\t\tthis._bufferView = newView;\n\t\t}\n\t}\n}\n\nclass ViewVO\n{\n\tpublic view:AttributesView;\n\n\tpublic length;\n\n\tpublic offset;\n\n\tpublic oldOffset;\n\n\tconstructor(view:AttributesView)\n\t{\n\t\tthis.view = view;\n\t\tthis.length = view.size*view.dimensions;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.view = null;\n\t}\n\n\tpublic clone():ViewVO\n\t{\n\t\treturn new ViewVO(this.view);\n\t}\n}\n\nexport = AttributesBuffer;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass AttributesView extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[attributes AttributesView]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesView.assetType;\n\t}\n\n\tpublic _cloneCache:AttributesView;\n\tpublic _attributesBuffer:AttributesBuffer;\n\tpublic _bufferDirty:boolean;\n\tprivate _size:number;\n\tprivate _dimensions:number;\n\n\tpublic _index:number;\n\tpublic _arrayClass:IArrayBufferViewClass;\n\n\tpublic _localArrayBuffer:ArrayBuffer;\n\n\tpublic normalized:boolean;\n\n\tpublic get buffer():AttributesBuffer\n\t{\n\t\treturn this._attributesBuffer;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._size = value;\n\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get dimensions():number\n\t{\n\t\treturn this._dimensions;\n\t}\n\n\tpublic set dimensions(value:number)\n\t{\n\t\tif (this._dimensions == value)\n\t\t\treturn;\n\n\t\tthis._dimensions = value;\n\n\t\t//reset view\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this._attributesBuffer.count;\n\t}\n\n\tpublic set count(value:number)\n\t{\n\t\tthis._attributesBuffer.count = value;\n\t}\n\n\tpublic get offset():number\n\t{\n\t\treturn this._attributesBuffer._getOffset(this._index);\n\t}\n\n\tpublic get length():number\n\t{\n\t\treturn this._attributesBuffer.count*this._dimensions;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, count?:number);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBuffer?:AttributesBuffer);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBufferCount:any = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._arrayClass = arrayClass;\n\t\tthis._size = arrayClass.BYTES_PER_ELEMENT;\n\t\tthis._dimensions = dimensions;\n\t\tthis._attributesBuffer = (attributesBufferCount instanceof AttributesBuffer)? <AttributesBuffer> attributesBufferCount : new AttributesBuffer(this._dimensions*this._size, attributesBufferCount);\n\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tthis._attributesBuffer._setAttributes(this._index, (values instanceof Array)? new (this._arrayClass)(values) : <ArrayBufferView> values, offset);\n\n\t\tthis._localArrayBuffer = null;\n\t}\n\n\tpublic get(count:number, offset:number = 0):ArrayBufferView\n\t{\n\t\tif (!this._localArrayBuffer)\n\t\t\tthis._localArrayBuffer = this._attributesBuffer._getLocalArrayBuffer(this._index);\n\n\t\tvar len:number = this._dimensions*this._size;\n\t\treturn new (this._arrayClass)(this._localArrayBuffer, offset*len, count*this._dimensions);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):AttributesView\n\t{\n\t\treturn (this._cloneCache = new AttributesView(this._arrayClass, this._dimensions, attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):AttributesView\n\t{\n\t\tif (attributesBuffer)\n\t\t\tthis._internalClone(attributesBuffer);\n\n\t\tif (!this._cloneCache)\n\t\t\tthis._attributesBuffer.clone();\n\n\t\tvar cloneCache:AttributesView = this._cloneCache;\n\t\tthis._cloneCache = null;\n\n\t\treturn cloneCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer = null;\n\t\tthis._localArrayBuffer = null;\n\t}\n}\n\nexport = AttributesView;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Byte4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Byte4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Byte4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint8Array : Int8Array, 4, attributesBufferLength);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(typedArray:Uint8Array, offset?:number);\n\tpublic set(typedArray:Int8Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint8Array;\n\tpublic get(count:number, offset?:number):Int8Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte4Attributes\n\t{\n\t\treturn (this._cloneCache = new Byte4Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte4Attributes\n\t{\n\t\treturn <Byte4Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Byte4Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float1Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float1Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float1Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 1, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float1Attributes\n\t{\n\t\treturn (this._cloneCache = new Float1Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float1Attributes\n\t{\n\t\treturn <Float1Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float1Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 2, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float2Attributes\n\t{\n\t\treturn (this._cloneCache = new Float2Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float2Attributes\n\t{\n\t\treturn <Float2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float2Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 3, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\treturn (this._cloneCache = new Float3Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float3Attributes\n\t{\n\t\treturn <Float3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float3Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 4, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float4Attributes\n\t{\n\t\treturn (this._cloneCache = new Float4Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float4Attributes\n\t{\n\t\treturn <Float4Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float4Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Short2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 2, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short2Attributes\n\t{\n\t\treturn (this._cloneCache = new Short2Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short2Attributes\n\t{\n\t\treturn <Short2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Short2Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Short3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 3, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short3Attributes\n\t{\n\t\treturn (this._cloneCache = new Short3Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short3Attributes\n\t{\n\t\treturn <Short3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Short3Attributes;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport IImageCanvas\t\t\t\t= require(\"awayjs-core/lib/data/IImageCanvas\");\nimport CPUCanvas = require('awayjs-core/lib/data/CPUCanvas');\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[image BitmapImage2D]\";\n\n\tprivate _imageCanvas:IImageCanvas;\n\tprivate _context:CanvasRenderingContext2D;\n\tprivate _imageData:ImageData;\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImage2D.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null, powerOfTwo:boolean = true)\n\t{\n\t\tsuper(width, height, powerOfTwo);\n\n\t\tthis._transparent = transparent;\n\t\tif(document) {\n\t\t\tthis._imageCanvas = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\t}else {\n\t\t\tthis._imageCanvas = new CPUCanvas();\n\t\t}\n\t\tthis._imageCanvas.width = width;\n\t\tthis._imageCanvas.height = height;\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\n\n\t\tif (fillColor != null)\n\t\t\tthis.fillRect(this._rect, fillColor);\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImage2D\n\t{\n\t\tvar t:BitmapImage2D = new BitmapImage2D(this.width, this.height, this.transparent, null, this.powerOfTwo);\n\t\tt.draw(this);\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar data:Array<number> = this._imageData.data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\n\t\tvar destData:Array<number> = this._imageData.data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:HTMLElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._context = null;\n\t\tthis._imageCanvas = null;\n\t\tthis._imageData = null;\n\t\tthis._rect = null;\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (source instanceof BitmapImage2D && source.getCanvas()){\n\t\t\tsource = source.getCanvas();\n\t\t}\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageData.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\t\tthis._imageData.data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageData.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\tthis._imageData = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\treturn this._imageData;\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn <HTMLCanvasElement> this._imageCanvas;\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tif (this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tif(this._imageCanvas) {\n\t\t\tthis._imageCanvas.width = width;\n\t\t\tthis._imageCanvas.height = height;\n\t\t}\n\t\t\n\t\tsuper._setSize(width, height);\n\n\t\tif (this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n}\n\nexport = BitmapImage2D;",
    "class BitmapImageChannel\n{\n\tpublic static ALPHA:number /*uint*/ = 8;\n\tpublic static BLUE:number /*uint*/ = 4;\n\tpublic static GREEN:number /*uint*/ = 2;\n\tpublic static RED:number /*uint*/ = 1;\n}\n\nexport = BitmapImageChannel;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\n\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapImageCube extends ImageCube\n{\n\tpublic static assetType:string = \"[image BitmapImageCube]\";\n\n\tpublic static posX:number = 0;\n\tpublic static negX:number = 1;\n\tpublic static posY:number = 2;\n\tpublic static negY:number = 3;\n\tpublic static posZ:number = 4;\n\tpublic static negZ:number = 5;\n\n\tprivate _imageCanvas:Array<HTMLCanvasElement> = new Array<HTMLCanvasElement>(6);\n\tprivate _context:Array<CanvasRenderingContext2D> = new Array<CanvasRenderingContext2D>(6);\n\tprivate _imageData:Array<ImageData> = new Array<ImageData>(6);\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImageCube.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(size:number, transparent:boolean = true, fillColor:number = null)\n\t{\n\t\tsuper(size);\n\n\t\tthis._transparent = transparent;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._imageCanvas[i] = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\t\t\tthis._context[i] = this._imageCanvas[i].getContext(\"2d\");\n\n\t\t\tif (fillColor != null)\n\t\t\t\tthis.fillRect(i, new Rectangle(0, 0, size, size), fillColor);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImageCube\n\t{\n\t\tvar t:BitmapImageCube = new BitmapImageCube(this._size, this.transparent);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tt.draw(i, this.getCanvas(i));\n\t\t}\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(side:number, rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar data:Array<number> = this._imageData[side].data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(side:number, sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\n\t\tvar destData:Array<number> = this._imageData[side].data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this._size)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(side:number, source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i] = null;\n\t\t\tthis._imageCanvas[i] = null;\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(side:number, source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(side:number, rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(side:number, x:number, y:number):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(side:number, x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(side:number, rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\t\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\t\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\t\t\tthis._imageData[side].data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(side:number, x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(side:number, x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(side:number, rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0); // at coords 0,0\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData(side:number):ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\treturn this._imageData[side];\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas(side:number):HTMLCanvasElement\n\t{\n\t\treturn this._imageCanvas[side];\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number)\n\t{\n\t\tsuper._setSize(size);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tif (this._locked)\n\t\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0);\n\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\n\t\t\tif (this._locked)\n\t\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t\t}\n\t}\n}\n\nexport = BitmapImageCube;",
    "/**\n * A class that provides constant values for visual blend mode effects. These\n * constants are used in the following:\n * <ul>\n *   <li> The <code>blendMode</code> property of the\n * flash.display.DisplayObject class.</li>\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\n * method of the flash.display.BitmapData class</li>\n * </ul>\n */\nclass BlendMode\n{\n\t/**\n\t * Adds the values of the constituent colors of the display object to the\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\n\t * commonly used for animating a lightening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\n\t */\n\tpublic static ADD:string = \"add\";\n\n\t/**\n\t * Applies the alpha value of each pixel of the display object to the\n\t * background. This requires the <code>blendMode</code> property of the\n\t * parent display object be set to\n\t * <code>away.base.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ALPHA:string = \"alpha\";\n\n\t/**\n\t * Selects the darker of the constituent colors of the display object and the\n\t * colors of the background(the colors with the smaller values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static DARKEN:string = \"darken\";\n\n\t/**\n\t * Compares the constituent colors of the display object with the colors of\n\t * its background, and subtracts the darker of the values of the two\n\t * constituent colors from the lighter value. This setting is commonly used\n\t * for more vibrant colors.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\n\t */\n\tpublic static DIFFERENCE:string = \"difference\";\n\n\t/**\n\t * Erases the background based on the alpha value of the display object. This\n\t * process requires that the <code>blendMode</code> property of the parent\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ERASE:string = \"erase\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the display\n\t * object. If the display object is lighter than 50% gray, the display object\n\t * and background colors are screened, which results in a lighter color. If\n\t * the display object is darker than 50% gray, the colors are multiplied,\n\t * which results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static HARDLIGHT:string = \"hardlight\";\n\n\t/**\n\t * Inverts the background.\n\t */\n\tpublic static INVERT:string = \"invert\";\n\n\t/**\n\t * Forces the creation of a transparency group for the display object. This\n\t * means that the display object is precomposed in a temporary buffer before\n\t * it is processed further. The precomposition is done automatically if the\n\t * display object is precached by means of bitmap caching or if the display\n\t * object is a display object container that has at least one child object\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LAYER:string = \"layer\";\n\n\t/**\n\t * Selects the lighter of the constituent colors of the display object and\n\t * the colors of the background(the colors with the larger values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LIGHTEN:string = \"lighten\";\n\n\t/**\n\t * Multiplies the values of the display object constituent colors by the\n\t * constituent colors of the background color, and normalizes by dividing by\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\n\t * shadows and depth effects.\n\t *\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\n\t * display object and the corresponding color of the pixel in the background\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\n\t * shade than the color of the display object or the color of the\n\t * background.</p>\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * The display object appears in front of the background. Pixel values of the\n\t * display object override the pixel values of the background. Where the\n\t * display object is transparent, the background is visible.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the background.\n\t * If the background is lighter than 50% gray, the display object and\n\t * background colors are screened, which results in a lighter color. If the\n\t * background is darker than 50% gray, the colors are multiplied, which\n\t * results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static OVERLAY:string = \"overlay\";\n\n\t/**\n\t * Multiplies the complement(inverse) of the display object color by the\n\t * complement of the background color, resulting in a bleaching effect. This\n\t * setting is commonly used for highlights or to remove black areas of the\n\t * display object.\n\t */\n\tpublic static SCREEN:string = \"screen\";\n\n\t/**\n\t * Uses a shader to define the blend between objects.\n\t *\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\n\t * automatically sets the display object's <code>blendMode</code> property to\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\n\t * set to <code>BlendMode.SHADER</code> without first setting the\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\n\t * <code>blendShader</code> property is set(which sets the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\n\t * later the value of the <code>blendMode</code> property is changed, the\n\t * blend mode can be reset to use the blend shader simply by setting the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\n\t * <code>blendShader</code> property does not need to be set again except to\n\t * change the shader that's used to define the blend mode.</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static SHADER:string = \"shader\";\n\n\t/**\n\t * Subtracts the values of the constituent colors in the display object from\n\t * the values of the background color, applying a floor of 0. This setting is\n\t * commonly used for animating a darkening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\n\t */\n\tpublic static SUBTRACT:string = \"subtract\";\n}\n\nexport = BlendMode;",
    "import IImageCanvas                = require(\"awayjs-core/lib/data/IImageCanvas\");\nimport CPURenderingContext2D = require('awayjs-core/lib/data/CPURenderingContext2D');\nimport ImageData = require('awayjs-core/lib/data/ImageData');\n\nclass CPUCanvas implements IImageCanvas {\n    public width:number = 1;\n    public height:number = 1;\n\n    private imageData:ImageData;\n\n    getContext(contextId:string):CanvasRenderingContext2D {\n        return new CPURenderingContext2D(this);\n    }\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset() {\n        if (!this.imageData) {\n            this.imageData = new ImageData(this.width, this.height);\n        }else{\n            this.imageData.width = this.width;\n            this.imageData.height = this.height;\n\n            if(this.imageData.data) {\n                this.imageData.data.length = 0;\n                this.imageData.data = null;\n            }\n            this.imageData.data = new Uint8Array(this.width*this.height*4);\n        }\n\n        for (var i:number = 0; i < this.width * this.height * 4; i += 4) {\n            this.imageData.data[i] = 255;\n            this.imageData.data[i + 1] = 255;\n            this.imageData.data[i + 2] = 255;\n            this.imageData.data[i + 3] = 255;\n        }\n    }\n\n    public getImageData():ImageData {\n        if (this.imageData.width != this.width || this.imageData.height != this.height) {\n            this.reset();\n        }\n        return this.imageData;\n    }\n\n\n}\nexport = CPUCanvas;",
    "import ImageData = require('awayjs-core/lib/data/ImageData');\nimport CPUCanvas = require('awayjs-core/lib/data/CPUCanvas');\nimport BitmapImage2D = require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix = require(\"awayjs-core/lib/geom/Matrix\");\nimport Point = require(\"awayjs-core/lib/geom/Point\");\n\n//TODO: implement all methods\nclass CPURenderingContext2D implements CanvasRenderingContext2D {\n    public miterLimit:number;\n    public font:string;\n    public globalCompositeOperation:string;\n    public msFillRule:string;\n    public lineCap:string;\n    public msImageSmoothingEnabled:boolean;\n    public lineDashOffset:number;\n    public shadowColor:string;\n    public lineJoin:string;\n    public shadowOffsetX:number;\n    public lineWidth:number;\n    public canvas:HTMLCanvasElement;\n    public strokeStyle:any;\n    public globalAlpha:number;\n    public shadowOffsetY:number;\n    public fillStyle:any;\n    public shadowBlur:number;\n    public textAlign:string;\n    public textBaseline:string;\n\n    public cpuCanvas:CPUCanvas;\n\n    private matrix:Matrix;\n\n    constructor(cpuCanvas:CPUCanvas) {\n        this.cpuCanvas = cpuCanvas;\n    }\n\n    public restore():void {\n        this.matrix = null;\n    }\n\n    public setTransform(m11:number, m12:number, m21:number, m22:number, dx:number, dy:number):void {\n        this.matrix = new Matrix(m11, m12, m21, m22, dx, dy);\n    }\n\n    public save():void {\n    }\n\n    public arc(x:number, y:number, radius:number, startAngle:number, endAngle:number, anticlockwise:boolean):void {\n    }\n\n    public measureText(text:string):TextMetrics {\n        return undefined;\n    }\n\n    public isPointInPath(x:number, y:number, fillRule:string):boolean {\n        return undefined;\n    }\n\n    public quadraticCurveTo(cpx:number, cpy:number, x:number, y:number):void {\n    }\n\n    public putImageData(imagedata:ImageData, dx:number, dy:number, dirtyX:number, dirtyY:number, dirtyWidth:number, dirtyHeight:number):void {\n    }\n\n    public rotate(angle:number):void {\n    }\n\n    public fillText(text:string, x:number, y:number, maxWidth:number):void {\n    }\n\n    public translate(x:number, y:number):void {\n    }\n\n    public scale(x:number, y:number):void {\n    }\n\n    public createRadialGradient(x0:number, y0:number, r0:number, x1:number, y1:number, r1:number):CanvasGradient {\n        return undefined;\n    }\n\n    public lineTo(x:number, y:number):void {\n    }\n\n    public getLineDash():number[] {\n        return undefined;\n    }\n\n    public fill(fillRule:string):void {\n    }\n\n    public createImageData(imageDataOrSw:any, sh:number):ImageData {\n        return undefined;\n    }\n\n    public createPattern(image:HTMLElement, repetition:string):CanvasPattern {\n        return undefined;\n    }\n\n    public closePath():void {\n    }\n\n    public rect(x:number, y:number, w:number, h:number):void {\n    }\n\n    public clip(fillRule:string):void {\n    }\n\n    public clearRect(x:number, y:number, w:number, h:number):void {\n        var imageData:ImageData = this.cpuCanvas.getImageData();\n        for (var i:number = x; i < x + w; i++) {\n            for (var j:number = y; j < y + h; j++) {\n\n                var index:number = (i + j * imageData.width) * 4;\n                imageData.data[index] = 0;\n                imageData.data[index + 1] = 0;\n                imageData.data[index + 2] = 0;\n                imageData.data[index + 3] = 0;\n            }\n        }\n    }\n\n    public moveTo(x:number, y:number):void {\n    }\n\n    public getImageData(sx:number, sy:number, sw:number, sh:number):ImageData {\n        //var result:ImageData = new ImageData(sw, sh);\n        //var i:number = 0;\n        //\n        //for (i = 0; i < sw * sh * 4; i += 4) {\n        //    result.data[i] = 255;\n        //    result.data[i + 1] = 255;\n        //    result.data[i + 2] = 255;\n        //    result.data[i + 3] = 255;\n        //}\n        //\n        //var imageData:ImageData = this.cpuCanvas.getImageData();\n        //for (i = sx; i < sx + sw; i++) {\n        //    for (var j:number = sy; j < sy + sh; j++) {\n        //        this.copyPixel32(result, i - sx, i - sy, imageData, i, j);\n        //    }\n        //}\n        return this.cpuCanvas.getImageData();\n    }\n\n    private point:Point = new Point();\n    private point2:Point = new Point();\n\n    private applyPixel32(target:ImageData, x:number, y:number, color:number[]) {\n        //todo: blending support\n\n        x = Math.floor(x);\n        y = Math.floor(y);\n\n        if (x < 0 || x >= target.width || y >= target.height || y < 0) return;\n        var index:number = (x + y * target.width) * 4;\n        //var alpha:number = color[3] / 255;\n        target.data[index] += color[0];\n        target.data[index + 1] += color[1];\n        target.data[index + 2] += color[2];\n        target.data[index + 3] += color[3];\n\n        //target.data[index] = color[0];\n        //target.data[index + 1] = color[1];\n        //target.data[index + 2] = color[2];\n        //target.data[index + 3] = color[3];\n\n        target.data[index] = target.data[index] & 0xFF;\n        target.data[index + 1] = target.data[index + 1] & 0xFF;\n        target.data[index + 2] = target.data[index + 2] & 0xFF;\n        target.data[index + 3] = target.data[index + 3] & 0xFF;\n    }\n\n    private copyPixel32(target:ImageData, x:number, y:number, source:ImageData, fromX:number, fromY:number) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n        fromX = Math.floor(fromX);\n        fromY = Math.floor(fromY);\n\n        if (x < 0 || x >= target.width || y >= target.height || y < 0) return;\n        if (fromX < 0 || fromX >= source.width || fromY >= source.height || fromY < 0) return;\n        var index:number = (x + y * target.width) * 4;\n        var fromIndex:number = (fromX + fromY * source.width) * 4;\n        target.data[index] = source.data[fromIndex];\n        target.data[index + 1] = source.data[fromIndex + 1];\n        target.data[index + 2] = source.data[fromIndex + 2];\n        target.data[index + 3] = source.data[fromIndex + 3];\n    }\n\n    private parsedFillStyle:string;\n    private parsedA:number;\n    private parsedR:number;\n    private parsedG:number;\n    private parsedB:number;\n\n    public fillRect(x:number, y:number, w:number, h:number):void {\n        if (this.fillStyle) {\n            if (this.parsedFillStyle != this.fillStyle) {\n                var colorStrings:string[] = this.fillStyle.substring(5, this.fillStyle.lastIndexOf(\")\")).split(\",\");\n                this.parsedA = parseFloat(colorStrings[3]) * 255;\n                this.parsedR = parseInt(colorStrings[0]);\n                this.parsedG = parseInt(colorStrings[1]);\n                this.parsedB = parseInt(colorStrings[2]);\n                this.parsedFillStyle = this.fillStyle;\n            }\n\n            var imageData:ImageData = this.cpuCanvas.getImageData();\n            for (var i:number = x; i < x + w; i++) {\n                for (var j:number = y; j < y + h; j++) {\n\n                    var index:number = (i + j * imageData.width) * 4;\n                    imageData.data[index] = this.parsedR;\n                    imageData.data[index + 1] = this.parsedG;\n                    imageData.data[index + 2] = this.parsedB;\n                    imageData.data[index + 3] = this.parsedA;\n                }\n            }\n        }\n    }\n\n    public bezierCurveTo(cp1x:number, cp1y:number, cp2x:number, cp2y:number, x:number, y:number):void {\n    }\n\n    public drawImage(image:HTMLElement, offsetX:number, offsetY:number, width:number, height:number, canvasOffsetX:number, canvasOffsetY:number, canvasImageWidth:number, canvasImageHeight:number):void {\n        var b:any = image;\n        if (image.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\n            var bitmap:BitmapImage2D = <BitmapImage2D> b;\n            bitmap.lock();\n\n            this.drawBitmap(bitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n\n            bitmap.unlock();\n        } else if (image.constructor.toString().indexOf(\"HTMLImage\") > -1) {\n            var htmlImage:HTMLImageElement = <HTMLImageElement> image;\n            var htmlCanvas:HTMLCanvasElement = <HTMLCanvasElement> document.createElement(\"canvas\");\n            htmlCanvas.width = htmlImage.width;\n            htmlCanvas.height = htmlImage.height;\n            var htmlContext:CanvasRenderingContext2D = htmlCanvas.getContext(\"2d\");\n            htmlContext.drawImage(htmlImage, 0, 0);\n            var htmlImageData:ImageData = htmlContext.getImageData(0, 0, htmlImage.width, htmlImage.height);\n\n            var resultBitmap:BitmapImage2D = new BitmapImage2D(htmlImage.width, htmlImage.height, true, 0, false);\n            resultBitmap.getImageData().data = htmlImageData.data;\n            var passBitmap:any = resultBitmap;\n            this.drawImage(passBitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n        } else if (image.constructor.toString().indexOf(\"CPUCanvas\") > -1) {\n            //\n            var canvas:CPUCanvas = <CPUCanvas> b;\n            this.drawBitmap(canvas, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n            //\n            //if (!width || width == 0) {\n            //    width = canvas.width;\n            //    height = canvas.height;\n            //}\n            //\n            //var sourceData:ImageData = canvas.getImageData();\n            //var scaleX:number = width / sourceData.width;\n            //var scaleY:number = height / sourceData.height;\n            //\n            //var imageData:ImageData = this.cpuCanvas.getImageData();\n            //for (var i:number = offsetX; i < offsetX + width; i++) {\n            //    for (var j:number = offsetY; j < offsetY + height; j++) {\n            //        this.copyPixel32(imageData, i, j, sourceData, (i - offsetX) * scaleX, (j - offsetY) * scaleY);\n            //    }\n            //}\n        }\n    }\n\n    private drawBitmap(bitmap:any, offsetX:number, offsetY:number, width:number, height:number, canvasOffsetX:number, canvasOffsetY:number, canvasImageWidth:number, canvasImageHeight:number) {\n        if (!width || width == 0) {\n            width = bitmap.width;\n            height = bitmap.height;\n        }\n\n        if (!canvasOffsetX || canvasOffsetX == 0) {\n            canvasOffsetX = 0;\n            canvasOffsetY = 0;\n        }\n\n        if (!canvasImageWidth || canvasImageWidth == 0 || this.matrix) { //todo: if matrix? should we reset canvasImageWidth\n            canvasImageWidth = width;\n            canvasImageHeight = height;\n        }\n\n        //console.log(\"CPURenderingContext2D:drawBitmap(width: \" + width + \" height: \" + height + \" canvasImageWidth: \" + canvasImageWidth + \" canvasImageHeight: \" + canvasImageHeight);\n\n        var sourceData:ImageData = bitmap.getImageData();\n        var canvasImageData:ImageData = this.cpuCanvas.getImageData();\n\n        if (this.matrix || (canvasImageWidth != width || canvasImageHeight != height)) {\n            var matrix:Matrix = this.matrix;\n            if (!matrix) {\n                matrix = new Matrix();\n                matrix.scale(canvasImageWidth / width, canvasImageHeight / height);\n            }\n\n            var scaleX:number = Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b);\n            var scaleY:number = Math.sqrt(matrix.c * matrix.c + matrix.d * matrix.d);\n\n            canvasImageWidth = width * scaleX;\n            canvasImageHeight = height * scaleY;\n\n            matrix.tx += canvasOffsetX;\n            matrix.ty += canvasOffsetY;\n\n            canvasOffsetX = Math.floor(matrix.tx);\n            canvasOffsetY = Math.floor(matrix.ty);\n\n            matrix.invert();\n\n            if (scaleX >= 1 || scaleY >= 1) {\n                var p:Point = new Point();\n                for (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                    for (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                        p.x = i;\n                        p.y = j;\n                        p = matrix.transformPoint(p);\n\n                        var color:number[] = CPURenderingContext2D.sampleBilinear(p.x, p.y, sourceData);\n                        this.applyPixel32(canvasImageData, i, j, color);\n                    }\n                }\n            } else {\n                //decimate\n                var p1:Point = this.point;\n                var p2:Point = this.point2;\n                for (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                    for (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                        p1.x = i;\n                        p1.y = j;\n                        p1 = matrix.transformPoint(p1);\n\n                        p2.x = i + 1;\n                        p2.y = j + 1;\n                        p2 = matrix.transformPoint(p2);\n\n                        var color:number[] = CPURenderingContext2D.sampleBox(p1.x + offsetX, p1.y + offsetY, p2.x + offsetX, p2.y + offsetY, sourceData);\n                        this.applyPixel32(canvasImageData, i, j, color);\n                    }\n                }\n            }\n\n            matrix.invert();\n        } else {\n            for (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                for (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                    var color:number[] = CPURenderingContext2D.sample(i - canvasOffsetX + offsetX, j - canvasOffsetY + offsetY, sourceData);\n                    this.applyPixel32(canvasImageData, i, j, color);\n                }\n            }\n        }\n    }\n\n    public transform(m11:number, m12:number, m21:number, m22:number, dx:number, dy:number):void {\n    }\n\n    public stroke():void {\n    }\n\n    public strokeRect(x:number, y:number, w:number, h:number):void {\n    }\n\n    public setLineDash(segments:number[]):void {\n    }\n\n    public strokeText(text:string, x:number, y:number, maxWidth:number):void {\n    }\n\n    public beginPath():void {\n    }\n\n    public arcTo(x1:number, y1:number, x2:number, y2:number, radius:number):void {\n    }\n\n    public createLinearGradient(x0:number, y0:number, x1:number, y1:number):CanvasGradient {\n        return undefined;\n    }\n\n    private static sampleBilinear(u:number, v:number, texture:ImageData, texelSizeX:number = 1, texelSizeY:number = 1):number[] {\n        var color00:number[] = CPURenderingContext2D.sample(u, v, texture);\n        var color10:number[] = CPURenderingContext2D.sample(u + texelSizeX, v, texture);\n        var color01:number[] = CPURenderingContext2D.sample(u, v + texelSizeY, texture);\n        var color11:number[] = CPURenderingContext2D.sample(u + texelSizeX, v + texelSizeY, texture);\n\n        var a:number = u;\n        a = a - Math.floor(a);\n\n        var interColor0:number[] = CPURenderingContext2D.interpolateColor(color00, color10, a);\n        var interColor1:number[] = CPURenderingContext2D.interpolateColor(color01, color11, a);\n\n        var b:number = v;\n        b = b - Math.floor(b);\n        return CPURenderingContext2D.interpolateColor(interColor0, interColor1, b);\n    }\n\n    private static sample(u:number, v:number, imageData:ImageData):number[] {\n        u = Math.floor(u);\n        v = Math.floor(v);\n\n        var result:number[] = [0, 0, 0, 0];\n\n        if (u < 0 || u >= imageData.width || v < 0 || v >= imageData.height) {\n            return result;\n        }\n\n        var index:number = (u + v * imageData.width) * 4;\n        result[0] = imageData.data[index];\n        result[1] = imageData.data[index + 1];\n        result[2] = imageData.data[index + 2];\n        result[3] = imageData.data[index + 3];\n        return result;\n    }\n\n    private static sampleBox(x0:number, y0:number, x1:number, y1:number, texture:ImageData):number[] {\n        var area:number = 0;// -- total area accumulated in pixels\n        var result:number[] = [0, 0, 0, 0];\n        var x:number;\n        var y:number;\n        var xsize:number;\n        var ysize:number;\n\n        var fromY:number = Math.floor(y0);\n        var toY:number = Math.ceil(y1);\n\n        fromY = Math.max(Math.min(fromY, texture.height - 1), 0);\n        toY = Math.max(Math.min(toY, texture.height - 1), 0);\n\n        for (y = fromY; y < toY; y++) {\n            ysize = 1;\n\n            if (y < y0) {\n                ysize = ysize * (1.0 - (y0 - y))\n            }\n\n            if (y > y1) {\n                ysize = ysize * (1.0 - (y - y1))\n            }\n\n            var fromX:number = Math.floor(x0);\n            var toX:number = Math.ceil(x1);\n\n            fromX = Math.max(Math.min(fromX, texture.width - 1), 0);\n            toX = Math.max(Math.min(toX, texture.width - 1), 0);\n\n\n            for (x = fromX; x < toX; x++) {\n                xsize = ysize;\n\n                var color:number[] = CPURenderingContext2D.sample(x, y, texture);\n\n                if (x < x0) {\n                    xsize = xsize * (1.0 - (x0 - x))\n                }\n                if (x > x1) {\n                    xsize = xsize * (1.0 - (x - x1))\n                }\n                result[0] += color[0] * xsize;\n                result[1] += color[1] * xsize;\n                result[2] += color[2] * xsize;\n                result[3] += color[3] * xsize;\n                area = area + xsize\n            }\n        }\n\n        result[0] /= area;\n        result[1] /= area;\n        result[2] /= area;\n        result[3] /= area;\n\n        result[0] = result[0] & 0xFF;\n        result[1] = result[1] & 0xFF;\n        result[2] = result[2] & 0xFF;\n        result[3] = result[3] & 0xFF;\n        return result;\n    }\n\n    private static interpolateColor(source:number[], target:number[], a:number):number[] {\n        var result:number[] = [];\n        result[0] = source[0] + (target[0] - source[0]) * a;\n        result[1] = source[1] + (target[1] - source[1]) * a;\n        result[2] = source[2] + (target[2] - source[2]) * a;\n        result[3] = source[3] + (target[3] - source[3]) * a;\n        return result;\n    }\n\n}\nexport = CPURenderingContext2D;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nclass Image2D extends ImageBase\n{\n\tpublic static assetType:string = \"[image Image2D]\";\n\n\tpublic _rect:Rectangle;\n\n\tprivate _powerOfTwo:boolean = true;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Image2D.assetType;\n\t}\n\n\t/**\n\t * The height of the image in pixels.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._rect.height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._rect.height == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._rect.width, value);\n\t}\n\n\t/**\n\t * The rectangle that defines the size and location of the bitmap image. The\n\t * top and left of the rectangle are 0; the width and height are equal to the\n\t * width and height in pixels of the BitmapData object.\n\t */\n\tpublic get rect():Rectangle\n\t{\n\t\treturn this._rect;\n\t}\n\n\t/**\n\t * The width of the bitmap image in pixels.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._rect.width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._rect.width == value)\n\t\t\treturn;\n\n\t\tthis._setSize(value, this._rect.height);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(width:number, height:number, powerOfTwo:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._rect = new Rectangle(0, 0, width, height);\n\t\tthis._powerOfTwo = powerOfTwo;\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tif (this._rect.width != width || this._rect.height != height)\n\t\t\tthis.invalidateSize();\n\n\t\tthis._rect.width = width;\n\t\tthis._rect.height = height;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions()\n\t{\n\t\tif (this._powerOfTwo && (!ImageUtils.isDimensionValid(this._rect.width) || !ImageUtils.isDimensionValid(this._rect.height)))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n\n\t/**\n\t * Enable POT texture size validation\n\t * @returns {boolean}\n\t */\n\tpublic get powerOfTwo():boolean {\n\t\treturn this._powerOfTwo;\n\t}\n\n\tpublic set powerOfTwo(value:boolean) {\n\t\tif(this._powerOfTwo == value) return;\n\t\tthis._powerOfTwo = value;\n\t\tthis._testDimensions();\n\t}\n\n\tpublic createSampler():Sampler2D\n\t{\n\t\treturn new Sampler2D();\n\t}\n}\n\nexport = Image2D;",
    "import SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IImageObject\t\t\t\t\t= require(\"awayjs-core/lib/pool/IImageObject\");\n\nclass ImageBase extends AssetBase implements IAsset\n{\n\tprivate _imageObject:Array<IImageObject> = new Array<IImageObject>();\n\n\tpublic _pFormat:string = \"bgra\";\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._imageObject.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._imageObject[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._imageObject.length)\n\t\t\tthis._imageObject[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._imageObject.length)\n\t\t\tthis._imageObject[0].dispose();\n\t}\n\n\n\tpublic _iAddImageObject(ImageObject:IImageObject):IImageObject\n\t{\n\t\tthis._imageObject.push(ImageObject);\n\n\t\treturn ImageObject;\n\t}\n\n\tpublic _iRemoveImageObject(ImageObject:IImageObject):IImageObject\n\t{\n\t\tthis._imageObject.splice(this._imageObject.indexOf(ImageObject), 1);\n\n\t\treturn ImageObject;\n\t}\n\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get format():string\n\t{\n\t\treturn this._pFormat;\n\t}\n\n\tpublic createSampler():SamplerBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ImageBase;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nclass ImageCube extends ImageBase\n{\n\tpublic static assetType:string = \"[image ImageCube]\";\n\n\tpublic _size:number;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn ImageCube.assetType;\n\t}\n\n\t/**\n\t * The size of the cube bitmap in pixels.\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._size);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(size:number)\n\t{\n\t\tsuper();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number)\n\t{\n\t\tif (this._size != size)\n\t\t\tthis.invalidateSize();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions()\n\t{\n\t\tif (!ImageUtils.isDimensionValid(this._size))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n\n\n\tpublic createSampler():SamplerCube\n\t{\n\t\treturn new SamplerCube();\n\t}\n}\n\nexport = ImageCube;",
    "class ImageData {\n    public width: number;\n    public data: any;\n    public height: number;\n\n    constructor(width:number, height:number) {\n        this.width = width;\n        this.height = height;\n        this.data = new Uint8Array(width*height*4);\n    }\n}\nexport = ImageData;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\n/**\n * The Sampler2D class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Sampler2D()</code> constructor.\n *\n * <p>The <code>Sampler2D()</code> constructor allows you to create a Sampler2D\n * object that contains a reference to a Image2D object. After you create a\n * Sampler2D object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Sampler2D object can share its Image2D reference among several Sampler2D\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Sampler2D objects that reference the same Image2D object,\n * multiple texture objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each texture\n * object instance.</p>\n\n */\nclass Sampler2D extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset Sampler2D]\";\n\n\tprivate _imageRect:Rectangle;\n\tprivate _frameRect:Rectangle;\n\tprivate _repeat:boolean;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Sampler2D.assetType;\n\t}\n\n\t/**\n\t * Controls whether or not the Sampler2D object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\t//var pixelSnapping:PixelSnapping;\n\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\n\t/**\n\t *\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get imageRect():Rectangle\n\t{\n\t\treturn this._imageRect;\n\t}\n\tpublic set imageRect(value:Rectangle)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\tpublic set frameRect(value:Rectangle)\n\t{\n\t\tif (this._frameRect == value)\n\t\t\treturn;\n\n\t\tthis._frameRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t * @param image2D\n\t * @param smoothing\n\t */\n\tconstructor(repeat:boolean = false, smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper(smooth, mipmap);\n\n\t\tthis._repeat = repeat;\n\n\t\tthis._updateRect();\n\t}\n\n\tprivate _updateRect()\n\t{\n\t}\n}\n\nexport = Sampler2D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n *\n */\nclass SamplerBase extends AssetBase implements IAsset\n{\n\tprivate _smooth:boolean;\n\tprivate _mipmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._smooth = smooth;\n\t\tthis._mipmap = mipmap;\n\t}\n}\n\nexport = SamplerBase;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\n/**\n * The Bitmap class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Bitmap()</code> constructor.\n *\n * <p>The <code>Bitmap()</code> constructor allows you to create a Bitmap\n * object that contains a reference to a BitmapData object. After you create a\n * Bitmap object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Bitmap object can share its BitmapData reference among several Bitmap\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Bitmap objects that reference the same BitmapData object,\n * multiple texture objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each texture\n * object instance.</p>\n\n */\nclass SamplerCube extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset SamplerCube]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SamplerCube.assetType;\n\t}\n\n\t/**\n\t *\n\t * @param bitmapData\n\t * @param smoothing\n\t */\n\tconstructor(smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper(smooth, mipmap);\n\t}\n}\n\nexport = SamplerCube;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageChannel\t\t= require(\"awayjs-core/lib/data/BitmapImageChannel\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n *\n */\nclass SpecularImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[asset SpecularImage2D]\";\n\n\tprivate _specularSource:BitmapImage2D;\n\tprivate _glossSource:BitmapImage2D;\n\tprivate _output:BitmapImage2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SpecularImage2D.assetType;\n\t}\n\n\tpublic get specularSource():BitmapImage2D\n\t{\n\t\treturn this._specularSource;\n\t}\n\n\tpublic set specularSource(value:BitmapImage2D)\n\t{\n\t\tif (this._specularSource == value)\n\t\t\treturn;\n\n\t\tthis._specularSource = value;\n\n\t\tthis.invalidateContent();\n\n\t\tthis._testSize();\n\t}\n\n\n\tpublic get glossSource():BitmapImage2D\n\t{\n\t\treturn this._glossSource;\n\t}\n\n\tpublic set glossSource(value:BitmapImage2D)\n\t{\n\t\tif (this._glossSource == value)\n\t\t\treturn;\n\n\t\tthis._glossSource = value;\n\n\t\tthis.invalidateContent();\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(specularSource:BitmapImage2D = null, glossSource:BitmapImage2D = null)\n\t{\n\t\tsuper(1, 1);\n\n\t\tthis._specularSource = specularSource;\n\t\tthis._glossSource = glossSource;\n\n\t\tthis._output = new BitmapImage2D(1, 1, false, 0xffffff);\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t * Returns a new SpecularImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new SpecularImage2D object that is identical to the original.\n\t */\n\tpublic clone():SpecularImage2D\n\t{\n\t\treturn new SpecularImage2D(this._specularSource, this._glossSource);\n\t}\n\n\t/**\n\t * Frees memory that is used to store the SpecularImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this SpecularImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>SpecularImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>SpecularImage2D.dispose()</code>, the SpecularImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the SpecularImage2D object. However,\n\t * <code>SpecularImage2D.dispose()</code> does not garbage collect the SpecularImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * SpecularImage2D object is released at the time the SpecularImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._rect = null;\n\n\t\tthis._output.dispose();\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tvar origin:Point = new Point();\n\n\t\tthis._output.fillRect(this._rect, 0xffffff);\n\n\t\tif (this._glossSource)\n\t\t\tthis._output.copyChannel(this._glossSource, this._rect, origin, BitmapImageChannel.GREEN, BitmapImageChannel.GREEN);\n\n\t\tif (this._specularSource)\n\t\t\tthis._output.copyChannel(this._specularSource, this._rect, origin, BitmapImageChannel.RED, BitmapImageChannel.RED);\n\n\t\treturn this._output.getImageData();\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn this._output.getCanvas();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tsuper._setSize(width, height);\n\n\t\tthis._output._setSize(width, height);\n\t}\n\n\tprivate _testSize()\n\t{\n\t\tvar w:number, h:number;\n\n\t\tif (this._specularSource) {\n\t\t\tw = this._specularSource.width;\n\t\t\th = this._specularSource.height;\n\t\t} else if (this._glossSource) {\n\t\t\tw = this._glossSource.width;\n\t\t\th = this._glossSource.height;\n\t\t} else {\n\t\t\tw = 1;\n\t\t\th = 1;\n\t\t}\n\n\t\tif (w != this._output.width && h != this._output.height) {\n\t\t\tthis._output.dispose();\n\t\t\tthis._output = new BitmapImage2D(w, h, false, 0xffffff);\n\t\t}\n\n\t\tthis._setSize(w, h);\n\t}\n}\n\nexport = SpecularImage2D;",
    "import IAudioChannel\t\t\t\t= require(\"awayjs-core/lib/managers/IAudioChannel\");\nimport AudioManager\t\t\t\t= require(\"awayjs-core/lib/managers/AudioManager\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n// TODO: Audio should probably be an interface containing play/stop/seek functionality\nclass WaveAudio extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset WaveAudio]\";\n\n\tprivate _audioChannel:IAudioChannel;\n\tprivate _volume:number = 1;\n\tprivate _buffer:ArrayBuffer;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn WaveAudio.assetType;\n\t}\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tif (this._audioChannel)\n\t\t\tthis._audioChannel.volume = this._volume;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\tif (this._audioChannel)\n\t\t\treturn this._audioChannel.currentTime;\n\n\t\treturn 0;\n\t}\n\n\tpublic get duration():number\n\t{\n\t\tif (this._audioChannel)\n\t\t\treturn this._audioChannel.duration;\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(buffer:ArrayBuffer)\n\t{\n\t\tsuper();\n\n\t\tthis._buffer = buffer;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.stop();\n\t}\n\n\tpublic play(offset:number, loop:boolean = false)\n\t{\n\t\tthis._audioChannel = AudioManager.getChannel(this._buffer.byteLength);\n\n\t\tif (this._audioChannel) {\n\t\t\tthis._audioChannel.volume = this._volume;\n\t\t\tthis._audioChannel.play(this._buffer, offset, loop, this.id);\n\t\t}\n\t}\n\n\tpublic stop()\n\t{\n\t\tif (this._audioChannel)\n\t\t\tthis._audioChannel.stop();\n\n\t\tdelete this._audioChannel;\n\t\tthis._audioChannel = null;\n\t}\n\n\tpublic clone()\n\t{\n\t\tvar newInstance:WaveAudio = new WaveAudio(this._buffer);\n\n\t\tnewInstance.name = this.name;\n\n\t\treturn newInstance;\n\t}\n}\n\nexport = WaveAudio;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass AbstractMethodError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\n\t}\n}\n\nexport = AbstractMethodError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass ArgumentError extends Error\n{\n\t/**\n\t * Create a new ArgumentError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"ArgumentError\", id);\n\t}\n}\n\nexport = ArgumentError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass DocumentError extends Error\n{\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\n\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\n\t{\n\t\tsuper(message, id);\n\t}\n}\n\nexport = DocumentError;",
    "class Error\n{\n\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\n\tprivate _name:string = '';  // Contains the name of the Error object.\n\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\n\t{\n\n\t\tthis._messsage = message;\n\t\tthis._name = name;\n\t\tthis._errorID = id;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get message():string\n\t{\n\n\t\treturn this._messsage;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set message(value:string)\n\t{\n\n\t\tthis._messsage = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get name():string\n\t{\n\n\t\treturn this._name;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set name(value:string)\n\t{\n\n\t\tthis._name = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get errorID():number\n\t{\n\n\t\treturn this._errorID;\n\n\t}\n\n}\n\nexport = Error;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass PartialImplementationError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(dependency:string = '', id:number = 0)\n\t{\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\n\t}\n}\n\nexport = PartialImplementationError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * RangeError is thrown when an index is accessed out of range of the number of\n * available indices on an Array.\n */\nclass RangeError extends Error\n{\n\t/**\n\t * Create a new RangeError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"RangeError\", id);\n\t}\n}\n\nexport = RangeError;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.AssetEvent\n */\nclass AssetEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_RENAME:string = 'assetRename';\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\n\n\t/**\n\t *\n\t */\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\n\n\tprivate _asset:IAsset;\n\tprivate _prevName:string;\n\n\t/**\n\t *\n\t */\n\tconstructor(type:string, asset:IAsset = null, prevName:string = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._asset = asset;\n\t\tthis._prevName = prevName || (this._asset? this._asset.name : null);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get asset():IAsset\n\t{\n\t\treturn this._asset;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetPrevName():string\n\t{\n\t\treturn this._prevName;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new AssetEvent(this.type, this.asset, this.assetPrevName);\n\t}\n}\n\nexport = AssetEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Base class for dispatching events\n*\n* @class away.events.EventDispatcher\n*\n*/\nclass EventDispatcher\n{\n\tprivate listeners:Array<Array<Function>> = new Array<Array<Function>>();\n\tprivate target:any;\n\n\tconstructor(target:any = null)\n\t{\n\t\tthis.target = target || this;\n\t}\n\n\t/**\n\t * Add an event listener\n\t * @method addEventListener\n\t * @param {String} Name of event to add a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tif (this.listeners[ type ] === undefined)\n\t\t\tthis.listeners[ type ] = new Array<Function>();\n\n\t\tif (this.getEventListenerIndex(type, listener) === -1)\n\t\t\tthis.listeners[ type ].push(listener);\n\t}\n\n\t/**\n\t * Remove an event listener\n\t * @method removeEventListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tvar index:number = this.getEventListenerIndex(type, listener);\n\n\t\tif (index !== -1)\n\t\t\tthis.listeners[ type ].splice(index, 1);\n\t}\n\n\t/**\n\t * Dispatch an event\n\t * @method dispatchEvent\n\t * @param {Event} Event to dispatch\n\t */\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\tvar listenerArray:Array<Function> = this.listeners[ event.type ];\n\n\t\tif (listenerArray !== undefined) {\n\t\t\tvar l:number = listenerArray.length;\n\n\t\t\tevent.target = this.target;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tlistenerArray[i](event);\n\t\t}\n\t}\n\n\t/**\n\t * get Event Listener Index in array. Returns -1 if no listener is added\n\t * @method getEventListenerIndex\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tprivate getEventListenerIndex(type:string, listener:Function):number\n\t{\n\t\tif (this.listeners[ type ] !== undefined) {\n\t\t\tvar a:Array<Function> = this.listeners[ type ];\n\t\t\tvar l:number = a.length;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tif (listener == a[i])\n\t\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * check if an object has an event listener assigned to it\n\t * @method hasListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic hasEventListener(type:string, listener?:Function):boolean\n\t{\n\t\tif (listener != null) {\n\t\t\treturn ( this.getEventListenerIndex(type, listener) !== -1 );\n\t\t} else {\n\t\t\tif (this.listeners[ type ] !== undefined)\n\t\t\t\treturn ( this.listeners[ type ].length > 0 );\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = EventDispatcher;",
    "class Event\n{\n\n\tpublic static COMPLETE:string = 'complete';\n\tpublic static OPEN:string = 'open';\n\n\tpublic static ENTER_FRAME:string = 'enterFrame';\n\tpublic static EXIT_FRAME:string = 'exitFrame';\n\n\n\tpublic static RESIZE:string = \"resize\";\n\tpublic static ERROR:string = \"error\";\n\tpublic static CHANGE:string = \"change\";\n\n\t/**\n\t * Type of event\n\t * @property type\n\t * @type String\n\t */\n\tpublic type:string = undefined;\n\n\t/**\n\t * Reference to target object\n\t * @property target\n\t * @type Object\n\t */\n\tpublic target:any = undefined;\n\n\tconstructor(type:string)\n\t{\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new Event(this.type);\n\t}\n}\n\nexport = Event;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.HTTPStatusEvent\n */\nclass HTTPStatusEvent extends Event\n{\n\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\n\n\tpublic status:number;\n\n\tconstructor(type:string, status:number = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis.status = status;\n\n\t}\n}\n\nexport = HTTPStatusEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass IOErrorEvent extends Event\n{\n\n\tpublic static IO_ERROR:string = \"ioError\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = IOErrorEvent;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LoaderEvent extends Event\n{\n\t/**\n\t * Dispatched when a resource and all of its dependencies is retrieved.\n\t */\n\tpublic static RESOURCE_COMPLETE:string = \"resourceComplete\";\n\n\tprivate _url:string;\n\tprivate _content:IAsset;\n\tprivate _assets:IAsset[];\n\n\t/**\n\t * Create a new LoaderEvent object.\n\t *\n\t * @param type The event type.\n\t * @param url The url of the loaded resource.\n\t * @param assets The assets of the loaded resource.\n\t */\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._url = url;\n\t\tthis._content = content;\n\t\tthis._assets = assets;\n\t}\n\n\t/**\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\n\t */\n\tpublic get content():IAsset\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The url of the loaded resource.\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t * The error string on loadError.\n\t */\n\tpublic get assets():IAsset[]\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new LoaderEvent(this.type, this._url, this._content, this._assets);\n\t}\n}\n\nexport = LoaderEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ParserEvent extends Event\n{\n\tprivate _message:string;\n\n\t/**\n\t * Dispatched when parsing of an asset completed.\n\t */\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\n\n\t/**\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\n\t * incorrectly formatted.)\n\t */\n\tpublic static PARSE_ERROR:string = 'parseError';\n\n\n\t/**\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\n\t * This is an internal event that should rarely (if ever) be listened for by\n\t * external classes.\n\t */\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\n\n\n\tconstructor(type:string, message:string = '')\n\t{\n\t\tsuper(type);\n\n\t\tthis._message = message;\n\t}\n\n\n\t/**\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\n\t */\n\tpublic get message():string\n\t{\n\t\treturn this._message;\n\t}\n\n\n\tpublic clone():Event\n\t{\n\t\treturn new ParserEvent(this.type, this.message);\n\t}\n}\n\nexport = ParserEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ProgressEvent extends Event\n{\n\tpublic static PROGRESS:string = \"progress\";\n\n\tpublic bytesLoaded:number;\n\n\tpublic bytesTotal:number;\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = ProgressEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionEvent extends Event\n{\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\n\n\tprivate _projection:IProjection;\n\n\tconstructor(type:string, projection:IProjection)\n\t{\n\t\tsuper(type);\n\t\tthis._projection = projection;\n\t}\n\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n}\n\nexport = ProjectionEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass TimerEvent extends Event\n{\n\n\tpublic static TIMER:string = \"timer\";\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = TimerEvent",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Box object is an area defined by its position, as indicated by its\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\n * height and depth.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n * <code>height</code> <code>depth</code> properties of the Box class are\n * independent of each other; changing the value of one property has no effect\n * on the others. However, the <code>right</code>, <code>bottom</code> and\n * <code>back</code> properties are integrally related to those six\n * properties. For example, if you change the value of the <code>right</code>\n * property, the value of the <code>width</code> property changes; if you\n * change the <code>bottom</code> property, the value of the\n * <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Box objects:</p>\n *\n * <ul>\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\n * </ul>\n *\n * <p>You can use the <code>new Box()</code> constructor to create a\n * Box object.</p>\n *\n * <p><b>Note:</b> The Box class does not define a cubic Shape\n * display object.\n */\nclass Box\n{\n\tprivate _size:Vector3D;\n\tprivate _bottomRightBack:Vector3D;\n\tprivate _topLeftFront:Vector3D;\n\n\t/**\n\t * The height of the box, in pixels. Changing the <code>height</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the box, in pixels. Changing the <code>width</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic depth:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>x</code> property of a Box object has no\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>y</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>z</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>z</code> property is equal to the value of the\n\t * <code>front</code> property.</p>\n\t */\n\tpublic z:number\n\n\t/**\n\t * The sum of the <code>z</code> and <code>height</code> properties.\n\t */\n\tpublic get back():number\n\t{\n\t\treturn this.z + this.depth;\n\t}\n\n\tpublic set back(val:number)\n\t{\n\t\tthis.depth = val - this.z;\n\t}\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\tpublic set bottom(val:number)\n\t{\n\t\tthis.height = val - this.y;\n\t}\n\n\t/**\n\t * The location of the Box object's bottom-right corner, determined by the\n\t * values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRightBack():Vector3D\n\t{\n\t\tif (this._bottomRightBack == null)\n\t\t\tthis._bottomRightBack = new Vector3D();\n\n\t\tthis._bottomRightBack.x = this.x + this.width;\n\t\tthis._bottomRightBack.y = this.y + this.height;\n\t\tthis._bottomRightBack.z = this.z + this.depth;\n\n\t\treturn this._bottomRightBack;\n\t}\n\n\t/**\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>front</code> property of a Box object has no effect on the\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\n\t * properties. However it does affect the <code>depth</code> property,\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\n\t * <code>depth</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get front():number\n\t{\n\t\treturn this.z;\n\t}\n\n\tpublic set front(val:number)\n\t{\n\t\tthis.depth += this.z - val;\n\t\tthis.z = val;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\n\t * <code>left</code> property of a Box object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\tpublic set left(val:number)\n\t{\n\t\tthis.width += this.x - val;\n\t\tthis.x = val;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\tpublic set right(val:number)\n\t{\n\t\tthis.width = val - this.x;\n\t}\n\n\t/**\n\t * The size of the Box object, expressed as a Vector3D object with the\n\t * values of the <code>width</code>, <code>height</code> and\n\t * <code>depth</code> properties.\n\t */\n\tpublic get size():Vector3D\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Vector3D();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\t\tthis._size.z = this.depth;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>top</code> property of a Box object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\tpublic set top(val:number)\n\t{\n\t\tthis.height += (this.y - val);\n\t\tthis.y = val;\n\t}\n\n\t/**\n\t * The location of the Box object's top-left-front corner, determined by the\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\n\t */\n\tpublic get topLeftFront():Vector3D\n\t{\n\t\tif (this._topLeftFront == null)\n\t\t\tthis._topLeftFront = new Vector3D();\n\n\t\tthis._topLeftFront.x = this.x;\n\t\tthis._topLeftFront.y = this.y;\n\t\tthis._topLeftFront.z = this.z;\n\n\t\treturn this._topLeftFront;\n\t}\n\n\t/**\n\t * Creates a new Box object with the top-left-front corner specified by the\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\n\t * parameters. If you call this public without parameters, a box with\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param width  The width of the box, in pixels.\n\t * @param height The height of the box, in pixels.\n\t * @param depth The depth of the box, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = depth;\n\t}\n\n\t/**\n\t * Returns a new Box object with the same values for the <code>x</code>,\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\n\t * and <code>depth</code> properties as the original Box object.\n\t *\n\t * @return A new Box object with the same values for the <code>x</code>,\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\n\t *         <code>height</code> and <code>depth</code> properties as the\n\t *         original Box object.\n\t */\n\tpublic clone():Box\n\t{\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number, z:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object. This method is similar to the\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\n\t * object as a parameter.\n\t *\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\n\t *                 <i>z</i> coordinates.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\n\t}\n\n\t/**\n\t * Determines whether the Box object specified by the <code>box</code>\n\t * parameter is contained within this Box object. A Box object is said to\n\t * contain another if the second Box object falls entirely within the\n\t * boundaries of the first.\n\t *\n\t * @param box The Box object being checked.\n\t * @return A value of <code>true</code> if the Box object that you specify\n\t *         is contained by this Box object; otherwise <code>false</code>.\n\t */\n\tpublic containsBox(box:Box):boolean\n\t{\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\n\t}\n\n\t/**\n\t * Copies all of box data from the source Box object into the calling\n\t * Box object.\n\t *\n\t * @param sourceBox The Box object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceBox:Box)\n\t{\n\t\tthis.x = sourceBox.x;\n\t\tthis.y = sourceBox.y;\n\t\tthis.z = sourceBox.z;\n\t\tthis.width = sourceBox.width;\n\t\tthis.height = sourceBox.height;\n\t\tthis.depth = sourceBox.depth;\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Box object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties of an object against\n\t * the same properties of this Box object.\n\t *\n\t * @param toCompare The box to compare to this Box object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\n\t *         properties as this Box object; otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Box):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\n\t}\n\n\t/**\n\t * Increases the size of the Box object by the specified amounts, in\n\t * pixels. The center point of the Box object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, to\n\t * the top and the bottom by the <code>dy</code> value, and to\n\t * the front and the back by the <code>dz</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the box:\n\t * @param dy The value to be added to the top and the bottom of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           height and position of the box:\n\t * @param dz The value to be added to the front and the back of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           depth and position of the box:\n\t */\n\tpublic inflate(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.z -= dz/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t\tthis.depth += dz/2;\n\t}\n\n\t/**\n\t * Increases the size of the Box object. This method is similar to the\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\n\t *              increase the horizontal dimension of the Box object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Box object.\n\t *              The <code>z</code> property is used to increase the\n\t *              longitudinal dimension of the Box object.\n\t */\n\tpublic inflatePoint(delta:Vector3D)\n\t{\n\t\tthis.x -= delta.x/2;\n\t\tthis.y -= delta.y/2;\n\t\tthis.z -= delta.z/2;\n\t\tthis.width += delta.x/2;\n\t\tthis.height += delta.y/2;\n\t\tthis.depth += delta.z/2;\n\t}\n\n\t/**\n\t * If the Box object specified in the <code>toIntersect</code> parameter\n\t * intersects with this Box object, returns the area of intersection\n\t * as a Box object. If the boxes do not intersect, this method returns an\n\t * empty Box object with its properties set to 0.\n\t *\n\t * @param toIntersect The Box object to compare against to see if it\n\t *                    intersects with this Box object.\n\t * @return A Box object that equals the area of intersection. If the\n\t *         boxes do not intersect, this method returns an empty Box\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\n\t *         <code>depth</code> properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Box):Box\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Box = new Box();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\n\t\t\tif (this.z > toIntersect.z) {\n\t\t\t\ti.z = this.z;\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\n\n\t\t\t\tif (i.depth > this.depth)\n\t\t\t\t\ti.depth = this.depth;\n\t\t\t} else {\n\t\t\t\ti.z = toIntersect.z;\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\n\n\t\t\t\tif (i.depth > toIntersect.depth)\n\t\t\t\t\ti.depth = toIntersect.depth;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Box();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Box object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code>, and <code>depth</code> properties of the specified\n\t * Box object to see if it intersects with this Box object.\n\t *\n\t * @param toIntersect The Box object to compare against this Box object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Box object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Box):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar halfExtentsX:number = this.width/2;\n\t\tvar halfExtentsY:number = this.height/2;\n\t\tvar halfExtentsZ:number = this.depth/2;\n\n\t\tvar centerX:number = this.x + halfExtentsX;\n\t\tvar centerY:number = this.y + halfExtentsY;\n\t\tvar centerZ:number = this.z + halfExtentsZ;\n\n\t\tvar px:number = position.x - centerX;\n\t\tvar py:number = position.y - centerY;\n\t\tvar pz:number = position.z - centerZ;\n\n\t\tvar vx:number = direction.x\n\t\tvar vy:number = direction.y\n\t\tvar vz:number = direction.z;\n\n\t\tvar ix:number;\n\t\tvar iy:number;\n\t\tvar iz:number;\n\t\tvar rayEntryDistance:number;\n\n\t\t// ray-plane tests\n\t\tvar intersects:boolean;\n\t\tif (vx < 0) {\n\t\t\trayEntryDistance = ( halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vx > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = -1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy < 0) {\n\t\t\trayEntryDistance = ( halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = -1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz < 0) {\n\t\t\trayEntryDistance = ( halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = -1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn intersects? rayEntryDistance : -1;\n\t}\n\n\t/**\n\t * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\n\t *\n\t * @param point The point for which to find the closest point on the Box\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\n\t * @return\n\t */\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar p:number;\n\n\t\tif (target == null)\n\t\t\ttarget = new Vector3D();\n\n\t\tp = point.x;\n\t\tif (p < this.x)\n\t\t\tp = this.x;\n\t\tif (p > this.x + this.width)\n\t\t\tp = this.x + this.width;\n\t\ttarget.x = p;\n\n\t\tp = point.y;\n\t\tif (p < this.y + this.height)\n\t\t\tp = this.y + this.height;\n\t\tif (p > this.y)\n\t\t\tp = this.y;\n\t\ttarget.y = p;\n\n\t\tp = point.z;\n\t\tif (p < this.z)\n\t\t\tp = this.z;\n\t\tif (p > this.z + this.depth)\n\t\t\tp = this.z + this.depth;\n\t\ttarget.z = p;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Determines whether or not this Box object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Box object's width, height or\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object, as determined by its\n\t * top-left-front corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object using a Vector3D object as a\n\t * parameter. This method is similar to the <code>Box.offset()</code>\n\t * method, except that it takes a Vector3D object as a parameter.\n\t *\n\t * @param position A Vector3D object to use to offset this Box object.\n\t */\n\tpublic offsetPosition(position:Vector3D)\n\t{\n\t\tthis.x += position.x;\n\t\tthis.y += position.y;\n\t\tthis.z += position.z;\n\t}\n\n\t/**\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\n\t * width, height or depth is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\n\t * <code>depth</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.depth = 0;\n\t}\n\n\t/**\n\t * Sets the members of Box to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param widtha  The width of the box, in pixels.\n\t * @param heighta The height of the box, in pixels.\n\t * @param deptha  The depth of the box, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t\tthis.depth = deptha;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal, vertical and\n\t * longitudinal positions and the width, height and depth of the Box object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\n\t}\n\n\t/**\n\t * Adds two boxes together to create a new Box object, by filling\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\n\t *\n\t * @param toUnion A Box object to add to this Box object.\n\t * @return A new Box object that is the union of the two boxes.\n\t */\n\tpublic union(toUnion:Box):Box\n\t{\n\t\tvar u:Box = new Box();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\tif (this.z < toUnion.z) {\n\t\t\tu.z = this.z;\n\t\t\tu.depth = toUnion.z - this.z + toUnion.depth;\n\n\t\t\tif (u.depth < this.depth)\n\t\t\t\tu.depth = this.depth;\n\t\t} else {\n\t\t\tu.z = toUnion.z;\n\t\t\tu.depth = this.z - toUnion.z + this.depth;\n\n\t\t\tif (u.depth < toUnion.depth)\n\t\t\t\tu.depth = toUnion.depth;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Box;",
    "import ColorUtils\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\n/**\n * The ColorTransform class lets you adjust the color values in a display\n * object. The color adjustment or <i>color transformation</i> can be applied\n * to all four channels: red, green, blue, and alpha transparency.\n *\n * <p>When a ColorTransform object is applied to a display object, a new value\n * for each color channel is calculated like this:</p>\n *\n * <ul>\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\n * <code>redOffset</code></li>\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\n * <code>greenOffset</code></li>\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\n * <code>blueOffset</code></li>\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\n * <code>alphaOffset</code></li>\n * </ul>\n *\n * <p>If any of the color channel values is greater than 255 after the\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\n *\n * <p>You can use ColorTransform objects in the following ways:</p>\n *\n * <ul>\n *   <li>In the <code>colorTransform</code> parameter of the\n * <code>colorTransform()</code> method of the BitmapData class</li>\n *   <li>As the <code>colorTransform</code> property of a Transform object\n * (which can be used as the <code>transform</code> property of a display\n * object)</li>\n * </ul>\n *\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\n * a ColorTransform object before you can call the methods of the\n * ColorTransform object.</p>\n *\n * <p>Color transformations do not apply to the background color of a movie\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\n * that are attached to the movie clip.</p>\n */\nclass ColorTransform\n{\n\t/**\n\t * A decimal value that is multiplied with the alpha transparency channel\n\t * value.\n\t *\n\t * <p>If you set the alpha transparency value of a display object directly by\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\n\t * affects the value of the <code>alphaMultiplier</code> property of that\n\t * display object's <code>transform.colorTransform</code> property.</p>\n\t */\n\tpublic alphaMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the alpha transparency channel\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\n\t * value.\n\t */\n    public alphaOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the blue channel value.\n\t */\n    public blueMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the blue channel value after it\n\t * has been multiplied by the <code>blueMultiplier</code> value.\n\t */\n    public blueOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the green channel value.\n\t */\n    public greenMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the green channel value after\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\n\t */\n    public greenOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the red channel value.\n\t */\n    public redMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the red channel value after it\n\t * has been multiplied by the <code>redMultiplier</code> value.\n\t */\n    public redOffset:number;\n\n\t/**\n\t * The RGB color value for a ColorTransform object.\n\t *\n\t * <p>When you set this property, it changes the three color offset values\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\n\t * multiplier values(<code>redMultiplier</code>,\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\n\t * alpha transparency multiplier and offset values do not change.</p>\n\t *\n\t * <p>When you pass a value for this property, use the format\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\n\t * hexadecimal digits that specify the offset of each color component. The 0x\n\t * tells the ActionScript compiler that the number is a hexadecimal\n\t * value.</p>\n\t */\n\tpublic get color():number\n\t{\n\t\treturn((this.redOffset << 16) | ( this.greenOffset << 8) | this.blueOffset);\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\n\n\t\tthis.redOffset = argb[1];  //(value >> 16) & 0xFF;\n\t\tthis.greenOffset = argb[2];  //(value >> 8) & 0xFF;\n\t\tthis.blueOffset = argb[3];  //value & 0xFF;\n\n\t\tthis.redMultiplier = 0;\n\t\tthis.greenMultiplier = 0;\n\t\tthis.blueMultiplier = 0;\n\t}\n\n\t/**\n\t * Creates a ColorTransform object for a display object with the specified\n\t * color channel values and alpha values.\n\t *\n\t * @param redMultiplier   The value for the red multiplier, in the range from\n\t *                        0 to 1.\n\t * @param greenMultiplier The value for the green multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\n\t *                        the range from 0 to 1.\n\t * @param redOffset       The offset value for the red color channel, in the\n\t *                        range from -255 to 255.\n\t * @param greenOffset     The offset value for the green color channel, in\n\t *                        the range from -255 to 255.\n\t * @param blueOffset      The offset for the blue color channel value, in the\n\t *                        range from -255 to 255.\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\n\t *                        the range from -255 to 255.\n\t */\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\n\t{\n\t\tthis.redMultiplier = redMultiplier;\n\t\tthis.greenMultiplier = greenMultiplier;\n\t\tthis.blueMultiplier = blueMultiplier;\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\t\tthis.redOffset = redOffset;\n\t\tthis.greenOffset = greenOffset;\n\t\tthis.blueOffset = blueOffset;\n\t\tthis.alphaOffset = alphaOffset;\n\t}\n\n    public clear()\n    {\n        this.redMultiplier = 1;\n        this.greenMultiplier = 1;\n        this.blueMultiplier = 1;\n        this.alphaMultiplier = 1;\n        this.redOffset = 0;\n        this.greenOffset = 0;\n        this.blueOffset = 0;\n        this.alphaOffset = 0;\n    }\n\n    public clone():ColorTransform\n    {\n        return new ColorTransform(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n    }\n\n    public copyFrom(source:ColorTransform)\n    {\n        this.redMultiplier = source.redMultiplier;\n        this.greenMultiplier = source.greenMultiplier;\n        this.blueMultiplier = source.blueMultiplier;\n        this.alphaMultiplier = source.alphaMultiplier;\n        this.redOffset = source.redOffset;\n        this.greenOffset = source.greenOffset;\n        this.blueOffset = source.blueOffset;\n        this.alphaOffset = source.alphaOffset;\n    }\n\n    public copyTo(destination:ColorTransform)\n    {\n        destination.copyFrom(this);\n    }\n\n    public prepend(ct:ColorTransform)\n    {\n        this.redOffset += ct.redOffset * this.redMultiplier;\n        this.greenOffset += ct.greenOffset * this.greenMultiplier;\n        this.blueOffset += ct.blueOffset * this.blueMultiplier;\n        this.alphaOffset += ct.alphaOffset * this.alphaMultiplier;\n\n        this.redMultiplier *= ct.redMultiplier;\n        this.greenMultiplier *= ct.greenMultiplier;\n        this.blueMultiplier *= ct.blueMultiplier;\n        this.alphaMultiplier *= ct.alphaMultiplier;\n    }\n}\n\nexport = ColorTransform;",
    "/**\n* MathConsts provides some commonly used mathematical constants\n*/\nclass MathConsts\n{\n\t/**\n\t * The amount to multiply with when converting radians to degrees.\n\t */\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\n\n\t/**\n\t * The amount to multiply with when converting degrees to radians.\n\t */\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\n}\n\nexport = MathConsts;",
    "import Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\n/**\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\n */\nclass Matrix3DUtils\n{\n\t/**\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\n\t */\n\tpublic static RAW_DATA_CONTAINER:Float32Array = new Float32Array(16);\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\n\t *\n\t * @param    quarternion    The quarterion object to convert.\n\t */\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\n\t{\n\t\tvar x:number = quarternion.x;\n\t\tvar y:number = quarternion.y;\n\t\tvar z:number = quarternion.z;\n\t\tvar w:number = quarternion.w;\n\n\t\tvar xx:number = x*x;\n\t\tvar xy:number = x*y;\n\t\tvar xz:number = x*z;\n\t\tvar xw:number = x*w;\n\n\t\tvar yy:number = y*y;\n\t\tvar yz:number = y*z;\n\t\tvar yw:number = y*w;\n\n\t\tvar zz:number = z*z;\n\t\tvar zw:number = z*w;\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\traw[0] = 1 - 2*(yy + zz);\n\t\traw[1] = 2*(xy + zw);\n\t\traw[2] = 2*(xz - yw);\n\t\traw[4] = 2*(xy - zw);\n\t\traw[5] = 1 - 2*(xx + zz);\n\t\traw[6] = 2*(yz + xw);\n\t\traw[8] = 2*(xz + yw);\n\t\traw[9] = 2*(yz - xw);\n\t\traw[10] = 1 - 2*(xx + yy);\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tif (m) {\n\t\t\tm.copyRawDataFrom(raw);\n\t\t\treturn m;\n\t\t} else\n\t\t\treturn new Matrix3D(raw);\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the forward vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The forward vector\n\t */\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(2, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the up vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The up vector\n\t */\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(1, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the right vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The right vector\n\t */\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(0, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\n\t */\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\n\t{\n\t\tvar r1:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar r2:Float32Array = m2.rawData;\n\t\tm1.copyRawDataTo(r1);\n\n\t\tfor (var i:number = 0; i < 16; ++i) {\n\t\t\tif (r1[i] != r2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D)\n\t{\n\t\tvar dirN:Vector3D;\n\t\tvar upN:Vector3D;\n\t\tvar lftN:Vector3D;\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tlftN = dir.crossProduct(up);\n\t\tlftN.normalize();\n\n\t\tupN = lftN.crossProduct(dir);\n\t\tupN.normalize();\n\t\tdirN = dir.clone();\n\t\tdirN.normalize();\n\n\t\traw[0] = lftN.x;\n\t\traw[1] = upN.x;\n\t\traw[2] = -dirN.x;\n\t\traw[3] = 0.0;\n\n\t\traw[4] = lftN.y;\n\t\traw[5] = upN.y;\n\t\traw[6] = -dirN.y;\n\t\traw[7] = 0.0;\n\n\t\traw[8] = lftN.z;\n\t\traw[9] = upN.z;\n\t\traw[10] = -dirN.z;\n\t\traw[11] = 0.0;\n\n\t\traw[12] = -lftN.dotProduct(pos);\n\t\traw[13] = -upN.dotProduct(pos);\n\t\traw[14] = dirN.dotProduct(pos);\n\t\traw[15] = 1.0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target === null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar ab2:number = -2*a*b;\n\t\tvar ac2:number = -2*a*c;\n\t\tvar bc2:number = -2*b*c;\n\t\t// reflection matrix\n\t\trawData[0] = 1 - 2*a*a;\n\t\trawData[4] = ab2;\n\t\trawData[8] = ac2;\n\t\trawData[12] = -2*a*d;\n\t\trawData[1] = ab2;\n\t\trawData[5] = 1 - 2*b*b;\n\t\trawData[9] = bc2;\n\t\trawData[13] = -2*b*d;\n\t\trawData[2] = ac2;\n\t\trawData[6] = bc2;\n\t\trawData[10] = 1 - 2*c*c;\n\t\trawData[14] = -2*c*d;\n\t\trawData[3] = 0;\n\t\trawData[7] = 0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar d:number = raw[12];\n\t\tvar h:number = raw[13];\n\t\tvar l:number = raw[14];\n\t\tvar p:number = raw[15];\n\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z + d;\n\t\tresult.y = e * x + f * y + g * z + h;\n\t\tresult.z = i * x + j * y + k * z + l;\n\t\tresult.w = m * x + n * y + o * z + p;\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z;\n\t\tresult.y = e * x + f * y + g * z;\n\t\tresult.z = i * x + j * y + k * z;\n\t\tresult.w = m * x + n * y + o * z;\n\t\treturn result;\n\t}\n\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif(!result)\n\t\t\tresult = new Vector3D();\n\n\t\ttransform.copyColumnTo(3, result);\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar outIndex:number = 0;\n\t\tvar length:number = vin.length;\n\t\tfor(var index:number = 0; index<length; index+=3) {\n\t\t\tvar x:number = vin[index];\n\t\t\tvar y:number = vin[index+1];\n\t\t\tvar z:number = vin[index+2];\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\n\t\t}\n\t}\n}\n\nexport = Matrix3DUtils;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Orientation3D\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\nclass Matrix3D\n{\n\t/**\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\n\t *\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\n\t * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\n\t */\n\tpublic rawData:Float32Array = new Float32Array(16);\n\n\tprivate static tempMatrix:Matrix3D = new Matrix3D();\n\tprivate static tempRawData:Float32Array = Matrix3D.tempMatrix.rawData;\n\n\tprivate _position:Vector3D;\n\n\tprivate _components:Array<Vector3D>;\n\n\t/**\n\t * Creates a Matrix3D object.\n\t */\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tif (v != null && v.length == 16) {\n\t\t\tthis.copyRawDataFrom(v);\n\t\t} else {\n\t\t\tthis.identity();\n\t\t}\n\t}\n\n\t/**\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\n\t */\n\tpublic append(lhs:Matrix3D)\n\t{\n\t\tvar lrd:Float32Array = lhs.rawData;\n\n\t\tvar m111:number = this.rawData[0];\n\t\tvar m112:number = this.rawData[1];\n\t\tvar m113:number = this.rawData[2];\n\t\tvar m114:number = this.rawData[3];\n\t\tvar m121:number = this.rawData[4];\n\t\tvar m122:number = this.rawData[5];\n\t\tvar m123:number = this.rawData[6];\n\t\tvar m124:number = this.rawData[7];\n\t\tvar m131:number = this.rawData[8];\n\t\tvar m132:number = this.rawData[9];\n\t\tvar m133:number = this.rawData[10];\n\t\tvar m134:number = this.rawData[11];\n\t\tvar m141:number = this.rawData[12];\n\t\tvar m142:number = this.rawData[13];\n\t\tvar m143:number = this.rawData[14];\n\t\tvar m144:number = this.rawData[15];\n\t\tvar m211:number = lrd[0];\n\t\tvar m212:number = lrd[1];\n\t\tvar m213:number = lrd[2];\n\t\tvar m214:number = lrd[3];\n\t\tvar m221:number = lrd[4];\n\t\tvar m222:number = lrd[5];\n\t\tvar m223:number = lrd[6];\n\t\tvar m224:number = lrd[7];\n\t\tvar m231:number = lrd[8];\n\t\tvar m232:number = lrd[9];\n\t\tvar m233:number = lrd[10];\n\t\tvar m234:number = lrd[11];\n\t\tvar m241:number = lrd[12];\n\t\tvar m242:number = lrd[13];\n\t\tvar m243:number = lrd[14];\n\t\tvar m244:number = lrd[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Appends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null )\n\t{\n\t\tthis.append(Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees));\n\t}\n\n\t/**\n\t * Appends an incremental skew change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendSkew(xSkew:number, ySkew:number, zSkew:number)\n\t{\n\t\tif(xSkew == 0 && ySkew == 0 && zSkew == 0) return;\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\traw[0] = 1;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = xSkew;\n\t\traw[5] = 1;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = ySkew;\n\t\traw[9] = zSkew;\n\t\traw[10] = 1;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.append(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\n\t\t\treturn;\n\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = xScale;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = yScale;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = zScale;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.append(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic appendTranslation(x:number, y:number, z:number)\n\t{\n\t\tthis.rawData[12] += x;\n\t\tthis.rawData[13] += y;\n\t\tthis.rawData[14] += z;\n\t}\n\n\t/**\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\n\t */\n\tpublic clone():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.rawData);\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\n\t */\n\tpublic copyFrom(sourceMatrix3D:Matrix3D)\n\t{\n\t\tvar sourceRaw:Float32Array = sourceMatrix3D.rawData;\n\t\tvar len:number = sourceRaw.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = sourceRaw[c];\n\t}\n\n\tpublic copyRawDataFrom(vector:Float32Array, index:number = 0, transpose:boolean = false):void\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = vector.length - index;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = vector[c + index];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\tpublic copyRawDataTo(vector:Float32Array, index:number = 0, transpose:boolean = false)\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = this.rawData.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tvector[c + index ] = this.rawData[c];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies this Matrix3D object into a destination Matrix3D object.\n\t */\n\tpublic copyToMatrix3D(dest:Matrix3D)\n\t{\n\t\tthis.copyRawDataTo(dest.rawData);\n\t}\n\n\t/**\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\n\t */\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\n\t{\n\t\tvar q:Quaternion;\n\n\t\tif (this._components == null)\n\t\t\tthis._components = [new Vector3D(), new Vector3D(), new Vector3D(), new Vector3D()];\n\n\t\tvar colX:Vector3D = new Vector3D(this.rawData[0], this.rawData[1], this.rawData[2]);\n\t\tvar colY:Vector3D = new Vector3D(this.rawData[4], this.rawData[5], this.rawData[6]);\n\t\tvar colZ:Vector3D = new Vector3D(this.rawData[8], this.rawData[9], this.rawData[10]);\n\n\t\tvar pos:Vector3D = this._components[0];\n\t\tpos.x = this.rawData[12];\n\t\tpos.y = this.rawData[13];\n\t\tpos.z = this.rawData[14];\n\n\t\tvar scale:Vector3D = this._components[3];\n\t\tvar skew:Vector3D = this._components[2];\n\n\t\t//compute X scale factor and normalise colX\n\t\tscale.x = colX.length;\n\t\tcolX.scaleBy(1/scale.x);\n\n\t\t//compute XY shear factor and make colY orthogonal to colX\n\t\tskew.x = colX.dotProduct(colY);\n\t\tcolY = Vector3D.combine(colY, colX, 1, -skew.x);\n\n\t\t//compute Y scale factor and normalise colY\n\t\tscale.y = colY.length;\n\t\tcolY.scaleBy(1/scale.y);\n\t\tskew.x /= scale.y;\n\n\t\t//compute XZ and YZ shears and make colZ orthogonal to colX and colY\n\t\tskew.y = colX.dotProduct(colZ);\n\t\tcolZ = Vector3D.combine(colZ, colX, 1, -skew.y);\n\t\tskew.z = colY.dotProduct(colZ);\n\t\tcolZ = Vector3D.combine(colZ, colY, 1, -skew.z);\n\n\t\t//compute Z scale and normalise colZ\n\t\tscale.z = colZ.length;\n\t\tcolZ.scaleBy(1/scale.z);\n\t\tskew.y /= scale.z;\n\t\tskew.z /= scale.z;\n\n\t\t//at this point, the matrix (in cols) is orthonormal\n\t\t//check for a coordinate system flip. If the determinant is -1, negate the z scaling factor\n\t\tif (colX.dotProduct(colY.crossProduct(colZ)) < 0) {\n\t\t\tscale.z = -scale.z;\n\t\t\tcolZ.x = -colZ.x;\n\t\t\tcolZ.y = -colZ.y;\n\t\t\tcolZ.z = -colZ.z;\n\t\t}\n\n\t\tvar rot = this._components[1];\n\n\t\tswitch (orientationStyle) {\n\t\t\tcase Orientation3D.AXIS_ANGLE:\n\n\t\t\t\trot.w = Math.acos((colX.x + colY.y + colZ.z - 1)/2);\n\n\t\t\t\tvar len:number = Math.sqrt((colY.z - colZ.y)*(colY.z - colZ.y) + (colZ.x - colX.z)*(colZ.x - colX.z) + (colX.y - colY.x)*(colX.y - colY.x));\n\t\t\t\trot.x = (colY.z - colZ.y)/len;\n\t\t\t\trot.y = (colZ.x - colX.z)/len;\n\t\t\t\trot.z = (colX.y - colY.x)/len;\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.QUATERNION:\n\n\t\t\t\tvar tr = colX.x + colY.y + colZ.z;\n\n\t\t\t\tif (tr > 0) {\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\n\n\t\t\t\t\trot.x = (colY.z - colZ.y)/(4*rot.w);\n\t\t\t\t\trot.y = (colZ.x - colX.z)/(4*rot.w);\n\t\t\t\t\trot.z = (colX.y - colY.x)/(4*rot.w);\n\t\t\t\t} else if ((colX.x > colY.y) && (colX.x > colZ.z)) {\n\t\t\t\t\trot.x = Math.sqrt(1 + colX.x - colY.y - colZ.z)/2;\n\n\t\t\t\t\trot.w = (colY.z - colZ.y)/(4*rot.x);\n\t\t\t\t\trot.y = (colX.y + colY.x)/(4*rot.x);\n\t\t\t\t\trot.z = (colZ.x + colX.z)/(4*rot.x);\n\t\t\t\t} else if (colY.y > colZ.z) {\n\t\t\t\t\trot.y = Math.sqrt(1 + colY.y - colX.x - colZ.z)/2;\n\n\t\t\t\t\trot.x = (colX.y + colY.x)/(4*rot.y);\n\t\t\t\t\trot.w = (colZ.x - colX.z)/(4*rot.y);\n\t\t\t\t\trot.z = (colY.z + colZ.y)/(4*rot.y);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = Math.sqrt(1 + colZ.z - colX.x - colY.y)/2;\n\n\t\t\t\t\trot.x = (colZ.x + colX.z)/(4*rot.z);\n\t\t\t\t\trot.y = (colY.z + colZ.y)/(4*rot.z);\n\t\t\t\t\trot.w = (colX.y - colY.x)/(4*rot.z);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\n\t\t\t\trot.y = Math.asin(-colX.z);\n\n\t\t\t\t//var cos:number = Math.cos(rot.y);\n\n\t\t\t\tif (colX.z != 1 && colX.z != -1) {\n\t\t\t\t\trot.x = Math.atan2(colY.z, colZ.z);\n\t\t\t\t\trot.z = Math.atan2(colX.y, colX.x);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = 0;\n\t\t\t\t\trot.x = Math.atan2(colY.x, colY.y);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn this._components;\n\t}\n\n\t/**\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\n\t * coordinate to another.\n\t */\n\tpublic deltaTransformVector(v:Vector3D, t:Vector3D = null):Vector3D\n\t{\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\tif (!t)\n\t\t\tt = new Vector3D();\n\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8];\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9];\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10];\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11];\n\n\t\treturn t;\n\t}\n\n\t/**\n\t * Converts the current matrix to an identity or unit matrix.\n\t */\n\tpublic identity()\n\t{\n\t\tthis.rawData[0] = 1;\n\t\tthis.rawData[1] = 0;\n\t\tthis.rawData[2] = 0;\n\t\tthis.rawData[3] = 0;\n\t\tthis.rawData[4] = 0;\n\t\tthis.rawData[5] = 1;\n\t\tthis.rawData[6] = 0;\n\t\tthis.rawData[7] = 0;\n\t\tthis.rawData[8] = 0;\n\t\tthis.rawData[9] = 0;\n\t\tthis.rawData[10] = 1;\n\t\tthis.rawData[11] = 0;\n\t\tthis.rawData[12] = 0;\n\t\tthis.rawData[13] = 0;\n\t\tthis.rawData[14] = 0;\n\t\tthis.rawData[15] = 1;\n\t}\n\n\t/**\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\n\t */\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\n\t */\n\tpublic interpolateTo(toMat:Matrix3D, percent:number)\n\t{\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\n\t}\n\n\t/**\n\t * Inverts the current matrix.\n\t */\n\tpublic invert():boolean\n\t{\n\t\tvar d = this.determinant;\n\t\tvar invertable:boolean = Math.abs(d) > 0.00000000001;\n\n\t\tif (invertable) {\n\t\t\td = 1/d;\n\t\t\tvar m11:number = this.rawData[0];\n\t\t\tvar m12:number = this.rawData[1];\n\t\t\tvar m13:number = this.rawData[2];\n\t\t\tvar m14:number = this.rawData[3];\n\t\t\tvar m21:number = this.rawData[4];\n\t\t\tvar m22:number = this.rawData[5];\n\t\t\tvar m23:number = this.rawData[6];\n\t\t\tvar m24:number = this.rawData[7];\n\t\t\tvar m31:number = this.rawData[8];\n\t\t\tvar m32:number = this.rawData[9];\n\t\t\tvar m33:number = this.rawData[10];\n\t\t\tvar m34:number = this.rawData[11];\n\t\t\tvar m41:number = this.rawData[12];\n\t\t\tvar m42:number = this.rawData[13];\n\t\t\tvar m43:number = this.rawData[14];\n\t\t\tvar m44:number = this.rawData[15];\n\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\n\t\t}\n\t\treturn invertable;\n\t}\n\n\t/* TODO implement pointAt\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\n\t {\n\t }\n\t */\n\n\t/**\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\n\t */\n\tpublic prepend(rhs:Matrix3D)\n\t{\n\t\tvar m111:number = rhs.rawData[0];\n\t\tvar m112:number = rhs.rawData[1];\n\t\tvar m113:number = rhs.rawData[2];\n\t\tvar m114:number = rhs.rawData[3];\n\t\tvar m121:number = rhs.rawData[4];\n\t\tvar m122:number = rhs.rawData[5];\n\t\tvar m123:number = rhs.rawData[6];\n\t\tvar m124:number = rhs.rawData[7];\n\t\tvar m131:number = rhs.rawData[8];\n\t\tvar m132:number = rhs.rawData[9];\n\t\tvar m133:number = rhs.rawData[10];\n\t\tvar m134:number = rhs.rawData[11];\n\t\tvar m141:number = rhs.rawData[12];\n\t\tvar m142:number = rhs.rawData[13];\n\t\tvar m143:number = rhs.rawData[14];\n\t\tvar m144:number = rhs.rawData[15];\n\n\t\tvar m211:number = this.rawData[0];\n\t\tvar m212:number = this.rawData[1];\n\t\tvar m213:number = this.rawData[2];\n\t\tvar m214:number = this.rawData[3];\n\t\tvar m221:number = this.rawData[4];\n\t\tvar m222:number = this.rawData[5];\n\t\tvar m223:number = this.rawData[6];\n\t\tvar m224:number = this.rawData[7];\n\t\tvar m231:number = this.rawData[8];\n\t\tvar m232:number = this.rawData[9];\n\t\tvar m233:number = this.rawData[10];\n\t\tvar m234:number = this.rawData[11];\n\t\tvar m241:number = this.rawData[12];\n\t\tvar m242:number = this.rawData[13];\n\t\tvar m243:number = this.rawData[14];\n\t\tvar m244:number = this.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Prepends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\t/*\n\t\t if ( pivot != null )\n\t\t {\n\t\t var p:Vector3D = pivot;\n\t\t m.appendTranslation( p.x, p.y, p.z );\n\t\t }\n\t\t */\n\t\tthis.prepend(m);\n\t}\n\n\t/**\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic prependScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\n\t\t\treturn;\n\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = xScale;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = yScale;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = zScale;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.prepend(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic prependTranslation(x:number, y:number, z:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = 1;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = 1;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = 1;\n\t\traw[11] = 0;\n\n\t\traw[12] = x;\n\t\traw[13] = y;\n\t\traw[14] = z;\n\t\traw[15] = 1;\n\n\t\tthis.prepend(Matrix3D.tempMatrix);\n\t}\n\n\t// TODO orientationStyle\n\t/**\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\n\t */\n\tpublic recompose(components:Vector3D[]):boolean\n\t{\n\t\tvar pos:Vector3D = (components[0])? components[0] : this.position;\n\n\t\tthis.identity();\n\t\tvar scale:Vector3D = components[3];\n\t\tif(scale && (scale.x != 1 || scale.y != 1 || scale.z != 1))\n\t\t\tthis.appendScale(scale.x, scale.y, scale.z);\n\n\t\tvar skew:Vector3D = components[2];\n\t\tif(skew && (skew.x !=0 || skew.y != 0 || skew.z != 0))\n\t\t\tthis.appendSkew(skew.x, skew.y, skew.z);\n\n\t\tvar sin:number;\n\t\tvar cos:number;\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 0;\n\n\t\tvar rotation:Vector3D = components[1];\n\t\tif (rotation) {\n\t\t\tvar angle:number = -rotation.x;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = 1;\n\t\t\t\traw[1] = 0;\n\t\t\t\traw[2] = 0;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = 0;\n\t\t\t\traw[5] = cos;\n\t\t\t\traw[6] = -sin;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = 0;\n\t\t\t\traw[9] = sin;\n\t\t\t\traw[10] = cos;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t\tangle = -rotation.y;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = cos;\n\t\t\t\traw[1] = 0;\n\t\t\t\traw[2] = sin;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = 0;\n\t\t\t\traw[5] = 1;\n\t\t\t\traw[6] = 0;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = -sin;\n\t\t\t\traw[9] = 0;\n\t\t\t\traw[10] = cos;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t\tangle = -rotation.z;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = cos;\n\t\t\t\traw[1] = -sin;\n\t\t\t\traw[2] = 0;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = sin;\n\t\t\t\traw[5] = cos;\n\t\t\t\traw[6] = 0;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = 0;\n\t\t\t\traw[9] = 0;\n\t\t\t\traw[10] = 1;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t}\n\n\t\tthis.position = pos;\n\t\tthis.rawData[15] = 1;\n\n\t\treturn true;\n\t}\n\n\tpublic transformVector(v:Vector3D, t:Vector3D = null):Vector3D\n\t{\n\t\tif (v == null)\n\t\t\treturn t || new Vector3D();\n\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\tif (!t)\n\t\t\tt = new Vector3D();\n\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15];\n\n\t\treturn t;\n\t}\n\n\tpublic transformBox(b:Box, t:Box = null):Box\n\t{\n\t\tif (b == null)\n\t\t\treturn t || new Box();\n\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tmaxX = b.width + (minX = b.x);\n\t\tmaxY = b.height + (minY = b.y);\n\t\tmaxZ = b.depth + (minZ = b.z);\n\n\t\tif (!t)\n\t\t\tt = new Box();\n\n\t\t//TODO: take account of shear\n\t\tt.width = maxX*this.rawData[0] + maxY*this.rawData[4] + maxZ*this.rawData[8] + this.rawData[12] - (t.x = minX*this.rawData[0] + minY*this.rawData[4] + minZ*this.rawData[8] + this.rawData[12]);\n\t\tt.height = maxX*this.rawData[1] + maxY*this.rawData[5] + maxZ*this.rawData[9] + this.rawData[13] - (t.y = minX*this.rawData[1] + minY*this.rawData[5] + minZ*this.rawData[9] + this.rawData[13]);\n\t\tt.depth = maxX*this.rawData[2] + maxY*this.rawData[6] + maxZ*this.rawData[10] + this.rawData[14] - (t.z = minX*this.rawData[2] + minY*this.rawData[6] + minZ*this.rawData[10] + this.rawData[14]);\n\n\t\treturn t;\n\t}\n\n\t/**\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\n\t */\n\tpublic transformVectors(vin:number[], vout:number[])\n\t{\n\t\tvar i:number = 0;\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\n\n\t\twhile (i + 3 <= vin.length) {\n\t\t\tx = vin[i];\n\t\t\ty = vin[i + 1];\n\t\t\tz = vin[i + 2];\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\n\t */\n\tpublic transpose()\n\t{\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\tthis.copyRawDataTo(raw);\n\n\t\tthis.rawData[1] = raw[4];\n\t\tthis.rawData[2] = raw[8];\n\t\tthis.rawData[3] = raw[12];\n\t\tthis.rawData[4] = raw[1];\n\t\tthis.rawData[6] = raw[9];\n\t\tthis.rawData[7] = raw[13];\n\t\tthis.rawData[8] = raw[2];\n\t\tthis.rawData[9] = raw[6];\n\t\tthis.rawData[11] = raw[14];\n\t\tthis.rawData[12] = raw[3];\n\t\tthis.rawData[13] = raw[7];\n\t\tthis.rawData[14] = raw[11];\n\t}\n\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\n\t{\n\n\t\t// internal class use by rotations which have been tested\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tvar rad = degrees*( Math.PI/180 );\n\t\tvar c:number = Math.cos(rad);\n\t\tvar s:number = Math.sin(rad);\n\t\tvar t:number = 1 - c;\n\t\tvar tmp1:number, tmp2:number;\n\n\t\tm.rawData[0] = c + x*x*t;\n\t\tm.rawData[5] = c + y*y*t;\n\t\tm.rawData[10] = c + z*z*t;\n\n\t\ttmp1 = x*y*t;\n\t\ttmp2 = z*s;\n\t\tm.rawData[1] = tmp1 + tmp2;\n\t\tm.rawData[4] = tmp1 - tmp2;\n\t\ttmp1 = x*z*t;\n\t\ttmp2 = y*s;\n\t\tm.rawData[8] = tmp1 + tmp2;\n\t\tm.rawData[2] = tmp1 - tmp2;\n\t\ttmp1 = y*z*t;\n\t\ttmp2 = x*s;\n\t\tm.rawData[9] = tmp1 - tmp2;\n\t\tm.rawData[6] = tmp1 + tmp2;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * [read-only] A Number that determines whether a matrix is invertible.\n\t */\n\tpublic get determinant():number\n\t{\n\t\treturn ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\n\t}\n\n\t/**\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\n\t * transformation's frame of reference.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\tif (this._position == null)\n\t\t\tthis._position = new Vector3D();\n\n\t\tthis._position.x = this.rawData[12];\n\t\tthis._position.y = this.rawData[13];\n\t\tthis._position.z = this.rawData[14];\n\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis.rawData[12] = value.x;\n\t\tthis.rawData[13] = value.y;\n\t\tthis.rawData[14] = value.z;\n\t}\n\n\tpublic toFixed(decimalPlace:number):string\n\t{\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\n\t}\n}\n\nexport = Matrix3D;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\n/**\n * The Matrix class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n *\n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n *\n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n *\n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n *\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n *\n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n *\n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n *\n * <p>The Matrix class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n *\n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n *\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nclass Matrix\n{\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic d:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>x</i> axis.\n\t */\n\tpublic tx:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>y</i> axis.\n\t */\n\tpublic ty:number;\n\n\t/**\n\t * Creates a new Matrix object with the specified parameters. In matrix\n\t * notation, the properties are organized like this:\n\t *\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n\t * constructor, it creates an <i>identity matrix</i> with the following\n\t * values:</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @return A Matrix object.\n\t */\n\tpublic clone():Matrix\n\t{\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Concatenates a matrix with the current matrix, effectively combining the\n\t * geometric effects of the two. In mathematical terms, concatenating two\n\t * matrixes is the same as combining them using matrix multiplication.\n\t *\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n\t *\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\n\t * you want to concatenate two matrixes without altering either of the two\n\t * source matrixes, first copy the source matrix by using the\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\n\t *\n\t * @param matrix The matrix to be concatenated to the source matrix.\n\t */\n\tpublic concat(matrix:Matrix):void\n\t{\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\n\t * object.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t} else if (column == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (column == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix object into the Vector3D\n\t * object. The w element of the Vector3D object will not be changed.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\n\t\t} else if (column == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.c;\n\t\t\tvector3D.z = 0;\n\t\t} else if (column == 1) {\n\t\t\tvector3D.x = this.b;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = 0;\n\t\t} else {\n\t\t\tvector3D.x = this.tx;\n\t\t\tvector3D.y = this.ty;\n\t\t\tvector3D.z = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Point object into the\n\t * calling Matrix object.\n\t *\n\t * @param sourceMatrix The Matrix object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceMatrix:Matrix):void\n\t{\n\t\tthis.a = sourceMatrix.a;\n\t\tthis.b = sourceMatrix.b;\n\t\tthis.c = sourceMatrix.c;\n\t\tthis.d = sourceMatrix.d;\n\t\tthis.tx = sourceMatrix.tx;\n\t\tthis.ty = sourceMatrix.ty;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (row == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\n\t * The w element of the Vector3D object will not be changed.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.b;\n\t\t\tvector3D.z = this.tx;\n\t\t} else if (row == 1) {\n\t\t\tvector3D.x = this.c;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = this.ty;\n\t\t} else {\n\t\t\tvector3D.setTo(0, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Includes parameters for scaling, rotation, and translation. When applied\n\t * to a matrix it sets the matrix's values based on those parameters.\n\t *\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\n\t * matrix as you would if you applied the <code>identity()</code>,\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n\t * 100, 100)</code> has the same effect as the following:</p>\n\t *\n\t * @param scaleX   The factor by which to scale horizontally.\n\t * @param scaleY   The factor by which scale vertically.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The number of pixels to translate(move) to the right\n\t *                 along the <i>x</i> axis.\n\t * @param ty       The number of pixels to translate(move) down along the\n\t *                 <i>y</i> axis.\n\t */\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = scaleX;\n\t\tthis.d = scaleY;\n\t\tthis.b = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Creates the specific style of matrix expected by the\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n\t * methods of the Graphics class. Width and height are scaled to a\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\n\t * height.\n\t *\n\t * <p>For example, consider a gradient with the following\n\t * characteristics:</p>\n\t *\n\t * <ul>\n\t *   <li><code>GradientType.LINEAR</code></li>\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n\t * 255]</code></li>\n\t *   <li><code>SpreadMethod.PAD</code></li>\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n\t * </ul>\n\t *\n\t * <p>The following illustrations show gradients in which the matrix was\n\t * defined using the <code>createGradientBox()</code> method with different\n\t * parameter settings:</p>\n\t *\n\t * @param width    The width of the gradient box.\n\t * @param height   The height of the gradient box.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The distance, in pixels, to translate to the right along\n\t *                 the <i>x</i> axis. This value is offset by half of the\n\t *                 <code>width</code> parameter.\n\t * @param ty       The distance, in pixels, to translate down along the\n\t *                 <i>y</i> axis. This value is offset by half of the\n\t *                 <code>height</code> parameter.\n\t */\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = width/1638.4;\n\t\tthis.d = height/1638.4;\n\n\t\tif (rotation != 0.0) {\n\t\t\tvar cos = Math.cos(rotation);\n\t\t\tvar sin = Math.sin(rotation);\n\n\t\t\tthis.b = sin*this.d;\n\t\t\tthis.c = -sin*this.a;\n\t\t\tthis.a *= cos;\n\t\t\tthis.d *= cos;\n\t\t} else {\n\t\t\tthis.b = this.c = 0;\n\t\t}\n\n\t\tthis.tx = tx + width/2;\n\t\tthis.ty = ty + height/2;\n\t}\n\n\t/**\n\t * Given a point in the pretransform coordinate space, returns the\n\t * coordinates of that point after the transformation occurs. Unlike the\n\t * standard transformation applied using the <code>transformPoint()</code>\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\n\t * does not consider the translation parameters <code>tx</code> and\n\t * <code>ty</code>.\n\t *\n\t * @param point The point for which you want to get the result of the matrix\n\t *              transformation.\n\t * @return The point resulting from applying the matrix transformation.\n\t */\n\tpublic deltaTransformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\n\t}\n\n\t/**\n\t * Sets each matrix property to a value that causes a null transformation. An\n\t * object transformed by applying an identity matrix will be identical to the\n\t * original.\n\t *\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n\t * <code>ty</code>=0.</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t */\n\tpublic identity():void\n\t{\n\t\tthis.a = 1;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 1;\n\t\tthis.tx = 0;\n\t\tthis.ty = 0;\n\t}\n\n\t/**\n\t * Performs the opposite transformation of the original matrix. You can apply\n\t * an inverted matrix to an object to undo the transformation performed when\n\t * applying the original matrix.\n\t */\n\tpublic invert():void\n\t{\n\t\tvar norm = this.a*this.d - this.b*this.c;\n\n\t\tif (norm == 0) {\n\t\t\tthis.a = this.b = this.c = this.d = 0;\n\t\t\tthis.tx = -this.tx;\n\t\t\tthis.ty = -this.ty;\n\t\t} else {\n\t\t\tnorm = 1.0/norm;\n\t\t\tvar a1 = this.d*norm;\n\t\t\tthis.d = this.a*norm;\n\t\t\tthis.a = a1;\n\t\t\tthis.b *= -norm;\n\t\t\tthis.c *= -norm;\n\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\n\t\t\tthis.tx = tx1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @param matrix The matrix for which you want to get the result of the matrix\n\t *               transformation.\n\t * @return A Matrix object.\n\t */\n\tpublic multiply(matrix:Matrix):Matrix\n\t{\n\t\tvar result = new Matrix();\n\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Applies a rotation transformation to the Matrix object.\n\t *\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n\t * Matrix object. In matrix notation, this is the same as concatenating the\n\t * current matrix with the following:</p>\n\t *\n\t * @param angle The rotation angle in radians.\n\t */\n\tpublic rotate(angle:number):void\n\t{\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\n\t\tvar a1 = this.a*cos - this.b*sin;\n\t\tthis.b = this.a*sin + this.b*cos;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*cos - this.d*sin;\n\t\tthis.d = this.c*sin + this.d*cos;\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\n\t\tthis.ty = this.tx*sin + this.ty*cos;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n\t * <code>sy</code>.\n\t *\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\n\t * is the same as concatenating the current matrix with the following\n\t * matrix:</p>\n\t *\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\n\t */\n\tpublic scale(sx:number, sy:number):void\n\t{\n\t\tthis.a *= sx;\n\t\tthis.b *= sy;\n\n\t\tthis.c *= sx;\n\t\tthis.d *= sy;\n\n\t\tthis.tx *= sx;\n\t\tthis.ty *= sy;\n\t}\n\n\t/**\n\t * Sets the members of Matrix to the specified values.\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a text value listing the properties of the Matrix object.\n\t *\n\t * @return A string containing the values of the properties of the Matrix\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n\t}\n\n\t/**\n\t * Returns the result of applying the geometric transformation represented by\n\t * the Matrix object to the specified point.\n\t *\n\t * @param point The point for which you want to get the result of the Matrix\n\t *              transformation.\n\t * @return The point resulting from applying the Matrix transformation.\n\t */\n\tpublic transformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\n\t}\n\n\t/**\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n\t * by the <code>dx</code> and <code>dy</code> parameters.\n\t *\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\n\t *           pixels.\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\n\t */\n\tpublic translate(dx:number, dy:number):void\n\t{\n\t\tthis.tx += dx;\n\t\tthis.ty += dy;\n\t}\n}\n\nexport = Matrix;",
    "/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Orientation3D\n{\n\t/**\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\n\t * @type {string}\n\t */\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\n\n\t/**\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\n\t * @type {string}\n\t */\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\n\n\t/**\n\t * The quaternion orientation uses complex numbers.\n\t * @type {string}\n\t */\n\tpublic static QUATERNION:string = \"quaternion\";\n}\n\nexport = Orientation3D;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * <p>The PerspectiveProjection class provides an easy way to assign or modify\n * the perspective transformations of a display object and all of its\n * children. For more complex or custom perspective transformations, use the\n * Matrix3D class. While the PerspectiveProjection class provides basic\n * three-dimensional presentation properties, the Matrix3D class provides more\n * detailed control over the three-dimensional presentation of display objects.\n * </p>\n *\n * <p>Projection is a way of representing a three-dimensional object in a\n * two-dimensional space, like a cube projected onto a computer screen.\n * Perspective projection uses a viewing frustum (a rectangular pyramid) to\n * model and project a three-dimensional world and its objects on the screen.\n * The viewing frustum becomes increasingly wider as it moves further from the\n * origin of the viewpoint. The origin of the viewpoint could be a camera or\n * the eyes of an observer facing the screen. The projected perspective\n * produces the illusion of three dimensions with depth and distance, where\n * the objects closer to the screen appear larger than the objects farther\n * from the screen.</p>\n *\n * <p>A default PerspectiveProjection object is a framework defined for\n * perspective transformation of the root object, based on the field of view\n * and aspect ratio (dimensions) of the stage. The projection center, the\n * vanishing point, is set to the center of the stage, which means the\n * three-dimensional display objects disappear toward the center of the stage\n * as they move back in the z axis. The default viewpoint is at point (0,0)\n * looking down the positive z axis. The y-axis points down toward the bottom\n * of the screen. You can gain access to the root display object's perspective\n * projection settings and change the field of view and projection center\n * properties of the perspectiveProjection property through the root object's\n * <code>DisplayObject.transform</code> property.</p>\n *\n * <p>You can also set a different perspective projection setting for a\n * display object through the parent's perspective projection. First, create a\n * PerspectiveProjection object and set its <code>fieldOfView</code> and\n * <code>projectionCenter</code> properties. Next, assign the\n * PerspectiveProjection object to the parent display object using the\n * <code>DisplayObject.transform</code> property. The specified projection\n * matrix and transformation will then apply to all the display object's\n * three-dimensional children.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass PerspectiveProjection\n{\n\tprivate _matrix3D:Matrix3D;\n\n\t/**\n\t * Specifies an angle, as a degree between 0 and 180, for the field of\n\t * view in three dimensions. This value determines how strong the\n\t * perspective transformation and distortion apply to a\n\t * three-dimensional display object with a non-zero z-coordinate.\n\t *\n\t * <p>A degree close to 0 means that the screen's two-dimensional x-\n\t * and y-coordinates are roughly the same as the three-dimensional x-,\n\t * y-, and z-coordinates with little or no distortion. In other words,\n\t * for a small angle, a display object moving down the z axis appears\n\t * to stay near the same size and moves little.</p>\n\t *\n\t * <p>A value close to 180 degrees results in a fisheye projection effect:\n\t * positions with a z value smaller than 0 are magnified, while\n\t * positions with a z value larger than 0 are minimized. With a large\n\t * angle, a display object moving down the z axis appears to change\n\t * size quickly and moves a great distance. If the field of view is\n\t * set to 0 or 180, nothing is seen on the screen.</p>\n\t */\n\tpublic fieldOfView:number;\n\n\t/**\n\t * The distance between the eye or the viewpoint's origin (0,0,0) and\n\t * the display object located in the z axis. During the perspective\n\t * transformation, the <code>focalLength</code> is calculated\n\t * dynamically using the angle of the field of view and the stage's\n\t * aspect ratio (stage width divided by stage height).\n\t *\n\t * @see away.geom.PerspectiveProjection#fieldOfView\n\t */\n\tpublic focalLength:number;\n\n\t/**\n\t * A two-dimensional point representing the center of the projection,\n\t * the vanishing point for the display object.\n\t *\n\t * <p>The <code>projectionCenter</code> property is an offset to the\n\t * default registration point that is the upper left of the stage,\n\t * point (0,0). The default projection transformation center is in the\n\t * middle of the stage, which means the three-dimensional display\n\t * objects disappear toward the center of the stage as they move\n\t * backwards in the z axis.</p>\n\t */\n\tpublic projectionCenter:Point;\n\n\t/**\n\t * Creates an instance of a PerspectiveProjection object.\n\t */\n\tconstructor()\n\t{\n\n\t}\n\t/**\n\t * Returns the underlying Matrix3D object of the display object.\n\t *\n\t * <p>A display object, like the root object, can have a\n\t * PerspectiveProjection object without needing a Matrix3D property\n\t * defined for its transformations. In fact, use either a\n\t * PerspectiveProjection or a Matrix3D object to specify the\n\t * perspective transformation. If when using the PerspectiveProjection\n\t * object, a Matrix3D object was needed, the <code>toMatrix3D()</code>\n\t * method can retrieve the underlying Matrix3D object of the display\n\t * object. For example, the <code>toMatrix3D()</code> method can be\n\t * used with the <code>Utils3D.projectVectors()</code> method.</p>\n\t *\n\t * @see away.geom.Matrix3D\n\t */\n\tpublic toMatrix3D():Matrix3D\n\t{\n\t\treturn this._matrix3D;\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Plane3D\n{\n\t/**\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\n\t */\n\tpublic d:number;\n\n\tpublic _iAlignment:number;\n\n\t// indicates the alignment of the plane\n\tpublic static ALIGN_ANY:number = 0;\n\tpublic static ALIGN_XY_AXIS:number = 1;\n\tpublic static ALIGN_YZ_AXIS:number = 2;\n\tpublic static ALIGN_XZ_AXIS:number = 3;\n\n\t/**\n\t * Create a Plane3D with ABCD coefficients\n\t */\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\n\t\tif (a == 0 && b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (b == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (a == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\n\t * @param p0 Vector3D\n\t * @param p1 Vector3D\n\t * @param p2 Vector3D\n\t */\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D)\n\t{\n\t\tvar d1x:number = p1.x - p0.x;\n\t\tvar d1y:number = p1.y - p0.y;\n\t\tvar d1z:number = p1.z - p0.z;\n\n\t\tvar d2x:number = p2.x - p0.x;\n\t\tvar d2y:number = p2.y - p0.y;\n\t\tvar d2z:number = p2.z - p0.z;\n\n\t\tthis.a = d1y*d2z - d1z*d2y;\n\t\tthis.b = d1z*d2x - d1x*d2z;\n\t\tthis.c = d1x*d2y - d1y*d2x;\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\n\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\n\t * @param normal Vector3D\n\t * @param point  Vector3D\n\t */\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D)\n\t{\n\t\tthis.a = normal.x;\n\t\tthis.b = normal.y;\n\t\tthis.c = normal.z;\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Normalize this Plane3D\n\t * @return Plane3D This Plane3D.\n\t */\n\tpublic normalize():Plane3D\n\t{\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\n\t\tthis.a *= len;\n\t\tthis.b *= len;\n\t\tthis.c *= len;\n\t\tthis.d *= len;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the signed distance between this Plane3D and the point p.\n\t * @param p Vector3D\n\t * @returns Number\n\t */\n\tpublic distance(p:Vector3D):number\n\t{\n\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\n\n\t\t\treturn this.a*p.x - this.d;\n\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\n\t\t\treturn this.b*p.y - this.d;\n\t\t}\n\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\n\n\t\t\treturn this.c*p.z - this.d;\n\n\t\t} else {\n\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\n\t * @param p Vector3D\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\n\t */\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\n\t{\n\t\t// check NaN\n\t\tif (this.d != this.d)\n\t\t\treturn PlaneClassification.FRONT;\n\n\t\tvar len:number;\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\n\t\t\tlen = this.c*p.z - this.d; else\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\tif (len < -epsilon)\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\n\t\t\treturn PlaneClassification.FRONT; else\n\t\t\treturn PlaneClassification.INTERSECT;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\n\t}\n}\n\nexport = Plane3D;",
    "class PlaneClassification\n{\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\n\tpublic static BACK:number = 0;\n\tpublic static FRONT:number = 1;\n\n\tpublic static IN:number = 0;\n\tpublic static OUT:number = 1;\n\tpublic static INTERSECT:number = 2;\n\n}\n\nexport = PlaneClassification;",
    "/**\n * The Point object represents a location in a two-dimensional coordinate\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\n * represents the vertical axis.\n *\n * <p>The following code creates a point at(0,0):</p>\n *\n * <p>Methods and properties of the following classes use Point objects:</p>\n *\n * <ul>\n *   <li>BitmapData</li>\n *   <li>DisplayObject</li>\n *   <li>DisplayObjectContainer</li>\n *   <li>DisplacementMapFilter</li>\n *   <li>NativeWindow</li>\n *   <li>Matrix</li>\n *   <li>Rectangle</li>\n * </ul>\n *\n * <p>You can use the <code>new Point()</code> constructor to create a Point\n * object.</p>\n */\nclass Point\n{\n\t/**\n\t * The horizontal coordinate of the point. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The vertical coordinate of the point. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The length of the line segment from(0,0) to this point.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\n\t}\n\n\t/**\n\t * Creates a new point. If you pass no parameters to this method, a point is\n\t * created at(0,0).\n\t *\n\t * @param x The horizontal coordinate.\n\t * @param y The vertical coordinate.\n\t */\n\tconstructor(x:number = 0, y:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t/**\n\t * Adds the coordinates of another point to the coordinates of this point to\n\t * create a new point.\n\t *\n\t * @param v The point to be added.\n\t * @return The new point.\n\t */\n\tpublic add(v:Point):Point\n\t{\n\t\treturn new Point(this.x + v.x, this.y + v.y);\n\t}\n\n\t/**\n\t * Creates a copy of this Point object.\n\t *\n\t * @return The new Point object.\n\t */\n\tpublic clone():Point\n\t{\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\tpublic copyFrom(sourcePoint:Point)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether two points are equal. Two points are equal if they have\n\t * the same <i>x</i> and <i>y</i> values.\n\t *\n\t * @param toCompare The point to be compared.\n\t * @return A value of <code>true</code> if the object is equal to this Point\n\t *         object; <code>false</code> if it is not equal.\n\t */\n\tpublic equals(toCompare:Point):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\n\t}\n\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current point is\n\t *                 (0,5), and you normalize it to 1, the point returned is\n\t *                  at(0,1).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\treturn;\n\t\t}\n\t\tthrow \"Cannot divide by zero length.\";\n\t}\n\n\t/**\n\t * Offsets the Point object by the specified amount. The value of\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\n\t * value of <i>y</i> to create the new <i>y</i> value.\n\t *\n\t * @param dx The amount by which to offset the horizontal coordinate,\n\t *           <i>x</i>.\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\tpublic setTo(xa:number, ya:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t}\n\n\t/**\n\t * Subtracts the coordinates of another point from the coordinates of this\n\t * point to create a new point.\n\t *\n\t * @param v The point to be subtracted.\n\t * @return The new point.\n\t */\n\tpublic subtract(v:Point):Point\n\t{\n\t\treturn new Point(this.x - v.x, this.y - v.y);\n\t}\n\n\t/**\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\n\t *\n\t * @return The string representation of the coordinates.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\n\t}\n\n\t/**\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @return The distance between the first and second points.\n\t */\n\tpublic static distance(pt1:Point, pt2:Point):number\n\t{\n\t\tvar dx:number = pt2.x - pt1.x;\n\t\tvar dy:number = pt2.y - pt1.y;\n\n\t\treturn Math.sqrt(dx*dx + dy*dy);\n\t}\n\n\t/**\n\t * Determines a point between two specified points. The parameter\n\t * <code>f</code> determines where the new interpolated point is located\n\t * relative to the two end points specified by parameters <code>pt1</code>\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\n\t * point(parameter <code>pt2</code>).\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @param f   The level of interpolation between the two points. Indicates\n\t *            where the new point will be, along the line between\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\n\t *            <code>pt2</code> is returned.\n\t * @return The new, interpolated point.\n\t */\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\n\t{\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\n\t}\n\n\t/**\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\n\t *\n\t * @param len   The length coordinate of the polar pair.\n\t * @param angle The angle, in radians, of the polar pair.\n\t * @return The Cartesian point.\n\t */\n\tpublic static polar(len:number, angle:number):Point\n\t{\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\n\t}\n}\n\nexport = Point;\n",
    "class PoissonLookup\n{\n\tpublic static _distributions:Array<Array<number>>;\n\n\tpublic static initDistributions():void\n\t{\n\t\t// precalculated for best control\n\t\tthis._distributions = new Array<Array<number>>();\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\n\t}\n\n\tpublic static getDistribution(n:number /*int*/):Array<number>\n\t{\n\t\tif (!this._distributions)\n\t\t\tthis.initDistributions();\n\n\t\tif (n < 2 || n > 32)\n\t\t\treturn null;\n\n\t\treturn this._distributions[n - 1];\n\t}\n}\n\nexport = PoissonLookup;",
    "import Matrix3DUtils\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Orientation3D\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Matrix3D\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Quaternion\n{\n\t/**\n\t * The x value of the quaternion.\n\t */\n\tpublic x:number = 0;\n\n\t/**\n\t * The y value of the quaternion.\n\t */\n\tpublic y:number = 0;\n\n\t/**\n\t * The z value of the quaternion.\n\t */\n\tpublic z:number = 0;\n\n\t/**\n\t * The w value of the quaternion.\n\t */\n\tpublic w:number = 1;\n\n\t/**\n\t * Creates a new Quaternion object.\n\t * @param x The x value of the quaternion.\n\t * @param y The y value of the quaternion.\n\t * @param z The z value of the quaternion.\n\t * @param w The w value of the quaternion.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Returns the magnitude of the quaternion object.\n\t */\n\tpublic get magnitude():number\n\t{\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t}\n\n\t/**\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\n\t *\n\t * @param    qa    The first quaternion in the multiplication.\n\t * @param    qb    The second quaternion in the multiplication.\n\t */\n\tpublic multiply(qa:Quaternion, qb:Quaternion)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t}\n\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\n\t{\n\t\t//target ||= new Quaternion();\n\t\tif (target === null) {\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\n\t\tvar x2:number = vector.x;\n\t\tvar y2:number = vector.y;\n\t\tvar z2:number = vector.z;\n\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given rotation around a vector.\n\t *\n\t * @param    axis    The axis around which to rotate\n\t * @param    angle    The angle in radians of the rotation.\n\t */\n\tpublic fromAxisAngle(axis:Vector3D, angle:number)\n\t{\n\t\tvar sin_a:number = Math.sin(angle/2);\n\t\tvar cos_a:number = Math.cos(angle/2);\n\n\t\tthis.x = axis.x*sin_a;\n\t\tthis.y = axis.y*sin_a;\n\t\tthis.z = axis.z*sin_a;\n\t\tthis.w = cos_a;\n\n\t\tthis.normalize();\n\t}\n\n\t/**\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\n\n\t\t// shortest direction\n\t\tif (dot < 0) {\n\t\t\tdot = -dot;\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tif (dot < 0.95) {\n\t\t\t// interpolate angle linearly\n\t\t\tvar angle:number = Math.acos(dot);\n\t\t\tvar s:number = 1/Math.sin(angle);\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\n\t\t\tthis.w = w1*s1 + w2*s2;\n\t\t\tthis.x = x1*s1 + x2*s2;\n\t\t\tthis.y = y1*s1 + y2*s2;\n\t\t\tthis.z = z1*s1 + z2*s2;\n\t\t} else {\n\t\t\t// nearly identical angle, interpolate linearly\n\t\t\tthis.w = w1 + t*(w2 - w1);\n\t\t\tthis.x = x1 + t*(x2 - x1);\n\t\t\tthis.y = y1 + t*(y2 - y1);\n\t\t\tthis.z = z1 + t*(z2 - z1);\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\t\tthis.w *= len;\n\t\t\tthis.x *= len;\n\t\t\tthis.y *= len;\n\t\t\tthis.z *= len;\n\t\t}\n\t}\n\n\t/**\n\t * Linearly interpolates between two quaternions.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar len:number;\n\n\t\t// shortest direction\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tthis.w = w1 + t*(w2 - w1);\n\t\tthis.x = x1 + t*(x2 - x1);\n\t\tthis.y = y1 + t*(y2 - y1);\n\t\tthis.z = z1 + t*(z2 - z1);\n\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\tthis.w *= len;\n\t\tthis.x *= len;\n\t\tthis.y *= len;\n\t\tthis.z *= len;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given euler rotation.\n\t *\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\n\t * @param    az        The angle in radians of the rotation around the az axis.\n\t */\n\tpublic fromEulerAngles(ax:number, ay:number, az:number)\n\t{\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\n\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\n\t}\n\n\t/**\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\n\t * @return The Vector3D containing the Euler angles.\n\t */\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\n\t{\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Normalises the quaternion object.\n\t */\n\tpublic normalize(val:number = 1)\n\t{\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\n\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t\tthis.z *= mag;\n\t\tthis.w *= mag;\n\t}\n\n\t/**\n\t * Used to trace the values of a quaternion.\n\t *\n\t * @return A string representation of the quaternion object.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\n\t}\n\n\t/**\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\n\t * @return A Matrix3D object representing an equivalent rotation.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\trawData[0] = xx - yy - zz + ww;\n\t\trawData[4] = xy2 - zw2;\n\t\trawData[8] = xz2 + yw2;\n\t\trawData[12] = 0;\n\t\trawData[1] = xy2 + zw2;\n\t\trawData[5] = -xx + yy - zz + ww;\n\t\trawData[9] = yz2 - xw2;\n\t\trawData[13] = 0;\n\t\trawData[2] = xz2 - yw2;\n\t\trawData[6] = yz2 + xw2;\n\t\trawData[10] = -xx - yy + zz + ww;\n\t\trawData[14] = 0;\n\t\trawData[3] = 0.0;\n\t\trawData[7] = 0.0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\n\t\tif (!target)\n\t\t\treturn new Matrix3D(rawData);\n\t\telse\n\t\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\n\t */\n\tpublic fromMatrix(matrix:Matrix3D)\n\t{\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t}\n\n\t/**\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\n\t */\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false)\n\t{\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\ttarget[0] = xx - yy - zz + ww;\n\t\ttarget[1] = xy2 - zw2;\n\t\ttarget[2] = xz2 + yw2;\n\t\ttarget[4] = xy2 + zw2;\n\t\ttarget[5] = -xx + yy - zz + ww;\n\t\ttarget[6] = yz2 - xw2;\n\t\ttarget[8] = xz2 - yw2;\n\t\ttarget[9] = yz2 + xw2;\n\t\ttarget[10] = -xx - yy + zz + ww;\n\t\ttarget[3] = target[7] = target[11] = 0;\n\n\t\tif (!exclude4thRow) {\n\t\t\ttarget[12] = target[13] = target[14] = 0;\n\t\t\ttarget[15] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Clones the quaternion.\n\t * @return An exact duplicate of the current Quaternion.\n\t */\n\tpublic clone():Quaternion\n\t{\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Rotates a point.\n\t * @param vector The Vector3D object to be rotated.\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\n\t * @return A Vector3D object containing the rotated point.\n\t */\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\t// p*q'\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the data from a quaternion into this instance.\n\t * @param q The quaternion to copy from.\n\t */\n\tpublic copyFrom(q:Quaternion)\n\t{\n\t\tthis.x = q.x;\n\t\tthis.y = q.y;\n\t\tthis.z = q.z;\n\t\tthis.w = q.w;\n\t}\n}\n\nexport = Quaternion;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * A Rectangle object is an area defined by its position, as indicated by its\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the Rectangle class are independent of\n * each other; changing the value of one property has no effect on the others.\n * However, the <code>right</code> and <code>bottom</code> properties are\n * integrally related to those four properties. For example, if you change the\n * value of the <code>right</code> property, the value of the\n * <code>width</code> property changes; if you change the <code>bottom</code>\n * property, the value of the <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Rectangle objects:</p>\n *\n * <ul>\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\n * <code>merge()</code>, <code>paletteMap()</code>,\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\n * BitmapData class</li>\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\n * DisplayObject class</li>\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\n * class</li>\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\n * method of the Sprite class</li>\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\n * method of the PrintJob class</li>\n * </ul>\n *\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\n * Rectangle object.</p>\n *\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\n * display object. To draw a rectangular Shape object onscreen, use the\n * <code>drawRect()</code> method of the Graphics class.</p>\n */\nclass Rectangle\n{\n\tprivate _size:Point;\n\tprivate _bottomRight:Point;\n\tprivate _topLeft:Point;\n\n\t/**\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>x</code> property of a Rectangle object has no\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>y</code> property of a Rectangle object has no\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's bottom-right corner, determined by\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRight():Point\n\t{\n\t\tif (this._bottomRight == null)\n\t\t\tthis._bottomRight = new Point();\n\n\t\tthis._bottomRight.x = this.x + this.width;\n\t\tthis._bottomRight.y = this.y + this.height;\n\n\t\treturn this._bottomRight;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>left</code> property of a Rectangle object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\t/**\n\t * The size of the Rectangle object, expressed as a Point object with the\n\t * values of the <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic get size():Point\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Point();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>top</code> property of a Rectangle object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's top-left corner, determined by the\n\t * <i>x</i> and <i>y</i> coordinates of the point.\n\t */\n\tpublic get topLeft():Point\n\t{\n\t\tif (this._topLeft == null)\n\t\t\tthis._topLeft = new Point();\n\n\t\tthis._topLeft.x = this.x;\n\t\tthis._topLeft.y = this.y;\n\n\t\treturn this._topLeft;\n\t}\n\n\t/**\n\t * Creates a new Rectangle object with the top-left corner specified by the\n\t * <code>x</code> and <code>y</code> parameters and with the specified\n\t * <code>width</code> and <code>height</code> parameters. If you call this\n\t * public without parameters, a rectangle with <code>x</code>,\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\n\t * to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param width  The width of the rectangle, in pixels.\n\t * @param height The height of the rectangle, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\t/**\n\t * Returns a new Rectangle object with the same values for the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties as the original Rectangle object.\n\t *\n\t * @return A new Rectangle object with the same values for the\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\n\t *         <code>height</code> properties as the original Rectangle object.\n\t */\n\tpublic clone():Rectangle\n\t{\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object. This method is similar to the\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\n\t * object as a parameter.\n\t *\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\n\t *              coordinates.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(point:Point):boolean\n\t{\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n\t}\n\n\t/**\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\n\t * parameter is contained within this Rectangle object. A Rectangle object is\n\t * said to contain another if the second Rectangle object falls entirely\n\t * within the boundaries of the first.\n\t *\n\t * @param rect The Rectangle object being checked.\n\t * @return A value of <code>true</code> if the Rectangle object that you\n\t *         specify is contained by this Rectangle object; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic containsRect(rect:Rectangle):boolean\n\t{\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\n\t}\n\n\t/**\n\t * Copies all of rectangle data from the source Rectangle object into the\n\t * calling Rectangle object.\n\t *\n\t * @param sourceRect The Rectangle object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceRect:Rectangle)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Rectangle object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of an object against the same properties of\n\t * this Rectangle object.\n\t *\n\t * @param toCompare The rectangle to compare to this Rectangle object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\n\t *         and <code>height</code> properties as this Rectangle object;\n\t *         otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Rectangle):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object by the specified amounts, in\n\t * pixels. The center point of the Rectangle object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, and to\n\t * the top and the bottom by the <code>dy</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Rectangle\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the rectangle:\n\t * @param dy The value to be added to the top and the bottom of the\n\t *           Rectangle. The following equation is used to calculate the new\n\t *           height and position of the rectangle:\n\t */\n\tpublic inflate(dx:number, dy:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object. This method is similar to the\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param point The <code>x</code> property of this Point object is used to\n\t *              increase the horizontal dimension of the Rectangle object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Rectangle object.\n\t */\n\tpublic inflatePoint(point:Point)\n\t{\n\t\tthis.x -= point.x/2;\n\t\tthis.y -= point.y/2;\n\t\tthis.width += point.x/2;\n\t\tthis.height += point.y/2;\n\t}\n\n\t/**\n\t * If the Rectangle object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object, returns the area of\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\n\t * this method returns an empty Rectangle object with its properties set to\n\t * 0.\n\t *\n\t * @param toIntersect The Rectangle object to compare against to see if it\n\t *                    intersects with this Rectangle object.\n\t * @return A Rectangle object that equals the area of intersection. If the\n\t *         rectangles do not intersect, this method returns an empty\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\n\t *         properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Rectangle):Rectangle\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Rectangle = new Rectangle();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Rectangle();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of the specified Rectangle object to see if\n\t * it intersects with this Rectangle object.\n\t *\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\n\t *                    object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Rectangle object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Rectangle):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\n\t}\n\n\t/**\n\t * Determines whether or not this Rectangle object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Rectangle object's width or\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object, as determined by its\n\t * top-left corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object using a Point object as a\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\n\t * method, except that it takes a Point object as a parameter.\n\t *\n\t * @param point A Point object to use to offset this Rectangle object.\n\t */\n\tpublic offsetPoint(point:Point)\n\t{\n\t\tthis.x += point.x;\n\t\tthis.y += point.y;\n\t}\n\n\t/**\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n\t * empty if its width or height is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t}\n\n\t/**\n\t * Sets the members of Rectangle to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param widtha  The width of the rectangle, in pixels.\n\t * @param heighta The height of the rectangle, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal and vertical\n\t * positions and the width and height of the Rectangle object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\n\t *         <code>width</code>, and <code>height</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n\t}\n\n\t/**\n\t * Adds two rectangles together to create a new Rectangle object, by filling\n\t * in the horizontal and vertical space between the two rectangles.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\n\t * <code>0</code> as the height or width value, such as: <code>var\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\n\t *\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\n\t * @return A new Rectangle object that is the union of the two rectangles.\n\t */\n\tpublic union(toUnion:Rectangle):Rectangle\n\t{\n\t\tvar u:Rectangle = new Rectangle();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Rectangle;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Sphere\n{\n\t/**\n\t *\n\t */\n\tpublic x:number;\n\n\t/**\n\t *\n\t */\n\tpublic y:number;\n\n\t/**\n\t *\n\t */\n\tpublic z:number;\n\n\t/**\n\t *\n\t */\n\tpublic radius:number;\n\n\t/**\n\t * Create a Sphere with ABCD coefficients\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, radius:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.radius = radius;\n\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar px:number = position.x - this.x, py:number = position.y - this.y, pz:number = position.z - this.z;\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\n\t\tvar rayEntryDistance:number;\n\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\n\t\tvar c:number = px*px + py*py + pz*pz - this.radius*this.radius;\n\t\tvar det:number = b*b - 4*a*c;\n\n\t\tif (det >= 0) { // ray goes through sphere\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\n\t\t\tif (rayEntryDistance >= 0) {\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\n\t\t\t\ttargetNormal.normalize();\n\n\t\t\t\treturn rayEntryDistance;\n\t\t\t}\n\t\t}\n\n\t\t// ray misses sphere\n\t\treturn -1;\n\t}\n\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\tvar px:number = position.x - this.x;\n\t\tvar py:number = position.y - this.y;\n\t\tvar pz:number = position.z - this.z;\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\n\t\treturn distance <= this.radius;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\n\t}\n}\n\nexport = Sphere;",
    "import Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nclass UVTransform\n{\n\tprivate _uvMatrix:Matrix = new Matrix();\n\tprivate _uvMatrixDirty:boolean;\n\n\tprivate _rotation:number = 0;\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\tprivate _offsetU:number = 0;\n\tprivate _offsetV:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get offsetU():number\n\t{\n\t\treturn this._offsetU;\n\t}\n\n\tpublic set offsetU(value:number)\n\t{\n\t\tif (value == this._offsetU)\n\t\t\treturn;\n\n\t\tthis._offsetU = value;\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get offsetV():number\n\t{\n\t\treturn this._offsetV;\n\t}\n\n\tpublic set offsetV(value:number)\n\t{\n\t\tif (value == this._offsetV)\n\t\t\treturn;\n\n\t\tthis._offsetV = value;\n\t\tthis._uvMatrixDirty = true;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rotation():number\n\t{\n\t\treturn this._rotation;\n\t}\n\n\tpublic set rotation(value:number)\n\t{\n\t\tif (value == this._rotation)\n\t\t\treturn;\n\n\t\tthis._rotation = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (value == this._scaleU)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (value == this._scaleV)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get matrix():Matrix\n\t{\n\t\tif (this._uvMatrixDirty)\n\t\t\tthis.updateUVMatrix();\n\n\t\treturn this._uvMatrix;\n\t}\n\n\tconstructor()\n\t{\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate updateUVMatrix()\n\t{\n\t\tthis._uvMatrix.identity();\n\n\t\tif (this._rotation != 0)\n\t\t\tthis._uvMatrix.rotate(this._rotation);\n\n\t\tif (this._scaleU != 1 || this._scaleV != 1)\n\t\t\tthis._uvMatrix.scale(this._scaleU, this._scaleV);\n\n\t\tthis._uvMatrix.translate(this._offsetU, this._offsetV);\n\n\t\tthis._uvMatrixDirty = false;\n\t}\n}\n\nexport = UVTransform;",
    "/**\n * The Vector3D class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n *\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n *\n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nclass Vector3D\n{\n\t/**\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\n\t */\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\n\n\t/**\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\n\t */\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\n\n\t/**\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\n\t */\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\n\n\t/**\n\t * The first element of a Vector3D object, such as the x coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/*\n\t *The second element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The third element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic z:number;\n\n\t/**\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\n\t * and z properties) can hold data such as the angle of rotation. The\n\t * default value is 0.\n\t *\n\t * <p>Quaternion notation employs an angle as the fourth element in\n\t * its calculation of three-dimensional rotation. The w property can\n\t * be used to define the angle of rotation about the Vector3D object.\n\t * The combination of the rotation angle and the coordinates (x,y,z)\n\t * determines the display object's orientation.</p>\n\t *\n\t * <p>In addition, the w property can be used as a perspective warp\n\t * factor for a projected three-dimensional position or as a projection\n\t * transform value in representing a three-dimensional coordinate\n\t * projected into the two-dimensional space. For example, you can\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\n\t * property, that, when applied to a Vector3D object, produces a\n\t * transform value in the Vector3D object's fourth element (the w\n\t * property). Dividing the Vector3D object's other elements by the\n\t * transform value then produces a projected Vector3D object. You can\n\t * use the <code>Vector3D.project()</code> method to divide the first\n\t * three elements of a Vector3D object by its fourth element.</p>\n\t */\n\tpublic w:number;\n\n\t/**\n\t * The length, magnitude, of the current Vector3D object from the\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\n\t * property is ignored. A unit vector has a length or magnitude of\n\t * one.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.lengthSquared);\n\t}\n\n\t/**\n\t * The square of the length of the current Vector3D object, calculated\n\t * using the x, y, and z properties. The w property is ignored. Use the\n\t * <code>lengthSquared()</code> method whenever possible instead of the\n\t * slower <code>Math.sqrt()</code> method call of the\n\t * <code>Vector3D.length()</code> method.\n\t */\n\tpublic get lengthSquared():number\n\t{\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\n\t}\n\n\t/**\n\t * Creates an instance of a Vector3D object. If you do not specify a\n\t * parameter for the constructor, a Vector3D object is created with\n\t * the elements (0,0,0,0).\n\t *\n\t * @param x The first element, such as the x coordinate.\n\t * @param y The second element, such as the y coordinate.\n\t * @param z The third element, such as the z coordinate.\n\t * @param w An optional element for additional data such as the angle\n\t *          of rotation.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Adds the value of the x, y, and z elements of the current Vector3D\n\t * object to the values of the x, y, and z elements of another Vector3D\n\t * object. The <code>add()</code> method does not change the current\n\t * Vector3D object. Instead, it returns a new Vector3D object with\n\t * the new values.\n\t *\n\t * <p>The result of adding two vectors together is a resultant vector.\n\t * One way to visualize the result is by drawing a vector from the\n\t * origin or tail of the first vector to the end or head of the second\n\t * vector. The resultant vector is the distance between the origin\n\t * point of the first vector and the end point of the second vector.\n\t * </p>\n\t */\n\tpublic add(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\n\t}\n\n\t/**\n\t * Returns the angle in radians between two vectors. The returned angle\n\t * is the smallest radian the first Vector3D object rotates until it\n\t * aligns with the second Vector3D object.\n\t *\n\t * <p>The <code>angleBetween()</code> method is a static method. You\n\t * can use it directly as a method of the Vector3D class.</p>\n\t *\n\t * <p>To convert a degree to a radian, you can use the following\n\t * formula:</p>\n\t *\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\n\t *\n\t * @param a The first Vector3D object.\n\t * @param b The second Vector3D object.\n\t * @returns The angle between two Vector3D objects.\n\t */\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\n\t{\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is an exact copy of the current\n\t * Vector3D object.\n\t *\n\t * @returns A new Vector3D object that is a copy of the current\n\t * Vector3D object.\n\t */\n\tpublic clone():Vector3D\n\t{\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\n\t}\n\n\tpublic static combine(a:Vector3D, b:Vector3D, ascl:number, bscl:number):Vector3D\n\t{\n\t\treturn new Vector3D(a.x*ascl + b.x*bscl, a.y*ascl + b.y*bscl, a.z*ascl + b.z*bscl);\n\t}\n\n\t/**\n\t * Copies all of vector data from the source Vector3D object into the\n\t * calling Vector3D object.\n\t *\n\t * @param src The Vector3D object from which to copy the data.\n\t */\n\tpublic copyFrom(src:Vector3D):void\n\t{\n\t\tthis.x = src.x;\n\t\tthis.y = src.y;\n\t\tthis.z = src.z;\n\t\tthis.w = src.w;\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is perpendicular (at a right\n\t * angle) to the current Vector3D and another Vector3D object. If the\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\n\t * Vector3D objects are parallel to each other.\n\t *\n\t * <p>You can use the normalized cross product of two vertices of a\n\t * polygon surface with the normalized vector of the camera or eye\n\t * viewpoint to get a dot product. The value of the dot product can\n\t * identify whether a surface of a three-dimensional object is hidden\n\t * from the viewpoint.</p>\n\t *\n\t * @param a A second Vector3D object.\n\t * @returns A new Vector3D object that is perpendicular to the current\n\t *          Vector3D object and the Vector3D object specified as the\n\t *          parameter.\n\t */\n\tpublic crossProduct(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\n\t}\n\n\t/**\n\t * Decrements the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of\n\t * specified Vector3D object. Unlike the\n\t * <code>Vector3D.subtract()</code> method, the\n\t * <code>decrementBy()</code> method changes the current Vector3D\n\t * object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object containing the values to subtract from\n\t *          the current Vector3D object.\n\t */\n\tpublic decrementBy(a:Vector3D)\n\t{\n\t\tthis.x -= a.x;\n\t\tthis.y -= a.y;\n\t\tthis.z -= a.z;\n\t}\n\n\t/**\n\t * Returns the distance between two Vector3D objects. The\n\t * <code>distance()</code> method is a static method. You can use it\n\t * directly as a method of the Vector3D class to get the Euclidean\n\t * distance between two three-dimensional points.\n\t *\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\n\t * @returns The distance between two Vector3D objects.\n\t */\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\n\t{\n\t\tvar x:number = (pt1.x - pt2.x);\n\t\tvar y:number = (pt1.y - pt2.y);\n\t\tvar z:number = (pt1.z - pt2.z);\n\t\treturn Math.sqrt(x*x + y*y + z*z);\n\t}\n\n\t/**\n\t * If the current Vector3D object and the one specified as the\n\t * parameter are unit vertices, this method returns the cosine of the\n\t * angle between the two vertices. Unit vertices are vertices that\n\t * point to the same direction but their length is one. They remove the\n\t * length of the vector as a factor in the result. You can use the\n\t * <code>normalize()</code> method to convert a vector to a unit\n\t * vector.\n\t *\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\n\t * vertices. It is also used in backface culling or lighting\n\t * calculations. Backface culling is a procedure for determining which\n\t * surfaces are hidden from the viewpoint. You can use the normalized\n\t * vertices from the camera, or eye, viewpoint and the cross product of\n\t * the vertices of a polygon surface to get the dot product. If the dot\n\t * product is less than zero, then the surface is facing the camera or\n\t * the viewer. If the two unit vertices are perpendicular to each\n\t * other, they are orthogonal and the dot product is zero. If the two\n\t * vertices are parallel to each other, the dot product is one.</p>\n\t *\n\t * @param a The second Vector3D object.\n\t * @returns A scalar which is the dot product of the current Vector3D\n\t *          object and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#crossProduct()\n\t * @see away.geom.Vector3D#normalize()\n\t */\n\tpublic dotProduct(a:Vector3D):number\n\t{\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\n\t}\n\n\t/**\n\t * Determines whether two Vector3D objects are equal by comparing the\n\t * x, y, and z elements of the current Vector3D object with a\n\t * specified Vector3D object. If the values of these elements are the\n\t * same, the two Vector3D objects are equal. If the second optional\n\t * parameter is set to true, all four elements of the Vector3D objects,\n\t * including the w property, are compared.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is equal\n\t *          to the current Vector3D object; false if it is not equal.\n\t */\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\n\t}\n\n\t/**\n\t * Increments the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of a\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n\t * method, the <code>incrementBy()</code> method changes the current\n\t * Vector3D object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object to be added to the current Vector3D\n\t *          object.\n\t */\n\tpublic incrementBy(a:Vector3D)\n\t{\n\t\tthis.x += a.x;\n\t\tthis.y += a.y;\n\t\tthis.z += a.z;\n\t}\n\n\t/**\n\t * Compares the elements of the current Vector3D object with the\n\t * elements of a specified Vector3D object to determine whether they\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\n\t * value of all the elements of the two vertices are equal, or the\n\t * result of the comparison is within the tolerance range. The\n\t * difference between two elements must be less than the number\n\t * specified as the tolerance parameter. If the third optional\n\t * parameter is set to <code>true</code>, all four elements of the\n\t * Vector3D objects, including the <code>w</code> property, are\n\t * compared. Otherwise, only the x, y, and z elements are included in\n\t * the comparison.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param tolerance A number determining the tolerance factor. If the\n\t *                  difference between the values of the Vector3D\n\t *                  element specified in the toCompare parameter and\n\t *                  the current Vector3D element is less than the\n\t *                  tolerance number, the two values are considered\n\t *                  nearly equal.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is nearly\n\t *          equal to the current Vector3D object; false if it is not\n\t *          equal.\n\t *\n\t * @see away.geom.Vector3D#equals()\n\t */\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\n\t{\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n\t}\n\n\t/**\n\t * Sets the current Vector3D object to its inverse. The inverse object\n\t * is also considered the opposite of the original object. The value of\n\t * the x, y, and z properties of the current Vector3D object is changed\n\t * to -x, -y, and -z.\n\t */\n\tpublic negate():void\n\t{\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t\tthis.z = -this.z;\n\t}\n\n\t/**\n\t * Converts a Vector3D object to a unit vector by dividing the first\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\n\t * are vertices that have a direction but their length is one. They\n\t * simplify vector calculations by removing length as a factor.\n\t */\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current\n\t *                  Vector3D object is (0,3,4), and you normalize it to\n\t *                  1, the point returned is at(0,0.6,0.8).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\tthis.z *= invLength;\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\n\t * <code>z</code> properties of the current Vector3D object by the\n\t * value of its <code>w</code> property.\n\t *\n\t * <p>If the current Vector3D object is the result of multiplying a\n\t * Vector3D object by a projection Matrix3D object, the w property can\n\t * hold the transform value. The <code>project()</code> method then can\n\t * complete the projection by dividing the elements by the\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n\t * property to create a projection Matrix3D object.</p>\n\t */\n\tpublic project():void\n\t{\n\t\tthis.x /= this.w;\n\t\tthis.y /= this.w;\n\t\tthis.z /= this.w;\n\t}\n\n\t/**\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\n\t * number specified in the parameter. For example, if the vector is\n\t * scaled by ten, the result is a vector that is ten times longer. The\n\t * scalar can also change the direction of the vector. Multiplying the\n\t * vector by a negative number reverses its direction.\n\t *\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\n\n\t */\n\tpublic scaleBy(s:number):void\n\t{\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\t\tthis.z *= s;\n\t}\n\n\t/**\n\t * Sets the members of Vector3D to the specified values\n\t *\n\t * @param xa The first element, such as the x coordinate.\n\t * @param ya The second element, such as the y coordinate.\n\t * @param za The third element, such as the z coordinate.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number):void\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t}\n\n\t/**\n\t * Subtracts the value of the x, y, and z elements of the current\n\t * Vector3D object from the values of the x, y, and z elements of\n\t * another Vector3D object. The <code>subtract()</code> method does not\n\t * change the current Vector3D object. Instead, this method returns a\n\t * new Vector3D object with the new values.\n\t *\n\t * @param a The Vector3D object to be subtracted from the current\n\t *          Vector3D object.\n\t * @returns A new Vector3D object that is the difference between the\n\t *          current Vector3D and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#decrementBy()\n\t */\n\tpublic subtract(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n\t}\n\n\t/**\n\t * Returns a string representation of the current Vector3D object. The\n\t * string contains the values of the x, y, and z properties.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n\t}\n}\n\nexport = Vector3D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nclass AssetBase extends EventDispatcher\n{\n\tpublic static ID_COUNT:number = 0;\n\n\tprivate _originalName:string;\n\tprivate _namespace:string;\n\tprivate _name:string;\n\tprivate _id:number;\n\tprivate _full_path:Array<string>;\n\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\n\n\tconstructor(name:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._id = AssetBase.ID_COUNT++;\n\n\t\tif (name == null)\n\t\t\tname = 'null';\n\n\t\tthis._name = name;\n\t\tthis._originalName = name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * The original name used for this asset in the resource (e.g. file) in which\n\t * it was found. This may not be the same as <code>name</code>, which may\n\t * have changed due to of a name conflict.\n\t */\n\tpublic get originalName():string\n\t{\n\t\treturn this._originalName;\n\t}\n\n\t/**\n\t * A unique id for the asset, used to identify assets in an associative array\n\t */\n\tpublic get id():number\n\t{\n\t\treturn this._id;\n\t}\n\n\tpublic get name():string\n\t{\n\t\treturn this._name;\n\t}\n\n\tpublic set name(val:string)\n\t{\n\t\tvar prev:string;\n\n\t\tprev = this._name;\n\t\tthis._name = val;\n\n\t\tif (this._name == null)\n\t\t\tthis._name = 'null';\n\n\t\tthis.updateFullPath();\n\n\t\t//if (hasEventListener(AssetEvent.ASSET_RENAME))\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_RENAME, <IAsset> this, prev));\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get assetNamespace():string\n\t{\n\t\treturn this._namespace;\n\t}\n\n\tpublic get assetFullPath():Array<string>\n\t{\n\t\treturn this._full_path;\n\t}\n\n\tpublic assetPathEquals(name:string, ns:string):boolean\n\t{\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\n\t}\n\n\n\tpublic isAsset(assetClass:IAssetClass):boolean\n\t{\n\t\treturn this.assetType == assetClass.assetType;\n\t}\n\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\n\t{\n\n\t\tthis._name = name? name : 'null';\n\t\tthis._namespace = ns? ns : AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (overrideOriginal)\n\t\t\tthis._originalName = this._name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\tprivate updateFullPath():void\n\t{\n\t\tthis._full_path = [ this._namespace, this._name ];\n\t}\n}\n\nexport = AssetBase;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibrary\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport LoaderSession\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport ConflictStrategy\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategy\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\n * Its purpose is to create a container for 3D data management, both before and after parsing.\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\n */\nclass AssetLibraryBundle extends EventDispatcher\n{\n\tpublic static _iInstances:Object = new Object();\n\n\tprivate _loaderSessions:Array<LoaderSession>;\n\tprivate _strategy:ConflictStrategyBase;\n\tprivate _strategyPreference:string;\n\tprivate _assets:Array<IAsset>;\n\tprivate _assetDictionary:Object;\n\tprivate _assetDictDirty:boolean;\n\tprivate _loaderSessionsGarbage:Array<LoaderSession> = new Array<LoaderSession>();\n\tprivate _gcTimeoutIID:number;\n\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\t/**\n\t * Creates a new <code>AssetLibraryBundle</code> object.\n\t *\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\n\t\tthis._assetDictionary = new Object();\n\t\tthis._loaderSessions = new Array<LoaderSession>();\n\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\n\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibrary as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\tif (!key)\n\t\t\tkey = 'default';\n\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\n\n\t\treturn AssetLibraryBundle._iInstances[key];\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParsers(parserClasses:Object[])\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\n\t * is used which means that a numeric suffix is appended to one of the assets. The\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\n\t * be renamed.\n\t *\n\t * @see naming.ConflictStrategy\n\t * @see AssetLibrary.conflictPrecedence\n\t */\n\tpublic get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn this._strategy;\n\t}\n\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\n\t\tif (!val)\n\t\t\tthrow new Error('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\n\n\t\tthis._strategy = val.create();\n\n\t}\n\n\t/**\n\t * Defines which asset should have precedence when resolving a naming conflict between\n\t * two assets of which one has just been renamed by the user or by a parser. By default\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\n\t *\n\t * This property is ignored for conflict strategies that do not actually rename an\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\n\t *\n\t * @see away.library.ConflictPrecedence\n\t * @see away.library.ConflictStrategy\n\t */\n\tpublic get conflictPrecedence():string\n\t{\n\t\treturn this._strategyPreference;\n\t}\n\n\tpublic set conflictPrecedence(val:string)\n\t{\n\t\tthis._strategyPreference = val;\n\t}\n\n\t/**\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\n\t * namespace. A \"null\" filter value means no filter of that type is used.\n\t *\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\n\t * null to not filter on asset type.\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\n\t * included in the iteration or not. This needs to be a function that takes a single\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\n\t *\n\t * @see away.library.AssetType\n\t */\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis.getLoaderSession().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads a resource from existing data in memory.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis.getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tpublic getLoaderSession():LoaderSession\n\t{\n\t\tvar loader:LoaderSession = new LoaderSession();\n\n\t\tthis._loaderSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader;\n\t}\n\t\n\tpublic disposeLoaderSession(loader:LoaderSession)\n\t{\n\t\tvar index:number = this._loaderSessions.indexOf(loader);\n\t\tthis._loaderSessions.splice(index, 1);\n\n\t\t// Add loader to a garbage array - for a collection sweep and kill\n\t\tthis._loaderSessionsGarbage.push(loader);\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\treturn null;\n\n\t\treturn this._assetDictionary[ns][name];\n\n\t}\n\tpublic getAllAssets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\t/**\n\t * Adds an asset to the asset library, first making sure that it's name is unique\n\t * using the method defined by the <code>conflictStrategy</code> and\n\t * <code>conflictPrecedence</code> properties.\n\t */\n\tpublic addAsset(asset:IAsset)\n\t{\n\t\tvar ns:string;\n\t\tvar old:IAsset;\n\n\t\t// Bail if asset has already been added.\n\t\tif (this._assets.indexOf(asset) >= 0)\n\t\t\treturn;\n\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\n\t\tns = asset.assetNamespace || AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (old != null)\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\n\n\t\t//create unique-id (for now this is used in AwayBuilder only\n\t\t//asset.id = IDUtil.createUID();\n\n\t\t// Add it\n\t\tthis._assets.push(asset);\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\tthis._assetDictionary[ns] = new Object();\n\n\t\tthis._assetDictionary[ns][asset.name] = asset;\n\n\t\tasset.addEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\t}\n\n\t/**\n\t * Removes an asset from the library, and optionally disposes that asset by calling\n\t * it's disposeAsset() method (which for most assets is implemented as a default\n\t * version of that type's dispose() method.\n\t *\n\t * @param asset The asset which should be removed from this library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tvar idx:number;\n\n\t\tthis.removeAssetFromDict(asset);\n\n\t\tasset.removeEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\n\t\tidx = this._assets.indexOf(asset);\n\n\t\tif (idx >= 0)\n\t\t\tthis._assets.splice(idx, 1);\n\n\t\tif (dispose)\n\t\t\tasset.dispose();\n\t}\n\n\t/**\n\t * Removes an asset which is specified using name and namespace.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\tvar asset:IAsset = this.getAsset(name, ns);\n\n\t\tif (asset)\n\t\t\tthis.removeAsset(asset, dispose);\n\n\t\treturn asset;\n\t}\n\n\t/**\n\t * Removes all assets from the asset library, optionally disposing them as they\n\t * are removed.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAllAssets(dispose:boolean = true)\n\t{\n\t\tif (dispose) {\n\t\t\tvar asset:IAsset;\n\t\t\tvar len:number = this._assets.length;\n\t\t\tfor (var c:number = 0; c < len; c++) {\n\t\t\t\tasset = this._assets[c];\n\t\t\t\tasset.dispose();\n\t\t\t}\n\t\t}\n\n\t\tthis._assets.length = 0;\n\t\tthis.rehashAssetDict();\n\t}\n\n\t/**\n\t * Removes all assets belonging to a particular namespace (null for default)\n\t * from the asset library, and optionall disposes them by calling their\n\t * disposeAsset() method.\n\t *\n\t * @param ns The namespace from which all assets should be removed.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tvar idx:number = 0;\n\t\tvar asset:IAsset;\n\t\tvar old_assets:IAsset[];\n\n\t\t// Empty the assets vector after having stored a copy of it.\n\t\t// The copy will be filled with all assets which weren't removed.\n\t\told_assets = this._assets.concat();\n\t\tthis._assets.length = 0;\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tvar len:number = old_assets.length;\n\t\tfor (var d:number = 0; d < len; d++) {\n\t\t\tasset = old_assets[d];\n\n\t\t\t// Remove from dict if in the supplied namespace. If not,\n\t\t\t// transfer over to the new vector.\n\t\t\tif (asset.assetNamespace == ns) {\n\t\t\t\tif (dispose)\n\t\t\t\t\tasset.dispose();\n\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\n\t\t\t\t// test that is not needed since we know that the namespace\n\t\t\t\t// will be empty when loop finishes.\n\t\t\t\tthis.removeAssetFromDict(asset, false);\n\t\t\t} else {\n\t\t\t\tthis._assets[idx++] = asset;\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t for each (asset in old_assets) {\n\t\t // Remove from dict if in the supplied namespace. If not,\n\t\t // transfer over to the new vector.\n\t\t if (asset.assetNamespace == ns) {\n\t\t if (dispose)\n\t\t asset.dispose();\n\n\t\t // Remove asset from dictionary, but don't try to auto-remove\n\t\t // the namespace, which will trigger an unnecessarily expensive\n\t\t // test that is not needed since we know that the namespace\n\t\t // will be empty when loop finishes.\n\t\t removeAssetFromDict(asset, false);\n\t\t } else\n\t\t _assets[idx++] = asset;\n\n\t\t }\n\t\t */\n\n\t\t// Remove empty namespace\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\n\t\t\tdelete this._assetDictionary[ns];\n\t}\n\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true)\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\n\n\t\t\tif (autoRemoveEmptyNamespace) {\n\n\t\t\t\tvar key:string;\n\t\t\t\tvar empty:boolean = true;\n\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (empty)\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic stopAllLoaderSessions()\n\t{\n\t\tvar len:number = this._loaderSessions.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis.killloaderSession(this._loaderSessions[i]);\n\n\t\tthis._loaderSessions = new Array<LoaderSession>();\n\t}\n\n\tprivate rehashAssetDict()\n\t{\n\t\tvar asset:IAsset;\n\n\t\tthis._assetDictionary = {};\n\n\t\tvar len:number = this._assets.length;\n\t\tfor (var c:number = 0; c < len; c++) {\n\t\t\tasset = this._assets[c];\n\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\n\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\n\n\t\t}\n\n\t\tthis._assetDictDirty = false;\n\n\t}\n\n\t/**\n\t * Called when a an error occurs during loading.\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing.\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Only add asset to library the first time.\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\n\t\t\tthis.addAsset(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tvar loader:LoaderSession = <LoaderSession> event.target;\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis.disposeLoaderSession(loader);\n\t}\n\n\tprivate loaderSessionGC():void\n\t{\n\t\tvar loader:LoaderSession;\n\n\t\twhile (this._loaderSessionsGarbage.length > 0) {\n\t\t\tloader = this._loaderSessionsGarbage.pop();\n\t\t\tthis.killloaderSession(loader);\n\t\t}\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate killloaderSession(loader:LoaderSession)\n\t{\n\t\tloader.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t\tloader.stop();\n\t}\n\n\t/**\n\t * Called when unespected error occurs\n\t */\n\t/*\n\t private onResourceError() : void\n\t {\n\t var msg:string = \"Unexpected parser error\";\n\t if(hasEventListener(LoaderEvent.DEPENDENCY_ERROR)){\n\t var re:LoaderEvent = new LoaderEvent(LoaderEvent.DEPENDENCY_ERROR, \"\");\n\t dispatchEvent(re);\n\t } else{\n\t throw new Error(msg);\n\t }\n\t }\n\t */\n\n\tprivate onAssetRename(event:AssetEvent)\n\t{\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\n\n\t\tif (old != null) {\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\n\t\t} else {\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\n\n\t\t\tif (dict == null)\n\t\t\t\treturn;\n\n\t\t\tdict[event.assetPrevName] = null;\n\t\t\tdict[event.asset.name] = event.asset;\n\t\t}\n\t}\n\n\tprivate onAssetConflictResolved(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event.clone());\n\t}\n}\n\nexport = AssetLibraryBundle;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass AssetLibraryIterator\n{\n\n\tprivate  _assets:Array<IAsset>;\n\tprivate _filtered:Array<IAsset>;\n\n\tprivate _idx:number;\n\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tthis._assets = assets;\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\tpublic get currentAsset():IAsset\n\t{\n\t\t// Return current, or null if no current\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\n\t}\n\n\tpublic get numAssets():number\n\t{\n\t\treturn this._filtered.length;\n\t}\n\n\tpublic next():IAsset\n\t{\n\t\tvar next:IAsset = null;\n\n\t\tif (this._idx < this._filtered.length)\n\t\t\tnext = this._filtered[this._idx];\n\n\t\tthis._idx++;\n\n\t\treturn next;\n\t}\n\n\tpublic reset()\n\t{\n\t\tthis._idx = 0;\n\t}\n\n\tpublic setIndex(index:number)\n\t{\n\t\tthis._idx = index;\n\t}\n\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tif (assetTypeFilter || namespaceFilter) {\n\n\t\t\tvar idx:number;\n\t\t\tvar asset:IAsset;\n\n\n\t\t\tidx = 0;\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\n\n\t\t\tvar l:number = this._assets.length;\n\n\t\t\tfor (var c:number = 0; c < l; c++) {\n\n\t\t\t\tasset = <IAsset> this._assets[c];\n\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._filtered[idx++] = asset;\n\n\t\t\t}\n\n\t\t\t/*\n\t\t\t for each (asset in _assets) {\n\t\t\t // Skip this assets if filtering on type and this is wrong type\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\n\t\t\t if (filterFunc != null && !filterFunc(asset))\n\t\t\t continue;\n\n\t\t\t _filtered[idx++] = asset;\n\t\t\t }\n\t\t\t */\n\n\t\t} else {\n\t\t\tthis._filtered = this._assets;\n\t\t}\n\t}\n}\n\nexport = AssetLibraryIterator;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibraryBundle\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport LoaderSession\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\n */\nclass AssetLibrary\n{\n\t/**\n\t * Creates a new <code>AssetLibrary</code> object.\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t//*/\n\t/**\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibraryBundle as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\treturn AssetLibraryBundle.getInstance(key);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParser(parserClass)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Short-hand for conflictStrategy property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictStrategy\n\t */\n\tpublic static get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\n\t}\n\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\n\t}\n\n\t/**\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictPrecedence\n\t */\n\tpublic static get conflictPrecedence():string\n\t{\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\n\t}\n\n\tpublic static set conflictPrecedence(val:string)\n\t{\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\n\t}\n\n\t/**\n\t * Short-hand for createIterator() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.createIterator()\n\t */\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Short-hand for load() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.load()\n\t */\n\tpublic static load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tAssetLibrary.getBundle().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Short-hand for loadData() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.loadData()\n\t */\n\tpublic static loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tAssetLibrary.getBundle().loadData(data, context, ns, parser);\n\t}\n\n\tpublic static stopLoad()\n\t{\n\t\tAssetLibrary.getBundle().stopAllLoaderSessions();\n\t}\n\n\tpublic static getLoaderSession():LoaderSession\n\t{\n\t\treturn AssetLibrary.getBundle().getLoaderSession();\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAllAssets():Array<IAsset>\n\t{\n\t\treturn AssetLibrary.getBundle().getAllAssets();\n\t}\n\n\t/**\n\t * Short-hand for addEventListener() method on default asset library bundle.\n\t */\n\tpublic static addEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for removeEventListener() method on default asset library bundle.\n\t */\n\tpublic static removeEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for hasEventListener() method on default asset library bundle.\n\n\t public static hasEventListener(type:string):boolean\n\t {\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\n\t}\n\n\t public static willTrigger(type:string):boolean\n\t {\n\t\treturn getBundle().willTrigger(type);\n\t}\n\t */\n\n\t/**\n\t * Short-hand for addAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.addAsset()\n\t */\n\tpublic static addAsset(asset:IAsset)\n\t{\n\t\tAssetLibrary.getBundle().addAsset(asset);\n\t}\n\n\t/**\n\t * Short-hand for removeAsset() method on default asset library bundle.\n\t *\n\t * @param asset The asset which should be removed from the library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAsset()\n\t */\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAssetByName()\n\t */\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAllAssets()\n\t */\n\tpublic static removeAllAssets(dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\n\t */\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\n\t}\n}\n\nexport = AssetLibrary;",
    "/**\n * Enumaration class for precedence when resolving naming conflicts in the library.\n *\n * @see away.library.AssetLibrary.conflictPrecedence\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategy\n */\nclass ConflictPrecedence\n{\n\t/**\n\t * Signals that in a conflict, the previous owner of the conflicting name\n\t * should be favored (and keep it's name) and that the newly renamed asset\n\t * is reverted to a non-conflicting name.\n\t */\n\tpublic static FAVOR_OLD:string = 'favorOld';\n\n\t/**\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\n\t * it's newly defined name) and that the previous owner of that name gets\n\t * renamed to a non-conflicting name.\n\t */\n\tpublic static FAVOR_NEW:string = 'favorNew';\n}\n\nexport = ConflictPrecedence;",
    "import ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\n/**\n * Abstract base class for naming conflict resolution classes. Extend this to create a\n * strategy class which the asset library can use to resolve asset naming conflicts, or\n * use one of the bundled concrete strategy classes:\n *\n * <ul>\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\n * </ul>\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.ConflictStrategy\n * @see away.library.IgnoreConflictStrategy\n * @see away.library.ErrorConflictStrategy\n * @see away.library.NumSuffixConflictStrategy\n */\nclass ConflictStrategyBase\n{\n\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\n\t * classes.\n\t */\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\n\t * would break any state caching that happens inside the strategy class.\n\t */\n\tpublic create():ConflictStrategyBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\n\t * the conflict resolution by applying the new names and dispatching the correct events.\n\t */\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar loser_prev_name:string;\n\t\tvar winner:IAsset;\n\t\tvar loser:IAsset;\n\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\n\n\t\tloser_prev_name = loser.name;\n\n\t\tassetsDictionary[winner.name] = winner;\n\t\tassetsDictionary[nonConflictingName] = loser;\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\n\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\n\t}\n}\n\nexport = ConflictStrategyBase;",
    "import ConflictStrategyBase\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport ErrorConflictStrategy\t\t= require(\"awayjs-core/lib/library/ErrorConflictStrategy\");\nimport IgnoreConflictStrategy\t\t= require(\"awayjs-core/lib/library/IgnoreConflictStrategy\");\nimport NumSuffixConflictStrategy\t= require(\"awayjs-core/lib/library/NumSuffixConflictStrategy\");\n\n/**\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\n * property on an AssetLibrary to define how that library resolves naming conflicts.\n *\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategyBase\n */\nclass ConflictStrategy\n{\n\t/**\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\n\t * a numeric suffix appended to the base name.\n\t */\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\n\n\t/**\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\n\t */\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\n\n\t/**\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\n\t * to have the library automatically rename assets to avoid such conflicts.\n\t */\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\n\n\tconstructor(include?:ConflictStrategyBase)\n\t{\n\t\t//TODO: find out why typescript d.ts files do not include this class\n\t}\n}\n\nexport = ConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass ErrorConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new Error('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new ErrorConflictStrategy();\n\t}\n}\n\nexport = ErrorConflictStrategy;",
    "class IDUtil\n{\n\t/**\n\t *  @private\n\t *  Char codes for 0123456789ABCDEF\n\t */\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\n\n\t/**\n\t *  Generates a UID (unique identifier) based on ActionScript's\n\t *  pseudo-random number generator and the current time.\n\t *\n\t *  <p>The UID has the form\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\n\t *\n\t *  <p>This UID will not be truly globally unique; but it is the best\n\t *  we can do without player support for UID generation.</p>\n\t *\n\t *  @return The newly-generated UID.\n\t *\n\t *  @langversion 3.0\n\t *  @playerversion Flash 9\n\t *  @playerversion AIR 1.1\n\t *  @productversion Flex 3\n\t */\n\tpublic static createUID():string\n\t{\n\t\tvar uid = new Array(36);\n\t\tvar index:number = 0;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\t\tfor (j = 0; j < 4; j++)\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\t\t}\n\n\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\tvar time:number = new Date().getTime();\n\t\t// Note: time is the number of milliseconds since 1970,\n\t\t// which is currently more than one trillion.\n\t\t// We use the low 8 hex digits of this number in the UID.\n\t\t// Just in case the system clock has been reset to\n\t\t// Jan 1-4, 1970 (in which case this number could have only\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\n\t\t// before taking the low digits.\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = timeString.charCodeAt(i);\n\n\t\tfor (i = 0; i < 4; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\treturn String.fromCharCode.apply(null, uid);\n\t}\n\n\t/**\n\t * Returns the decimal representation of a hex digit.\n\t * @private\n\n\t private static getDigit(hex:string):number\n\t {\n\t\tswitch (hex) {\n\t\t\tcase \"A\":\n\t\t\tcase \"a\":\n\t\t\t\treturn 10;\n\t\t\tcase \"B\":\n\t\t\tcase \"b\":\n\t\t\t\treturn 11;\n\t\t\tcase \"C\":\n\t\t\tcase \"c\":\n\t\t\t\treturn 12;\n\t\t\tcase \"D\":\n\t\t\tcase \"d\":\n\t\t\t\treturn 13;\n\t\t\tcase \"E\":\n\t\t\tcase \"e\":\n\t\t\t\treturn 14;\n\t\t\tcase \"F\":\n\t\t\tcase \"f\":\n\t\t\t\treturn 15;\n\t\t\tdefault:\n\t\t\t\treturn new uint(hex);\n\t\t}\n\t}\n\t */\n\n}\n\nexport = IDUtil;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass IgnoreConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\t// Do nothing, ignore the fact that there is a conflict.\n\t\treturn;\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new IgnoreConflictStrategy();\n\t}\n}\n\nexport = IgnoreConflictStrategy;",
    "class LoaderContext\n{\n\tpublic static UNDEFINED:number = 0;\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\n\tpublic static MULTIPASS_MATERIALS:number = 2;\n\n\tprivate _includeDependencies:boolean;\n\tprivate _dependencyBaseUrl:string;\n\tprivate _embeddedDataByUrl:Object;\n\tprivate _remappedUrls:Object;\n\tprivate _materialMode:number;\n\n\tprivate _overrideAbsPath:boolean;\n\tprivate _overrideFullUrls:boolean;\n\n\t/**\n\t * LoaderContext provides configuration for the LoaderSession load() and parse() operations.\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\n\t * embedded data.\n\t *\n\t * @see away.loading.LoaderSession\n\t */\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\n\t{\n\t\tthis._includeDependencies = includeDependencies;\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\n\t\tthis._embeddedDataByUrl = {};\n\t\tthis._remappedUrls = {};\n\t\tthis._materialMode = LoaderContext.UNDEFINED;\n\t}\n\n\t/**\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\n\t * parseData() operations) should be automatically loaded. Defaults to true.\n\t */\n\tpublic get includeDependencies():boolean\n\t{\n\t\treturn this._includeDependencies;\n\t}\n\n\tpublic set includeDependencies(val:boolean)\n\t{\n\t\tthis._includeDependencies = val;\n\t}\n\n\t/**\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\n\t * Options:\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\n\t *\n\t */\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic set materialMode(materialMode:number)\n\t{\n\t\tthis._materialMode = materialMode;\n\t}\n\n\t/**\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\n\t * Absolute paths will not be affected by the value of this property.\n\t */\n\tpublic get dependencyBaseUrl():string\n\t{\n\t\treturn this._dependencyBaseUrl;\n\t}\n\n\tpublic set dependencyBaseUrl(val:string)\n\t{\n\t\tthis._dependencyBaseUrl = val;\n\t}\n\n\t/**\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideAbsolutePaths():boolean\n\t{\n\t\treturn this._overrideAbsPath;\n\t}\n\n\tpublic set overrideAbsolutePaths(val:boolean)\n\t{\n\t\tthis._overrideAbsPath = val;\n\t}\n\n\t/**\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideFullURLs():boolean\n\t{\n\t\treturn this._overrideFullUrls;\n\t}\n\n\tpublic set overrideFullURLs(val:boolean)\n\t{\n\t\tthis._overrideFullUrls = val;\n\t}\n\n\t/**\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\n\t * expected by the loaded file.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param newUrl The URL from which away.should load the resource instead.\n\t *\n\t * @see mapUrlToData()\n\t */\n\tpublic mapUrl(originalUrl:string, newUrl:string)\n\t{\n\t\tthis._remappedUrls[originalUrl] = newUrl;\n\t}\n\n\t/**\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\n\t */\n\tpublic mapUrlToData(originalUrl:string, data:any)\n\t{\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether embedded data has been mapped to a particular URL.\n\t */\n\tpublic _iHasDataForUrl(url:string):boolean\n\t{\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns embedded data for a particular URL.\n\t */\n\tpublic _iGetDataForUrl(url:string):any\n\t{\n\t\treturn this._embeddedDataByUrl[url];\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether a replacement URL has been mapped to a particular URL.\n\t */\n\tpublic _iHasMappingForUrl(url:string):boolean\n\t{\n\t\treturn this._remappedUrls.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns new (replacement) URL for a particular original URL.\n\t */\n\tpublic _iGetRemappedUrl(originalUrl:string):string\n\t{\n\t\treturn this._remappedUrls[originalUrl];\n\t}\n}\n\nexport = LoaderContext;",
    "import LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport Image2DParser\t\t\t= require(\"awayjs-core/lib/parsers/Image2DParser\");\nimport ImageCubeParser\t\t\t= require(\"awayjs-core/lib/parsers/ImageCubeParser\");\nimport TextureAtlasParser\t\t= require(\"awayjs-core/lib/parsers/TextureAtlasParser\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport WaveAudioParser\t\t\t= require(\"awayjs-core/lib/parsers/WaveAudioParser\");\n\n\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n/**\n * Dispatched when an image asset dimensions are not a power of 2\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * LoaderSession can load any file format that away.supports (or for which a third-party parser\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\n * and for when the resource (or it's dependencies) have been loaded.\n *\n * The LoaderSession will not make assets available in any other way than through the dispatched\n * events. To store assets and make them available at any point from any module in an application,\n * use the AssetLibrary to load and manage assets.\n *\n * @see away.library.AssetLibrary\n */\nclass LoaderSession extends EventDispatcher\n{\n\tprivate _context:LoaderContext;\n\tprivate _uri:string;\n\tprivate _materialMode:number;\n\n\tprivate _errorHandlers:Array<Function>;\n\tprivate _parseErrorHandlers:Array<Function>;\n\n\tprivate _stack:Array<ResourceDependency>;\n\tprivate _baseDependency:ResourceDependency;\n\tprivate _currentDependency:ResourceDependency;\n\tprivate _namespace:string;\n\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\n\tprivate _onLoadCompleteDelegate:(event:Event) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\n\t// Image parser only parser that is added by default, to save file size.\n\tprivate static _parsers:Array<any> = new Array<any>(Image2DParser, ImageCubeParser, TextureAtlasParser, WaveAudioParser);\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parser The parser class to enable.\n\t *\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parser)\n\t{\n\t\tif (LoaderSession._parsers.indexOf(parser) < 0)\n\t\t\tLoaderSession._parsers.push(parser);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * LoaderSession can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parsers A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parsers:Array<Object>)\n\t{\n\t\tfor (var c:number = 0; c < parsers.length; c++)\n\t\t\tLoaderSession.enableParser(parsers[ c ]);\n\t}\n\n\t/**\n\t * Returns the base dependency of the loader\n\t */\n\tpublic get baseDependency():ResourceDependency\n\t{\n\t\treturn this._baseDependency;\n\t}\n\n\t/**\n\t * Create a new ResourceLoadSession object.\n\t */\n\tconstructor(materialMode:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = materialMode;\n\n\t\tthis._stack = new Array<ResourceDependency>();\n\t\tthis._errorHandlers = new Array<Function>();\n\t\tthis._parseErrorHandlers = new Array<Function>();\n\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t\tthis._onLoadCompleteDelegate = (event:Event) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\n\t */\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\n\t\tthis._context = context;\n\t\tthis._namespace = ns;\n\n\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\n\t\tthis.retrieveDependency(this._baseDependency);\n\t}\n\n\t/**\n\t * Loads a resource from already loaded data.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\n\t */\n\tpublic loadData(data:any, id:string, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._uri = id;\n\t\tthis._context = context;\n\t\tthis._namespace = ns;\n\n\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\n\t\tthis.retrieveDependency(this._baseDependency);\n\t}\n\n\t/**\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\n\t * stack when complete and continues on the top set.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveNext(parser:ParserBase = null)\n\t{\n\t\tif (this._currentDependency.dependencies.length) {\n\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\n\n\t\t\tthis._stack.push(this._currentDependency);\n\t\t\tthis.retrieveDependency(next);\n\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\n\n\t\t\tthis._currentDependency.parser._iResumeParsing();\n\t\t\tthis._stack.pop();\n\n\t\t} else if (this._stack.length) {\n\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\n\n\t\t\tthis._currentDependency = this._stack.pop();\n\n\t\t\tif (prev._iSuccess)\n\t\t\t\tprev.resolve();\n\n\t\t\tthis.retrieveNext(parser);\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.RESOURCE_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a single dependency.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveDependency(dependency:ResourceDependency)\n\t{\n\t\tvar data:any;\n\n\t\tif (this._context && this._context.materialMode != 0)\n\t\t\tthis._materialMode = this._context.materialMode;\n\n\t\tthis._currentDependency = dependency;\n\n\t\tdependency._iLoader = new URLLoader();\n\n\t\tthis.addEventListeners(dependency._iLoader);\n\n\t\t// Get already loaded (or mapped) data if available\n\t\tdata = dependency.data;\n\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\n\n\t\tif (data) {\n\t\t\tif (data.constructor === Function)\n\t\t\t\tdata = new data();\n\n\t\t\tdependency._iSetData(data);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// No need to parse. The parent parser is expecting this\n\t\t\t\t// to be raw data so it can be passed directly.\n\t\t\t\tdependency.resolve();\n\n\t\t\t\t// Move on to next dependency\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\tthis.parseDependency(dependency);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// Resolve URL and start loading\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// Always use binary for raw data loading\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t} else {\n\n\t\t\t\tif (!dependency.parser)\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\n\n\t\t\t\tif (dependency.parser) {\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\n\t\t\t\t} else {\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\n\t\t\t\t\t// file type check will determine format after load, and if\n\t\t\t\t\t// binary, a text load will have broken the file data.\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdependency._iLoader.load(dependency.request);\n\t\t}\n\t}\n\n\tprivate joinUrl(base:string, end:string):string\n\t{\n\t\tif (end.charAt(0) == '/' || end.charAt(0) == '\\\\')\n\t\t\tend = end.substr(1);\n\n\t\tif (end.charAt(0) == '.')\n\t\t\tend = end.substr(2);\n\n\t\tif (base.length == 0)\n\t\t\treturn end;\n\n\t\tif (base.charAt(base.length - 1) == '/' || base.charAt(base.length - 1) == '\\\\')\n\t\t\tbase = base.substr(0, base.length - 1);\n\n\t\treturn base.concat('/', end);\n\n\t}\n\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\n\t{\n\t\tvar scheme_re:RegExp;\n\t\tvar base:string;\n\t\tvar url:string = dependency.request.url;\n\n\t\t// Has the user re-mapped this URL?\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\n\t\t\treturn this._context._iGetRemappedUrl(url);\n\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\n\t\t// We will not try to resolve this since the user can probably be\n\t\t// thrusted to know this URL better than our automatic resolver. :)\n\t\tif (url == this._uri)\n\t\t\treturn url;\n\n\n\t\t// Absolute URL? Check if starts with slash or a URL\n\t\t// scheme definition (e.g. ftp://, http://, file://)\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\n\n\t\tif (url.charAt(0) == '/') {\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\n\t\t\t\treturn url;\n\t\t} else if (scheme_re.test(url)) {\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\n\t\t\tif (this._context && this._context.overrideFullURLs) {\n\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\n\t\t\t}\n\t\t}\n\n\t\t// Since not absolute, just get rid of base file name to find it's\n\t\t// folder and then concatenate dynamic URL\n\t\tif (this._context && this._context.dependencyBaseUrl) {\n\t\t\tbase = this._context.dependencyBaseUrl;\n\t\t\treturn this.joinUrl(base, url);\n\t\t} else {\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\n\t\t\treturn this.joinUrl(base, url);\n\t\t}\n\t}\n\n\tprivate retrieveParserDependencies()\n\t{\n\t\tif (!this._currentDependency)\n\t\t\treturn;\n\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies;\n\t\tvar i:number, len:number = parserDependancies.length;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\n\n\t\t// Since more dependencies might be added eventually, empty this\n\t\t// list so that the same dependency isn't retrieved more than once.\n\t\tparserDependancies.length = 0;\n\n\t\tthis._stack.push(this._currentDependency);\n\n\t\tthis.retrieveNext();\n\t}\n\n\tprivate resolveParserDependencies()\n\t{\n\t\tthis._currentDependency._iSuccess = true;\n\n\t\t// Retrieve any last dependencies remaining on this parser, or\n\t\t// if none exists, just move on.\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\n\t\t\tthis.retrieveParserDependencies();\n\t\telse\n\t\t\tthis.retrieveNext();\n\t}\n\n\t/**\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadError(event:IOErrorEvent)\n\t{\n\t\tvar handled:boolean;\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\t\tvar loader:URLLoader = <URLLoader> event.target;//TODO: keep on eye on this one\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR )) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when LoaderSession does have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._errorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\n\n\t\t\t\tthis._currentDependency.resolveFailure();\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\t// Either this was the base file (last left in the stack) or\n\t\t\t\t// default behavior was prevented by the handlers, and hence\n\t\t\t\t// there is nothing more to do than clean up and bail.\n\t\t\t\tthis.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Error event was not handled by listeners directly on LoaderSession or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error();\n\t\t}\n\t}\n\n\t/**\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\n\t * @param event\n\t */\n\tprivate onParseError(event:ParserEvent)\n\t{\n\t\tvar handled:boolean;\n\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\n\t\tvar loader:URLLoader = <URLLoader>event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when LoaderSession does\n\t\t\t// have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\t\t\tthis.retrieveNext();\n\t\t} else {\n\t\t\t// Error event was not handled by listeners directly on LoaderSession or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error(event.message);\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Add loaded asset to list of assets retrieved as part\n\t\t// of the current dependency. This list will be inspected\n\t\t// by the parent parser when dependency is resolved\n\t\tif (this._currentDependency)\n\t\t\tthis._currentDependency.assets.push(event.asset);\n\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\n\n\t\tif (!this._currentDependency.suppresAssetEvents)\n\t\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate onReadyForDependencies(event:ParserEvent)\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tif (this._context && !this._context.includeDependencies)\n\t\t\tparser._iResumeParsing();\n\t\telse\n\t\t\tthis.retrieveParserDependencies();\n\t}\n\n\t/**\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tvar loader:URLLoader = <URLLoader> event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\t// Resolve this dependency\n\t\tthis._currentDependency._iSetData(loader.data);\n\n\t\tif (this._currentDependency.retrieveAsRawData) {\n\t\t\t// No need to parse this data, which should be returned as is\n\t\t\tthis.resolveParserDependencies();\n\t\t} else {\n\t\t\tthis.parseDependency(this._currentDependency);\n\t\t}\n\t}\n\n\t/**\n\t * Called when parsing is complete.\n\t */\n\tprivate onParseComplete(event:ParserEvent):void\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\n\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\t/**\n\t * Called when an image is too large or it's dimensions are not a power of 2\n\t * @param event\n\t */\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate addEventListeners(loader:URLLoader)\n\t{\n\t\tloader.addEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.addEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tprivate removeEventListeners(loader:URLLoader)\n\t{\n\t\tloader.removeEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.removeEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis.dispose();\n\t}\n\n\tprivate dispose()\n\t{\n\t\tthis._errorHandlers = null;\n\t\tthis._parseErrorHandlers = null;\n\t\tthis._context = null;\n\t\tthis._stack = null;\n\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\n\n\t\tthis._currentDependency = null;\n\n\t}\n\n\t/**\n\t * @private\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\n\t * add error event listeners to the LoaderSession instance. This system is used instead of\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\n\t * that if hasEventListener() returns true, it's client code that's listening for the\n\t * event. Secondly, functions added as error handler through this custom method are\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\n\t * whether they in turn had any client code listening for the event.) If no handlers\n\t * return true, the LoaderSession knows that the event wasn't handled and will throw an RTE.\n\t */\n\n\tpublic _iAddParseErrorHandler(handler)\n\t{\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\n\t\t\tthis._parseErrorHandlers.push(handler);\n\t}\n\n\tpublic _iAddErrorHandler(handler)\n\t{\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\n\t\t\tthis._errorHandlers.push(handler);\n\t}\n\n\n\t/**\n\t * Guesses the parser to be used based on the file contents.\n\t * @param data The data to be parsed.\n\t * @param uri The url or id of the object to be parsed.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromData(data:any):ParserBase\n\t{\n\t\tvar len:number = LoaderSession._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--)\n\t\t\tif (LoaderSession._parsers[i].supportsData(data))\n\t\t\t\treturn new LoaderSession._parsers[i]();\n\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Initiates parsing of the loaded dependency.\n\t *\n\t * @param The dependency to be parsed.\n\t */\n\tprivate parseDependency(dependency:ResourceDependency):void\n\t{\n\t\tvar parser:ParserBase = dependency.parser;\n\n\t\t// If no parser has been defined, try to find one by letting\n\t\t// all plugged in parsers inspect the actual data.\n\t\tif (!parser)\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\n\n\t\tif (parser) {\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t\tif (dependency.request && dependency.request.url)\n\t\t\t\tparser._iFileName = dependency.request.url;\n\n\t\t\tparser.materialMode = this._materialMode;\n\n\t\t\tparser.parseAsync(dependency.data);\n\n\t\t} else {\n\t\t\tvar handled:boolean;\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\";\n\t\t\tvar event:ParserEvent = new ParserEvent(ParserEvent.PARSE_ERROR, message);\n\t\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\t\tthis.dispatchEvent(event);\n\t\t\t\thandled = true;\n\t\t\t} else {\n\t\t\t\t// TODO: Consider not doing this even when LoaderSession does\n\t\t\t\t// have it's own LOAD_ERROR listener\n\t\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tif (!handled)\n\t\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t\t}\n\n\t\t\tif (handled) {\n\t\t\t\tthis.retrieveNext();\n\t\t\t} else {\n\t\t\t\t// Error event was not handled by listeners directly on LoaderSession or\n\t\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Guesses the parser to be used based on the file extension.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromSuffix(url:string):ParserBase\n\t{\n\t\t// Get rid of query string if any and extract extension\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\n\n\t\tvar len:number = LoaderSession._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\n\t\t\tvar parserClass:any = LoaderSession._parsers[i];\n\t\t\tif (parserClass.supportsType(fileExtension))\n\t\t\t\treturn new parserClass();\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport = LoaderSession;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass NumSuffixConflictStrategy extends ConflictStrategyBase\n{\n\tprivate _separator:string;\n\tprivate _next_suffix:Object;\n\n\tconstructor(separator:string = '.')\n\t{\n\t\tsuper();\n\n\t\tthis._separator = separator;\n\t\tthis._next_suffix = {};\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar orig:string;\n\t\tvar new_name:string;\n\t\tvar base:string;\n\t\tvar suffix:number;\n\n\t\torig = changedAsset.name;\n\n\t\tif (orig.indexOf(this._separator) >= 0) {\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\n\t\t\t// use entire name as base\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\n\n\t\t\tif (isNaN(suffix)) {\n\t\t\t\tbase = orig;\n\t\t\t\tsuffix = 0;\n\t\t\t}\n\n\t\t} else {\n\t\t\tbase = orig;\n\t\t\tsuffix = 0;\n\t\t}\n\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\n\n\t\t\tsuffix = this._next_suffix[base];\n\n\t\t}\n\n\t\t// Find the first suffixed name that does\n\t\t// not collide with other names.\n\t\tdo {\n\n\t\t\tsuffix++;\n\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\n\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\n\n\t\tthis._next_suffix[ base ] = suffix;\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\n\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new NumSuffixConflictStrategy(this._separator);\n\t}\n}\n\nexport = NumSuffixConflictStrategy;",
    "\nclass AudioChannel\n{\n\tpublic static maxChannels:number = 16;\n\n\tpublic static _channels:Array<AudioChannel> = new Array<AudioChannel>();\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\n\tprivate static _audioCtx;\n\tprivate _audioCtx;\n\n\tprivate _gainNode;\n\n\tprivate _audio:HTMLAudioElement;\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._gainNode.gain.value;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tthis._gainNode.gain.value = value;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audioCtx = AudioChannel._audioCtx || (AudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode.connect(this._audioCtx.destination);\n\n\t\tthis._audio = new Audio();\n\t\tthis._audio.onended = (event) => this._onEnded(event);\n\t\tthis._audio[\"crossOrigin\"] = \"anonymous\";\n\n\t\tvar source = this._audioCtx.createMediaElementSource(this._audio);\n\t\tsource.connect(this._gainNode);\n\t}\n\t\n\tpublic play(url:string, offset:number = 0, loop:boolean = false)\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._audio.src = url;\n\t\tthis._audio.loop = loop;\n\t\tthis._audio.currentTime = offset;\n\t\tthis._audio.play();\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\n\tprivate _onEnded(event)\n\t{\n\t\tthis.stop();\n\t}\n}\n\nexport = AudioChannel;",
    "import StreamingAudioChannel\t= require(\"awayjs-core/lib/managers/StreamingAudioChannel\");\nimport WebAudioChannel\t\t\t= require(\"awayjs-core/lib/managers/WebAudioChannel\");\nimport IAudioChannel\t\t\t= require(\"awayjs-core/lib/managers/IAudioChannel\");\nimport IAudioChannelClass\t\t= require(\"awayjs-core/lib/managers/IAudioChannelClass\");\n\nclass AudioManager\n{\n\tpublic static getChannel(byteLength:number):IAudioChannel\n\t{\n\t\t//choose best audio channel by bytelength\n\t\tvar channelClass:IAudioChannelClass = (byteLength > 50000)? StreamingAudioChannel : WebAudioChannel;\n\n\t\tvar i:number = 0;\n\t\twhile(channelClass._channels[i] && channelClass._channels[i].isPlaying())\n\t\t\ti++;\n\n\t\tif (i == channelClass.maxChannels) {\n\t\t\t//pick the oldest channel to reuse, ignoring looping channels\n\t\t\tvar channel:IAudioChannel;\n\t\t\tvar len:number = channelClass._channels.length;\n\t\t\tfor (var j:number = 0; j < len; j++) {\n\t\t\t\tchannel = channelClass._channels[j];\n\t\t\t\tif (!channel.isLooping() && !channel.isDecoding()) {\n\t\t\t\t\tchannelClass._channels.push(channelClass._channels.splice(j, 1)[0]);\n\t\t\t\t\tchannel.stop();\n\t\t\t\t\treturn channel;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//do not return channel until one is freed up\n\t\t\treturn null;\n\t\t}\n\n\t\treturn channelClass._channels[i] || (channelClass._channels[i] = new channelClass());\n\t}\n\n\n}\n\nexport = AudioManager;",
    "import ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\n\nclass EventAudioChannel\n{\n\tpublic static maxChannels:number = 4;\n\n\tpublic static _channels:Array<EventAudioChannel> = new Array<EventAudioChannel>();\n\n\tpublic static _base64Cache:Object = new Object();\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _volume:number;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\t\n\tprivate _audio:HTMLAudioElement;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime - this._startTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._audio.volume = this._volume;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audio = new Audio();\n\t\tthis._audio.ontimeupdate = (event) => this._onTimeUpdate(event);\n\t}\n\t\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false, id:number = 0)\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._audio.src = EventAudioChannel._base64Cache[id] || (EventAudioChannel._base64Cache[id] = ParserUtils.arrayBufferToBase64(buffer, \"audio/mp3\"));\n\t\tthis._audio.loop = this._isLooping;\n\n\t\tthis._audio.currentTime = offset;\n\t\tthis._audio.play();\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\n\tprivate _onTimeUpdate(event)\n\t{\n\t\t//TODO: more accurate end detection\n\t\tif (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\n\t\t\tthis.stop();\n\t}\n}\n\nexport = EventAudioChannel;",
    "\nclass StreamingAudioChannel\n{\n\tpublic static maxChannels:number = 4;\n\n\tpublic static _channels:Array<StreamingAudioChannel> = new Array<StreamingAudioChannel>();\n\n\tprivate _sourceOpenDelegate:(event) => void;\n\tprivate _updateEndDelegate:(event) => void;\n\tprivate _sourceBuffer:SourceBuffer;\n\tprivate _sourceDirty:boolean;\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _isQueuing:boolean;\n\tprivate _isOpening:boolean;\n\tprivate _buffer:ArrayBuffer;\n\tprivate _offset:number;\n\tprivate _volume:number;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\t\n\tprivate _audio:HTMLAudioElement;\n\t\n\tprivate _mediaSource:MediaSource;\n\tprivate _urlString:string;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime - this._startTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._audio.volume = this._volume;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._sourceOpenDelegate = (event) => this._sourceOpen(event);\n\t\tthis._updateEndDelegate = (event) => this._updateEnd(event);\n\n\t\tthis._audio = new Audio();\n\t\tthis._audio.ontimeupdate = (event) => this._onTimeUpdate(event);\n\n\t\tthis._updateSource();\n\n\t}\n\t\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false)\n\t{\n\t\tthis._isPlaying = true;\n\n\t\tif (this._isLooping || this._isLooping != loop) {\n\t\t\tthis._isLooping = loop;\n\t\t\tthis._sourceDirty = true;\n\t\t}\n\n\t\tif (this._sourceDirty)\n\t\t\tthis._updateSource();\n\n\t\tthis._buffer = buffer;\n\t\tthis._offset = offset;\n\n\t\tif (!this._isQueuing && !this._isOpening)\n\t\t\tthis._queueBuffer();\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\t\n\tprivate _sourceOpen(event)\n\t{\n\t\tthis._isOpening = false;\n\n\t\t//TODO: find out how in the name of all that is holy how this can be executed more than once on a MediaSource object\n\t\tif (this._mediaSource.activeSourceBuffers.length) {\n\t\t\tconsole.log(\"ERR: double sourceopen event called\")\n\t\t\treturn;\n\t\t}\n\n\t\tthis._sourceBuffer = this._mediaSource.addSourceBuffer('audio/mpeg');\n\t\tthis._sourceBuffer.addEventListener(\"updateend\", this._updateEndDelegate);\n\n\t\tif (this._isPlaying)\n\t\t\tthis._queueBuffer();\n\t}\n\n\tprivate _queueBuffer()\n\t{\n\t\tthis._isQueuing = true;\n\n\t\tthis._startTime = this._sourceBuffer.timestampOffset;\n\t\tthis._sourceBuffer.appendBuffer(this._buffer);\n\t}\n\n\tprivate _updateEnd(event)\n\t{\n\t\tthis._isQueuing = false;\n\n\t\tif (this._isLooping)\n\t\t\tthis._mediaSource.endOfStream();\n\n\t\tthis._duration = this._sourceBuffer.timestampOffset - this._startTime;\n\n\t\tthis._audio.currentTime = this._startTime + this._offset;\n\t\tthis._audio.play();\n\t}\n\n\tprivate _onTimeUpdate(event)\n\t{\n\t\t//TODO: more accurate end detection\n\t\tif (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\n\t\t\tthis.stop();\n\t}\n\n\tprivate _updateSource()\n\t{\n\t\tif(this._mediaSource)\n\t\t\tthis._disposeSource();\n\n\t\tthis._isQueuing = false;\n\t\tthis._isOpening = true;\n\n\t\tthis._mediaSource = new MediaSource();\n\t\tthis._mediaSource.addEventListener(\"sourceopen\", this._sourceOpenDelegate);\n\t\tthis._urlString = URL.createObjectURL(this._mediaSource);\n\t\tthis._audio.src = this._urlString;\n\t\tthis._audio.loop = this._isLooping;\n\n\t\tthis._sourceDirty = false;\n\t}\n\n\tprivate _disposeSource()\n\t{\n\t\tif (!this._isOpening) {\n\t\t\tif (this._sourceBuffer.timestampOffset)\n\t\t\t\tthis._sourceBuffer.remove(0, this._sourceBuffer.timestampOffset);\n\n\t\t\tthis._sourceBuffer.removeEventListener(\"updateend\", this._updateEndDelegate);\n\t\t\tthis._mediaSource.removeSourceBuffer(this._sourceBuffer);\n\t\t\tdelete this._sourceBuffer;\n\t\t\tthis._sourceBuffer = null;\n\t\t}\n\n\t\tthis._mediaSource.removeEventListener(\"sourceopen\", this._sourceOpenDelegate);\n\t\tURL.revokeObjectURL(this._urlString);\n\t\tdelete this._mediaSource;\n\t\tthis._mediaSource = null;\n\t}\n}\n\nexport = StreamingAudioChannel;",
    "\nclass WebAudioChannel\n{\n\tpublic static maxChannels:number = 64;\n\n\tpublic static _channels:Array<WebAudioChannel> = new Array<WebAudioChannel>();\n\n\tpublic static _decodeCache:Object = new Object();\n\tpublic static _errorCache:Object = new Object();\n\n\tprivate static _audioCtx;\n\tprivate _audioCtx;\n\n\tprivate _gainNode;\n\tprivate _source;\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _isDecoding:boolean = false;\n\tprivate _currentTime:number;\n\tprivate _id:number;\n\tprivate _volume:number = 1;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\n\tprivate _onEndedDelegate : (event:any) => void;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audioCtx.currentTime - this._startTime;\n\t}\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._gainNode.gain.value = this._volume;\n\t}\n\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn this._isDecoding;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audioCtx = WebAudioChannel._audioCtx || (WebAudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode.gain.value = this._volume;\n\n\t\tthis._gainNode.connect(this._audioCtx.destination);\n\n\t\tthis._onEndedDelegate = (event) => this._onEnded(event);\n\t}\n\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false, id:number = 0)\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._currentTime = offset;\n\n\t\tthis._id = id;\n\n\t\tthis._isDecoding = true;\n\n\t\t//fast path for short sounds\n\t\tif (WebAudioChannel._decodeCache[id])\n\t\t\tthis._onDecodeComplete(WebAudioChannel._decodeCache[id]);\n\t\telse if (!WebAudioChannel._errorCache[id])\n\t\t\tthis._audioCtx.decodeAudioData(buffer, (buffer) => this._onDecodeComplete(buffer), (event) => this._onError(event));\n\t\telse\n\t\t\tthis.stop();\n\t}\n\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t\tthis._isDecoding = false;\n\n\t\tif (this._source)\n\t\t\tthis._disposeSource();\n\t}\n\n\tpublic _onDecodeComplete(buffer)\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isDecoding = false;\n\n\t\t//if (buffer.duration < 2) //cache all buffers?\n\t\tWebAudioChannel._decodeCache[this._id] = buffer;\n\n\t\tif (this._source)\n\t\t\tthis._disposeSource();\n\n\t\tthis._source = this._audioCtx.createBufferSource();\n\n\t\tthis._source.loop = this._isLooping;\n\t\tthis._source.connect(this._gainNode);\n\n\t\tthis._source.buffer = buffer;\n\t\tthis._duration = buffer.duration;\n\n\t\tthis._startTime = this._audioCtx.currentTime - this._currentTime;\n\t\tthis._source.onended = this._onEndedDelegate;\n\t\ttry {\n\t\t\tthis._source.start(this._audioCtx.currentTime, this._currentTime);\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error starting audio: \" + error);\n\t\t\tthis._disposeSource();\n\t\t}\n\t}\n\n\tpublic _onError(event)\n\t{\n\t\tconsole.log(\"Error with decoding audio data\");\n\t\tWebAudioChannel._errorCache[this._id] = true;\n\t\tthis.stop();\n\t}\n\n\tprivate _onEnded(event):void\n\t{\n\t\tthis.stop();\n\t}\n\n\tprivate _disposeSource()\n\t{\n\t\t//clean up\n\t\tthis._source.stop(this._audioCtx.currentTime);\n\t\tthis._source.onended = null;\n\t\tthis._source.disconnect();\n\t\tdelete this._source.buffer;\n\t\tdelete this._source;\n\t\tthis._source = null;\n\t}\n}\n\nexport = WebAudioChannel;",
    "class CrossDomainPolicy\n{\n\tpublic static ANONYMOUS:string = 'anonymous';\n\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\n}\n\nexport = CrossDomainPolicy;\n",
    "class URLLoaderDataFormat\n{\n\t/**\n\t * TEXT\n\t * @type {string}\n\t */\n\tpublic static TEXT:string = \"text\";\n\n\t/**\n\t * Variables / Value Pairs\n\t * @type {string}\n\t */\n\tpublic static VARIABLES:string = \"variables\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BLOB:string = \"blob\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BINARY:string = \"binary\";\n}\n\nexport = URLLoaderDataFormat;",
    "import URLLoaderDataFormat\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\nimport URLVariables\t\t\t\t\t= require(\"awayjs-core/lib/net/URLVariables\");\nimport AwayEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport HTTPStatusEvent\t\t\t\t= require(\"awayjs-core/lib/events/HTTPStatusEvent\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport AwayProgressEvent\t\t\t= require(\"awayjs-core/lib/events/ProgressEvent\");\n\n/**\n * The URLLoader is used to load a single file, as part of a resource.\n *\n * While URLLoader can be used directly, e.g. to create a third-party asset\n * management system, it's recommended to use any of the classes Loader3D, LoaderSession\n * and AssetLibrary instead in most cases.\n *\n * @see LoaderSession\n * @see away.library.AssetLibrary\n */\nclass URLLoader extends EventDispatcher\n{\n\tprivate _XHR:XMLHttpRequest;\n\tprivate _bytesLoaded:number = 0;\n\tprivate _bytesTotal:number = 0;\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\n\tprivate _loadError:boolean = false;\n\n\tprivate _request:URLRequest;\n\tprivate _data:any;\n\n\tprivate _loadStartEvent:AwayEvent;\n\tprivate _loadErrorEvent:IOErrorEvent;\n\tprivate _loadCompleteEvent:AwayEvent;\n\tprivate _progressEvent:AwayProgressEvent;\n\n\t/**\n\t * Creates a new URLLoader object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get url():string\n\t{\n\n\t\treturn this._request? this._request.url : '';\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\n\t/**\n\t *\n\t * URLLoaderDataFormat.BINARY\n\t * URLLoaderDataFormat.TEXT\n\t * URLLoaderDataFormat.VARIABLES\n\t *\n\t * @param format\n\t */\n\tpublic set dataFormat(format:string)\n\t{\n\t\tthis._dataFormat = format;\n\t}\n\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesLoaded():number\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesTotal():number\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * Load a resource from a file.\n\t *\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\n\t */\n\tpublic load(request:URLRequest):void\n\t{\n\t\tthis._request = request;\n\n\t\tthis.initXHR();\n\n\t\tif (request.method === URLRequestMethod.POST)\n\t\t\tthis.postRequest(request);\n\t\telse\n\t\t\tthis.getRequest(request);\n\t}\n\n\tpublic isSupported():boolean {\n\t\treturn window != null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic close():void\n\t{\n\t\tthis._XHR.abort();\n\t\tthis.disposeXHR();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tif (this._XHR)\n\t\t\tthis._XHR.abort();\n\n\t\tthis.disposeXHR();\n\n\t\tthis._data = null;\n\t\tthis._dataFormat = null;\n\t\tthis._bytesLoaded = null;\n\t\tthis._bytesTotal = null;\n\t}\n\n\t/**\n\t *\n\t * @param xhr\n\t * @param responseType\n\t */\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\n\t{\n\t\tswitch (responseType) {\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\txhr.responseType = responseType;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\txhr.responseType = '';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate getRequest(request:URLRequest):void\n\t{\n\t\ttry {\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\t\t\tthis._XHR.send(); // No data to send\n\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate postRequest(request:URLRequest):void\n\t{\n\t\tthis._loadError = false;\n\n\t\tthis._XHR.open(request.method, request.url, request.async);\n\n\t\tif (request.data != null) {\n\t\t\tif (request.data instanceof URLVariables) {\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\n\n\t\t\t\ttry {\n\t\t\t\t\tthis._XHR.responseType = 'text';\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\n\t\t\t\tif (request.data)\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\n\t\t\t\telse\n\t\t\t\t\tthis._XHR.send(); // no data to send\n\t\t\t}\n\t\t} else {\n\t\t\tthis._XHR.send(); // No data to send\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * @param error {XMLHttpRequestException}\n\t */\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\n\t{\n\t\tswitch (error.code) {\n\n\t\t/******************************************************************************************************************************************************************************************************\n\t\t *\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\n\t\t *\n\t\t ******************************************************************************************************************************************************************************************************/\n\n\t\t\tcase 101:\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initXHR()\n\t{\n\t\tif (!this._XHR) {\n\t\t\tthis._XHR = new XMLHttpRequest();\n\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate disposeXHR()\n\t{\n\t\tif (this._XHR !== null) {\n\t\t\tthis._XHR.onloadstart = null;\n\t\t\tthis._XHR.onprogress = null;\n\t\t\tthis._XHR.onabort = null;\n\t\t\tthis._XHR.onerror = null;\n\t\t\tthis._XHR.onload = null;\n\t\t\tthis._XHR.ontimeout = null;\n\t\t\tthis._XHR.onloadend = null;\n\t\t\tthis._XHR = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decodeURLVariables(source:string):Object\n\t{\n\t\tvar result:Object = new Object();\n\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\n\t\treturn result;\n\t}\n\n\t// XMLHttpRequest - Event Handlers\n\n\t/**\n\t * When XHR state changes\n\t * @param event\n\t */\n\tprivate onReadyStateChange(event:Event)\n\t{\n\t\tif (this._XHR.readyState == 4) {\n\t\t\tif (this._XHR.status == 404) {\n\t\t\t\tthis._loadError = true;\n\n\t\t\t\tif (!this._loadErrorEvent)\n\t\t\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new HTTPStatusEvent(HTTPStatusEvent.HTTP_STATUS, this._XHR.status));\n\t\t}\n\t}\n\n\t/**\n\t * When the request has completed, regardless of whether or not it was successful.\n\t * @param event\n\t */\n\tprivate onLoadEnd(event:ProgressEvent)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\t}\n\n\t/**\n\t * When the author specified timeout has passed before the request could complete.\n\t * @param event\n\t */\n\tprivate onTimeOut(event:Event)\n\t{\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\n\t}\n\n\t/**\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t * @param event\n\t */\n\tprivate onAbort(event:UIEvent)\n\t{\n\t\t// TODO: investigate whether this needs to be an IOError\n\t}\n\n\t/**\n\t * While loading and sending data.\n\t * @param event\n\t */\n\tprivate onProgress(event:ProgressEvent)\n\t{\n\t\tif (!this._progressEvent)\n\t\t\tthis._progressEvent = new AwayProgressEvent(AwayProgressEvent.PROGRESS);\n\n\t\tthis._progressEvent.bytesTotal = event.total;\n\t\tthis._progressEvent.bytesLoaded = event.loaded;\n\n\t\tthis.dispatchEvent(this._progressEvent);\n\t}\n\n\t/**\n\t * When the request starts.\n\t * @param event\n\t */\n\tprivate onLoadStart(event:ProgressEvent)\n\t{\n\t\tif (!this._loadStartEvent)\n\t\t\tthis._loadStartEvent = new AwayEvent(AwayEvent.OPEN);\n\n\t\tthis.dispatchEvent(this._loadStartEvent);\n\t}\n\n\t/**\n\t * When the request has successfully completed.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\n\t\tswitch (this._dataFormat) {\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\tthis._data = this._XHR.response;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!this._loadCompleteEvent)\n\t\t\tthis._loadCompleteEvent = new AwayEvent(AwayEvent.COMPLETE);\n\n\t\tthis.dispatchEvent(this._loadCompleteEvent);\n\t}\n\n\t/**\n\t * When the request has failed. ( due to network issues ).\n\t * @param event\n\t */\n\tprivate onLoadError(event:Event)\n\t{\n\t\tthis._loadError = true;\n\n\t\tif (!this._loadErrorEvent)\n\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t}\n}\n\nexport = URLLoader;",
    "class URLRequestMethod\n{\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static POST:string = 'POST';\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static GET:string = 'GET';\n}\n\nexport = URLRequestMethod;",
    "import URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\n\nclass URLRequest\n{\n\t/*\n\t * The MIME content type of the content in the the data property.\n\t * @type {string}\n\t */\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\n\n\t/**\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\n\t *\n\t */\n\tpublic data:any;\n\n\t/**\n\t *\n\t * away.net.URLRequestMethod.GET\n\t * away.net.URLRequestMethod.POST\n\t *\n\t * @type {string}\n\t */\n\tpublic method:string = URLRequestMethod.GET;\n\n\t/**\n\t * Use asynchronous XMLHttpRequest\n\t * @type {boolean}\n\t */\n\tpublic async:boolean = true;\n\n\t/**\n\t *\n\t */\n\tprivate _url:string;\n\n\t/**\n\n\t * @param url\n\t */\n\tconstructor(url:string = null)\n\t{\n\t\tthis._url = url;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set url(value:string)\n\t{\n\t\tthis._url = value;\n\t}\n\n\t/**\n\t * dispose\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.data = null;\n\t\tthis._url = null;\n\t}\n}\n\nexport = URLRequest;",
    "class URLVariables\n{\n\tprivate _variables:Object = new Object();\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tconstructor(source:string = null)\n\t{\n\t\tif (source !== null)\n\t\t\tthis.decode(source);\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decode(source:string):void\n\t{\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic toString():string\n\t{\n\t\treturn '';\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get variables():Object\n\t{\n\t\treturn this._variables;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get formData():FormData\n\t{\n\t\tvar fd:FormData = new FormData();\n\n\t\tfor (var s in this._variables)\n\t\t\tfd.append(s, this._variables[s]);\n\n\t\treturn fd;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic set variables(obj:Object)\n\t{\n\t\tthis._variables = obj;\n\t}\n}\n\nexport = URLVariables;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\n/**\n * Image2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nclass Image2DParser extends ParserBase\n{\n\tprivate _startedParsing:boolean;\n\tprivate _doneParsing:boolean;\n\tprivate _loadingImage:boolean;\n\tprivate _htmlImageElement:HTMLImageElement;\n\n\t/**\n\t * Creates a new Image2DParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\n\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\n\t\tif (data  instanceof HTMLImageElement)\n\t\t\treturn true;\n\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tba.position = 0;\n\n\t\tif (ba.readUnsignedShort() == 0xd8ff)\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\n\n\t\tba.position = 0;\n\t\tif (ba.readShort() == 0x424D)\n\t\t\treturn true; // BMP\n\n\t\tba.position = 1;\n\t\tif (ba.readUTFBytes(3) == 'PNG')\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'ATF')\n\t\t\treturn true;\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tvar asset:BitmapImage2D;\n\t\tvar sizeError:boolean = false;\n\n\t\tif (this._loadingImage) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else if (this._htmlImageElement) {\n\t\t\tif (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t}\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\n\t\t\tvar htmlImageElement:HTMLImageElement = <HTMLImageElement> this.data;\n\t\t\tif (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\n\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\n\n\t\t\tvar ba:ByteArray = this.data;\n\t\t\tba.position = 0;\n\t\t\tthis._htmlImageElement = ParserUtils.byteArrayToImage(this.data);\n\n\t\t\tif (!this._htmlImageElement.complete) {\n\t\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\t\tthis._loadingImage = true;\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t\tif (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\n\t\t\t}\n\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\n\n\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\n\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\n\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\tthis._loadingImage = true;\n\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\n\t\t{\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\n\t\t}\n\n\t\tthis._pContent = asset;\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tpublic onLoadComplete(event)\n\t{\n\t\tthis._loadingImage = false;\n\t}\n}\n\nexport = Image2DParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\n\n/**\n * ImageCubeParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nclass ImageCubeParser extends ParserBase\n{\n\tprivate static posX:string = 'posX';\n\tprivate static negX:string = 'negX';\n\tprivate static posY:string = 'posY';\n\tprivate static negY:string = 'negY';\n\tprivate static posZ:string = 'posZ';\n\tprivate static negZ:string = 'negZ';\n\n\tprivate _imgDependencyDictionary:Object;\n\n\t/**\n\t * Creates a new ImageCubeParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"cube\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar obj = JSON.parse(data);\n\n\t\t\tif (obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\n\t\t\tvar asset:BitmapImageCube = new BitmapImageCube(this._getBitmapImage2D(ImageCubeParser.posX).width);\n\n\t\t\tasset.draw(BitmapImageCube.posX, this._getBitmapImage2D(ImageCubeParser.posX));\n\t\t\tasset.draw(BitmapImageCube.negX, this._getBitmapImage2D(ImageCubeParser.negX));\n\t\t\tasset.draw(BitmapImageCube.posY, this._getBitmapImage2D(ImageCubeParser.posY));\n\t\t\tasset.draw(BitmapImageCube.negY, this._getBitmapImage2D(ImageCubeParser.negY));\n\t\t\tasset.draw(BitmapImageCube.posZ, this._getBitmapImage2D(ImageCubeParser.posZ));\n\t\t\tasset.draw(BitmapImageCube.negZ, this._getBitmapImage2D(ImageCubeParser.negZ));\n\n\t\t\t//clear dictionary\n\t\t\tthis._imgDependencyDictionary = null;\n\n\t\t\tasset.name = this._iFileName;\n\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\ttry {\n\t\t\tvar json:any = JSON.parse(this.data);\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\n\t\t\tvar rec:any;\n\n\t\t\tif (data.length != 6)\n\t\t\t\tthis._pDieWithError('ImageCubeParser: Error - cube texture should have exactly 6 images');\n\n\t\t\tif (json) {\n\t\t\t\tthis._imgDependencyDictionary = new Object();\n\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\n\t\t\t\t\trec = data[c];\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\n\t\t\t\t}\n\n\t\t\t\tif (!this._validateCubeData()) {\n\n\t\t\t\t\tthis._pDieWithError(\"ImageCubeParser: JSON data error - cubes require id of:   \\n\" + ImageCubeParser.posX + ', ' + ImageCubeParser.negX + ',  \\n' + ImageCubeParser.posY + ', ' + ImageCubeParser.negY + ',  \\n' + ImageCubeParser.posZ + ', ' + ImageCubeParser.negZ);\n\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate _validateCubeData():boolean\n\t{\n\t\treturn  ( this._imgDependencyDictionary[ ImageCubeParser.posX ] != null && this._imgDependencyDictionary[ ImageCubeParser.negX ] != null && this._imgDependencyDictionary[ ImageCubeParser.posY ] != null && this._imgDependencyDictionary[ ImageCubeParser.negY ] != null && this._imgDependencyDictionary[ ImageCubeParser.posZ ] != null && this._imgDependencyDictionary[ ImageCubeParser.negZ ] != null );\n\t}\n\n\tprivate _getBitmapImage2D(name:string):BitmapImage2D\n\t{\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\n\n\t\tif (dependency)\n\t\t\treturn <BitmapImage2D> dependency.assets[0];\n\n\t\treturn null;\n\t}\n\n}\n\nexport = ImageCubeParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport Timer\t\t\t\t\t= require(\"awayjs-core/lib/utils/Timer\");\nimport getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\n/**\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\n * supported by away.\n *\n * If used by <code>LoaderSession</code> to automatically determine the parser type, two public static methods should\n * be implemented, with the following signatures:\n *\n * <code>public static supportsType(extension : string) : boolean</code>\n * Indicates whether or not a given file extension is supported by the parser.\n *\n * <code>public static supportsData(data : *) : boolean</code>\n * Tests whether a data block can be parsed by the parser.\n *\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\n * handle regardless of whether the object was loaded or not.\n *\n * @see LoaderSession\n */\nclass ParserBase extends EventDispatcher\n{\n\tpublic _isParsing:boolean;\n\tpublic _iFileName:string;\n\tprivate _dataFormat:string;\n\tprivate _data:any;\n\tprivate _frameLimit:number;\n\tprivate _lastFrameTime:number;\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\n\tpublic _pContent:IAsset;\n\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// Needs to be implemented in all Parsers (\n\t//<code>public static supportsType(extension : string) : boolean</code>\n\t//* Indicates whether or not a given file extension is supported by the parser.\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate _dependencies:Array<ResourceDependency>;\n\tprivate _parsingPaused:boolean;\n\tprivate _parsingComplete:boolean;\n\tprivate _parsingFailure:boolean;\n\tprivate _timer:Timer;\n\tprivate _materialMode:number;\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\n\t */\n\tpublic static PARSING_DONE:boolean = true;\n\t/* Protected */\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\n\t */\n\tpublic static MORE_TO_PARSE:boolean = false;\n\t/* Protected */\n\n\n\tpublic get content():IAsset\n\t{\n\t\treturn this._pContent;\n\t}\n\n\t/**\n\t * Creates a new ParserBase object\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\n\t *\n\t * @see away.loading.parsers.ParserDataFormat\n\t */\n\tconstructor(format:string)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = 0;\n\t\tthis._dataFormat = format;\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\n\t}\n\n\t/**\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\n\t */\n\n\tpublic isBitmapImage2DValid(bitmapImage2D:BitmapImage2D):boolean\n\t{\n\t\tvar isValid:boolean = ImageUtils.isImage2DValid(bitmapImage2D);\n\n\t\tif (!isValid) {\n\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tpublic set parsingFailure(b:boolean)\n\t{\n\t\tthis._parsingFailure = b;\n\t}\n\n\tpublic get parsingFailure():boolean\n\t{\n\t\treturn this._parsingFailure;\n\t}\n\n\tpublic get parsingPaused():boolean\n\t{\n\t\treturn this._parsingPaused;\n\t}\n\n\tpublic get parsingComplete():boolean\n\t{\n\t\treturn this._parsingComplete;\n\t}\n\n\tpublic set materialMode(newMaterialMode:number)\n\t{\n\t\tthis._materialMode = newMaterialMode;\n\t}\n\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\n\t */\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\n\t * next frame.\n\t *\n\t * @param data The untyped data object in which the loaded data resides.\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\n\t * actual time spent on a frame can exceed this number since time-checks can\n\t * only be performed between logical sections of the parsing procedure.\n\t */\n\tpublic parseAsync(data:any, frameLimit:number = 30)\n\t{\n\t\tthis._data = data;\n\t\tthis._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\n\t * dependency should be a member of the dependencies property.\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\treturn asset.name;\n\t}\n\n\tpublic _iResumeParsing()\n\t{\n\t\tthis._parsingPaused = false;\n\n\t\tif (this._timer)\n\t\t\tthis._timer.start();\n\n\t\t//get started!\n\t\tif (!this._isParsing)\n\t\t\tthis._pOnInterval();\n\t}\n\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null)\n\t{\n\t\tvar type_event:string;\n\t\tvar type_name:string;\n\n\t\tif (name != null)\n\t\t\tasset.name = name;\n\n\t\t// If the asset has no name, give it\n\t\t// a per-type default name.\n\t\tif (!asset.name)\n\t\t\tasset.name = asset.assetType;\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\n\t}\n\n\t/**\n\t * Parse the next block of data.\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pDieWithError(message:string = 'Unknown parsing error')\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t\tthis._timer = null;\n\t\t}\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t}\n\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false, sub_id:number=0):ResourceDependency\n\t{\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents, sub_id);\n\t\tthis._dependencies.push(dependency);\n\n\t\treturn dependency;\n\t}\n\n\tpublic _pPauseAndRetrieveDependencies()\n\t{\n\t\tthis._pPauseParsing();\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\n\t}\n\n\tpublic _pPauseParsing()\n\t{\n\t\tif (this._timer)\n\t\t\tthis._timer.stop();\n\n\t\tthis._parsingPaused = true;\n\t}\n\n\t/**\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\n\t */\n\tpublic _pHasTime():boolean\n\t{\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\n\t}\n\n\t/**\n\t * Called when the parsing pause interval has passed and parsing can proceed.\n\t */\n\tpublic _pOnInterval(event:TimerEvent = null)\n\t{\n\t\tthis._lastFrameTime = getTimer();\n\t\tthis._isParsing = true;\n\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\n\t\t\tthis._pFinishParsing();\n\n\t\tthis._isParsing = false;\n\t}\n\n\t/**\n\t * Initializes the parsing of data.\n\t * @param frameLimit The maximum duration of a parsing session.\n\t */\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tthis._frameLimit = frameLimit;\n\t\tthis._timer = new Timer(this._frameLimit, 0);\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\tthis._timer.start();\n\n\t\t//get started!\n\t\tthis._pOnInterval();\n\t}\n\n\t/**\n\t * Finish parsing the data.\n\t */\n\tpublic _pFinishParsing()\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t}\n\n\t\tthis._timer = null;\n\t\tthis._parsingComplete = true;\n\t\tthis._isParsing = false;\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetTextData():string\n\t{\n\t\treturn ParserUtils.toString(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {ByteArray}\n\t * @private\n\t */\n\tpublic _pGetByteData():ByteArray\n\t{\n\t\treturn ParserUtils.toByteArray(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {any}\n\t * @private\n\t */\n\tpublic _pGetData():any\n\t{\n\t\treturn this._data;\n\t}\n\n}\n\nexport = ParserBase;",
    "/**\n * An enumeration providing values to describe the data format of parsed data.\n */\nclass ParserDataFormat\n{\n\t/**\n\t * Describes the format of a binary file.\n\t */\n\tpublic static BINARY:string = \"binary\";\n\n\t/**\n\t * Describes the format of a plain text file.\n\t */\n\tpublic static PLAIN_TEXT:string = \"plainText\";\n\n\t/**\n\t * Describes the format of an image file\n\t */\n\tpublic static IMAGE:string = \"image\";\n\n}\n\nexport = ParserDataFormat;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport WaveAudio\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass ParserUtils\n{\n\tpublic static arrayBufferToBase64(data:ArrayBuffer, mimeType:string)\n\t{\n\t\tvar byteStr:string = '';\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\n\t\tvar len:number = bytes.byteLength;\n\n\t\tfor (var i = 0; i < len; i++)\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\n\n\t\tvar base64Image:string = window.btoa(byteStr);\n\t\treturn 'data:' + mimeType + ';base64,' + base64Image;\n\t}\n\n\tpublic static arrayBufferToAudio(data:ArrayBuffer, fileType:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'audio/' + fileType);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an ArrayBuffer to a base64 string\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\tpublic static byteArrayToAudio(data:ByteArray, filetype:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'audio/' + filetype);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an Blob to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a Blob\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static blobToImage(data:Blob):HTMLImageElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an Blob to audio - returns an HTMLAudioElement\n\t *\n\t * @param audio data as a Blob\n\t *\n\t * @return HTMLAudioElement\n\t *\n\t */\n\tpublic static blobToAudio(data:Blob):HTMLAudioElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static imageToBitmapImage2D(img:HTMLImageElement, powerOfTwo:boolean = true):BitmapImage2D\n\t{\n\t\tvar bitmapData:BitmapImage2D = new BitmapImage2D(img.width, img.height, true, null, powerOfTwo);\n\t\tbitmapData.draw(img);\n\n\t\treturn bitmapData;\n\t}\n\n\t/**\n\t * Returns a object as ByteArray, if possible.\n\t *\n\t * @param data The object to return as ByteArray\n\t *\n\t * @return The ByteArray or null\n\t *\n\t */\n\tpublic static toByteArray(data:any):ByteArray\n\t{\n\t\tvar b:ByteArray = new ByteArray();\n\t\tb.setArrayBuffer(data);\n\t\treturn b;\n\t}\n\n\t/**\n\t * Returns a object as String, if possible.\n\t *\n\t * @param data The object to return as String\n\t * @param length The length of the returned String\n\t *\n\t * @return The String or null\n\t *\n\t */\n\tpublic static toString(data:any, length:number = 0):string\n\t{\n\n\t\tif (typeof data === 'string') {\n\t\t\tvar s:string = <string> data;\n\n\t\t\tif (s['substr'] != null)\n\t\t\t\treturn s.substr(0, s.length);\n\t\t}\n\n\t\tif (data instanceof ByteArray) {\n\t\t\tvar ba:ByteArray = <ByteArray> data;\n\t\t\tba.position = 0;\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\n\t\t}\n\n\t\treturn null;\n\n\t\t/*\n\t\t var ba:ByteArray;\n\n\t\t length ||= uint.MAX_VALUE;\n\n\t\t if (data is String)\n\t\t return String(data).substr(0, length);\n\n\t\t ba = toByteArray(data);\n\t\t if (ba) {\n\t\t ba.position = 0;\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\n\t\t }\n\n\t\t return null;\n\n\t\t */\n\n\t}\n}\n\nexport = ParserUtils;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\n * required by a parser, used by ResourceLoadSession.\n *\n */\nclass ResourceDependency\n{\n\tprivate _id:string;\n\tprivate _sub_id:number;\n\n\tprivate _request:URLRequest;\n\tprivate _assets:Array<IAsset>;\n\tprivate _parser:ParserBase;\n\tprivate _parentParser:ParserBase;\n\tprivate _data:any;\n\tprivate _retrieveAsRawData:boolean;\n\tprivate _suppressAssetEvents:boolean;\n\tprivate _dependencies:Array<ResourceDependency>;\n\n\tpublic _iLoader:URLLoader;\n\tpublic _iSuccess:boolean;\n\n\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false, sub_id:number=0)\n\t{\n\t\tthis._id = id;\n\t\tthis._sub_id = sub_id;\n\t\tthis._request = request;\n\t\tthis._data = data;\n\t\tthis._parser = parser;\n\t\tthis._parentParser = parentParser;\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\n\t\tthis._assets = new Array<IAsset>();\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get id():string\n\t{\n\t\treturn this._id;\n\t}\n\tpublic get sub_id():number\n\t{\n\t\treturn this._sub_id;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get request():URLRequest\n\t{\n\t\treturn this._request;\n\t}\n\n\t/**\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parser():ParserBase\n\t{\n\t\treturn this._parser;\n\t}\n\n\t/**\n\t * The parser which is dependent on this ResourceDependency object.\n\t */\n\tpublic get parentParser():ParserBase\n\t{\n\t\treturn this._parentParser;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get retrieveAsRawData():boolean\n\t{\n\t\treturn this._retrieveAsRawData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get suppresAssetEvents():boolean\n\t{\n\t\treturn this._suppressAssetEvents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * @private\n\t * Method to set data after having already created the dependency object, e.g. after load.\n\t */\n\tpublic _iSetData(data:any):void\n\t{\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t */\n\tpublic _iSetParser(parser:ParserBase):void\n\t{\n\t\tthis._parser = parser;\n\t}\n\n\t/**\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\n\t * to its intended parent. The dependency should be a member of the dependencies property.\n\t */\n\tpublic resolve():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependency(this);\n\t}\n\n\t/**\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\n\t */\n\tpublic resolveFailure():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\n\t}\n\n\t/**\n\t * Resolve the dependencies name\n\t */\n\tpublic resolveName(asset:IAsset):string\n\t{\n\t\tif (this._parentParser)\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\n\n\t\treturn asset.name;\n\t}\n}\n\nexport = ResourceDependency;",
    "import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport XmlUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/XmlUtils\");\n\n/**\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nclass TextureAtlasParser extends ParserBase\n{\n\tprivate _doc:Node;\n\tprivate _imagePath:string;\n\tprivate _imageData:BitmapImage2D;\n\tprivate _subTextureNodes:NodeList;\n\tprivate _parseState:number = 0;\n\n\t/**\n\t * Creates a new TextureAtlasParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"xml\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar content:string = ParserUtils.toString(data);\n\t\t\tif(content.indexOf(\"TextureAtlas\") != -1 || content.indexOf(\"textureatlas\") != -1)\n\t\t\t\treturn true;\n\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif(resourceDependency.assets.length) {\n\t\t\tthis._imageData = <BitmapImage2D> resourceDependency.assets[0];\n\t\t\tthis._pFinalizeAsset(this._imageData);\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_SUBTEXTURES;\n\t\t} else {\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar nodes:NodeList;\n\n\t\tswitch(this._parseState) {\n\t\t\tcase TextureAtlasParserState.PARSE_XML:\n\t\t\t\ttry {\n\t\t\t\t\tthis._doc = XmlUtils.getChildrenWithTag(XmlUtils.strToXml(this._pGetTextData()), \"TextureAtlas\")[0];\n\n\t\t\t\t\tthis._imagePath = XmlUtils.readAttributeValue(this._doc, \"imagePath\");\n\n\t\t\t\t\tthis._subTextureNodes = XmlUtils.getChildrenWithTag(this._doc, \"SubTexture\");\n\n\t\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_IMAGE;\n\n\t\t\t\t} catch(Error) {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_IMAGE:\n\t\t\t\tif (this._imagePath){\n\t\t\t\t\tthis._pAddDependency(this._imagePath, new URLRequest(this._imagePath));\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t\t} else {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_SUBTEXTURES:\n\t\t\t\tvar sampler:Sampler2D;\n\t\t\t\tvar element:Node;\n\t\t\t\tvar x:string;\n\t\t\t\tvar y:string;\n\t\t\t\tvar width:string;\n\t\t\t\tvar height:string;\n\t\t\t\tvar len:number = this._subTextureNodes.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\telement = this._subTextureNodes[i];\n\t\t\t\t\tsampler = new Sampler2D();\n\n\t\t\t\t\t//setup subtexture rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"x\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"y\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"width\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"height\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tsampler.imageRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n\n\t\t\t\t\t//setup frame rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"frameX\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"frameY\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"frameWidth\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"frameHeight\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tsampler.frameRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n\n\t\t\t\t\tthis._pFinalizeAsset(sampler, XmlUtils.readAttributeValue(element, \"name\"));\n\t\t\t\t}\n\n\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_COMPLETE:\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n}\n\nexport = TextureAtlasParser;\n\nclass TextureAtlasParserState {\n\tpublic static PARSE_XML:number = 0;\n\tpublic static PARSE_IMAGE:number = 1;\n\tpublic static PARSE_SUBTEXTURES:number = 2;\n\tpublic static PARSE_COMPLETE:number = 3;\n}",
    "import WaveAudio\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass WaveAudioParser extends ParserBase\n{\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"wav\" || extension == \"mp3\" || extension == \"ogg\";\n\n\t}\n\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tvar filetype : string = WaveAudioParser.parseFileType(ba);\n\t\treturn filetype? true : false;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//clear content\n\t\tdelete this._pContent;\n\t\tthis._pContent = null;\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this.data instanceof ByteArray) { // Parse a ByteArray\n\t\t\tthis._pContent = new WaveAudio(this.data.arraybytes);\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\t\t\tthis._pContent = new WaveAudio(this.data);\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate static parseFileType(ba:ByteArray):string\n\t{\n\t\tba.position = 0;\n\n\t\tba.position = 0;\n\t\tif ((ba.readUnsignedShort() & 0xFFE0) == 0xFFE0) {\n\t\t\treturn 'mp3'; // test for MP3 syncword\n\t\t}\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'RIFF')\n\t\t\treturn 'wav';\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'OggS')\n\t\t\treturn 'ogg';\n\n\t\tba.position = 0;\n\n\t\treturn null;\n\t}\n}\n\nexport = WaveAudioParser;",
    "/**\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\n *\n * @see away.projections.PerspectiveLens#coordinateSystem\n */\nclass CoordinateSystem\n{\n\t/**\n\t * Default option, projects to a left-handed coordinate system\n\t */\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\n\n\t/**\n\t * Projects to a right-handed coordinate system\n\t */\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\n}\n\nexport = CoordinateSystem;",
    "import PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass FreeMatrixProjection extends ProjectionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._pNear = value;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._pFar = value;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._pAspectRatio = value;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.pInvalidateMatrix();\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = FreeMatrixProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass ObliqueNearPlaneProjection extends ProjectionBase\n{\n\n\tprivate _baseProjection:IProjection;\n\tprivate _plane:Plane3D;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\n\t{\n\t\tsuper();\n\t\tthis.baseProjection = baseProjection;\n\t\tthis.plane = plane;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\t}\n\n\t//@override\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._baseProjection.frustumCorners;\n\t}\n\n\t//@override\n\tpublic get near():number\n\t{\n\t\treturn this._baseProjection.near;\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._baseProjection.near = value;\n\t}\n\n\t//@override\n\tpublic get far():number\n\t{\n\t\treturn this._baseProjection.far;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._baseProjection.far = value;\n\t}\n\n\t//@override\n\tpublic get iAspectRatio():number\n\t{\n\t\treturn this._baseProjection._iAspectRatio;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._baseProjection._iAspectRatio = value;\n\t}\n\n\tpublic get plane():Plane3D\n\t{\n\t\treturn this._plane;\n\t}\n\n\tpublic set plane(value:Plane3D)\n\t{\n\t\tthis._plane = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic set baseProjection(value:IProjection)\n\t{\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis._baseProjection = value;\n\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\n\n\t\tvar cx:number = this._plane.a;\n\t\tvar cy:number = this._plane.b;\n\t\tvar cz:number = this._plane.c;\n\t\tvar cw:number = -this._plane.d + .05;\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\n\t\tinverse.invert();\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\t\tthis._pMatrix.copyRowTo(3, p);\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n}\n\nexport = ObliqueNearPlaneProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicOffCenterProjection extends ProjectionBase\n{\n\n\tprivate _minX:number;\n\tprivate _maxX:number;\n\tprivate _minY:number;\n\tprivate _maxY:number;\n\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\n\t{\n\t\tsuper();\n\t\tthis._minX = minX;\n\t\tthis._maxX = maxX;\n\t\tthis._minY = minY;\n\t\tthis._maxY = maxY;\n\t}\n\n\tpublic get minX():number\n\t{\n\t\treturn this._minX;\n\t}\n\n\tpublic set minX(value:number)\n\t{\n\t\tthis._minX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxX():number\n\t{\n\t\treturn this._maxX;\n\t}\n\n\tpublic set maxX(value:number)\n\t{\n\t\tthis._maxX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get minY():number\n\t{\n\t\treturn this._minY;\n\t}\n\n\tpublic set minY(value:number)\n\t{\n\t\tthis._minY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxY():number\n\t{\n\t\treturn this._maxY;\n\t}\n\n\tpublic set maxY(value:number)\n\t{\n\t\tthis._maxY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar w:number = 1/(this._maxX - this._minX);\n\t\tvar h:number = 1/(this._maxY - this._minY);\n\t\tvar d:number = 1/(this._pFar - this._pNear);\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(this._maxX + this._minX)*w;\n\t\traw[13] = -(this._maxY + this._minY)*h;\n\t\traw[14] = -this._pNear*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = OrthographicOffCenterProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicProjection extends ProjectionBase\n{\n\n\tprivate _projectionHeight:number;\n\tprivate _xMax:number;\n\tprivate _yMax:number;\n\n\tconstructor(projectionHeight:number = 500)\n\t{\n\t\tsuper();\n\t\tthis._projectionHeight = projectionHeight;\n\t}\n\n\tpublic get projectionHeight():number\n\t{\n\t\treturn this._projectionHeight;\n\t}\n\n\tpublic set projectionHeight(value:number)\n\t{\n\t\tif (value == this._projectionHeight) {\n\t\t\treturn;\n\t\t}\n\t\tthis._projectionHeight = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.projectionHeight = this._projectionHeight;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tthis._yMax = this._projectionHeight*.5;\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\n\t\t\t// assume symmetric frustum\n\n\t\t\tleft = -this._xMax;\n\t\t\tright = this._xMax;\n\t\t\ttop = -this._yMax;\n\t\t\tbottom = this._yMax;\n\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\n\t\t\traw[5] = 2/this._projectionHeight;\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\n\t\t\traw[15] = 1;\n\n\t\t} else {\n\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\n\n\t\t\tleft = center - xWidth;\n\t\t\tright = center + xWidth;\n\t\t\ttop = middle - yHgt;\n\t\t\tbottom = middle + yHgt;\n\n\t\t\traw[0] = 2*1/(right - left);\n\t\t\traw[5] = -2*1/(top - bottom);\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\n\t\t\traw[12] = (right + left)/(right - left);\n\t\t\traw[13] = (bottom + top)/(bottom - top);\n\t\t\traw[14] = this._pNear/(this.near - this.far);\n\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\t\traw[15] = 1;\n\t\t}\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport= OrthographicProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport CoordinateSystem\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass PerspectiveProjection extends ProjectionBase\n{\n\tprivate _fieldOfView:number = 60;\n\tprivate _focalLength:number = 1000;\n\tprivate _hFieldOfView:number = 60;\n\tprivate _hFocalLength:number = 1000;\n\tprivate _preserveAspectRatio:boolean = true;\n\tprivate _preserveFocalLength:boolean = false;\n\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper(coordinateSystem);\n\t\tthis.fieldOfView = fieldOfView;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveAspectRatio():boolean\n\t{\n\t\treturn this._preserveAspectRatio;\n\t}\n\n\tpublic set preserveAspectRatio(value:boolean)\n\t{\n\t\tif (this._preserveAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._preserveAspectRatio = value;\n\n\t\tif (this._preserveAspectRatio)\n\t\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveFocalLength():boolean\n\t{\n\t\treturn this._preserveFocalLength;\n\t}\n\n\tpublic set preserveFocalLength(value:boolean)\n\t{\n\t\tif (this._preserveFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._preserveFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get fieldOfView():number\n\t{\n\t\treturn this._fieldOfView;\n\t}\n\n\tpublic set fieldOfView(value:number)\n\t{\n\t\tif (this._fieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._fieldOfView = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get focalLength():number\n\t{\n\t\treturn this._focalLength;\n\t}\n\n\tpublic set focalLength(value:number)\n\t{\n\t\tif (this._focalLength == value)\n\t\t\treturn;\n\n\t\tthis._focalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFieldOfView():number\n\t{\n\t\treturn this._hFieldOfView;\n\t}\n\n\tpublic set hFieldOfView(value:number)\n\t{\n\t\tif (this._hFieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._hFieldOfView = value;\n\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFocalLength():number\n\t{\n\t\treturn this._hFocalLength;\n\t}\n\n\tpublic set hFocalLength(value:number)\n\t{\n\t\tif (this._hFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._hFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\n\t\tv.x *= sZ;\n\t\tv.y *= sZ;\n\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tif (this._preserveFocalLength) {\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\n\t\t} else {\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\n\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\t\t\telse\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\n\t\t}\n\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\t// assume scissored frustum\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\n\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\n\t\tright = center;\n\t\ttop = middle;\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\n\n\t\traw[0] = 2/(right - left);\n\t\traw[5] = 2/(bottom - top);\n\t\traw[8] = (right + left)/(right - left);\n\t\traw[9] = (bottom + top)/(bottom - top);\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\n\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\n\t\t\traw[5] = -raw[5];\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\n\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\n\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\n\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionBase extends EventDispatcher implements IProjection\n{\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\tpublic _pViewPort:Rectangle = new Rectangle();\n\tpublic _pNear:number = 20;\n\tpublic _pFar:number = 3000;\n\tpublic _pAspectRatio:number = 1;\n\n\tpublic _pMatrixInvalid:boolean = true;\n\tpublic _pFrustumCorners:number[] = [];\n\tpublic _pCoordinateSystem:string;\n\tpublic _pOriginX:number = 0.5;\n\tpublic _pOriginY:number = 0.5;\n\n\tprivate _unprojection:Matrix3D;\n\tprivate _unprojectionInvalid:boolean = true;\n\n\tconstructor(coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper();\n\n\t\tthis.coordinateSystem = coordinateSystem;\n\t}\n\n\t/**\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\n\t */\n\tpublic get coordinateSystem():string\n\t{\n\t\treturn this._pCoordinateSystem;\n\t}\n\n\tpublic set coordinateSystem(value:string)\n\t{\n\t\tif (this._pCoordinateSystem == value)\n\t\t\treturn;\n\n\t\tthis._pCoordinateSystem = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._pFrustumCorners;\n\t}\n\n\tpublic set frustumCorners(frustumCorners:number[])\n\t{\n\t\tthis._pFrustumCorners = frustumCorners;\n\t}\n\n\tpublic get matrix():Matrix3D\n\t{\n\t\tif (this._pMatrixInvalid) {\n\t\t\tthis.pUpdateMatrix();\n\t\t\tthis._pMatrixInvalid = false;\n\t\t}\n\t\treturn this._pMatrix;\n\t}\n\n\tpublic set matrix(value:Matrix3D)\n\t{\n\t\tthis._pMatrix = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get near():number\n\t{\n\t\treturn this._pNear;\n\t}\n\n\tpublic set near(value:number)\n\t{\n\t\tif (value == this._pNear) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pNear = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get originX():number\n\t{\n\t\treturn this._pOriginX;\n\t}\n\n\tpublic set originX(value:number)\n\t{\n\t\tif (this._pOriginX == value)\n\t\t\treturn;\n\n\t\tthis._pOriginX = value;\n\t}\n\n\tpublic get originY():number\n\t{\n\t\treturn this._pOriginY;\n\t}\n\n\tpublic set originY(value:number)\n\t{\n\t\tif (this._pOriginY == value)\n\t\t\treturn;\n\n\t\tthis._pOriginY = value;\n\t}\n\n\tpublic get far():number\n\t{\n\t\treturn this._pFar;\n\t}\n\n\tpublic set far(value:number)\n\t{\n\t\tif (value == this._pFar) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pFar = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\n\t\tv.x = v.x/v.w;\n\t\tv.y = -v.y/v.w;\n\n\t\t//z is unaffected by transform\n\t\tv.z = point3d.z;\n\n\t\treturn v;\n\t}\n\n\tpublic get unprojectionMatrix():Matrix3D\n\t{\n\t\tif (this._unprojectionInvalid) {\n\t\t\tif (!this._unprojection)\n\t\t\t\tthis._unprojection = new Matrix3D();\n\n\t\t\tthis._unprojection.copyFrom(this.matrix);\n\t\t\tthis._unprojection.invert();\n\t\t\tthis._unprojectionInvalid = false;\n\t\t}\n\t\treturn this._unprojection;\n\t}\n\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():ProjectionBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iAspectRatio():number\n\t{\n\t\treturn this._pAspectRatio;\n\t}\n\n\tpublic set _iAspectRatio(value:number)\n\t{\n\t\tif (this._pAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._pAspectRatio = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic pInvalidateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = true;\n\t\tthis._unprojectionInvalid = true;\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\n\t}\n\n\tpublic pUpdateMatrix()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pScissorRect.x = x;\n\t\tthis._pScissorRect.y = y;\n\t\tthis._pScissorRect.width = width;\n\t\tthis._pScissorRect.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pViewPort.x = x;\n\t\tthis._pViewPort.y = y;\n\t\tthis._pViewPort.width = width;\n\t\tthis._pViewPort.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n}\n\nexport = ProjectionBase;",
    "class Keyboard\n{\n\t/**\n\t * Constant associated with the key code value for the A key (65).\n\t */\n\tpublic static A:number /*uint*/ = 65;\n\n\t/**\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\n\t */\n\tpublic static ALTERNATE:number /*uint*/ = 18;\n\n\t/**\n\t * Select the audio mode\n\t */\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\n\n\t/**\n\t * Constant associated with the key code value for the B key (66).\n\t */\n\tpublic static B:number /*uint*/ = 66;\n\n\t/**\n\t * Return to previous page in application\n\t */\n\tpublic static BACK:number /*uint*/ = 0x01000016;\n\n\t/**\n\t * Constant associated with the key code value for the ` key (192).\n\t */\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\n\n\t/**\n\t * Constant associated with the key code value for the \\ key (220).\n\t */\n\tpublic static BACKSLASH:number /*uint*/ = 220;\n\n\t/**\n\t * Constant associated with the key code value for the Backspace key (8).\n\t */\n\tpublic static BACKSPACE:number /*uint*/ = 8;\n\n\t/**\n\t * Blue function key button\n\t */\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\n\n\t/**\n\t * Constant associated with the key code value for the C key (67).\n\t */\n\tpublic static C:number /*uint*/ = 67;\n\n\t/**\n\t * Constant associated with the key code value for the Caps Lock key (20).\n\t */\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\n\n\t/**\n\t * Channel down\n\t */\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Channel up\n\t */\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Constant associated with the key code value for the , key (188).\n\t */\n\tpublic static COMMA:number /*uint*/ = 188;\n\n\t/**\n\t * Constant associated with the Mac command key (15). This constant is\n\t * currently only used for setting menu key equivalents.\n\t */\n\tpublic static COMMAND:number /*uint*/ = 15;\n\n\t/**\n\t * Constant associated with the key code value for the Control key (17).\n\t */\n\tpublic static CONTROL:number /*uint*/ = 17;\n\n\t/**\n\t * An array containing all the defined key name constants.\n\t */\n\tpublic static CharCodeStrings:Array<any>;\n\n\t/**\n\t * Constant associated with the key code value for the D key (68).\n\t */\n\tpublic static D:number /*uint*/ = 68;\n\n\t/**\n\t * Constant associated with the key code value for the Delete key (46).\n\t */\n\tpublic static DELETE:number /*uint*/ = 46;\n\n\t/**\n\t * Constant associated with the key code value for the Down Arrow key (40).\n\t */\n\tpublic static DOWN:number /*uint*/ = 40;\n\n\t/**\n\t * Engage DVR application mode\n\t */\n\tpublic static DVR:number /*uint*/ = 0x01000019;\n\n\t/**\n\t * Constant associated with the key code value for the E key (69).\n\t */\n\tpublic static E:number /*uint*/ = 69;\n\n\t/**\n\t * Constant associated with the key code value for the End key (35).\n\t */\n\tpublic static END:number /*uint*/ = 35;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key (13).\n\t */\n\tpublic static ENTER:number /*uint*/ = 13;\n\n\t/**\n\t * Constant associated with the key code value for the = key (187).\n\t */\n\tpublic static EQUAL:number /*uint*/ = 187;\n\n\t/**\n\t * Constant associated with the key code value for the Escape key (27).\n\t */\n\tpublic static ESCAPE:number /*uint*/ = 27;\n\n\t/**\n\t * Exits current application mode\n\t */\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\n\n\t/**\n\t * Constant associated with the key code value for the F key (70).\n\t */\n\tpublic static F:number /*uint*/ = 70;\n\n\t/**\n\t * Constant associated with the key code value for the F1 key (112).\n\t */\n\tpublic static F1:number /*uint*/ = 112;\n\n\t/**\n\t * Constant associated with the key code value for the F10 key (121).\n\t */\n\tpublic static F10:number /*uint*/ = 121;\n\n\t/**\n\t * Constant associated with the key code value for the F11 key (122).\n\t */\n\tpublic static F11:number /*uint*/ = 122;\n\n\t/**\n\t * Constant associated with the key code value for the F12 key (123).\n\t */\n\tpublic static F12:number /*uint*/ = 123;\n\n\t/**\n\t * Constant associated with the key code value for the F13 key (124).\n\t */\n\tpublic static F13:number /*uint*/ = 124;\n\n\t/**\n\t * Constant associated with the key code value for the F14 key (125).\n\t */\n\tpublic static F14:number /*uint*/ = 125;\n\n\t/**\n\t * Constant associated with the key code value for the F15 key (126).\n\t */\n\tpublic static F15:number /*uint*/ = 126;\n\n\t/**\n\t * Constant associated with the key code value for the F2 key (113).\n\t */\n\tpublic static F2:number /*uint*/ = 113;\n\n\t/**\n\t * Constant associated with the key code value for the F3 key (114).\n\t */\n\tpublic static F3:number /*uint*/ = 114;\n\n\t/**\n\t * Constant associated with the key code value for the F4 key (115).\n\t */\n\tpublic static F4:number /*uint*/ = 115;\n\n\t/**\n\t * Constant associated with the key code value for the F5 key (116).\n\t */\n\tpublic static F5:number /*uint*/ = 116;\n\n\t/**\n\t * Constant associated with the key code value for the F6 key (117).\n\t */\n\tpublic static F6:number /*uint*/ = 117;\n\n\t/**\n\t * Constant associated with the key code value for the F7 key (118).\n\t */\n\tpublic static F7:number /*uint*/ = 118;\n\n\t/**\n\t * Constant associated with the key code value for the F8 key (119).\n\t */\n\tpublic static F8:number /*uint*/ = 119;\n\n\t/**\n\t * Constant associated with the key code value for the F9 key (120).\n\t */\n\tpublic static F9:number /*uint*/ = 120;\n\n\t/**\n\t * Engage fast-forward transport mode\n\t */\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\n\n\t/**\n\t * Constant associated with the key code value for the G key (71).\n\t */\n\tpublic static G:number /*uint*/ = 71;\n\n\t/**\n\t * Green function key button\n\t */\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\n\n\t/**\n\t * Engage program guide\n\t */\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\n\n\t/**\n\t * Constant associated with the key code value for the H key (72).\n\t */\n\tpublic static H:number /*uint*/ = 72;\n\n\t/**\n\t * Engage help application or context-sensitive help\n\t */\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\n\n\t/**\n\t * Constant associated with the key code value for the Home key (36).\n\t */\n\tpublic static HOME:number /*uint*/ = 36;\n\n\t/**\n\t * Constant associated with the key code value for the I key (73).\n\t */\n\tpublic static I:number /*uint*/ = 73;\n\n\t/**\n\t * Info button\n\t */\n\tpublic static INFO:number /*uint*/ = 0x01000013;\n\n\t/**\n\t * Cycle input\n\t */\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\n\n\t/**\n\t * Constant associated with the key code value for the Insert key (45).\n\t */\n\tpublic static INSERT:number /*uint*/ = 45;\n\n\t/**\n\t * Constant associated with the key code value for the J key (74).\n\t */\n\tpublic static J:number /*uint*/ = 74;\n\n\t/**\n\t * Constant associated with the key code value for the K key (75).\n\t */\n\tpublic static K:number /*uint*/ = 75;\n\n\t/**\n\t * The Begin key\n\t */\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\n\n\t/**\n\t * The Break key\n\t */\n\tpublic static KEYNAME_BREAK:string = \"Break\";\n\n\t/**\n\t * The Clear Display key\n\t */\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\n\n\t/**\n\t * The Clear Line key\n\t */\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\n\n\t/**\n\t * The Delete key\n\t */\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\n\n\t/**\n\t * The Delete Character key\n\t */\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\n\n\t/**\n\t * The Delete Line key\n\t */\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\n\n\t/**\n\t * The down arrow\n\t */\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\n\n\t/**\n\t * The End key\n\t */\n\tpublic static KEYNAME_END:string = \"End\";\n\n\t/**\n\t * The Execute key\n\t */\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\n\n\t/**\n\t * The F1 key\n\t */\n\tpublic static KEYNAME_F1:string = \"F1\";\n\n\t/**\n\t * The F10 key\n\t */\n\tpublic static KEYNAME_F10:string = \"F10\";\n\n\t/**\n\t * The F11 key\n\t */\n\tpublic static KEYNAME_F11:string = \"F11\";\n\n\t/**\n\t * The F12 key\n\t */\n\tpublic static KEYNAME_F12:string = \"F12\";\n\n\t/**\n\t * The F13 key\n\t */\n\tpublic static KEYNAME_F13:string = \"F13\";\n\n\t/**\n\t * The F14 key\n\t */\n\tpublic static KEYNAME_F14:string = \"F14\";\n\n\t/**\n\t * The F15 key\n\t */\n\tpublic static KEYNAME_F15:string = \"F15\";\n\n\t/**\n\t * The F16 key\n\t */\n\tpublic static KEYNAME_F16:string = \"F16\";\n\n\t/**\n\t * The F17 key\n\t */\n\tpublic static KEYNAME_F17:string = \"F17\";\n\n\t/**\n\t * The F18 key\n\t */\n\tpublic static KEYNAME_F18:string = \"F18\";\n\n\t/**\n\t * The F19 key\n\t */\n\tpublic static KEYNAME_F19:string = \"F19\";\n\n\t/**\n\t * The F2 key\n\t */\n\tpublic static KEYNAME_F2:string = \"F2\";\n\n\t/**\n\t * The F20 key\n\t */\n\tpublic static KEYNAME_F20:string = \"F20\";\n\n\t/**\n\t * The F21 key\n\t */\n\tpublic static KEYNAME_F21:string = \"F21\";\n\n\t/**\n\t * The F22 key\n\t */\n\tpublic static KEYNAME_F22:string = \"F22\";\n\n\t/**\n\t * The F23 key\n\t */\n\tpublic static KEYNAME_F23:string = \"F23\";\n\n\t/**\n\t * The F24 key\n\t */\n\tpublic static KEYNAME_F24:string = \"F24\";\n\n\t/**\n\t * The F25 key\n\t */\n\tpublic static KEYNAME_F25:string = \"F25\";\n\n\t/**\n\t * The F26 key\n\t */\n\tpublic static KEYNAME_F26:string = \"F26\";\n\n\t/**\n\t * The F27 key\n\t */\n\tpublic static KEYNAME_F27:string = \"F27\";\n\n\t/**\n\t * The F28 key\n\t */\n\tpublic static KEYNAME_F28:string = \"F28\";\n\n\t/**\n\t * The F29 key\n\t */\n\tpublic static KEYNAME_F29:string = \"F29\";\n\n\t/**\n\t * The F3 key\n\t */\n\tpublic static KEYNAME_F3:string = \"F3\";\n\n\t/**\n\t * The F30 key\n\t */\n\tpublic static KEYNAME_F30:string = \"F30\";\n\n\t/**\n\t * The F31 key\n\t */\n\tpublic static KEYNAME_F31:string = \"F31\";\n\n\t/**\n\t * The F32 key\n\t */\n\tpublic static KEYNAME_F32:string = \"F32\";\n\n\t/**\n\t * The F33 key\n\t */\n\tpublic static KEYNAME_F33:string = \"F33\";\n\n\t/**\n\t * The F34 key\n\t */\n\tpublic static KEYNAME_F34:string = \"F34\";\n\n\t/**\n\t * The F35 key\n\t */\n\tpublic static KEYNAME_F35:string = \"F35\";\n\n\t/**\n\t * The F4 key\n\t */\n\tpublic static KEYNAME_F4:string = \"F4\";\n\n\t/**\n\t * The F5 key\n\t */\n\tpublic static KEYNAME_F5:string = \"F5\";\n\n\t/**\n\t * The F6 key\n\t */\n\tpublic static KEYNAME_F6:string = \"F6\";\n\n\t/**\n\t * The F7 key\n\t */\n\tpublic static KEYNAME_F7:string = \"F7\";\n\n\t/**\n\t * The F8 key\n\t */\n\tpublic static KEYNAME_F8:string = \"F8\";\n\n\t/**\n\t * The F9 key\n\t */\n\tpublic static KEYNAME_F9:string = \"F9\";\n\n\t/**\n\t * The Find key\n\t */\n\tpublic static KEYNAME_FIND:string = \"Find\";\n\n\t/**\n\t * The Help key\n\t */\n\tpublic static KEYNAME_HELP:string = \"Help\";\n\n\t/**\n\t * The Home key\n\t */\n\tpublic static KEYNAME_HOME:string = \"Home\";\n\n\t/**\n\t * The Insert key\n\t */\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\n\n\t/**\n\t * The Insert Character key\n\t */\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\n\n\t/**\n\t * The Insert Line key\n\t */\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\n\n\t/**\n\t * The left arrow\n\t */\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\n\n\t/**\n\t * The Menu key\n\t */\n\tpublic static KEYNAME_MENU:string = \"Menu\";\n\n\t/**\n\t * The Mode Switch key\n\t */\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\n\n\t/**\n\t * The Next key\n\t */\n\tpublic static KEYNAME_NEXT:string = \"Next\";\n\n\t/**\n\t * The Page Down key\n\t */\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\n\n\t/**\n\t * The Page Up key\n\t */\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\n\n\t/**\n\t * The Pause key\n\t */\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\n\n\t/**\n\t * The Previous key\n\t */\n\tpublic static KEYNAME_PREV:string = \"Prev\";\n\n\t/**\n\t * The PRINT key\n\t */\n\tpublic static KEYNAME_PRINT:string = \"Print\";\n\n\t/**\n\t * The PRINT Screen\n\t */\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\n\n\t/**\n\t * The Redo key\n\t */\n\tpublic static KEYNAME_REDO:string = \"Redo\";\n\n\t/**\n\t * The Reset key\n\t */\n\tpublic static KEYNAME_RESET:string = \"Reset\";\n\n\t/**\n\t * The right arrow\n\t */\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\n\n\t/**\n\t * The Scroll Lock key\n\t */\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\n\n\t/**\n\t * The Select key\n\t */\n\tpublic static KEYNAME_SELECT:string = \"Select\";\n\n\t/**\n\t * The Stop key\n\t */\n\tpublic static KEYNAME_STOP:string = \"Stop\";\n\n\t/**\n\t * The System Request key\n\t */\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\n\n\t/**\n\t * The System key\n\t */\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\n\n\t/**\n\t * The Undo key\n\t */\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\n\n\t/**\n\t * The up arrow\n\t */\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\n\n\t/**\n\t * The User key\n\t */\n\tpublic static KEYNAME_USER:string = \"User\";\n\n\t/**\n\t * Constant associated with the key code value for the L key (76).\n\t */\n\tpublic static L:number /*uint*/ = 76;\n\n\t/**\n\t * Watch last channel or show watched\n\t */\n\tpublic static LAST:number /*uint*/ = 0x01000011;\n\n\t/**\n\t * Constant associated with the key code value for the Left Arrow key (37).\n\t */\n\tpublic static LEFT:number /*uint*/ = 37;\n\n\t/**\n\t * Constant associated with the key code value for the [ key (219).\n\t */\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\n\n\t/**\n\t * Return to live [position in broadcast]\n\t */\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\n\n\t/**\n\t * Constant associated with the key code value for the M key (77).\n\t */\n\tpublic static M:number /*uint*/ = 77;\n\n\t/**\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\n\t */\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\n\n\t/**\n\t * Engage menu\n\t */\n\tpublic static MENU:number /*uint*/ = 0x01000012;\n\n\t/**\n\t * Constant associated with the key code value for the - key (189).\n\t */\n\tpublic static MINUS:number /*uint*/ = 189;\n\n\t/**\n\t * Constant associated with the key code value for the N key (78).\n\t */\n\tpublic static N:number /*uint*/ = 78;\n\n\t/**\n\t * Skip to next track or chapter\n\t */\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\n\n\t/**\n\t * Constant associated with the key code value for the 0 key (48).\n\t */\n\tpublic static NUMBER_0:number /*uint*/ = 48;\n\n\t/**\n\t * Constant associated with the key code value for the 1 key (49).\n\t */\n\tpublic static NUMBER_1:number /*uint*/ = 49;\n\n\t/**\n\t * Constant associated with the key code value for the 2 key (50).\n\t */\n\tpublic static NUMBER_2:number /*uint*/ = 50;\n\n\t/**\n\t * Constant associated with the key code value for the 3 key (51).\n\t */\n\tpublic static NUMBER_3:number /*uint*/ = 51;\n\n\t/**\n\t * Constant associated with the key code value for the 4 key (52).\n\t */\n\tpublic static NUMBER_4:number /*uint*/ = 52;\n\n\t/**\n\t * Constant associated with the key code value for the 5 key (53).\n\t */\n\tpublic static NUMBER_5:number /*uint*/ = 53;\n\n\t/**\n\t * Constant associated with the key code value for the 6 key (54).\n\t */\n\tpublic static NUMBER_6:number /*uint*/ = 54;\n\n\t/**\n\t * Constant associated with the key code value for the 7 key (55).\n\t */\n\tpublic static NUMBER_7:number /*uint*/ = 55;\n\n\t/**\n\t * Constant associated with the key code value for the 8 key (56).\n\t */\n\tpublic static NUMBER_8:number /*uint*/ = 56;\n\n\t/**\n\t * Constant associated with the key code value for the 9 key (57).\n\t */\n\tpublic static NUMBER_9:number /*uint*/ = 57;\n\n\t/**\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\n\t */\n\tpublic static NUMPAD:number /*uint*/ = 21;\n\n\t/**\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\n\t */\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\n\n\t/**\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\n\t */\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\n\n\t/**\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\n\t */\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\n\n\t/**\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\n\t */\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\n\n\t/**\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\n\t */\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\n\n\t/**\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\n\t */\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\n\n\t/**\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\n\t */\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\n\n\t/**\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\n\t */\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\n\n\t/**\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\n\t */\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\n\n\t/**\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\n\t */\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\n\n\t/**\n\t * Constant associated with the key code value for the addition key on the number pad (107).\n\t */\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\n\n\t/**\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\n\t */\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\n\n\t/**\n\t * Constant associated with the key code value for the division key on the number pad (111).\n\t */\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\n\t */\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\n\n\t/**\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\n\t */\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\n\n\t/**\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\n\t */\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\n\n\t/**\n\t * Constant associated with the key code value for the O key (79).\n\t */\n\tpublic static O:number /*uint*/ = 79;\n\n\t/**\n\t * Constant associated with the key code value for the P key (80).\n\t */\n\tpublic static P:number /*uint*/ = 80;\n\n\t/**\n\t * Constant associated with the key code value for the Page Down key (34).\n\t */\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\n\n\t/**\n\t * Constant associated with the key code value for the Page Up key (33).\n\t */\n\tpublic static PAGE_UP:number /*uint*/ = 33;\n\n\t/**\n\t * Engage pause transport mode\n\t */\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\n\n\t/**\n\t * Constant associated with the key code value for the . key (190).\n\t */\n\tpublic static PERIOD:number /*uint*/ = 190;\n\n\t/**\n\t * Engage play transport mode\n\t */\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\n\n\t/**\n\t * Skip to previous track or chapter\n\t */\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\n\n\t/**\n\t * Constant associated with the key code value for the Q key (81).\n\t */\n\tpublic static Q:number /*uint*/ = 81;\n\n\t/**\n\t * Constant associated with the key code value for the ' key (222).\n\t */\n\tpublic static QUOTE:number /*uint*/ = 222;\n\n\t/**\n\t * Constant associated with the key code value for the R key (82).\n\t */\n\tpublic static R:number /*uint*/ = 82;\n\n\t/**\n\t * Record item or engage record transport mode\n\t */\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\n\n\t/**\n\t * Red function key button\n\t */\n\tpublic static RED:number /*uint*/ = 0x01000000;\n\n\t/**\n\t * Engage rewind transport mode\n\t */\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\n\n\t/**\n\t * Constant associated with the key code value for the Right Arrow key (39).\n\t */\n\tpublic static RIGHT:number /*uint*/ = 39;\n\n\t/**\n\t * Constant associated with the key code value for the ] key (221).\n\t */\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\n\n\t/**\n\t * Constant associated with the key code value for the S key (83).\n\t */\n\tpublic static S:number /*uint*/ = 83;\n\n\t/**\n\t * Search button\n\t */\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\n\n\t/**\n\t * Constant associated with the key code value for the ; key (186).\n\t */\n\tpublic static SEMICOLON:number /*uint*/ = 186;\n\n\t/**\n\t * Engage setup application or menu\n\t */\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\n\n\t/**\n\t * Constant associated with the key code value for the Shift key (16).\n\t */\n\tpublic static SHIFT:number /*uint*/ = 16;\n\n\t/**\n\t * Quick skip backward (usually 7-10 seconds)\n\t */\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\n\n\t/**\n\t * Quick skip ahead (usually 30 seconds)\n\t */\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\n\n\t/**\n\t * Constant associated with the key code value for the / key (191).\n\t */\n\tpublic static SLASH:number /*uint*/ = 191;\n\n\t/**\n\t * Constant associated with the key code value for the Spacebar (32).\n\t */\n\tpublic static SPACE:number /*uint*/ = 32;\n\n\t/**\n\t * Engage stop transport mode\n\t */\n\tpublic static STOP:number /*uint*/ = 0x01000009;\n\n\t/**\n\t * Toggle subtitles\n\t */\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\n\n\t/**\n\t * Constant associated with the key code value for the T key (84).\n\t */\n\tpublic static T:number /*uint*/ = 84;\n\n\t/**\n\t * Constant associated with the key code value for the Tab key (9).\n\t */\n\tpublic static TAB:number /*uint*/ = 9;\n\n\t/**\n\t * Constant associated with the key code value for the U key (85).\n\t */\n\tpublic static U:number /*uint*/ = 85;\n\n\t/**\n\t * Constant associated with the key code value for the Up Arrow key (38).\n\t */\n\tpublic static UP:number /*uint*/ = 38;\n\n\t/**\n\t * Constant associated with the key code value for the V key (86).\n\t */\n\tpublic static V:number /*uint*/ = 86;\n\n\t/**\n\t * Engage video-on-demand\n\t */\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\n\n\t/**\n\t * Constant associated with the key code value for the W key (87).\n\t */\n\tpublic static W:number /*uint*/ = 87;\n\n\t/**\n\t * Constant associated with the key code value for the X key (88).\n\t */\n\tpublic static X:number /*uint*/ = 88;\n\n\t/**\n\t * Constant associated with the key code value for the Y key (89).\n\t */\n\tpublic static Y:number /*uint*/ = 89;\n\n\t/**\n\t * Yellow function key button\n\t */\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\n\n\t/**\n\t * Constant associated with the key code value for the Z key (90).\n\t */\n\tpublic static Z:number /*uint*/ = 90;\n\n}\n\nexport = Keyboard;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\nclass BitmapImageUtils\n{\n\tpublic static _fillRect(context:CanvasRenderingContext2D, rect:Rectangle, color:number, transparent:boolean)\n\t{\n\t\tif (color == 0x0 && transparent) {\n\t\t\tcontext.clearRect(rect.x, rect.y, rect.width, rect.height);\n\t\t} else {\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\t\tif (transparent)\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\n\t\t\telse\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\n\n\t\t\tcontext.fillRect(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\t}\n\n\tpublic static _copyPixels(context:CanvasRenderingContext2D, bmpd:HTMLElement, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tcontext.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t}\n\n\tpublic static _draw(context:CanvasRenderingContext2D, source:any, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean)\n\t{\n\t\tcontext.save();\n\n\t\tif (matrix != null)\n\t\t\tcontext.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\n\t\tif (clipRect != null)\n\t\t\tcontext.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\n\t\telse\n\t\t\tcontext.drawImage(source, 0, 0);\n\n\t\tcontext.restore();\n\t}\n}\n\nexport = BitmapImageUtils;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nclass ByteArrayBase\n{\n\tpublic position:number = 0;\n\tpublic length:number = 0;\n\tpublic _mode:string = \"\";\n\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\n\t}\n\n\tpublic compareEqual(other, count)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (count > other.length - other.position)\n\t\t\tcount = other.length - other.position;\n\t\tvar co0 = count;\n\t\tvar r = true;\n\t\twhile (r && count >= 4) {\n\t\t\tcount -= 4;\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\n\t\t}\n\t\twhile (r && count >= 1) {\n\t\t\tcount--;\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\n\t\t}\n\t\tvar c0;\n\t\tthis.position -= (c0 - count);\n\t\tother.position -= (c0 - count);\n\t\treturn r;\n\t}\n\n\tpublic writeBase64String(s:string)\n\t{\n\t\tfor (var i:number = 0; i < s.length; i++) {\n\t\t\tvar v = s.charAt(i);\n\t\t}\n\t}\n\n\tpublic dumpToConsole()\n\t{\n\t\tvar oldpos = this.position;\n\t\tthis.position = 0;\n\t\tvar nstep:number = 8;\n\n\t\tfunction asHexString(x, digits)\n\t\t{\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\n\t\t\tvar sh:string = \"\";\n\t\t\tfor (var d:number = 0; d < digits; d++) {\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\n\t\t\t}\n\t\t\treturn sh;\n\t\t}\n\n\t\tfor (var i = 0; i < this.length; i += nstep) {\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\n\t\t\t}\n\t\t\tconsole.log(s);\n\t\t}\n\t\tthis.position = oldpos;\n\t}\n\n\tpublic readBase64String(count:number)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (!(count > 0)) return \"\";\n\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\n\t}\n\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self)\n\t{ // return base64 string of the next count bytes\n\t\tvar r = \"\";\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\n\t\tvar base64Key = ByteArrayBase.Base64Key;\n\t\twhile (count >= 3) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\n\t\t\tenc4 = b2 & 63;\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\n\t\t\tcount -= 3;\n\t\t}\n\t\t// pad\n\t\tif (count == 2) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\n\t\t} else if (count == 1) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\n\t\t}\n\t\treturn r;\n\t}\n}\n\nexport = ByteArrayBase;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArrayBuffer extends ByteArrayBase\n{\n\n\t/*\n\t public maxlength:number = 0;\n\t public arraybytes; //ArrayBuffer\n\t public unalignedarraybytestemp; //ArrayBuffer\n\t */\n\n\tpublic _bytes:number[];\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._bytes = [];\n\t\tthis._mode = \"Array\";\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[this.position++] = bi & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tif (this.position + 2 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\n\t\tthis.position += 2;\n\t\treturn r;\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tif (this.position + 4 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\n\t\tthis.position += 4;\n\t\treturn r >>> 0;\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\t// this is crazy slow and silly, but as a fallback...\n\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\t// don't handle inf/nan yet\n\t\t// special case zero\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\t// remove the sign, after this we only deal with positive numbers\n\t\tvar sign:number = 0;\n\t\tif (x < 0) {\n\t\t\tx = -x;\n\t\t\tsign = 1;\n\t\t} else {\n\t\t\tsign = 0;\n\t\t}\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\n\t\texponent = Math.floor(exponent);\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\n\t\tvar mantissa = Math.floor(x) - 0x800000;\n\t\texponent = exponent + 127;\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\n\t\tif (x >>> 31 != 0) {\n\t\t\ty = -y;\n\t\t}\n\t\treturn y;\n\t}\n\n\t/*\n\t public ensureWriteableSpace( n:number )\n\t {\n\t this.ensureSpace( n + this.position );\n\t }\n\n\t private ensureSpace( n:number )\n\t {\n\t if ( n > this.maxlength ) {\n\t var newmaxlength:number = (n+255)&(~255);\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t newview.set(view);      // memcpy\n\t this.arraybytes = newarraybuffer;\n\t this.maxlength = newmaxlength;\n\t }\n\t }\n\t */\n}\n\nexport = ByteArrayBuffer;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArray extends ByteArrayBase\n{\n\tpublic maxlength:number;\n\tpublic arraybytes; //ArrayBuffer\n\tpublic unalignedarraybytestemp; //ArrayBuffer\n\n\tconstructor(maxlength:number = 4)\n\t{\n\t\tsuper();\n\t\tthis._mode = \"Typed array\";\n\t\tthis.maxlength = Math.max((maxlength + 255) & (~255), 4);\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\n\t}\n\n\tpublic ensureWriteableSpace(n:number)\n\t{\n\t\tthis.ensureSpace(n + this.position);\n\t}\n\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\n\t{\n\t\tthis.ensureSpace(aBuffer.byteLength);\n\n\t\tthis.length = aBuffer.byteLength;\n\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\n\n\t\tlocalInt8View.set(inInt8AView);\n\n\t\tthis.position = 0;\n\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\treturn ( this.length ) - ( this.position );\n\t}\n\n\tpublic ensureSpace(n:number)\n\t{\n\t\tif (n > this.maxlength) {\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t\t\tnewview.set(view);      // memcpy\n\t\t\tthis.arraybytes = newarraybuffer;\n\t\t\tthis.maxlength = newmaxlength;\n\t\t}\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\n\t\tvar view = new Int8Array(this.arraybytes);\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte()\n\t{\n\t\tif (this.position >= this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view = new Int8Array(this.arraybytes);\n\n\t\treturn view[ this.position++ ];\n\t}\n\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0)\n\t{\n\t\tif (length == null)\n\t\t\tlength = bytes.length;\n\n\t\tbytes.ensureWriteableSpace(offset + length);\n\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\n\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\n\n\t\tthis.position += length;\n\n\t\tif (length + offset > bytes.length)\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUnsignedByte()\n\t{\n\t\tif (this.position >= this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\treturn view[this.position++];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(2);\n\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview2.set(view3);\n\t\t}\n\n\t\tthis.position += 2;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUTFBytes(len:number):string\n\t{\n\t\tvar value:string = \"\";\n\t\tvar max:number = this.position + len;\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\n\t\t// utf8-encode\n\t\twhile (this.position < max) {\n\n\t\t\tvar c:number = data.getUint8(this.position++);\n\n\t\t\tif (c < 0x80) {\n\n\t\t\t\tif (c == 0) break;\n\t\t\t\tvalue += String.fromCharCode(c);\n\n\t\t\t} else if (c < 0xE0) {\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else if (c < 0xF0) {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvar c3 = data.getUint8(this.position++);\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic readInt():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar int:number = data.getInt32(this.position, true);\n\n\t\tthis.position += 4;\n\n\t\treturn int;\n\t}\n\n\tpublic readShort():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar short:number = data.getInt16(this.position, true);\n\n\t\tthis.position += 2;\n\n\t\treturn short;\n\t}\n\n\tpublic readDouble():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar double:number = data.getFloat64(this.position, true);\n\n\t\tthis.position += 8;\n\n\t\treturn double;\n\t}\n\n\tpublic readUnsignedShort()\n\t{\n\t\tif (this.position > this.length + 2)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 1;\n\t\t\tthis.position += 2;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 2;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffffffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUnsignedInt()\n\t{\n\t\tif (this.position > this.length + 4)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = b;\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = b;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readFloat()\n\t{\n\t\tif (this.position > this.length + 4)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tif ((this.position & 3) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tvar pa = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[pa];\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[ 0 ];\n\t\t}\n\t}\n}\n\nexport = ByteArray;",
    "class CSS\n{\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.width = width + \"px\";\n\t\telement.style.height = height + \"px\";\n\t\telement[\"width\"] = width;\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementWidth(element:HTMLElement, width:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.width = width + \"px\";\n\t\telement[\"width\"] = width;\n\t}\n\n\tpublic static setElementHeight(element:HTMLElement, height:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.height = height + \"px\";\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementX(element:HTMLElement, x:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.position = 'absolute';\n\t\telement.style.left = x + \"px\";\n\t}\n\n\tpublic static setElementY(element:HTMLElement, y:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.position = 'absolute';\n\t\telement.style.top = y + \"px\";\n\t}\n\n\tpublic static getElementVisibility(element:HTMLElement):boolean\n\t{\n\t\tif(!element) return false;\n\t\treturn element.style.visibility == 'visible';\n\t}\n\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean)\n\t{\n\t\tif(!element) return;\n\t\tif (visible) {\n\t\t\telement.style.visibility = 'visible';\n\t\t} else {\n\t\t\telement.style.visibility = 'hidden';\n\t\t}\n\t}\n\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number)\n\t{\n\t\tif (element instanceof HTMLCanvasElement) {\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\n\t\t\tcontext.globalAlpha = alpha;\n\t\t}\n\t}\n\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false)\n\t{\n\t\tif(!element) return;\n\t\tif (absolute) {\n\t\t\telement.style.position = \"absolute\";\n\t\t} else {\n\t\t\telement.style.position = \"relative\";\n\t\t}\n\n\t\telement.style.left = x + \"px\";\n\t\telement.style.top = y + \"px\";\n\t}\n}\n\nexport = CSS;",
    "/**\n *\n */\nclass ColorUtils\n{\n\tpublic static float32ColorToARGB(float32Color:number):number[]\n\t{\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24;\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\n\t\tvar b:number = float32Color & 0xff;\n\t\tvar result:number[] = [ a, r , g , b ];\n\n\t\treturn result;\n\t}\n\n\tpublic static ARGBtoFloat32(a:number, r:number, g:number, b:number):number\n\t{\n\t\treturn ((a << 24) | (r << 16) | (g << 8) | b);\n\t}\n\n\tprivate static componentToHex(c:number):string\n\t{\n\t\tvar hex = c.toString(16);\n\t\treturn hex.length == 1? \"0\" + hex : hex;\n\t}\n\n\tpublic static RGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n\n\tpublic static ARGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n}\n\nexport = ColorUtils;",
    "import PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\n\n/**\n *\n */\nclass Debug\n{\n\tpublic static THROW_ERRORS:boolean = true;\n\tpublic static ENABLE_LOG:boolean = true;\n\tpublic static LOG_PI_ERRORS:boolean = true;\n\n\tprivate static keyword:string = null;\n\n\tpublic static breakpoint():void\n\t{\n\t\tDebug['break']();\n\t}\n\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true)\n\t{\n\t\tif (!enable)\n\t\t\tDebug.keyword = null;\n\t\telse\n\t\t\tDebug.keyword = str;\n\t}\n\n\tpublic static throwPIR(clss:string, fnc:string, msg:string)\n\t{\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\n\n\t\tif (Debug.THROW_ERRORS) {\n\t\t\tif (Debug.keyword) {\n\t\t\t\tvar e:string = clss + fnc + msg;\n\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\n\t\t}\n\t}\n\n\tprivate static logPIR(clss:string, fnc:string, msg:string = '')\n\t{\n\t\tif (Debug.LOG_PI_ERRORS)\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\n\t}\n\n\tpublic static log(...args:any[])\n\t{\n\t\tif (Debug.ENABLE_LOG)\n\t\t\tconsole.log(args);\n\t}\n}\n\nexport = Debug;",
    "declare var SIMD:any;\n\n/**\n *\n */\nclass Extensions\n{\n\tpublic static SIMD:boolean = Boolean(typeof(SIMD) !== \"undefined\");\n}\n\nexport = Extensions;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nclass ImageUtils\n{\n\tprivate static MAX_SIZE:number = 2048;\n\n\tpublic static isImage2DValid(image2D:Image2D):boolean\n\t{\n\t\tif (image2D == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image2D.width) && ImageUtils.isDimensionValid(image2D.height);\n\t}\n\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\n\t{\n\t\tif (image == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image.width) && ImageUtils.isDimensionValid(image.height);\n\t}\n\n\tpublic static isDimensionValid(d:number):boolean\n\t{\n\t\treturn d >= 1 && d <= ImageUtils.MAX_SIZE && ImageUtils.isPowerOfTwo(d);\n\t}\n\n\tpublic static isPowerOfTwo(value:number):boolean\n\t{\n\t\treturn value? ((value & -value) == value) : false;\n\t}\n\n\tpublic static getBestPowerOf2(value:number):number\n\t{\n\t\tvar p:number = 1;\n\n\t\twhile (p < value)\n\t\t\tp <<= 1;\n\n\t\tif (p > ImageUtils.MAX_SIZE)\n\t\t\tp = ImageUtils.MAX_SIZE;\n\n\t\treturn p;\n\t}\n}\n\nexport = ImageUtils",
    "import BitmapImage2D            = require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport CPUCanvas            = require(\"awayjs-core/lib/data/CPUCanvas\");\nimport Matrix                    = require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle                = require(\"awayjs-core/lib/geom/Rectangle\");\n\nclass MipmapGenerator {\n    private static _mipMaps = [];\n    private static _mipMapUses = [];\n\n    private static _matrix:Matrix = new Matrix();\n    private static _rect:Rectangle = new Rectangle();\n    private static _source:BitmapImage2D;\n\n    /**\n     * Uploads a BitmapImage2D with mip maps to a target Texture object.\n     * @param source The source to upload.\n     * @param target The target Texture to upload to.\n     * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\n     * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\n     */\n    public static _generateMipMaps(source:HTMLElement, output?:Array<BitmapImage2D>, alpha?:boolean);\n    public static _generateMipMaps(source:BitmapImage2D, output?:Array<BitmapImage2D>, alpha?:boolean);\n    public static _generateMipMaps(source:any, output?:Array<BitmapImage2D>, alpha:boolean = false) {\n        var w:number = source.width;\n        var h:number = source.height;\n        var i:number = 0;\n\n        var mipmap:BitmapImage2D;\n\n        MipmapGenerator._rect.width = w;\n        MipmapGenerator._rect.height = h;\n\n        //use (OR) to create non-square texture mipmaps\n        while (w >= 1 || h >= 1) {\n\n            mipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\n\n            if (alpha)\n                mipmap.fillRect(MipmapGenerator._rect, 0);\n\n\n            MipmapGenerator._matrix.a = MipmapGenerator._rect.width / source.width;\n            MipmapGenerator._matrix.d = MipmapGenerator._rect.height / source.height;\n            //todo: add support for NPOT textures\n            if (document) {\n                mipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\n            } else {\n                if (source.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\n                    //for BitmapImage2D\n                    var bitmapImage:BitmapImage2D = <BitmapImage2D> source;\n                    bitmapImage.lock();\n                    mipmap.lock();\n                    this.downsampleImage(bitmapImage.getImageData(), mipmap.getImageData());\n                    mipmap.unlock();\n                    bitmapImage.unlock();\n                }else if(source.constructor.toString().indexOf(\"CPUCanvas\") > -1){\n                    this.downsampleImage(source.getImageData(), mipmap.getImageData());\n                } else {\n                    //for imageData\n                    this.downsampleImage(source, mipmap.getImageData());\n                }\n            }\n\n            w >>= 1;\n            h >>= 1;\n\n            MipmapGenerator._rect.width = w > 1 ? w : 1;\n            MipmapGenerator._rect.height = h > 1 ? h : 1;\n\n            i++;\n        }\n    }\n\n    private static _getMipmapHolder(mipMapHolder:BitmapImage2D, newW:number, newH:number):BitmapImage2D {\n        if (mipMapHolder) {\n            if (mipMapHolder.width == newW && mipMapHolder.height == newH)\n                return mipMapHolder;\n\n            MipmapGenerator._freeMipMapHolder(mipMapHolder);\n        }\n\n        if (!MipmapGenerator._mipMaps[newW]) {\n            MipmapGenerator._mipMaps[newW] = [];\n            MipmapGenerator._mipMapUses[newW] = [];\n        }\n\n        if (!MipmapGenerator._mipMaps[newW][newH]) {\n            mipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapImage2D(newW, newH, true);\n            MipmapGenerator._mipMapUses[newW][newH] = 1;\n        } else {\n            MipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\n            mipMapHolder = MipmapGenerator._mipMaps[newW][newH];\n        }\n\n        return mipMapHolder;\n    }\n\n    public static _freeMipMapHolder(mipMapHolder:BitmapImage2D) {\n        var holderWidth:number = mipMapHolder.width;\n        var holderHeight:number = mipMapHolder.height;\n\n        if (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\n            MipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\n            MipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\n        }\n    }\n\n    public static downsampleImage(bitmap:ImageData, destBitmap:ImageData):ImageData {\n        var box:BoxFilter = new BoxFilter();\n        var xkernel:PolyphaseKernel = new PolyphaseKernel(box, bitmap.width, destBitmap.width, 4);\n        var ykernel:PolyphaseKernel = new PolyphaseKernel(box, bitmap.height, destBitmap.height, 4);\n\n        var tempBitmap:number[] = [];//destBitmap.width, bitmap.height\n\n        var scale:number = 0;\n        var iscale:number = 0;\n        var kernelLength:number = 0;\n        var kernelWidth:number = 0;\n        var kernelWindowSize:number = 0;\n        var sumR:number = 0;\n        var sumG:number = 0;\n        var sumB:number = 0;\n        var sumA:number = 0;\n        var center:number;\n        var left:number;\n        var i:number = 0;\n        var j:number = 0;\n        var index:number = 0;\n\n        for (var y:number = 0; y < bitmap.height; y++) {\n            kernelLength = xkernel.len;\n            scale = kernelLength / bitmap.width;\n            iscale = 1.0 / scale;\n            kernelWidth = xkernel.width;\n            kernelWindowSize = xkernel.windowSize;\n\n            for (i = 0; i < kernelLength; i++) {\n                center = (0.5 + i) * iscale;\n                left = Math.floor(center - kernelWidth);\n                sumR = 0;\n                sumG = 0;\n                sumB = 0;\n                sumA = 0;\n                for (var j:number = 0; j < kernelWindowSize; ++j) {\n                    index = (y * bitmap.width + (left + j) ) * 4;\n                    var colorR:number = bitmap.data[index];\n                    var colorG:number = bitmap.data[index + 1];\n                    var colorB:number = bitmap.data[index + 2];\n                    var colorA:number = bitmap.data[index + 3];\n\n                    var value:number = xkernel.valueAt(i, j);\n                    sumR += value * colorR;\n                    sumG += value * colorG;\n                    sumB += value * colorB;\n                    sumA += value * colorA;\n                }\n\n                index = (y * destBitmap.width + i) * 4;\n                tempBitmap[index] = sumR;\n                tempBitmap[index + 1] = sumG;\n                tempBitmap[index + 2] = sumB;\n                tempBitmap[index + 3] = sumA;\n            }\n        }\n\n        for (var x:number = 0; x < destBitmap.width; x++) {\n            kernelLength = ykernel.len;\n            scale = kernelLength / bitmap.height;\n            iscale = 1.0 / scale;\n            kernelWidth = ykernel.width;\n            kernelWindowSize = ykernel.windowSize;\n\n            for (i = 0; i < kernelLength; i++) {\n                center = (0.5 + i) * iscale;\n\n                left = Math.floor(center - kernelWidth);\n\n                sumR = 0;\n                sumG = 0;\n                sumB = 0;\n                sumA = 0;\n                for (j = 0; j < kernelWindowSize; ++j) {\n                    index = ((j + left) * destBitmap.width + x) * 4;\n                    var colorR:number = tempBitmap[index];\n                    var colorG:number = tempBitmap[index + 1];\n                    var colorB:number = tempBitmap[index + 2];\n                    var colorA:number = tempBitmap[index + 3];\n\n                    var value:number = ykernel.valueAt(i, j);\n                    sumR += value * colorR;\n                    sumG += value * colorG;\n                    sumB += value * colorB;\n                    sumA += value * colorA;\n                }\n\n                index = (i * destBitmap.width + x) * 4;\n                destBitmap.data[index] = sumR;\n                destBitmap.data[index + 1] = sumG;\n                destBitmap.data[index + 2] = sumB;\n                destBitmap.data[index + 3] = sumA;\n            }\n        }\n\n        return destBitmap;\n    }\n}\nclass PolyphaseKernel {\n    public len:number;\n    public width:number;\n    public windowSize:number;\n    public data:number[];\n\n    constructor(f:BoxFilter, srcLength:number, dstLength:number, samples:number) {\n\n        var scale:number = dstLength / srcLength;\n        var iscale:number = 1.0 / scale;\n\n        if (scale > 1) {\n            // Upsampling.\n            samples = 1;\n            scale = 1;\n        }\n\n        this.len = dstLength;\n        this.width = f.width * iscale;\n        this.windowSize = Math.ceil(this.width * 2);\n\n        this.data = [];\n\n        for (var i:number = 0; i < this.len; i++) {\n            var center:number = (0.5 + i) * iscale;\n\n            var left:number = Math.floor(center - this.width);\n\n            var total:number = 0.0;\n            for (var j:number = 0; j < this.windowSize; j++) {\n                var sample:number = f.sampleBox(left + j - center, scale, samples);\n\n                //printf(\"%f %X\\n\", sample, *(uint32 *)&sample);\n\n                this.data[i * this.windowSize + j] = sample;\n                total += sample;\n            }\n\n            // normalize weights.\n            for (var j:number = 0; j < this.windowSize; j++) {\n                this.data[i * this.windowSize + j] /= total;\n            }\n        }\n    }\n\n    public valueAt(column:number, x:number):number {\n        return this.data[column * this.windowSize + x];\n    }\n}\n\nclass BoxFilter {\n    public get width():number {\n        return 0.5;\n    }\n\n    public sampleBox(x:number, scale:number, samples:number):number {\n        var sum:number = 0;\n        var isamples:number = 1.0 / samples;\n\n        for (var s:number = 0; s < samples; s++) {\n            var p:number = (x + (s + 0.5) * isamples) * scale;\n            var value:number = this.evaluate(p);\n            sum += value;\n        }\n\n        return sum * isamples;\n    }\n\n    public evaluate(x:number):number {\n        if (Math.abs(x) <= this.width) return 1.0;\n        else return 0.0;\n    }\n}\nexport = MipmapGenerator;",
    "import getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nclass RequestAnimationFrame\n{\n\tprivate _callback:Function;\n\tprivate _callbackContext:Object;\n\tprivate _active:boolean = false;\n\tprivate _rafUpdateFunction:any;\n\tprivate _prevTime:number;\n\tprivate _dt:number;\n\tprivate _currentTime:number;\n\tprivate _argsArray:Array<any> = new Array();\n\tprivate _getTimer:Function;\n\n\tconstructor(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._getTimer = getTimer;\n\n\t\tthis.setCallback(callback, callbackContext);\n\n\t\tthis._rafUpdateFunction = () => {\n\t\t\tif (this._active)\n\t\t\t\tthis._tick();\n\t\t}\n\n\t\tthis._argsArray.push(this._dt);\n\t}\n\n\t// Public\n\n\t/**\n\t *\n\t * @param callback\n\t * @param callbackContext\n\t */\n\tpublic setCallback(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._callback = callback;\n\t\tthis._callbackContext = callbackContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic start()\n\t{\n\t\tthis._prevTime = this._getTimer();\n\t\tthis._active = true;\n\n\t\tif(window) {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\t\t\t} else {\n\t\t\t\tif (window['mozRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\n\t\t\t\telse if (window['webkitRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\n\t\t\t\telse if (window['oRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic stop()\n\t{\n\t\tthis._active = false;\n\t}\n\n\t// Get / Set\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic get active():boolean\n\t{\n\t\treturn this._active;\n\t}\n\n\t// Private\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _tick():void\n\t{\n\t\tthis._currentTime = this._getTimer();\n\t\tthis._dt = this._currentTime - this._prevTime;\n\t\tthis._argsArray[0] = this._dt;\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\n\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\n\t\tthis._prevTime = this._currentTime;\n\t}\n\n\n}\n\nexport = RequestAnimationFrame;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\n\nclass Timer extends EventDispatcher\n{\n\tprivate _delay:number;\n\tprivate _repeatCount:number = 0;\n\tprivate _currentCount:number = 0;\n\tprivate _iid:number;\n\tprivate _running:boolean = false;\n\n\tconstructor(delay:number, repeatCount:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._delay = delay;\n\t\tthis._repeatCount = repeatCount;\n\n\t\tif (isNaN(delay) || delay < 0)\n\t\t\tthrow new Error(\"Delay is negative or not a number\");\n\t}\n\n\tpublic get currentCount():number\n\t{\n\t\treturn this._currentCount;\n\t}\n\n\tpublic get delay():number\n\t{\n\t\treturn this._delay;\n\t}\n\n\tpublic set delay(value:number)\n\t{\n\t\tthis._delay = value;\n\n\t\tif (this._running) {\n\t\t\tthis.stop();\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\tpublic get repeatCount():number\n\t{\n\t\treturn this._repeatCount;\n\t}\n\n\tpublic set repeatCount(value:number)\n\t{\n\t\tthis._repeatCount = value;\n\t}\n\n\tpublic reset():void\n\t{\n\t\tif (this._running)\n\t\t\tthis.stop();\n\n\t\tthis._currentCount = 0;\n\t}\n\n\tpublic get running():boolean\n\t{\n\t\treturn this._running;\n\t}\n\n\tpublic start():void\n\t{\n\t\tthis._running = true;\n\t\tclearInterval(this._iid);\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\n\t}\n\n\tpublic stop():void\n\t{\n\t\tthis._running = false;\n\t\tclearInterval(this._iid);\n\t}\n\n\tprivate tick():void\n\t{\n\t\tthis._currentCount++;\n\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\n\n\t\t\tthis.stop();\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t}\n\t}\n}\n\nexport = Timer;",
    "class XmlUtils {\n\n\tpublic static getChildrenWithTag(node:Node, tag:string):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(node) {\n\t\t\tvar num:number = node.childNodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = node.childNodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.nodeName == tag) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static filterListByParam(nodes:NodeList, paramName:string, paramValue):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(nodes) {\n\t\t\tvar num:number = nodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = nodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.attributes.getNamedItem(paramName).value == paramValue) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static strToXml(str:string):Node {\n\t\tvar parser:DOMParser = new DOMParser();\n\t\tvar node:Node = parser.parseFromString(str, \"text/xml\");\n\t\treturn node;\n\t}\n\n\tpublic static nodeToString(node:Node):string {\n\t\tif(!node) return \"\";\n\t\tvar str = (new XMLSerializer()).serializeToString(node);\n\t\treturn str;\n\t}\n\n\tpublic static readAttributeValue(node:Node, attrName:string):string {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn \"\";\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\tif(!attribute) {\n\t\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", attribute does not exist.\");\n\t\t\treturn \"\";\n\t\t}\n\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", value: \" + attribute.value);\n\t\treturn attribute.value;\n\t}\n\n\tpublic static writeAttributeValue(node:Node, attrName:string, attrValue:string) {\n\t\tvar attribute:Attr = new Attr();\n\t\tattribute.name = attrName;\n\t\tattribute.value = attrValue;\n\t\tattribute = node.attributes.setNamedItem(attribute);\n\t\tconsole.log(\"XmlUltils - writeAttributeValue() - name: \" + attribute.name + \", value: \" + attribute.value);\n\t}\n\n\tpublic static hasAttribute(node:Node, attrName:string):boolean {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\treturn attribute != null;\n\t}\n}\nexport = XmlUtils;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "/**\n *\n *\n * @returns {number}\n */\nfunction getTimer():number\n{\n\t// number milliseconds of 1970/01/01\n\t// this different to AS3 implementation which gets the number of milliseconds\n\t// since instance of Flash player was initialised\n\treturn Date.now();\n}\n\nexport = getTimer;"
  ],
  "sourceRoot": ""
}