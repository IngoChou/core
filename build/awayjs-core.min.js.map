{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-core/lib/data/BitmapDataChannel.ts",
    "awayjs-core.js",
    "awayjs-core/lib/data/BitmapData.ts",
    "awayjs-core/lib/data/BlendMode.ts",
    "awayjs-core/lib/data/CurveSubGeometry.ts",
    "awayjs-core/lib/data/Geometry.ts",
    "awayjs-core/lib/data/LineSubGeometry.ts",
    "awayjs-core/lib/data/SubGeometryBase.ts",
    "awayjs-core/lib/data/TriangleSubGeometry.ts",
    "awayjs-core/lib/errors/AbstractMethodError.ts",
    "awayjs-core/lib/errors/ArgumentError.ts",
    "awayjs-core/lib/errors/DocumentError.ts",
    "awayjs-core/lib/errors/Error.ts",
    "awayjs-core/lib/errors/PartialImplementationError.ts",
    "awayjs-core/lib/errors/RangeError.ts",
    "awayjs-core/lib/events/AssetEvent.ts",
    "awayjs-core/lib/events/EventDispatcher.ts",
    "awayjs-core/lib/events/Event.ts",
    "awayjs-core/lib/events/GeometryEvent.ts",
    "awayjs-core/lib/events/HTTPStatusEvent.ts",
    "awayjs-core/lib/events/IOErrorEvent.ts",
    "awayjs-core/lib/events/LoaderEvent.ts",
    "awayjs-core/lib/events/ParserEvent.ts",
    "awayjs-core/lib/events/ProgressEvent.ts",
    "awayjs-core/lib/events/ProjectionEvent.ts",
    "awayjs-core/lib/events/SubGeometryEvent.ts",
    "awayjs-core/lib/events/TimerEvent.ts",
    "awayjs-core/lib/geom/Box.ts",
    "awayjs-core/lib/geom/ColorTransform.ts",
    "awayjs-core/lib/geom/MathConsts.ts",
    "awayjs-core/lib/geom/Matrix3DUtils.ts",
    "awayjs-core/lib/geom/Matrix3D.ts",
    "awayjs-core/lib/geom/Matrix.ts",
    "awayjs-core/lib/geom/Orientation3D.ts",
    "awayjs-core/lib/geom/PerspectiveProjection.ts",
    "awayjs-core/lib/geom/Plane3D.ts",
    "awayjs-core/lib/geom/PlaneClassification.ts",
    "awayjs-core/lib/geom/Point.ts",
    "awayjs-core/lib/geom/PoissonLookup.ts",
    "awayjs-core/lib/geom/Quaternion.ts",
    "awayjs-core/lib/geom/Rectangle.ts",
    "awayjs-core/lib/geom/Sphere.ts",
    "awayjs-core/lib/geom/UVTransform.ts",
    "awayjs-core/lib/geom/Vector3D.ts",
    "awayjs-core/lib/library/AssetBase.ts",
    "awayjs-core/lib/library/AssetLibraryBundle.ts",
    "awayjs-core/lib/library/AssetLibraryIterator.ts",
    "awayjs-core/lib/library/AssetLibrary.ts",
    "awayjs-core/lib/library/AssetLoaderContext.ts",
    "awayjs-core/lib/library/AssetLoaderToken.ts",
    "awayjs-core/lib/library/AssetLoader.ts",
    "awayjs-core/lib/library/ConflictPrecedence.ts",
    "awayjs-core/lib/library/ConflictStrategyBase.ts",
    "awayjs-core/lib/library/ConflictStrategy.ts",
    "awayjs-core/lib/library/ErrorConflictStrategy.ts",
    "awayjs-core/lib/library/IDUtil.ts",
    "awayjs-core/lib/library/IgnoreConflictStrategy.ts",
    "awayjs-core/lib/library/NumSuffixConflictStrategy.ts",
    "awayjs-core/lib/net/CrossDomainPolicy.ts",
    "awayjs-core/lib/net/URLLoaderDataFormat.ts",
    "awayjs-core/lib/net/URLLoader.ts",
    "awayjs-core/lib/net/URLRequestMethod.ts",
    "awayjs-core/lib/net/URLRequest.ts",
    "awayjs-core/lib/net/URLVariables.ts",
    "awayjs-core/lib/parsers/CubeTextureParser.ts",
    "awayjs-core/lib/parsers/ParserBase.ts",
    "awayjs-core/lib/parsers/ParserDataFormat.ts",
    "awayjs-core/lib/parsers/ParserUtils.ts",
    "awayjs-core/lib/parsers/ResourceDependency.ts",
    "awayjs-core/lib/parsers/Texture2DParser.ts",
    "awayjs-core/lib/projections/CoordinateSystem.ts",
    "awayjs-core/lib/projections/FreeMatrixProjection.ts",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection.ts",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection.ts",
    "awayjs-core/lib/projections/OrthographicProjection.ts",
    "awayjs-core/lib/projections/PerspectiveProjection.ts",
    "awayjs-core/lib/projections/ProjectionBase.ts",
    "awayjs-core/lib/textures/BitmapCubeTexture.ts",
    "awayjs-core/lib/textures/BitmapTexture.ts",
    "awayjs-core/lib/textures/CubeTextureBase.ts",
    "awayjs-core/lib/textures/ImageCubeTexture.ts",
    "awayjs-core/lib/textures/ImageTexture.ts",
    "awayjs-core/lib/textures/MipmapGenerator.ts",
    "awayjs-core/lib/textures/RenderTexture.ts",
    "awayjs-core/lib/textures/SpecularBitmapTexture.ts",
    "awayjs-core/lib/textures/Texture2DBase.ts",
    "awayjs-core/lib/textures/TextureBase.ts",
    "awayjs-core/lib/ui/Keyboard.ts",
    "awayjs-core/lib/utils/ByteArrayBase.ts",
    "awayjs-core/lib/utils/ByteArrayBuffer.ts",
    "awayjs-core/lib/utils/ByteArray.ts",
    "awayjs-core/lib/utils/CSS.ts",
    "awayjs-core/lib/utils/ColorUtils.ts",
    "awayjs-core/lib/utils/Debug.ts",
    "awayjs-core/lib/utils/RequestAnimationFrame.ts",
    "awayjs-core/lib/utils/TextureUtils.ts",
    "awayjs-core/lib/utils/Timer.ts",
    "awayjs-core/lib/utils/getTimer.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-core/lib/data/BitmapDataChannel",
    "module",
    "BitmapDataChannel",
    "ALPHA",
    "BLUE",
    "GREEN",
    "RED",
    "awayjs-core/lib/data/BitmapData",
    "Rectangle",
    "ColorUtils",
    "BitmapData",
    "width",
    "height",
    "transparent",
    "fillColor",
    "this",
    "_locked",
    "_transparent",
    "_imageCanvas",
    "document",
    "createElement",
    "_context",
    "getContext",
    "_rect",
    "fillRect",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "set",
    "value",
    "putImageData",
    "_imageData",
    "getImageData",
    "enumerable",
    "configurable",
    "clone",
    "draw",
    "colorTransform",
    "rect",
    "data",
    "j",
    "index",
    "x",
    "y",
    "redMultiplier",
    "redOffset",
    "greenMultiplier",
    "greenOffset",
    "blueMultiplier",
    "blueOffset",
    "alphaMultiplier",
    "alphaOffset",
    "copyChannel",
    "sourceBitmap",
    "sourceRect",
    "destPoint",
    "sourceChannel",
    "destChannel",
    "imageData",
    "sourceData",
    "destData",
    "sourceOffset",
    "Math",
    "round",
    "log",
    "destOffset",
    "sourceIndex",
    "destIndex",
    "copyPixels",
    "bmpd",
    "destRect",
    "_copyPixels",
    "dispose",
    "source",
    "matrix",
    "blendMode",
    "clipRect",
    "smoothing",
    "_draw",
    "color",
    "_fillRect",
    "getPixel",
    "g",
    "b",
    "pixelData",
    "getPixel32",
    "lock",
    "setArray",
    "inputArray",
    "argb",
    "float32ColorToARGB",
    "setPixel",
    "setPixel32",
    "setPixels",
    "inputByteArray",
    "position",
    "readUnsignedInt",
    "unlock",
    "drawImage",
    "canvas",
    "HTMLImageElement",
    "save",
    "setTransform",
    "c",
    "d",
    "tx",
    "ty",
    "restore",
    "HTMLElement",
    "clearRect",
    "fillStyle",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/utils/ColorUtils",
    "awayjs-core/lib/data/BlendMode",
    "BlendMode",
    "ADD",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "NORMAL",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "SUBTRACT",
    "awayjs-core/lib/data/CurveSubGeometry",
    "__extends",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "SubGeometryBase",
    "Vector3D",
    "SubGeometryEvent",
    "CurveSubGeometry",
    "_super",
    "concatenatedArrays",
    "_positionsDirty",
    "_curvesDirty",
    "_faceNormalsDirty",
    "_vertexNormalsDirty",
    "_uvsDirty",
    "_secondaryUVsDirty",
    "_jointIndicesDirty",
    "_jointWeightsDirty",
    "_concatenateArrays",
    "_autoDeriveNormals",
    "_useFaceWeights",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "assetType",
    "_useCondensedIndices",
    "_pUpdateStrideOffset",
    "_pOffset",
    "VERTEX_DATA",
    "POSITION_DATA",
    "stride",
    "_curves",
    "CURVE_DATA",
    "_uvs",
    "UV_DATA",
    "_pStride",
    "len",
    "_pNumVertices",
    "_pVertices",
    "Array",
    "_pStrideOffsetDirty",
    "notifyUVsUpdate",
    "updatePositions",
    "_positions",
    "updateCurves",
    "updateUVs",
    "updateFaceNormals",
    "_faceNormals",
    "_condensedIndexLookUp",
    "getBoundingPositions",
    "values",
    "positions",
    "getStride",
    "getOffset",
    "pInvalidateBounds",
    "notifyPositionsUpdate",
    "offset",
    "curves",
    "_pNotifyVerticesUpdate",
    "notifyCurvesUpdate",
    "uvs",
    "uvIdx",
    "lenV",
    "_faceWeights",
    "updateIndices",
    "indices",
    "_pIndices",
    "concat",
    "scaleUV",
    "scaleU",
    "scaleV",
    "ratioU",
    "ratioV",
    "scale",
    "applyTransformation",
    "transform",
    "i1",
    "i2",
    "vector",
    "invTranspose",
    "vi0",
    "vStride",
    "z",
    "transformVector",
    "k",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "cx",
    "cy",
    "cz",
    "sqrt",
    "w",
    "_positionsUpdated",
    "VERTICES_UPDATED",
    "dispatchEvent",
    "_curvesUpdated",
    "_uvsUpdated",
    "POSITION_FORMAT",
    "CURVE_FORMAT",
    "UV_FORMAT",
    "awayjs-core/lib/data/SubGeometryBase",
    "awayjs-core/lib/events/SubGeometryEvent",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/data/Geometry",
    "GeometryEvent",
    "AssetBase",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "subGeometry",
    "push",
    "parentGeometry",
    "hasEventListener",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "splice",
    "indexOf",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-core/lib/events/GeometryEvent",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-core/lib/data/LineSubGeometry",
    "TriangleSubGeometry",
    "LineSubGeometry",
    "_boundingPositionDirty",
    "_thicknessDirty",
    "_colorsDirty",
    "START_POSITION_DATA",
    "END_POSITION_DATA",
    "THICKNESS_DATA",
    "COLOR_DATA",
    "_startPositions",
    "_endPositions",
    "updateThickness",
    "_thickness",
    "updateColors",
    "_startColors",
    "_endColors",
    "_numSegments",
    "_boundingPositions",
    "startPositions",
    "endPositions",
    "startValues",
    "endValues",
    "thickness",
    "floor",
    "notifyThicknessUpdate",
    "colors",
    "notifyColorsUpdate",
    "_thicknessUpdated",
    "_colorUpdated",
    "COLOR_FORMAT",
    "THICKNESS_FORMAT",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "AbstractMethodError",
    "_pConcatenateArrays",
    "updateVertices",
    "_numTriangles",
    "dataType",
    "_numIndices",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "awayjs-core/lib/errors/AbstractMethodError",
    "_faceTangentsDirty",
    "_vertexTangentsDirty",
    "_autoDeriveTangents",
    "notifyJointIndicesUpdate",
    "_vertexNormals",
    "NORMAL_DATA",
    "_vertexTangents",
    "TANGENT_DATA",
    "_secondaryUVs",
    "SECONDARY_UV_DATA",
    "_jointIndices",
    "JOINT_INDEX_DATA",
    "_jointsPerVertex",
    "_jointWeights",
    "JOINT_WEIGHT_DATA",
    "notifyNormalsUpdate",
    "notifyTangentsUpdate",
    "updateVertexNormals",
    "updateVertexTangents",
    "updateSecondaryUVs",
    "updateJointIndices",
    "updateJointWeights",
    "updateFaceTangents",
    "_faceTangents",
    "_condensedJointIndices",
    "_numCondensedJoints",
    "normals",
    "f1",
    "f2",
    "f3",
    "lenI",
    "weight",
    "vx",
    "vy",
    "vz",
    "tangents",
    "notifySecondaryUVsUpdate",
    "jointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "undefined",
    "jointWeights",
    "notifyJointWeightsUpdate",
    "jointsPerVertex",
    "bakeNormals",
    "bakeTangents",
    "invert",
    "transpose",
    "ni0",
    "ti0",
    "nStride",
    "tStride",
    "deltaTransformVector",
    "normalize",
    "index1",
    "index2",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "_normalsUpdated",
    "_tangentsUpdated",
    "_secondaryUVsUpdated",
    "_jointIndicesUpdated",
    "_jointWeightsUpdated",
    "NORMAL_FORMAT",
    "TANGENT_FORMAT",
    "SECONDARY_UV_FORMAT",
    "message",
    "id",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/ArgumentError",
    "ArgumentError",
    "awayjs-core/lib/errors/DocumentError",
    "DocumentError",
    "DOCUMENT_DOES_NOT_EXIST",
    "_name",
    "_errorID",
    "_messsage",
    "name",
    "awayjs-core/lib/errors/PartialImplementationError",
    "PartialImplementationError",
    "dependency",
    "awayjs-core/lib/errors/RangeError",
    "RangeError",
    "awayjs-core/lib/events/AssetEvent",
    "Event",
    "AssetEvent",
    "type",
    "asset",
    "prevName",
    "_asset",
    "_prevName",
    "assetPrevName",
    "ASSET_COMPLETE",
    "ASSET_RENAME",
    "ASSET_CONFLICT_RESOLVED",
    "TEXTURE_SIZE_ERROR",
    "awayjs-core/lib/events/Event",
    "awayjs-core/lib/events/EventDispatcher",
    "EventDispatcher",
    "target",
    "listeners",
    "addEventListener",
    "listener",
    "getEventListenerIndex",
    "removeEventListener",
    "event",
    "listenerArray",
    "COMPLETE",
    "OPEN",
    "ENTER_FRAME",
    "EXIT_FRAME",
    "RESIZE",
    "ERROR",
    "CHANGE",
    "_subGeometry",
    "awayjs-core/lib/events/HTTPStatusEvent",
    "HTTPStatusEvent",
    "status",
    "HTTP_STATUS",
    "awayjs-core/lib/events/IEventDispatcher",
    "awayjs-core/lib/events/IOErrorEvent",
    "IOErrorEvent",
    "IO_ERROR",
    "awayjs-core/lib/events/LoaderEvent",
    "LoaderEvent",
    "url",
    "content",
    "assets",
    "_url",
    "_content",
    "_assets",
    "RESOURCE_COMPLETE",
    "awayjs-core/lib/events/ParserEvent",
    "ParserEvent",
    "_message",
    "PARSE_COMPLETE",
    "PARSE_ERROR",
    "READY_FOR_DEPENDENCIES",
    "awayjs-core/lib/events/ProgressEvent",
    "ProgressEvent",
    "PROGRESS",
    "awayjs-core/lib/events/ProjectionEvent",
    "ProjectionEvent",
    "projection",
    "_projection",
    "MATRIX_CHANGED",
    "_dataType",
    "awayjs-core/lib/events/TimerEvent",
    "TimerEvent",
    "TIMER",
    "TIMER_COMPLETE",
    "awayjs-core/lib/geom/Box",
    "Box",
    "depth",
    "val",
    "_bottomRightBack",
    "_size",
    "_topLeftFront",
    "contains",
    "containsPoint",
    "containsBox",
    "box",
    "copyFrom",
    "sourceBox",
    "equals",
    "toCompare",
    "inflate",
    "dx",
    "dy",
    "dz",
    "inflatePoint",
    "delta",
    "intersection",
    "toIntersect",
    "intersects",
    "rayIntersection",
    "direction",
    "targetNormal",
    "halfExtentsX",
    "halfExtentsY",
    "halfExtentsZ",
    "centerX",
    "centerY",
    "centerZ",
    "px",
    "py",
    "pz",
    "ix",
    "iy",
    "iz",
    "rayEntryDistance",
    "closestPointToPoint",
    "point",
    "isEmpty",
    "offsetPosition",
    "setEmpty",
    "setTo",
    "xa",
    "ya",
    "za",
    "widtha",
    "heighta",
    "deptha",
    "toString",
    "union",
    "toUnion",
    "awayjs-core/lib/geom/ColorTransform",
    "ColorTransform",
    "second",
    "awayjs-core/lib/geom/MathConsts",
    "MathConsts",
    "RADIANS_TO_DEGREES",
    "PI",
    "DEGREES_TO_RADIANS",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "Matrix3D",
    "Matrix3DUtils",
    "quaternion2matrix",
    "quarternion",
    "m",
    "xx",
    "xy",
    "xz",
    "xw",
    "yy",
    "yz",
    "yw",
    "zz",
    "zw",
    "raw",
    "RAW_DATA_CONTAINER",
    "copyRawDataFrom",
    "getForward",
    "v",
    "copyColumnTo",
    "getUp",
    "getRight",
    "compare",
    "m1",
    "m2",
    "r1",
    "r2",
    "rawData",
    "copyRawDataTo",
    "lookAt",
    "pos",
    "dir",
    "up",
    "dirN",
    "upN",
    "lftN",
    "crossProduct",
    "dotProduct",
    "reflection",
    "plane",
    "ab2",
    "ac2",
    "bc2",
    "result",
    "h",
    "getTranslation",
    "deltaTransformVectors",
    "vin",
    "vout",
    "outIndex",
    "CALCULATION_MATRIX",
    "awayjs-core/lib/geom/Matrix3D",
    "Orientation3D",
    "append",
    "lhs",
    "m111",
    "m121",
    "m131",
    "m141",
    "m112",
    "m122",
    "m132",
    "m142",
    "m113",
    "m123",
    "m133",
    "m143",
    "m114",
    "m124",
    "m134",
    "m144",
    "m211",
    "m221",
    "m231",
    "m241",
    "m212",
    "m222",
    "m232",
    "m242",
    "m213",
    "m223",
    "m233",
    "m243",
    "m214",
    "m224",
    "m234",
    "m244",
    "appendRotation",
    "degrees",
    "axis",
    "getAxisRotation",
    "appendScale",
    "xScale",
    "yScale",
    "zScale",
    "appendTranslation",
    "slice",
    "copyColumnFrom",
    "column",
    "vector3D",
    "sourceMatrix3D",
    "copyRowFrom",
    "row",
    "copyRowTo",
    "copyToMatrix3D",
    "dest",
    "decompose",
    "orientationStyle",
    "q",
    "vec",
    "mr",
    "rot",
    "AXIS_ANGLE",
    "acos",
    "QUATERNION",
    "tr",
    "EULER_ANGLES",
    "asin",
    "atan2",
    "identity",
    "interpolate",
    "thisMat",
    "toMat",
    "percent",
    "interpolateTo",
    "determinant",
    "invertable",
    "abs",
    "m11",
    "m21",
    "m31",
    "m41",
    "m12",
    "m22",
    "m32",
    "m42",
    "m13",
    "m23",
    "m33",
    "m43",
    "m14",
    "m24",
    "m34",
    "m44",
    "prepend",
    "rhs",
    "prependRotation",
    "prependScale",
    "prependTranslation",
    "recompose",
    "components",
    "angle",
    "cos",
    "sin",
    "transformVectors",
    "oRawData",
    "rad",
    "tmp1",
    "tmp2",
    "toFixed",
    "decimalPlace",
    "magnitude",
    "pow",
    "awayjs-core/lib/geom/Orientation3D",
    "awayjs-core/lib/geom/Matrix",
    "Point",
    "Matrix",
    "a1",
    "c1",
    "tx1",
    "sourceMatrix",
    "createBox",
    "scaleX",
    "scaleY",
    "rotation",
    "createGradientBox",
    "deltaTransformPoint",
    "norm",
    "multiply",
    "rotate",
    "sx",
    "sy",
    "transformPoint",
    "translate",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/PerspectiveProjection",
    "PerspectiveProjection",
    "toMatrix3D",
    "_matrix3D",
    "awayjs-core/lib/geom/Plane3D",
    "PlaneClassification",
    "Plane3D",
    "_iAlignment",
    "ALIGN_XY_AXIS",
    "ALIGN_YZ_AXIS",
    "ALIGN_XZ_AXIS",
    "ALIGN_ANY",
    "fromPoints",
    "p0",
    "p1",
    "p2",
    "d1x",
    "d1y",
    "d1z",
    "d2x",
    "d2y",
    "d2z",
    "fromNormalAndPoint",
    "normal",
    "distance",
    "classifyPoint",
    "epsilon",
    "FRONT",
    "BACK",
    "INTERSECT",
    "awayjs-core/lib/geom/PlaneClassification",
    "IN",
    "OUT",
    "add",
    "sourcePoint",
    "invLength",
    "subtract",
    "pt1",
    "pt2",
    "polar",
    "awayjs-core/lib/geom/PoissonLookup",
    "PoissonLookup",
    "initDistributions",
    "_distributions",
    "getDistribution",
    "awayjs-core/lib/geom/Quaternion",
    "Quaternion",
    "qa",
    "qb",
    "w1",
    "w2",
    "multiplyVector",
    "fromAxisAngle",
    "sin_a",
    "cos_a",
    "slerp",
    "dot",
    "s1",
    "s2",
    "lerp",
    "fromEulerAngles",
    "ax",
    "ay",
    "az",
    "halfX",
    "halfY",
    "halfZ",
    "cosX",
    "sinX",
    "cosY",
    "sinY",
    "cosZ",
    "sinZ",
    "toEulerAngles",
    "mag",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "ww",
    "fromMatrix",
    "toRawData",
    "exclude4thRow",
    "rotatePoint",
    "_bottomRight",
    "_topLeft",
    "containsRect",
    "offsetPoint",
    "awayjs-core/lib/geom/Sphere",
    "Sphere",
    "radius",
    "det",
    "sqrtDet",
    "awayjs-core/lib/geom/UVTransform",
    "UVTransform",
    "_uvMatrix",
    "_rotation",
    "_offsetU",
    "_offsetV",
    "_uvMatrixDirty",
    "updateUVMatrix",
    "lengthSquared",
    "angleBetween",
    "src",
    "decrementBy",
    "allFour",
    "incrementBy",
    "nearEquals",
    "tolerance",
    "negate",
    "project",
    "scaleBy",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "_id",
    "ID_COUNT",
    "_originalName",
    "updateFullPath",
    "prev",
    "_namespace",
    "_full_path",
    "assetPathEquals",
    "ns",
    "isAsset",
    "assetClass",
    "resetAssetPath",
    "overrideOriginal",
    "DEFAULT_NAMESPACE",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "AssetLibraryIterator",
    "AssetLoader",
    "ConflictPrecedence",
    "ConflictStrategy",
    "AssetLibraryBundle",
    "_this",
    "_loadingSessionsGarbage",
    "_assetDictionary",
    "_loadingSessions",
    "conflictStrategy",
    "IGNORE",
    "create",
    "conflictPrecedence",
    "FAVOR_NEW",
    "_onAssetRenameDelegate",
    "onAssetRename",
    "_onAssetConflictResolvedDelegate",
    "onAssetConflictResolved",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "getInstance",
    "key",
    "_iInstances",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "_strategy",
    "_strategyPreference",
    "createIterator",
    "assetTypeFilter",
    "namespaceFilter",
    "filterFunc",
    "load",
    "req",
    "context",
    "parser",
    "loader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "loadData",
    "getAsset",
    "_assetDictDirty",
    "rehashAssetDict",
    "addAsset",
    "old",
    "assetNamespace",
    "resolveConflict",
    "removeAsset",
    "idx",
    "removeAssetFromDict",
    "removeAssetByName",
    "removeAllAssets",
    "removeNamespaceAssets",
    "old_assets",
    "autoRemoveEmptyNamespace",
    "empty",
    "stopAllLoadingSessions",
    "killLoadingSession",
    "_gcTimeoutIID",
    "setTimeout",
    "loadingSessionGC",
    "pop",
    "clearTimeout",
    "stop",
    "dict",
    "awayjs-core/lib/library/AssetLibraryIterator",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-core/lib/library/ConflictPrecedence",
    "awayjs-core/lib/library/ConflictStrategy",
    "filter",
    "_idx",
    "_filtered",
    "next",
    "reset",
    "setIndex",
    "awayjs-core/lib/library/AssetLibrary",
    "AssetLibrary",
    "getBundle",
    "stopLoad",
    "awayjs-core/lib/library/AssetLoaderContext",
    "AssetLoaderContext",
    "includeDependencies",
    "dependencyBaseUrl",
    "_includeDependencies",
    "_dependencyBaseUrl",
    "_embeddedDataByUrl",
    "_remappedUrls",
    "_materialMode",
    "UNDEFINED",
    "materialMode",
    "_overrideAbsPath",
    "_overrideFullUrls",
    "mapUrl",
    "originalUrl",
    "newUrl",
    "mapUrlToData",
    "_iHasDataForUrl",
    "_iGetDataForUrl",
    "_iHasMappingForUrl",
    "_iGetRemappedUrl",
    "SINGLEPASS_MATERIALS",
    "MULTIPASS_MATERIALS",
    "awayjs-core/lib/library/AssetLoaderToken",
    "AssetLoaderToken",
    "_iLoader",
    "URLLoader",
    "URLLoaderDataFormat",
    "CubeTextureParser",
    "ResourceDependency",
    "Texture2DParser",
    "_stack",
    "_errorHandlers",
    "_parseErrorHandlers",
    "_onReadyForDependenciesDelegate",
    "onReadyForDependencies",
    "_onParseCompleteDelegate",
    "onParseComplete",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_parsers",
    "parsers",
    "_baseDependency",
    "_token",
    "_uri",
    "replace",
    "retrieveDependency",
    "retrieveNext",
    "_currentDependency",
    "dependencies",
    "parsingPaused",
    "_iResumeParsingAfterDependencies",
    "_iSuccess",
    "resolve",
    "addEventListeners",
    "request",
    "Function",
    "_iSetData",
    "retrieveAsRawData",
    "parseDependency",
    "resolveDependencyUrl",
    "dataFormat",
    "BINARY",
    "_iSetParser",
    "getParserFromSuffix",
    "joinUrl",
    "base",
    "end",
    "charAt",
    "substr",
    "scheme_re",
    "RegExp",
    "overrideAbsolutePaths",
    "test",
    "overrideFullURLs",
    "noscheme_url",
    "substring",
    "lastIndexOf",
    "retrieveParserDependencies",
    "parserDependancies",
    "resolveParserDependencies",
    "handled",
    "isDependency",
    "removeEventListeners",
    "resolveFailure",
    "suppresAssetEvents",
    "resolveName",
    "handler",
    "getParserFromData",
    "supportsData",
    "_iFileName",
    "parseAsync",
    "split",
    "fileExtension",
    "toLowerCase",
    "supportsType",
    "awayjs-core/lib/net/URLLoader",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/parsers/CubeTextureParser",
    "awayjs-core/lib/parsers/ResourceDependency",
    "awayjs-core/lib/parsers/Texture2DParser",
    "FAVOR_OLD",
    "awayjs-core/lib/library/ConflictStrategyBase",
    "ConflictStrategyBase",
    "changedAsset",
    "oldAsset",
    "assetsDictionary",
    "precedence",
    "_pUpdateNames",
    "nonConflictingName",
    "newAsset",
    "loser_prev_name",
    "winner",
    "loser",
    "ErrorConflictStrategy",
    "IgnoreConflictStrategy",
    "NumSuffixConflictStrategy",
    "include",
    "APPEND_NUM_SUFFIX",
    "THROW_ERROR",
    "awayjs-core/lib/library/ErrorConflictStrategy",
    "awayjs-core/lib/library/IgnoreConflictStrategy",
    "awayjs-core/lib/library/NumSuffixConflictStrategy",
    "assetFullPath",
    "awayjs-core/lib/library/IAssetClass",
    "awayjs-core/lib/library/IAsset",
    "awayjs-core/lib/library/IDUtil",
    "IDUtil",
    "createUID",
    "uid",
    "ALPHA_CHAR_CODES",
    "random",
    "time",
    "Date",
    "getTime",
    "timeString",
    "toUpperCase",
    "charCodeAt",
    "String",
    "fromCharCode",
    "apply",
    "separator",
    "_separator",
    "_next_suffix",
    "orig",
    "new_name",
    "suffix",
    "parseInt",
    "isNaN",
    "awayjs-core/lib/net/CrossDomainPolicy",
    "CrossDomainPolicy",
    "ANONYMOUS",
    "USE_CREDENTIALS",
    "TEXT",
    "VARIABLES",
    "BLOB",
    "ARRAY_BUFFER",
    "URLRequestMethod",
    "URLVariables",
    "AwayEvent",
    "AwayProgressEvent",
    "_bytesLoaded",
    "_bytesTotal",
    "_dataFormat",
    "_loadError",
    "_request",
    "_data",
    "format",
    "initXHR",
    "method",
    "POST",
    "postRequest",
    "getRequest",
    "close",
    "_XHR",
    "abort",
    "disposeXHR",
    "setResponseType",
    "xhr",
    "responseType",
    "open",
    "async",
    "send",
    "handleXmlHttpRequestException",
    "urlVars",
    "formData",
    "error",
    "XMLHttpRequest",
    "onloadstart",
    "onLoadStart",
    "onprogress",
    "onProgress",
    "onabort",
    "onAbort",
    "onerror",
    "onload",
    "ontimeout",
    "onTimeOut",
    "onloadend",
    "onLoadEnd",
    "onreadystatechange",
    "onReadyStateChange",
    "decodeURLVariables",
    "join",
    "tokens",
    "re",
    "exec",
    "decodeURIComponent",
    "readyState",
    "_loadErrorEvent",
    "_progressEvent",
    "bytesTotal",
    "total",
    "bytesLoaded",
    "loaded",
    "_loadStartEvent",
    "responseText",
    "response",
    "_loadCompleteEvent",
    "awayjs-core/lib/net/URLRequestMethod",
    "awayjs-core/lib/net/URLVariables",
    "GET",
    "awayjs-core/lib/net/URLRequest",
    "URLRequest",
    "_variables",
    "decode",
    "obj",
    "fd",
    "FormData",
    "ParserBase",
    "ImageCubeTexture",
    "extension",
    "JSON",
    "parse",
    "_iResolveDependency",
    "resourceDependency",
    "_iResolveDependencyFailure",
    "_pProceedParsing",
    "_imgDependencyDictionary",
    "_getHTMLImageElement",
    "posX",
    "negX",
    "posY",
    "negY",
    "posZ",
    "negZ",
    "_pFinalizeAsset",
    "PARSING_DONE",
    "json",
    "rec",
    "_pDieWithError",
    "_pAddDependency",
    "image",
    "_validateCubeData",
    "_pPauseAndRetrieveDependencies",
    "MORE_TO_PARSE",
    "htmlImageElement",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/textures/ImageCubeTexture",
    "ParserUtils",
    "TextureUtils",
    "Timer",
    "getTimer",
    "_dependencies",
    "_pOnIntervalDelegate",
    "_pOnInterval",
    "_pContent",
    "isBitmapDataValid",
    "bitmapData",
    "isValid",
    "console",
    "_parsingFailure",
    "_parsingPaused",
    "_parsingComplete",
    "newMaterialMode",
    "frameLimit",
    "_pStartParsing",
    "_iResolveDependencyName",
    "_timer",
    "start",
    "type_event",
    "type_name",
    "suppressErrorEvents",
    "_pHasTime",
    "_lastFrameTime",
    "_frameLimit",
    "_pFinishParsing",
    "_pGetTextData",
    "_pGetByteData",
    "toByteArray",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-core/lib/utils/TextureUtils",
    "awayjs-core/lib/utils/Timer",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-core/lib/parsers/ParserDataFormat",
    "ParserDataFormat",
    "PLAIN_TEXT",
    "IMAGE",
    "ByteArray",
    "arrayBufferToImage",
    "byteStr",
    "bytes",
    "Uint8Array",
    "byteLength",
    "base64Image",
    "window",
    "btoa",
    "str",
    "img",
    "Image",
    "byteArrayToImage",
    "arraybytes",
    "blobToImage",
    "URLObj",
    "createObjectURL",
    "setArrayBuffer",
    "ba",
    "readUTFBytes",
    "min",
    "getBytesAvailable",
    "awayjs-core/lib/utils/ByteArray",
    "parentParser",
    "suppressAssetEvents",
    "_parser",
    "_parentParser",
    "_retrieveAsRawData",
    "_suppressAssetEvents",
    "ImageTexture",
    "readUnsignedShort",
    "readShort",
    "readByte",
    "sizeError",
    "_loadingImage",
    "_htmlImageElement",
    "isHTMLImageElementValid",
    "ArrayBuffer",
    "Blob",
    "awayjs-core/lib/textures/ImageTexture",
    "awayjs-core/lib/pool/ITextureData",
    "awayjs-core/lib/projections/CoordinateSystem",
    "CoordinateSystem",
    "LEFT_HANDED",
    "RIGHT_HANDED",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ProjectionBase",
    "FreeMatrixProjection",
    "_pMatrix",
    "_pNear",
    "_pFar",
    "_pAspectRatio",
    "pInvalidateMatrix",
    "pUpdateMatrix",
    "_pMatrixInvalid",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-core/lib/projections/ProjectionBase",
    "awayjs-core/lib/projections/IProjection",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection",
    "ObliqueNearPlaneProjection",
    "baseProjection",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_baseProjection",
    "frustumCorners",
    "near",
    "far",
    "_iAspectRatio",
    "_plane",
    "cw",
    "signX",
    "signY",
    "inverse",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "OrthographicOffCenterProjection",
    "minX",
    "maxX",
    "minY",
    "maxY",
    "_minX",
    "_maxX",
    "_minY",
    "_maxY",
    "unproject",
    "nX",
    "nY",
    "sZ",
    "unprojectionMatrix",
    "_pFrustumCorners",
    "awayjs-core/lib/projections/OrthographicProjection",
    "OrthographicProjection",
    "projectionHeight",
    "_projectionHeight",
    "_yMax",
    "_xMax",
    "left",
    "right",
    "top",
    "bottom",
    "_pScissorRect",
    "_pViewPort",
    "xWidth",
    "yHgt",
    "center",
    "middle",
    "fieldOfView",
    "coordinateSystem",
    "_fieldOfView",
    "_focalLength",
    "_hFieldOfView",
    "_hFocalLength",
    "_preserveAspectRatio",
    "_preserveFocalLength",
    "tan",
    "_pCoordinateSystem",
    "atan",
    "tanMinX",
    "_pOriginX",
    "tanMaxX",
    "tanMinY",
    "_pOriginY",
    "tanMaxY",
    "_unprojectionInvalid",
    "point3d",
    "_unprojection",
    "_iUpdateScissorRect",
    "_iUpdateViewport",
    "awayjs-core/lib/textures/BitmapCubeTexture",
    "CubeTextureBase",
    "BitmapCubeTexture",
    "_bitmapDatas",
    "_testSize",
    "invalidateContent",
    "_pSetSize",
    "_iGetTextureData",
    "side",
    "awayjs-core/lib/textures/CubeTextureBase",
    "awayjs-core/lib/textures/BitmapTexture",
    "Texture2DBase",
    "BitmapTexture",
    "_bitmapData",
    "awayjs-core/lib/textures/Texture2DBase",
    "MipmapGenerator",
    "TextureBase",
    "_mipmapDataArray",
    "_mipmapDataDirtyArray",
    "size",
    "_pSize",
    "invalidateSize",
    "mipmapData",
    "freeMipMapHolder",
    "_iGetMipmapData",
    "generateMipMaps",
    "awayjs-core/lib/textures/MipmapGenerator",
    "awayjs-core/lib/textures/TextureBase",
    "_htmlImageElements",
    "output",
    "alpha",
    "mipmap",
    "_getMipmapHolder",
    "_matrix",
    "mipMapHolder",
    "newW",
    "newH",
    "_mipMaps",
    "_mipMapUses",
    "holderWidth",
    "holderHeight",
    "awayjs-core/lib/textures/RenderTexture",
    "RenderTexture",
    "_pWidth",
    "isDimensionValid",
    "_pHeight",
    "awayjs-core/lib/textures/SpecularBitmapTexture",
    "SpecularBitmapTexture",
    "specularMap",
    "glossMap",
    "bmd",
    "_specularMap",
    "_glossMap",
    "oldBitmap",
    "origin",
    "_mipmapData",
    "_mipmapDataDirty",
    "TextureProxyBase",
    "generateMipmaps",
    "_pFormat",
    "_textureData",
    "invalidate",
    "_iAddTextureData",
    "textureData",
    "_iRemoveTextureData",
    "awayjs-core/lib/ui/Keyboard",
    "Keyboard",
    "A",
    "ALTERNATE",
    "AUDIO",
    "B",
    "BACKQUOTE",
    "BACKSLASH",
    "BACKSPACE",
    "C",
    "CAPS_LOCK",
    "CHANNEL_DOWN",
    "CHANNEL_UP",
    "COMMA",
    "COMMAND",
    "CONTROL",
    "D",
    "DELETE",
    "DOWN",
    "DVR",
    "E",
    "END",
    "ENTER",
    "EQUAL",
    "ESCAPE",
    "EXIT",
    "F",
    "F1",
    "F10",
    "F11",
    "F12",
    "F13",
    "F14",
    "F15",
    "F2",
    "F3",
    "F4",
    "F5",
    "F6",
    "F7",
    "F8",
    "F9",
    "FAST_FORWARD",
    "G",
    "GUIDE",
    "H",
    "HELP",
    "HOME",
    "I",
    "INFO",
    "INPUT",
    "INSERT",
    "J",
    "K",
    "KEYNAME_BEGIN",
    "KEYNAME_BREAK",
    "KEYNAME_CLEARDISPLAY",
    "KEYNAME_CLEARLINE",
    "KEYNAME_DELETE",
    "KEYNAME_DELETECHAR",
    "KEYNAME_DELETELINE",
    "KEYNAME_DOWNARROW",
    "KEYNAME_END",
    "KEYNAME_EXECUTE",
    "KEYNAME_F1",
    "KEYNAME_F10",
    "KEYNAME_F11",
    "KEYNAME_F12",
    "KEYNAME_F13",
    "KEYNAME_F14",
    "KEYNAME_F15",
    "KEYNAME_F16",
    "KEYNAME_F17",
    "KEYNAME_F18",
    "KEYNAME_F19",
    "KEYNAME_F2",
    "KEYNAME_F20",
    "KEYNAME_F21",
    "KEYNAME_F22",
    "KEYNAME_F23",
    "KEYNAME_F24",
    "KEYNAME_F25",
    "KEYNAME_F26",
    "KEYNAME_F27",
    "KEYNAME_F28",
    "KEYNAME_F29",
    "KEYNAME_F3",
    "KEYNAME_F30",
    "KEYNAME_F31",
    "KEYNAME_F32",
    "KEYNAME_F33",
    "KEYNAME_F34",
    "KEYNAME_F35",
    "KEYNAME_F4",
    "KEYNAME_F5",
    "KEYNAME_F6",
    "KEYNAME_F7",
    "KEYNAME_F8",
    "KEYNAME_F9",
    "KEYNAME_FIND",
    "KEYNAME_HELP",
    "KEYNAME_HOME",
    "KEYNAME_INSERT",
    "KEYNAME_INSERTCHAR",
    "KEYNAME_INSERTLINE",
    "KEYNAME_LEFTARROW",
    "KEYNAME_MENU",
    "KEYNAME_MODESWITCH",
    "KEYNAME_NEXT",
    "KEYNAME_PAGEDOWN",
    "KEYNAME_PAGEUP",
    "KEYNAME_PAUSE",
    "KEYNAME_PREV",
    "KEYNAME_PRINT",
    "KEYNAME_PRINTSCREEN",
    "KEYNAME_REDO",
    "KEYNAME_RESET",
    "KEYNAME_RIGHTARROW",
    "KEYNAME_SCROLLLOCK",
    "KEYNAME_SELECT",
    "KEYNAME_STOP",
    "KEYNAME_SYSREQ",
    "KEYNAME_SYSTEM",
    "KEYNAME_UNDO",
    "KEYNAME_UPARROW",
    "KEYNAME_USER",
    "L",
    "LAST",
    "LEFT",
    "LEFTBRACKET",
    "LIVE",
    "M",
    "MASTER_SHELL",
    "MENU",
    "MINUS",
    "N",
    "NEXT",
    "NUMBER_0",
    "NUMBER_1",
    "NUMBER_2",
    "NUMBER_3",
    "NUMBER_4",
    "NUMBER_5",
    "NUMBER_6",
    "NUMBER_7",
    "NUMBER_8",
    "NUMBER_9",
    "NUMPAD",
    "NUMPAD_0",
    "NUMPAD_1",
    "NUMPAD_2",
    "NUMPAD_3",
    "NUMPAD_4",
    "NUMPAD_5",
    "NUMPAD_6",
    "NUMPAD_7",
    "NUMPAD_8",
    "NUMPAD_9",
    "NUMPAD_ADD",
    "NUMPAD_DECIMAL",
    "NUMPAD_DIVIDE",
    "NUMPAD_ENTER",
    "NUMPAD_MULTIPLY",
    "NUMPAD_SUBTRACT",
    "O",
    "P",
    "PAGE_DOWN",
    "PAGE_UP",
    "PAUSE",
    "PERIOD",
    "PLAY",
    "PREVIOUS",
    "Q",
    "QUOTE",
    "R",
    "RECORD",
    "REWIND",
    "RIGHT",
    "RIGHTBRACKET",
    "S",
    "SEARCH",
    "SEMICOLON",
    "SETUP",
    "SHIFT",
    "SKIP_BACKWARD",
    "SKIP_FORWARD",
    "SLASH",
    "SPACE",
    "STOP",
    "SUBTITLE",
    "T",
    "TAB",
    "U",
    "UP",
    "V",
    "VOD",
    "W",
    "X",
    "Y",
    "YELLOW",
    "Z",
    "awayjs-core/lib/utils/ByteArrayBase",
    "ByteArrayBase",
    "_mode",
    "writeByte",
    "writeUnsignedByte",
    "readUnsignedByte",
    "writeUnsignedShort",
    "writeUnsignedInt",
    "writeFloat",
    "toFloatBits",
    "readFloat",
    "fromFloatBits",
    "compareEqual",
    "other",
    "count",
    "co0",
    "c0",
    "writeBase64String",
    "dumpToConsole",
    "oldpos",
    "nstep",
    "asHexString",
    "digits",
    "lut",
    "sh",
    "readBase64String",
    "internalGetBase64String",
    "getUnsignedByteFunc",
    "self",
    "b0",
    "b1",
    "b2",
    "enc1",
    "enc2",
    "enc3",
    "enc4",
    "base64Key",
    "Base64Key",
    "awayjs-core/lib/utils/ByteArrayBuffer",
    "ByteArrayBuffer",
    "_bytes",
    "bi",
    "Number",
    "sign",
    "exponent",
    "mantissa",
    "maxlength",
    "unalignedarraybytestemp",
    "ensureWriteableSpace",
    "ensureSpace",
    "aBuffer",
    "inInt8AView",
    "Int8Array",
    "localInt8View",
    "newmaxlength",
    "newarraybuffer",
    "view",
    "newview",
    "readBytes",
    "byteView",
    "localByteView",
    "subarray",
    "Uint16Array",
    "view2",
    "view3",
    "max",
    "DataView",
    "getUint8",
    "c2",
    "c3",
    "readInt",
    "int",
    "getInt32",
    "short",
    "getInt16",
    "readDouble",
    "double",
    "getFloat64",
    "pa",
    "Uint32Array",
    "Float32Array",
    "awayjs-core/lib/utils/CSS",
    "CSS",
    "setElementSize",
    "element",
    "style",
    "setElementWidth",
    "setElementHeight",
    "setElementX",
    "setElementY",
    "getElementVisibility",
    "visibility",
    "setElementVisibility",
    "visible",
    "setElementAlpha",
    "HTMLCanvasElement",
    "globalAlpha",
    "setElementPosition",
    "absolute",
    "float32Color",
    "componentToHex",
    "hex",
    "RGBToHexString",
    "ARGBToHexString",
    "awayjs-core/lib/utils/Debug",
    "Debug",
    "breakpoint",
    "throwPIROnKeyWordOnly",
    "enable",
    "keyword",
    "throwPIR",
    "clss",
    "fnc",
    "msg",
    "logPIR",
    "THROW_ERRORS",
    "LOG_PI_ERRORS",
    "args",
    "_i",
    "arguments",
    "ENABLE_LOG",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "RequestAnimationFrame",
    "callback",
    "callbackContext",
    "_active",
    "_argsArray",
    "_getTimer",
    "setCallback",
    "_rafUpdateFunction",
    "_tick",
    "_dt",
    "_callback",
    "_callbackContext",
    "_prevTime",
    "requestAnimationFrame",
    "_currentTime",
    "MAX_SIZE",
    "isPowerOfTwo",
    "getBestPowerOf2",
    "delay",
    "repeatCount",
    "_repeatCount",
    "_currentCount",
    "_running",
    "_delay",
    "clearInterval",
    "_iid",
    "setInterval",
    "tick",
    "now"
  ],
  "mappings": "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",
  "file": "awayjs-core.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "class BitmapDataChannel\n{\n\tpublic static ALPHA:number /*uint*/ = 8;\n\tpublic static BLUE:number /*uint*/ = 4;\n\tpublic static GREEN:number /*uint*/ = 2;\n\tpublic static RED:number /*uint*/ = 1;\n}\n\nexport = BitmapDataChannel;",
    null,
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\n/**\n * The BitmapData class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapData class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapData for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapData object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapData class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapData object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapData object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapData.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapDataChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapDataChannel.ALPHA</code></li>\n *   <li><code>BitmapDataChannel.RED</code></li>\n *   <li><code>BitmapDataChannel.GREEN</code></li>\n *   <li><code>BitmapDataChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapData objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapData object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapData object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapData object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapData object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapData\n{\n\tprivate _imageCanvas:HTMLCanvasElement;\n\tprivate _context:CanvasRenderingContext2D;\n\tprivate _imageData:ImageData;\n\tprivate _rect:Rectangle;\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t * The height of the bitmap image in pixels.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._rect.height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._rect.height == value)\n\t\t\treturn;\n\n\t\tthis._rect.height = value;\n\n\t\tif (this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tthis._imageCanvas.height = value;\n\n\t\tif (this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n\n\t/**\n\t * The rectangle that defines the size and location of the bitmap image. The\n\t * top and left of the rectangle are 0; the width and height are equal to the\n\t * width and height in pixels of the BitmapData object.\n\t */\n\tpublic get rect():Rectangle\n\t{\n\t\treturn this._rect;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapData object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapData object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * The width of the bitmap image in pixels.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._rect.width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._rect.width == value)\n\t\t\treturn;\n\n\t\tthis._rect.width = value;\n\n\t\tif (this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tthis._imageCanvas.width = value;\n\n\t\tif (this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n\n\t/**\n\t * Creates a BitmapData object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null)\n\t{\n\t\tthis._transparent = transparent;\n\t\tthis._imageCanvas = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\tthis._imageCanvas.width = width;\n\t\tthis._imageCanvas.height = height;\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\n\t\tthis._rect = new Rectangle(0, 0, width, height);\n\n\t\tif (fillColor != null)\n\t\t\tthis.fillRect(this._rect, fillColor);\n\t}\n\n\t/**\n\t * Returns a new BitmapData object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapData object that is identical to the original.\n\t */\n\tpublic clone():BitmapData\n\t{\n\t\tvar t:BitmapData = new BitmapData(this.width, this.height, this.transparent);\n\t\tt.draw(this);\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar data:Array<number> = this._imageData.data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapData object or the\n\t * current BitmapData object into a channel of the current BitmapData object.\n\t * All of the data in the other channels in the destination BitmapData object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapDataChannel.RED</code></li>\n\t *   <li><code>BitmapDataChannel.GREEN</code></li>\n\t *   <li><code>BitmapDataChannel.BLUE</code></li>\n\t *   <li><code>BitmapDataChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapData The input bitmap image to use. The source image\n\t *                         can be a different BitmapData object or it can\n\t *                         refer to the current BitmapData object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapData object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapDataChannel class\n\t *                        (<code>BitmapDataChannel.RED</code>,\n\t *                         <code>BitmapDataChannel.BLUE</code>,\n\t *                         <code>BitmapDataChannel.GREEN</code>,\n\t *                         <code>BitmapDataChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapDataChannel class\n\t *                        (<code>BitmapDataChannel.RED</code>,\n\t *                         <code>BitmapDataChannel.BLUE</code>,\n\t *                         <code>BitmapDataChannel.GREEN</code>,\n\t *                         <code>BitmapDataChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapData, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(sourceBitmap:BitmapData, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.imageData;\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar sourceData:Array<number> = sourceBitmap.imageData.data;\n\t\tvar destData:Array<number> = this._imageData.data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapData object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapData The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapData\n\t *                         instance, or it can refer to the current\n\t *                         BitmapData instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapData  A secondary, alpha BitmapData object source.\n\t * @param alphaPoint       The point in the alpha BitmapData object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapData, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(bmpd:BitmapData, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(bmpd:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(bmpd:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tthis._copyPixels(bmpd, sourceRect, destRect);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\t} else {\n\t\t\tthis._copyPixels(bmpd, sourceRect, destRect);\n\t\t}\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapData object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapData instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapData.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapData.dispose()</code>, the BitmapData\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapData object. However,\n\t * <code>BitmapData.dispose()</code> does not garbage collect the BitmapData\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapData object is released at the time the BitmapData object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._context = null;\n\t\tthis._imageCanvas = null;\n\t\tthis._imageData = null;\n\t\tthis._rect = null;\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapData object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapData object.</p>\n\t *\n\t * @param source         The display object or BitmapData object to draw to\n\t *                       the BitmapData object.(The DisplayObject and\n\t *                       BitmapData classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapData\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapData object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapData image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapData object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapData or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(source:BitmapData, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tthis._draw(source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tthis._draw(source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tthis._fillRect(rect, color);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tthis._fillRect(rect, color);\n\t\t}\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapData\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapData object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapData methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapData object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapData methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapData object,\n\t * such as Bitmap objects, are not updated when this BitmapData object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapData pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapData\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\t\tthis._imageData.data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapData object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapData instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapData object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapData object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapData methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapData instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageCanvas.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapData\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageCanvas.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapData object,\n\t * such as Bitmap objects, are updated when this BitmapData object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapData object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapData object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\tthis._imageData = null;\n\t}\n\n\tprivate _copyPixels(bmpd:BitmapData, sourceRect:Rectangle, destRect:Rectangle);\n\tprivate _copyPixels(bmpd:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tprivate _copyPixels(bmpd:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\n\t\tif (bmpd instanceof BitmapData) {\n\t\t\tthis._context.drawImage(bmpd.canvas, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t\t} else if (bmpd instanceof HTMLImageElement) {\n\t\t\tthis._context.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t\t}\n\n\t}\n\n\tprivate _draw(source:BitmapData, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean);\n\tprivate _draw(source:HTMLElement, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean);\n\tprivate _draw(source:any, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean)\n\t{\n\t\tif (source instanceof BitmapData) {\n\t\t\tthis._context.save();\n\n\t\t\tif (matrix != null)\n\t\t\t\tthis._context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\n\t\t\tif (clipRect != null)\n\t\t\t\tthis._context.drawImage(source.canvas, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\n\t\t\telse\n\t\t\t\tthis._context.drawImage(source.canvas, 0, 0);\n\n\t\t\tthis._context.restore();\n\n\t\t} else if (source instanceof HTMLElement) {\n\t\t\tthis._context.save();\n\n\t\t\tif (matrix != null)\n\t\t\t\tthis._context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\n\t\t\tif (clipRect != null)\n\t\t\t\tthis._context.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\n\t\t\telse\n\t\t\t\tthis._context.drawImage(source, 0, 0);\n\n\t\t\tthis._context.restore();\n\t\t}\n\t}\n\n\tprivate _fillRect(rect:Rectangle, color:number)\n\t{\n\t\tif (color == 0x0 && this._transparent) {\n\t\t\tthis._context.clearRect(rect.x, rect.y, rect.width, rect.height);\n\t\t} else {\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\t\tif (this._transparent)\n\t\t\t\tthis._context.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\n\t\t\telse\n\t\t\t\tthis._context.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\n\n\t\t\tthis._context.fillRect(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic get imageData():ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\treturn this._imageData;\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic get canvas()\n\t{\n\t\treturn this._imageCanvas;\n\t}\n}\n\nexport = BitmapData;",
    "/**\n * A class that provides constant values for visual blend mode effects. These\n * constants are used in the following:\n * <ul>\n *   <li> The <code>blendMode</code> property of the\n * flash.display.DisplayObject class.</li>\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\n * method of the flash.display.BitmapData class</li>\n * </ul>\n */\nclass BlendMode\n{\n\t/**\n\t * Adds the values of the constituent colors of the display object to the\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\n\t * commonly used for animating a lightening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\n\t */\n\tpublic static ADD:string = \"add\";\n\n\t/**\n\t * Applies the alpha value of each pixel of the display object to the\n\t * background. This requires the <code>blendMode</code> property of the\n\t * parent display object be set to\n\t * <code>away.base.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ALPHA:string = \"alpha\";\n\n\t/**\n\t * Selects the darker of the constituent colors of the display object and the\n\t * colors of the background(the colors with the smaller values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static DARKEN:string = \"darken\";\n\n\t/**\n\t * Compares the constituent colors of the display object with the colors of\n\t * its background, and subtracts the darker of the values of the two\n\t * constituent colors from the lighter value. This setting is commonly used\n\t * for more vibrant colors.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\n\t */\n\tpublic static DIFFERENCE:string = \"difference\";\n\n\t/**\n\t * Erases the background based on the alpha value of the display object. This\n\t * process requires that the <code>blendMode</code> property of the parent\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ERASE:string = \"erase\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the display\n\t * object. If the display object is lighter than 50% gray, the display object\n\t * and background colors are screened, which results in a lighter color. If\n\t * the display object is darker than 50% gray, the colors are multiplied,\n\t * which results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static HARDLIGHT:string = \"hardlight\";\n\n\t/**\n\t * Inverts the background.\n\t */\n\tpublic static INVERT:string = \"invert\";\n\n\t/**\n\t * Forces the creation of a transparency group for the display object. This\n\t * means that the display object is precomposed in a temporary buffer before\n\t * it is processed further. The precomposition is done automatically if the\n\t * display object is precached by means of bitmap caching or if the display\n\t * object is a display object container that has at least one child object\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LAYER:string = \"layer\";\n\n\t/**\n\t * Selects the lighter of the constituent colors of the display object and\n\t * the colors of the background(the colors with the larger values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LIGHTEN:string = \"lighten\";\n\n\t/**\n\t * Multiplies the values of the display object constituent colors by the\n\t * constituent colors of the background color, and normalizes by dividing by\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\n\t * shadows and depth effects.\n\t *\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\n\t * display object and the corresponding color of the pixel in the background\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\n\t * shade than the color of the display object or the color of the\n\t * background.</p>\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * The display object appears in front of the background. Pixel values of the\n\t * display object override the pixel values of the background. Where the\n\t * display object is transparent, the background is visible.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the background.\n\t * If the background is lighter than 50% gray, the display object and\n\t * background colors are screened, which results in a lighter color. If the\n\t * background is darker than 50% gray, the colors are multiplied, which\n\t * results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static OVERLAY:string = \"overlay\";\n\n\t/**\n\t * Multiplies the complement(inverse) of the display object color by the\n\t * complement of the background color, resulting in a bleaching effect. This\n\t * setting is commonly used for highlights or to remove black areas of the\n\t * display object.\n\t */\n\tpublic static SCREEN:string = \"screen\";\n\n\t/**\n\t * Uses a shader to define the blend between objects.\n\t *\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\n\t * automatically sets the display object's <code>blendMode</code> property to\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\n\t * set to <code>BlendMode.SHADER</code> without first setting the\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\n\t * <code>blendShader</code> property is set(which sets the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\n\t * later the value of the <code>blendMode</code> property is changed, the\n\t * blend mode can be reset to use the blend shader simply by setting the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\n\t * <code>blendShader</code> property does not need to be set again except to\n\t * change the shader that's used to define the blend mode.</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static SHADER:string = \"shader\";\n\n\t/**\n\t * Subtracts the values of the constituent colors in the display object from\n\t * the values of the background color, applying a floor of 0. This setting is\n\t * commonly used for animating a darkening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\n\t */\n\tpublic static SUBTRACT:string = \"subtract\";\n}\n\nexport = BlendMode;",
    "import SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tpublic static POSITION_DATA:string = \"positions\";\n    public static CURVE_DATA:string = \"curves\";\n\tpublic static UV_DATA:string = \"uvs\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static CURVE_FORMAT:string = \"float2\";\n\tpublic static UV_FORMAT:string = \"float2\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _curvesDirty:boolean = true;\n\tprivate _faceNormalsDirty:boolean = true;\n    private _vertexNormalsDirty:boolean = true;\n\tprivate _uvsDirty:boolean = true;\n\tprivate _secondaryUVsDirty:boolean = true;\n\tprivate _jointIndicesDirty:boolean = true;\n\tprivate _jointWeightsDirty:boolean = true;\n\n\tprivate _positions:Array<number>;\n\tprivate _curves:Array<number>;\n\tprivate _uvs:Array<number>;\n\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedJointIndices:Array<number>;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\n\tprivate _concatenateArrays:boolean = true;\n\tprivate _autoDeriveNormals:boolean = false;\n\tprivate _useFaceWeights:boolean = false;\n    private _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Array<number>;\n\tprivate _faceWeights:Array<number>;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _curvesUpdated:SubGeometryEvent;\n\tprivate _uvsUpdated:SubGeometryEvent;\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tif (this._concatenateArrays) {\n\t\t\tthis._pOffset[CurveSubGeometry.VERTEX_DATA] = 0;\n\n\t\t\t//always have positions\n\t\t\tthis._pOffset[CurveSubGeometry.POSITION_DATA] = 0;\n\t\t\tvar stride:number = 3;\n\n\t\t\tif (this._curves != null) {\n\t\t\t\tthis._pOffset[CurveSubGeometry.CURVE_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._uvs != null) {\n\t\t\t\tthis._pOffset[CurveSubGeometry.UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\n\n\t\t\tthis._pStride[CurveSubGeometry.VERTEX_DATA] = stride;\n\t\t\tthis._pStride[CurveSubGeometry.POSITION_DATA] = stride;\n\t\t\tthis._pStride[CurveSubGeometry.CURVE_DATA] = stride;\n\t\t\tthis._pStride[CurveSubGeometry.UV_DATA] = stride;\n\n\t\t\tvar len:number = this._pNumVertices*stride;\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t} else {\n\t\t\tthis._pOffset[CurveSubGeometry.POSITION_DATA] = 0;\n\t\t\tthis._pOffset[CurveSubGeometry.CURVE_DATA] = 0;\n\t\t\tthis._pOffset[CurveSubGeometry.UV_DATA] = 0;\n\n\n\t\t\tthis._pStride[CurveSubGeometry.POSITION_DATA] = 3;\n\t\t\tthis._pStride[CurveSubGeometry.CURVE_DATA] = 2;\n\t\t\tthis._pStride[CurveSubGeometry.UV_DATA] = 2;\n\t\t}\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n    //remove\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n        if (this._curvesDirty)\n            this.updateCurves(this._curves);\n\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Array<number>\n\t{\n\t\tif (this._curvesDirty)\n\t\t\tthis.updateCurves(this._curves);\n\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Array<number>\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Array<number>\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\n\n\n\t/**\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\n\t */\n\tpublic get useFaceWeights():boolean\n\t{\n\t\treturn this._useFaceWeights;\n\t}\n\n\tpublic set useFaceWeights(value:boolean)\n\t{\n\t\tif (this._useFaceWeights == value)\n\t\t\treturn;\n\n\t\tthis._useFaceWeights = value;\n\n\n\t\tthis._faceNormalsDirty = true;\n\t}\n\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\n\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper(concatenatedArrays);\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tthis._positions = values;\n\n\t\tif (this._positions == null)\n\t\t\tthis._positions = new Array<number>();\n\n\t\tthis._pNumVertices = this._positions.length/3;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tvar len:number = this._pNumVertices*this.getStride(CurveSubGeometry.VERTEX_DATA);\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t\ti = 0;\n\t\t\tindex = this.getOffset(CurveSubGeometry.POSITION_DATA);\n\t\t\tstride = this.getStride(CurveSubGeometry.POSITION_DATA);\n\t\t\tpositions = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tpositions[index] = values[i++];\n\t\t\t\tpositions[index + 1] = values[i++];\n\t\t\t\tpositions[index + 2] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic updateCurves(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar curves:Array<number>;\n\n\t\tif (true) {\n\t\t\tif ((this._curves == null || values == null) && (this._curves != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._curves = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(CurveSubGeometry.CURVE_DATA);\n\t\t\t\tstride = this.getStride(CurveSubGeometry.CURVE_DATA);\n                curves = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n                    curves[index] = values[i++];\n                    curves[index + 1] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.notifyCurvesUpdate();\n\n\t\tthis._curvesDirty = false;\n\t}\n\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic updateUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._uvs = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(CurveSubGeometry.UV_DATA);\n\t\t\t\tstride = this.getStride(CurveSubGeometry.UV_DATA);\n\t\t\t\tuvs = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tuvs[index] = values[i++];\n\t\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (this._uvs == null) {\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\toffset = this.getOffset(CurveSubGeometry.UV_DATA);\n\t\t\tstride = this.getStride(CurveSubGeometry.UV_DATA);\n\n\t\t\t//autoderived uvs\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tvar uvIdx:number = 0;\n\n\t\t\t//clear uv values\n\t\t\tvar lenV:number = uvs.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t} else {\n\t\t\t\t\tuvs[index] = uvIdx*.5;\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t}\n\n\t\t\t\tif (++uvIdx == 3)\n\t\t\t\t\tuvIdx = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyUVsUpdate();\n\n\t\tthis._uvsDirty = false;\n\t}\n\n\n\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._curves = null;\n\t\tthis._uvs = null;\n\n\t\tthis._faceNormals = null;\n\t\tthis._faceWeights = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the CurveSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tsuper.updateIndices(indices);\n\n\t\tthis._faceNormalsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis._vertexNormalsDirty = true;\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenateArrays);\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._positions.concat());\n\n\t\tif (this._curves)\n\t\t\tclone.updateCurves(this._curves.concat());\n\t\telse\n\t\t\tclone.updateCurves(null);\n\n\t\tif (this._uvs && !this._autoDeriveUVs)\n\t\t\tclone.updateUVs(this._uvs.concat());\n\t\telse\n\t\t\tclone.updateUVs(null);\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tuvs = this._uvs;\n\n\t\tvar ratioU:number = scaleU/this._scaleU;\n\t\tvar ratioV:number = scaleV/this._scaleV;\n\n\t\tthis._scaleU = scaleU;\n\t\tthis._scaleV = scaleV;\n\n\t\tvar len:number = uvs.length;\n\n\t\toffset = 0;\n\t\tstride = 2;\n\n\t\tindex = offset;\n\n\t\twhile (index < len) {\n\t\t\tuvs[index] *= ratioU;\n\t\t\tuvs[index + 1] *= ratioV;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tpositions = this._positions;\n\n\t\tvar len:number = positions.length;\n\n\t\toffset = 0;\n\t\tstride = 3;\n\n\t\ti = 0;\n\t\tindex = offset;\n\t\twhile (i < len) {\n\t\t\tpositions[index] *= scale;\n\t\t\tpositions[index + 1] *= scale;\n\t\t\tpositions[index + 2] *= scale;\n\n\t\t\ti += 3;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar positions:Array<number>;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tpositions = this._pVertices;\n\t\t} else {\n\t\t\tpositions = this._positions;\n\t\t}\n\n\t\tvar len:number = this._positions.length/3;\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\n\t\tvar invTranspose:Matrix3D;\n\n\n\n\t\tvar vi0:number = this.getOffset(CurveSubGeometry.POSITION_DATA);\n\t\tvar vStride:number = this.getStride(CurveSubGeometry.POSITION_DATA);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\n\t\t\t// bake position\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += vStride;\n\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t}\n\n\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tvar positions:Array<number> = this._positions;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceNormals == null)\n\t\t\tthis._faceNormals = new Array<number>(len);\n\n\t\tif (this._useFaceWeights && this._faceWeights == null)\n\t\t\tthis._faceWeights = new Array<number>(len/3);\n\n\t\twhile (i < len) {\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tif (this._useFaceWeights) {\n\t\t\t\tvar w:number = d*10000;\n\n\t\t\t\tif (w < 1)\n\t\t\t\t\tw = 1;\n\n\t\t\t\tthis._faceWeights[k++] = w;\n\t\t\t}\n\n\t\t\td = 1/d;\n\n\t\t\tthis._faceNormals[j++] = cx*d;\n\t\t\tthis._faceNormals[j++] = cy*d;\n\t\t\tthis._faceNormals[j++] = cz*d;\n\t\t}\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyCurvesUpdate();\n\t\tthis.notifyUVsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyCurvesUpdate()\n\t{\n\t\tif (this._curvesDirty)\n\t\t\treturn;\n\n\t\tthis._curvesDirty = true;\n\n\t\tif (!this._curvesUpdated)\n\t\t\tthis._curvesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.CURVE_DATA);\n\n\t\tthis.dispatchEvent(this._curvesUpdated);\n\t}\n\n\n\n\tprivate notifyUVsUpdate() {\n        if (this._uvsDirty)\n            return;\n\n        this._uvsDirty = true;\n\n        if (!this._uvsUpdated)\n            this._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.UV_DATA);\n\n        this.dispatchEvent(this._uvsUpdated);\n    }\n}\n\nexport = CurveSubGeometry;",
    "import SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-core/lib/events/GeometryEvent\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import Geometry\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tpublic static VERTEX_DATA:string = \"vertices\";\n\tpublic static START_POSITION_DATA:string = \"startPositions\";\n\tpublic static END_POSITION_DATA:string = \"endPositions\";\n\tpublic static THICKNESS_DATA:string = \"thickness\";\n\tpublic static COLOR_DATA:string = \"colors\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static COLOR_FORMAT:string = \"float4\";\n\tpublic static THICKNESS_FORMAT:string = \"float1\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _boundingPositionDirty = true;\n\tprivate _thicknessDirty:boolean = true;\n\tprivate _colorsDirty:boolean = true;\n\n\tprivate _startPositions:Array<number>;\n\tprivate _endPositions:Array<number>;\n\tprivate _boundingPositions:Array<number>\n\tprivate _thickness:Array<number>;\n\tprivate _startColors:Array<number>;\n\tprivate _endColors:Array<number>;\n\n\tprivate _numSegments:number;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _thicknessUpdated:SubGeometryEvent;\n\tprivate _colorUpdated:SubGeometryEvent;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tthis._pOffset[LineSubGeometry.VERTEX_DATA] = 0;\n\n\t\tvar stride:number = 0;\n\t\tthis._pOffset[LineSubGeometry.START_POSITION_DATA] = stride;\n\t\tstride += 3;\n\n\t\tthis._pOffset[LineSubGeometry.END_POSITION_DATA] = stride;\n\t\tstride += 3;\n\n\t\tthis._pOffset[LineSubGeometry.THICKNESS_DATA] = stride;\n\t\tstride += 1;\n\n\t\tthis._pOffset[LineSubGeometry.COLOR_DATA] = stride;\n\t\tstride += 4;\n\n\t\tthis._pStride[LineSubGeometry.VERTEX_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.START_POSITION_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.END_POSITION_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.THICKNESS_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.COLOR_DATA] = stride;\n\n\t\tvar len:number = this._pNumVertices*stride;\n\n\t\tif (this._pVertices == null)\n\t\t\tthis._pVertices = new Array<number>(len);\n\t\telse if (this._pVertices.length != len)\n\t\t\tthis._pVertices.length = len;\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\tif (this._thicknessDirty)\n\t\t\tthis.updateThickness(this._thickness);\n\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\treturn this._startPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\treturn this._endPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Array<number>\n\t{\n\t\tif (this._thicknessDirty)\n\t\t\tthis.updateThickness(this._thickness);\n\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startColors():Array<number>\n\t{\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._startColors;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endColors():Array<number>\n\t{\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._endColors;\n\t}\n\n\t/**\n\t * The total amount of segments in the TriangleSubGeometry.\n\t */\n\tpublic get numSegments():number\n\t{\n\t\treturn this._numSegments;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper(true);\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._boundingPositionDirty)\n\t\t\tthis._boundingPositions = this.startPositions.concat(this.endPositions);\n\n\t\treturn this._boundingPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(startValues:Array<number>, endValues:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar values:Array<number>\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\t\tvar indices:Array<number>;\n\n\t\tthis._startPositions = startValues;\n\n\t\tif (this._startPositions == null)\n\t\t\tthis._startPositions = new Array<number>();\n\n\t\tthis._endPositions = endValues;\n\n\t\tif (this._endPositions == null)\n\t\t\tthis._endPositions = new Array<number>();\n\n\t\tthis._boundingPositionDirty = true;\n\n\t\tthis._numSegments = this._startPositions.length/3;\n\n\t\tthis._pNumVertices = this._numSegments*4;\n\n\t\tvar lenV:number = this._pNumVertices*this.getStride(LineSubGeometry.VERTEX_DATA);\n\n\t\tif (this._pVertices == null)\n\t\t\tthis._pVertices = new Array<number>(lenV);\n\t\telse if (this._pVertices.length != lenV)\n\t\t\tthis._pVertices.length = lenV;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\tindex = this.getOffset(LineSubGeometry.START_POSITION_DATA);\n\t\tstride = this.getStride(LineSubGeometry.START_POSITION_DATA);\n\t\tpositions = this._pVertices;\n\t\tindices = new Array();\n\n\t\twhile (i < startValues.length) {\n\t\t\tvalues = (index/stride & 1)? endValues : startValues;\n\t\t\tpositions[index] = values[i];\n\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\tpositions[index + 2] = values[i + 2];\n\n\t\t\tvalues = (index/stride & 1)? startValues : endValues;\n\t\t\tpositions[index + 3] = values[i];\n\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\tpositions[index + 5] = values[i + 2];\n\n\t\t\tif (++j == 4) {\n\t\t\t\tvar o:number = index/stride - 3;\n\t\t\t\tindices.push(o, o + 1, o + 2, o + 3, o + 2, o + 1);\n\t\t\t\tj = 0;\n\t\t\t\ti += 3;\n\t\t\t}\n\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.updateIndices(indices);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic updateThickness(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar thickness:Array<number>;\n\n\t\tthis._thickness = values;\n\n\t\tif (values != null) {\n\t\t\ti = 0;\n\t\t\tj = 0;\n\t\t\toffset = this.getOffset(LineSubGeometry.THICKNESS_DATA);\n\t\t\tstride = this.getStride(LineSubGeometry.THICKNESS_DATA);\n\t\t\tthickness = this._pVertices;\n\n\t\t\tindex = offset\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*(index - offset)/stride + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyThicknessUpdate();\n\n\t\tthis._thicknessDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateColors(startValues:Array<number>, endValues:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar values:Array<number>\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar colors:Array<number>;\n\n\t\tthis._startColors = startValues;\n\n\t\tthis._endColors = endValues;\n\n\t\t//default to white\n\t\tif (this._startColors == null) {\n\t\t\tthis._startColors = new Array(this._numSegments*4);\n\n\t\t\ti = 0;\n\t\t\twhile (i < this._startColors.length)\n\t\t\t\tthis._startColors[i++] = 1;\n\t\t}\n\n\t\tif (this._endColors == null) {\n\t\t\tthis._endColors = new Array(this._numSegments*4);\n\n\t\t\ti = 0;\n\t\t\twhile (i < this._endColors.length)\n\t\t\t\tthis._endColors[i++] = 1;\n\t\t}\n\n\t\ti = 0;\n\t\tj = 0;\n\t\toffset = this.getOffset(LineSubGeometry.COLOR_DATA);\n\t\tstride = this.getStride(LineSubGeometry.COLOR_DATA);\n\t\tcolors = this._pVertices;\n\n\t\tindex = offset;\n\n\t\twhile (i < this._startColors.length) {\n\t\t\tvalues = ((index - offset)/stride & 1)? this._endColors : this._startColors;\n\t\t\tcolors[index] = values[i];\n\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\tcolors[index + 3] = values[i + 3];\n\n\t\t\tif (++j == 4) {\n\t\t\t\tj = 0;\n\t\t\t\ti += 4;\n\t\t\t}\n\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyColorsUpdate();\n\n\t\tthis._colorsDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._startPositions = null;\n\t\tthis._endPositions = null;\n\t\tthis._thickness = null;\n\t\tthis._startColors = null;\n\t\tthis._endColors = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry();\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\n\t\tclone.updateThickness(this._thickness.concat());\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\n\n\t\treturn clone;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyThicknessUpdate();\n\t\tthis.notifyColorsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyThicknessUpdate()\n\t{\n\t\tif (this._thicknessDirty)\n\t\t\treturn;\n\n\t\tthis._thicknessDirty = true;\n\n\t\tif (!this._thicknessUpdated)\n\t\t\tthis._thicknessUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.THICKNESS_DATA);\n\n\t\tthis.dispatchEvent(this._thicknessUpdated);\n\t}\n\n\tprivate notifyColorsUpdate()\n\t{\n\t\tif (this._colorsDirty)\n\t\t\treturn;\n\n\t\tthis._colorsDirty = true;\n\n\t\tif (!this._colorUpdated)\n\t\t\tthis._colorUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.COLOR_DATA);\n\n\t\tthis.dispatchEvent(this._colorUpdated);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import Geometry\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tpublic static VERTEX_DATA:string = \"vertices\";\n\n\tpublic _pStrideOffsetDirty:boolean = true;\n\n\tpublic _pIndices:Array<number> /*uint*/;\n\tpublic _pVertices:Array<number>;\n\n\tprivate _numIndices:number;\n\tprivate _numTriangles:number;\n\tpublic _pNumVertices:number;\n\n\tpublic _pConcatenateArrays:boolean = true;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _pStride:Object = new Object();\n\tpublic _pOffset:Object = new Object();\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get concatenateArrays():boolean\n\t{\n\t\treturn this._pConcatenateArrays;\n\t}\n\n\tpublic set concatenateArrays(value:boolean)\n\t{\n\t\tif (this._pConcatenateArrays == value)\n\t\t\treturn;\n\n\t\tthis._pConcatenateArrays = value;\n\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tif (value)\n\t\t\tthis._pNotifyVerticesUpdate();\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Array<number>\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tthis.updateVertices();\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._numTriangles;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._pNumVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper();\n\n\t\tthis._pConcatenateArrays = concatenatedArrays;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getStride(dataType:string)\n\t{\n\t\tif (this._pStrideOffsetDirty)\n\t\t\tthis._pUpdateStrideOffset();\n\n\t\treturn this._pStride[dataType];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getOffset(dataType:string)\n\t{\n\t\tif (this._pStrideOffsetDirty)\n\t\t\tthis._pUpdateStrideOffset();\n\n\t\treturn this._pOffset[dataType];\n\t}\n\n\tpublic updateVertices()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pIndices = null;\n\t\tthis._pVertices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tthis._pIndices = indices;\n\t\tthis._numIndices = indices.length;\n\n\t\tthis._numTriangles = this._numIndices/3;\n\n\t\tthis.notifyIndicesUpdate();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tpublic static POSITION_DATA:string = \"positions\";\n\tpublic static NORMAL_DATA:string = \"vertexNormals\";\n\tpublic static TANGENT_DATA:string = \"vertexTangents\";\n\tpublic static UV_DATA:string = \"uvs\";\n\tpublic static SECONDARY_UV_DATA:string = \"secondaryUVs\";\n\tpublic static JOINT_INDEX_DATA:string = \"jointIndices\";\n\tpublic static JOINT_WEIGHT_DATA:string = \"jointWeights\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static NORMAL_FORMAT:string = \"float3\";\n\tpublic static TANGENT_FORMAT:string = \"float3\";\n\tpublic static UV_FORMAT:string = \"float2\";\n\tpublic static SECONDARY_UV_FORMAT:string = \"float2\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\tprivate _vertexNormalsDirty:boolean = true;\n\tprivate _vertexTangentsDirty:boolean = true;\n\tprivate _uvsDirty:boolean = true;\n\tprivate _secondaryUVsDirty:boolean = true;\n\tprivate _jointIndicesDirty:boolean = true;\n\tprivate _jointWeightsDirty:boolean = true;\n\n\tprivate _positions:Array<number>;\n\tprivate _vertexNormals:Array<number>;\n\tprivate _vertexTangents:Array<number>;\n\tprivate _uvs:Array<number>;\n\tprivate _secondaryUVs:Array<number>;\n\tprivate _jointIndices:Array<number>;\n\tprivate _jointWeights:Array<number>;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedJointIndices:Array<number>;\n\tprivate _condensedIndexLookUp:Array<number>;\n\tprivate _numCondensedJoints:number;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _concatenateArrays:boolean = true;\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\tprivate _useFaceWeights:boolean = false;\n\n\tprivate _faceNormals:Array<number>;\n\tprivate _faceTangents:Array<number>;\n\tprivate _faceWeights:Array<number>;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _normalsUpdated:SubGeometryEvent;\n\tprivate _tangentsUpdated:SubGeometryEvent;\n\tprivate _uvsUpdated:SubGeometryEvent;\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\n\tprivate _jointIndicesUpdated:SubGeometryEvent;\n\tprivate _jointWeightsUpdated:SubGeometryEvent;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\n\t\tthis.notifyJointIndicesUpdate();\n\t}\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tif (this._concatenateArrays) {\n\t\t\tthis._pOffset[TriangleSubGeometry.VERTEX_DATA] = 0;\n\n\t\t\t//always have positions\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\n\t\t\tvar stride:number = 3;\n\n\t\t\tif (this._vertexNormals != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = stride;\n\t\t\t\tstride += 3;\n\t\t\t}\n\n\t\t\tif (this._vertexTangents != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = stride;\n\t\t\t\tstride += 3;\n\t\t\t}\n\n\t\t\tif (this._uvs != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._secondaryUVs != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._jointIndices != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\n\t\t\t\tstride += this._jointsPerVertex;\n\t\t\t}\n\n\t\t\tif (this._jointWeights != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\n\t\t\t\tstride += this._jointsPerVertex;\n\t\t\t}\n\n\t\t\tthis._pStride[TriangleSubGeometry.VERTEX_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\n\n\t\t\tvar len:number = this._pNumVertices*stride;\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t} else {\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = 0;\n\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = 2;\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = 2;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = this._jointsPerVertex;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = this._jointsPerVertex;\n\t\t}\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tif (this._pConcatenateArrays)\n\t\t\tthis._pNotifyVerticesUpdate();\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\n\t\tif (value)\n\t\t\tthis.notifyNormalsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\n\t\tif (value)\n\t\t\tthis.notifyTangentsUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\tif (this._vertexNormalsDirty)\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\n\n\t\tif (this._vertexTangentsDirty)\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\n\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\tif (this._secondaryUVsDirty)\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\n\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\tif (this._jointWeightsDirty)\n\t\t\tthis.updateJointWeights(this._jointWeights);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertexNormals():Array<number>\n\t{\n\t\tif (this._vertexNormalsDirty)\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\n\n\t\treturn this._vertexNormals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertexTangents():Array<number>\n\t{\n\t\tif (this._vertexTangentsDirty)\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\n\n\t\treturn this._vertexTangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Array<number>\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Array<number>\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Array<number>\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Array<number>\n\t{\n\t\tif (this._secondaryUVsDirty)\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\n\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():Array<number>\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\tif (this._useCondensedIndices)\n\t\t\treturn this._condensedJointIndices;\n\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():Array<number>\n\t{\n\t\tif (this._jointWeightsDirty)\n\t\t\tthis.updateJointWeights(this._jointWeights);\n\n\t\treturn this._jointWeights;\n\t}\n\n\t/**\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\n\t */\n\tpublic get useFaceWeights():boolean\n\t{\n\t\treturn this._useFaceWeights;\n\t}\n\n\tpublic set useFaceWeights(value:boolean)\n\t{\n\t\tif (this._useFaceWeights == value)\n\t\t\treturn;\n\n\t\tthis._useFaceWeights = value;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyNormalsUpdate();\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tthis._faceNormalsDirty = true;\n\t}\n\n\tpublic get numCondensedJoints():number\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\treturn this._numCondensedJoints;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper(concatenatedArrays);\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tthis._positions = values;\n\n\t\tif (this._positions == null)\n\t\t\tthis._positions = new Array<number>();\n\n\t\tthis._pNumVertices = this._positions.length/3;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tvar len:number = this._pNumVertices*this.getStride(TriangleSubGeometry.VERTEX_DATA);\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t\ti = 0;\n\t\t\tindex = this.getOffset(TriangleSubGeometry.POSITION_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.POSITION_DATA);\n\t\t\tpositions = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tpositions[index] = values[i++];\n\t\t\t\tpositions[index + 1] = values[i++];\n\t\t\t\tpositions[index + 2] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyNormalsUpdate();\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyUVsUpdate()\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic updateVertexNormals(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar normals:Array<number>;\n\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif ((this._vertexNormals == null || values == null) && (this._vertexNormals != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._vertexNormals = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\t\t\t\tnormals = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tnormals[index] = values[i++];\n\t\t\t\t\tnormals[index + 1] = values[i++];\n\t\t\t\t\tnormals[index + 2] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._vertexNormals == null) {\n\t\t\t\tthis._vertexNormals = new Array<number>(this._positions.length);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\n\t\t\t//autoderived normals\n\t\t\tnormals = this._concatenateArrays? this._pVertices : this._vertexNormals;\n\n\t\t\tvar f1:number = 0;\n\t\t\tvar f2:number = 1;\n\t\t\tvar f3:number = 2;\n\n\t\t\tindex = offset;\n\n\t\t\t//clear normal values\n\t\t\tvar lenV:number = normals.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tnormals[index] = 0;\n\t\t\t\tnormals[index + 1] = 0;\n\t\t\t\tnormals[index + 2] = 0;\n\t\t\t\tindex += stride;\n\t\t\t}\n\n\t\t\tvar k:number = 0;\n\t\t\tvar lenI:number = this._pIndices.length;\n\t\t\tvar weight:number;\n\n\t\t\ti = 0;\n\n\t\t\t//collect face normals\n\t\t\twhile (i < lenI) {\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tf1 += 3;\n\t\t\t\tf2 += 3;\n\t\t\t\tf3 += 3;\n\t\t\t}\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\n\t\t\t//average normals collections\n\t\t\twhile (index < lenV) {\n\t\t\t\tvar vx:number = normals[index];\n\t\t\t\tvar vy:number = normals[index + 1];\n\t\t\t\tvar vz:number = normals[index + 2];\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index] = vx*d;\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 1] = vy*d;\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 2] = vz*d;\n\t\t\t\t} else {\n\t\t\t\t\tnormals[index] = vx*d;\n\t\t\t\t\tnormals[index + 1] = vy*d;\n\t\t\t\t\tnormals[index + 2] = vz*d;\n\t\t\t\t}\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyNormalsUpdate();\n\n\t\tthis._vertexNormalsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic updateVertexTangents(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar tangents:Array<number>;\n\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif ((this._vertexTangents == null || values == null) && (this._vertexTangents != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\n\t\t\tthis._vertexTangents = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\t\t\t\ttangents = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\ttangents[index] = values[i++];\n\t\t\t\t\ttangents[index + 1] = values[i++];\n\t\t\t\t\ttangents[index + 2] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._vertexTangents == null) {\n\t\t\t\tthis._vertexTangents = new Array<number>(this._positions.length);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\n\t\t\t//autoderived tangents\n\t\t\ttangents = this._concatenateArrays? this._pVertices : this._vertexTangents;\n\n\t\t\tindex = offset;\n\n\t\t\t//clear tangent values\n\t\t\tvar lenV:number = tangents.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\ttangents[index] = 0;\n\t\t\t\ttangents[index + 1] = 0;\n\t\t\t\ttangents[index + 2] = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\n\t\t\tvar k:number = 0;\n\t\t\tvar weight:number;\n\t\t\tvar f1:number = 0;\n\t\t\tvar f2:number = 1;\n\t\t\tvar f3:number = 2;\n\n\t\t\ti = 0;\n\n\t\t\t//collect face tangents\n\t\t\tvar lenI:number = this._pIndices.length;\n\t\t\twhile (i < lenI) {\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tf1 += 3;\n\t\t\t\tf2 += 3;\n\t\t\t\tf3 += 3;\n\t\t\t}\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\n\t\t\t//average tangents collections\n\t\t\twhile (index < lenV) {\n\t\t\t\tvar vx:number = tangents[index];\n\t\t\t\tvar vy:number = tangents[index + 1];\n\t\t\t\tvar vz:number = tangents[index + 2];\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index] = vx*d;\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 1] = vy*d;\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 2] = vz*d;\n\t\t\t\t} else {\n\t\t\t\t\ttangents[index] = vx*d;\n\t\t\t\t\ttangents[index + 1] = vy*d;\n\t\t\t\t\ttangents[index + 2] = vz*d;\n\t\t\t\t}\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyTangentsUpdate();\n\n\t\tthis._vertexTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic updateUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._uvs = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\n\t\t\t\tuvs = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tuvs[index] = values[i++];\n\t\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (this._uvs == null) {\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\n\n\t\t\t//autoderived uvs\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tvar uvIdx:number = 0;\n\n\t\t\t//clear uv values\n\t\t\tvar lenV:number = uvs.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t} else {\n\t\t\t\t\tuvs[index] = uvIdx*.5;\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t}\n\n\t\t\t\tif (++uvIdx == 3)\n\t\t\t\t\tuvIdx = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tthis.notifyUVsUpdate();\n\n\t\tthis._uvsDirty = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic updateSecondaryUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._secondaryUVs == null || values == null) && (this._secondaryUVs != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._secondaryUVs = values;\n\n\t\tif (values != null && this._concatenateArrays) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.SECONDARY_UV_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.SECONDARY_UV_DATA);\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tuvs = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tuvs[index] = values[i++];\n\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifySecondaryUVsUpdate();\n\n\t\tthis._secondaryUVsDirty = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic updateJointIndices(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar jointIndices:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._jointIndices == null || values == null) && (this._jointIndices != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._jointIndices = values;\n\n\t\tif (values != null) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_INDEX_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_INDEX_DATA);\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\ti = 0;\n\t\t\t\tj = 0;\n\t\t\t\tindex = offset;\n\t\t\t\tjointIndices = this._concatenateArrays? this._pVertices : this._condensedJointIndices;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tif (!this._concatenateArrays)\n\t\t\t\t\tthis._condensedJointIndices = new Array<number>(values.length);\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tfor (j = 0; j < this._jointsPerVertex; j++) {\n\t\t\t\t\t\toldIndex = values[i++];\n\n\t\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\t\tdic[oldIndex] = newIndex*3; //3 required for the three vectors that store the matrix\n\t\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjointIndices[index + j] = dic[oldIndex];\n\t\t\t\t\t}\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t\tthis._numCondensedJoints = newIndex;\n\t\t\t} else if (this._concatenateArrays) {\n\n\t\t\t\ti = 0;\n\t\t\t\tindex = offset;\n\t\t\t\tjointIndices = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile (j < this._jointsPerVertex)\n\t\t\t\t\t\tjointIndices[index + j++] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyJointIndicesUpdate();\n\n\t\tthis._jointIndicesDirty = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic updateJointWeights(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar jointWeights:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._jointWeights == null || values == null) && (this._jointWeights != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._jointWeights = values;\n\n\t\tif (values != null && this._concatenateArrays) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tjointWeights = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tj = 0;\n\t\t\t\twhile (j < this._jointsPerVertex)\n\t\t\t\t\tjointWeights[index + j++] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyJointWeightsUpdate();\n\n\t\tthis._jointWeightsDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._vertexNormals = null;\n\t\tthis._vertexTangents = null;\n\t\tthis._uvs = null;\n\t\tthis._secondaryUVs = null;\n\t\tthis._jointIndices = null;\n\t\tthis._jointWeights = null;\n\n\t\tthis._faceNormals = null;\n\t\tthis._faceWeights = null;\n\t\tthis._faceTangents = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tsuper.updateIndices(indices);\n\n\t\tthis._faceNormalsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis._vertexNormalsDirty = true;\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis._vertexTangentsDirty = true;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenateArrays);\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._positions.concat());\n\n\t\tif (this._vertexNormals && !this._autoDeriveNormals)\n\t\t\tclone.updateVertexNormals(this._vertexNormals.concat());\n\t\telse\n\t\t\tclone.updateVertexNormals(null);\n\n\t\tif (this._uvs && !this._autoDeriveUVs)\n\t\t\tclone.updateUVs(this._uvs.concat());\n\t\telse\n\t\t\tclone.updateUVs(null);\n\n\t\tif (this._vertexTangents && !this._autoDeriveTangents)\n\t\t\tclone.updateVertexTangents(this._vertexTangents.concat());\n\t\telse\n\t\t\tclone.updateVertexTangents(null);\n\n\t\tif (this._secondaryUVs)\n\t\t\tclone.updateSecondaryUVs(this._secondaryUVs.concat());\n\n\t\tif (this._jointIndices) {\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\t\t\tclone.updateJointIndices(this._jointIndices.concat());\n\t\t}\n\n\t\tif (this._jointWeights)\n\t\t\tclone.updateJointWeights(this._jointWeights.concat());\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tuvs = this._uvs;\n\n\t\tvar ratioU:number = scaleU/this._scaleU;\n\t\tvar ratioV:number = scaleV/this._scaleV;\n\n\t\tthis._scaleU = scaleU;\n\t\tthis._scaleV = scaleV;\n\n\t\tvar len:number = uvs.length;\n\n\t\toffset = 0;\n\t\tstride = 2;\n\n\t\tindex = offset;\n\n\t\twhile (index < len) {\n\t\t\tuvs[index] *= ratioU;\n\t\t\tuvs[index + 1] *= ratioV;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tpositions = this._positions;\n\n\t\tvar len:number = positions.length;\n\n\t\toffset = 0;\n\t\tstride = 3;\n\n\t\ti = 0;\n\t\tindex = offset;\n\t\twhile (i < len) {\n\t\t\tpositions[index] *= scale;\n\t\t\tpositions[index + 1] *= scale;\n\t\t\tpositions[index + 2] *= scale;\n\n\t\t\ti += 3;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tpositions = this._pVertices;\n\t\t\tnormals = this._pVertices;\n\t\t\ttangents = this._pVertices;\n\t\t} else {\n\t\t\tpositions = this._positions;\n\t\t\tnormals = this._vertexNormals;\n\t\t\ttangents = this._vertexTangents;\n\t\t}\n\n\t\tvar len:number = this._positions.length/3;\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\n\t\tvar bakeNormals:boolean = this._vertexNormals != null;\n\t\tvar bakeTangents:boolean = this._vertexTangents != null;\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (bakeNormals || bakeTangents) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = this.getOffset(TriangleSubGeometry.POSITION_DATA);\n\t\tvar ni0:number = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\tvar ti0:number = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\n\t\tvar vStride:number = this.getStride(TriangleSubGeometry.POSITION_DATA);\n\t\tvar nStride:number = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\t\tvar tStride:number = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\n\t\t\t// bake position\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += vStride;\n\n\t\t\t// bake normal\n\t\t\tif (bakeNormals) {\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += nStride;\n\t\t\t}\n\n\t\t\t// bake tangent\n\t\t\tif (bakeTangents) {\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tStride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyNormalsUpdate();\n\t\tthis.notifyTangentsUpdate();\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\tvar positions:Array<number> = this._positions\n\t\tvar uvs:Array<number> = this._uvs;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceTangents == null)\n\t\t\tthis._faceTangents = new Array<number>(len);\n\n\t\twhile (i < len) {\n\t\t\tindex1 = this._pIndices[i];\n\t\t\tindex2 = this._pIndices[i + 1];\n\t\t\tindex3 = this._pIndices[i + 2];\n\n\t\t\tv0 = uvs[index1*2 + 1];\n\t\t\tdv1 = uvs[index2*2 + 1] - v0;\n\t\t\tdv2 = uvs[index3*2 + 1] - v0;\n\n\t\t\tvi = index1*3;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*3;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*3;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tthis._faceTangents[i++] = denom*cx;\n\t\t\tthis._faceTangents[i++] = denom*cy;\n\t\t\tthis._faceTangents[i++] = denom*cz;\n\t\t}\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tvar positions:Array<number> = this._positions;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceNormals == null)\n\t\t\tthis._faceNormals = new Array<number>(len);\n\n\t\tif (this._useFaceWeights && this._faceWeights == null)\n\t\t\tthis._faceWeights = new Array<number>(len/3);\n\n\t\twhile (i < len) {\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tif (this._useFaceWeights) {\n\t\t\t\tvar w:number = d*10000;\n\n\t\t\t\tif (w < 1)\n\t\t\t\t\tw = 1;\n\n\t\t\t\tthis._faceWeights[k++] = w;\n\t\t\t}\n\n\t\t\td = 1/d;\n\n\t\t\tthis._faceNormals[j++] = cx*d;\n\t\t\tthis._faceNormals[j++] = cy*d;\n\t\t\tthis._faceNormals[j++] = cz*d;\n\t\t}\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyNormalsUpdate();\n\t\tthis.notifyTangentsUpdate();\n\t\tthis.notifyUVsUpdate();\n\t\tthis.notifySecondaryUVsUpdate();\n\t\tthis.notifyJointIndicesUpdate();\n\t\tthis.notifyJointWeightsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyNormalsUpdate()\n\t{\n\t\tif (this._vertexNormalsDirty)\n\t\t\treturn;\n\n\t\tthis._vertexNormalsDirty = true;\n\n\t\tif (!this._normalsUpdated)\n\t\t\tthis._normalsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.NORMAL_DATA);\n\n\t\tthis.dispatchEvent(this._normalsUpdated);\n\t}\n\n\tprivate notifyTangentsUpdate()\n\t{\n\t\tif (this._vertexTangentsDirty)\n\t\t\treturn;\n\n\t\tthis._vertexTangentsDirty = true;\n\n\t\tif (!this._tangentsUpdated)\n\t\t\tthis._tangentsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.TANGENT_DATA);\n\n\t\tthis.dispatchEvent(this._tangentsUpdated);\n\t}\n\n\tprivate notifyUVsUpdate()\n\t{\n\t\tif (this._uvsDirty)\n\t\t\treturn;\n\n\t\tthis._uvsDirty = true;\n\n\t\tif (!this._uvsUpdated)\n\t\t\tthis._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.UV_DATA);\n\n\t\tthis.dispatchEvent(this._uvsUpdated);\n\t}\n\n\tprivate notifySecondaryUVsUpdate()\n\t{\n\t\tif (this._secondaryUVsDirty)\n\t\t\treturn;\n\n\t\tthis._secondaryUVsDirty = true;\n\n\t\tif (!this._secondaryUVsUpdated)\n\t\t\tthis._secondaryUVsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.SECONDARY_UV_DATA);\n\n\t\tthis.dispatchEvent(this._secondaryUVsUpdated);\n\t}\n\n\tprivate notifyJointIndicesUpdate()\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\treturn;\n\n\t\tthis._jointIndicesDirty = true;\n\n\t\tif (!this._jointIndicesUpdated)\n\t\t\tthis._jointIndicesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_INDEX_DATA);\n\n\t\tthis.dispatchEvent(this._jointIndicesUpdated);\n\t}\n\n\tprivate notifyJointWeightsUpdate()\n\t{\n\t\tif (this._jointWeightsDirty)\n\t\t\treturn;\n\n\t\tthis._jointWeightsDirty = true;\n\n\t\tif (!this._jointWeightsUpdated)\n\t\t\tthis._jointWeightsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\n\t\tthis.dispatchEvent(this._jointWeightsUpdated);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass AbstractMethodError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\n\t}\n}\n\nexport = AbstractMethodError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass ArgumentError extends Error\n{\n\t/**\n\t * Create a new ArgumentError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"ArgumentError\", id);\n\t}\n}\n\nexport = ArgumentError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass DocumentError extends Error\n{\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\n\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\n\t{\n\t\tsuper(message, id);\n\t}\n}\n\nexport = DocumentError;",
    "class Error\n{\n\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\n\tprivate _name:string = '';  // Contains the name of the Error object.\n\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\n\t{\n\n\t\tthis._messsage = message;\n\t\tthis._name = name;\n\t\tthis._errorID = id;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get message():string\n\t{\n\n\t\treturn this._messsage;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set message(value:string)\n\t{\n\n\t\tthis._messsage = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get name():string\n\t{\n\n\t\treturn this._name;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set name(value:string)\n\t{\n\n\t\tthis._name = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get errorID():number\n\t{\n\n\t\treturn this._errorID;\n\n\t}\n\n}\n\nexport = Error;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass PartialImplementationError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(dependency:string = '', id:number = 0)\n\t{\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\n\t}\n}\n\nexport = PartialImplementationError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * RangeError is thrown when an index is accessed out of range of the number of\n * available indices on an Array.\n */\nclass RangeError extends Error\n{\n\t/**\n\t * Create a new RangeError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"RangeError\", id);\n\t}\n}\n\nexport = RangeError;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.AssetEvent\n */\nclass AssetEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_RENAME:string = 'assetRename';\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\n\n\t/**\n\t *\n\t */\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\n\n\tprivate _asset:IAsset;\n\tprivate _prevName:string;\n\n\t/**\n\t *\n\t */\n\tconstructor(type:string, asset:IAsset = null, prevName:string = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._asset = asset;\n\t\tthis._prevName = prevName || (this._asset? this._asset.name : null);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get asset():IAsset\n\t{\n\t\treturn this._asset;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetPrevName():string\n\t{\n\t\treturn this._prevName;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new AssetEvent(this.type, this.asset, this.assetPrevName);\n\t}\n}\n\nexport = AssetEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Base class for dispatching events\n*\n* @class away.events.EventDispatcher\n*\n*/\nclass EventDispatcher\n{\n\tprivate listeners:Array<Array<Function>> = new Array<Array<Function>>();\n\tprivate target:any;\n\n\tconstructor(target:any = null)\n\t{\n\t\tthis.target = target || this;\n\t}\n\n\t/**\n\t * Add an event listener\n\t * @method addEventListener\n\t * @param {String} Name of event to add a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tif (this.listeners[ type ] === undefined)\n\t\t\tthis.listeners[ type ] = new Array<Function>();\n\n\t\tif (this.getEventListenerIndex(type, listener) === -1)\n\t\t\tthis.listeners[ type ].push(listener);\n\t}\n\n\t/**\n\t * Remove an event listener\n\t * @method removeEventListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tvar index:number = this.getEventListenerIndex(type, listener);\n\n\t\tif (index !== -1)\n\t\t\tthis.listeners[ type ].splice(index, 1);\n\t}\n\n\t/**\n\t * Dispatch an event\n\t * @method dispatchEvent\n\t * @param {Event} Event to dispatch\n\t */\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\tvar listenerArray:Array<Function> = this.listeners[ event.type ];\n\n\t\tif (listenerArray !== undefined) {\n\t\t\tvar l:number = listenerArray.length;\n\n\t\t\tevent.target = this.target;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tlistenerArray[i](event);\n\t\t}\n\t}\n\n\t/**\n\t * get Event Listener Index in array. Returns -1 if no listener is added\n\t * @method getEventListenerIndex\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tprivate getEventListenerIndex(type:string, listener:Function):number\n\t{\n\t\tif (this.listeners[ type ] !== undefined) {\n\t\t\tvar a:Array<Function> = this.listeners[ type ];\n\t\t\tvar l:number = a.length;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tif (listener == a[i])\n\t\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * check if an object has an event listener assigned to it\n\t * @method hasListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic hasEventListener(type:string, listener?:Function):boolean\n\t{\n\t\tif (listener != null) {\n\t\t\treturn ( this.getEventListenerIndex(type, listener) !== -1 );\n\t\t} else {\n\t\t\tif (this.listeners[ type ] !== undefined)\n\t\t\t\treturn ( this.listeners[ type ].length > 0 );\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = EventDispatcher;",
    "class Event\n{\n\n\tpublic static COMPLETE:string = 'complete';\n\tpublic static OPEN:string = 'open';\n\n\tpublic static ENTER_FRAME:string = 'enterFrame';\n\tpublic static EXIT_FRAME:string = 'exitFrame';\n\n\n\tpublic static RESIZE:string = \"resize\";\n\tpublic static ERROR:string = \"error\";\n\tpublic static CHANGE:string = \"change\";\n\n\t/**\n\t * Type of event\n\t * @property type\n\t * @type String\n\t */\n\tpublic type:string = undefined;\n\n\t/**\n\t * Reference to target object\n\t * @property target\n\t * @type Object\n\t */\n\tpublic target:any = undefined;\n\n\tconstructor(type:string)\n\t{\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new Event(this.type);\n\t}\n}\n\nexport = Event;",
    "import SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.HTTPStatusEvent\n */\nclass HTTPStatusEvent extends Event\n{\n\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\n\n\tpublic status:number;\n\n\tconstructor(type:string, status:number = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis.status = status;\n\n\t}\n}\n\nexport = HTTPStatusEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass IOErrorEvent extends Event\n{\n\n\tpublic static IO_ERROR:string = \"ioError\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = IOErrorEvent;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LoaderEvent extends Event\n{\n\t/**\n\t * Dispatched when a resource and all of its dependencies is retrieved.\n\t */\n\tpublic static RESOURCE_COMPLETE:string = \"resourceComplete\";\n\n\tprivate _url:string;\n\tprivate _content:IAsset;\n\tprivate _assets:IAsset[];\n\n\t/**\n\t * Create a new LoaderEvent object.\n\t *\n\t * @param type The event type.\n\t * @param url The url of the loaded resource.\n\t * @param assets The assets of the loaded resource.\n\t */\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._url = url;\n\t\tthis._content = content;\n\t\tthis._assets = assets;\n\t}\n\n\t/**\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\n\t */\n\tpublic get content():IAsset\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The url of the loaded resource.\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t * The error string on loadError.\n\t */\n\tpublic get assets():IAsset[]\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new LoaderEvent(this.type, this._url, this._content, this._assets);\n\t}\n}\n\nexport = LoaderEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ParserEvent extends Event\n{\n\tprivate _message:string;\n\n\t/**\n\t * Dispatched when parsing of an asset completed.\n\t */\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\n\n\t/**\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\n\t * incorrectly formatted.)\n\t */\n\tpublic static PARSE_ERROR:string = 'parseError';\n\n\n\t/**\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\n\t * This is an internal event that should rarely (if ever) be listened for by\n\t * external classes.\n\t */\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\n\n\n\tconstructor(type:string, message:string = '')\n\t{\n\t\tsuper(type);\n\n\t\tthis._message = message;\n\t}\n\n\n\t/**\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\n\t */\n\tpublic get message():string\n\t{\n\t\treturn this._message;\n\t}\n\n\n\tpublic clone():Event\n\t{\n\t\treturn new ParserEvent(this.type, this.message);\n\t}\n}\n\nexport = ParserEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ProgressEvent extends Event\n{\n\tpublic static PROGRESS:string = \"progress\";\n\n\tpublic bytesLoaded:number;\n\n\tpublic bytesTotal:number;\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = ProgressEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionEvent extends Event\n{\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\n\n\tprivate _projection:IProjection;\n\n\tconstructor(type:string, projection:IProjection)\n\t{\n\t\tsuper(type);\n\t\tthis._projection = projection;\n\t}\n\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n}\n\nexport = ProjectionEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\tprivate _dataType:string;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, dataType:string = \"\")\n\t{\n\t\tsuper(type);\n\n\t\tthis._dataType = dataType;\n\t}\n\n\t/**\n\t * The data type of the vertex data.\n\t */\n\tpublic get dataType():string\n\t{\n\t\treturn this._dataType;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._dataType);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass TimerEvent extends Event\n{\n\n\tpublic static TIMER:string = \"timer\";\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = TimerEvent",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Box object is an area defined by its position, as indicated by its\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\n * height and depth.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n * <code>height</code> <code>depth</code> properties of the Box class are\n * independent of each other; changing the value of one property has no effect\n * on the others. However, the <code>right</code>, <code>bottom</code> and\n * <code>back</code> properties are integrally related to those six\n * properties. For example, if you change the value of the <code>right</code>\n * property, the value of the <code>width</code> property changes; if you\n * change the <code>bottom</code> property, the value of the\n * <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Box objects:</p>\n *\n * <ul>\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\n * </ul>\n *\n * <p>You can use the <code>new Box()</code> constructor to create a\n * Box object.</p>\n *\n * <p><b>Note:</b> The Box class does not define a cubic Shape\n * display object.\n */\nclass Box\n{\n\tprivate _size:Vector3D;\n\tprivate _bottomRightBack:Vector3D;\n\tprivate _topLeftFront:Vector3D;\n\n\t/**\n\t * The height of the box, in pixels. Changing the <code>height</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the box, in pixels. Changing the <code>width</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic depth:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>x</code> property of a Box object has no\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>y</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>z</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>z</code> property is equal to the value of the\n\t * <code>front</code> property.</p>\n\t */\n\tpublic z:number\n\n\t/**\n\t * The sum of the <code>z</code> and <code>height</code> properties.\n\t */\n\tpublic get back():number\n\t{\n\t\treturn this.z + this.depth;\n\t}\n\n\tpublic set back(val:number)\n\t{\n\t\tthis.depth = val - this.z;\n\t}\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\tpublic set bottom(val:number)\n\t{\n\t\tthis.height = val - this.y;\n\t}\n\n\t/**\n\t * The location of the Box object's bottom-right corner, determined by the\n\t * values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRightBack():Vector3D\n\t{\n\t\tif (this._bottomRightBack == null)\n\t\t\tthis._bottomRightBack = new Vector3D();\n\n\t\tthis._bottomRightBack.x = this.x + this.width;\n\t\tthis._bottomRightBack.y = this.y + this.height;\n\t\tthis._bottomRightBack.z = this.z + this.depth;\n\n\t\treturn this._bottomRightBack;\n\t}\n\n\t/**\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>front</code> property of a Box object has no effect on the\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\n\t * properties. However it does affect the <code>depth</code> property,\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\n\t * <code>depth</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get front():number\n\t{\n\t\treturn this.z;\n\t}\n\n\tpublic set front(val:number)\n\t{\n\t\tthis.depth += this.z - val;\n\t\tthis.z = val;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\n\t * <code>left</code> property of a Box object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\tpublic set left(val:number)\n\t{\n\t\tthis.width += this.x - val;\n\t\tthis.x = val;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\tpublic set right(val:number)\n\t{\n\t\tthis.width = val - this.x;\n\t}\n\n\t/**\n\t * The size of the Box object, expressed as a Vector3D object with the\n\t * values of the <code>width</code>, <code>height</code> and\n\t * <code>depth</code> properties.\n\t */\n\tpublic get size():Vector3D\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Vector3D();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\t\tthis._size.z = this.depth;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>top</code> property of a Box object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\tpublic set top(val:number)\n\t{\n\t\tthis.height += (this.y - val);\n\t\tthis.y = val;\n\t}\n\n\t/**\n\t * The location of the Box object's top-left-front corner, determined by the\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\n\t */\n\tpublic get topLeftFront():Vector3D\n\t{\n\t\tif (this._topLeftFront == null)\n\t\t\tthis._topLeftFront = new Vector3D();\n\n\t\tthis._topLeftFront.x = this.x;\n\t\tthis._topLeftFront.y = this.y;\n\t\tthis._topLeftFront.z = this.z;\n\n\t\treturn this._topLeftFront;\n\t}\n\n\t/**\n\t * Creates a new Box object with the top-left-front corner specified by the\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\n\t * parameters. If you call this public without parameters, a box with\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param width  The width of the box, in pixels.\n\t * @param height The height of the box, in pixels.\n\t * @param depth The depth of the box, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = depth;\n\t}\n\n\t/**\n\t * Returns a new Box object with the same values for the <code>x</code>,\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\n\t * and <code>depth</code> properties as the original Box object.\n\t *\n\t * @return A new Box object with the same values for the <code>x</code>,\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\n\t *         <code>height</code> and <code>depth</code> properties as the\n\t *         original Box object.\n\t */\n\tpublic clone():Box\n\t{\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number, z:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object. This method is similar to the\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\n\t * object as a parameter.\n\t *\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\n\t *                 <i>z</i> coordinates.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\n\t}\n\n\t/**\n\t * Determines whether the Box object specified by the <code>box</code>\n\t * parameter is contained within this Box object. A Box object is said to\n\t * contain another if the second Box object falls entirely within the\n\t * boundaries of the first.\n\t *\n\t * @param box The Box object being checked.\n\t * @return A value of <code>true</code> if the Box object that you specify\n\t *         is contained by this Box object; otherwise <code>false</code>.\n\t */\n\tpublic containsBox(box:Box):boolean\n\t{\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\n\t}\n\n\t/**\n\t * Copies all of box data from the source Box object into the calling\n\t * Box object.\n\t *\n\t * @param sourceBox The Box object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceBox:Box)\n\t{\n\t\tthis.x = sourceBox.x;\n\t\tthis.y = sourceBox.y;\n\t\tthis.z = sourceBox.z;\n\t\tthis.width = sourceBox.width;\n\t\tthis.height = sourceBox.height;\n\t\tthis.depth = sourceBox.depth;\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Box object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties of an object against\n\t * the same properties of this Box object.\n\t *\n\t * @param toCompare The box to compare to this Box object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\n\t *         properties as this Box object; otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Box):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\n\t}\n\n\t/**\n\t * Increases the size of the Box object by the specified amounts, in\n\t * pixels. The center point of the Box object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, to\n\t * the top and the bottom by the <code>dy</code> value, and to\n\t * the front and the back by the <code>dz</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the box:\n\t * @param dy The value to be added to the top and the bottom of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           height and position of the box:\n\t * @param dz The value to be added to the front and the back of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           depth and position of the box:\n\t */\n\tpublic inflate(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.z -= dz/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t\tthis.depth += dz/2;\n\t}\n\n\t/**\n\t * Increases the size of the Box object. This method is similar to the\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\n\t *              increase the horizontal dimension of the Box object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Box object.\n\t *              The <code>z</code> property is used to increase the\n\t *              longitudinal dimension of the Box object.\n\t */\n\tpublic inflatePoint(delta:Vector3D)\n\t{\n\t\tthis.x -= delta.x/2;\n\t\tthis.y -= delta.y/2;\n\t\tthis.z -= delta.z/2;\n\t\tthis.width += delta.x/2;\n\t\tthis.height += delta.y/2;\n\t\tthis.depth += delta.z/2;\n\t}\n\n\t/**\n\t * If the Box object specified in the <code>toIntersect</code> parameter\n\t * intersects with this Box object, returns the area of intersection\n\t * as a Box object. If the boxes do not intersect, this method returns an\n\t * empty Box object with its properties set to 0.\n\t *\n\t * @param toIntersect The Box object to compare against to see if it\n\t *                    intersects with this Box object.\n\t * @return A Box object that equals the area of intersection. If the\n\t *         boxes do not intersect, this method returns an empty Box\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\n\t *         <code>depth</code> properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Box):Box\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Box = new Box();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\n\t\t\tif (this.z > toIntersect.z) {\n\t\t\t\ti.z = this.z;\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\n\n\t\t\t\tif (i.depth > this.depth)\n\t\t\t\t\ti.depth = this.depth;\n\t\t\t} else {\n\t\t\t\ti.z = toIntersect.z;\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\n\n\t\t\t\tif (i.depth > toIntersect.depth)\n\t\t\t\t\ti.depth = toIntersect.depth;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Box();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Box object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code>, and <code>depth</code> properties of the specified\n\t * Box object to see if it intersects with this Box object.\n\t *\n\t * @param toIntersect The Box object to compare against this Box object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Box object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Box):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar halfExtentsX:number = this.width/2;\n\t\tvar halfExtentsY:number = this.height/2;\n\t\tvar halfExtentsZ:number = this.depth/2;\n\n\t\tvar centerX:number = this.x + halfExtentsX;\n\t\tvar centerY:number = this.y + halfExtentsY;\n\t\tvar centerZ:number = this.z + halfExtentsZ;\n\n\t\tvar px:number = position.x - centerX;\n\t\tvar py:number = position.y - centerY;\n\t\tvar pz:number = position.z - centerZ;\n\n\t\tvar vx:number = direction.x\n\t\tvar vy:number = direction.y\n\t\tvar vz:number = direction.z;\n\n\t\tvar ix:number;\n\t\tvar iy:number;\n\t\tvar iz:number;\n\t\tvar rayEntryDistance:number;\n\n\t\t// ray-plane tests\n\t\tvar intersects:boolean;\n\t\tif (vx < 0) {\n\t\t\trayEntryDistance = ( halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vx > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = -1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy < 0) {\n\t\t\trayEntryDistance = ( halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = -1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz < 0) {\n\t\t\trayEntryDistance = ( halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = -1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn intersects? rayEntryDistance : -1;\n\t}\n\n\t/**\n\t * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\n\t *\n\t * @param point The point for which to find the closest point on the Box\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\n\t * @return\n\t */\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar p:number;\n\n\t\tif (target == null)\n\t\t\ttarget = new Vector3D();\n\n\t\tp = point.x;\n\t\tif (p < this.x)\n\t\t\tp = this.x;\n\t\tif (p > this.x + this.width)\n\t\t\tp = this.x + this.width;\n\t\ttarget.x = p;\n\n\t\tp = point.y;\n\t\tif (p < this.y + this.height)\n\t\t\tp = this.y + this.height;\n\t\tif (p > this.y)\n\t\t\tp = this.y;\n\t\ttarget.y = p;\n\n\t\tp = point.z;\n\t\tif (p < this.z)\n\t\t\tp = this.z;\n\t\tif (p > this.z + this.depth)\n\t\t\tp = this.z + this.depth;\n\t\ttarget.z = p;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Determines whether or not this Box object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Box object's width, height or\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object, as determined by its\n\t * top-left-front corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object using a Vector3D object as a\n\t * parameter. This method is similar to the <code>Box.offset()</code>\n\t * method, except that it takes a Vector3D object as a parameter.\n\t *\n\t * @param position A Vector3D object to use to offset this Box object.\n\t */\n\tpublic offsetPosition(position:Vector3D)\n\t{\n\t\tthis.x += position.x;\n\t\tthis.y += position.y;\n\t\tthis.z += position.z;\n\t}\n\n\t/**\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\n\t * width, height or depth is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\n\t * <code>depth</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.depth = 0;\n\t}\n\n\t/**\n\t * Sets the members of Box to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param widtha  The width of the box, in pixels.\n\t * @param heighta The height of the box, in pixels.\n\t * @param deptha  The depth of the box, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t\tthis.depth = deptha;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal, vertical and\n\t * longitudinal positions and the width, height and depth of the Box object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\n\t}\n\n\t/**\n\t * Adds two boxes together to create a new Box object, by filling\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\n\t *\n\t * @param toUnion A Box object to add to this Box object.\n\t * @return A new Box object that is the union of the two boxes.\n\t */\n\tpublic union(toUnion:Box):Box\n\t{\n\t\tvar u:Box = new Box();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\tif (this.z < toUnion.z) {\n\t\t\tu.z = this.z;\n\t\t\tu.depth = toUnion.z - this.z + toUnion.depth;\n\n\t\t\tif (u.depth < this.depth)\n\t\t\t\tu.depth = this.depth;\n\t\t} else {\n\t\t\tu.z = toUnion.z;\n\t\t\tu.depth = this.z - toUnion.z + this.depth;\n\n\t\t\tif (u.depth < toUnion.depth)\n\t\t\t\tu.depth = toUnion.depth;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Box;",
    "import ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\n/**\n * The ColorTransform class lets you adjust the color values in a display\n * object. The color adjustment or <i>color transformation</i> can be applied\n * to all four channels: red, green, blue, and alpha transparency.\n *\n * <p>When a ColorTransform object is applied to a display object, a new value\n * for each color channel is calculated like this:</p>\n *\n * <ul>\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\n * <code>redOffset</code></li>\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\n * <code>greenOffset</code></li>\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\n * <code>blueOffset</code></li>\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\n * <code>alphaOffset</code></li>\n * </ul>\n *\n * <p>If any of the color channel values is greater than 255 after the\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\n *\n * <p>You can use ColorTransform objects in the following ways:</p>\n *\n * <ul>\n *   <li>In the <code>colorTransform</code> parameter of the\n * <code>colorTransform()</code> method of the BitmapData class</li>\n *   <li>As the <code>colorTransform</code> property of a Transform object\n * (which can be used as the <code>transform</code> property of a display\n * object)</li>\n * </ul>\n *\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\n * a ColorTransform object before you can call the methods of the\n * ColorTransform object.</p>\n *\n * <p>Color transformations do not apply to the background color of a movie\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\n * that are attached to the movie clip.</p>\n */\nclass ColorTransform\n{\n\t/**\n\t * A decimal value that is multiplied with the alpha transparency channel\n\t * value.\n\t *\n\t * <p>If you set the alpha transparency value of a display object directly by\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\n\t * affects the value of the <code>alphaMultiplier</code> property of that\n\t * display object's <code>transform.colorTransform</code> property.</p>\n\t */\n\tpublic alphaMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the alpha transparency channel\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\n\t * value.\n\t */\n\tpublic alphaOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the blue channel value.\n\t */\n\tpublic blueMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the blue channel value after it\n\t * has been multiplied by the <code>blueMultiplier</code> value.\n\t */\n\tpublic blueOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the green channel value.\n\t */\n\tpublic greenMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the green channel value after\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\n\t */\n\tpublic greenOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the red channel value.\n\t */\n\tpublic redMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the red channel value after it\n\t * has been multiplied by the <code>redMultiplier</code> value.\n\t */\n\tpublic redOffset:number;\n\n\t/**\n\t * The RGB color value for a ColorTransform object.\n\t *\n\t * <p>When you set this property, it changes the three color offset values\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\n\t * multiplier values(<code>redMultiplier</code>,\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\n\t * alpha transparency multiplier and offset values do not change.</p>\n\t *\n\t * <p>When you pass a value for this property, use the format\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\n\t * hexadecimal digits that specify the offset of each color component. The 0x\n\t * tells the ActionScript compiler that the number is a hexadecimal\n\t * value.</p>\n\t */\n\tpublic get color():number\n\t{\n\t\treturn((this.redOffset << 16) | ( this.greenOffset << 8) | this.blueOffset);\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\n\n\t\tthis.redOffset = argb[1];  //(value >> 16) & 0xFF;\n\t\tthis.greenOffset = argb[2];  //(value >> 8) & 0xFF;\n\t\tthis.blueOffset = argb[3];  //value & 0xFF;\n\n\t\tthis.redMultiplier = 0;\n\t\tthis.greenMultiplier = 0;\n\t\tthis.blueMultiplier = 0;\n\t}\n\n\t/**\n\t * Creates a ColorTransform object for a display object with the specified\n\t * color channel values and alpha values.\n\t *\n\t * @param redMultiplier   The value for the red multiplier, in the range from\n\t *                        0 to 1.\n\t * @param greenMultiplier The value for the green multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\n\t *                        the range from 0 to 1.\n\t * @param redOffset       The offset value for the red color channel, in the\n\t *                        range from -255 to 255.\n\t * @param greenOffset     The offset value for the green color channel, in\n\t *                        the range from -255 to 255.\n\t * @param blueOffset      The offset for the blue color channel value, in the\n\t *                        range from -255 to 255.\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\n\t *                        the range from -255 to 255.\n\t */\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\n\t{\n\t\tthis.redMultiplier = redMultiplier;\n\t\tthis.greenMultiplier = greenMultiplier;\n\t\tthis.blueMultiplier = blueMultiplier;\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\t\tthis.redOffset = redOffset;\n\t\tthis.greenOffset = greenOffset;\n\t\tthis.blueOffset = blueOffset;\n\t\tthis.alphaOffset = alphaOffset;\n\t}\n\n\t/**\n\t * Concatenates the ColorTranform object specified by the <code>second</code>\n\t * parameter with the current ColorTransform object and sets the current\n\t * object as the result, which is an additive combination of the two color\n\t * transformations. When you apply the concatenated ColorTransform object,\n\t * the effect is the same as applying the <code>second</code> color\n\t * transformation after the <i>original</i> color transformation.\n\t *\n\t * @param second The ColorTransform object to be combined with the current\n\t *               ColorTransform object.\n\t */\n\tpublic concat(second:ColorTransform):void\n\t{\n\t\tthis.redMultiplier += second.redMultiplier;\n\t\tthis.greenMultiplier += second.greenMultiplier;\n\t\tthis.blueMultiplier += second.blueMultiplier;\n\t\tthis.alphaMultiplier += second.alphaMultiplier;\n\t}\n}\n\nexport = ColorTransform;",
    "/**\n* MathConsts provides some commonly used mathematical constants\n*/\nclass MathConsts\n{\n\t/**\n\t * The amount to multiply with when converting radians to degrees.\n\t */\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\n\n\t/**\n\t * The amount to multiply with when converting degrees to radians.\n\t */\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\n}\n\nexport = MathConsts;",
    "import Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\n/**\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\n */\nclass Matrix3DUtils\n{\n\t/**\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\n\t */\n\tpublic static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\n\t *\n\t * @param    quarternion    The quarterion object to convert.\n\t */\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\n\t{\n\t\tvar x:number = quarternion.x;\n\t\tvar y:number = quarternion.y;\n\t\tvar z:number = quarternion.z;\n\t\tvar w:number = quarternion.w;\n\n\t\tvar xx:number = x*x;\n\t\tvar xy:number = x*y;\n\t\tvar xz:number = x*z;\n\t\tvar xw:number = x*w;\n\n\t\tvar yy:number = y*y;\n\t\tvar yz:number = y*z;\n\t\tvar yw:number = y*w;\n\n\t\tvar zz:number = z*z;\n\t\tvar zw:number = z*w;\n\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\traw[0] = 1 - 2*(yy + zz);\n\t\traw[1] = 2*(xy + zw);\n\t\traw[2] = 2*(xz - yw);\n\t\traw[4] = 2*(xy - zw);\n\t\traw[5] = 1 - 2*(xx + zz);\n\t\traw[6] = 2*(yz + xw);\n\t\traw[8] = 2*(xz + yw);\n\t\traw[9] = 2*(yz - xw);\n\t\traw[10] = 1 - 2*(xx + yy);\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tif (m) {\n\t\t\tm.copyRawDataFrom(raw);\n\t\t\treturn m;\n\t\t} else\n\t\t\treturn new Matrix3D(raw);\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the forward vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The forward vector\n\t */\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(2, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the up vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The up vector\n\t */\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(1, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the right vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The right vector\n\t */\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(0, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\n\t */\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\n\t{\n\t\tvar r1:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar r2:number[] = m2.rawData;\n\t\tm1.copyRawDataTo(r1);\n\n\t\tfor (var i:number = 0; i < 16; ++i) {\n\t\t\tif (r1[i] != r2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D)\n\t{\n\t\tvar dirN:Vector3D;\n\t\tvar upN:Vector3D;\n\t\tvar lftN:Vector3D;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tlftN = dir.crossProduct(up);\n\t\tlftN.normalize();\n\n\t\tupN = lftN.crossProduct(dir);\n\t\tupN.normalize();\n\t\tdirN = dir.clone();\n\t\tdirN.normalize();\n\n\t\traw[0] = lftN.x;\n\t\traw[1] = upN.x;\n\t\traw[2] = -dirN.x;\n\t\traw[3] = 0.0;\n\n\t\traw[4] = lftN.y;\n\t\traw[5] = upN.y;\n\t\traw[6] = -dirN.y;\n\t\traw[7] = 0.0;\n\n\t\traw[8] = lftN.z;\n\t\traw[9] = upN.z;\n\t\traw[10] = -dirN.z;\n\t\traw[11] = 0.0;\n\n\t\traw[12] = -lftN.dotProduct(pos);\n\t\traw[13] = -upN.dotProduct(pos);\n\t\traw[14] = dirN.dotProduct(pos);\n\t\traw[15] = 1.0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target === null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar ab2:number = -2*a*b;\n\t\tvar ac2:number = -2*a*c;\n\t\tvar bc2:number = -2*b*c;\n\t\t// reflection matrix\n\t\trawData[0] = 1 - 2*a*a;\n\t\trawData[4] = ab2;\n\t\trawData[8] = ac2;\n\t\trawData[12] = -2*a*d;\n\t\trawData[1] = ab2;\n\t\trawData[5] = 1 - 2*b*b;\n\t\trawData[9] = bc2;\n\t\trawData[13] = -2*b*d;\n\t\trawData[2] = ac2;\n\t\trawData[6] = bc2;\n\t\trawData[10] = 1 - 2*c*c;\n\t\trawData[14] = -2*c*d;\n\t\trawData[3] = 0;\n\t\trawData[7] = 0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar d:number = raw[12];\n\t\tvar h:number = raw[13];\n\t\tvar l:number = raw[14];\n\t\tvar p:number = raw[15];\n\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z + d;\n\t\tresult.y = e * x + f * y + g * z + h;\n\t\tresult.z = i * x + j * y + k * z + l;\n\t\tresult.w = m * x + n * y + o * z + p;\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z;\n\t\tresult.y = e * x + f * y + g * z;\n\t\tresult.z = i * x + j * y + k * z;\n\t\tresult.w = m * x + n * y + o * z;\n\t\treturn result;\n\t}\n\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif(!result)\n\t\t\tresult = new Vector3D();\n\n\t\ttransform.copyColumnTo(3, result);\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar outIndex:number = 0;\n\t\tvar length:number = vin.length;\n\t\tfor(var index:number = 0; index<length; index+=3) {\n\t\t\tvar x:number = vin[index];\n\t\t\tvar y:number = vin[index+1];\n\t\t\tvar z:number = vin[index+2];\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\n\t\t}\n\t}\n}\n\nexport = Matrix3DUtils;",
    "import Orientation3D\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\nclass Matrix3D\n{\n\t/**\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\n\t *\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\n\t * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\n\t */\n\tpublic rawData:number[];\n\n\t/**\n\t * Creates a Matrix3D object.\n\t */\n\tconstructor(v:number[] = null)\n\t{\n\t\tif (v != null && v.length == 16)\n\t\t\tthis.rawData = v.concat();\n\t\telse\n\t\t\tthis.rawData = [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\n\t}\n\n\t/**\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\n\t */\n\tpublic append(lhs:Matrix3D)\n\t{\n\t\tvar m111:number = this.rawData[0], m121:number = this.rawData[4], m131:number = this.rawData[8], m141:number = this.rawData[12], m112:number = this.rawData[1], m122:number = this.rawData[5], m132:number = this.rawData[9], m142:number = this.rawData[13], m113:number = this.rawData[2], m123:number = this.rawData[6], m133:number = this.rawData[10], m143:number = this.rawData[14], m114:number = this.rawData[3], m124:number = this.rawData[7], m134:number = this.rawData[11], m144:number = this.rawData[15], m211:number = lhs.rawData[0], m221:number = lhs.rawData[4], m231:number = lhs.rawData[8], m241:number = lhs.rawData[12], m212:number = lhs.rawData[1], m222:number = lhs.rawData[5], m232:number = lhs.rawData[9], m242:number = lhs.rawData[13], m213:number = lhs.rawData[2], m223:number = lhs.rawData[6], m233:number = lhs.rawData[10], m243:number = lhs.rawData[14], m214:number = lhs.rawData[3], m224:number = lhs.rawData[7], m234:number = lhs.rawData[11], m244:number = lhs.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Appends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\tthis.append(m);\n\t}\n\n\t/**\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tthis.append(new Matrix3D([ xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0 ]));\n\t}\n\n\t/**\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic appendTranslation(x:number, y:number, z:number)\n\t{\n\t\tthis.rawData[12] += x;\n\t\tthis.rawData[13] += y;\n\t\tthis.rawData[14] += z;\n\t}\n\n\t/**\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\n\t */\n\tpublic clone():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.rawData.slice(0));\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\n\t */\n\tpublic copyFrom(sourceMatrix3D:Matrix3D)\n\t{\n\t\tvar len:number = sourceMatrix3D.rawData.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = sourceMatrix3D.rawData[c];\n\t}\n\n\tpublic copyRawDataFrom(vector:number[], index:number = 0, transpose:boolean = false):void\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = vector.length - index;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = vector[c + index];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\tpublic copyRawDataTo(vector:number[], index:number = 0, transpose:boolean = false)\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = this.rawData.length\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tvector[c + index ] = this.rawData[c];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies this Matrix3D object into a destination Matrix3D object.\n\t */\n\tpublic copyToMatrix3D(dest:Matrix3D)\n\t{\n\t\tdest.rawData = this.rawData.slice(0);\n\t}\n\n\t/**\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\n\t */\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\n\t{\n\t\tvar q:Quaternion;\n\n\t\t// Initial Tests - Not OK\n\n\t\tvar vec:Vector3D[] = [];\n\t\tvar m = this.clone();\n\t\tvar mr = m.rawData;\n\n\t\tvar pos:Vector3D = new Vector3D(mr[12], mr[13], mr[14]);\n\t\tmr[12] = 0;\n\t\tmr[13] = 0;\n\t\tmr[14] = 0;\n\n\t\tvar scale:Vector3D = new Vector3D();\n\n\t\tscale.x = Math.sqrt(mr[0]*mr[0] + mr[1]*mr[1] + mr[2]*mr[2]);\n\t\tscale.y = Math.sqrt(mr[4]*mr[4] + mr[5]*mr[5] + mr[6]*mr[6]);\n\t\tscale.z = Math.sqrt(mr[8]*mr[8] + mr[9]*mr[9] + mr[10]*mr[10]);\n\n\t\tif (mr[0]*(mr[5]*mr[10] - mr[6]*mr[9]) - mr[1]*(mr[4]*mr[10] - mr[6]*mr[8]) + mr[2]*(mr[4]*mr[9] - mr[5]*mr[8]) < 0)\n\t\t\tscale.z = -scale.z;\n\n\t\tmr[0] /= scale.x;\n\t\tmr[1] /= scale.x;\n\t\tmr[2] /= scale.x;\n\t\tmr[4] /= scale.y;\n\t\tmr[5] /= scale.y;\n\t\tmr[6] /= scale.y;\n\t\tmr[8] /= scale.z;\n\t\tmr[9] /= scale.z;\n\t\tmr[10] /= scale.z;\n\n\t\tvar rot = new Vector3D();\n\n\t\tswitch (orientationStyle) {\n\t\t\tcase Orientation3D.AXIS_ANGLE:\n\n\t\t\t\trot.w = Math.acos((mr[0] + mr[5] + mr[10] - 1)/2);\n\n\t\t\t\tvar len:number = Math.sqrt((mr[6] - mr[9])*(mr[6] - mr[9]) + (mr[8] - mr[2])*(mr[8] - mr[2]) + (mr[1] - mr[4])*(mr[1] - mr[4]));\n\t\t\t\trot.x = (mr[6] - mr[9])/len;\n\t\t\t\trot.y = (mr[8] - mr[2])/len;\n\t\t\t\trot.z = (mr[1] - mr[4])/len;\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.QUATERNION:\n\n\t\t\t\tvar tr = mr[0] + mr[5] + mr[10];\n\n\t\t\t\tif (tr > 0) {\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\n\n\t\t\t\t\trot.x = (mr[6] - mr[9])/(4*rot.w);\n\t\t\t\t\trot.y = (mr[8] - mr[2])/(4*rot.w);\n\t\t\t\t\trot.z = (mr[1] - mr[4])/(4*rot.w);\n\t\t\t\t} else if ((mr[0] > mr[5]) && (mr[0] > mr[10])) {\n\t\t\t\t\trot.x = Math.sqrt(1 + mr[0] - mr[5] - mr[10])/2;\n\n\t\t\t\t\trot.w = (mr[6] - mr[9])/(4*rot.x);\n\t\t\t\t\trot.y = (mr[1] + mr[4])/(4*rot.x);\n\t\t\t\t\trot.z = (mr[8] + mr[2])/(4*rot.x);\n\t\t\t\t} else if (mr[5] > mr[10]) {\n\t\t\t\t\trot.y = Math.sqrt(1 + mr[5] - mr[0] - mr[10])/2;\n\n\t\t\t\t\trot.x = (mr[1] + mr[4])/(4*rot.y);\n\t\t\t\t\trot.w = (mr[8] - mr[2])/(4*rot.y);\n\t\t\t\t\trot.z = (mr[6] + mr[9])/(4*rot.y);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = Math.sqrt(1 + mr[10] - mr[0] - mr[5])/2;\n\n\t\t\t\t\trot.x = (mr[8] + mr[2])/(4*rot.z);\n\t\t\t\t\trot.y = (mr[6] + mr[9])/(4*rot.z);\n\t\t\t\t\trot.w = (mr[1] - mr[4])/(4*rot.z);\n\t\t\t\t}\n\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\n\t\t\t\trot.y = Math.asin(-mr[2]);\n\n\t\t\t\t//var cos:number = Math.cos(rot.y);\n\n\t\t\t\tif (mr[2] != 1 && mr[2] != -1) {\n\t\t\t\t\trot.x = Math.atan2(mr[6], mr[10]);\n\t\t\t\t\trot.z = Math.atan2(mr[1], mr[0]);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = 0;\n\t\t\t\t\trot.x = Math.atan2(mr[4], mr[5]);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvec.push(pos);\n\t\tvec.push(rot);\n\t\tvec.push(scale);\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\n\t * coordinate to another.\n\t */\n\tpublic deltaTransformVector(v:Vector3D):Vector3D\n\t{\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11]));\n\t}\n\n\t/**\n\t * Converts the current matrix to an identity or unit matrix.\n\t */\n\tpublic identity()\n\t{\n\t\tthis.rawData = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\n\t}\n\n\t/**\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\n\t */\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\n\t */\n\tpublic interpolateTo(toMat:Matrix3D, percent:number)\n\t{\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\n\t}\n\n\t/**\n\t * Inverts the current matrix.\n\t */\n\tpublic invert():boolean\n\t{\n\t\tvar d = this.determinant;\n\t\tvar invertable = Math.abs(d) > 0.00000000001;\n\n\t\tif (invertable) {\n\t\t\td = 1/d;\n\t\t\tvar m11:number = this.rawData[0];\n\t\t\tvar m21:number = this.rawData[4];\n\t\t\tvar m31:number = this.rawData[8];\n\t\t\tvar m41:number = this.rawData[12];\n\t\t\tvar m12:number = this.rawData[1];\n\t\t\tvar m22:number = this.rawData[5];\n\t\t\tvar m32:number = this.rawData[9];\n\t\t\tvar m42:number = this.rawData[13];\n\t\t\tvar m13:number = this.rawData[2];\n\t\t\tvar m23:number = this.rawData[6];\n\t\t\tvar m33:number = this.rawData[10];\n\t\t\tvar m43:number = this.rawData[14];\n\t\t\tvar m14:number = this.rawData[3];\n\t\t\tvar m24:number = this.rawData[7];\n\t\t\tvar m34:number = this.rawData[11];\n\t\t\tvar m44:number = this.rawData[15];\n\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\n\t\t}\n\t\treturn invertable;\n\t}\n\n\t/* TODO implement pointAt\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\n\t {\n\t }\n\t */\n\n\t/**\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\n\t */\n\tpublic prepend(rhs:Matrix3D)\n\t{\n\t\tvar m111:number = rhs.rawData[0], m121:number = rhs.rawData[4], m131:number = rhs.rawData[8], m141:number = rhs.rawData[12], m112:number = rhs.rawData[1], m122:number = rhs.rawData[5], m132:number = rhs.rawData[9], m142:number = rhs.rawData[13], m113:number = rhs.rawData[2], m123:number = rhs.rawData[6], m133:number = rhs.rawData[10], m143:number = rhs.rawData[14], m114:number = rhs.rawData[3], m124:number = rhs.rawData[7], m134:number = rhs.rawData[11], m144:number = rhs.rawData[15], m211:number = this.rawData[0], m221:number = this.rawData[4], m231:number = this.rawData[8], m241:number = this.rawData[12], m212:number = this.rawData[1], m222:number = this.rawData[5], m232:number = this.rawData[9], m242:number = this.rawData[13], m213:number = this.rawData[2], m223:number = this.rawData[6], m233:number = this.rawData[10], m243:number = this.rawData[14], m214:number = this.rawData[3], m224:number = this.rawData[7], m234:number = this.rawData[11], m244:number = this.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Prepends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\t/*\n\t\t if ( pivot != null )\n\t\t {\n\t\t var p:Vector3D = pivot;\n\t\t m.appendTranslation( p.x, p.y, p.z );\n\t\t }\n\t\t */\n\t\tthis.prepend(m);\n\t}\n\n\t/**\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic prependScale(xScale:number, yScale:number, zScale:number)\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tthis.prepend(new Matrix3D([ xScale, 0, 0, 0, 0, yScale, 0, 0, 0, 0, zScale, 0, 0, 0, 0, 1 ]));\n\t}\n\n\t/**\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic prependTranslation(x:number, y:number, z:number)\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar m = new Matrix3D();\n\t\tm.position = new Vector3D(x, y, z);\n\t\tthis.prepend(m);\n\t}\n\n\t// TODO orientationStyle\n\t/**\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\n\t */\n\tpublic recompose(components:Vector3D[]):boolean\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tif (components.length < 3) return false\n\n\t\t//components[2].x == 0 || components[2].y == 0 || components[2].z == 0) return false;\n\n\t\tthis.identity();\n\t\tthis.appendScale(components[2].x, components[2].y, components[2].z);\n\n\t\tvar angle:number;\n\t\tangle = -components[1].x;\n\t\tthis.append(new Matrix3D([1, 0, 0, 0, 0, Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0 , 0]));\n\t\tangle = -components[1].y;\n\t\tthis.append(new Matrix3D([Math.cos(angle), 0, Math.sin(angle), 0, 0, 1, 0, 0, -Math.sin(angle), 0, Math.cos(angle), 0, 0, 0, 0, 0]));\n\t\tangle = -components[1].z;\n\t\tthis.append(new Matrix3D([Math.cos(angle), -Math.sin(angle), 0, 0, Math.sin(angle), Math.cos(angle), 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]));\n\n\t\tthis.position = components[0];\n\t\tthis.rawData[15] = 1;\n\n\t\treturn true;\n\t}\n\n\tpublic transformVector(v:Vector3D):Vector3D\n\t{\n\t\tif (v == null)\n\t\t\treturn new Vector3D();\n\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\treturn new Vector3D((x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12]), (x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13]), (x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14]), (x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15]));\n\t}\n\n\t/**\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\n\t */\n\tpublic transformVectors(vin:number[], vout:number[])\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar i:number = 0;\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\n\n\t\twhile (i + 3 <= vin.length) {\n\t\t\tx = vin[i];\n\t\t\ty = vin[i + 1];\n\t\t\tz = vin[i + 2];\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\n\t */\n\tpublic transpose()\n\t{\n\n\t\t// Initial Tests - OK\n\n\t\tvar oRawData:number[] = this.rawData.slice(0);\n\n\t\tthis.rawData[1] = oRawData[4];\n\t\tthis.rawData[2] = oRawData[8];\n\t\tthis.rawData[3] = oRawData[12];\n\t\tthis.rawData[4] = oRawData[1];\n\t\tthis.rawData[6] = oRawData[9];\n\t\tthis.rawData[7] = oRawData[13];\n\t\tthis.rawData[8] = oRawData[2];\n\t\tthis.rawData[9] = oRawData[6];\n\t\tthis.rawData[11] = oRawData[14];\n\t\tthis.rawData[12] = oRawData[3];\n\t\tthis.rawData[13] = oRawData[7];\n\t\tthis.rawData[14] = oRawData[11];\n\t}\n\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\n\t{\n\n\t\t// internal class use by rotations which have been tested\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tvar rad = degrees*( Math.PI/180 );\n\t\tvar c:number = Math.cos(rad);\n\t\tvar s:number = Math.sin(rad);\n\t\tvar t:number = 1 - c;\n\t\tvar tmp1:number, tmp2:number;\n\n\t\tm.rawData[0] = c + x*x*t;\n\t\tm.rawData[5] = c + y*y*t;\n\t\tm.rawData[10] = c + z*z*t;\n\n\t\ttmp1 = x*y*t;\n\t\ttmp2 = z*s;\n\t\tm.rawData[1] = tmp1 + tmp2;\n\t\tm.rawData[4] = tmp1 - tmp2;\n\t\ttmp1 = x*z*t;\n\t\ttmp2 = y*s;\n\t\tm.rawData[8] = tmp1 + tmp2;\n\t\tm.rawData[2] = tmp1 - tmp2;\n\t\ttmp1 = y*z*t;\n\t\ttmp2 = x*s;\n\t\tm.rawData[9] = tmp1 - tmp2;\n\t\tm.rawData[6] = tmp1 + tmp2;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * [read-only] A Number that determines whether a matrix is invertible.\n\t */\n\tpublic get determinant():number\n\t{\n\t\treturn    ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\n\t}\n\n\t/**\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\n\t * transformation's frame of reference.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn new Vector3D(this.rawData[12], this.rawData[13], this.rawData[14]);\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis.rawData[12] = value.x;\n\t\tthis.rawData[13] = value.y;\n\t\tthis.rawData[14] = value.z;\n\t}\n\n\tpublic toFixed(decimalPlace:number):string\n\t{\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\n\t}\n}\n\nexport = Matrix3D;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\n/**\n * The Matrix class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n *\n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n *\n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n *\n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n *\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n *\n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n *\n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n *\n * <p>The Matrix class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n *\n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n *\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nclass Matrix\n{\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic d:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>x</i> axis.\n\t */\n\tpublic tx:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>y</i> axis.\n\t */\n\tpublic ty:number;\n\n\t/**\n\t * Creates a new Matrix object with the specified parameters. In matrix\n\t * notation, the properties are organized like this:\n\t *\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n\t * constructor, it creates an <i>identity matrix</i> with the following\n\t * values:</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @return A Matrix object.\n\t */\n\tpublic clone():Matrix\n\t{\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Concatenates a matrix with the current matrix, effectively combining the\n\t * geometric effects of the two. In mathematical terms, concatenating two\n\t * matrixes is the same as combining them using matrix multiplication.\n\t *\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n\t *\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\n\t * you want to concatenate two matrixes without altering either of the two\n\t * source matrixes, first copy the source matrix by using the\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\n\t *\n\t * @param matrix The matrix to be concatenated to the source matrix.\n\t */\n\tpublic concat(matrix:Matrix):void\n\t{\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\n\t * object.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t} else if (column == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (column == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix object into the Vector3D\n\t * object. The w element of the Vector3D object will not be changed.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\n\t\t} else if (column == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.c;\n\t\t\tvector3D.z = 0;\n\t\t} else if (column == 1) {\n\t\t\tvector3D.x = this.b;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = 0;\n\t\t} else {\n\t\t\tvector3D.x = this.tx;\n\t\t\tvector3D.y = this.ty;\n\t\t\tvector3D.z = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Point object into the\n\t * calling Matrix object.\n\t *\n\t * @param sourceMatrix The Matrix object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceMatrix:Matrix):void\n\t{\n\t\tthis.a = sourceMatrix.a;\n\t\tthis.b = sourceMatrix.b;\n\t\tthis.c = sourceMatrix.c;\n\t\tthis.d = sourceMatrix.d;\n\t\tthis.tx = sourceMatrix.tx;\n\t\tthis.ty = sourceMatrix.ty;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (row == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\n\t * The w element of the Vector3D object will not be changed.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.b;\n\t\t\tvector3D.z = this.tx;\n\t\t} else if (row == 1) {\n\t\t\tvector3D.x = this.c;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = this.ty;\n\t\t} else {\n\t\t\tvector3D.setTo(0, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Includes parameters for scaling, rotation, and translation. When applied\n\t * to a matrix it sets the matrix's values based on those parameters.\n\t *\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\n\t * matrix as you would if you applied the <code>identity()</code>,\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n\t * 100, 100)</code> has the same effect as the following:</p>\n\t *\n\t * @param scaleX   The factor by which to scale horizontally.\n\t * @param scaleY   The factor by which scale vertically.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The number of pixels to translate(move) to the right\n\t *                 along the <i>x</i> axis.\n\t * @param ty       The number of pixels to translate(move) down along the\n\t *                 <i>y</i> axis.\n\t */\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = scaleX;\n\t\tthis.d = scaleY;\n\t\tthis.b = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Creates the specific style of matrix expected by the\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n\t * methods of the Graphics class. Width and height are scaled to a\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\n\t * height.\n\t *\n\t * <p>For example, consider a gradient with the following\n\t * characteristics:</p>\n\t *\n\t * <ul>\n\t *   <li><code>GradientType.LINEAR</code></li>\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n\t * 255]</code></li>\n\t *   <li><code>SpreadMethod.PAD</code></li>\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n\t * </ul>\n\t *\n\t * <p>The following illustrations show gradients in which the matrix was\n\t * defined using the <code>createGradientBox()</code> method with different\n\t * parameter settings:</p>\n\t *\n\t * @param width    The width of the gradient box.\n\t * @param height   The height of the gradient box.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The distance, in pixels, to translate to the right along\n\t *                 the <i>x</i> axis. This value is offset by half of the\n\t *                 <code>width</code> parameter.\n\t * @param ty       The distance, in pixels, to translate down along the\n\t *                 <i>y</i> axis. This value is offset by half of the\n\t *                 <code>height</code> parameter.\n\t */\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = width/1638.4;\n\t\tthis.d = height/1638.4;\n\n\t\tif (rotation != 0.0) {\n\t\t\tvar cos = Math.cos(rotation);\n\t\t\tvar sin = Math.sin(rotation);\n\n\t\t\tthis.b = sin*this.d;\n\t\t\tthis.c = -sin*this.a;\n\t\t\tthis.a *= cos;\n\t\t\tthis.d *= cos;\n\t\t} else {\n\t\t\tthis.b = this.c = 0;\n\t\t}\n\n\t\tthis.tx = tx + width/2;\n\t\tthis.ty = ty + height/2;\n\t}\n\n\t/**\n\t * Given a point in the pretransform coordinate space, returns the\n\t * coordinates of that point after the transformation occurs. Unlike the\n\t * standard transformation applied using the <code>transformPoint()</code>\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\n\t * does not consider the translation parameters <code>tx</code> and\n\t * <code>ty</code>.\n\t *\n\t * @param point The point for which you want to get the result of the matrix\n\t *              transformation.\n\t * @return The point resulting from applying the matrix transformation.\n\t */\n\tpublic deltaTransformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\n\t}\n\n\t/**\n\t * Sets each matrix property to a value that causes a null transformation. An\n\t * object transformed by applying an identity matrix will be identical to the\n\t * original.\n\t *\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n\t * <code>ty</code>=0.</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t */\n\tpublic identity():void\n\t{\n\t\tthis.a = 1;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 1;\n\t\tthis.tx = 0;\n\t\tthis.ty = 0;\n\t}\n\n\t/**\n\t * Performs the opposite transformation of the original matrix. You can apply\n\t * an inverted matrix to an object to undo the transformation performed when\n\t * applying the original matrix.\n\t */\n\tpublic invert():void\n\t{\n\t\tvar norm = this.a*this.d - this.b*this.c;\n\n\t\tif (norm == 0) {\n\t\t\tthis.a = this.b = this.c = this.d = 0;\n\t\t\tthis.tx = -this.tx;\n\t\t\tthis.ty = -this.ty;\n\t\t} else {\n\t\t\tnorm = 1.0/norm;\n\t\t\tvar a1 = this.d*norm;\n\t\t\tthis.d = this.a*norm;\n\t\t\tthis.a = a1;\n\t\t\tthis.b *= -norm;\n\t\t\tthis.c *= -norm;\n\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\n\t\t\tthis.tx = tx1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @param matrix The matrix for which you want to get the result of the matrix\n\t *               transformation.\n\t * @return A Matrix object.\n\t */\n\tpublic multiply(matrix:Matrix):Matrix\n\t{\n\t\tvar result = new Matrix();\n\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Applies a rotation transformation to the Matrix object.\n\t *\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n\t * Matrix object. In matrix notation, this is the same as concatenating the\n\t * current matrix with the following:</p>\n\t *\n\t * @param angle The rotation angle in radians.\n\t */\n\tpublic rotate(angle:number):void\n\t{\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\n\t\tvar a1 = this.a*cos - this.b*sin;\n\t\tthis.b = this.a*sin + this.b*cos;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*cos - this.d*sin;\n\t\tthis.d = this.c*sin + this.d*cos;\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\n\t\tthis.ty = this.tx*sin + this.ty*cos;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n\t * <code>sy</code>.\n\t *\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\n\t * is the same as concatenating the current matrix with the following\n\t * matrix:</p>\n\t *\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\n\t */\n\tpublic scale(sx:number, sy:number):void\n\t{\n\t\tthis.a *= sx;\n\t\tthis.b *= sy;\n\n\t\tthis.c *= sx;\n\t\tthis.d *= sy;\n\n\t\tthis.tx *= sx;\n\t\tthis.ty *= sy;\n\t}\n\n\t/**\n\t * Sets the members of Matrix to the specified values.\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a text value listing the properties of the Matrix object.\n\t *\n\t * @return A string containing the values of the properties of the Matrix\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n\t}\n\n\t/**\n\t * Returns the result of applying the geometric transformation represented by\n\t * the Matrix object to the specified point.\n\t *\n\t * @param point The point for which you want to get the result of the Matrix\n\t *              transformation.\n\t * @return The point resulting from applying the Matrix transformation.\n\t */\n\tpublic transformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\n\t}\n\n\t/**\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n\t * by the <code>dx</code> and <code>dy</code> parameters.\n\t *\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\n\t *           pixels.\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\n\t */\n\tpublic translate(dx:number, dy:number):void\n\t{\n\t\tthis.tx += dx;\n\t\tthis.ty += dy;\n\t}\n}\n\nexport = Matrix;",
    "/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Orientation3D\n{\n\t/**\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\n\t * @type {string}\n\t */\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\n\n\t/**\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\n\t * @type {string}\n\t */\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\n\n\t/**\n\t * The quaternion orientation uses complex numbers.\n\t * @type {string}\n\t */\n\tpublic static QUATERNION:string = \"quaternion\";\n}\n\nexport = Orientation3D;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * <p>The PerspectiveProjection class provides an easy way to assign or modify\n * the perspective transformations of a display object and all of its\n * children. For more complex or custom perspective transformations, use the\n * Matrix3D class. While the PerspectiveProjection class provides basic\n * three-dimensional presentation properties, the Matrix3D class provides more\n * detailed control over the three-dimensional presentation of display objects.\n * </p>\n *\n * <p>Projection is a way of representing a three-dimensional object in a\n * two-dimensional space, like a cube projected onto a computer screen.\n * Perspective projection uses a viewing frustum (a rectangular pyramid) to\n * model and project a three-dimensional world and its objects on the screen.\n * The viewing frustum becomes increasingly wider as it moves further from the\n * origin of the viewpoint. The origin of the viewpoint could be a camera or\n * the eyes of an observer facing the screen. The projected perspective\n * produces the illusion of three dimensions with depth and distance, where\n * the objects closer to the screen appear larger than the objects farther\n * from the screen.</p>\n *\n * <p>A default PerspectiveProjection object is a framework defined for\n * perspective transformation of the root object, based on the field of view\n * and aspect ratio (dimensions) of the stage. The projection center, the\n * vanishing point, is set to the center of the stage, which means the\n * three-dimensional display objects disappear toward the center of the stage\n * as they move back in the z axis. The default viewpoint is at point (0,0)\n * looking down the positive z axis. The y-axis points down toward the bottom\n * of the screen. You can gain access to the root display object's perspective\n * projection settings and change the field of view and projection center\n * properties of the perspectiveProjection property through the root object's\n * <code>DisplayObject.transform</code> property.</p>\n *\n * <p>You can also set a different perspective projection setting for a\n * display object through the parent's perspective projection. First, create a\n * PerspectiveProjection object and set its <code>fieldOfView</code> and\n * <code>projectionCenter</code> properties. Next, assign the\n * PerspectiveProjection object to the parent display object using the\n * <code>DisplayObject.transform</code> property. The specified projection\n * matrix and transformation will then apply to all the display object's\n * three-dimensional children.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass PerspectiveProjection\n{\n\tprivate _matrix3D:Matrix3D;\n\n\t/**\n\t * Specifies an angle, as a degree between 0 and 180, for the field of\n\t * view in three dimensions. This value determines how strong the\n\t * perspective transformation and distortion apply to a\n\t * three-dimensional display object with a non-zero z-coordinate.\n\t *\n\t * <p>A degree close to 0 means that the screen's two-dimensional x-\n\t * and y-coordinates are roughly the same as the three-dimensional x-,\n\t * y-, and z-coordinates with little or no distortion. In other words,\n\t * for a small angle, a display object moving down the z axis appears\n\t * to stay near the same size and moves little.</p>\n\t *\n\t * <p>A value close to 180 degrees results in a fisheye projection effect:\n\t * positions with a z value smaller than 0 are magnified, while\n\t * positions with a z value larger than 0 are minimized. With a large\n\t * angle, a display object moving down the z axis appears to change\n\t * size quickly and moves a great distance. If the field of view is\n\t * set to 0 or 180, nothing is seen on the screen.</p>\n\t */\n\tpublic fieldOfView:number;\n\n\t/**\n\t * The distance between the eye or the viewpoint's origin (0,0,0) and\n\t * the display object located in the z axis. During the perspective\n\t * transformation, the <code>focalLength</code> is calculated\n\t * dynamically using the angle of the field of view and the stage's\n\t * aspect ratio (stage width divided by stage height).\n\t *\n\t * @see away.geom.PerspectiveProjection#fieldOfView\n\t */\n\tpublic focalLength:number;\n\n\t/**\n\t * A two-dimensional point representing the center of the projection,\n\t * the vanishing point for the display object.\n\t *\n\t * <p>The <code>projectionCenter</code> property is an offset to the\n\t * default registration point that is the upper left of the stage,\n\t * point (0,0). The default projection transformation center is in the\n\t * middle of the stage, which means the three-dimensional display\n\t * objects disappear toward the center of the stage as they move\n\t * backwards in the z axis.</p>\n\t */\n\tpublic projectionCenter:Point;\n\n\t/**\n\t * Creates an instance of a PerspectiveProjection object.\n\t */\n\tconstructor()\n\t{\n\n\t}\n\t/**\n\t * Returns the underlying Matrix3D object of the display object.\n\t *\n\t * <p>A display object, like the root object, can have a\n\t * PerspectiveProjection object without needing a Matrix3D property\n\t * defined for its transformations. In fact, use either a\n\t * PerspectiveProjection or a Matrix3D object to specify the\n\t * perspective transformation. If when using the PerspectiveProjection\n\t * object, a Matrix3D object was needed, the <code>toMatrix3D()</code>\n\t * method can retrieve the underlying Matrix3D object of the display\n\t * object. For example, the <code>toMatrix3D()</code> method can be\n\t * used with the <code>Utils3D.projectVectors()</code> method.</p>\n\t *\n\t * @see away.geom.Matrix3D\n\t */\n\tpublic toMatrix3D():Matrix3D\n\t{\n\t\treturn this._matrix3D;\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Plane3D\n{\n\t/**\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\n\t */\n\tpublic d:number;\n\n\tpublic _iAlignment:number;\n\n\t// indicates the alignment of the plane\n\tpublic static ALIGN_ANY:number = 0;\n\tpublic static ALIGN_XY_AXIS:number = 1;\n\tpublic static ALIGN_YZ_AXIS:number = 2;\n\tpublic static ALIGN_XZ_AXIS:number = 3;\n\n\t/**\n\t * Create a Plane3D with ABCD coefficients\n\t */\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\n\t\tif (a == 0 && b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (b == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (a == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\n\t * @param p0 Vector3D\n\t * @param p1 Vector3D\n\t * @param p2 Vector3D\n\t */\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D)\n\t{\n\t\tvar d1x:number = p1.x - p0.x;\n\t\tvar d1y:number = p1.y - p0.y;\n\t\tvar d1z:number = p1.z - p0.z;\n\n\t\tvar d2x:number = p2.x - p0.x;\n\t\tvar d2y:number = p2.y - p0.y;\n\t\tvar d2z:number = p2.z - p0.z;\n\n\t\tthis.a = d1y*d2z - d1z*d2y;\n\t\tthis.b = d1z*d2x - d1x*d2z;\n\t\tthis.c = d1x*d2y - d1y*d2x;\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\n\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\n\t * @param normal Vector3D\n\t * @param point  Vector3D\n\t */\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D)\n\t{\n\t\tthis.a = normal.x;\n\t\tthis.b = normal.y;\n\t\tthis.c = normal.z;\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Normalize this Plane3D\n\t * @return Plane3D This Plane3D.\n\t */\n\tpublic normalize():Plane3D\n\t{\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\n\t\tthis.a *= len;\n\t\tthis.b *= len;\n\t\tthis.c *= len;\n\t\tthis.d *= len;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the signed distance between this Plane3D and the point p.\n\t * @param p Vector3D\n\t * @returns Number\n\t */\n\tpublic distance(p:Vector3D):number\n\t{\n\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\n\n\t\t\treturn this.a*p.x - this.d;\n\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\n\t\t\treturn this.b*p.y - this.d;\n\t\t}\n\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\n\n\t\t\treturn this.c*p.z - this.d;\n\n\t\t} else {\n\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\n\t * @param p Vector3D\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\n\t */\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\n\t{\n\t\t// check NaN\n\t\tif (this.d != this.d)\n\t\t\treturn PlaneClassification.FRONT;\n\n\t\tvar len:number;\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\n\t\t\tlen = this.c*p.z - this.d; else\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\tif (len < -epsilon)\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\n\t\t\treturn PlaneClassification.FRONT; else\n\t\t\treturn PlaneClassification.INTERSECT;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\n\t}\n}\n\nexport = Plane3D;",
    "class PlaneClassification\n{\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\n\tpublic static BACK:number = 0;\n\tpublic static FRONT:number = 1;\n\n\tpublic static IN:number = 0;\n\tpublic static OUT:number = 1;\n\tpublic static INTERSECT:number = 2;\n\n}\n\nexport = PlaneClassification;",
    "/**\n * The Point object represents a location in a two-dimensional coordinate\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\n * represents the vertical axis.\n *\n * <p>The following code creates a point at(0,0):</p>\n *\n * <p>Methods and properties of the following classes use Point objects:</p>\n *\n * <ul>\n *   <li>BitmapData</li>\n *   <li>DisplayObject</li>\n *   <li>DisplayObjectContainer</li>\n *   <li>DisplacementMapFilter</li>\n *   <li>NativeWindow</li>\n *   <li>Matrix</li>\n *   <li>Rectangle</li>\n * </ul>\n *\n * <p>You can use the <code>new Point()</code> constructor to create a Point\n * object.</p>\n */\nclass Point\n{\n\t/**\n\t * The horizontal coordinate of the point. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The vertical coordinate of the point. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The length of the line segment from(0,0) to this point.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\n\t}\n\n\t/**\n\t * Creates a new point. If you pass no parameters to this method, a point is\n\t * created at(0,0).\n\t *\n\t * @param x The horizontal coordinate.\n\t * @param y The vertical coordinate.\n\t */\n\tconstructor(x:number = 0, y:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t/**\n\t * Adds the coordinates of another point to the coordinates of this point to\n\t * create a new point.\n\t *\n\t * @param v The point to be added.\n\t * @return The new point.\n\t */\n\tpublic add(v:Point):Point\n\t{\n\t\treturn new Point(this.x + v.x, this.y + v.y);\n\t}\n\n\t/**\n\t * Creates a copy of this Point object.\n\t *\n\t * @return The new Point object.\n\t */\n\tpublic clone():Point\n\t{\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\tpublic copyFrom(sourcePoint:Point)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether two points are equal. Two points are equal if they have\n\t * the same <i>x</i> and <i>y</i> values.\n\t *\n\t * @param toCompare The point to be compared.\n\t * @return A value of <code>true</code> if the object is equal to this Point\n\t *         object; <code>false</code> if it is not equal.\n\t */\n\tpublic equals(toCompare:Point):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\n\t}\n\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current point is\n\t *                 (0,5), and you normalize it to 1, the point returned is\n\t *                  at(0,1).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\treturn;\n\t\t}\n\t\tthrow \"Cannot divide by zero length.\";\n\t}\n\n\t/**\n\t * Offsets the Point object by the specified amount. The value of\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\n\t * value of <i>y</i> to create the new <i>y</i> value.\n\t *\n\t * @param dx The amount by which to offset the horizontal coordinate,\n\t *           <i>x</i>.\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\tpublic setTo(xa:number, ya:number)\n\t{\n\n\t}\n\n\t/**\n\t * Subtracts the coordinates of another point from the coordinates of this\n\t * point to create a new point.\n\t *\n\t * @param v The point to be subtracted.\n\t * @return The new point.\n\t */\n\tpublic subtract(v:Point):Point\n\t{\n\t\treturn new Point(this.x - v.x, this.y - v.y);\n\t}\n\n\t/**\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\n\t *\n\t * @return The string representation of the coordinates.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\n\t}\n\n\t/**\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @return The distance between the first and second points.\n\t */\n\tpublic static distance(pt1:Point, pt2:Point):number\n\t{\n\t\tvar dx:number = pt2.x - pt1.x;\n\t\tvar dy:number = pt2.y - pt1.y;\n\n\t\treturn Math.sqrt(dx*dx + dy*dy);\n\t}\n\n\t/**\n\t * Determines a point between two specified points. The parameter\n\t * <code>f</code> determines where the new interpolated point is located\n\t * relative to the two end points specified by parameters <code>pt1</code>\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\n\t * point(parameter <code>pt2</code>).\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @param f   The level of interpolation between the two points. Indicates\n\t *            where the new point will be, along the line between\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\n\t *            <code>pt2</code> is returned.\n\t * @return The new, interpolated point.\n\t */\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\n\t{\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\n\t}\n\n\t/**\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\n\t *\n\t * @param len   The length coordinate of the polar pair.\n\t * @param angle The angle, in radians, of the polar pair.\n\t * @return The Cartesian point.\n\t */\n\tpublic static polar(len:number, angle:number):Point\n\t{\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\n\t}\n}\n\nexport = Point;\n",
    "class PoissonLookup\n{\n\tpublic static _distributions:Array<Array<number>>;\n\n\tpublic static initDistributions():void\n\t{\n\t\t// precalculated for best control\n\t\tthis._distributions = new Array<Array<number>>();\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\n\t}\n\n\tpublic static getDistribution(n:number /*int*/):Array<number>\n\t{\n\t\tif (!this._distributions)\n\t\t\tthis.initDistributions();\n\n\t\tif (n < 2 || n > 32)\n\t\t\treturn null;\n\n\t\treturn this._distributions[n - 1];\n\t}\n}\n\nexport = PoissonLookup;",
    "import Matrix3DUtils\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Orientation3D\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Matrix3D\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Quaternion\n{\n\t/**\n\t * The x value of the quaternion.\n\t */\n\tpublic x:number = 0;\n\n\t/**\n\t * The y value of the quaternion.\n\t */\n\tpublic y:number = 0;\n\n\t/**\n\t * The z value of the quaternion.\n\t */\n\tpublic z:number = 0;\n\n\t/**\n\t * The w value of the quaternion.\n\t */\n\tpublic w:number = 1;\n\n\t/**\n\t * Creates a new Quaternion object.\n\t * @param x The x value of the quaternion.\n\t * @param y The y value of the quaternion.\n\t * @param z The z value of the quaternion.\n\t * @param w The w value of the quaternion.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Returns the magnitude of the quaternion object.\n\t */\n\tpublic get magnitude():number\n\t{\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t}\n\n\t/**\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\n\t *\n\t * @param    qa    The first quaternion in the multiplication.\n\t * @param    qb    The second quaternion in the multiplication.\n\t */\n\tpublic multiply(qa:Quaternion, qb:Quaternion)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t}\n\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\n\t{\n\t\t//target ||= new Quaternion();\n\t\tif (target === null) {\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\n\t\tvar x2:number = vector.x;\n\t\tvar y2:number = vector.y;\n\t\tvar z2:number = vector.z;\n\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given rotation around a vector.\n\t *\n\t * @param    axis    The axis around which to rotate\n\t * @param    angle    The angle in radians of the rotation.\n\t */\n\tpublic fromAxisAngle(axis:Vector3D, angle:number)\n\t{\n\t\tvar sin_a:number = Math.sin(angle/2);\n\t\tvar cos_a:number = Math.cos(angle/2);\n\n\t\tthis.x = axis.x*sin_a;\n\t\tthis.y = axis.y*sin_a;\n\t\tthis.z = axis.z*sin_a;\n\t\tthis.w = cos_a;\n\n\t\tthis.normalize();\n\t}\n\n\t/**\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\n\n\t\t// shortest direction\n\t\tif (dot < 0) {\n\t\t\tdot = -dot;\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tif (dot < 0.95) {\n\t\t\t// interpolate angle linearly\n\t\t\tvar angle:number = Math.acos(dot);\n\t\t\tvar s:number = 1/Math.sin(angle);\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\n\t\t\tthis.w = w1*s1 + w2*s2;\n\t\t\tthis.x = x1*s1 + x2*s2;\n\t\t\tthis.y = y1*s1 + y2*s2;\n\t\t\tthis.z = z1*s1 + z2*s2;\n\t\t} else {\n\t\t\t// nearly identical angle, interpolate linearly\n\t\t\tthis.w = w1 + t*(w2 - w1);\n\t\t\tthis.x = x1 + t*(x2 - x1);\n\t\t\tthis.y = y1 + t*(y2 - y1);\n\t\t\tthis.z = z1 + t*(z2 - z1);\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\t\tthis.w *= len;\n\t\t\tthis.x *= len;\n\t\t\tthis.y *= len;\n\t\t\tthis.z *= len;\n\t\t}\n\t}\n\n\t/**\n\t * Linearly interpolates between two quaternions.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar len:number;\n\n\t\t// shortest direction\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tthis.w = w1 + t*(w2 - w1);\n\t\tthis.x = x1 + t*(x2 - x1);\n\t\tthis.y = y1 + t*(y2 - y1);\n\t\tthis.z = z1 + t*(z2 - z1);\n\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\tthis.w *= len;\n\t\tthis.x *= len;\n\t\tthis.y *= len;\n\t\tthis.z *= len;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given euler rotation.\n\t *\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\n\t * @param    az        The angle in radians of the rotation around the az axis.\n\t */\n\tpublic fromEulerAngles(ax:number, ay:number, az:number)\n\t{\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\n\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\n\t}\n\n\t/**\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\n\t * @return The Vector3D containing the Euler angles.\n\t */\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\n\t{\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Normalises the quaternion object.\n\t */\n\tpublic normalize(val:number = 1)\n\t{\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\n\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t\tthis.z *= mag;\n\t\tthis.w *= mag;\n\t}\n\n\t/**\n\t * Used to trace the values of a quaternion.\n\t *\n\t * @return A string representation of the quaternion object.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\n\t}\n\n\t/**\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\n\t * @return A Matrix3D object representing an equivalent rotation.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar rawData:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\trawData[0] = xx - yy - zz + ww;\n\t\trawData[4] = xy2 - zw2;\n\t\trawData[8] = xz2 + yw2;\n\t\trawData[12] = 0;\n\t\trawData[1] = xy2 + zw2;\n\t\trawData[5] = -xx + yy - zz + ww;\n\t\trawData[9] = yz2 - xw2;\n\t\trawData[13] = 0;\n\t\trawData[2] = xz2 - yw2;\n\t\trawData[6] = yz2 + xw2;\n\t\trawData[10] = -xx - yy + zz + ww;\n\t\trawData[14] = 0;\n\t\trawData[3] = 0.0;\n\t\trawData[7] = 0.0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\n\t\tif (!target)\n\t\t\treturn new Matrix3D(rawData);\n\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\n\t */\n\tpublic fromMatrix(matrix:Matrix3D)\n\t{\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t}\n\n\t/**\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\n\t */\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false)\n\t{\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\ttarget[0] = xx - yy - zz + ww;\n\t\ttarget[1] = xy2 - zw2;\n\t\ttarget[2] = xz2 + yw2;\n\t\ttarget[4] = xy2 + zw2;\n\t\ttarget[5] = -xx + yy - zz + ww;\n\t\ttarget[6] = yz2 - xw2;\n\t\ttarget[8] = xz2 - yw2;\n\t\ttarget[9] = yz2 + xw2;\n\t\ttarget[10] = -xx - yy + zz + ww;\n\t\ttarget[3] = target[7] = target[11] = 0;\n\n\t\tif (!exclude4thRow) {\n\t\t\ttarget[12] = target[13] = target[14] = 0;\n\t\t\ttarget[15] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Clones the quaternion.\n\t * @return An exact duplicate of the current Quaternion.\n\t */\n\tpublic clone():Quaternion\n\t{\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Rotates a point.\n\t * @param vector The Vector3D object to be rotated.\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\n\t * @return A Vector3D object containing the rotated point.\n\t */\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\t// p*q'\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the data from a quaternion into this instance.\n\t * @param q The quaternion to copy from.\n\t */\n\tpublic copyFrom(q:Quaternion)\n\t{\n\t\tthis.x = q.x;\n\t\tthis.y = q.y;\n\t\tthis.z = q.z;\n\t\tthis.w = q.w;\n\t}\n}\n\nexport = Quaternion;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * A Rectangle object is an area defined by its position, as indicated by its\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the Rectangle class are independent of\n * each other; changing the value of one property has no effect on the others.\n * However, the <code>right</code> and <code>bottom</code> properties are\n * integrally related to those four properties. For example, if you change the\n * value of the <code>right</code> property, the value of the\n * <code>width</code> property changes; if you change the <code>bottom</code>\n * property, the value of the <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Rectangle objects:</p>\n *\n * <ul>\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\n * <code>merge()</code>, <code>paletteMap()</code>,\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\n * BitmapData class</li>\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\n * DisplayObject class</li>\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\n * class</li>\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\n * method of the Sprite class</li>\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\n * method of the PrintJob class</li>\n * </ul>\n *\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\n * Rectangle object.</p>\n *\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\n * display object. To draw a rectangular Shape object onscreen, use the\n * <code>drawRect()</code> method of the Graphics class.</p>\n */\nclass Rectangle\n{\n\tprivate _size:Point;\n\tprivate _bottomRight:Point;\n\tprivate _topLeft:Point;\n\n\t/**\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>x</code> property of a Rectangle object has no\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>y</code> property of a Rectangle object has no\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's bottom-right corner, determined by\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRight():Point\n\t{\n\t\tif (this._bottomRight == null)\n\t\t\tthis._bottomRight = new Point();\n\n\t\tthis._bottomRight.x = this.x + this.width;\n\t\tthis._bottomRight.y = this.y + this.height;\n\n\t\treturn this._bottomRight;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>left</code> property of a Rectangle object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\t/**\n\t * The size of the Rectangle object, expressed as a Point object with the\n\t * values of the <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic get size():Point\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Point();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>top</code> property of a Rectangle object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's top-left corner, determined by the\n\t * <i>x</i> and <i>y</i> coordinates of the point.\n\t */\n\tpublic get topLeft():Point\n\t{\n\t\tif (this._topLeft == null)\n\t\t\tthis._topLeft = new Point();\n\n\t\tthis._topLeft.x = this.x;\n\t\tthis._topLeft.y = this.y;\n\n\t\treturn this._topLeft;\n\t}\n\n\t/**\n\t * Creates a new Rectangle object with the top-left corner specified by the\n\t * <code>x</code> and <code>y</code> parameters and with the specified\n\t * <code>width</code> and <code>height</code> parameters. If you call this\n\t * public without parameters, a rectangle with <code>x</code>,\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\n\t * to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param width  The width of the rectangle, in pixels.\n\t * @param height The height of the rectangle, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\t/**\n\t * Returns a new Rectangle object with the same values for the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties as the original Rectangle object.\n\t *\n\t * @return A new Rectangle object with the same values for the\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\n\t *         <code>height</code> properties as the original Rectangle object.\n\t */\n\tpublic clone():Rectangle\n\t{\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object. This method is similar to the\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\n\t * object as a parameter.\n\t *\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\n\t *              coordinates.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(point:Point):boolean\n\t{\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n\t}\n\n\t/**\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\n\t * parameter is contained within this Rectangle object. A Rectangle object is\n\t * said to contain another if the second Rectangle object falls entirely\n\t * within the boundaries of the first.\n\t *\n\t * @param rect The Rectangle object being checked.\n\t * @return A value of <code>true</code> if the Rectangle object that you\n\t *         specify is contained by this Rectangle object; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic containsRect(rect:Rectangle):boolean\n\t{\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\n\t}\n\n\t/**\n\t * Copies all of rectangle data from the source Rectangle object into the\n\t * calling Rectangle object.\n\t *\n\t * @param sourceRect The Rectangle object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceRect:Rectangle)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Rectangle object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of an object against the same properties of\n\t * this Rectangle object.\n\t *\n\t * @param toCompare The rectangle to compare to this Rectangle object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\n\t *         and <code>height</code> properties as this Rectangle object;\n\t *         otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Rectangle):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object by the specified amounts, in\n\t * pixels. The center point of the Rectangle object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, and to\n\t * the top and the bottom by the <code>dy</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Rectangle\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the rectangle:\n\t * @param dy The value to be added to the top and the bottom of the\n\t *           Rectangle. The following equation is used to calculate the new\n\t *           height and position of the rectangle:\n\t */\n\tpublic inflate(dx:number, dy:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object. This method is similar to the\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param point The <code>x</code> property of this Point object is used to\n\t *              increase the horizontal dimension of the Rectangle object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Rectangle object.\n\t */\n\tpublic inflatePoint(point:Point)\n\t{\n\t\tthis.x -= point.x/2;\n\t\tthis.y -= point.y/2;\n\t\tthis.width += point.x/2;\n\t\tthis.height += point.y/2;\n\t}\n\n\t/**\n\t * If the Rectangle object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object, returns the area of\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\n\t * this method returns an empty Rectangle object with its properties set to\n\t * 0.\n\t *\n\t * @param toIntersect The Rectangle object to compare against to see if it\n\t *                    intersects with this Rectangle object.\n\t * @return A Rectangle object that equals the area of intersection. If the\n\t *         rectangles do not intersect, this method returns an empty\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\n\t *         properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Rectangle):Rectangle\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Rectangle = new Rectangle();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Rectangle();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of the specified Rectangle object to see if\n\t * it intersects with this Rectangle object.\n\t *\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\n\t *                    object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Rectangle object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Rectangle):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\n\t}\n\n\t/**\n\t * Determines whether or not this Rectangle object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Rectangle object's width or\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object, as determined by its\n\t * top-left corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object using a Point object as a\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\n\t * method, except that it takes a Point object as a parameter.\n\t *\n\t * @param point A Point object to use to offset this Rectangle object.\n\t */\n\tpublic offsetPoint(point:Point)\n\t{\n\t\tthis.x += point.x;\n\t\tthis.y += point.y;\n\t}\n\n\t/**\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n\t * empty if its width or height is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t}\n\n\t/**\n\t * Sets the members of Rectangle to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param widtha  The width of the rectangle, in pixels.\n\t * @param heighta The height of the rectangle, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal and vertical\n\t * positions and the width and height of the Rectangle object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\n\t *         <code>width</code>, and <code>height</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n\t}\n\n\t/**\n\t * Adds two rectangles together to create a new Rectangle object, by filling\n\t * in the horizontal and vertical space between the two rectangles.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\n\t * <code>0</code> as the height or width value, such as: <code>var\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\n\t *\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\n\t * @return A new Rectangle object that is the union of the two rectangles.\n\t */\n\tpublic union(toUnion:Rectangle):Rectangle\n\t{\n\t\tvar u:Rectangle = new Rectangle();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Rectangle;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Sphere\n{\n\t/**\n\t *\n\t */\n\tpublic x:number;\n\n\t/**\n\t *\n\t */\n\tpublic y:number;\n\n\t/**\n\t *\n\t */\n\tpublic z:number;\n\n\t/**\n\t *\n\t */\n\tpublic radius:number;\n\n\t/**\n\t * Create a Sphere with ABCD coefficients\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, radius:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.radius = radius;\n\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar px:number = position.x - this.x, py:number = position.y - this.y, pz:number = position.z - this.z;\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\n\t\tvar rayEntryDistance:number;\n\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\n\t\tvar c:number = px*px + py*py + pz*pz - this.radius*this.radius;\n\t\tvar det:number = b*b - 4*a*c;\n\n\t\tif (det >= 0) { // ray goes through sphere\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\n\t\t\tif (rayEntryDistance >= 0) {\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\n\t\t\t\ttargetNormal.normalize();\n\n\t\t\t\treturn rayEntryDistance;\n\t\t\t}\n\t\t}\n\n\t\t// ray misses sphere\n\t\treturn -1;\n\t}\n\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\tvar px:number = position.x - this.x;\n\t\tvar py:number = position.y - this.y;\n\t\tvar pz:number = position.z - this.z;\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\n\t\treturn distance <= this.radius;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\n\t}\n}\n\nexport = Sphere;",
    "import Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nclass UVTransform\n{\n\tprivate _uvMatrix:Matrix = new Matrix();\n\tprivate _uvMatrixDirty:boolean;\n\n\tprivate _rotation:number = 0;\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\tprivate _offsetU:number = 0;\n\tprivate _offsetV:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get offsetU():number\n\t{\n\t\treturn this._offsetU;\n\t}\n\n\tpublic set offsetU(value:number)\n\t{\n\t\tif (value == this._offsetU)\n\t\t\treturn;\n\n\t\tthis._offsetU = value;\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get offsetV():number\n\t{\n\t\treturn this._offsetV;\n\t}\n\n\tpublic set offsetV(value:number)\n\t{\n\t\tif (value == this._offsetV)\n\t\t\treturn;\n\n\t\tthis._offsetV = value;\n\t\tthis._uvMatrixDirty = true;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rotation():number\n\t{\n\t\treturn this._rotation;\n\t}\n\n\tpublic set rotation(value:number)\n\t{\n\t\tif (value == this._rotation)\n\t\t\treturn;\n\n\t\tthis._rotation = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (value == this._scaleU)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (value == this._scaleV)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get matrix():Matrix\n\t{\n\t\tif (this._uvMatrixDirty)\n\t\t\tthis.updateUVMatrix();\n\n\t\treturn this._uvMatrix;\n\t}\n\n\tconstructor()\n\t{\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate updateUVMatrix()\n\t{\n\t\tthis._uvMatrix.identity();\n\n\t\tif (this._rotation != 0)\n\t\t\tthis._uvMatrix.rotate(this._rotation);\n\n\t\tif (this._scaleU != 1 || this._scaleV != 1)\n\t\t\tthis._uvMatrix.scale(this._scaleU, this._scaleV);\n\n\t\tthis._uvMatrix.translate(this._offsetU, this._offsetV);\n\n\t\tthis._uvMatrixDirty = false;\n\t}\n}\n\nexport = UVTransform;",
    "/**\n * The Vector3D class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n *\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n *\n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nclass Vector3D\n{\n\t/**\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\n\t */\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\n\n\t/**\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\n\t */\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\n\n\t/**\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\n\t */\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\n\n\t/**\n\t * The first element of a Vector3D object, such as the x coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/*\n\t *The second element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The third element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic z:number;\n\n\t/**\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\n\t * and z properties) can hold data such as the angle of rotation. The\n\t * default value is 0.\n\t *\n\t * <p>Quaternion notation employs an angle as the fourth element in\n\t * its calculation of three-dimensional rotation. The w property can\n\t * be used to define the angle of rotation about the Vector3D object.\n\t * The combination of the rotation angle and the coordinates (x,y,z)\n\t * determines the display object's orientation.</p>\n\t *\n\t * <p>In addition, the w property can be used as a perspective warp\n\t * factor for a projected three-dimensional position or as a projection\n\t * transform value in representing a three-dimensional coordinate\n\t * projected into the two-dimensional space. For example, you can\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\n\t * property, that, when applied to a Vector3D object, produces a\n\t * transform value in the Vector3D object's fourth element (the w\n\t * property). Dividing the Vector3D object's other elements by the\n\t * transform value then produces a projected Vector3D object. You can\n\t * use the <code>Vector3D.project()</code> method to divide the first\n\t * three elements of a Vector3D object by its fourth element.</p>\n\t */\n\tpublic w:number;\n\n\t/**\n\t * The length, magnitude, of the current Vector3D object from the\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\n\t * property is ignored. A unit vector has a length or magnitude of\n\t * one.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.lengthSquared);\n\t}\n\n\t/**\n\t * The square of the length of the current Vector3D object, calculated\n\t * using the x, y, and z properties. The w property is ignored. Use the\n\t * <code>lengthSquared()</code> method whenever possible instead of the\n\t * slower <code>Math.sqrt()</code> method call of the\n\t * <code>Vector3D.length()</code> method.\n\t */\n\tpublic get lengthSquared():number\n\t{\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\n\t}\n\n\t/**\n\t * Creates an instance of a Vector3D object. If you do not specify a\n\t * parameter for the constructor, a Vector3D object is created with\n\t * the elements (0,0,0,0).\n\t *\n\t * @param x The first element, such as the x coordinate.\n\t * @param y The second element, such as the y coordinate.\n\t * @param z The third element, such as the z coordinate.\n\t * @param w An optional element for additional data such as the angle\n\t *          of rotation.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Adds the value of the x, y, and z elements of the current Vector3D\n\t * object to the values of the x, y, and z elements of another Vector3D\n\t * object. The <code>add()</code> method does not change the current\n\t * Vector3D object. Instead, it returns a new Vector3D object with\n\t * the new values.\n\t *\n\t * <p>The result of adding two vectors together is a resultant vector.\n\t * One way to visualize the result is by drawing a vector from the\n\t * origin or tail of the first vector to the end or head of the second\n\t * vector. The resultant vector is the distance between the origin\n\t * point of the first vector and the end point of the second vector.\n\t * </p>\n\t */\n\tpublic add(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\n\t}\n\n\t/**\n\t * Returns the angle in radians between two vectors. The returned angle\n\t * is the smallest radian the first Vector3D object rotates until it\n\t * aligns with the second Vector3D object.\n\t *\n\t * <p>The <code>angleBetween()</code> method is a static method. You\n\t * can use it directly as a method of the Vector3D class.</p>\n\t *\n\t * <p>To convert a degree to a radian, you can use the following\n\t * formula:</p>\n\t *\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\n\t *\n\t * @param a The first Vector3D object.\n\t * @param b The second Vector3D object.\n\t * @returns The angle between two Vector3D objects.\n\t */\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\n\t{\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is an exact copy of the current\n\t * Vector3D object.\n\t *\n\t * @returns A new Vector3D object that is a copy of the current\n\t * Vector3D object.\n\t */\n\tpublic clone():Vector3D\n\t{\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Copies all of vector data from the source Vector3D object into the\n\t * calling Vector3D object.\n\t *\n\t * @param src The Vector3D object from which to copy the data.\n\t */\n\tpublic copyFrom(src:Vector3D):void\n\t{\n\t\tthis.x = src.x;\n\t\tthis.y = src.y;\n\t\tthis.z = src.z;\n\t\tthis.w = src.w;\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is perpendicular (at a right\n\t * angle) to the current Vector3D and another Vector3D object. If the\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\n\t * Vector3D objects are parallel to each other.\n\t *\n\t * <p>You can use the normalized cross product of two vertices of a\n\t * polygon surface with the normalized vector of the camera or eye\n\t * viewpoint to get a dot product. The value of the dot product can\n\t * identify whether a surface of a three-dimensional object is hidden\n\t * from the viewpoint.</p>\n\t *\n\t * @param a A second Vector3D object.\n\t * @returns A new Vector3D object that is perpendicular to the current\n\t *          Vector3D object and the Vector3D object specified as the\n\t *          parameter.\n\t */\n\tpublic crossProduct(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\n\t}\n\n\t/**\n\t * Decrements the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of\n\t * specified Vector3D object. Unlike the\n\t * <code>Vector3D.subtract()</code> method, the\n\t * <code>decrementBy()</code> method changes the current Vector3D\n\t * object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object containing the values to subtract from\n\t *          the current Vector3D object.\n\t */\n\tpublic decrementBy(a:Vector3D)\n\t{\n\t\tthis.x -= a.x;\n\t\tthis.y -= a.y;\n\t\tthis.z -= a.z;\n\t}\n\n\t/**\n\t * Returns the distance between two Vector3D objects. The\n\t * <code>distance()</code> method is a static method. You can use it\n\t * directly as a method of the Vector3D class to get the Euclidean\n\t * distance between two three-dimensional points.\n\t *\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\n\t * @returns The distance between two Vector3D objects.\n\t */\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\n\t{\n\t\tvar x:number = (pt1.x - pt2.x);\n\t\tvar y:number = (pt1.y - pt2.y);\n\t\tvar z:number = (pt1.z - pt2.z);\n\t\treturn Math.sqrt(x*x + y*y + z*z);\n\t}\n\n\t/**\n\t * If the current Vector3D object and the one specified as the\n\t * parameter are unit vertices, this method returns the cosine of the\n\t * angle between the two vertices. Unit vertices are vertices that\n\t * point to the same direction but their length is one. They remove the\n\t * length of the vector as a factor in the result. You can use the\n\t * <code>normalize()</code> method to convert a vector to a unit\n\t * vector.\n\t *\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\n\t * vertices. It is also used in backface culling or lighting\n\t * calculations. Backface culling is a procedure for determining which\n\t * surfaces are hidden from the viewpoint. You can use the normalized\n\t * vertices from the camera, or eye, viewpoint and the cross product of\n\t * the vertices of a polygon surface to get the dot product. If the dot\n\t * product is less than zero, then the surface is facing the camera or\n\t * the viewer. If the two unit vertices are perpendicular to each\n\t * other, they are orthogonal and the dot product is zero. If the two\n\t * vertices are parallel to each other, the dot product is one.</p>\n\t *\n\t * @param a The second Vector3D object.\n\t * @returns A scalar which is the dot product of the current Vector3D\n\t *          object and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#crossProduct()\n\t * @see away.geom.Vector3D#normalize()\n\t */\n\tpublic dotProduct(a:Vector3D):number\n\t{\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\n\t}\n\n\t/**\n\t * Determines whether two Vector3D objects are equal by comparing the\n\t * x, y, and z elements of the current Vector3D object with a\n\t * specified Vector3D object. If the values of these elements are the\n\t * same, the two Vector3D objects are equal. If the second optional\n\t * parameter is set to true, all four elements of the Vector3D objects,\n\t * including the w property, are compared.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is equal\n\t *          to the current Vector3D object; false if it is not equal.\n\t */\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\n\t}\n\n\t/**\n\t * Increments the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of a\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n\t * method, the <code>incrementBy()</code> method changes the current\n\t * Vector3D object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object to be added to the current Vector3D\n\t *          object.\n\t */\n\tpublic incrementBy(a:Vector3D)\n\t{\n\t\tthis.x += a.x;\n\t\tthis.y += a.y;\n\t\tthis.z += a.z;\n\t}\n\n\t/**\n\t * Compares the elements of the current Vector3D object with the\n\t * elements of a specified Vector3D object to determine whether they\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\n\t * value of all the elements of the two vertices are equal, or the\n\t * result of the comparison is within the tolerance range. The\n\t * difference between two elements must be less than the number\n\t * specified as the tolerance parameter. If the third optional\n\t * parameter is set to <code>true</code>, all four elements of the\n\t * Vector3D objects, including the <code>w</code> property, are\n\t * compared. Otherwise, only the x, y, and z elements are included in\n\t * the comparison.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param tolerance A number determining the tolerance factor. If the\n\t *                  difference between the values of the Vector3D\n\t *                  element specified in the toCompare parameter and\n\t *                  the current Vector3D element is less than the\n\t *                  tolerance number, the two values are considered\n\t *                  nearly equal.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is nearly\n\t *          equal to the current Vector3D object; false if it is not\n\t *          equal.\n\t *\n\t * @see away.geom.Vector3D#equals()\n\t */\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\n\t{\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n\t}\n\n\t/**\n\t * Sets the current Vector3D object to its inverse. The inverse object\n\t * is also considered the opposite of the original object. The value of\n\t * the x, y, and z properties of the current Vector3D object is changed\n\t * to -x, -y, and -z.\n\t */\n\tpublic negate():void\n\t{\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t\tthis.z = -this.z;\n\t}\n\n\t/**\n\t * Converts a Vector3D object to a unit vector by dividing the first\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\n\t * are vertices that have a direction but their length is one. They\n\t * simplify vector calculations by removing length as a factor.\n\t */\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current\n\t *                  Vector3D object is (0,3,4), and you normalize it to\n\t *                  1, the point returned is at(0,0.6,0.8).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\tthis.z *= invLength;\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\n\t * <code>z</code> properties of the current Vector3D object by the\n\t * value of its <code>w</code> property.\n\t *\n\t * <p>If the current Vector3D object is the result of multiplying a\n\t * Vector3D object by a projection Matrix3D object, the w property can\n\t * hold the transform value. The <code>project()</code> method then can\n\t * complete the projection by dividing the elements by the\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n\t * property to create a projection Matrix3D object.</p>\n\t */\n\tpublic project():void\n\t{\n\t\tthis.x /= this.w;\n\t\tthis.y /= this.w;\n\t\tthis.z /= this.w;\n\t}\n\n\t/**\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\n\t * number specified in the parameter. For example, if the vector is\n\t * scaled by ten, the result is a vector that is ten times longer. The\n\t * scalar can also change the direction of the vector. Multiplying the\n\t * vector by a negative number reverses its direction.\n\t *\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\n\n\t */\n\tpublic scaleBy(s:number):void\n\t{\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\t\tthis.z *= s;\n\t}\n\n\t/**\n\t * Sets the members of Vector3D to the specified values\n\t *\n\t * @param xa The first element, such as the x coordinate.\n\t * @param ya The second element, such as the y coordinate.\n\t * @param za The third element, such as the z coordinate.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number):void\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t}\n\n\t/**\n\t * Subtracts the value of the x, y, and z elements of the current\n\t * Vector3D object from the values of the x, y, and z elements of\n\t * another Vector3D object. The <code>subtract()</code> method does not\n\t * change the current Vector3D object. Instead, this method returns a\n\t * new Vector3D object with the new values.\n\t *\n\t * @param a The Vector3D object to be subtracted from the current\n\t *          Vector3D object.\n\t * @returns A new Vector3D object that is the difference between the\n\t *          current Vector3D and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#decrementBy()\n\t */\n\tpublic subtract(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n\t}\n\n\t/**\n\t * Returns a string representation of the current Vector3D object. The\n\t * string contains the values of the x, y, and z properties.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n\t}\n}\n\nexport = Vector3D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nclass AssetBase extends EventDispatcher\n{\n\tpublic static ID_COUNT:number = 0;\n\n\tprivate _originalName:string;\n\tprivate _namespace:string;\n\tprivate _name:string;\n\tprivate _id:number;\n\tprivate _full_path:Array<string>;\n\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\n\n\tconstructor(name:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._id = AssetBase.ID_COUNT++;\n\n\t\tif (name == null)\n\t\t\tname = 'null';\n\n\t\tthis._name = name;\n\t\tthis._originalName = name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * The original name used for this asset in the resource (e.g. file) in which\n\t * it was found. This may not be the same as <code>name</code>, which may\n\t * have changed due to of a name conflict.\n\t */\n\tpublic get originalName():string\n\t{\n\t\treturn this._originalName;\n\t}\n\n\t/**\n\t * A unique id for the asset, used to identify assets in an associative array\n\t */\n\tpublic get id():number\n\t{\n\t\treturn this._id;\n\t}\n\n\tpublic get name():string\n\t{\n\t\treturn this._name;\n\t}\n\n\tpublic set name(val:string)\n\t{\n\t\tvar prev:string;\n\n\t\tprev = this._name;\n\t\tthis._name = val;\n\n\t\tif (this._name == null)\n\t\t\tthis._name = 'null';\n\n\t\tthis.updateFullPath();\n\n\t\t//if (hasEventListener(AssetEvent.ASSET_RENAME))\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_RENAME, <IAsset> this, prev));\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get assetNamespace():string\n\t{\n\t\treturn this._namespace;\n\t}\n\n\tpublic get assetFullPath():Array<string>\n\t{\n\t\treturn this._full_path;\n\t}\n\n\tpublic assetPathEquals(name:string, ns:string):boolean\n\t{\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\n\t}\n\n\n\tpublic isAsset(assetClass:IAssetClass):boolean\n\t{\n\t\treturn this.assetType == assetClass.assetType;\n\t}\n\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\n\t{\n\n\t\tthis._name = name? name : 'null';\n\t\tthis._namespace = ns? ns : AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (overrideOriginal)\n\t\t\tthis._originalName = this._name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\tprivate updateFullPath():void\n\t{\n\t\tthis._full_path = [ this._namespace, this._name ];\n\t}\n}\n\nexport = AssetBase;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibrary\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport ConflictStrategy\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategy\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\n * Its purpose is to create a container for 3D data management, both before and after parsing.\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\n */\nclass AssetLibraryBundle extends EventDispatcher\n{\n\tpublic static _iInstances:Object = new Object();\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _strategy:ConflictStrategyBase;\n\tprivate _strategyPreference:string;\n\tprivate _assets:Array<IAsset>;\n\tprivate _assetDictionary:Object;\n\tprivate _assetDictDirty:boolean;\n\tprivate _loadingSessionsGarbage:Array<AssetLoader> = new Array<AssetLoader>();\n\tprivate _gcTimeoutIID:number;\n\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\t/**\n\t * Creates a new <code>AssetLibraryBundle</code> object.\n\t *\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\n\t\tthis._assetDictionary = new Object();\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\n\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibrary as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\tif (!key)\n\t\t\tkey = 'default';\n\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\n\n\t\treturn AssetLibraryBundle._iInstances[key];\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParsers(parserClasses:Object[])\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\n\t * is used which means that a numeric suffix is appended to one of the assets. The\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\n\t * be renamed.\n\t *\n\t * @see naming.ConflictStrategy\n\t * @see AssetLibrary.conflictPrecedence\n\t */\n\tpublic get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn this._strategy;\n\t}\n\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\n\t\tif (!val)\n\t\t\tthrow new Error('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\n\n\t\tthis._strategy = val.create();\n\n\t}\n\n\t/**\n\t * Defines which asset should have precedence when resolving a naming conflict between\n\t * two assets of which one has just been renamed by the user or by a parser. By default\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\n\t *\n\t * This property is ignored for conflict strategies that do not actually rename an\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\n\t *\n\t * @see away.library.ConflictPrecedence\n\t * @see away.library.ConflictStrategy\n\t */\n\tpublic get conflictPrecedence():string\n\t{\n\t\treturn this._strategyPreference;\n\t}\n\n\tpublic set conflictPrecedence(val:string)\n\t{\n\t\tthis._strategyPreference = val;\n\t}\n\n\t/**\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\n\t * namespace. A \"null\" filter value means no filter of that type is used.\n\t *\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\n\t * null to not filter on asset type.\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\n\t * included in the iteration or not. This needs to be a function that takes a single\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\n\t *\n\t * @see away.library.AssetType\n\t */\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar loader:AssetLoader = new AssetLoader();\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis._loadingSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader.load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads a resource from existing data in memory.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar loader:AssetLoader = new AssetLoader();\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tthis._loadingSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader.loadData(data, '', context, ns, parser);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\t//var asset : IAsset;\n\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\treturn null;\n\n\t\treturn this._assetDictionary[ns][name];\n\n\t}\n\n\t/**\n\t * Adds an asset to the asset library, first making sure that it's name is unique\n\t * using the method defined by the <code>conflictStrategy</code> and\n\t * <code>conflictPrecedence</code> properties.\n\t */\n\tpublic addAsset(asset:IAsset)\n\t{\n\t\tvar ns:string;\n\t\tvar old:IAsset;\n\n\t\t// Bail if asset has already been added.\n\t\tif (this._assets.indexOf(asset) >= 0)\n\t\t\treturn;\n\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\n\t\tns = asset.assetNamespace || AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (old != null)\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\n\n\t\t//create unique-id (for now this is used in AwayBuilder only\n\t\t//asset.id = IDUtil.createUID();\n\n\t\t// Add it\n\t\tthis._assets.push(asset);\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\tthis._assetDictionary[ns] = new Object();\n\n\t\tthis._assetDictionary[ns][asset.name] = asset;\n\n\t\tasset.addEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\t}\n\n\t/**\n\t * Removes an asset from the library, and optionally disposes that asset by calling\n\t * it's disposeAsset() method (which for most assets is implemented as a default\n\t * version of that type's dispose() method.\n\t *\n\t * @param asset The asset which should be removed from this library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tvar idx:number;\n\n\t\tthis.removeAssetFromDict(asset);\n\n\t\tasset.removeEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\n\t\tidx = this._assets.indexOf(asset);\n\n\t\tif (idx >= 0)\n\t\t\tthis._assets.splice(idx, 1);\n\n\t\tif (dispose)\n\t\t\tasset.dispose();\n\t}\n\n\t/**\n\t * Removes an asset which is specified using name and namespace.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\n\t\tvar asset:IAsset = this.getAsset(name, ns);\n\n\t\tif (asset)\n\t\t\tthis.removeAsset(asset, dispose);\n\n\t\treturn asset;\n\t}\n\n\t/**\n\t * Removes all assets from the asset library, optionally disposing them as they\n\t * are removed.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAllAssets(dispose:boolean = true)\n\t{\n\t\tif (dispose) {\n\t\t\tvar asset:IAsset;\n\n\t\t\tfor (var c:number = 0; c < this._assets.length; c++) {\n\t\t\t\tasset = this._assets[ c ];\n\t\t\t\tasset.dispose();\n\t\t\t}\n\t\t\t/*\n\t\t\t for each (asset in _assets)\n\t\t\t asset.dispose();\n\t\t\t */\n\t\t}\n\n\t\tthis._assets.length = 0;\n\t\tthis.rehashAssetDict();\n\t}\n\n\t/**\n\t * Removes all assets belonging to a particular namespace (null for default)\n\t * from the asset library, and optionall disposes them by calling their\n\t * disposeAsset() method.\n\t *\n\t * @param ns The namespace from which all assets should be removed.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tvar idx:number = 0;\n\t\tvar asset:IAsset;\n\t\tvar old_assets:IAsset[];\n\n\t\t// Empty the assets vector after having stored a copy of it.\n\t\t// The copy will be filled with all assets which weren't removed.\n\t\told_assets = this._assets.concat();\n\t\tthis._assets.length = 0;\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tfor (var d:number = 0; d < old_assets.length; d++) {\n\t\t\tasset = old_assets[d];\n\n\t\t\t// Remove from dict if in the supplied namespace. If not,\n\t\t\t// transfer over to the new vector.\n\t\t\tif (asset.assetNamespace == ns) {\n\t\t\t\tif (dispose)\n\t\t\t\t\tasset.dispose();\n\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\n\t\t\t\t// test that is not needed since we know that the namespace\n\t\t\t\t// will be empty when loop finishes.\n\t\t\t\tthis.removeAssetFromDict(asset, false);\n\t\t\t} else {\n\t\t\t\tthis._assets[idx++] = asset;\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t for each (asset in old_assets) {\n\t\t // Remove from dict if in the supplied namespace. If not,\n\t\t // transfer over to the new vector.\n\t\t if (asset.assetNamespace == ns) {\n\t\t if (dispose)\n\t\t asset.dispose();\n\n\t\t // Remove asset from dictionary, but don't try to auto-remove\n\t\t // the namespace, which will trigger an unnecessarily expensive\n\t\t // test that is not needed since we know that the namespace\n\t\t // will be empty when loop finishes.\n\t\t removeAssetFromDict(asset, false);\n\t\t } else\n\t\t _assets[idx++] = asset;\n\n\t\t }\n\t\t */\n\n\t\t// Remove empty namespace\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\n\t\t\tdelete this._assetDictionary[ns];\n\t}\n\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true)\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\n\n\t\t\tif (autoRemoveEmptyNamespace) {\n\n\t\t\t\tvar key:string;\n\t\t\t\tvar empty:boolean = true;\n\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (empty)\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic stopAllLoadingSessions()\n\t{\n\t\tvar i:number;\n\n\t\tif (!this._loadingSessions)\n\t\t\tthis._loadingSessions = new Array<AssetLoader>();\n\n\t\tvar length:number = this._loadingSessions.length;\n\n\t\tfor (i = 0; i < length; i++)\n\t\t\tthis.killLoadingSession(this._loadingSessions[i]);\n\n\t\tthis._loadingSessions = null;\n\t}\n\n\tprivate rehashAssetDict()\n\t{\n\t\tvar asset:IAsset;\n\n\t\tthis._assetDictionary = {};\n\n\t\tvar l:number = this._assets.length;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tasset = this._assets[c];\n\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\n\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\n\n\t\t}\n\n\t\tthis._assetDictDirty = false;\n\n\t}\n\n\t/**\n\t * Called when a an error occurs during loading.\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing.\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Only add asset to library the first time.\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\n\t\t\tthis.addAsset(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tvar loader:AssetLoader = <AssetLoader> event.target;\n\n\t\tthis.dispatchEvent(event);\n\n\t\tvar index:number = this._loadingSessions.indexOf(loader);\n\t\tthis._loadingSessions.splice(index, 1);\n\n\t\t// Add loader to a garbage array - for a collection sweep and kill\n\t\tthis._loadingSessionsGarbage.push(loader);\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loadingSessionGC()}, 100);\n\t}\n\n\tprivate loadingSessionGC():void\n\t{\n\t\tvar loader:AssetLoader;\n\n\t\twhile (this._loadingSessionsGarbage.length > 0) {\n\t\t\tloader = this._loadingSessionsGarbage.pop();\n\t\t\tthis.killLoadingSession(loader);\n\t\t}\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\n\t}\n\n\tprivate killLoadingSession(loader:AssetLoader)\n\t{\n\t\tloader.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t\tloader.stop();\n\t}\n\n\t/**\n\t * Called when unespected error occurs\n\t */\n\t/*\n\t private onResourceError() : void\n\t {\n\t var msg:string = \"Unexpected parser error\";\n\t if(hasEventListener(LoaderEvent.DEPENDENCY_ERROR)){\n\t var re:LoaderEvent = new LoaderEvent(LoaderEvent.DEPENDENCY_ERROR, \"\");\n\t dispatchEvent(re);\n\t } else{\n\t throw new Error(msg);\n\t }\n\t }\n\t */\n\n\tprivate onAssetRename(event:AssetEvent)\n\t{\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\n\n\t\tif (old != null) {\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\n\t\t} else {\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\n\n\t\t\tif (dict == null)\n\t\t\t\treturn;\n\n\t\t\tdict[event.assetPrevName] = null;\n\t\t\tdict[event.asset.name] = event.asset;\n\t\t}\n\t}\n\n\tprivate onAssetConflictResolved(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event.clone());\n\t}\n}\n\nexport = AssetLibraryBundle;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass AssetLibraryIterator\n{\n\n\tprivate  _assets:Array<IAsset>;\n\tprivate _filtered:Array<IAsset>;\n\n\tprivate _idx:number;\n\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tthis._assets = assets;\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\tpublic get currentAsset():IAsset\n\t{\n\t\t// Return current, or null if no current\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\n\t}\n\n\tpublic get numAssets():number\n\t{\n\t\treturn this._filtered.length;\n\t}\n\n\tpublic next():IAsset\n\t{\n\t\tvar next:IAsset = null;\n\n\t\tif (this._idx < this._filtered.length)\n\t\t\tnext = this._filtered[this._idx];\n\n\t\tthis._idx++;\n\n\t\treturn next;\n\t}\n\n\tpublic reset()\n\t{\n\t\tthis._idx = 0;\n\t}\n\n\tpublic setIndex(index:number)\n\t{\n\t\tthis._idx = index;\n\t}\n\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tif (assetTypeFilter || namespaceFilter) {\n\n\t\t\tvar idx:number;\n\t\t\tvar asset:IAsset;\n\n\n\t\t\tidx = 0;\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\n\n\t\t\tvar l:number = this._assets.length;\n\n\t\t\tfor (var c:number = 0; c < l; c++) {\n\n\t\t\t\tasset = <IAsset> this._assets[c];\n\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._filtered[idx++] = asset;\n\n\t\t\t}\n\n\t\t\t/*\n\t\t\t for each (asset in _assets) {\n\t\t\t // Skip this assets if filtering on type and this is wrong type\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\n\t\t\t if (filterFunc != null && !filterFunc(asset))\n\t\t\t continue;\n\n\t\t\t _filtered[idx++] = asset;\n\t\t\t }\n\t\t\t */\n\n\t\t} else {\n\t\t\tthis._filtered = this._assets;\n\t\t}\n\t}\n}\n\nexport = AssetLibraryIterator;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibraryBundle\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\n */\nclass AssetLibrary\n{\n\t/**\n\t * Creates a new <code>AssetLibrary</code> object.\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t//*/\n\t/**\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibraryBundle as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\treturn AssetLibraryBundle.getInstance(key);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParser(parserClass)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Short-hand for conflictStrategy property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictStrategy\n\t */\n\tpublic static get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\n\t}\n\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\n\t}\n\n\t/**\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictPrecedence\n\t */\n\tpublic static get conflictPrecedence():string\n\t{\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\n\t}\n\n\tpublic static set conflictPrecedence(val:string)\n\t{\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\n\t}\n\n\t/**\n\t * Short-hand for createIterator() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.createIterator()\n\t */\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Short-hand for load() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.load()\n\t */\n\tpublic static load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\treturn AssetLibrary.getBundle().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Short-hand for loadData() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.loadData()\n\t */\n\tpublic static loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\treturn AssetLibrary.getBundle().loadData(data, context, ns, parser);\n\t}\n\n\tpublic static stopLoad()\n\t{\n\t\tAssetLibrary.getBundle().stopAllLoadingSessions();\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\n\t}\n\n\t/**\n\t * Short-hand for addEventListener() method on default asset library bundle.\n\t */\n\tpublic static addEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for removeEventListener() method on default asset library bundle.\n\t */\n\tpublic static removeEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for hasEventListener() method on default asset library bundle.\n\n\t public static hasEventListener(type:string):boolean\n\t {\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\n\t}\n\n\t public static willTrigger(type:string):boolean\n\t {\n\t\treturn getBundle().willTrigger(type);\n\t}\n\t */\n\n\t/**\n\t * Short-hand for addAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.addAsset()\n\t */\n\tpublic static addAsset(asset:IAsset)\n\t{\n\t\tAssetLibrary.getBundle().addAsset(asset);\n\t}\n\n\t/**\n\t * Short-hand for removeAsset() method on default asset library bundle.\n\t *\n\t * @param asset The asset which should be removed from the library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAsset()\n\t */\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAssetByName()\n\t */\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAllAssets()\n\t */\n\tpublic static removeAllAssets(dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\n\t */\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\n\t}\n}\n\nexport = AssetLibrary;",
    "class AssetLoaderContext\n{\n\tpublic static UNDEFINED:number = 0;\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\n\tpublic static MULTIPASS_MATERIALS:number = 2;\n\n\tprivate _includeDependencies:boolean;\n\tprivate _dependencyBaseUrl:string;\n\tprivate _embeddedDataByUrl:Object;\n\tprivate _remappedUrls:Object;\n\tprivate _materialMode:number;\n\n\tprivate _overrideAbsPath:boolean;\n\tprivate _overrideFullUrls:boolean;\n\n\t/**\n\t * AssetLoaderContext provides configuration for the AssetLoader load() and parse() operations.\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\n\t * embedded data.\n\t *\n\t * @see away.loading.AssetLoader\n\t */\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\n\t{\n\t\tthis._includeDependencies = includeDependencies;\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\n\t\tthis._embeddedDataByUrl = {};\n\t\tthis._remappedUrls = {};\n\t\tthis._materialMode = AssetLoaderContext.UNDEFINED;\n\t}\n\n\t/**\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\n\t * parseData() operations) should be automatically loaded. Defaults to true.\n\t */\n\tpublic get includeDependencies():boolean\n\t{\n\t\treturn this._includeDependencies;\n\t}\n\n\tpublic set includeDependencies(val:boolean)\n\t{\n\t\tthis._includeDependencies = val;\n\t}\n\n\t/**\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\n\t * Options:\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\n\t *\n\t */\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic set materialMode(materialMode:number)\n\t{\n\t\tthis._materialMode = materialMode;\n\t}\n\n\t/**\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\n\t * Absolute paths will not be affected by the value of this property.\n\t */\n\tpublic get dependencyBaseUrl():string\n\t{\n\t\treturn this._dependencyBaseUrl;\n\t}\n\n\tpublic set dependencyBaseUrl(val:string)\n\t{\n\t\tthis._dependencyBaseUrl = val;\n\t}\n\n\t/**\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideAbsolutePaths():boolean\n\t{\n\t\treturn this._overrideAbsPath;\n\t}\n\n\tpublic set overrideAbsolutePaths(val:boolean)\n\t{\n\t\tthis._overrideAbsPath = val;\n\t}\n\n\t/**\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideFullURLs():boolean\n\t{\n\t\treturn this._overrideFullUrls;\n\t}\n\n\tpublic set overrideFullURLs(val:boolean)\n\t{\n\t\tthis._overrideFullUrls = val;\n\t}\n\n\t/**\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\n\t * expected by the loaded file.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param newUrl The URL from which away.should load the resource instead.\n\t *\n\t * @see mapUrlToData()\n\t */\n\tpublic mapUrl(originalUrl:string, newUrl:string)\n\t{\n\t\tthis._remappedUrls[originalUrl] = newUrl;\n\t}\n\n\t/**\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\n\t */\n\tpublic mapUrlToData(originalUrl:string, data:any)\n\t{\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether embedded data has been mapped to a particular URL.\n\t */\n\tpublic _iHasDataForUrl(url:string):boolean\n\t{\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns embedded data for a particular URL.\n\t */\n\tpublic _iGetDataForUrl(url:string):any\n\t{\n\t\treturn this._embeddedDataByUrl[url];\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether a replacement URL has been mapped to a particular URL.\n\t */\n\tpublic _iHasMappingForUrl(url:string):boolean\n\t{\n\t\treturn this._remappedUrls.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns new (replacement) URL for a particular original URL.\n\t */\n\tpublic _iGetRemappedUrl(originalUrl:string):string\n\t{\n\t\treturn this._remappedUrls[originalUrl];\n\t}\n}\n\nexport = AssetLoaderContext;",
    "import AssetLoader\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n\n/**\n * Dispatched when a skybox asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skyboxComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a camera3d asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"cameraComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a mesh asset has been costructed from a ressource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"meshComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a geometry asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"geometryComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a skeleton asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skeletonComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a skeleton pose asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"skeletonPoseComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a container asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"containerComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a texture asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Dispatched when a texture projector asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureProjectorComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a material asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"materialComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a animator asset has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animatorComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation set has been constructed from a group of animation state resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationSetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation state has been constructed from a group of animation node resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationStateComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation node has been constructed from a resource.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"animationNodeComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an animation state transition has been constructed from a group of animation node resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"stateTransitionComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an light asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"lightComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an light picker asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"lightPickerComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an effect method asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"effectMethodComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when an shadow map method asset has been constructed from a resources.\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"shadowMapMethodComplete\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Instances of this class are returned as tokens by loading operations\n * to provide an object on which events can be listened for in cases where\n * the actual asset loader is not directly available (e.g. when using the\n * AssetLibrary to perform the load.)\n *\n * By listening for events on this class instead of directly on the\n * AssetLibrary, one can distinguish different loads from each other.\n *\n * The token will dispatch all events that the original AssetLoader dispatches,\n * while not providing an interface to obstruct the load and is as such a\n * safer return value for loader wrappers than the loader itself.\n */\nclass AssetLoaderToken extends EventDispatcher\n{\n\tpublic _iLoader:AssetLoader;\n\n\tconstructor(loader:AssetLoader)\n\t{\n\t\tsuper();\n\n\t\tthis._iLoader = loader;\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._iLoader.addEventListener(type, listener);\n\t}\n\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._iLoader.removeEventListener(type, listener);\n\t}\n\n\tpublic hasEventListener(type:string, listener:Function = null):boolean\n\t{\n\t\treturn this._iLoader.hasEventListener(type, listener);\n\t}\n\n\t/*\n\t public willTrigger(type:string):boolean\n\t {\n\t return this._iLoader.willTrigger(type);\n\t }\n\t */\n}\n\nexport = AssetLoaderToken;",
    "import AssetLoaderContext\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport CubeTextureParser\t\t= require(\"awayjs-core/lib/parsers/CubeTextureParser\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport Texture2DParser\t\t\t= require(\"awayjs-core/lib/parsers/Texture2DParser\");\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n/**\n * Dispatched when an image asset dimensions are not a power of 2\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * AssetLoader can load any file format that away.supports (or for which a third-party parser\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\n * and for when the resource (or it's dependencies) have been loaded.\n *\n * The AssetLoader will not make assets available in any other way than through the dispatched\n * events. To store assets and make them available at any point from any module in an application,\n * use the AssetLibrary to load and manage assets.\n *\n * @see away.library.AssetLibrary\n */\nclass AssetLoader extends EventDispatcher\n{\n\tprivate _context:AssetLoaderContext;\n\tprivate _token:AssetLoaderToken;\n\tprivate _uri:string;\n\tprivate _materialMode:number;\n\n\tprivate _errorHandlers:Array<Function>;\n\tprivate _parseErrorHandlers:Array<Function>;\n\n\tprivate _stack:Array<ResourceDependency>;\n\tprivate _baseDependency:ResourceDependency;\n\tprivate _currentDependency:ResourceDependency;\n\tprivate _namespace:string;\n\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\n\tprivate _onLoadCompleteDelegate:(event:Event) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\n\t// Image parser only parser that is added by default, to save file size.\n\tprivate static _parsers:Array<any> = new Array<any>(Texture2DParser, CubeTextureParser);\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parser The parser class to enable.\n\t *\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parser)\n\t{\n\t\tif (AssetLoader._parsers.indexOf(parser) < 0)\n\t\t\tAssetLoader._parsers.push(parser);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * AssetLoader can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parsers A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parsers:Array<Object>)\n\t{\n\t\tfor (var c:number = 0; c < parsers.length; c++)\n\t\t\tAssetLoader.enableParser(parsers[ c ]);\n\t}\n\n\t/**\n\t * Returns the base dependency of the loader\n\t */\n\tpublic get baseDependency():ResourceDependency\n\t{\n\t\treturn this._baseDependency;\n\t}\n\n\t/**\n\t * Create a new ResourceLoadSession object.\n\t */\n\tconstructor(materialMode:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = materialMode;\n\n\t\tthis._stack = new Array<ResourceDependency>();\n\t\tthis._errorHandlers = new Array<Function>();\n\t\tthis._parseErrorHandlers = new Array<Function>();\n\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t\tthis._onLoadCompleteDelegate = (event:Event) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t */\n\tpublic load(req:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tif (!this._token) {\n\t\t\tthis._token = new AssetLoaderToken(this);\n\n\t\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\n\t\t\tthis._context = context;\n\t\t\tthis._namespace = ns;\n\n\t\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\n\t\t\tthis.retrieveDependency(this._baseDependency);\n\n\t\t\treturn this._token;\n\t\t}\n\n\t\t// TODO: Throw error (already loading)\n\t\treturn null;\n\t}\n\n\t/**\n\t * Loads a resource from already loaded data.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, AssetLoader will attempt to auto-detect the file type.\n\t */\n\tpublic loadData(data:any, id:string, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tif (!this._token) {\n\t\t\tthis._token = new AssetLoaderToken(this);\n\n\t\t\tthis._uri = id;\n\t\t\tthis._context = context;\n\t\t\tthis._namespace = ns;\n\n\t\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\n\t\t\tthis.retrieveDependency(this._baseDependency);\n\n\t\t\treturn this._token;\n\t\t}\n\n\t\t// TODO: Throw error (already loading)\n\t\treturn null;\n\t}\n\n\t/**\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\n\t * stack when complete and continues on the top set.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveNext(parser:ParserBase = null)\n\t{\n\t\tif (this._currentDependency.dependencies.length) {\n\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\n\n\t\t\tthis._stack.push(this._currentDependency);\n\t\t\tthis.retrieveDependency(next);\n\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\n\n\t\t\tthis._currentDependency.parser._iResumeParsingAfterDependencies();\n\t\t\tthis._stack.pop();\n\n\t\t} else if (this._stack.length) {\n\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\n\n\t\t\tthis._currentDependency = this._stack.pop();\n\n\t\t\tif (prev._iSuccess)\n\t\t\t\tprev.resolve();\n\n\t\t\tthis.retrieveNext(parser);\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.RESOURCE_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a single dependency.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveDependency(dependency:ResourceDependency)\n\t{\n\t\tvar data:any;\n\n\t\tif (this._context && this._context.materialMode != 0)\n\t\t\tthis._materialMode = this._context.materialMode;\n\n\t\tthis._currentDependency = dependency;\n\n\t\tdependency._iLoader = new URLLoader();\n\n\t\tthis.addEventListeners(dependency._iLoader);\n\n\t\t// Get already loaded (or mapped) data if available\n\t\tdata = dependency.data;\n\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\n\n\t\tif (data) {\n\t\t\tif (data.constructor === Function)\n\t\t\t\tdata = new data();\n\n\t\t\tdependency._iSetData(data);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// No need to parse. The parent parser is expecting this\n\t\t\t\t// to be raw data so it can be passed directly.\n\t\t\t\tdependency.resolve();\n\n\t\t\t\t// Move on to next dependency\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\tthis.parseDependency(dependency);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// Resolve URL and start loading\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// Always use binary for raw data loading\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t} else {\n\n\t\t\t\tif (!dependency.parser)\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\n\n\t\t\t\tif (dependency.parser) {\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\n\t\t\t\t} else {\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\n\t\t\t\t\t// file type check will determine format after load, and if\n\t\t\t\t\t// binary, a text load will have broken the file data.\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdependency._iLoader.load(dependency.request);\n\t\t}\n\t}\n\n\tprivate joinUrl(base:string, end:string):string\n\t{\n\t\tif (end.charAt(0) == '/')\n\t\t\tend = end.substr(1);\n\n\t\tif (base.length == 0)\n\t\t\treturn end;\n\n\t\tif (base.charAt(base.length - 1) == '/')\n\t\t\tbase = base.substr(0, base.length - 1);\n\n\t\treturn base.concat('/', end);\n\n\t}\n\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\n\t{\n\t\tvar scheme_re:RegExp;\n\t\tvar base:string;\n\t\tvar url:string = dependency.request.url;\n\n\t\t// Has the user re-mapped this URL?\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\n\t\t\treturn this._context._iGetRemappedUrl(url);\n\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\n\t\t// We will not try to resolve this since the user can probably be\n\t\t// thrusted to know this URL better than our automatic resolver. :)\n\t\tif (url == this._uri)\n\t\t\treturn url;\n\n\n\t\t// Absolute URL? Check if starts with slash or a URL\n\t\t// scheme definition (e.g. ftp://, http://, file://)\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\n\n\t\tif (url.charAt(0) == '/') {\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\n\t\t\t\treturn url;\n\t\t} else if (scheme_re.test(url)) {\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\n\t\t\tif (this._context && this._context.overrideFullURLs) {\n\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\n\t\t\t}\n\t\t}\n\n\t\t// Since not absolute, just get rid of base file name to find it's\n\t\t// folder and then concatenate dynamic URL\n\t\tif (this._context && this._context.dependencyBaseUrl) {\n\t\t\tbase = this._context.dependencyBaseUrl;\n\t\t\treturn this.joinUrl(base, url);\n\t\t} else {\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\n\t\t\treturn this.joinUrl(base, url);\n\t\t}\n\t}\n\n\tprivate retrieveParserDependencies()\n\t{\n\t\tif (!this._currentDependency)\n\t\t\treturn;\n\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies\n\t\tvar i:number, len:number = parserDependancies.length;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\n\n\n\t\t// Since more dependencies might be added eventually, empty this\n\t\t// list so that the same dependency isn't retrieved more than once.\n\t\tparserDependancies.length = 0;\n\n\t\tthis._stack.push(this._currentDependency);\n\n\t\tthis.retrieveNext();\n\t}\n\n\tprivate resolveParserDependencies()\n\t{\n\t\tthis._currentDependency._iSuccess = true;\n\n\t\t// Retrieve any last dependencies remaining on this parser, or\n\t\t// if none exists, just move on.\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\n\t\t\tthis.retrieveParserDependencies();\n\t\telse\n\t\t\tthis.retrieveNext();\n\t}\n\n\t/**\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadError(event:IOErrorEvent)\n\t{\n\t\tvar handled:boolean;\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\t\tvar loader:URLLoader = <URLLoader> event.target;//TODO: keep on eye on this one\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR )) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when AssetLoader does have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._errorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\n\n\t\t\t\tthis._currentDependency.resolveFailure();\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\t// Either this was the base file (last left in the stack) or\n\t\t\t\t// default behavior was prevented by the handlers, and hence\n\t\t\t\t// there is nothing more to do than clean up and bail.\n\t\t\t\tthis.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error();\n\t\t}\n\t}\n\n\t/**\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\n\t * @param event\n\t */\n\tprivate onParseError(event:ParserEvent)\n\t{\n\t\tvar handled:boolean;\n\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\n\t\tvar loader:URLLoader = <URLLoader>event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when AssetLoader does\n\t\t\t// have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\t\t\tthis.dispose();\n\t\t\treturn;\n\t\t} else {\n\t\t\t// Error event was not handled by listeners directly on AssetLoader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error(event.message);\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Add loaded asset to list of assets retrieved as part\n\t\t// of the current dependency. This list will be inspected\n\t\t// by the parent parser when dependency is resolved\n\t\tif (this._currentDependency)\n\t\t\tthis._currentDependency.assets.push(event.asset);\n\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\n\n\t\tif (!this._currentDependency.suppresAssetEvents)\n\t\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate onReadyForDependencies(event:ParserEvent)\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tif (this._context && !this._context.includeDependencies)\n\t\t\tparser._iResumeParsingAfterDependencies();\n\t\telse\n\t\t\tthis.retrieveParserDependencies();\n\t}\n\n\t/**\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tvar loader:URLLoader = <URLLoader> event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\t// Resolve this dependency\n\t\tthis._currentDependency._iSetData(loader.data);\n\n\t\tif (this._currentDependency.retrieveAsRawData) {\n\t\t\t// No need to parse this data, which should be returned as is\n\t\t\tthis.resolveParserDependencies();\n\t\t} else {\n\t\t\tthis.parseDependency(this._currentDependency);\n\t\t}\n\t}\n\n\t/**\n\t * Called when parsing is complete.\n\t */\n\tprivate onParseComplete(event:ParserEvent):void\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\n\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\t/**\n\t * Called when an image is too large or it's dimensions are not a power of 2\n\t * @param event\n\t */\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate addEventListeners(loader:URLLoader)\n\t{\n\t\tloader.addEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.addEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tprivate removeEventListeners(loader:URLLoader)\n\t{\n\t\tloader.removeEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.removeEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis.dispose();\n\t}\n\n\tprivate dispose()\n\t{\n\t\tthis._errorHandlers = null;\n\t\tthis._parseErrorHandlers = null;\n\t\tthis._context = null;\n\t\tthis._token = null;\n\t\tthis._stack = null;\n\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\n\n\t\tthis._currentDependency = null;\n\n\t}\n\n\t/**\n\t * @private\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\n\t * add error event listeners to the AssetLoader instance. This system is used instead of\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\n\t * that if hasEventListener() returns true, it's client code that's listening for the\n\t * event. Secondly, functions added as error handler through this custom method are\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\n\t * whether they in turn had any client code listening for the event.) If no handlers\n\t * return true, the AssetLoader knows that the event wasn't handled and will throw an RTE.\n\t */\n\n\tpublic _iAddParseErrorHandler(handler)\n\t{\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\n\t\t\tthis._parseErrorHandlers.push(handler);\n\t}\n\n\tpublic _iAddErrorHandler(handler)\n\t{\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\n\t\t\tthis._errorHandlers.push(handler);\n\t}\n\n\n\t/**\n\t * Guesses the parser to be used based on the file contents.\n\t * @param data The data to be parsed.\n\t * @param uri The url or id of the object to be parsed.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromData(data:any):ParserBase\n\t{\n\t\tvar len:number = AssetLoader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--)\n\t\t\tif (AssetLoader._parsers[i].supportsData(data))\n\t\t\t\treturn new AssetLoader._parsers[i]();\n\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Initiates parsing of the loaded dependency.\n\t *\n\t * @param The dependency to be parsed.\n\t */\n\tprivate parseDependency(dependency:ResourceDependency):void\n\t{\n\t\tvar parser:ParserBase = dependency.parser;\n\n\t\t// If no parser has been defined, try to find one by letting\n\t\t// all plugged in parsers inspect the actual data.\n\t\tif (!parser)\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\n\n\t\tif (parser) {\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t\tif (dependency.request && dependency.request.url)\n\t\t\t\tparser._iFileName = dependency.request.url;\n\n\t\t\tparser.materialMode = this._materialMode;\n\n\t\t\tparser.parseAsync(dependency.data);\n\n\t\t} else {\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\"\n\t\t\tif(this.hasEventListener(ParserEvent.PARSE_ERROR))\n\t\t\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t\t\telse\n\t\t\t\tthrow new Error(message);\n\t\t}\n\t}\n\n\t/**\n\t * Guesses the parser to be used based on the file extension.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromSuffix(url:string):ParserBase\n\t{\n\t\t// Get rid of query string if any and extract extension\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\n\n\t\tvar len:number = AssetLoader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\n\t\t\tvar parserClass:any = AssetLoader._parsers[i];\n\t\t\tif (parserClass.supportsType(fileExtension))\n\t\t\t\treturn new parserClass();\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport = AssetLoader;",
    "/**\n * Enumaration class for precedence when resolving naming conflicts in the library.\n *\n * @see away.library.AssetLibrary.conflictPrecedence\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategy\n */\nclass ConflictPrecedence\n{\n\t/**\n\t * Signals that in a conflict, the previous owner of the conflicting name\n\t * should be favored (and keep it's name) and that the newly renamed asset\n\t * is reverted to a non-conflicting name.\n\t */\n\tpublic static FAVOR_OLD:string = 'favorOld';\n\n\t/**\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\n\t * it's newly defined name) and that the previous owner of that name gets\n\t * renamed to a non-conflicting name.\n\t */\n\tpublic static FAVOR_NEW:string = 'favorNew';\n}\n\nexport = ConflictPrecedence;",
    "import ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\n/**\n * Abstract base class for naming conflict resolution classes. Extend this to create a\n * strategy class which the asset library can use to resolve asset naming conflicts, or\n * use one of the bundled concrete strategy classes:\n *\n * <ul>\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\n * </ul>\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.ConflictStrategy\n * @see away.library.IgnoreConflictStrategy\n * @see away.library.ErrorConflictStrategy\n * @see away.library.NumSuffixConflictStrategy\n */\nclass ConflictStrategyBase\n{\n\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\n\t * classes.\n\t */\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\n\t * would break any state caching that happens inside the strategy class.\n\t */\n\tpublic create():ConflictStrategyBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\n\t * the conflict resolution by applying the new names and dispatching the correct events.\n\t */\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar loser_prev_name:string;\n\t\tvar winner:IAsset;\n\t\tvar loser:IAsset;\n\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\n\n\t\tloser_prev_name = loser.name;\n\n\t\tassetsDictionary[winner.name] = winner;\n\t\tassetsDictionary[nonConflictingName] = loser;\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\n\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\n\t}\n}\n\nexport = ConflictStrategyBase;",
    "import ConflictStrategyBase\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport ErrorConflictStrategy\t\t= require(\"awayjs-core/lib/library/ErrorConflictStrategy\");\nimport IgnoreConflictStrategy\t\t= require(\"awayjs-core/lib/library/IgnoreConflictStrategy\");\nimport NumSuffixConflictStrategy\t= require(\"awayjs-core/lib/library/NumSuffixConflictStrategy\");\n\n/**\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\n * property on an AssetLibrary to define how that library resolves naming conflicts.\n *\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategyBase\n */\nclass ConflictStrategy\n{\n\t/**\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\n\t * a numeric suffix appended to the base name.\n\t */\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\n\n\t/**\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\n\t */\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\n\n\t/**\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\n\t * to have the library automatically rename assets to avoid such conflicts.\n\t */\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\n\n\tconstructor(include?:ConflictStrategyBase)\n\t{\n\t\t//TODO: find out why typescript d.ts files do not include this class\n\t}\n}\n\nexport = ConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass ErrorConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new Error('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new ErrorConflictStrategy();\n\t}\n}\n\nexport = ErrorConflictStrategy;",
    "class IDUtil\n{\n\t/**\n\t *  @private\n\t *  Char codes for 0123456789ABCDEF\n\t */\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\n\n\t/**\n\t *  Generates a UID (unique identifier) based on ActionScript's\n\t *  pseudo-random number generator and the current time.\n\t *\n\t *  <p>The UID has the form\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\n\t *\n\t *  <p>This UID will not be truly globally unique; but it is the best\n\t *  we can do without player support for UID generation.</p>\n\t *\n\t *  @return The newly-generated UID.\n\t *\n\t *  @langversion 3.0\n\t *  @playerversion Flash 9\n\t *  @playerversion AIR 1.1\n\t *  @productversion Flex 3\n\t */\n\tpublic static createUID():string\n\t{\n\t\tvar uid = new Array(36);\n\t\tvar index:number = 0;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\t\tfor (j = 0; j < 4; j++)\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\t\t}\n\n\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\tvar time:number = new Date().getTime();\n\t\t// Note: time is the number of milliseconds since 1970,\n\t\t// which is currently more than one trillion.\n\t\t// We use the low 8 hex digits of this number in the UID.\n\t\t// Just in case the system clock has been reset to\n\t\t// Jan 1-4, 1970 (in which case this number could have only\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\n\t\t// before taking the low digits.\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = timeString.charCodeAt(i);\n\n\t\tfor (i = 0; i < 4; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\treturn String.fromCharCode.apply(null, uid);\n\t}\n\n\t/**\n\t * Returns the decimal representation of a hex digit.\n\t * @private\n\n\t private static getDigit(hex:string):number\n\t {\n\t\tswitch (hex) {\n\t\t\tcase \"A\":\n\t\t\tcase \"a\":\n\t\t\t\treturn 10;\n\t\t\tcase \"B\":\n\t\t\tcase \"b\":\n\t\t\t\treturn 11;\n\t\t\tcase \"C\":\n\t\t\tcase \"c\":\n\t\t\t\treturn 12;\n\t\t\tcase \"D\":\n\t\t\tcase \"d\":\n\t\t\t\treturn 13;\n\t\t\tcase \"E\":\n\t\t\tcase \"e\":\n\t\t\t\treturn 14;\n\t\t\tcase \"F\":\n\t\t\tcase \"f\":\n\t\t\t\treturn 15;\n\t\t\tdefault:\n\t\t\t\treturn new uint(hex);\n\t\t}\n\t}\n\t */\n\n}\n\nexport = IDUtil;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass IgnoreConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\t// Do nothing, ignore the fact that there is a conflict.\n\t\treturn;\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new IgnoreConflictStrategy();\n\t}\n}\n\nexport = IgnoreConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass NumSuffixConflictStrategy extends ConflictStrategyBase\n{\n\tprivate _separator:string;\n\tprivate _next_suffix:Object;\n\n\tconstructor(separator:string = '.')\n\t{\n\t\tsuper();\n\n\t\tthis._separator = separator;\n\t\tthis._next_suffix = {};\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar orig:string;\n\t\tvar new_name:string;\n\t\tvar base:string;\n\t\tvar suffix:number;\n\n\t\torig = changedAsset.name;\n\n\t\tif (orig.indexOf(this._separator) >= 0) {\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\n\t\t\t// use entire name as base\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\n\n\t\t\tif (isNaN(suffix)) {\n\t\t\t\tbase = orig;\n\t\t\t\tsuffix = 0;\n\t\t\t}\n\n\t\t} else {\n\t\t\tbase = orig;\n\t\t\tsuffix = 0;\n\t\t}\n\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\n\n\t\t\tsuffix = this._next_suffix[base];\n\n\t\t}\n\n\t\t// Find the first suffixed name that does\n\t\t// not collide with other names.\n\t\tdo {\n\n\t\t\tsuffix++;\n\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\n\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\n\n\t\tthis._next_suffix[ base ] = suffix;\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\n\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new NumSuffixConflictStrategy(this._separator);\n\t}\n}\n\nexport = NumSuffixConflictStrategy;",
    "class CrossDomainPolicy\n{\n\tpublic static ANONYMOUS:string = 'anonymous';\n\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\n}\n\nexport = CrossDomainPolicy;\n",
    "class URLLoaderDataFormat\n{\n\t/**\n\t * TEXT\n\t * @type {string}\n\t */\n\tpublic static TEXT:string = \"text\";\n\n\t/**\n\t * Variables / Value Pairs\n\t * @type {string}\n\t */\n\tpublic static VARIABLES:string = \"variables\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BLOB:string = \"blob\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BINARY:string = \"binary\";\n}\n\nexport = URLLoaderDataFormat;",
    "import URLLoaderDataFormat\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\nimport URLVariables\t\t\t\t\t= require(\"awayjs-core/lib/net/URLVariables\");\nimport AwayEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport HTTPStatusEvent\t\t\t\t= require(\"awayjs-core/lib/events/HTTPStatusEvent\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport AwayProgressEvent\t\t\t= require(\"awayjs-core/lib/events/ProgressEvent\");\n\n/**\n * The URLLoader is used to load a single file, as part of a resource.\n *\n * While URLLoader can be used directly, e.g. to create a third-party asset\n * management system, it's recommended to use any of the classes Loader3D, AssetLoader\n * and AssetLibrary instead in most cases.\n *\n * @see AssetLoader\n * @see away.library.AssetLibrary\n */\nclass URLLoader extends EventDispatcher\n{\n\tprivate _XHR:XMLHttpRequest;\n\tprivate _bytesLoaded:number = 0;\n\tprivate _bytesTotal:number = 0;\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\n\tprivate _loadError:boolean = false;\n\n\tprivate _request:URLRequest;\n\tprivate _data:any;\n\n\tprivate _loadStartEvent:AwayEvent;\n\tprivate _loadErrorEvent:IOErrorEvent;\n\tprivate _loadCompleteEvent:AwayEvent;\n\tprivate _progressEvent:AwayProgressEvent;\n\n\t/**\n\t * Creates a new URLLoader object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get url():string\n\t{\n\n\t\treturn this._request? this._request.url : '';\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\n\t/**\n\t *\n\t * URLLoaderDataFormat.BINARY\n\t * URLLoaderDataFormat.TEXT\n\t * URLLoaderDataFormat.VARIABLES\n\t *\n\t * @param format\n\t */\n\tpublic set dataFormat(format:string)\n\t{\n\t\tthis._dataFormat = format;\n\t}\n\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesLoaded():number\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesTotal():number\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * Load a resource from a file.\n\t *\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\n\t */\n\tpublic load(request:URLRequest):void\n\t{\n\t\tthis._request = request;\n\n\t\tthis.initXHR();\n\n\t\tif (request.method === URLRequestMethod.POST)\n\t\t\tthis.postRequest(request);\n\t\telse\n\t\t\tthis.getRequest(request);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic close():void\n\t{\n\t\tthis._XHR.abort();\n\t\tthis.disposeXHR();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tif (this._XHR)\n\t\t\tthis._XHR.abort();\n\n\t\tthis.disposeXHR();\n\n\t\tthis._data = null;\n\t\tthis._dataFormat = null;\n\t\tthis._bytesLoaded = null;\n\t\tthis._bytesTotal = null;\n\t}\n\n\t/**\n\t *\n\t * @param xhr\n\t * @param responseType\n\t */\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\n\t{\n\t\tswitch (responseType) {\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\txhr.responseType = responseType;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\txhr.responseType = '';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate getRequest(request:URLRequest):void\n\t{\n\t\ttry {\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\t\t\tthis._XHR.send(); // No data to send\n\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate postRequest(request:URLRequest):void\n\t{\n\t\tthis._loadError = false;\n\n\t\tthis._XHR.open(request.method, request.url, request.async);\n\n\t\tif (request.data != null) {\n\t\t\tif (request.data instanceof URLVariables) {\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\n\n\t\t\t\ttry {\n\t\t\t\t\tthis._XHR.responseType = 'text';\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\n\t\t\t\tif (request.data)\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\n\t\t\t\telse\n\t\t\t\t\tthis._XHR.send(); // no data to send\n\t\t\t}\n\t\t} else {\n\t\t\tthis._XHR.send(); // No data to send\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * @param error {XMLHttpRequestException}\n\t */\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\n\t{\n\t\tswitch (error.code) {\n\n\t\t/******************************************************************************************************************************************************************************************************\n\t\t *\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\n\t\t *\n\t\t ******************************************************************************************************************************************************************************************************/\n\n\t\t\tcase 101:\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initXHR()\n\t{\n\t\tif (!this._XHR) {\n\t\t\tthis._XHR = new XMLHttpRequest();\n\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate disposeXHR()\n\t{\n\t\tif (this._XHR !== null) {\n\t\t\tthis._XHR.onloadstart = null;\n\t\t\tthis._XHR.onprogress = null;\n\t\t\tthis._XHR.onabort = null;\n\t\t\tthis._XHR.onerror = null;\n\t\t\tthis._XHR.onload = null;\n\t\t\tthis._XHR.ontimeout = null;\n\t\t\tthis._XHR.onloadend = null;\n\t\t\tthis._XHR = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decodeURLVariables(source:string):Object\n\t{\n\t\tvar result:Object = new Object();\n\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\n\t\treturn result;\n\t}\n\n\t// XMLHttpRequest - Event Handlers\n\n\t/**\n\t * When XHR state changes\n\t * @param event\n\t */\n\tprivate onReadyStateChange(event:Event)\n\t{\n\t\tif (this._XHR.readyState == 4) {\n\t\t\tif (this._XHR.status == 404) {\n\t\t\t\tthis._loadError = true;\n\n\t\t\t\tif (!this._loadErrorEvent)\n\t\t\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new HTTPStatusEvent(HTTPStatusEvent.HTTP_STATUS, this._XHR.status));\n\t\t}\n\t}\n\n\t/**\n\t * When the request has completed, regardless of whether or not it was successful.\n\t * @param event\n\t */\n\tprivate onLoadEnd(event:ProgressEvent)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\t}\n\n\t/**\n\t * When the author specified timeout has passed before the request could complete.\n\t * @param event\n\t */\n\tprivate onTimeOut(event:Event)\n\t{\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\n\t}\n\n\t/**\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t * @param event\n\t */\n\tprivate onAbort(event:UIEvent)\n\t{\n\t\t// TODO: investigate whether this needs to be an IOError\n\t}\n\n\t/**\n\t * While loading and sending data.\n\t * @param event\n\t */\n\tprivate onProgress(event:ProgressEvent)\n\t{\n\t\tif (!this._progressEvent)\n\t\t\tthis._progressEvent = new AwayProgressEvent(AwayProgressEvent.PROGRESS);\n\n\t\tthis._progressEvent.bytesTotal = event.total;\n\t\tthis._progressEvent.bytesLoaded = event.loaded;\n\n\t\tthis.dispatchEvent(this._progressEvent);\n\t}\n\n\t/**\n\t * When the request starts.\n\t * @param event\n\t */\n\tprivate onLoadStart(event:ProgressEvent)\n\t{\n\t\tif (!this._loadStartEvent)\n\t\t\tthis._loadStartEvent = new AwayEvent(AwayEvent.OPEN);\n\n\t\tthis.dispatchEvent(this._loadStartEvent);\n\t}\n\n\t/**\n\t * When the request has successfully completed.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\n\t\tswitch (this._dataFormat) {\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\tthis._data = this._XHR.response;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!this._loadCompleteEvent)\n\t\t\tthis._loadCompleteEvent = new AwayEvent(AwayEvent.COMPLETE);\n\n\t\tthis.dispatchEvent(this._loadCompleteEvent);\n\t}\n\n\t/**\n\t * When the request has failed. ( due to network issues ).\n\t * @param event\n\t */\n\tprivate onLoadError(event:Event)\n\t{\n\t\tthis._loadError = true;\n\n\t\tif (!this._loadErrorEvent)\n\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t}\n}\n\nexport = URLLoader;",
    "class URLRequestMethod\n{\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static POST:string = 'POST';\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static GET:string = 'GET';\n}\n\nexport = URLRequestMethod;",
    "import URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\n\nclass URLRequest\n{\n\t/*\n\t * The MIME content type of the content in the the data property.\n\t * @type {string}\n\t */\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\n\n\t/**\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\n\t *\n\t */\n\tpublic data:any;\n\n\t/**\n\t *\n\t * away.net.URLRequestMethod.GET\n\t * away.net.URLRequestMethod.POST\n\t *\n\t * @type {string}\n\t */\n\tpublic method:string = URLRequestMethod.GET;\n\n\t/**\n\t * Use asynchronous XMLHttpRequest\n\t * @type {boolean}\n\t */\n\tpublic async:boolean = true;\n\n\t/**\n\t *\n\t */\n\tprivate _url:string;\n\n\t/**\n\n\t * @param url\n\t */\n\tconstructor(url:string = null)\n\t{\n\t\tthis._url = url;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set url(value:string)\n\t{\n\t\tthis._url = value;\n\t}\n\n\t/**\n\t * dispose\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.data = null;\n\t\tthis._url = null;\n\t}\n}\n\nexport = URLRequest;",
    "class URLVariables\n{\n\tprivate _variables:Object = new Object();\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tconstructor(source:string = null)\n\t{\n\t\tif (source !== null)\n\t\t\tthis.decode(source);\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decode(source:string):void\n\t{\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic toString():string\n\t{\n\t\treturn '';\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get variables():Object\n\t{\n\t\treturn this._variables;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get formData():FormData\n\t{\n\t\tvar fd:FormData = new FormData();\n\n\t\tfor (var s in this._variables)\n\t\t\tfd.append(s, this._variables[s]);\n\n\t\treturn fd;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic set variables(obj:Object)\n\t{\n\t\tthis._variables = obj;\n\t}\n}\n\nexport = URLVariables;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ImageCubeTexture\t\t\t= require(\"awayjs-core/lib/textures/ImageCubeTexture\");\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\n\n/**\n * CubeTextureParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nclass CubeTextureParser extends ParserBase\n{\n\tprivate static posX:string = 'posX';\n\tprivate static negX:string = 'negX';\n\tprivate static posY:string = 'posY';\n\tprivate static negY:string = 'negY';\n\tprivate static posZ:string = 'posZ';\n\tprivate static negZ:string = 'negZ';\n\n\tprivate _imgDependencyDictionary:Object;\n\n\t/**\n\t * Creates a new CubeTextureParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"cube\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar obj = JSON.parse(data);\n\n\t\t\tif (obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\n\t\t\tvar asset:ImageCubeTexture = new ImageCubeTexture(\n\n\t\t\t\tthis._getHTMLImageElement(CubeTextureParser.posX), this._getHTMLImageElement(CubeTextureParser.negX), this._getHTMLImageElement(CubeTextureParser.posY), this._getHTMLImageElement(CubeTextureParser.negY), this._getHTMLImageElement(CubeTextureParser.posZ), this._getHTMLImageElement(CubeTextureParser.negZ));\n\n\t\t\t//clear dictionary\n\t\t\tthis._imgDependencyDictionary = null;\n\n\t\t\tasset.name = this._iFileName;\n\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\ttry {\n\t\t\tvar json:any = JSON.parse(this.data);\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\n\t\t\tvar rec:any;\n\n\t\t\tif (data.length != 6)\n\t\t\t\tthis._pDieWithError('CubeTextureParser: Error - cube texture should have exactly 6 images');\n\n\t\t\tif (json) {\n\t\t\t\tthis._imgDependencyDictionary = new Object();\n\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\n\t\t\t\t\trec = data[c];\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\n\t\t\t\t}\n\n\t\t\t\tif (!this._validateCubeData()) {\n\n\t\t\t\t\tthis._pDieWithError(\"CubeTextureParser: JSON data error - cubes require id of:   \\n\" + CubeTextureParser.posX + ', ' + CubeTextureParser.negX + ',  \\n' + CubeTextureParser.posY + ', ' + CubeTextureParser.negY + ',  \\n' + CubeTextureParser.posZ + ', ' + CubeTextureParser.negZ);\n\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate _validateCubeData():boolean\n\t{\n\t\treturn  ( this._imgDependencyDictionary[ CubeTextureParser.posX ] != null && this._imgDependencyDictionary[ CubeTextureParser.negX ] != null && this._imgDependencyDictionary[ CubeTextureParser.posY ] != null && this._imgDependencyDictionary[ CubeTextureParser.negY ] != null && this._imgDependencyDictionary[ CubeTextureParser.posZ ] != null && this._imgDependencyDictionary[ CubeTextureParser.negZ ] != null );\n\t}\n\n\tprivate _getHTMLImageElement(name:string):HTMLImageElement\n\t{\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\n\n\t\tif (dependency) {\n\t\t\treturn <HTMLImageElement> (<ImageTexture> dependency.assets[0]).htmlImageElement;\n\t\t}\n\n\t\treturn null;\n\t}\n\n}\n\nexport = CubeTextureParser;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\nimport Timer\t\t\t\t\t= require(\"awayjs-core/lib/utils/Timer\");\nimport getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\n/**\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\n * supported by away.\n *\n * If used by <code>AssetLoader</code> to automatically determine the parser type, two public static methods should\n * be implemented, with the following signatures:\n *\n * <code>public static supportsType(extension : string) : boolean</code>\n * Indicates whether or not a given file extension is supported by the parser.\n *\n * <code>public static supportsData(data : *) : boolean</code>\n * Tests whether a data block can be parsed by the parser.\n *\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\n * handle regardless of whether the object was loaded or not.\n *\n * @see AssetLoader\n */\nclass ParserBase extends EventDispatcher\n{\n\tpublic _iFileName:string;\n\tprivate _dataFormat:string;\n\tprivate _data:any;\n\tprivate _frameLimit:number;\n\tprivate _lastFrameTime:number;\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\n\tpublic _pContent:IAsset;\n\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// Needs to be implemented in all Parsers (\n\t//<code>public static supportsType(extension : string) : boolean</code>\n\t//* Indicates whether or not a given file extension is supported by the parser.\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/* TODO: Implement ParserUtils;\n\t public _pGetTextData():string\n\t {\n\t return ParserUtils.toString(_data);\n\t }\n\n\t public _pGetByteData():ByteArray\n\t {\n\t return ParserUtils.toByteArray(_data);\n\t }\n\t */\n\tprivate _dependencies:Array<ResourceDependency>;\n\tprivate _parsingPaused:boolean;\n\tprivate _parsingComplete:boolean;\n\tprivate _parsingFailure:boolean;\n\tprivate _timer:Timer;\n\tprivate _materialMode:number;\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\n\t */\n\tpublic static PARSING_DONE:boolean = true;\n\t/* Protected */\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\n\t */\n\tpublic static MORE_TO_PARSE:boolean = false;\n\t/* Protected */\n\n\n\tpublic get content():IAsset\n\t{\n\t\treturn this._pContent;\n\t}\n\n\t/**\n\t * Creates a new ParserBase object\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\n\t *\n\t * @see away.loading.parsers.ParserDataFormat\n\t */\n\tconstructor(format:string)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = 0;\n\t\tthis._dataFormat = format;\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\n\t}\n\n\t/**\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\n\t */\n\n\tpublic isBitmapDataValid(bitmapData:BitmapData):boolean\n\t{\n\t\tvar isValid:boolean = TextureUtils.isBitmapDataValid(bitmapData);\n\n\t\tif (!isValid) {\n\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tpublic set parsingFailure(b:boolean)\n\t{\n\t\tthis._parsingFailure = b;\n\t}\n\n\tpublic get parsingFailure():boolean\n\t{\n\t\treturn this._parsingFailure;\n\t}\n\n\tpublic get parsingPaused():boolean\n\t{\n\t\treturn this._parsingPaused;\n\t}\n\n\tpublic get parsingComplete():boolean\n\t{\n\t\treturn this._parsingComplete;\n\t}\n\n\tpublic set materialMode(newMaterialMode:number)\n\t{\n\t\tthis._materialMode = newMaterialMode;\n\t}\n\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\n\t */\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\n\t * next frame.\n\t *\n\t * @param data The untyped data object in which the loaded data resides.\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\n\t * actual time spent on a frame can exceed this number since time-checks can\n\t * only be performed between logical sections of the parsing procedure.\n\t */\n\tpublic parseAsync(data:any, frameLimit:number = 30)\n\t{\n\t\tthis._data = data;\n\t\tthis._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\n\t * dependency should be a member of the dependencies property.\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\treturn asset.name;\n\t}\n\n\tpublic _iResumeParsingAfterDependencies()\n\t{\n\t\tthis._parsingPaused = false;\n\n\t\tif (this._timer)\n\t\t\tthis._timer.start();\n\t}\n\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null)\n\t{\n\t\tvar type_event:string;\n\t\tvar type_name:string;\n\n\t\tif (name != null)\n\t\t\tasset.name = name;\n\n\t\t// If the asset has no name, give it\n\t\t// a per-type default name.\n\t\tif (!asset.name)\n\t\t\tasset.name = asset.assetType;\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\n\t}\n\n\t/**\n\t * Parse the next block of data.\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pDieWithError(message:string = 'Unknown parsing error')\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t\tthis._timer = null;\n\t\t}\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t}\n\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false):ResourceDependency\n\t{\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents);\n\t\tthis._dependencies.push(dependency);\n\n\t\treturn dependency;\n\t}\n\n\tpublic _pPauseAndRetrieveDependencies()\n\t{\n\t\tif (this._timer)\n\t\t\tthis._timer.stop();\n\n\t\tthis._parsingPaused = true;\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\n\t}\n\n\t/**\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\n\t */\n\tpublic _pHasTime():boolean\n\t{\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\n\t}\n\n\t/**\n\t * Called when the parsing pause interval has passed and parsing can proceed.\n\t */\n\tpublic _pOnInterval(event:TimerEvent = null)\n\t{\n\t\tthis._lastFrameTime = getTimer();\n\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\n\t\t\tthis._pFinishParsing();\n\t}\n\n\t/**\n\t * Initializes the parsing of data.\n\t * @param frameLimit The maximum duration of a parsing session.\n\t */\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tthis._frameLimit = frameLimit;\n\t\tthis._timer = new Timer(this._frameLimit, 0);\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\tthis._timer.start();\n\t}\n\n\t/**\n\t * Finish parsing the data.\n\t */\n\tpublic _pFinishParsing()\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t}\n\n\t\tthis._timer = null;\n\t\tthis._parsingComplete = true;\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetTextData():string\n\t{\n\t\treturn ParserUtils.toString(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetByteData():ByteArray\n\t{\n\t\treturn ParserUtils.toByteArray(this._data);\n\t}\n}\n\nexport = ParserBase;",
    "/**\n * An enumeration providing values to describe the data format of parsed data.\n */\nclass ParserDataFormat\n{\n\t/**\n\t * Describes the format of a binary file.\n\t */\n\tpublic static BINARY:string = \"binary\";\n\n\t/**\n\t * Describes the format of a plain text file.\n\t */\n\tpublic static PLAIN_TEXT:string = \"plainText\";\n\n\t/**\n\t * Describes the format of an image file\n\t */\n\tpublic static IMAGE:string = \"image\";\n\n}\n\nexport = ParserDataFormat;",
    "import ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass ParserUtils\n{\n\n\t/**\n\t * Converts an ArrayBuffer to a base64 string\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\n\t{\n\t\tvar byteStr:string = '';\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\n\t\tvar len:number = bytes.byteLength;\n\n\t\tfor (var i = 0; i < len; i++)\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\n\n\t\tvar base64Image:string = window.btoa(byteStr);\n\t\tvar str:string = 'data:image/png;base64,' + base64Image;\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\n\t{\n\t\tvar byteStr:string = '';\n\t\tvar bytes:Uint8Array = new Uint8Array(data.arraybytes);\n\t\tvar len:number = bytes.byteLength;\n\n\t\tfor (var i = 0; i < len; i++)\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\n\n\t\tvar base64Image:string = window.btoa(byteStr);\n\t\tvar str:string = 'data:image/png;base64,' + base64Image;\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an Blob to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a Blob\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static blobToImage(data:Blob):HTMLImageElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = src;\n\n\t\treturn img;\n\t}\n\n\t/**\n\t * Returns a object as ByteArray, if possible.\n\t *\n\t * @param data The object to return as ByteArray\n\t *\n\t * @return The ByteArray or null\n\t *\n\t */\n\tpublic static toByteArray(data:any):ByteArray\n\t{\n\t\tvar b:ByteArray = new ByteArray();\n\t\tb.setArrayBuffer(data);\n\t\treturn b;\n\t}\n\n\t/**\n\t * Returns a object as String, if possible.\n\t *\n\t * @param data The object to return as String\n\t * @param length The length of the returned String\n\t *\n\t * @return The String or null\n\t *\n\t */\n\tpublic static toString(data:any, length:number = 0):string\n\t{\n\n\t\tif (typeof data === 'string') {\n\t\t\tvar s:string = <string> data;\n\n\t\t\tif (s['substr'] != null)\n\t\t\t\treturn s.substr(0, s.length);\n\t\t}\n\n\t\tif (data instanceof ByteArray) {\n\t\t\tvar ba:ByteArray = <ByteArray> data;\n\t\t\tba.position = 0;\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\n\t\t}\n\n\t\treturn null;\n\n\t\t/*\n\t\t var ba:ByteArray;\n\n\t\t length ||= uint.MAX_VALUE;\n\n\t\t if (data is String)\n\t\t return String(data).substr(0, length);\n\n\t\t ba = toByteArray(data);\n\t\t if (ba) {\n\t\t ba.position = 0;\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\n\t\t }\n\n\t\t return null;\n\n\t\t */\n\n\t}\n}\n\nexport = ParserUtils;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\n * required by a parser, used by ResourceLoadSession.\n *\n */\nclass ResourceDependency\n{\n\tprivate _id:string;\n\tprivate _request:URLRequest;\n\tprivate _assets:Array<IAsset>;\n\tprivate _parser:ParserBase;\n\tprivate _parentParser:ParserBase;\n\tprivate _data:any;\n\tprivate _retrieveAsRawData:boolean;\n\tprivate _suppressAssetEvents:boolean;\n\tprivate _dependencies:Array<ResourceDependency>;\n\n\tpublic _iLoader:URLLoader;\n\tpublic _iSuccess:boolean;\n\n\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false)\n\t{\n\t\tthis._id = id;\n\t\tthis._request = request;\n\t\tthis._data = data;\n\t\tthis._parser = parser;\n\t\tthis._parentParser = parentParser;\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\n\n\t\tthis._assets = new Array<IAsset>();\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get id():string\n\t{\n\t\treturn this._id;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get request():URLRequest\n\t{\n\t\treturn this._request;\n\t}\n\n\t/**\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parser():ParserBase\n\t{\n\t\treturn this._parser;\n\t}\n\n\t/**\n\t * The parser which is dependent on this ResourceDependency object.\n\t */\n\tpublic get parentParser():ParserBase\n\t{\n\t\treturn this._parentParser;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get retrieveAsRawData():boolean\n\t{\n\t\treturn this._retrieveAsRawData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get suppresAssetEvents():boolean\n\t{\n\t\treturn this._suppressAssetEvents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * @private\n\t * Method to set data after having already created the dependency object, e.g. after load.\n\t */\n\tpublic _iSetData(data:any):void\n\t{\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t */\n\tpublic _iSetParser(parser:ParserBase):void\n\t{\n\t\tthis._parser = parser;\n\t}\n\n\t/**\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\n\t * to its intended parent. The dependency should be a member of the dependencies property.\n\t */\n\tpublic resolve():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependency(this);\n\t}\n\n\t/**\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\n\t */\n\tpublic resolveFailure():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\n\t}\n\n\t/**\n\t * Resolve the dependencies name\n\t */\n\tpublic resolveName(asset:IAsset):string\n\t{\n\t\tif (this._parentParser)\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\n\n\t\treturn asset.name;\n\t}\n}\n\nexport = ResourceDependency;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\n/**\n * Texture2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nclass Texture2DParser extends ParserBase\n{\n\tprivate _startedParsing:boolean;\n\tprivate _doneParsing:boolean;\n\tprivate _loadingImage:boolean;\n\tprivate _htmlImageElement:HTMLImageElement;\n\n\t/**\n\t * Creates a new Texture2DParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\n\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\n\t\tif (data  instanceof HTMLImageElement)\n\t\t\treturn true;\n\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tba.position = 0;\n\n\t\tif (ba.readUnsignedShort() == 0xffd8)\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\n\n\t\tba.position = 0;\n\t\tif (ba.readShort() == 0x424D)\n\t\t\treturn true; // BMP\n\n\t\tba.position = 1;\n\t\tif (ba.readUTFBytes(3) == 'PNG')\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'ATF')\n\t\t\treturn true;\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tvar asset:Texture2DBase;\n\t\tvar sizeError:boolean = false;\n\n\t\tif (this._loadingImage) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else if (this._htmlImageElement) {\n\t\t\tif (TextureUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = new ImageTexture(this._htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t}\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\n\n\t\t\tif (TextureUtils.isHTMLImageElementValid(<HTMLImageElement> this.data)) {\n\t\t\t\tasset = new ImageTexture(<HTMLImageElement> this.data);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\n\n\t\t\tvar ba:ByteArray = this.data;\n\t\t\tba.position = 0;\n\t\t\tvar htmlImageElement:HTMLImageElement = ParserUtils.byteArrayToImage(this.data);\n\n\t\t\tif (TextureUtils.isHTMLImageElementValid(htmlImageElement)) {\n\t\t\t\tasset = new ImageTexture(htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\n\n\t\t\tasset = new ImageTexture(this._htmlImageElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\n\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\n\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\tthis._loadingImage = true;\n\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\n\t\t{\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\n\t\t}\n\n\t\tthis._pContent = asset;\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tpublic onLoadComplete(event)\n\t{\n\t\tthis._loadingImage = false;\n\t}\n}\n\nexport = Texture2DParser;",
    "/**\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\n *\n * @see away.projections.PerspectiveLens#coordinateSystem\n */\nclass CoordinateSystem\n{\n\t/**\n\t * Default option, projects to a left-handed coordinate system\n\t */\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\n\n\t/**\n\t * Projects to a right-handed coordinate system\n\t */\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\n}\n\nexport = CoordinateSystem;",
    "import PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass FreeMatrixProjection extends ProjectionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._pNear = value;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._pFar = value;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._pAspectRatio = value;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.pInvalidateMatrix();\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = FreeMatrixProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass ObliqueNearPlaneProjection extends ProjectionBase\n{\n\n\tprivate _baseProjection:IProjection;\n\tprivate _plane:Plane3D;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\n\t{\n\t\tsuper();\n\t\tthis.baseProjection = baseProjection;\n\t\tthis.plane = plane;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\t}\n\n\t//@override\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._baseProjection.frustumCorners;\n\t}\n\n\t//@override\n\tpublic get near():number\n\t{\n\t\treturn this._baseProjection.near;\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._baseProjection.near = value;\n\t}\n\n\t//@override\n\tpublic get far():number\n\t{\n\t\treturn this._baseProjection.far;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._baseProjection.far = value;\n\t}\n\n\t//@override\n\tpublic get iAspectRatio():number\n\t{\n\t\treturn this._baseProjection._iAspectRatio;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._baseProjection._iAspectRatio = value;\n\t}\n\n\tpublic get plane():Plane3D\n\t{\n\t\treturn this._plane;\n\t}\n\n\tpublic set plane(value:Plane3D)\n\t{\n\t\tthis._plane = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic set baseProjection(value:IProjection)\n\t{\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis._baseProjection = value;\n\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\n\n\t\tvar cx:number = this._plane.a;\n\t\tvar cy:number = this._plane.b;\n\t\tvar cz:number = this._plane.c;\n\t\tvar cw:number = -this._plane.d + .05;\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\n\t\tinverse.invert();\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\t\tthis._pMatrix.copyRowTo(3, p);\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n}\n\nexport = ObliqueNearPlaneProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicOffCenterProjection extends ProjectionBase\n{\n\n\tprivate _minX:number;\n\tprivate _maxX:number;\n\tprivate _minY:number;\n\tprivate _maxY:number;\n\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\n\t{\n\t\tsuper();\n\t\tthis._minX = minX;\n\t\tthis._maxX = maxX;\n\t\tthis._minY = minY;\n\t\tthis._maxY = maxY;\n\t}\n\n\tpublic get minX():number\n\t{\n\t\treturn this._minX;\n\t}\n\n\tpublic set minX(value:number)\n\t{\n\t\tthis._minX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxX():number\n\t{\n\t\treturn this._maxX;\n\t}\n\n\tpublic set maxX(value:number)\n\t{\n\t\tthis._maxX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get minY():number\n\t{\n\t\treturn this._minY;\n\t}\n\n\tpublic set minY(value:number)\n\t{\n\t\tthis._minY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxY():number\n\t{\n\t\treturn this._maxY;\n\t}\n\n\tpublic set maxY(value:number)\n\t{\n\t\tthis._maxY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\t\tvar w:number = 1/(this._maxX - this._minX);\n\t\tvar h:number = 1/(this._maxY - this._minY);\n\t\tvar d:number = 1/(this._pFar - this._pNear);\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(this._maxX + this._minX)*w;\n\t\traw[13] = -(this._maxY + this._minY)*h;\n\t\traw[14] = -this._pNear*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = OrthographicOffCenterProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicProjection extends ProjectionBase\n{\n\n\tprivate _projectionHeight:number;\n\tprivate _xMax:number;\n\tprivate _yMax:number;\n\n\tconstructor(projectionHeight:number = 500)\n\t{\n\t\tsuper();\n\t\tthis._projectionHeight = projectionHeight;\n\t}\n\n\tpublic get projectionHeight():number\n\t{\n\t\treturn this._projectionHeight;\n\t}\n\n\tpublic set projectionHeight(value:number)\n\t{\n\t\tif (value == this._projectionHeight) {\n\t\t\treturn;\n\t\t}\n\t\tthis._projectionHeight = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.projectionHeight = this._projectionHeight;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\t\tthis._yMax = this._projectionHeight*.5;\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\n\t\t\t// assume symmetric frustum\n\n\t\t\tleft = -this._xMax;\n\t\t\tright = this._xMax;\n\t\t\ttop = -this._yMax;\n\t\t\tbottom = this._yMax;\n\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\n\t\t\traw[5] = 2/this._projectionHeight;\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\n\t\t\traw[15] = 1;\n\n\t\t} else {\n\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\n\n\t\t\tleft = center - xWidth;\n\t\t\tright = center + xWidth;\n\t\t\ttop = middle - yHgt;\n\t\t\tbottom = middle + yHgt;\n\n\t\t\traw[0] = 2*1/(right - left);\n\t\t\traw[5] = -2*1/(top - bottom);\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\n\t\t\traw[12] = (right + left)/(right - left);\n\t\t\traw[13] = (bottom + top)/(bottom - top);\n\t\t\traw[14] = this._pNear/(this.near - this.far);\n\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\t\traw[15] = 1;\n\t\t}\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport= OrthographicProjection;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport CoordinateSystem\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass PerspectiveProjection extends ProjectionBase\n{\n\tprivate _fieldOfView:number = 60;\n\tprivate _focalLength:number = 1000;\n\tprivate _hFieldOfView:number = 60;\n\tprivate _hFocalLength:number = 1000;\n\tprivate _preserveAspectRatio:boolean = true;\n\tprivate _preserveFocalLength:boolean = false;\n\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper(coordinateSystem);\n\t\tthis.fieldOfView = fieldOfView;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveAspectRatio():boolean\n\t{\n\t\treturn this._preserveAspectRatio;\n\t}\n\n\tpublic set preserveAspectRatio(value:boolean)\n\t{\n\t\tif (this._preserveAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._preserveAspectRatio = value;\n\n\t\tif (this._preserveAspectRatio)\n\t\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveFocalLength():boolean\n\t{\n\t\treturn this._preserveFocalLength;\n\t}\n\n\tpublic set preserveFocalLength(value:boolean)\n\t{\n\t\tif (this._preserveFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._preserveFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get fieldOfView():number\n\t{\n\t\treturn this._fieldOfView;\n\t}\n\n\tpublic set fieldOfView(value:number)\n\t{\n\t\tif (this._fieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._fieldOfView = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get focalLength():number\n\t{\n\t\treturn this._focalLength;\n\t}\n\n\tpublic set focalLength(value:number)\n\t{\n\t\tif (this._focalLength == value)\n\t\t\treturn;\n\n\t\tthis._focalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFieldOfView():number\n\t{\n\t\treturn this._hFieldOfView;\n\t}\n\n\tpublic set hFieldOfView(value:number)\n\t{\n\t\tif (this._hFieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._hFieldOfView = value;\n\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFocalLength():number\n\t{\n\t\treturn this._hFocalLength;\n\t}\n\n\tpublic set hFocalLength(value:number)\n\t{\n\t\tif (this._hFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._hFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\n\t\tv.x *= sZ;\n\t\tv.y *= sZ;\n\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:number[] = [];\n\n\t\tif (this._preserveFocalLength) {\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\n\t\t} else {\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\n\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\t\t\telse\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\n\t\t}\n\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\t// assume scissored frustum\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\n\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\n\t\tright = center;\n\t\ttop = middle;\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\n\n\t\traw[0] = 2/(right - left);\n\t\traw[5] = 2/(bottom - top);\n\t\traw[8] = (right + left)/(right - left);\n\t\traw[9] = (bottom + top)/(bottom - top);\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\n\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\n\t\t\traw[5] = -raw[5];\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\n\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\n\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\n\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionBase extends EventDispatcher implements IProjection\n{\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\tpublic _pViewPort:Rectangle = new Rectangle();\n\tpublic _pNear:number = 20;\n\tpublic _pFar:number = 3000;\n\tpublic _pAspectRatio:number = 1;\n\n\tpublic _pMatrixInvalid:boolean = true;\n\tpublic _pFrustumCorners:number[] = [];\n\tpublic _pCoordinateSystem:string;\n\tpublic _pOriginX:number = 0.5;\n\tpublic _pOriginY:number = 0.5;\n\n\tprivate _unprojection:Matrix3D;\n\tprivate _unprojectionInvalid:boolean = true;\n\n\tconstructor(coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper();\n\n\t\tthis.coordinateSystem = coordinateSystem;\n\t}\n\n\t/**\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\n\t */\n\tpublic get coordinateSystem():string\n\t{\n\t\treturn this._pCoordinateSystem;\n\t}\n\n\tpublic set coordinateSystem(value:string)\n\t{\n\t\tif (this._pCoordinateSystem == value)\n\t\t\treturn;\n\n\t\tthis._pCoordinateSystem = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._pFrustumCorners;\n\t}\n\n\tpublic set frustumCorners(frustumCorners:number[])\n\t{\n\t\tthis._pFrustumCorners = frustumCorners;\n\t}\n\n\tpublic get matrix():Matrix3D\n\t{\n\t\tif (this._pMatrixInvalid) {\n\t\t\tthis.pUpdateMatrix();\n\t\t\tthis._pMatrixInvalid = false;\n\t\t}\n\t\treturn this._pMatrix;\n\t}\n\n\tpublic set matrix(value:Matrix3D)\n\t{\n\t\tthis._pMatrix = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get near():number\n\t{\n\t\treturn this._pNear;\n\t}\n\n\tpublic set near(value:number)\n\t{\n\t\tif (value == this._pNear) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pNear = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get originX():number\n\t{\n\t\treturn this._pOriginX;\n\t}\n\n\tpublic set originX(value:number)\n\t{\n\t\tif (this._pOriginX == value)\n\t\t\treturn;\n\n\t\tthis._pOriginX = value;\n\t}\n\n\tpublic get originY():number\n\t{\n\t\treturn this._pOriginY;\n\t}\n\n\tpublic set originY(value:number)\n\t{\n\t\tif (this._pOriginY == value)\n\t\t\treturn;\n\n\t\tthis._pOriginY = value;\n\t}\n\n\tpublic get far():number\n\t{\n\t\treturn this._pFar;\n\t}\n\n\tpublic set far(value:number)\n\t{\n\t\tif (value == this._pFar) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pFar = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\n\t\tv.x = v.x/v.w;\n\t\tv.y = -v.y/v.w;\n\n\t\t//z is unaffected by transform\n\t\tv.z = point3d.z;\n\n\t\treturn v;\n\t}\n\n\tpublic get unprojectionMatrix():Matrix3D\n\t{\n\t\tif (this._unprojectionInvalid) {\n\t\t\tif (!this._unprojection)\n\t\t\t\tthis._unprojection = new Matrix3D();\n\n\t\t\tthis._unprojection.copyFrom(this.matrix);\n\t\t\tthis._unprojection.invert();\n\t\t\tthis._unprojectionInvalid = false;\n\t\t}\n\t\treturn this._unprojection;\n\t}\n\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():ProjectionBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iAspectRatio():number\n\t{\n\t\treturn this._pAspectRatio;\n\t}\n\n\tpublic set _iAspectRatio(value:number)\n\t{\n\t\tif (this._pAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._pAspectRatio = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic pInvalidateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = true;\n\t\tthis._unprojectionInvalid = true;\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\n\t}\n\n\tpublic pUpdateMatrix()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pScissorRect.x = x;\n\t\tthis._pScissorRect.y = y;\n\t\tthis._pScissorRect.width = width;\n\t\tthis._pScissorRect.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pViewPort.x = x;\n\t\tthis._pViewPort.y = y;\n\t\tthis._pViewPort.width = width;\n\t\tthis._pViewPort.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n}\n\nexport = ProjectionBase;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport CubeTextureBase\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\n\nclass BitmapCubeTexture extends CubeTextureBase\n{\n\tprivate _bitmapDatas:Array<BitmapData> = new Array<BitmapData>(6);\n\n\t/**\n\t * The texture on the cube's right face.\n\t */\n\tpublic get positiveX():BitmapData\n\t{\n\t\treturn this._bitmapDatas[0];\n\t}\n\n\tpublic set positiveX(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[0] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's left face.\n\t */\n\tpublic get negativeX():BitmapData\n\t{\n\t\treturn this._bitmapDatas[1];\n\t}\n\n\tpublic set negativeX(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[1] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's top face.\n\t */\n\tpublic get positiveY():BitmapData\n\t{\n\t\treturn this._bitmapDatas[2];\n\t}\n\n\tpublic set positiveY(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[2] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's bottom face.\n\t */\n\tpublic get negativeY():BitmapData\n\t{\n\t\treturn this._bitmapDatas[3];\n\t}\n\n\tpublic set negativeY(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[3] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's far face.\n\t */\n\tpublic get positiveZ():BitmapData\n\t{\n\t\treturn this._bitmapDatas[4];\n\t}\n\n\tpublic set positiveZ(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[4] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's near face.\n\t */\n\tpublic get negativeZ():BitmapData\n\t{\n\t\treturn this._bitmapDatas[5];\n\t}\n\n\tpublic set negativeZ(value:BitmapData)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._bitmapDatas[5] = value;\n\t}\n\n\tconstructor(posX:BitmapData, negX:BitmapData, posY:BitmapData, negY:BitmapData, posZ:BitmapData, negZ:BitmapData)\n\t{\n\t\tsuper();\n\n\t\tthis._testSize(this._bitmapDatas[0] = posX);\n\t\tthis._testSize(this._bitmapDatas[1] = negX);\n\t\tthis._testSize(this._bitmapDatas[2] = posY);\n\t\tthis._testSize(this._bitmapDatas[3] = negY);\n\t\tthis._testSize(this._bitmapDatas[4] = posZ);\n\t\tthis._testSize(this._bitmapDatas[5] = negZ);\n\n\t\tthis.invalidateContent();\n\n\t\tthis._pSetSize(posX.width);\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t * @private\n\t */\n\tprivate _testSize(value:BitmapData)\n\t{\n\t\tif (value.width != value.height)\n\t\t\tthrow new Error(\"BitmapData should have equal width and height!\");\n\t\tif (!TextureUtils.isBitmapDataValid(value))\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tvar len:number = this._bitmapDatas.length\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tthis._bitmapDatas[i].dispose();\n\t\t\tthis._bitmapDatas[i] = null;\n\t\t}\n\n\t\tthis._bitmapDatas = null;\n\t}\n\n\tpublic _iGetTextureData(side:number):BitmapData\n\t{\n\t\treturn this._bitmapDatas[side];\n\t}\n}\n\nexport = BitmapCubeTexture;",
    "﻿import BitmapData\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\n\nclass BitmapTexture extends Texture2DBase\n{\n\tpublic _bitmapData:BitmapData;\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get bitmapData():BitmapData\n\t{\n\t\treturn this._bitmapData;\n\t}\n\n\tpublic set bitmapData(value:BitmapData)\n\t{\n\t\tif (this._bitmapData == value)\n\t\t\treturn;\n\n\t\tif (!TextureUtils.isBitmapDataValid(value))\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._bitmapData = value;\n\n\t\tthis.invalidateContent();\n\n\t\tthis._pSetSize(value.width, value.height);\n\t}\n\n\tconstructor(bitmapData:BitmapData)\n\t{\n\t\tsuper();\n\n\t\tthis.bitmapData = bitmapData;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._bitmapData.dispose();\n\t\tthis._bitmapData = null;\n\t}\n\n\tpublic _iGetTextureData():BitmapData\n\t{\n\t\treturn this._bitmapData;\n\t}\n}\n\nexport = BitmapTexture;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport MipmapGenerator\t\t\t= require(\"awayjs-core/lib/textures/MipmapGenerator\");\nimport TextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\n\nclass CubeTextureBase extends TextureBase\n{\n\tpublic _mipmapDataArray:Array<Array<BitmapData>> = new Array<Array<BitmapData>>(6);\n\tpublic _mipmapDataDirtyArray:Array<boolean> = new Array<boolean>(6);\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _pSetSize(size:number)\n\t{\n\t\tif (this._pSize != size)\n\t\t\tthis.invalidateSize();\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tthis._mipmapDataDirtyArray[i] = true;\n\n\t\tthis._pSize = size;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tvar mipmapData:Array<BitmapData> = this._mipmapDataArray[i];\n\t\t\tvar len:number = mipmapData.length;\n\t\t\tfor (var j:number = 0; j < len; j++)\n\t\t\t\tMipmapGenerator.freeMipMapHolder(mipmapData[j]);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tsuper.invalidateContent();\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tthis._mipmapDataDirtyArray[i] = true;\n\t}\n\n\tpublic _iGetMipmapData(side:number):Array<BitmapData>\n\t{\n\t\tif (this._mipmapDataDirtyArray[side]) {\n\t\t\tthis._mipmapDataDirtyArray[side] = false;\n\n\t\t\tvar mipmapData:Array<BitmapData> = this._mipmapDataArray[side] || (this._mipmapDataArray[side] = new Array<BitmapData>());\n\t\t\tMipmapGenerator.generateMipMaps(this._iGetTextureData(side), mipmapData, true);\n\t\t}\n\n\t\treturn this._mipmapDataArray[side];\n\t}\n\n\tpublic _iGetTextureData(side:number):any\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = CubeTextureBase;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport CubeTextureBase\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\nclass ImageCubeTexture extends CubeTextureBase\n{\n\tprivate _htmlImageElements:Array<HTMLImageElement> = new Array<HTMLImageElement>(6);\n\n\t/**\n\t * The texture on the cube's right face.\n\t */\n\tpublic get positiveX():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[0];\n\t}\n\n\tpublic set positiveX(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[0] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's left face.\n\t */\n\tpublic get negativeX():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[1];\n\t}\n\n\tpublic set negativeX(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[1] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's top face.\n\t */\n\tpublic get positiveY():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[2];\n\t}\n\n\tpublic set positiveY(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[2] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's bottom face.\n\t */\n\tpublic get negativeY():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[3];\n\t}\n\n\tpublic set negativeY(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[3] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's far face.\n\t */\n\tpublic get positiveZ():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[4];\n\t}\n\n\tpublic set positiveZ(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[4] = value;\n\t}\n\n\t/**\n\t * The texture on the cube's near face.\n\t */\n\tpublic get negativeZ():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[5];\n\t}\n\n\tpublic set negativeZ(value:HTMLImageElement)\n\t{\n\t\tthis._testSize(value);\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width);\n\t\tthis._htmlImageElements[5] = value;\n\t}\n\n\tconstructor(posX:HTMLImageElement, negX:HTMLImageElement, posY:HTMLImageElement, negY:HTMLImageElement, posZ:HTMLImageElement, negZ:HTMLImageElement)\n\t{\n\t\tsuper();\n\n\t\tthis._testSize(this._htmlImageElements[0] = posX);\n\t\tthis._testSize(this._htmlImageElements[1] = negX);\n\t\tthis._testSize(this._htmlImageElements[2] = posY);\n\t\tthis._testSize(this._htmlImageElements[3] = negY);\n\t\tthis._testSize(this._htmlImageElements[4] = posZ);\n\t\tthis._testSize(this._htmlImageElements[5] = negZ);\n\n\t\tthis.invalidateContent();\n\n\t\tthis._pSetSize(posX.width);\n\t}\n\n\tprivate _testSize(value:HTMLImageElement)\n\t{\n\t\tif (value.width != value.height)\n\t\t\tthrow new Error(\"BitmapData should have equal width and height!\");\n\t\tif (!TextureUtils.isHTMLImageElementValid(value))\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n\n\tpublic _iGetTextureData(side:number):HTMLImageElement\n\t{\n\t\treturn this._htmlImageElements[side];\n\t}\n}\n\nexport = ImageCubeTexture;",
    "﻿import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\n\nclass ImageTexture extends Texture2DBase\n{\n\tprivate _htmlImageElement:HTMLImageElement;\n\n\t/**\n\t *\n\t * @param htmlImageElement\n\t * @param generateMipmaps\n\t */\n\tconstructor(htmlImageElement:HTMLImageElement)\n\t{\n\t\tsuper();\n\n\t\tthis.htmlImageElement = htmlImageElement;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlImageElement():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElement;\n\t}\n\n\tpublic set htmlImageElement(value:HTMLImageElement)\n\t{\n\t\tif (this._htmlImageElement == value)\n\t\t\treturn;\n\n\t\tif (!TextureUtils.isHTMLImageElementValid(value))\n\t\t\tthrow new Error(\"Invalid bitmapData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._htmlImageElement = value;\n\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(value.width, value.height);\n\t}\n\n\tpublic _iGetTextureData():HTMLImageElement\n\t{\n\t\treturn this._htmlImageElement;\n\t}\n}\n\nexport = ImageTexture;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\n/**\n * MipmapGenerator is a helper class that uploads BitmapData to a Texture including mipmap levels.\n */\nclass MipmapGenerator\n{\n\tprivate static _mipMaps = [];\n\tprivate static _mipMapUses = [];\n\n\tprivate static _matrix:Matrix = new Matrix();\n\tprivate static _rect:Rectangle = new Rectangle();\n\tprivate static _source:BitmapData;\n\n\t/**\n\t * Uploads a BitmapData with mip maps to a target Texture object.\n\t * @param source The source to upload.\n\t * @param target The target Texture to upload to.\n\t * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\n\t * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\n\t */\n\tpublic static generateMipMaps(source:HTMLImageElement, output?:Array<BitmapData>, alpha?:boolean);\n\tpublic static generateMipMaps(source:BitmapData, output?:Array<BitmapData>, alpha?:boolean);\n\tpublic static generateMipMaps(source:any, output?:Array<BitmapData>, alpha:boolean = false)\n\t{\n\t\tvar w:number = source.width;\n\t\tvar h:number = source.height;\n\t\tvar i:number = 0;\n\n\t\tvar mipmap:BitmapData;\n\n\t\tMipmapGenerator._rect.width = w;\n\t\tMipmapGenerator._rect.height = h;\n\n\t\t//use (OR) to create non-square texture mipmaps\n\t\twhile (w >= 1 || h >= 1) {\n\n\t\t\tmipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\n\n\t\t\tif (alpha)\n\t\t\t\tmipmap.fillRect(MipmapGenerator._rect, 0);\n\n\t\t\tMipmapGenerator._matrix.a = MipmapGenerator._rect.width/source.width;\n\t\t\tMipmapGenerator._matrix.d = MipmapGenerator._rect.height/source.height;\n\n\t\t\tmipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\n\n\t\t\tw >>= 1;\n\t\t\th >>= 1;\n\n\t\t\tMipmapGenerator._rect.width = w > 1? w : 1;\n\t\t\tMipmapGenerator._rect.height = h > 1? h : 1;\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate static _getMipmapHolder(mipMapHolder:BitmapData, newW:number, newH:number):BitmapData\n\t{\n\t\tif (mipMapHolder) {\n\t\t\tif (mipMapHolder.width == newW && mipMapHolder.height == newH)\n\t\t\t\treturn mipMapHolder;\n\n\t\t\tMipmapGenerator.freeMipMapHolder(mipMapHolder);\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW]) {\n\t\t\tMipmapGenerator._mipMaps[newW] = [];\n\t\t\tMipmapGenerator._mipMapUses[newW] = [];\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW][newH]) {\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapData(newW, newH, true);\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = 1;\n\t\t} else {\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH];\n\t\t}\n\n\t\treturn mipMapHolder;\n\t}\n\n\tpublic static freeMipMapHolder(mipMapHolder:BitmapData)\n\t{\n\t\tvar holderWidth:number = mipMapHolder.width;\n\t\tvar holderHeight:number = mipMapHolder.height;\n\n\t\tif (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\n\t\t}\n\t}\n}\n\nexport = MipmapGenerator;",
    "﻿import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport Texture2DBase\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport TextureUtils\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\n\nclass RenderTexture extends Texture2DBase\n{\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (value == this._pWidth)\n\t\t\treturn;\n\n\t\tif (!TextureUtils.isDimensionValid(value))\n\t\t\tthrow new Error(\"Invalid size: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.invalidateContent();\n\n\t\tthis._pSetSize(value, this._pHeight);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (value == this._pHeight)\n\t\t\treturn;\n\n\t\tif (!TextureUtils.isDimensionValid(value))\n\t\t\tthrow new Error(\"Invalid size: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.invalidateContent();\n\t\tthis._pSetSize(this._pWidth, value);\n\t}\n\n\tconstructor(width:number, height:number)\n\t{\n\t\tsuper();\n\n\t\tthis._pSetSize(width, height);\n\t}\n}\n\nexport = RenderTexture;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport BitmapDataChannel\t\t= require(\"awayjs-core/lib/data/BitmapDataChannel\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\n\n/**\n * A convenience texture that encodes a specular map in the red channel, and the gloss map in the green channel, as expected by BasicSpecularMapMethod\n */\nclass SpecularBitmapTexture extends BitmapTexture\n{\n\tprivate _specularMap:BitmapData;\n\tprivate _glossMap:BitmapData;\n\t\n\tconstructor(specularMap:BitmapData = null, glossMap:BitmapData = null)\n\t{\n\t\tvar bmd:BitmapData = specularMap? specularMap : glossMap;\n\n\t\tbmd = bmd? new BitmapData(bmd.width, bmd.height, false, 0xffffff) : new BitmapData(1, 1, false, 0xffffff);\n\t\t\n\t\tsuper(bmd);\n\t\t\n\t\tthis.specularMap = specularMap;\n\t\tthis.glossMap = glossMap;\n\t}\n\t\n\tpublic get specularMap():BitmapData\n\t{\n\t\treturn this._specularMap;\n\t}\n\t\n\tpublic set specularMap(value:BitmapData)\n\t{\n\t\tthis._specularMap = value;\n\n\t\tthis.invalidateContent();\n\t\t\n\t\tthis._testSize();\n\t}\n\t\n\tpublic get glossMap():BitmapData\n\t{\n\t\treturn this._glossMap;\n\t}\n\t\n\tpublic set glossMap(value:BitmapData)\n\t{\n\t\tthis._glossMap = value;\n\t\tthis.invalidateContent();\n\t\t\n\t\tthis._testSize();\n\t}\n\t\n\tprivate _testSize()\n\t{\n\t\tvar w:Number, h:Number;\n\t\t\n\t\tif (this._specularMap) {\n\t\t\tw = this._specularMap.width;\n\t\t\th = this._specularMap.height;\n\t\t} else if (this._glossMap) {\n\t\t\tw = this._glossMap.width;\n\t\t\th = this._glossMap.height;\n\t\t} else {\n\t\t\tw = 1;\n\t\t\th = 1;\n\t\t}\n\t\t\n\t\tif (w != this._bitmapData.width && h != this._bitmapData.height) {\n\t\t\tvar oldBitmap:BitmapData = this._bitmapData;\n\t\t\tthis.bitmapData = new BitmapData(this._specularMap.width, this._specularMap.height, false, 0xffffff);\n\t\t\toldBitmap.dispose();\n\t\t}\n\t}\n\n\tpublic _iGetTextureData():BitmapData\n\t{\n\t\tvar rect:Rectangle = this._specularMap.rect;\n\t\tvar origin:Point = new Point();\n\n\t\tthis._bitmapData.fillRect(rect, 0xffffff);\n\n\t\tif (this._glossMap)\n\t\t\tthis._bitmapData.copyChannel(this._glossMap, rect, origin, BitmapDataChannel.GREEN, BitmapDataChannel.GREEN);\n\n\t\tif (this._specularMap)\n\t\t\tthis._bitmapData.copyChannel(this._specularMap, rect, origin, BitmapDataChannel.RED, BitmapDataChannel.RED);\n\n\t\treturn this._bitmapData;\n\t}\n}\n\nexport = SpecularBitmapTexture;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport MipmapGenerator\t\t\t= require(\"awayjs-core/lib/textures/MipmapGenerator\");\nimport TextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\n\nclass Texture2DBase extends TextureBase\n{\n\tprivate _mipmapData:Array<BitmapData>;\n\tprivate _mipmapDataDirty:boolean;\n\tpublic _pWidth:number;\n\tpublic _pHeight:number;\n\t\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\tpublic get size():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._mipmapData) {\n\t\t\tvar len:number = this._mipmapData.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tMipmapGenerator.freeMipMapHolder(this._mipmapData[i]);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tsuper.invalidateContent();\n\n\t\tthis._mipmapDataDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _pSetSize(width:number, height:number)\n\t{\n\t\tif (this._pWidth != width || this._pHeight != height)\n\t\t\tthis.invalidateSize();\n\n\t\tthis._mipmapDataDirty = true;\n\n\t\tthis._pWidth = width;\n\t\tthis._pHeight = height;\n\t}\n\n\tpublic _iGetMipmapData():Array<BitmapData>\n\t{\n\t\tif (this._mipmapDataDirty) {\n\t\t\tthis._mipmapDataDirty = false;\n\n\t\t\tif (!this._mipmapData)\n\t\t\t\tthis._mipmapData = new Array<BitmapData>();\n\n\t\t\tMipmapGenerator.generateMipMaps(this._iGetTextureData(), this._mipmapData, true);\n\t\t}\n\n\t\treturn this._mipmapData;\n\t}\n\n\tpublic _iGetTextureData():any\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = Texture2DBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ITextureData\t\t\t\t= require(\"awayjs-core/lib/pool/ITextureData\");\n\n/**\n *\n */\nclass TextureProxyBase extends AssetBase implements IAsset\n{\n\tpublic _pSize:number;\n\tpublic _pFormat:string = \"bgra\"\n\tprivate _textureData:Array<ITextureData> = new Array<ITextureData>();\n\n\tpublic static assetType:string = \"[asset Texture]\";\n\n\t/**\n\t *\n\t */\n\tconstructor(generateMipmaps:boolean = false)\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get size():number\n\t{\n\t\treturn this._pSize;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get format():string\n\t{\n\t\treturn this._pFormat;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextureProxyBase.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureData.length\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureData[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureData.length)\n\t\t\tthis._textureData[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureData.length)\n\t\t\tthis._textureData[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureData(textureData:ITextureData):ITextureData\n\t{\n\t\tthis._textureData.push(textureData);\n\n\t\treturn textureData;\n\t}\n\n\tpublic _iRemoveTextureData(textureData:ITextureData):ITextureData\n\t{\n\t\tthis._textureData.splice(this._textureData.indexOf(textureData), 1);\n\n\t\treturn textureData;\n\t}\n}\n\nexport = TextureProxyBase;",
    "class Keyboard\n{\n\t/**\n\t * Constant associated with the key code value for the A key (65).\n\t */\n\tpublic static A:number /*uint*/ = 65;\n\n\t/**\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\n\t */\n\tpublic static ALTERNATE:number /*uint*/ = 18;\n\n\t/**\n\t * Select the audio mode\n\t */\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\n\n\t/**\n\t * Constant associated with the key code value for the B key (66).\n\t */\n\tpublic static B:number /*uint*/ = 66;\n\n\t/**\n\t * Return to previous page in application\n\t */\n\tpublic static BACK:number /*uint*/ = 0x01000016;\n\n\t/**\n\t * Constant associated with the key code value for the ` key (192).\n\t */\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\n\n\t/**\n\t * Constant associated with the key code value for the \\ key (220).\n\t */\n\tpublic static BACKSLASH:number /*uint*/ = 220;\n\n\t/**\n\t * Constant associated with the key code value for the Backspace key (8).\n\t */\n\tpublic static BACKSPACE:number /*uint*/ = 8;\n\n\t/**\n\t * Blue function key button\n\t */\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\n\n\t/**\n\t * Constant associated with the key code value for the C key (67).\n\t */\n\tpublic static C:number /*uint*/ = 67;\n\n\t/**\n\t * Constant associated with the key code value for the Caps Lock key (20).\n\t */\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\n\n\t/**\n\t * Channel down\n\t */\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Channel up\n\t */\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Constant associated with the key code value for the , key (188).\n\t */\n\tpublic static COMMA:number /*uint*/ = 188;\n\n\t/**\n\t * Constant associated with the Mac command key (15). This constant is\n\t * currently only used for setting menu key equivalents.\n\t */\n\tpublic static COMMAND:number /*uint*/ = 15;\n\n\t/**\n\t * Constant associated with the key code value for the Control key (17).\n\t */\n\tpublic static CONTROL:number /*uint*/ = 17;\n\n\t/**\n\t * An array containing all the defined key name constants.\n\t */\n\tpublic static CharCodeStrings:Array<any>;\n\n\t/**\n\t * Constant associated with the key code value for the D key (68).\n\t */\n\tpublic static D:number /*uint*/ = 68;\n\n\t/**\n\t * Constant associated with the key code value for the Delete key (46).\n\t */\n\tpublic static DELETE:number /*uint*/ = 46;\n\n\t/**\n\t * Constant associated with the key code value for the Down Arrow key (40).\n\t */\n\tpublic static DOWN:number /*uint*/ = 40;\n\n\t/**\n\t * Engage DVR application mode\n\t */\n\tpublic static DVR:number /*uint*/ = 0x01000019;\n\n\t/**\n\t * Constant associated with the key code value for the E key (69).\n\t */\n\tpublic static E:number /*uint*/ = 69;\n\n\t/**\n\t * Constant associated with the key code value for the End key (35).\n\t */\n\tpublic static END:number /*uint*/ = 35;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key (13).\n\t */\n\tpublic static ENTER:number /*uint*/ = 13;\n\n\t/**\n\t * Constant associated with the key code value for the = key (187).\n\t */\n\tpublic static EQUAL:number /*uint*/ = 187;\n\n\t/**\n\t * Constant associated with the key code value for the Escape key (27).\n\t */\n\tpublic static ESCAPE:number /*uint*/ = 27;\n\n\t/**\n\t * Exits current application mode\n\t */\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\n\n\t/**\n\t * Constant associated with the key code value for the F key (70).\n\t */\n\tpublic static F:number /*uint*/ = 70;\n\n\t/**\n\t * Constant associated with the key code value for the F1 key (112).\n\t */\n\tpublic static F1:number /*uint*/ = 112;\n\n\t/**\n\t * Constant associated with the key code value for the F10 key (121).\n\t */\n\tpublic static F10:number /*uint*/ = 121;\n\n\t/**\n\t * Constant associated with the key code value for the F11 key (122).\n\t */\n\tpublic static F11:number /*uint*/ = 122;\n\n\t/**\n\t * Constant associated with the key code value for the F12 key (123).\n\t */\n\tpublic static F12:number /*uint*/ = 123;\n\n\t/**\n\t * Constant associated with the key code value for the F13 key (124).\n\t */\n\tpublic static F13:number /*uint*/ = 124;\n\n\t/**\n\t * Constant associated with the key code value for the F14 key (125).\n\t */\n\tpublic static F14:number /*uint*/ = 125;\n\n\t/**\n\t * Constant associated with the key code value for the F15 key (126).\n\t */\n\tpublic static F15:number /*uint*/ = 126;\n\n\t/**\n\t * Constant associated with the key code value for the F2 key (113).\n\t */\n\tpublic static F2:number /*uint*/ = 113;\n\n\t/**\n\t * Constant associated with the key code value for the F3 key (114).\n\t */\n\tpublic static F3:number /*uint*/ = 114;\n\n\t/**\n\t * Constant associated with the key code value for the F4 key (115).\n\t */\n\tpublic static F4:number /*uint*/ = 115;\n\n\t/**\n\t * Constant associated with the key code value for the F5 key (116).\n\t */\n\tpublic static F5:number /*uint*/ = 116;\n\n\t/**\n\t * Constant associated with the key code value for the F6 key (117).\n\t */\n\tpublic static F6:number /*uint*/ = 117;\n\n\t/**\n\t * Constant associated with the key code value for the F7 key (118).\n\t */\n\tpublic static F7:number /*uint*/ = 118;\n\n\t/**\n\t * Constant associated with the key code value for the F8 key (119).\n\t */\n\tpublic static F8:number /*uint*/ = 119;\n\n\t/**\n\t * Constant associated with the key code value for the F9 key (120).\n\t */\n\tpublic static F9:number /*uint*/ = 120;\n\n\t/**\n\t * Engage fast-forward transport mode\n\t */\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\n\n\t/**\n\t * Constant associated with the key code value for the G key (71).\n\t */\n\tpublic static G:number /*uint*/ = 71;\n\n\t/**\n\t * Green function key button\n\t */\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\n\n\t/**\n\t * Engage program guide\n\t */\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\n\n\t/**\n\t * Constant associated with the key code value for the H key (72).\n\t */\n\tpublic static H:number /*uint*/ = 72;\n\n\t/**\n\t * Engage help application or context-sensitive help\n\t */\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\n\n\t/**\n\t * Constant associated with the key code value for the Home key (36).\n\t */\n\tpublic static HOME:number /*uint*/ = 36;\n\n\t/**\n\t * Constant associated with the key code value for the I key (73).\n\t */\n\tpublic static I:number /*uint*/ = 73;\n\n\t/**\n\t * Info button\n\t */\n\tpublic static INFO:number /*uint*/ = 0x01000013;\n\n\t/**\n\t * Cycle input\n\t */\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\n\n\t/**\n\t * Constant associated with the key code value for the Insert key (45).\n\t */\n\tpublic static INSERT:number /*uint*/ = 45;\n\n\t/**\n\t * Constant associated with the key code value for the J key (74).\n\t */\n\tpublic static J:number /*uint*/ = 74;\n\n\t/**\n\t * Constant associated with the key code value for the K key (75).\n\t */\n\tpublic static K:number /*uint*/ = 75;\n\n\t/**\n\t * The Begin key\n\t */\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\n\n\t/**\n\t * The Break key\n\t */\n\tpublic static KEYNAME_BREAK:string = \"Break\";\n\n\t/**\n\t * The Clear Display key\n\t */\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\n\n\t/**\n\t * The Clear Line key\n\t */\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\n\n\t/**\n\t * The Delete key\n\t */\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\n\n\t/**\n\t * The Delete Character key\n\t */\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\n\n\t/**\n\t * The Delete Line key\n\t */\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\n\n\t/**\n\t * The down arrow\n\t */\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\n\n\t/**\n\t * The End key\n\t */\n\tpublic static KEYNAME_END:string = \"End\";\n\n\t/**\n\t * The Execute key\n\t */\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\n\n\t/**\n\t * The F1 key\n\t */\n\tpublic static KEYNAME_F1:string = \"F1\";\n\n\t/**\n\t * The F10 key\n\t */\n\tpublic static KEYNAME_F10:string = \"F10\";\n\n\t/**\n\t * The F11 key\n\t */\n\tpublic static KEYNAME_F11:string = \"F11\";\n\n\t/**\n\t * The F12 key\n\t */\n\tpublic static KEYNAME_F12:string = \"F12\";\n\n\t/**\n\t * The F13 key\n\t */\n\tpublic static KEYNAME_F13:string = \"F13\";\n\n\t/**\n\t * The F14 key\n\t */\n\tpublic static KEYNAME_F14:string = \"F14\";\n\n\t/**\n\t * The F15 key\n\t */\n\tpublic static KEYNAME_F15:string = \"F15\";\n\n\t/**\n\t * The F16 key\n\t */\n\tpublic static KEYNAME_F16:string = \"F16\";\n\n\t/**\n\t * The F17 key\n\t */\n\tpublic static KEYNAME_F17:string = \"F17\";\n\n\t/**\n\t * The F18 key\n\t */\n\tpublic static KEYNAME_F18:string = \"F18\";\n\n\t/**\n\t * The F19 key\n\t */\n\tpublic static KEYNAME_F19:string = \"F19\";\n\n\t/**\n\t * The F2 key\n\t */\n\tpublic static KEYNAME_F2:string = \"F2\";\n\n\t/**\n\t * The F20 key\n\t */\n\tpublic static KEYNAME_F20:string = \"F20\";\n\n\t/**\n\t * The F21 key\n\t */\n\tpublic static KEYNAME_F21:string = \"F21\";\n\n\t/**\n\t * The F22 key\n\t */\n\tpublic static KEYNAME_F22:string = \"F22\";\n\n\t/**\n\t * The F23 key\n\t */\n\tpublic static KEYNAME_F23:string = \"F23\";\n\n\t/**\n\t * The F24 key\n\t */\n\tpublic static KEYNAME_F24:string = \"F24\";\n\n\t/**\n\t * The F25 key\n\t */\n\tpublic static KEYNAME_F25:string = \"F25\";\n\n\t/**\n\t * The F26 key\n\t */\n\tpublic static KEYNAME_F26:string = \"F26\";\n\n\t/**\n\t * The F27 key\n\t */\n\tpublic static KEYNAME_F27:string = \"F27\";\n\n\t/**\n\t * The F28 key\n\t */\n\tpublic static KEYNAME_F28:string = \"F28\";\n\n\t/**\n\t * The F29 key\n\t */\n\tpublic static KEYNAME_F29:string = \"F29\";\n\n\t/**\n\t * The F3 key\n\t */\n\tpublic static KEYNAME_F3:string = \"F3\";\n\n\t/**\n\t * The F30 key\n\t */\n\tpublic static KEYNAME_F30:string = \"F30\";\n\n\t/**\n\t * The F31 key\n\t */\n\tpublic static KEYNAME_F31:string = \"F31\";\n\n\t/**\n\t * The F32 key\n\t */\n\tpublic static KEYNAME_F32:string = \"F32\";\n\n\t/**\n\t * The F33 key\n\t */\n\tpublic static KEYNAME_F33:string = \"F33\";\n\n\t/**\n\t * The F34 key\n\t */\n\tpublic static KEYNAME_F34:string = \"F34\";\n\n\t/**\n\t * The F35 key\n\t */\n\tpublic static KEYNAME_F35:string = \"F35\";\n\n\t/**\n\t * The F4 key\n\t */\n\tpublic static KEYNAME_F4:string = \"F4\";\n\n\t/**\n\t * The F5 key\n\t */\n\tpublic static KEYNAME_F5:string = \"F5\";\n\n\t/**\n\t * The F6 key\n\t */\n\tpublic static KEYNAME_F6:string = \"F6\";\n\n\t/**\n\t * The F7 key\n\t */\n\tpublic static KEYNAME_F7:string = \"F7\";\n\n\t/**\n\t * The F8 key\n\t */\n\tpublic static KEYNAME_F8:string = \"F8\";\n\n\t/**\n\t * The F9 key\n\t */\n\tpublic static KEYNAME_F9:string = \"F9\";\n\n\t/**\n\t * The Find key\n\t */\n\tpublic static KEYNAME_FIND:string = \"Find\";\n\n\t/**\n\t * The Help key\n\t */\n\tpublic static KEYNAME_HELP:string = \"Help\";\n\n\t/**\n\t * The Home key\n\t */\n\tpublic static KEYNAME_HOME:string = \"Home\";\n\n\t/**\n\t * The Insert key\n\t */\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\n\n\t/**\n\t * The Insert Character key\n\t */\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\n\n\t/**\n\t * The Insert Line key\n\t */\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\n\n\t/**\n\t * The left arrow\n\t */\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\n\n\t/**\n\t * The Menu key\n\t */\n\tpublic static KEYNAME_MENU:string = \"Menu\";\n\n\t/**\n\t * The Mode Switch key\n\t */\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\n\n\t/**\n\t * The Next key\n\t */\n\tpublic static KEYNAME_NEXT:string = \"Next\";\n\n\t/**\n\t * The Page Down key\n\t */\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\n\n\t/**\n\t * The Page Up key\n\t */\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\n\n\t/**\n\t * The Pause key\n\t */\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\n\n\t/**\n\t * The Previous key\n\t */\n\tpublic static KEYNAME_PREV:string = \"Prev\";\n\n\t/**\n\t * The PRINT key\n\t */\n\tpublic static KEYNAME_PRINT:string = \"Print\";\n\n\t/**\n\t * The PRINT Screen\n\t */\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\n\n\t/**\n\t * The Redo key\n\t */\n\tpublic static KEYNAME_REDO:string = \"Redo\";\n\n\t/**\n\t * The Reset key\n\t */\n\tpublic static KEYNAME_RESET:string = \"Reset\";\n\n\t/**\n\t * The right arrow\n\t */\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\n\n\t/**\n\t * The Scroll Lock key\n\t */\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\n\n\t/**\n\t * The Select key\n\t */\n\tpublic static KEYNAME_SELECT:string = \"Select\";\n\n\t/**\n\t * The Stop key\n\t */\n\tpublic static KEYNAME_STOP:string = \"Stop\";\n\n\t/**\n\t * The System Request key\n\t */\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\n\n\t/**\n\t * The System key\n\t */\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\n\n\t/**\n\t * The Undo key\n\t */\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\n\n\t/**\n\t * The up arrow\n\t */\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\n\n\t/**\n\t * The User key\n\t */\n\tpublic static KEYNAME_USER:string = \"User\";\n\n\t/**\n\t * Constant associated with the key code value for the L key (76).\n\t */\n\tpublic static L:number /*uint*/ = 76;\n\n\t/**\n\t * Watch last channel or show watched\n\t */\n\tpublic static LAST:number /*uint*/ = 0x01000011;\n\n\t/**\n\t * Constant associated with the key code value for the Left Arrow key (37).\n\t */\n\tpublic static LEFT:number /*uint*/ = 37;\n\n\t/**\n\t * Constant associated with the key code value for the [ key (219).\n\t */\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\n\n\t/**\n\t * Return to live [position in broadcast]\n\t */\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\n\n\t/**\n\t * Constant associated with the key code value for the M key (77).\n\t */\n\tpublic static M:number /*uint*/ = 77;\n\n\t/**\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\n\t */\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\n\n\t/**\n\t * Engage menu\n\t */\n\tpublic static MENU:number /*uint*/ = 0x01000012;\n\n\t/**\n\t * Constant associated with the key code value for the - key (189).\n\t */\n\tpublic static MINUS:number /*uint*/ = 189;\n\n\t/**\n\t * Constant associated with the key code value for the N key (78).\n\t */\n\tpublic static N:number /*uint*/ = 78;\n\n\t/**\n\t * Skip to next track or chapter\n\t */\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\n\n\t/**\n\t * Constant associated with the key code value for the 0 key (48).\n\t */\n\tpublic static NUMBER_0:number /*uint*/ = 48;\n\n\t/**\n\t * Constant associated with the key code value for the 1 key (49).\n\t */\n\tpublic static NUMBER_1:number /*uint*/ = 49;\n\n\t/**\n\t * Constant associated with the key code value for the 2 key (50).\n\t */\n\tpublic static NUMBER_2:number /*uint*/ = 50;\n\n\t/**\n\t * Constant associated with the key code value for the 3 key (51).\n\t */\n\tpublic static NUMBER_3:number /*uint*/ = 51;\n\n\t/**\n\t * Constant associated with the key code value for the 4 key (52).\n\t */\n\tpublic static NUMBER_4:number /*uint*/ = 52;\n\n\t/**\n\t * Constant associated with the key code value for the 5 key (53).\n\t */\n\tpublic static NUMBER_5:number /*uint*/ = 53;\n\n\t/**\n\t * Constant associated with the key code value for the 6 key (54).\n\t */\n\tpublic static NUMBER_6:number /*uint*/ = 54;\n\n\t/**\n\t * Constant associated with the key code value for the 7 key (55).\n\t */\n\tpublic static NUMBER_7:number /*uint*/ = 55;\n\n\t/**\n\t * Constant associated with the key code value for the 8 key (56).\n\t */\n\tpublic static NUMBER_8:number /*uint*/ = 56;\n\n\t/**\n\t * Constant associated with the key code value for the 9 key (57).\n\t */\n\tpublic static NUMBER_9:number /*uint*/ = 57;\n\n\t/**\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\n\t */\n\tpublic static NUMPAD:number /*uint*/ = 21;\n\n\t/**\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\n\t */\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\n\n\t/**\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\n\t */\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\n\n\t/**\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\n\t */\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\n\n\t/**\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\n\t */\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\n\n\t/**\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\n\t */\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\n\n\t/**\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\n\t */\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\n\n\t/**\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\n\t */\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\n\n\t/**\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\n\t */\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\n\n\t/**\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\n\t */\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\n\n\t/**\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\n\t */\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\n\n\t/**\n\t * Constant associated with the key code value for the addition key on the number pad (107).\n\t */\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\n\n\t/**\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\n\t */\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\n\n\t/**\n\t * Constant associated with the key code value for the division key on the number pad (111).\n\t */\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\n\t */\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\n\n\t/**\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\n\t */\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\n\n\t/**\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\n\t */\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\n\n\t/**\n\t * Constant associated with the key code value for the O key (79).\n\t */\n\tpublic static O:number /*uint*/ = 79;\n\n\t/**\n\t * Constant associated with the key code value for the P key (80).\n\t */\n\tpublic static P:number /*uint*/ = 80;\n\n\t/**\n\t * Constant associated with the key code value for the Page Down key (34).\n\t */\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\n\n\t/**\n\t * Constant associated with the key code value for the Page Up key (33).\n\t */\n\tpublic static PAGE_UP:number /*uint*/ = 33;\n\n\t/**\n\t * Engage pause transport mode\n\t */\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\n\n\t/**\n\t * Constant associated with the key code value for the . key (190).\n\t */\n\tpublic static PERIOD:number /*uint*/ = 190;\n\n\t/**\n\t * Engage play transport mode\n\t */\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\n\n\t/**\n\t * Skip to previous track or chapter\n\t */\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\n\n\t/**\n\t * Constant associated with the key code value for the Q key (81).\n\t */\n\tpublic static Q:number /*uint*/ = 81;\n\n\t/**\n\t * Constant associated with the key code value for the ' key (222).\n\t */\n\tpublic static QUOTE:number /*uint*/ = 222;\n\n\t/**\n\t * Constant associated with the key code value for the R key (82).\n\t */\n\tpublic static R:number /*uint*/ = 82;\n\n\t/**\n\t * Record item or engage record transport mode\n\t */\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\n\n\t/**\n\t * Red function key button\n\t */\n\tpublic static RED:number /*uint*/ = 0x01000000;\n\n\t/**\n\t * Engage rewind transport mode\n\t */\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\n\n\t/**\n\t * Constant associated with the key code value for the Right Arrow key (39).\n\t */\n\tpublic static RIGHT:number /*uint*/ = 39;\n\n\t/**\n\t * Constant associated with the key code value for the ] key (221).\n\t */\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\n\n\t/**\n\t * Constant associated with the key code value for the S key (83).\n\t */\n\tpublic static S:number /*uint*/ = 83;\n\n\t/**\n\t * Search button\n\t */\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\n\n\t/**\n\t * Constant associated with the key code value for the ; key (186).\n\t */\n\tpublic static SEMICOLON:number /*uint*/ = 186;\n\n\t/**\n\t * Engage setup application or menu\n\t */\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\n\n\t/**\n\t * Constant associated with the key code value for the Shift key (16).\n\t */\n\tpublic static SHIFT:number /*uint*/ = 16;\n\n\t/**\n\t * Quick skip backward (usually 7-10 seconds)\n\t */\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\n\n\t/**\n\t * Quick skip ahead (usually 30 seconds)\n\t */\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\n\n\t/**\n\t * Constant associated with the key code value for the / key (191).\n\t */\n\tpublic static SLASH:number /*uint*/ = 191;\n\n\t/**\n\t * Constant associated with the key code value for the Spacebar (32).\n\t */\n\tpublic static SPACE:number /*uint*/ = 32;\n\n\t/**\n\t * Engage stop transport mode\n\t */\n\tpublic static STOP:number /*uint*/ = 0x01000009;\n\n\t/**\n\t * Toggle subtitles\n\t */\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\n\n\t/**\n\t * Constant associated with the key code value for the T key (84).\n\t */\n\tpublic static T:number /*uint*/ = 84;\n\n\t/**\n\t * Constant associated with the key code value for the Tab key (9).\n\t */\n\tpublic static TAB:number /*uint*/ = 9;\n\n\t/**\n\t * Constant associated with the key code value for the U key (85).\n\t */\n\tpublic static U:number /*uint*/ = 85;\n\n\t/**\n\t * Constant associated with the key code value for the Up Arrow key (38).\n\t */\n\tpublic static UP:number /*uint*/ = 38;\n\n\t/**\n\t * Constant associated with the key code value for the V key (86).\n\t */\n\tpublic static V:number /*uint*/ = 86;\n\n\t/**\n\t * Engage video-on-demand\n\t */\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\n\n\t/**\n\t * Constant associated with the key code value for the W key (87).\n\t */\n\tpublic static W:number /*uint*/ = 87;\n\n\t/**\n\t * Constant associated with the key code value for the X key (88).\n\t */\n\tpublic static X:number /*uint*/ = 88;\n\n\t/**\n\t * Constant associated with the key code value for the Y key (89).\n\t */\n\tpublic static Y:number /*uint*/ = 89;\n\n\t/**\n\t * Yellow function key button\n\t */\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\n\n\t/**\n\t * Constant associated with the key code value for the Z key (90).\n\t */\n\tpublic static Z:number /*uint*/ = 90;\n\n}\n\nexport = Keyboard;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nclass ByteArrayBase\n{\n\tpublic position:number = 0;\n\tpublic length:number = 0;\n\tpublic _mode:string = \"\";\n\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\n\t}\n\n\tpublic compareEqual(other, count)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (count > other.length - other.position)\n\t\t\tcount = other.length - other.position;\n\t\tvar co0 = count;\n\t\tvar r = true;\n\t\twhile (r && count >= 4) {\n\t\t\tcount -= 4;\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\n\t\t}\n\t\twhile (r && count >= 1) {\n\t\t\tcount--;\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\n\t\t}\n\t\tvar c0;\n\t\tthis.position -= (c0 - count);\n\t\tother.position -= (c0 - count);\n\t\treturn r;\n\t}\n\n\tpublic writeBase64String(s:string)\n\t{\n\t\tfor (var i:number = 0; i < s.length; i++) {\n\t\t\tvar v = s.charAt(i);\n\t\t}\n\t}\n\n\tpublic dumpToConsole()\n\t{\n\t\tvar oldpos = this.position;\n\t\tthis.position = 0;\n\t\tvar nstep:number = 8;\n\n\t\tfunction asHexString(x, digits)\n\t\t{\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\n\t\t\tvar sh:string = \"\";\n\t\t\tfor (var d:number = 0; d < digits; d++) {\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\n\t\t\t}\n\t\t\treturn sh;\n\t\t}\n\n\t\tfor (var i = 0; i < this.length; i += nstep) {\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\n\t\t\t}\n\t\t\tconsole.log(s);\n\t\t}\n\t\tthis.position = oldpos;\n\t}\n\n\tpublic readBase64String(count:number)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (!(count > 0)) return \"\";\n\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\n\t}\n\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self)\n\t{ // return base64 string of the next count bytes\n\t\tvar r = \"\";\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\n\t\tvar base64Key = ByteArrayBase.Base64Key;\n\t\twhile (count >= 3) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\n\t\t\tenc4 = b2 & 63;\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\n\t\t\tcount -= 3;\n\t\t}\n\t\t// pad\n\t\tif (count == 2) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\n\t\t} else if (count == 1) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\n\t\t}\n\t\treturn r;\n\t}\n}\n\nexport = ByteArrayBase;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArrayBuffer extends ByteArrayBase\n{\n\n\t/*\n\t public maxlength:number = 0;\n\t public arraybytes; //ArrayBuffer\n\t public unalignedarraybytestemp; //ArrayBuffer\n\t */\n\n\tpublic _bytes:number[];\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._bytes = [];\n\t\tthis._mode = \"Array\";\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[this.position++] = bi & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tif (this.position + 2 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\n\t\tthis.position += 2;\n\t\treturn r;\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tif (this.position + 4 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\n\t\tthis.position += 4;\n\t\treturn r >>> 0;\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\t// this is crazy slow and silly, but as a fallback...\n\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\t// don't handle inf/nan yet\n\t\t// special case zero\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\t// remove the sign, after this we only deal with positive numbers\n\t\tvar sign:number = 0;\n\t\tif (x < 0) {\n\t\t\tx = -x;\n\t\t\tsign = 1;\n\t\t} else {\n\t\t\tsign = 0;\n\t\t}\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\n\t\texponent = Math.floor(exponent);\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\n\t\tvar mantissa = Math.floor(x) - 0x800000;\n\t\texponent = exponent + 127;\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\n\t\tif (x >>> 31 != 0) {\n\t\t\ty = -y;\n\t\t}\n\t\treturn y;\n\t}\n\n\t/*\n\t public ensureWriteableSpace( n:number )\n\t {\n\t this.ensureSpace( n + this.position );\n\t }\n\n\t private ensureSpace( n:number )\n\t {\n\t if ( n > this.maxlength ) {\n\t var newmaxlength:number = (n+255)&(~255);\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t newview.set(view);      // memcpy\n\t this.arraybytes = newarraybuffer;\n\t this.maxlength = newmaxlength;\n\t }\n\t }\n\t */\n}\n\nexport = ByteArrayBuffer;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArray extends ByteArrayBase\n{\n\tpublic maxlength:number = 0;\n\tpublic arraybytes; //ArrayBuffer\n\tpublic unalignedarraybytestemp; //ArrayBuffer\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._mode = \"Typed array\";\n\t\tthis.maxlength = 4;\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\n\t}\n\n\tpublic ensureWriteableSpace(n:number)\n\t{\n\t\tthis.ensureSpace(n + this.position);\n\t}\n\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\n\t{\n\n\t\tthis.ensureSpace(aBuffer.byteLength);\n\n\t\tthis.length = aBuffer.byteLength;\n\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\n\n\t\tlocalInt8View.set(inInt8AView);\n\n\t\tthis.position = 0;\n\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\treturn ( this.length ) - ( this.position );\n\t}\n\n\tpublic ensureSpace(n:number)\n\t{\n\t\tif (n > this.maxlength) {\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t\t\tnewview.set(view);      // memcpy\n\t\t\tthis.arraybytes = newarraybuffer;\n\t\t\tthis.maxlength = newmaxlength;\n\t\t}\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\t\tvar view = new Int8Array(this.arraybytes);\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte()\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar view = new Int8Array(this.arraybytes);\n\n\t\treturn view[ this.position++ ];\n\t}\n\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0)\n\t{\n\n\t\tif (length == null) {\n\t\t\tlength = bytes.length;\n\t\t}\n\n\t\tbytes.ensureWriteableSpace(offset + length);\n\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\n\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\n\n\t\tthis.position += length;\n\n\t\tif (length + offset > bytes.length) {\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\n\t\t}\n\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte()\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\treturn view[this.position++];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(2);\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 2;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUTFBytes(len:number):string\n\t{\n\n\t\tvar value:string = \"\";\n\t\tvar max:number = this.position + len;\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\n\t\t// utf8-encode\n\t\twhile (this.position < max) {\n\n\t\t\tvar c:number = data.getUint8(this.position++);\n\n\t\t\tif (c < 0x80) {\n\n\t\t\t\tif (c == 0) break;\n\t\t\t\tvalue += String.fromCharCode(c);\n\n\t\t\t} else if (c < 0xE0) {\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else if (c < 0xF0) {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvar c3 = data.getUint8(this.position++);\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn value;\n\n\t}\n\n\tpublic readInt():number\n\t{\n\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar int:number = data.getInt32(this.position, true);\n\n\t\tthis.position += 4;\n\n\t\treturn int;\n\n\t}\n\n\tpublic readShort():number\n\t{\n\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar short:number = data.getInt16(this.position, true);\n\n\t\tthis.position += 2;\n\t\treturn short;\n\n\t}\n\n\tpublic readDouble():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar double:number = data.getFloat64(this.position, true);\n\n\t\tthis.position += 8;\n\t\treturn double;\n\n\t}\n\n\tpublic readUnsignedShort()\n\t{\n\t\tif (this.position > this.length + 2) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 1;\n\t\t\tthis.position += 2;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 2;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffffffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt()\n\t{\n\n\t\tif (this.position > this.length + 4) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = b;\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = b;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readFloat()\n\t{\n\t\tif (this.position > this.length + 4) {\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tif ((this.position & 3) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tvar pa = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[pa];\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[ 0 ];\n\t\t}\n\t}\n}\n\nexport = ByteArray;",
    "class CSS\n{\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number)\n\t{\n\t\telement.style.width = width + \"px\";\n\t\telement.style.height = height + \"px\";\n\t\telement[\"width\"] = width;\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementWidth(element:HTMLElement, width:number)\n\t{\n\t\telement.style.width = width + \"px\";\n\t\telement[\"width\"] = width;\n\t}\n\n\tpublic static setElementHeight(element:HTMLElement, height:number)\n\t{\n\t\telement.style.height = height + \"px\";\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementX(element:HTMLElement, x:number)\n\t{\n\t\telement.style.position = 'absolute';\n\t\telement.style.left = x + \"px\";\n\t}\n\n\tpublic static setElementY(element:HTMLElement, y:number)\n\t{\n\t\telement.style.position = 'absolute';\n\t\telement.style.top = y + \"px\";\n\t}\n\n\tpublic static getElementVisibility(element:HTMLElement):boolean\n\t{\n\t\treturn element.style.visibility == 'visible';\n\t}\n\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean)\n\t{\n\t\tif (visible) {\n\t\t\telement.style.visibility = 'visible';\n\t\t} else {\n\t\t\telement.style.visibility = 'hidden';\n\t\t}\n\t}\n\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number)\n\t{\n\t\tif (element instanceof HTMLCanvasElement) {\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\n\t\t\tcontext.globalAlpha = alpha;\n\t\t}\n\t}\n\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false)\n\t{\n\t\tif (absolute) {\n\t\t\telement.style.position = \"absolute\";\n\t\t} else {\n\t\t\telement.style.position = \"relative\";\n\t\t}\n\n\t\telement.style.left = x + \"px\";\n\t\telement.style.top = y + \"px\";\n\t}\n}\n\nexport = CSS;",
    "/**\n *\n */\nclass ColorUtils\n{\n\tpublic static float32ColorToARGB(float32Color:number):number[]\n\t{\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\n\t\tvar b:number = float32Color & 0xff;\n\t\tvar result:number[] = [ a, r , g , b ];\n\n\t\treturn result;\n\t}\n\n\tprivate static componentToHex(c:number):string\n\t{\n\t\tvar hex = c.toString(16);\n\t\treturn hex.length == 1? \"0\" + hex : hex;\n\t}\n\n\tpublic static RGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n\n\tpublic static ARGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n}\n\nexport = ColorUtils;",
    "import PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\n\n/**\n *\n */\nclass Debug\n{\n\tpublic static THROW_ERRORS:boolean = true;\n\tpublic static ENABLE_LOG:boolean = true;\n\tpublic static LOG_PI_ERRORS:boolean = true;\n\n\tprivate static keyword:string = null;\n\n\tpublic static breakpoint():void\n\t{\n\t\tDebug['break']();\n\t}\n\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true)\n\t{\n\t\tif (!enable)\n\t\t\tDebug.keyword = null;\n\t\telse\n\t\t\tDebug.keyword = str;\n\t}\n\n\tpublic static throwPIR(clss:string, fnc:string, msg:string)\n\t{\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\n\n\t\tif (Debug.THROW_ERRORS) {\n\t\t\tif (Debug.keyword) {\n\t\t\t\tvar e:string = clss + fnc + msg;\n\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\n\t\t}\n\t}\n\n\tprivate static logPIR(clss:string, fnc:string, msg:string = '')\n\t{\n\t\tif (Debug.LOG_PI_ERRORS)\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\n\t}\n\n\tpublic static log(...args:any[])\n\t{\n\t\tif (Debug.ENABLE_LOG)\n\t\t\tconsole.log(args);\n\t}\n}\n\nexport = Debug;",
    "import getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nclass RequestAnimationFrame\n{\n\tprivate _callback:Function;\n\tprivate _callbackContext:Object;\n\tprivate _active:boolean = false;\n\tprivate _rafUpdateFunction:any;\n\tprivate _prevTime:number;\n\tprivate _dt:number;\n\tprivate _currentTime:number;\n\tprivate _argsArray:Array<any> = new Array();\n\tprivate _getTimer:Function;\n\n\tconstructor(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._getTimer = getTimer;\n\n\t\tthis.setCallback(callback, callbackContext);\n\n\t\tthis._rafUpdateFunction = () => {\n\t\t\tif (this._active)\n\t\t\t\tthis._tick();\n\t\t}\n\n\t\tthis._argsArray.push(this._dt);\n\t}\n\n\t// Public\n\n\t/**\n\t *\n\t * @param callback\n\t * @param callbackContext\n\t */\n\tpublic setCallback(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._callback = callback;\n\t\tthis._callbackContext = callbackContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic start()\n\t{\n\t\tthis._prevTime = this._getTimer();\n\t\tthis._active = true;\n\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\t\t} else {\n\t\t\tif (window['mozRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\n\t\t\telse if (window['webkitRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\n\t\t\telse if (window['oRequestAnimationFrame'])\n\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic stop()\n\t{\n\t\tthis._active = false;\n\t}\n\n\t// Get / Set\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic get active():boolean\n\t{\n\t\treturn this._active;\n\t}\n\n\t// Private\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _tick():void\n\t{\n\t\tthis._currentTime = this._getTimer();\n\t\tthis._dt = this._currentTime - this._prevTime;\n\t\tthis._argsArray[0] = this._dt;\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\n\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\n\t\tthis._prevTime = this._currentTime;\n\t}\n\n\n}\n\nexport = RequestAnimationFrame;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\n\nclass TextureUtils\n{\n\tprivate static MAX_SIZE:number = 2048;\n\n\tpublic static isBitmapDataValid(bitmapData:BitmapData):boolean\n\t{\n\t\tif (bitmapData == null)\n\t\t\treturn true;\n\n\t\treturn TextureUtils.isDimensionValid(bitmapData.width) && TextureUtils.isDimensionValid(bitmapData.height);\n\t}\n\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\n\t{\n\t\tif (image == null)\n\t\t\treturn true;\n\n\t\treturn TextureUtils.isDimensionValid(image.width) && TextureUtils.isDimensionValid(image.height);\n\t}\n\n\tpublic static isDimensionValid(d:number):boolean\n\t{\n\t\treturn d >= 1 && d <= TextureUtils.MAX_SIZE && TextureUtils.isPowerOfTwo(d);\n\t}\n\n\tpublic static isPowerOfTwo(value:number):boolean\n\t{\n\t\treturn value? ((value & -value) == value) : false;\n\t}\n\n\tpublic static getBestPowerOf2(value:number):number\n\t{\n\t\tvar p:number = 1;\n\n\t\twhile (p < value)\n\t\t\tp <<= 1;\n\n\t\tif (p > TextureUtils.MAX_SIZE)\n\t\t\tp = TextureUtils.MAX_SIZE;\n\n\t\treturn p;\n\t}\n}\n\nexport = TextureUtils",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\n\nclass Timer extends EventDispatcher\n{\n\tprivate _delay:number;\n\tprivate _repeatCount:number = 0;\n\tprivate _currentCount:number = 0;\n\tprivate _iid:number;\n\tprivate _running:boolean = false;\n\n\tconstructor(delay:number, repeatCount:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._delay = delay;\n\t\tthis._repeatCount = repeatCount;\n\n\t\tif (isNaN(delay) || delay < 0)\n\t\t\tthrow new Error(\"Delay is negative or not a number\");\n\t}\n\n\tpublic get currentCount():number\n\t{\n\t\treturn this._currentCount;\n\t}\n\n\tpublic get delay():number\n\t{\n\t\treturn this._delay;\n\t}\n\n\tpublic set delay(value:number)\n\t{\n\t\tthis._delay = value;\n\n\t\tif (this._running) {\n\t\t\tthis.stop();\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\tpublic get repeatCount():number\n\t{\n\t\treturn this._repeatCount;\n\t}\n\n\tpublic set repeatCount(value:number)\n\t{\n\t\tthis._repeatCount = value;\n\t}\n\n\tpublic reset():void\n\t{\n\t\tif (this._running)\n\t\t\tthis.stop();\n\n\t\tthis._currentCount = 0;\n\t}\n\n\tpublic get running():boolean\n\t{\n\t\treturn this._running;\n\t}\n\n\tpublic start():void\n\t{\n\t\tthis._running = true;\n\t\tclearInterval(this._iid);\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\n\t}\n\n\tpublic stop():void\n\t{\n\t\tthis._running = false;\n\t\tclearInterval(this._iid);\n\t}\n\n\tprivate tick():void\n\t{\n\t\tthis._currentCount++;\n\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\n\n\t\t\tthis.stop();\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t}\n\t}\n}\n\nexport = Timer;",
    "/**\n *\n *\n * @returns {number}\n */\nfunction getTimer():number\n{\n\t// number milliseconds of 1970/01/01\n\t// this different to AS3 implementation which gets the number of milliseconds\n\t// since instance of Flash player was initialised\n\treturn Date.now();\n}\n\nexport = getTimer;"
  ],
  "sourceRoot": ""
}