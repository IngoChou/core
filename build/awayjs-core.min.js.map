{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-core.js",
    "awayjs-core/lib/attributes/AttributesBuffer.ts",
    "awayjs-core/lib/attributes/AttributesView.ts",
    "awayjs-core/lib/attributes/Byte4Attributes.ts",
    "awayjs-core/lib/attributes/Float1Attributes.ts",
    "awayjs-core/lib/attributes/Float2Attributes.ts",
    "awayjs-core/lib/attributes/Float3Attributes.ts",
    "awayjs-core/lib/attributes/Float4Attributes.ts",
    "awayjs-core/lib/attributes/Short2Attributes.ts",
    "awayjs-core/lib/attributes/Short3Attributes.ts",
    "awayjs-core/lib/data/BitmapImage2D.ts",
    "awayjs-core/lib/data/BitmapImageChannel.ts",
    "awayjs-core/lib/data/BitmapImageCube.ts",
    "awayjs-core/lib/data/BlendMode.ts",
    "awayjs-core/lib/data/CPUCanvas.ts",
    "awayjs-core/lib/data/CPURenderingContext2D.ts",
    "awayjs-core/lib/data/Image2D.ts",
    "awayjs-core/lib/data/ImageBase.ts",
    "awayjs-core/lib/data/ImageCube.ts",
    "awayjs-core/lib/data/ImageData.ts",
    "awayjs-core/lib/data/Sampler2D.ts",
    "awayjs-core/lib/data/SamplerBase.ts",
    "awayjs-core/lib/data/SamplerCube.ts",
    "awayjs-core/lib/data/SpecularImage2D.ts",
    "awayjs-core/lib/data/WaveAudio.ts",
    "awayjs-core/lib/errors/AbstractMethodError.ts",
    "awayjs-core/lib/errors/ArgumentError.ts",
    "awayjs-core/lib/errors/DocumentError.ts",
    "awayjs-core/lib/errors/Error.ts",
    "awayjs-core/lib/errors/PartialImplementationError.ts",
    "awayjs-core/lib/errors/RangeError.ts",
    "awayjs-core/lib/events/AssetEvent.ts",
    "awayjs-core/lib/events/EventDispatcher.ts",
    "awayjs-core/lib/events/Event.ts",
    "awayjs-core/lib/events/HTTPStatusEvent.ts",
    "awayjs-core/lib/events/IOErrorEvent.ts",
    "awayjs-core/lib/events/LoaderEvent.ts",
    "awayjs-core/lib/events/ParserEvent.ts",
    "awayjs-core/lib/events/ProgressEvent.ts",
    "awayjs-core/lib/events/ProjectionEvent.ts",
    "awayjs-core/lib/events/TimerEvent.ts",
    "awayjs-core/lib/geom/Box.ts",
    "awayjs-core/lib/geom/ColorTransform.ts",
    "awayjs-core/lib/geom/MathConsts.ts",
    "awayjs-core/lib/geom/Matrix3DUtils.ts",
    "awayjs-core/lib/geom/Matrix3D.ts",
    "awayjs-core/lib/geom/Matrix.ts",
    "awayjs-core/lib/geom/Orientation3D.ts",
    "awayjs-core/lib/geom/PerspectiveProjection.ts",
    "awayjs-core/lib/geom/Plane3D.ts",
    "awayjs-core/lib/geom/PlaneClassification.ts",
    "awayjs-core/lib/geom/Point.ts",
    "awayjs-core/lib/geom/PoissonLookup.ts",
    "awayjs-core/lib/geom/Quaternion.ts",
    "awayjs-core/lib/geom/Rectangle.ts",
    "awayjs-core/lib/geom/Sphere.ts",
    "awayjs-core/lib/geom/UVTransform.ts",
    "awayjs-core/lib/geom/Vector3D.ts",
    "awayjs-core/lib/library/AssetBase.ts",
    "awayjs-core/lib/library/AssetLibraryBundle.ts",
    "awayjs-core/lib/library/AssetLibraryIterator.ts",
    "awayjs-core/lib/library/AssetLibrary.ts",
    "awayjs-core/lib/library/ConflictPrecedence.ts",
    "awayjs-core/lib/library/ConflictStrategyBase.ts",
    "awayjs-core/lib/library/ConflictStrategy.ts",
    "awayjs-core/lib/library/ErrorConflictStrategy.ts",
    "awayjs-core/lib/library/IDUtil.ts",
    "awayjs-core/lib/library/IgnoreConflictStrategy.ts",
    "awayjs-core/lib/library/LoaderContext.ts",
    "awayjs-core/lib/library/LoaderSession.ts",
    "awayjs-core/lib/library/NumSuffixConflictStrategy.ts",
    "awayjs-core/lib/managers/AudioChannel.ts",
    "awayjs-core/lib/managers/AudioManager.ts",
    "awayjs-core/lib/managers/EventAudioChannel.ts",
    "awayjs-core/lib/managers/StreamingAudioChannel.ts",
    "awayjs-core/lib/managers/WebAudioChannel.ts",
    "awayjs-core/lib/net/CrossDomainPolicy.ts",
    "awayjs-core/lib/net/URLLoaderDataFormat.ts",
    "awayjs-core/lib/net/URLLoader.ts",
    "awayjs-core/lib/net/URLRequestMethod.ts",
    "awayjs-core/lib/net/URLRequest.ts",
    "awayjs-core/lib/net/URLVariables.ts",
    "awayjs-core/lib/parsers/Image2DParser.ts",
    "awayjs-core/lib/parsers/ImageCubeParser.ts",
    "awayjs-core/lib/parsers/ParserBase.ts",
    "awayjs-core/lib/parsers/ParserDataFormat.ts",
    "awayjs-core/lib/parsers/ParserUtils.ts",
    "awayjs-core/lib/parsers/ResourceDependency.ts",
    "awayjs-core/lib/parsers/TextureAtlasParser.ts",
    "awayjs-core/lib/parsers/WaveAudioParser.ts",
    "awayjs-core/lib/projections/CoordinateSystem.ts",
    "awayjs-core/lib/projections/FreeMatrixProjection.ts",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection.ts",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection.ts",
    "awayjs-core/lib/projections/OrthographicProjection.ts",
    "awayjs-core/lib/projections/PerspectiveProjection.ts",
    "awayjs-core/lib/projections/ProjectionBase.ts",
    "awayjs-core/lib/ui/Keyboard.ts",
    "awayjs-core/lib/utils/BitmapImageUtils.ts",
    "awayjs-core/lib/utils/ByteArrayBase.ts",
    "awayjs-core/lib/utils/ByteArrayBuffer.ts",
    "awayjs-core/lib/utils/ByteArray.ts",
    "awayjs-core/lib/utils/CSS.ts",
    "awayjs-core/lib/utils/ColorUtils.ts",
    "awayjs-core/lib/utils/Debug.ts",
    "awayjs-core/lib/utils/Extensions.ts",
    "awayjs-core/lib/utils/ImageUtils.ts",
    "awayjs-core/lib/utils/MipmapGenerator.ts",
    "awayjs-core/lib/utils/RequestAnimationFrame.ts",
    "awayjs-core/lib/utils/Timer.ts",
    "awayjs-core/lib/utils/XmlUtils.ts",
    "awayjs-core/lib/utils/getTimer.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AttributesBuffer",
    "_super",
    "stride",
    "count",
    "_attributesBufferVO",
    "Array",
    "_count",
    "_stride",
    "_newStride",
    "_viewVOs",
    "_buffer",
    "ArrayBuffer",
    "_bufferView",
    "Uint8Array",
    "byteLength",
    "Object",
    "defineProperty",
    "get",
    "assetType",
    "enumerable",
    "configurable",
    "_lengthDirty",
    "_updateLength",
    "set",
    "value",
    "invalidateLength",
    "_contentDirty",
    "buffer",
    "invalidateContent",
    "len",
    "invalidate",
    "dispose",
    "clone",
    "attributesBuffer",
    "bufferView",
    "view",
    "_internalClone",
    "getView",
    "index",
    "_setAttributes",
    "viewIndex",
    "arrayBufferView",
    "offset",
    "array",
    "viewVO",
    "vLength",
    "vOffset",
    "vCount",
    "subarray",
    "_getLocalArrayBuffer",
    "localBuffer",
    "localBufferView",
    "_iAddAttributesBufferVO",
    "AttributesBufferVO",
    "push",
    "_iRemoveAttributesBufferVO",
    "splice",
    "indexOf",
    "_addView",
    "ViewVO",
    "_index",
    "_removeView",
    "_getOffset",
    "j",
    "newLength",
    "newBuffer",
    "newView",
    "vOldOffset",
    "oldOffset",
    "Math",
    "min",
    "size",
    "dimensions",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-core/lib/attributes/AttributesView",
    "AttributesView",
    "arrayClass",
    "attributesBufferCount",
    "_arrayClass",
    "_size",
    "BYTES_PER_ELEMENT",
    "_dimensions",
    "_attributesBuffer",
    "values",
    "_localArrayBuffer",
    "_cloneCache",
    "cloneCache",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "Byte4Attributes",
    "attributesBufferLength",
    "unsigned",
    "Int8Array",
    "awayjs-core/lib/attributes/Float1Attributes",
    "Float1Attributes",
    "Float32Array",
    "awayjs-core/lib/attributes/Float2Attributes",
    "Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "Float3Attributes",
    "awayjs-core/lib/attributes/Float4Attributes",
    "Float4Attributes",
    "awayjs-core/lib/attributes/Short2Attributes",
    "Short2Attributes",
    "Uint16Array",
    "Int16Array",
    "awayjs-core/lib/attributes/Short3Attributes",
    "Short3Attributes",
    "awayjs-core/lib/data/BitmapImage2D",
    "Image2D",
    "ColorUtils",
    "BitmapImageUtils",
    "CPUCanvas",
    "BitmapImage2D",
    "width",
    "height",
    "transparent",
    "fillColor",
    "powerOfTwo",
    "_locked",
    "_transparent",
    "document",
    "_imageCanvas",
    "createElement",
    "_context",
    "getContext",
    "fillRect",
    "_rect",
    "draw",
    "colorTransform",
    "rect",
    "_imageData",
    "getImageData",
    "data",
    "x",
    "y",
    "redMultiplier",
    "redOffset",
    "greenMultiplier",
    "greenOffset",
    "blueMultiplier",
    "blueOffset",
    "alphaMultiplier",
    "alphaOffset",
    "putImageData",
    "copyChannel",
    "sourceBitmap",
    "sourceRect",
    "destPoint",
    "sourceChannel",
    "destChannel",
    "imageData",
    "sourceData",
    "destData",
    "sourceOffset",
    "round",
    "log",
    "destOffset",
    "sourceIndex",
    "destIndex",
    "copyPixels",
    "source",
    "destRect",
    "getCanvas",
    "_copyPixels",
    "matrix",
    "blendMode",
    "clipRect",
    "smoothing",
    "_draw",
    "color",
    "_fillRect",
    "getPixel",
    "g",
    "pixelData",
    "getPixel32",
    "lock",
    "setArray",
    "inputArray",
    "argb",
    "float32ColorToARGB",
    "setPixel",
    "setPixel32",
    "setPixels",
    "inputByteArray",
    "position",
    "readUnsignedInt",
    "unlock",
    "_setSize",
    "awayjs-core/lib/data/CPUCanvas",
    "awayjs-core/lib/data/Image2D",
    "awayjs-core/lib/utils/BitmapImageUtils",
    "awayjs-core/lib/utils/ColorUtils",
    "awayjs-core/lib/data/BitmapImageChannel",
    "BitmapImageChannel",
    "ALPHA",
    "BLUE",
    "GREEN",
    "RED",
    "awayjs-core/lib/data/BitmapImageCube",
    "ImageCube",
    "Rectangle",
    "BitmapImageCube",
    "side",
    "posX",
    "negX",
    "posY",
    "negY",
    "posZ",
    "negZ",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/data/BlendMode",
    "BlendMode",
    "ADD",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "NORMAL",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "SUBTRACT",
    "CPURenderingContext2D",
    "ImageData",
    "reset",
    "contextId",
    "awayjs-core/lib/data/CPURenderingContext2D",
    "awayjs-core/lib/data/ImageData",
    "Matrix",
    "Point",
    "cpuCanvas",
    "point",
    "restore",
    "setTransform",
    "m11",
    "m12",
    "m21",
    "m22",
    "dx",
    "dy",
    "save",
    "arc",
    "radius",
    "startAngle",
    "endAngle",
    "anticlockwise",
    "measureText",
    "text",
    "undefined",
    "isPointInPath",
    "fillRule",
    "quadraticCurveTo",
    "cpx",
    "cpy",
    "imagedata",
    "dirtyX",
    "dirtyY",
    "dirtyWidth",
    "dirtyHeight",
    "rotate",
    "angle",
    "fillText",
    "maxWidth",
    "translate",
    "scale",
    "createRadialGradient",
    "x0",
    "y0",
    "r0",
    "x1",
    "y1",
    "r1",
    "lineTo",
    "getLineDash",
    "fill",
    "createImageData",
    "imageDataOrSw",
    "sh",
    "createPattern",
    "image",
    "repetition",
    "closePath",
    "w",
    "h",
    "clip",
    "clearRect",
    "moveTo",
    "sx",
    "sy",
    "sw",
    "copyPixel32",
    "target",
    "fromX",
    "fromY",
    "floor",
    "fromIndex",
    "fillStyle",
    "parsedFillStyle",
    "colorStrings",
    "substring",
    "lastIndexOf",
    "split",
    "parsedA",
    "parseFloat",
    "parsedR",
    "parseInt",
    "parsedG",
    "parsedB",
    "bezierCurveTo",
    "cp1x",
    "cp1y",
    "cp2x",
    "cp2y",
    "drawImage",
    "offsetX",
    "offsetY",
    "canvasOffsetX",
    "canvasOffsetY",
    "canvasImageWidth",
    "canvasImageHeight",
    "toString",
    "bitmap",
    "drawBitmap",
    "htmlImage",
    "htmlCanvas",
    "htmlContext",
    "htmlImageData",
    "resultBitmap",
    "passBitmap",
    "canvas",
    "tx",
    "ty",
    "invert",
    "transformPoint",
    "scaleX",
    "scaleY",
    "transform",
    "stroke",
    "strokeRect",
    "setLineDash",
    "segments",
    "strokeText",
    "beginPath",
    "arcTo",
    "x2",
    "y2",
    "createLinearGradient",
    "awayjs-core/lib/geom/Matrix",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/data/IImageCanvas",
    "ImageBase",
    "ImageUtils",
    "_powerOfTwo",
    "_testDimensions",
    "invalidateSize",
    "isDimensionValid",
    "awayjs-core/lib/data/ImageBase",
    "awayjs-core/lib/utils/ImageUtils",
    "_imageObject",
    "_pFormat",
    "_iAddImageObject",
    "ImageObject",
    "_iRemoveImageObject",
    "awayjs-core/lib/data/Sampler2D",
    "SamplerBase",
    "Sampler2D",
    "repeat",
    "smooth",
    "mipmap",
    "_repeat",
    "_updateRect",
    "_imageRect",
    "_frameRect",
    "awayjs-core/lib/data/SamplerBase",
    "_smooth",
    "_mipmap",
    "awayjs-core/lib/data/SamplerCube",
    "SamplerCube",
    "awayjs-core/lib/data/SpecularImage2D",
    "SpecularImage2D",
    "specularSource",
    "glossSource",
    "_specularSource",
    "_glossSource",
    "_output",
    "_testSize",
    "origin",
    "awayjs-core/lib/data/WaveAudio",
    "AudioManager",
    "WaveAudio",
    "_volume",
    "_audioChannel",
    "volume",
    "currentTime",
    "duration",
    "stop",
    "play",
    "loop",
    "getChannel",
    "id",
    "newInstance",
    "name",
    "awayjs-core/lib/managers/AudioManager",
    "awayjs-core/lib/errors/AbstractMethodError",
    "AbstractMethodError",
    "message",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/ArgumentError",
    "ArgumentError",
    "awayjs-core/lib/errors/DocumentError",
    "DocumentError",
    "DOCUMENT_DOES_NOT_EXIST",
    "_name",
    "_errorID",
    "_messsage",
    "awayjs-core/lib/errors/PartialImplementationError",
    "PartialImplementationError",
    "dependency",
    "awayjs-core/lib/errors/RangeError",
    "RangeError",
    "awayjs-core/lib/events/AssetEvent",
    "Event",
    "AssetEvent",
    "type",
    "asset",
    "prevName",
    "_asset",
    "_prevName",
    "assetPrevName",
    "ASSET_COMPLETE",
    "ASSET_RENAME",
    "ASSET_CONFLICT_RESOLVED",
    "TEXTURE_SIZE_ERROR",
    "awayjs-core/lib/events/Event",
    "awayjs-core/lib/events/EventDispatcher",
    "EventDispatcher",
    "listeners",
    "addEventListener",
    "listener",
    "getEventListenerIndex",
    "removeEventListener",
    "dispatchEvent",
    "event",
    "listenerArray",
    "hasEventListener",
    "COMPLETE",
    "OPEN",
    "ENTER_FRAME",
    "EXIT_FRAME",
    "RESIZE",
    "ERROR",
    "CHANGE",
    "awayjs-core/lib/events/HTTPStatusEvent",
    "HTTPStatusEvent",
    "status",
    "HTTP_STATUS",
    "awayjs-core/lib/events/IEventDispatcher",
    "awayjs-core/lib/events/IOErrorEvent",
    "IOErrorEvent",
    "IO_ERROR",
    "awayjs-core/lib/events/LoaderEvent",
    "LoaderEvent",
    "url",
    "content",
    "assets",
    "_url",
    "_content",
    "_assets",
    "RESOURCE_COMPLETE",
    "awayjs-core/lib/events/ParserEvent",
    "ParserEvent",
    "_message",
    "PARSE_COMPLETE",
    "PARSE_ERROR",
    "READY_FOR_DEPENDENCIES",
    "awayjs-core/lib/events/ProgressEvent",
    "ProgressEvent",
    "PROGRESS",
    "awayjs-core/lib/events/ProjectionEvent",
    "ProjectionEvent",
    "projection",
    "_projection",
    "MATRIX_CHANGED",
    "awayjs-core/lib/events/TimerEvent",
    "TimerEvent",
    "TIMER",
    "TIMER_COMPLETE",
    "awayjs-core/lib/geom/Box",
    "Vector3D",
    "Box",
    "z",
    "depth",
    "val",
    "_bottomRightBack",
    "_topLeftFront",
    "contains",
    "containsPoint",
    "containsBox",
    "box",
    "copyFrom",
    "sourceBox",
    "equals",
    "toCompare",
    "inflate",
    "dz",
    "inflatePoint",
    "delta",
    "intersection",
    "toIntersect",
    "intersects",
    "rayIntersection",
    "direction",
    "targetNormal",
    "halfExtentsX",
    "halfExtentsY",
    "halfExtentsZ",
    "centerX",
    "centerY",
    "centerZ",
    "px",
    "py",
    "pz",
    "vx",
    "vy",
    "vz",
    "ix",
    "iy",
    "iz",
    "rayEntryDistance",
    "closestPointToPoint",
    "isEmpty",
    "offsetPosition",
    "setEmpty",
    "setTo",
    "xa",
    "ya",
    "za",
    "widtha",
    "heighta",
    "deptha",
    "union",
    "toUnion",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/geom/ColorTransform",
    "ColorTransform",
    "clear",
    "copyTo",
    "destination",
    "prepend",
    "ct",
    "awayjs-core/lib/geom/MathConsts",
    "MathConsts",
    "RADIANS_TO_DEGREES",
    "PI",
    "DEGREES_TO_RADIANS",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "Matrix3D",
    "Matrix3DUtils",
    "quaternion2matrix",
    "quarternion",
    "m",
    "xx",
    "xy",
    "xz",
    "xw",
    "yy",
    "yz",
    "yw",
    "zz",
    "zw",
    "raw",
    "RAW_DATA_CONTAINER",
    "copyRawDataFrom",
    "getForward",
    "v",
    "copyColumnTo",
    "normalize",
    "getUp",
    "getRight",
    "compare",
    "m1",
    "m2",
    "r2",
    "rawData",
    "copyRawDataTo",
    "lookAt",
    "pos",
    "dir",
    "up",
    "dirN",
    "upN",
    "lftN",
    "crossProduct",
    "dotProduct",
    "reflection",
    "plane",
    "c",
    "ab2",
    "ac2",
    "bc2",
    "transformVector",
    "vector",
    "result",
    "k",
    "deltaTransformVector",
    "getTranslation",
    "deltaTransformVectors",
    "vin",
    "vout",
    "outIndex",
    "CALCULATION_MATRIX",
    "awayjs-core/lib/geom/Matrix3D",
    "Orientation3D",
    "identity",
    "append",
    "lhs",
    "lrd",
    "m111",
    "m112",
    "m113",
    "m114",
    "m121",
    "m122",
    "m123",
    "m124",
    "m131",
    "m132",
    "m133",
    "m134",
    "m141",
    "m142",
    "m143",
    "m144",
    "m211",
    "m212",
    "m213",
    "m214",
    "m221",
    "m222",
    "m223",
    "m224",
    "m231",
    "m232",
    "m233",
    "m234",
    "m241",
    "m242",
    "m243",
    "m244",
    "appendRotation",
    "degrees",
    "axis",
    "getAxisRotation",
    "appendSkew",
    "xSkew",
    "ySkew",
    "zSkew",
    "tempRawData",
    "tempMatrix",
    "appendScale",
    "xScale",
    "yScale",
    "zScale",
    "appendTranslation",
    "copyColumnFrom",
    "column",
    "vector3D",
    "sourceMatrix3D",
    "sourceRaw",
    "transpose",
    "copyRowFrom",
    "row",
    "copyRowTo",
    "copyToMatrix3D",
    "dest",
    "decompose",
    "orientationStyle",
    "q",
    "_components",
    "colX",
    "colY",
    "colZ",
    "skew",
    "scaleBy",
    "combine",
    "rot",
    "AXIS_ANGLE",
    "acos",
    "sqrt",
    "QUATERNION",
    "tr",
    "EULER_ANGLES",
    "asin",
    "atan2",
    "interpolate",
    "thisMat",
    "toMat",
    "percent",
    "interpolateTo",
    "determinant",
    "invertable",
    "abs",
    "m13",
    "m14",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "m41",
    "m42",
    "m43",
    "m44",
    "rhs",
    "prependRotation",
    "prependScale",
    "prependTranslation",
    "recompose",
    "components",
    "sin",
    "cos",
    "rotation",
    "transformBox",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "transformVectors",
    "rad",
    "tmp1",
    "tmp2",
    "_position",
    "toFixed",
    "decimalPlace",
    "magnitude",
    "pow",
    "awayjs-core/lib/geom/Orientation3D",
    "concat",
    "a1",
    "c1",
    "tx1",
    "sourceMatrix",
    "createBox",
    "createGradientBox",
    "deltaTransformPoint",
    "norm",
    "multiply",
    "awayjs-core/lib/geom/PerspectiveProjection",
    "PerspectiveProjection",
    "toMatrix3D",
    "_matrix3D",
    "awayjs-core/lib/geom/Plane3D",
    "PlaneClassification",
    "Plane3D",
    "_iAlignment",
    "ALIGN_XY_AXIS",
    "ALIGN_YZ_AXIS",
    "ALIGN_XZ_AXIS",
    "ALIGN_ANY",
    "fromPoints",
    "p0",
    "p1",
    "p2",
    "d1x",
    "d1y",
    "d1z",
    "d2x",
    "d2y",
    "d2z",
    "fromNormalAndPoint",
    "normal",
    "distance",
    "classifyPoint",
    "epsilon",
    "FRONT",
    "BACK",
    "INTERSECT",
    "awayjs-core/lib/geom/PlaneClassification",
    "IN",
    "OUT",
    "add",
    "sourcePoint",
    "thickness",
    "invLength",
    "subtract",
    "pt1",
    "pt2",
    "polar",
    "awayjs-core/lib/geom/PoissonLookup",
    "PoissonLookup",
    "initDistributions",
    "_distributions",
    "getDistribution",
    "awayjs-core/lib/geom/Quaternion",
    "Quaternion",
    "qa",
    "qb",
    "w1",
    "z1",
    "w2",
    "z2",
    "multiplyVector",
    "fromAxisAngle",
    "sin_a",
    "cos_a",
    "slerp",
    "dot",
    "s1",
    "s2",
    "lerp",
    "fromEulerAngles",
    "ax",
    "ay",
    "az",
    "halfX",
    "halfY",
    "halfZ",
    "cosX",
    "sinX",
    "cosY",
    "sinY",
    "cosZ",
    "sinZ",
    "toEulerAngles",
    "mag",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "ww",
    "fromMatrix",
    "toRawData",
    "exclude4thRow",
    "rotatePoint",
    "_bottomRight",
    "_topLeft",
    "containsRect",
    "offsetPoint",
    "awayjs-core/lib/geom/Sphere",
    "Sphere",
    "det",
    "sqrtDet",
    "awayjs-core/lib/geom/UVTransform",
    "UVTransform",
    "_uvMatrix",
    "_rotation",
    "_scaleU",
    "_scaleV",
    "_offsetU",
    "_offsetV",
    "_uvMatrixDirty",
    "updateUVMatrix",
    "lengthSquared",
    "angleBetween",
    "ascl",
    "bscl",
    "src",
    "decrementBy",
    "allFour",
    "incrementBy",
    "nearEquals",
    "tolerance",
    "negate",
    "project",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "_id",
    "ID_COUNT",
    "_originalName",
    "updateFullPath",
    "prev",
    "_clearInterfaces",
    "_namespace",
    "_full_path",
    "assetPathEquals",
    "ns",
    "isAsset",
    "assetClass",
    "resetAssetPath",
    "overrideOriginal",
    "DEFAULT_NAMESPACE",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "AssetLibraryIterator",
    "LoaderSession",
    "ConflictPrecedence",
    "ConflictStrategy",
    "AssetLibraryBundle",
    "_this",
    "_loaderSessionsGarbage",
    "_assetDictionary",
    "_loaderSessions",
    "conflictStrategy",
    "IGNORE",
    "create",
    "conflictPrecedence",
    "FAVOR_NEW",
    "_onAssetRenameDelegate",
    "onAssetRename",
    "_onAssetConflictResolvedDelegate",
    "onAssetConflictResolved",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "getInstance",
    "key",
    "_iInstances",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "_strategy",
    "_strategyPreference",
    "createIterator",
    "assetTypeFilter",
    "namespaceFilter",
    "filterFunc",
    "load",
    "req",
    "context",
    "parser",
    "getLoaderSession",
    "loadData",
    "loader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "disposeLoaderSession",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "getAsset",
    "_assetDictDirty",
    "rehashAssetDict",
    "getAllAssets",
    "addAsset",
    "old",
    "assetNamespace",
    "resolveConflict",
    "removeAsset",
    "idx",
    "removeAssetFromDict",
    "removeAssetByName",
    "removeAllAssets",
    "removeNamespaceAssets",
    "old_assets",
    "autoRemoveEmptyNamespace",
    "empty",
    "stopAllLoaderSessions",
    "killloaderSession",
    "pop",
    "clearTimeout",
    "dict",
    "awayjs-core/lib/library/AssetLibraryIterator",
    "awayjs-core/lib/library/ConflictPrecedence",
    "awayjs-core/lib/library/ConflictStrategy",
    "awayjs-core/lib/library/LoaderSession",
    "filter",
    "_idx",
    "_filtered",
    "next",
    "setIndex",
    "awayjs-core/lib/library/AssetLibrary",
    "AssetLibrary",
    "getBundle",
    "stopLoad",
    "FAVOR_OLD",
    "awayjs-core/lib/library/ConflictStrategyBase",
    "ConflictStrategyBase",
    "changedAsset",
    "oldAsset",
    "assetsDictionary",
    "precedence",
    "_pUpdateNames",
    "nonConflictingName",
    "newAsset",
    "loser_prev_name",
    "winner",
    "loser",
    "ErrorConflictStrategy",
    "IgnoreConflictStrategy",
    "NumSuffixConflictStrategy",
    "include",
    "APPEND_NUM_SUFFIX",
    "THROW_ERROR",
    "awayjs-core/lib/library/ErrorConflictStrategy",
    "awayjs-core/lib/library/IgnoreConflictStrategy",
    "awayjs-core/lib/library/NumSuffixConflictStrategy",
    "assetFullPath",
    "awayjs-core/lib/library/IAssetClass",
    "awayjs-core/lib/library/IAsset",
    "awayjs-core/lib/library/IDUtil",
    "IDUtil",
    "createUID",
    "uid",
    "ALPHA_CHAR_CODES",
    "random",
    "time",
    "Date",
    "getTime",
    "timeString",
    "toUpperCase",
    "substr",
    "charCodeAt",
    "String",
    "fromCharCode",
    "apply",
    "awayjs-core/lib/library/IWrapperClass",
    "awayjs-core/lib/library/LoaderContext",
    "LoaderContext",
    "includeDependencies",
    "dependencyBaseUrl",
    "_includeDependencies",
    "_dependencyBaseUrl",
    "_embeddedDataByUrl",
    "_remappedUrls",
    "_materialMode",
    "UNDEFINED",
    "materialMode",
    "_overrideAbsPath",
    "_overrideFullUrls",
    "mapUrl",
    "originalUrl",
    "newUrl",
    "mapUrlToData",
    "_iHasDataForUrl",
    "_iGetDataForUrl",
    "_iHasMappingForUrl",
    "_iGetRemappedUrl",
    "SINGLEPASS_MATERIALS",
    "MULTIPASS_MATERIALS",
    "URLLoader",
    "URLLoaderDataFormat",
    "Image2DParser",
    "ImageCubeParser",
    "TextureAtlasParser",
    "ResourceDependency",
    "WaveAudioParser",
    "_stack",
    "_errorHandlers",
    "_parseErrorHandlers",
    "_onReadyForDependenciesDelegate",
    "onReadyForDependencies",
    "_onParseCompleteDelegate",
    "onParseComplete",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_parsers",
    "parsers",
    "_baseDependency",
    "_uri",
    "replace",
    "retrieveDependency",
    "retrieveNext",
    "_currentDependency",
    "dependencies",
    "parsingPaused",
    "_iResumeParsing",
    "_iSuccess",
    "resolve",
    "_iLoader",
    "addEventListeners",
    "request",
    "Function",
    "_iSetData",
    "retrieveAsRawData",
    "parseDependency",
    "resolveDependencyUrl",
    "dataFormat",
    "BINARY",
    "_iSetParser",
    "getParserFromSuffix",
    "joinUrl",
    "base",
    "end",
    "charAt",
    "scheme_re",
    "RegExp",
    "overrideAbsolutePaths",
    "test",
    "overrideFullURLs",
    "noscheme_url",
    "retrieveParserDependencies",
    "parserDependancies",
    "resolveParserDependencies",
    "handled",
    "isDependency",
    "removeEventListeners",
    "resolveFailure",
    "suppresAssetEvents",
    "resolveName",
    "handler",
    "getParserFromData",
    "supportsData",
    "_iFileName",
    "parseAsync",
    "fileExtension",
    "toLowerCase",
    "supportsType",
    "awayjs-core/lib/net/URLLoader",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/parsers/Image2DParser",
    "awayjs-core/lib/parsers/ImageCubeParser",
    "awayjs-core/lib/parsers/ResourceDependency",
    "awayjs-core/lib/parsers/TextureAtlasParser",
    "awayjs-core/lib/parsers/WaveAudioParser",
    "separator",
    "_separator",
    "_next_suffix",
    "orig",
    "new_name",
    "suffix",
    "isNaN",
    "awayjs-core/lib/managers/AudioChannel",
    "AudioChannel",
    "_isPlaying",
    "_isLooping",
    "_audioCtx",
    "window",
    "_gainNode",
    "createGain",
    "connect",
    "_audio",
    "Audio",
    "onended",
    "_onEnded",
    "createMediaElementSource",
    "gain",
    "isPlaying",
    "isLooping",
    "isDecoding",
    "pause",
    "maxChannels",
    "_channels",
    "StreamingAudioChannel",
    "WebAudioChannel",
    "channelClass",
    "channel",
    "awayjs-core/lib/managers/StreamingAudioChannel",
    "awayjs-core/lib/managers/WebAudioChannel",
    "awayjs-core/lib/managers/EventAudioChannel",
    "ParserUtils",
    "EventAudioChannel",
    "_startTime",
    "ontimeupdate",
    "_onTimeUpdate",
    "_duration",
    "_base64Cache",
    "arrayBufferToBase64",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-core/lib/managers/IAudioChannelClass",
    "awayjs-core/lib/managers/IAudioChannel",
    "_sourceOpenDelegate",
    "_sourceOpen",
    "_updateEndDelegate",
    "_updateEnd",
    "_updateSource",
    "_sourceDirty",
    "_offset",
    "_isQueuing",
    "_isOpening",
    "_queueBuffer",
    "_mediaSource",
    "activeSourceBuffers",
    "console",
    "_sourceBuffer",
    "addSourceBuffer",
    "timestampOffset",
    "appendBuffer",
    "endOfStream",
    "_disposeSource",
    "MediaSource",
    "_urlString",
    "URL",
    "createObjectURL",
    "remove",
    "removeSourceBuffer",
    "revokeObjectURL",
    "_isDecoding",
    "_onEndedDelegate",
    "_currentTime",
    "_decodeCache",
    "_onDecodeComplete",
    "_errorCache",
    "decodeAudioData",
    "_onError",
    "_source",
    "createBufferSource",
    "start",
    "error",
    "disconnect",
    "awayjs-core/lib/net/CrossDomainPolicy",
    "CrossDomainPolicy",
    "ANONYMOUS",
    "USE_CREDENTIALS",
    "TEXT",
    "VARIABLES",
    "BLOB",
    "ARRAY_BUFFER",
    "URLRequestMethod",
    "URLVariables",
    "AwayEvent",
    "AwayProgressEvent",
    "_bytesLoaded",
    "_bytesTotal",
    "_dataFormat",
    "_loadError",
    "_request",
    "_data",
    "format",
    "initXHR",
    "method",
    "POST",
    "postRequest",
    "getRequest",
    "isSupported",
    "close",
    "_XHR",
    "abort",
    "disposeXHR",
    "setResponseType",
    "xhr",
    "responseType",
    "open",
    "async",
    "send",
    "handleXmlHttpRequestException",
    "urlVars",
    "formData",
    "XMLHttpRequest",
    "onloadstart",
    "onLoadStart",
    "onprogress",
    "onProgress",
    "onabort",
    "onAbort",
    "onerror",
    "onload",
    "ontimeout",
    "onTimeOut",
    "onloadend",
    "onLoadEnd",
    "onreadystatechange",
    "onReadyStateChange",
    "decodeURLVariables",
    "join",
    "tokens",
    "re",
    "exec",
    "decodeURIComponent",
    "readyState",
    "_loadErrorEvent",
    "_progressEvent",
    "bytesTotal",
    "total",
    "bytesLoaded",
    "loaded",
    "_loadStartEvent",
    "responseText",
    "response",
    "_loadCompleteEvent",
    "awayjs-core/lib/net/URLRequestMethod",
    "awayjs-core/lib/net/URLVariables",
    "GET",
    "awayjs-core/lib/net/URLRequest",
    "URLRequest",
    "_variables",
    "decode",
    "obj",
    "fd",
    "FormData",
    "ParserBase",
    "ByteArray",
    "extension",
    "HTMLImageElement",
    "ba",
    "readUnsignedShort",
    "readShort",
    "readUTFBytes",
    "readByte",
    "_pProceedParsing",
    "sizeError",
    "_loadingImage",
    "MORE_TO_PARSE",
    "_htmlImageElement",
    "isHTMLImageElementValid",
    "imageToBitmapImage2D",
    "_pFinalizeAsset",
    "htmlImageElement",
    "byteArrayToImage",
    "arrayBufferToImage",
    "Blob",
    "blobToImage",
    "_pContent",
    "PARSING_DONE",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/utils/ByteArray",
    "JSON",
    "parse",
    "_iResolveDependency",
    "resourceDependency",
    "_iResolveDependencyFailure",
    "_imgDependencyDictionary",
    "_getBitmapImage2D",
    "json",
    "rec",
    "_pDieWithError",
    "_pAddDependency",
    "_validateCubeData",
    "_pPauseAndRetrieveDependencies",
    "Timer",
    "getTimer",
    "_dependencies",
    "_pOnIntervalDelegate",
    "_pOnInterval",
    "isBitmapImage2DValid",
    "bitmapImage2D",
    "isValid",
    "isImage2DValid",
    "_parsingFailure",
    "_parsingPaused",
    "_parsingComplete",
    "newMaterialMode",
    "frameLimit",
    "_pStartParsing",
    "_iResolveDependencyName",
    "_timer",
    "_isParsing",
    "type_event",
    "type_name",
    "suppressErrorEvents",
    "sub_id",
    "_pPauseParsing",
    "_pHasTime",
    "_lastFrameTime",
    "_frameLimit",
    "_pFinishParsing",
    "_pGetTextData",
    "_pGetByteData",
    "toByteArray",
    "_pGetData",
    "awayjs-core/lib/utils/Timer",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-core/lib/parsers/ParserDataFormat",
    "ParserDataFormat",
    "PLAIN_TEXT",
    "IMAGE",
    "mimeType",
    "byteStr",
    "bytes",
    "base64Image",
    "btoa",
    "arrayBufferToAudio",
    "fileType",
    "str",
    "audio",
    "img",
    "Image",
    "arraybytes",
    "byteArrayToAudio",
    "filetype",
    "URLObj",
    "blobToAudio",
    "bitmapData",
    "setArrayBuffer",
    "getBytesAvailable",
    "parentParser",
    "suppressAssetEvents",
    "_sub_id",
    "_parser",
    "_parentParser",
    "_retrieveAsRawData",
    "_suppressAssetEvents",
    "XmlUtils",
    "_parseState",
    "TextureAtlasParserState",
    "PARSE_SUBTEXTURES",
    "nodes",
    "PARSE_XML",
    "_doc",
    "getChildrenWithTag",
    "strToXml",
    "_imagePath",
    "readAttributeValue",
    "_subTextureNodes",
    "PARSE_IMAGE",
    "sampler",
    "element",
    "imageRect",
    "frameRect",
    "awayjs-core/lib/utils/XmlUtils",
    "parseFileType",
    "awayjs-core/lib/pool/IImageObject",
    "awayjs-core/lib/projections/CoordinateSystem",
    "CoordinateSystem",
    "LEFT_HANDED",
    "RIGHT_HANDED",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ProjectionBase",
    "FreeMatrixProjection",
    "_pMatrix",
    "_pNear",
    "_pFar",
    "_pAspectRatio",
    "pInvalidateMatrix",
    "pUpdateMatrix",
    "_pMatrixInvalid",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-core/lib/projections/ProjectionBase",
    "awayjs-core/lib/projections/IProjection",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection",
    "ObliqueNearPlaneProjection",
    "baseProjection",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_baseProjection",
    "frustumCorners",
    "near",
    "far",
    "_iAspectRatio",
    "_plane",
    "cx",
    "cy",
    "cz",
    "cw",
    "signX",
    "signY",
    "inverse",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "OrthographicOffCenterProjection",
    "_minX",
    "_maxX",
    "_minY",
    "_maxY",
    "unproject",
    "nX",
    "nY",
    "sZ",
    "unprojectionMatrix",
    "_pFrustumCorners",
    "awayjs-core/lib/projections/OrthographicProjection",
    "OrthographicProjection",
    "projectionHeight",
    "_projectionHeight",
    "_yMax",
    "_xMax",
    "left",
    "right",
    "top",
    "bottom",
    "_pScissorRect",
    "_pViewPort",
    "xWidth",
    "yHgt",
    "center",
    "middle",
    "fieldOfView",
    "coordinateSystem",
    "_fieldOfView",
    "_focalLength",
    "_hFieldOfView",
    "_hFocalLength",
    "_preserveAspectRatio",
    "_preserveFocalLength",
    "tan",
    "_pCoordinateSystem",
    "atan",
    "tanMinX",
    "_pOriginX",
    "tanMaxX",
    "tanMinY",
    "_pOriginY",
    "tanMaxY",
    "_unprojectionInvalid",
    "point3d",
    "_unprojection",
    "_iUpdateScissorRect",
    "_iUpdateViewport",
    "awayjs-core/lib/ui/Keyboard",
    "Keyboard",
    "A",
    "ALTERNATE",
    "AUDIO",
    "B",
    "BACKQUOTE",
    "BACKSLASH",
    "BACKSPACE",
    "C",
    "CAPS_LOCK",
    "CHANNEL_DOWN",
    "CHANNEL_UP",
    "COMMA",
    "COMMAND",
    "CONTROL",
    "D",
    "DELETE",
    "DOWN",
    "DVR",
    "E",
    "END",
    "ENTER",
    "EQUAL",
    "ESCAPE",
    "EXIT",
    "F",
    "F1",
    "F10",
    "F11",
    "F12",
    "F13",
    "F14",
    "F15",
    "F2",
    "F3",
    "F4",
    "F5",
    "F6",
    "F7",
    "F8",
    "F9",
    "FAST_FORWARD",
    "G",
    "GUIDE",
    "H",
    "HELP",
    "HOME",
    "I",
    "INFO",
    "INPUT",
    "INSERT",
    "J",
    "K",
    "KEYNAME_BEGIN",
    "KEYNAME_BREAK",
    "KEYNAME_CLEARDISPLAY",
    "KEYNAME_CLEARLINE",
    "KEYNAME_DELETE",
    "KEYNAME_DELETECHAR",
    "KEYNAME_DELETELINE",
    "KEYNAME_DOWNARROW",
    "KEYNAME_END",
    "KEYNAME_EXECUTE",
    "KEYNAME_F1",
    "KEYNAME_F10",
    "KEYNAME_F11",
    "KEYNAME_F12",
    "KEYNAME_F13",
    "KEYNAME_F14",
    "KEYNAME_F15",
    "KEYNAME_F16",
    "KEYNAME_F17",
    "KEYNAME_F18",
    "KEYNAME_F19",
    "KEYNAME_F2",
    "KEYNAME_F20",
    "KEYNAME_F21",
    "KEYNAME_F22",
    "KEYNAME_F23",
    "KEYNAME_F24",
    "KEYNAME_F25",
    "KEYNAME_F26",
    "KEYNAME_F27",
    "KEYNAME_F28",
    "KEYNAME_F29",
    "KEYNAME_F3",
    "KEYNAME_F30",
    "KEYNAME_F31",
    "KEYNAME_F32",
    "KEYNAME_F33",
    "KEYNAME_F34",
    "KEYNAME_F35",
    "KEYNAME_F4",
    "KEYNAME_F5",
    "KEYNAME_F6",
    "KEYNAME_F7",
    "KEYNAME_F8",
    "KEYNAME_F9",
    "KEYNAME_FIND",
    "KEYNAME_HELP",
    "KEYNAME_HOME",
    "KEYNAME_INSERT",
    "KEYNAME_INSERTCHAR",
    "KEYNAME_INSERTLINE",
    "KEYNAME_LEFTARROW",
    "KEYNAME_MENU",
    "KEYNAME_MODESWITCH",
    "KEYNAME_NEXT",
    "KEYNAME_PAGEDOWN",
    "KEYNAME_PAGEUP",
    "KEYNAME_PAUSE",
    "KEYNAME_PREV",
    "KEYNAME_PRINT",
    "KEYNAME_PRINTSCREEN",
    "KEYNAME_REDO",
    "KEYNAME_RESET",
    "KEYNAME_RIGHTARROW",
    "KEYNAME_SCROLLLOCK",
    "KEYNAME_SELECT",
    "KEYNAME_STOP",
    "KEYNAME_SYSREQ",
    "KEYNAME_SYSTEM",
    "KEYNAME_UNDO",
    "KEYNAME_UPARROW",
    "KEYNAME_USER",
    "L",
    "LAST",
    "LEFT",
    "LEFTBRACKET",
    "LIVE",
    "M",
    "MASTER_SHELL",
    "MENU",
    "MINUS",
    "N",
    "NEXT",
    "NUMBER_0",
    "NUMBER_1",
    "NUMBER_2",
    "NUMBER_3",
    "NUMBER_4",
    "NUMBER_5",
    "NUMBER_6",
    "NUMBER_7",
    "NUMBER_8",
    "NUMBER_9",
    "NUMPAD",
    "NUMPAD_0",
    "NUMPAD_1",
    "NUMPAD_2",
    "NUMPAD_3",
    "NUMPAD_4",
    "NUMPAD_5",
    "NUMPAD_6",
    "NUMPAD_7",
    "NUMPAD_8",
    "NUMPAD_9",
    "NUMPAD_ADD",
    "NUMPAD_DECIMAL",
    "NUMPAD_DIVIDE",
    "NUMPAD_ENTER",
    "NUMPAD_MULTIPLY",
    "NUMPAD_SUBTRACT",
    "O",
    "P",
    "PAGE_DOWN",
    "PAGE_UP",
    "PAUSE",
    "PERIOD",
    "PLAY",
    "PREVIOUS",
    "Q",
    "QUOTE",
    "R",
    "RECORD",
    "REWIND",
    "RIGHT",
    "RIGHTBRACKET",
    "S",
    "SEARCH",
    "SEMICOLON",
    "SETUP",
    "SHIFT",
    "SKIP_BACKWARD",
    "SKIP_FORWARD",
    "SLASH",
    "SPACE",
    "STOP",
    "SUBTITLE",
    "T",
    "TAB",
    "U",
    "UP",
    "V",
    "VOD",
    "W",
    "X",
    "Y",
    "YELLOW",
    "Z",
    "bmpd",
    "awayjs-core/lib/utils/ByteArrayBase",
    "ByteArrayBase",
    "_mode",
    "writeByte",
    "writeUnsignedByte",
    "readUnsignedByte",
    "writeUnsignedShort",
    "writeUnsignedInt",
    "writeFloat",
    "toFloatBits",
    "readFloat",
    "fromFloatBits",
    "compareEqual",
    "other",
    "co0",
    "c0",
    "writeBase64String",
    "dumpToConsole",
    "oldpos",
    "nstep",
    "asHexString",
    "digits",
    "lut",
    "readBase64String",
    "internalGetBase64String",
    "getUnsignedByteFunc",
    "self",
    "b0",
    "b1",
    "b2",
    "enc1",
    "enc2",
    "enc3",
    "enc4",
    "base64Key",
    "Base64Key",
    "awayjs-core/lib/utils/ByteArrayBuffer",
    "ByteArrayBuffer",
    "_bytes",
    "bi",
    "Number",
    "sign",
    "exponent",
    "mantissa",
    "maxlength",
    "max",
    "unalignedarraybytestemp",
    "ensureWriteableSpace",
    "ensureSpace",
    "aBuffer",
    "inInt8AView",
    "localInt8View",
    "newmaxlength",
    "newarraybuffer",
    "newview",
    "readBytes",
    "byteView",
    "localByteView",
    "view2",
    "view3",
    "DataView",
    "getUint8",
    "c2",
    "c3",
    "readInt",
    "int",
    "getInt32",
    "short",
    "getInt16",
    "readDouble",
    "double",
    "getFloat64",
    "pa",
    "Uint32Array",
    "awayjs-core/lib/utils/CSS",
    "CSS",
    "setElementSize",
    "style",
    "setElementWidth",
    "setElementHeight",
    "setElementX",
    "setElementY",
    "getElementVisibility",
    "visibility",
    "setElementVisibility",
    "visible",
    "setElementAlpha",
    "alpha",
    "HTMLCanvasElement",
    "globalAlpha",
    "setElementPosition",
    "absolute",
    "float32Color",
    "ARGBtoFloat32",
    "componentToHex",
    "hex",
    "RGBToHexString",
    "ARGBToHexString",
    "awayjs-core/lib/utils/Debug",
    "Debug",
    "breakpoint",
    "throwPIROnKeyWordOnly",
    "enable",
    "keyword",
    "throwPIR",
    "clss",
    "fnc",
    "msg",
    "logPIR",
    "THROW_ERRORS",
    "LOG_PI_ERRORS",
    "args",
    "_i",
    "arguments",
    "ENABLE_LOG",
    "awayjs-core/lib/utils/Extensions",
    "Extensions",
    "SIMD",
    "Boolean",
    "awayjs-core/lib/utils/IArrayBufferViewClass",
    "image2D",
    "MAX_SIZE",
    "isPowerOfTwo",
    "getBestPowerOf2",
    "awayjs-core/lib/utils/MipmapGenerator",
    "MipmapGenerator",
    "_generateMipMaps",
    "output",
    "_getMipmapHolder",
    "_matrix",
    "mipMapHolder",
    "newW",
    "newH",
    "_freeMipMapHolder",
    "_mipMaps",
    "_mipMapUses",
    "holderWidth",
    "holderHeight",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "RequestAnimationFrame",
    "callback",
    "callbackContext",
    "_active",
    "_argsArray",
    "_getTimer",
    "setCallback",
    "_rafUpdateFunction",
    "_tick",
    "_dt",
    "_callback",
    "_callbackContext",
    "_prevTime",
    "requestAnimationFrame",
    "delay",
    "repeatCount",
    "_repeatCount",
    "_currentCount",
    "_running",
    "_delay",
    "clearInterval",
    "_iid",
    "setInterval",
    "tick",
    "node",
    "tag",
    "fragment",
    "createDocumentFragment",
    "num",
    "childNodes",
    "child",
    "nodeName",
    "appendChild",
    "filterListByParam",
    "paramName",
    "paramValue",
    "attributes",
    "getNamedItem",
    "DOMParser",
    "parseFromString",
    "nodeToString",
    "XMLSerializer",
    "serializeToString",
    "attrName",
    "attrs",
    "attribute",
    "writeAttributeValue",
    "attrValue",
    "Attr",
    "setNamedItem",
    "hasAttribute",
    "now",
    "awayjs-core/lib/vos/IAttributesBufferVO",
    "awayjs-core/lib/vos/IAttributesVO"
  ],
  "mappings": "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",
  "file": "awayjs-core.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAttributesBufferVO\t\t= require(\"awayjs-core/lib/vos/IAttributesBufferVO\");\n\nclass AttributesBuffer extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[assets AttributesBuffer]\";\n\n\tprivate _attributesBufferVO:Array<IAttributesBufferVO> = new Array<IAttributesBufferVO>();\n\tprivate _count:number = 0;\n\tprivate _stride:number = 0;\n\tprivate _newStride:number = 0;\n\n\tprivate _buffer:ArrayBuffer;\n\tprivate _bufferView:Uint8Array;\n\tprivate _contentDirty:boolean;\n\tprivate _lengthDirty:boolean;\n\tprivate _viewVOs:Array<ViewVO> = new Array<ViewVO>();\n\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesBuffer.assetType;\n\t}\n\n\tpublic get stride():number\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\treturn this._stride;\n\t}\n\n\tpublic set stride(value:number)\n\t{\n\t\tif (this._newStride == value)\n\t\t\treturn;\n\n\t\tthis._newStride = value;\n\n\t\tthis.invalidateLength();\n\t}\n\t\n\tpublic get count():number\n\t{\n\t\treturn this._count;\n\t}\n\t\n\tpublic set count(value:number)\n\t{\n\t\tif (this._count == value)\n\t\t\treturn;\n\t\t\n\t\tthis._count = value;\n\t\t\n\t\tthis.invalidateLength();\n\t}\n\n\n\tpublic get buffer():ArrayBuffer\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._buffer;\n\t}\n\n\n\tpublic get bufferView():Uint8Array\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._bufferView;\n\t}\n\n\tpublic set bufferView(value:Uint8Array)\n\t{\n\t\tthis._bufferView = value;\n\t\tthis._buffer = this._bufferView.buffer;\n\t}\n\n\tpublic get length()\n\t{\n\t\treturn this._count*this.stride;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tconstructor(stride:number = 0, count:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._stride = this._newStride = stride;\n\t\tthis._count = count;\n\n\t\tthis._buffer = new ArrayBuffer(this._stride*this._count);\n\t\tthis._bufferView = new Uint8Array(this._buffer, 0, this._buffer.byteLength);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tif (this._contentDirty)\n\t\t\treturn;\n\n\t\tvar len:number = this._attributesBufferVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._attributesBufferVO[i].invalidate();\n\n\t\tthis._contentDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateLength():void\n\t{\n\t\tif (this._lengthDirty)\n\t\t\treturn;\n\n\t\tfor (var i:number = this._attributesBufferVO.length - 1; i >= 0; i--)\n\t\t\tthis._attributesBufferVO[i].dispose();\n\n\t\tthis._lengthDirty = true;\n\n\t\t//dispose buffer if stride is 0\n\t\tif (!this._newStride) {\n\t\t\tthis._buffer = null;\n\t\t\tthis._bufferView = null;\n\t\t}\n\t}\n\n\tpublic clone():AttributesBuffer\n\t{\n\t\tvar attributesBuffer:AttributesBuffer = new AttributesBuffer(this._stride, this._count);\n\t\tattributesBuffer.bufferView.set(this.bufferView);\n\n\t\tvar len:number = this._viewVOs.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._viewVOs[i].view._internalClone(attributesBuffer);\n\n\t\treturn attributesBuffer;\n\t}\n\n\tpublic getView(index:number):AttributesView\n\t{\n\t\tif (index < this._viewVOs.length)\n\t\t\treturn this._viewVOs[index].view;\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._attributesBufferVO.length)\n\t\t\tthis._attributesBufferVO[0].dispose();\n\t}\n\n\tpublic _setAttributes(viewIndex:number, arrayBufferView:ArrayBufferView, offset:number = 0)\n\t{\n\t\tvar array:Uint8Array = (arrayBufferView instanceof Uint8Array)? <Uint8Array> arrayBufferView : new Uint8Array(arrayBufferView.buffer);\n\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\t\tvar vCount:number = array.length/vLength;\n\n\t\t//make sure there is enough space in the buffer\n\t\tif (this.count < vCount + offset)\n\t\t\tthis.count = vCount + offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1) {\n\t\t\tthis._bufferView.set(array);\n\t\t} else {\n\t\t\tfor (var i:number = 0; i < vCount; i++)\n\t\t\t\tthis._bufferView.set(array.subarray(i*vLength, (i+1)*vLength), (i+offset)*this._stride + vOffset);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\tpublic _getLocalArrayBuffer(viewIndex:number):ArrayBuffer\n\t{\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1)\n\t\t\treturn this._buffer;\n\n\t\tvar localBuffer:ArrayBuffer = new ArrayBuffer(this._count*vLength);\n\t\tvar localBufferView:Uint8Array = new Uint8Array(localBuffer);\n\n\t\tfor (var i:number = 0; i < this._count; i++)\n\t\t\tlocalBufferView.set(this._bufferView.subarray(i*this._stride + vOffset, i*this._stride + vOffset + vLength), i*vLength);\n\n\t\treturn localBuffer;\n\t}\n\n\tpublic _iAddAttributesBufferVO(AttributesBufferVO:IAttributesBufferVO):IAttributesBufferVO\n\t{\n\t\tthis._attributesBufferVO.push(AttributesBufferVO);\n\n\t\treturn AttributesBufferVO;\n\t}\n\n\tpublic _iRemoveAttributesBufferVO(AttributesBufferVO:IAttributesBufferVO):IAttributesBufferVO\n\t{\n\t\tthis._attributesBufferVO.splice(this._attributesBufferVO.indexOf(AttributesBufferVO), 1);\n\n\t\treturn AttributesBufferVO;\n\t}\n\n\tpublic _addView(view:AttributesView)\n\t{\n\t\tvar viewVO:ViewVO = new ViewVO(view);\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.offset = len? this._viewVOs[len - 1].offset + this._viewVOs[len - 1].length : 0;\n\n\t\tthis._viewVOs.push(viewVO);\n\n\t\tif (this._newStride < viewVO.offset + viewVO.length) {\n\t\t\tthis._newStride = viewVO.offset + viewVO.length;\n\t\t\tthis.invalidateLength();\n\t\t}\n\n\t\tview._index = len;\n\t}\n\n\tpublic _removeView(view:AttributesView)\n\t{\n\t\tvar viewIndex:number = view._index;\n\t\tvar viewVO:ViewVO = this._viewVOs.splice(viewIndex, 1)[0];\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.dispose();\n\n\t\tfor (var i:number = viewIndex; i < len; i++) {\n\t\t\tviewVO = this._viewVOs[i];\n\t\t\tviewVO.offset = i? this._viewVOs[i - 1].offset + this._viewVOs[i - 1].length : 0;\n\t\t\tviewVO.view._index = i;\n\t\t}\n\n\t\tthis._newStride = viewVO.offset + viewVO.length;\n\n\t\tthis.invalidateLength();\n\t}\n\n\tpublic _getOffset(viewIndex:number):number\n\t{\n\t\treturn this._viewVOs[viewIndex].offset;\n\t}\n\n\tpublic _updateLength()\n\t{\n\t\tthis._lengthDirty = false;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tvar newLength:number = this._newStride*this._count;\n\n\t\tif (!this._buffer || this._buffer.byteLength != newLength) {\n\t\t\tvar newBuffer:ArrayBuffer = new ArrayBuffer(newLength);\n\t\t\tvar newView:Uint8Array = new Uint8Array(newBuffer, 0, newBuffer.byteLength);\n\t\t\tvar viewVO:ViewVO;\n\t\t\tvar vLength:number;\n\t\t\tvar vOffset:number;\n\t\t\tvar vOldOffset:number;\n\n\t\t\tif (this._stride != this._newStride) {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tviewVO = this._viewVOs[i];\n\t\t\t\t\tvLength = viewVO.length;\n\t\t\t\t\tvOffset = viewVO.offset;\n\t\t\t\t\tvOldOffset = viewVO.oldOffset;\n\t\t\t\t\tfor (j = 0; j < this._count; j++)\n\t\t\t\t\t\tif (vOldOffset != null)\n\t\t\t\t\t\t\tnewView.set(new Uint8Array(this._buffer, j*this._stride + vOldOffset, vLength), j*this._newStride + vOffset);\n\n\t\t\t\t\tviewVO.oldOffset = viewVO.offset;\n\t\t\t\t}\n\n\t\t\t\tthis._stride = this._newStride;\n\t\t\t} else {\n\t\t\t\tnewView.set(new Uint8Array(this._buffer, 0, Math.min(newLength, this._buffer.byteLength))); //TODO: bypass quantisation of bytearray on instantiation\n\t\t\t}\n\n\t\t\tthis._buffer = newBuffer;\n\t\t\tthis._bufferView = newView;\n\t\t}\n\t}\n}\n\nclass ViewVO\n{\n\tpublic view:AttributesView;\n\n\tpublic length;\n\n\tpublic offset;\n\n\tpublic oldOffset;\n\n\tconstructor(view:AttributesView)\n\t{\n\t\tthis.view = view;\n\t\tthis.length = view.size*view.dimensions;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.view = null;\n\t}\n\n\tpublic clone():ViewVO\n\t{\n\t\treturn new ViewVO(this.view);\n\t}\n}\n\nexport = AttributesBuffer;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass AttributesView extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[attributes AttributesView]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesView.assetType;\n\t}\n\n\tpublic _cloneCache:AttributesView;\n\tpublic _attributesBuffer:AttributesBuffer;\n\tpublic _bufferDirty:boolean;\n\tprivate _size:number;\n\tprivate _dimensions:number;\n\n\tpublic _index:number;\n\tpublic _arrayClass:IArrayBufferViewClass;\n\n\tpublic _localArrayBuffer:ArrayBuffer;\n\n\tpublic normalized:boolean;\n\n\tpublic get buffer():AttributesBuffer\n\t{\n\t\treturn this._attributesBuffer;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._size = value;\n\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get dimensions():number\n\t{\n\t\treturn this._dimensions;\n\t}\n\n\tpublic set dimensions(value:number)\n\t{\n\t\tif (this._dimensions == value)\n\t\t\treturn;\n\n\t\tthis._dimensions = value;\n\n\t\t//reset view\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this._attributesBuffer.count;\n\t}\n\n\tpublic set count(value:number)\n\t{\n\t\tthis._attributesBuffer.count = value;\n\t}\n\n\tpublic get offset():number\n\t{\n\t\treturn this._attributesBuffer._getOffset(this._index);\n\t}\n\n\tpublic get length():number\n\t{\n\t\treturn this._attributesBuffer.count*this._dimensions;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, count?:number);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBuffer?:AttributesBuffer);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBufferCount:any = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._arrayClass = arrayClass;\n\t\tthis._size = arrayClass.BYTES_PER_ELEMENT;\n\t\tthis._dimensions = dimensions;\n\t\tthis._attributesBuffer = (attributesBufferCount instanceof AttributesBuffer)? <AttributesBuffer> attributesBufferCount : new AttributesBuffer(this._dimensions*this._size, attributesBufferCount);\n\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tthis._attributesBuffer._setAttributes(this._index, (values instanceof Array)? new (this._arrayClass)(values) : <ArrayBufferView> values, offset);\n\n\t\tthis._localArrayBuffer = null;\n\t}\n\n\tpublic get(count:number, offset:number = 0):ArrayBufferView\n\t{\n\t\tif (!this._localArrayBuffer)\n\t\t\tthis._localArrayBuffer = this._attributesBuffer._getLocalArrayBuffer(this._index);\n\n\t\tvar len:number = this._dimensions*this._size;\n\t\treturn new (this._arrayClass)(this._localArrayBuffer, offset*len, count*this._dimensions);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):AttributesView\n\t{\n\t\treturn (this._cloneCache = new AttributesView(this._arrayClass, this._dimensions, attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):AttributesView\n\t{\n\t\tif (attributesBuffer)\n\t\t\tthis._internalClone(attributesBuffer);\n\n\t\tif (!this._cloneCache)\n\t\t\tthis._attributesBuffer.clone();\n\n\t\tvar cloneCache:AttributesView = this._cloneCache;\n\t\tthis._cloneCache = null;\n\n\t\treturn cloneCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer = null;\n\t\tthis._localArrayBuffer = null;\n\t}\n}\n\nexport = AttributesView;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Byte4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Byte4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Byte4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint8Array : Int8Array, 4, attributesBufferLength);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(typedArray:Uint8Array, offset?:number);\n\tpublic set(typedArray:Int8Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint8Array;\n\tpublic get(count:number, offset?:number):Int8Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte4Attributes\n\t{\n\t\treturn (this._cloneCache = new Byte4Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte4Attributes\n\t{\n\t\treturn <Byte4Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Byte4Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float1Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float1Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float1Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 1, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float1Attributes\n\t{\n\t\treturn (this._cloneCache = new Float1Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float1Attributes\n\t{\n\t\treturn <Float1Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float1Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 2, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float2Attributes\n\t{\n\t\treturn (this._cloneCache = new Float2Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float2Attributes\n\t{\n\t\treturn <Float2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float2Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 3, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\treturn (this._cloneCache = new Float3Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float3Attributes\n\t{\n\t\treturn <Float3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float3Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 4, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float4Attributes\n\t{\n\t\treturn (this._cloneCache = new Float4Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float4Attributes\n\t{\n\t\treturn <Float4Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float4Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Short2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 2, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short2Attributes\n\t{\n\t\treturn (this._cloneCache = new Short2Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short2Attributes\n\t{\n\t\treturn <Short2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Short2Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Short3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 3, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short3Attributes\n\t{\n\t\treturn (this._cloneCache = new Short3Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short3Attributes\n\t{\n\t\treturn <Short3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Short3Attributes;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport IImageCanvas\t\t\t\t= require(\"awayjs-core/lib/data/IImageCanvas\");\nimport CPUCanvas = require('awayjs-core/lib/data/CPUCanvas');\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[image BitmapImage2D]\";\n\n\tprivate _imageCanvas:IImageCanvas;\n\tprivate _context:CanvasRenderingContext2D;\n\tprivate _imageData:ImageData;\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImage2D.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null, powerOfTwo:boolean = true)\n\t{\n\t\tsuper(width, height, powerOfTwo);\n\n\t\tthis._transparent = transparent;\n\t\tif(document) {\n\t\t\tthis._imageCanvas = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\t}else {\n\t\t\tthis._imageCanvas = new CPUCanvas();\n\t\t}\n\t\tthis._imageCanvas.width = width;\n\t\tthis._imageCanvas.height = height;\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\n\n\t\tif (fillColor != null)\n\t\t\tthis.fillRect(this._rect, fillColor);\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImage2D\n\t{\n\t\tvar t:BitmapImage2D = new BitmapImage2D(this.width, this.height, this.transparent, null, this.powerOfTwo);\n\t\tt.draw(this);\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar data:Array<number> = this._imageData.data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\n\t\tvar destData:Array<number> = this._imageData.data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:HTMLElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._context = null;\n\t\tthis._imageCanvas = null;\n\t\tthis._imageData = null;\n\t\tthis._rect = null;\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (source instanceof BitmapImage2D && source.getCanvas()){\n\t\t\tsource = source.getCanvas();\n\t\t}\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageData.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\t\tthis._imageData.data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageData.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\tthis._imageData = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\treturn this._imageData;\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn <HTMLCanvasElement> this._imageCanvas;\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tif (this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tif(this._imageCanvas) {\n\t\t\tthis._imageCanvas.width = width;\n\t\t\tthis._imageCanvas.height = height;\n\t\t}\n\t\t\n\t\tsuper._setSize(width, height);\n\n\t\tif (this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n}\n\nexport = BitmapImage2D;",
    "class BitmapImageChannel\n{\n\tpublic static ALPHA:number /*uint*/ = 8;\n\tpublic static BLUE:number /*uint*/ = 4;\n\tpublic static GREEN:number /*uint*/ = 2;\n\tpublic static RED:number /*uint*/ = 1;\n}\n\nexport = BitmapImageChannel;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\n\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapImageCube extends ImageCube\n{\n\tpublic static assetType:string = \"[image BitmapImageCube]\";\n\n\tpublic static posX:number = 0;\n\tpublic static negX:number = 1;\n\tpublic static posY:number = 2;\n\tpublic static negY:number = 3;\n\tpublic static posZ:number = 4;\n\tpublic static negZ:number = 5;\n\n\tprivate _imageCanvas:Array<HTMLCanvasElement> = new Array<HTMLCanvasElement>(6);\n\tprivate _context:Array<CanvasRenderingContext2D> = new Array<CanvasRenderingContext2D>(6);\n\tprivate _imageData:Array<ImageData> = new Array<ImageData>(6);\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImageCube.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(size:number, transparent:boolean = true, fillColor:number = null)\n\t{\n\t\tsuper(size);\n\n\t\tthis._transparent = transparent;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._imageCanvas[i] = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\t\t\tthis._context[i] = this._imageCanvas[i].getContext(\"2d\");\n\n\t\t\tif (fillColor != null)\n\t\t\t\tthis.fillRect(i, new Rectangle(0, 0, size, size), fillColor);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImageCube\n\t{\n\t\tvar t:BitmapImageCube = new BitmapImageCube(this._size, this.transparent);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tt.draw(i, this.getCanvas(i));\n\t\t}\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(side:number, rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar data:Array<number> = this._imageData[side].data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(side:number, sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\n\t\tvar destData:Array<number> = this._imageData[side].data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this._size)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(side:number, source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i] = null;\n\t\t\tthis._imageCanvas[i] = null;\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(side:number, source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(side:number, rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(side:number, x:number, y:number):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(side:number, x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(side:number, rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\t\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\t\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\t\t\tthis._imageData[side].data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(side:number, x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(side:number, x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(side:number, rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidateContent();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0); // at coords 0,0\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData(side:number):ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\treturn this._imageData[side];\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas(side:number):HTMLCanvasElement\n\t{\n\t\treturn this._imageCanvas[side];\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number)\n\t{\n\t\tsuper._setSize(size);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tif (this._locked)\n\t\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0);\n\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\n\t\t\tif (this._locked)\n\t\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t\t}\n\t}\n}\n\nexport = BitmapImageCube;",
    "/**\n * A class that provides constant values for visual blend mode effects. These\n * constants are used in the following:\n * <ul>\n *   <li> The <code>blendMode</code> property of the\n * flash.display.DisplayObject class.</li>\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\n * method of the flash.display.BitmapData class</li>\n * </ul>\n */\nclass BlendMode\n{\n\t/**\n\t * Adds the values of the constituent colors of the display object to the\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\n\t * commonly used for animating a lightening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\n\t */\n\tpublic static ADD:string = \"add\";\n\n\t/**\n\t * Applies the alpha value of each pixel of the display object to the\n\t * background. This requires the <code>blendMode</code> property of the\n\t * parent display object be set to\n\t * <code>away.base.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ALPHA:string = \"alpha\";\n\n\t/**\n\t * Selects the darker of the constituent colors of the display object and the\n\t * colors of the background(the colors with the smaller values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static DARKEN:string = \"darken\";\n\n\t/**\n\t * Compares the constituent colors of the display object with the colors of\n\t * its background, and subtracts the darker of the values of the two\n\t * constituent colors from the lighter value. This setting is commonly used\n\t * for more vibrant colors.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\n\t */\n\tpublic static DIFFERENCE:string = \"difference\";\n\n\t/**\n\t * Erases the background based on the alpha value of the display object. This\n\t * process requires that the <code>blendMode</code> property of the parent\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ERASE:string = \"erase\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the display\n\t * object. If the display object is lighter than 50% gray, the display object\n\t * and background colors are screened, which results in a lighter color. If\n\t * the display object is darker than 50% gray, the colors are multiplied,\n\t * which results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static HARDLIGHT:string = \"hardlight\";\n\n\t/**\n\t * Inverts the background.\n\t */\n\tpublic static INVERT:string = \"invert\";\n\n\t/**\n\t * Forces the creation of a transparency group for the display object. This\n\t * means that the display object is precomposed in a temporary buffer before\n\t * it is processed further. The precomposition is done automatically if the\n\t * display object is precached by means of bitmap caching or if the display\n\t * object is a display object container that has at least one child object\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LAYER:string = \"layer\";\n\n\t/**\n\t * Selects the lighter of the constituent colors of the display object and\n\t * the colors of the background(the colors with the larger values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LIGHTEN:string = \"lighten\";\n\n\t/**\n\t * Multiplies the values of the display object constituent colors by the\n\t * constituent colors of the background color, and normalizes by dividing by\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\n\t * shadows and depth effects.\n\t *\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\n\t * display object and the corresponding color of the pixel in the background\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\n\t * shade than the color of the display object or the color of the\n\t * background.</p>\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * The display object appears in front of the background. Pixel values of the\n\t * display object override the pixel values of the background. Where the\n\t * display object is transparent, the background is visible.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the background.\n\t * If the background is lighter than 50% gray, the display object and\n\t * background colors are screened, which results in a lighter color. If the\n\t * background is darker than 50% gray, the colors are multiplied, which\n\t * results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static OVERLAY:string = \"overlay\";\n\n\t/**\n\t * Multiplies the complement(inverse) of the display object color by the\n\t * complement of the background color, resulting in a bleaching effect. This\n\t * setting is commonly used for highlights or to remove black areas of the\n\t * display object.\n\t */\n\tpublic static SCREEN:string = \"screen\";\n\n\t/**\n\t * Uses a shader to define the blend between objects.\n\t *\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\n\t * automatically sets the display object's <code>blendMode</code> property to\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\n\t * set to <code>BlendMode.SHADER</code> without first setting the\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\n\t * <code>blendShader</code> property is set(which sets the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\n\t * later the value of the <code>blendMode</code> property is changed, the\n\t * blend mode can be reset to use the blend shader simply by setting the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\n\t * <code>blendShader</code> property does not need to be set again except to\n\t * change the shader that's used to define the blend mode.</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static SHADER:string = \"shader\";\n\n\t/**\n\t * Subtracts the values of the constituent colors in the display object from\n\t * the values of the background color, applying a floor of 0. This setting is\n\t * commonly used for animating a darkening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\n\t */\n\tpublic static SUBTRACT:string = \"subtract\";\n}\n\nexport = BlendMode;",
    "import IImageCanvas                = require(\"awayjs-core/lib/data/IImageCanvas\");\nimport CPURenderingContext2D = require('awayjs-core/lib/data/CPURenderingContext2D');\nimport ImageData = require('awayjs-core/lib/data/ImageData');\n\nclass CPUCanvas implements IImageCanvas {\n    width:number = 1;\n    height:number = 1;\n\n    private imageData:ImageData;\n\n    getContext(contextId:string):CanvasRenderingContext2D {\n        return new CPURenderingContext2D(this);\n    }\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset() {\n        if (!this.imageData) {\n            this.imageData = new ImageData(this.width, this.height);\n        }\n        this.imageData.width = this.width;\n        this.imageData.height = this.height;\n\n        for (var i:number = 0; i < this.width * this.height * 4; i += 4) {\n            this.imageData.data[i] = 255;\n            this.imageData.data[i + 1] = 255;\n            this.imageData.data[i + 2] = 255;\n            this.imageData.data[i + 3] = 255;\n        }\n    }\n\n    public getImageData():ImageData {\n        if (this.imageData.width != this.width || this.imageData.height != this.height) {\n            this.reset();\n        }\n        return this.imageData;\n    }\n\n\n}\nexport = CPUCanvas;",
    "import ImageData = require('awayjs-core/lib/data/ImageData');\nimport CPUCanvas = require('awayjs-core/lib/data/CPUCanvas');\nimport BitmapImage2D = require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix = require(\"awayjs-core/lib/geom/Matrix\");\nimport Point = require(\"awayjs-core/lib/geom/Point\");\n\n//TODO: implement all methods\nclass CPURenderingContext2D implements CanvasRenderingContext2D {\n    public miterLimit:number;\n    public font:string;\n    public globalCompositeOperation:string;\n    public msFillRule:string;\n    public lineCap:string;\n    public msImageSmoothingEnabled:boolean;\n    public lineDashOffset:number;\n    public shadowColor:string;\n    public lineJoin:string;\n    public shadowOffsetX:number;\n    public lineWidth:number;\n    public canvas:HTMLCanvasElement;\n    public strokeStyle:any;\n    public globalAlpha:number;\n    public shadowOffsetY:number;\n    public fillStyle:any;\n    public shadowBlur:number;\n    public textAlign:string;\n    public textBaseline:string;\n\n    public cpuCanvas:CPUCanvas;\n\n    private matrix:Matrix;\n\n    constructor(cpuCanvas:CPUCanvas) {\n        this.cpuCanvas = cpuCanvas;\n    }\n\n    public restore():void {\n        this.matrix = null;\n    }\n\n    public setTransform(m11:number, m12:number, m21:number, m22:number, dx:number, dy:number):void {\n        this.matrix = new Matrix(m11, m12, m21, m22, dx, dy);\n    }\n\n    public save():void {\n    }\n\n    public arc(x:number, y:number, radius:number, startAngle:number, endAngle:number, anticlockwise:boolean):void {\n    }\n\n    public measureText(text:string):TextMetrics {\n        return undefined;\n    }\n\n    public isPointInPath(x:number, y:number, fillRule:string):boolean {\n        return undefined;\n    }\n\n    public quadraticCurveTo(cpx:number, cpy:number, x:number, y:number):void {\n    }\n\n    public putImageData(imagedata:ImageData, dx:number, dy:number, dirtyX:number, dirtyY:number, dirtyWidth:number, dirtyHeight:number):void {\n    }\n\n    public rotate(angle:number):void {\n    }\n\n    public fillText(text:string, x:number, y:number, maxWidth:number):void {\n    }\n\n    public translate(x:number, y:number):void {\n    }\n\n    public scale(x:number, y:number):void {\n    }\n\n    public createRadialGradient(x0:number, y0:number, r0:number, x1:number, y1:number, r1:number):CanvasGradient {\n        return undefined;\n    }\n\n    public lineTo(x:number, y:number):void {\n    }\n\n    public getLineDash():number[] {\n        return undefined;\n    }\n\n    public fill(fillRule:string):void {\n    }\n\n    public createImageData(imageDataOrSw:any, sh:number):ImageData {\n        return undefined;\n    }\n\n    public createPattern(image:HTMLElement, repetition:string):CanvasPattern {\n        return undefined;\n    }\n\n    public closePath():void {\n    }\n\n    public rect(x:number, y:number, w:number, h:number):void {\n    }\n\n    public clip(fillRule:string):void {\n    }\n\n    public clearRect(x:number, y:number, w:number, h:number):void {\n    }\n\n    public moveTo(x:number, y:number):void {\n    }\n\n    public getImageData(sx:number, sy:number, sw:number, sh:number):ImageData {\n        //var result:ImageData = new ImageData(sw, sh);\n        //var i:number = 0;\n        //\n        //for (i = 0; i < sw * sh * 4; i += 4) {\n        //    result.data[i] = 255;\n        //    result.data[i + 1] = 255;\n        //    result.data[i + 2] = 255;\n        //    result.data[i + 3] = 255;\n        //}\n        //\n        //var imageData:ImageData = this.cpuCanvas.getImageData();\n        //for (i = sx; i < sx + sw; i++) {\n        //    for (var j:number = sy; j < sy + sh; j++) {\n        //        this.copyPixel32(result, i - sx, i - sy, imageData, i, j);\n        //    }\n        //}\n        return this.cpuCanvas.getImageData();\n    }\n\n    private point:Point = new Point();\n\n    private copyPixel32(target:ImageData, x:number, y:number, source:ImageData, fromX:number, fromY:number) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n        fromX = Math.floor(fromX);\n        fromY = Math.floor(fromY);\n\n        if (x < 0 || x >= target.width || y >= target.height || y < 0) return;\n        if (fromX < 0 || fromX >= source.width || fromY >= source.height || fromY < 0) return;\n        var index:number = (x + y * target.width) * 4;\n        var fromIndex:number = (fromX + fromY * source.width) * 4;\n        target.data[index] = source.data[fromIndex];\n        target.data[index + 1] = source.data[fromIndex + 1];\n        target.data[index + 2] = source.data[fromIndex + 2];\n        target.data[index + 3] = source.data[fromIndex + 3];\n    }\n\n    private parsedFillStyle:string;\n    private parsedA:number;\n    private parsedR:number;\n    private parsedG:number;\n    private parsedB:number;\n\n    public fillRect(x:number, y:number, w:number, h:number):void {\n        if (this.fillStyle) {\n            if (this.parsedFillStyle != this.fillStyle) {\n                var colorStrings:string[] = this.fillStyle.substring(5, this.fillStyle.lastIndexOf(\")\")).split(\",\");\n                this.parsedA = parseFloat(colorStrings[3]) * 255;\n                this.parsedR = parseInt(colorStrings[0]);\n                this.parsedG = parseInt(colorStrings[1]);\n                this.parsedB = parseInt(colorStrings[2]);\n                this.parsedFillStyle = this.fillStyle;\n            }\n\n            var imageData:ImageData = this.cpuCanvas.getImageData();\n            for (var i:number = x; i < x + w; i++) {\n                for (var j:number = y; j < y + h; j++) {\n\n                    var index:number = (x + y * imageData.width) * 4;\n                    imageData.data[index] = this.parsedR;\n                    imageData.data[index + 1] = this.parsedG;\n                    imageData.data[index + 2] = this.parsedB;\n                    imageData.data[index + 3] = this.parsedA;\n                }\n            }\n        }\n    }\n\n    public bezierCurveTo(cp1x:number, cp1y:number, cp2x:number, cp2y:number, x:number, y:number):void {\n    }\n\n    public drawImage(image:HTMLElement, offsetX:number, offsetY:number, width:number, height:number, canvasOffsetX:number, canvasOffsetY:number, canvasImageWidth:number, canvasImageHeight:number):void {\n        var b:any = image;\n        if (image.constructor.toString().indexOf(\"BitmapImage2D\")>-1) {\n            var bitmap:BitmapImage2D = <BitmapImage2D> b;\n            bitmap.lock();\n\n            this.drawBitmap(bitmap, offsetX, offsetY, width, height);\n\n            //if (!width || width == 0) {\n            //    width = bitmap.width;\n            //    height = bitmap.height;\n            //}\n            //\n            //var sourceData:ImageData = bitmap.getImageData();\n            //var scaleX:number = width / sourceData.width;\n            //var scaleY:number = height / sourceData.height;\n            //\n            //var imageData:ImageData = this.cpuCanvas.getImageData();\n            //for (var i:number = offsetX; i < offsetX + width; i++) {\n            //    for (var j:number = offsetY; j < offsetY + height; j++) {\n            //        this.copyPixel32(imageData, i, j, sourceData, (i - offsetX) * scaleX, (j - offsetY) * scaleY);\n            //    }\n            //}\n\n            bitmap.unlock();\n        } else if (image.constructor.toString().indexOf(\"HTMLImage\") > -1) {\n            var htmlImage:HTMLImageElement = <HTMLImageElement> image;\n            var htmlCanvas:HTMLCanvasElement = <HTMLCanvasElement> document.createElement(\"canvas\");\n            htmlCanvas.width = htmlImage.width;\n            htmlCanvas.height = htmlImage.height;\n            var htmlContext:CanvasRenderingContext2D = htmlCanvas.getContext(\"2d\");\n            htmlContext.drawImage(htmlImage, 0, 0);\n            var htmlImageData:ImageData = htmlContext.getImageData(0, 0, htmlImage.width, htmlImage.height);\n\n            var resultBitmap:BitmapImage2D = new BitmapImage2D(htmlImage.width, htmlImage.height, true, 0, false);\n            resultBitmap.getImageData().data = htmlImageData.data;\n            var passBitmap:any = resultBitmap;\n            this.drawImage(passBitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n        } else if (image.constructor.toString().indexOf(\"CPUCanvas\") > -1) {\n            //\n            var canvas:CPUCanvas = <CPUCanvas> b;\n            this.drawBitmap(canvas, offsetX, offsetY, width, height);\n            //\n            //if (!width || width == 0) {\n            //    width = canvas.width;\n            //    height = canvas.height;\n            //}\n            //\n            //var sourceData:ImageData = canvas.getImageData();\n            //var scaleX:number = width / sourceData.width;\n            //var scaleY:number = height / sourceData.height;\n            //\n            //var imageData:ImageData = this.cpuCanvas.getImageData();\n            //for (var i:number = offsetX; i < offsetX + width; i++) {\n            //    for (var j:number = offsetY; j < offsetY + height; j++) {\n            //        this.copyPixel32(imageData, i, j, sourceData, (i - offsetX) * scaleX, (j - offsetY) * scaleY);\n            //    }\n            //}\n        }\n    }\n\n    private drawBitmap(bitmap:any, offsetX:number, offsetY:number, width:number, height:number) {\n        if (!width || width == 0) {\n            width = bitmap.width;\n            height = bitmap.height;\n        }\n\n        var sourceData:ImageData = bitmap.getImageData();\n\n        if (this.matrix) {\n            width *= this.matrix.a;\n            height *= this.matrix.d;\n\n            this.matrix.tx += offsetX;\n            this.matrix.ty += offsetY;\n\n            offsetX = this.matrix.tx;\n            offsetY = this.matrix.ty;\n\n            this.matrix.invert();\n\n            var imageData:ImageData = this.cpuCanvas.getImageData();\n            for (var i:number = offsetX; i < offsetX + width; i++) {\n                for (var j:number = offsetY; j < offsetY + height; j++) {\n                    this.point.x = i;\n                    this.point.y = j;\n                    this.point = this.matrix.transformPoint(this.point);\n                    this.copyPixel32(imageData, i, j, sourceData, this.point.x, this.point.y);\n                }\n            }\n        } else {\n            var scaleX:number = width / sourceData.width;\n            var scaleY:number = height / sourceData.height;\n\n            var imageData:ImageData = this.cpuCanvas.getImageData();\n            for (var i:number = offsetX; i < offsetX + width; i++) {\n                for (var j:number = offsetY; j < offsetY + height; j++) {\n                    this.copyPixel32(imageData, i, j, sourceData, (i - offsetX) * scaleX, (j - offsetY) * scaleY);\n                }\n            }\n        }\n\n    }\n\n    public transform(m11:number, m12:number, m21:number, m22:number, dx:number, dy:number):void {\n    }\n\n    public stroke():void {\n    }\n\n    public strokeRect(x:number, y:number, w:number, h:number):void {\n    }\n\n    public setLineDash(segments:number[]):void {\n    }\n\n    public strokeText(text:string, x:number, y:number, maxWidth:number):void {\n    }\n\n    public beginPath():void {\n    }\n\n    public arcTo(x1:number, y1:number, x2:number, y2:number, radius:number):void {\n    }\n\n    public createLinearGradient(x0:number, y0:number, x1:number, y1:number):CanvasGradient {\n        return undefined;\n    }\n}\nexport = CPURenderingContext2D;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nclass Image2D extends ImageBase\n{\n\tpublic static assetType:string = \"[image Image2D]\";\n\n\tpublic _rect:Rectangle;\n\n\tprivate _powerOfTwo:boolean = true;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Image2D.assetType;\n\t}\n\n\t/**\n\t * The height of the image in pixels.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._rect.height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._rect.height == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._rect.width, value);\n\t}\n\n\t/**\n\t * The rectangle that defines the size and location of the bitmap image. The\n\t * top and left of the rectangle are 0; the width and height are equal to the\n\t * width and height in pixels of the BitmapData object.\n\t */\n\tpublic get rect():Rectangle\n\t{\n\t\treturn this._rect;\n\t}\n\n\t/**\n\t * The width of the bitmap image in pixels.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._rect.width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._rect.width == value)\n\t\t\treturn;\n\n\t\tthis._setSize(value, this._rect.height);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(width:number, height:number, powerOfTwo:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._rect = new Rectangle(0, 0, width, height);\n\t\tthis._powerOfTwo = powerOfTwo;\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tif (this._rect.width != width || this._rect.height != height)\n\t\t\tthis.invalidateSize();\n\n\t\tthis._rect.width = width;\n\t\tthis._rect.height = height;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions()\n\t{\n\t\tif (this._powerOfTwo && (!ImageUtils.isDimensionValid(this._rect.width) || !ImageUtils.isDimensionValid(this._rect.height)))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n\n\t/**\n\t * Enable POT texture size validation\n\t * @returns {boolean}\n\t */\n\tpublic get powerOfTwo():boolean {\n\t\treturn this._powerOfTwo;\n\t}\n\n\tpublic set powerOfTwo(value:boolean) {\n\t\tif(this._powerOfTwo == value) return;\n\t\tthis._powerOfTwo = value;\n\t\tthis._testDimensions();\n\t}\n}\n\nexport = Image2D;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IImageObject\t\t\t\t= require(\"awayjs-core/lib/pool/IImageObject\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\nclass ImageBase extends AssetBase implements IAsset\n{\n\tprivate _imageObject:Array<IImageObject> = new Array<IImageObject>();\n\n\tpublic _pFormat:string = \"bgra\";\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._imageObject.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._imageObject[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._imageObject.length)\n\t\t\tthis._imageObject[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._imageObject.length)\n\t\t\tthis._imageObject[0].dispose();\n\t}\n\n\n\tpublic _iAddImageObject(ImageObject:IImageObject):IImageObject\n\t{\n\t\tthis._imageObject.push(ImageObject);\n\n\t\treturn ImageObject;\n\t}\n\n\tpublic _iRemoveImageObject(ImageObject:IImageObject):IImageObject\n\t{\n\t\tthis._imageObject.splice(this._imageObject.indexOf(ImageObject), 1);\n\n\t\treturn ImageObject;\n\t}\n\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get format():string\n\t{\n\t\treturn this._pFormat;\n\t}\n}\n\nexport = ImageBase;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nclass ImageCube extends ImageBase\n{\n\tpublic static assetType:string = \"[image ImageCube]\";\n\n\tpublic _size:number;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn ImageCube.assetType;\n\t}\n\n\t/**\n\t * The size of the cube bitmap in pixels.\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._size);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(size:number)\n\t{\n\t\tsuper();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number)\n\t{\n\t\tif (this._size != size)\n\t\t\tthis.invalidateSize();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions()\n\t{\n\t\tif (!ImageUtils.isDimensionValid(this._size))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n}\n\nexport = ImageCube;",
    "class ImageData {\n    public width: number;\n    public data: number[] = [];\n    public height: number;\n\n    constructor(width:number, height:number) {\n        this.width = width;\n        this.height = height;\n    }\n}\nexport = ImageData;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\n/**\n * The Sampler2D class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Sampler2D()</code> constructor.\n *\n * <p>The <code>Sampler2D()</code> constructor allows you to create a Sampler2D\n * object that contains a reference to a Image2D object. After you create a\n * Sampler2D object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Sampler2D object can share its Image2D reference among several Sampler2D\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Sampler2D objects that reference the same Image2D object,\n * multiple texture objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each texture\n * object instance.</p>\n\n */\nclass Sampler2D extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset Sampler2D]\";\n\n\tprivate _imageRect:Rectangle;\n\tprivate _frameRect:Rectangle;\n\tprivate _repeat:boolean;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Sampler2D.assetType;\n\t}\n\n\t/**\n\t * Controls whether or not the Sampler2D object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\t//var pixelSnapping:PixelSnapping;\n\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\n\t/**\n\t *\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get imageRect():Rectangle\n\t{\n\t\treturn this._imageRect;\n\t}\n\tpublic set imageRect(value:Rectangle)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\tpublic set frameRect(value:Rectangle)\n\t{\n\t\tif (this._frameRect == value)\n\t\t\treturn;\n\n\t\tthis._frameRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t * @param image2D\n\t * @param smoothing\n\t */\n\tconstructor(repeat:boolean = false, smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper(smooth, mipmap);\n\n\t\tthis._repeat = repeat;\n\n\t\tthis._updateRect();\n\t}\n\n\tprivate _updateRect()\n\t{\n\t}\n}\n\nexport = Sampler2D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n *\n */\nclass SamplerBase extends AssetBase implements IAsset\n{\n\tprivate _smooth:boolean;\n\tprivate _mipmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._smooth = smooth;\n\t\tthis._mipmap = mipmap;\n\t}\n}\n\nexport = SamplerBase;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\n/**\n * The Bitmap class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Bitmap()</code> constructor.\n *\n * <p>The <code>Bitmap()</code> constructor allows you to create a Bitmap\n * object that contains a reference to a BitmapData object. After you create a\n * Bitmap object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Bitmap object can share its BitmapData reference among several Bitmap\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Bitmap objects that reference the same BitmapData object,\n * multiple texture objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each texture\n * object instance.</p>\n\n */\nclass SamplerCube extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset SamplerCube]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SamplerCube.assetType;\n\t}\n\n\t/**\n\t *\n\t * @param bitmapData\n\t * @param smoothing\n\t */\n\tconstructor(smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper(smooth, mipmap);\n\t}\n}\n\nexport = SamplerCube;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageChannel\t\t= require(\"awayjs-core/lib/data/BitmapImageChannel\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n *\n */\nclass SpecularImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[asset SpecularImage2D]\";\n\n\tprivate _specularSource:BitmapImage2D;\n\tprivate _glossSource:BitmapImage2D;\n\tprivate _output:BitmapImage2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SpecularImage2D.assetType;\n\t}\n\n\tpublic get specularSource():BitmapImage2D\n\t{\n\t\treturn this._specularSource;\n\t}\n\n\tpublic set specularSource(value:BitmapImage2D)\n\t{\n\t\tif (this._specularSource == value)\n\t\t\treturn;\n\n\t\tthis._specularSource = value;\n\n\t\tthis.invalidateContent();\n\n\t\tthis._testSize();\n\t}\n\n\n\tpublic get glossSource():BitmapImage2D\n\t{\n\t\treturn this._glossSource;\n\t}\n\n\tpublic set glossSource(value:BitmapImage2D)\n\t{\n\t\tif (this._glossSource == value)\n\t\t\treturn;\n\n\t\tthis._glossSource = value;\n\n\t\tthis.invalidateContent();\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(specularSource:BitmapImage2D = null, glossSource:BitmapImage2D = null)\n\t{\n\t\tsuper(1, 1);\n\n\t\tthis._specularSource = specularSource;\n\t\tthis._glossSource = glossSource;\n\n\t\tthis._output = new BitmapImage2D(1, 1, false, 0xffffff);\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t * Returns a new SpecularImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new SpecularImage2D object that is identical to the original.\n\t */\n\tpublic clone():SpecularImage2D\n\t{\n\t\treturn new SpecularImage2D(this._specularSource, this._glossSource);\n\t}\n\n\t/**\n\t * Frees memory that is used to store the SpecularImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this SpecularImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>SpecularImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>SpecularImage2D.dispose()</code>, the SpecularImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the SpecularImage2D object. However,\n\t * <code>SpecularImage2D.dispose()</code> does not garbage collect the SpecularImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * SpecularImage2D object is released at the time the SpecularImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._rect = null;\n\n\t\tthis._output.dispose();\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tvar origin:Point = new Point();\n\n\t\tthis._output.fillRect(this._rect, 0xffffff);\n\n\t\tif (this._glossSource)\n\t\t\tthis._output.copyChannel(this._glossSource, this._rect, origin, BitmapImageChannel.GREEN, BitmapImageChannel.GREEN);\n\n\t\tif (this._specularSource)\n\t\t\tthis._output.copyChannel(this._specularSource, this._rect, origin, BitmapImageChannel.RED, BitmapImageChannel.RED);\n\n\t\treturn this._output.getImageData();\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn this._output.getCanvas();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tsuper._setSize(width, height);\n\n\t\tthis._output._setSize(width, height);\n\t}\n\n\tprivate _testSize()\n\t{\n\t\tvar w:number, h:number;\n\n\t\tif (this._specularSource) {\n\t\t\tw = this._specularSource.width;\n\t\t\th = this._specularSource.height;\n\t\t} else if (this._glossSource) {\n\t\t\tw = this._glossSource.width;\n\t\t\th = this._glossSource.height;\n\t\t} else {\n\t\t\tw = 1;\n\t\t\th = 1;\n\t\t}\n\n\t\tif (w != this._output.width && h != this._output.height) {\n\t\t\tthis._output.dispose();\n\t\t\tthis._output = new BitmapImage2D(w, h, false, 0xffffff);\n\t\t}\n\n\t\tthis._setSize(w, h);\n\t}\n}\n\nexport = SpecularImage2D;",
    "import IAudioChannel\t\t\t\t= require(\"awayjs-core/lib/managers/IAudioChannel\");\nimport AudioManager\t\t\t\t= require(\"awayjs-core/lib/managers/AudioManager\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n// TODO: Audio should probably be an interface containing play/stop/seek functionality\nclass WaveAudio extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset WaveAudio]\";\n\n\tprivate _audioChannel:IAudioChannel;\n\tprivate _volume:number = 1;\n\tprivate _buffer:ArrayBuffer;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn WaveAudio.assetType;\n\t}\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tif (this._audioChannel)\n\t\t\tthis._audioChannel.volume = this._volume;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\tif (this._audioChannel)\n\t\t\treturn this._audioChannel.currentTime;\n\n\t\treturn 0;\n\t}\n\n\tpublic get duration():number\n\t{\n\t\tif (this._audioChannel)\n\t\t\treturn this._audioChannel.duration;\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(buffer:ArrayBuffer)\n\t{\n\t\tsuper();\n\n\t\tthis._buffer = buffer;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.stop();\n\t}\n\n\tpublic play(offset:number, loop:boolean = false)\n\t{\n\t\tthis._audioChannel = AudioManager.getChannel(this._buffer.byteLength);\n\n\t\tif (this._audioChannel) {\n\t\t\tthis._audioChannel.volume = this._volume;\n\t\t\tthis._audioChannel.play(this._buffer, offset, loop, this.id);\n\t\t}\n\t}\n\n\tpublic stop()\n\t{\n\t\tif (this._audioChannel)\n\t\t\tthis._audioChannel.stop();\n\n\t\tdelete this._audioChannel;\n\t\tthis._audioChannel = null;\n\t}\n\n\tpublic clone()\n\t{\n\t\tvar newInstance:WaveAudio = new WaveAudio(this._buffer);\n\n\t\tnewInstance.name = this.name;\n\n\t\treturn newInstance;\n\t}\n}\n\nexport = WaveAudio;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass AbstractMethodError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\n\t}\n}\n\nexport = AbstractMethodError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass ArgumentError extends Error\n{\n\t/**\n\t * Create a new ArgumentError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"ArgumentError\", id);\n\t}\n}\n\nexport = ArgumentError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass DocumentError extends Error\n{\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\n\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\n\t{\n\t\tsuper(message, id);\n\t}\n}\n\nexport = DocumentError;",
    "class Error\n{\n\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\n\tprivate _name:string = '';  // Contains the name of the Error object.\n\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\n\t{\n\n\t\tthis._messsage = message;\n\t\tthis._name = name;\n\t\tthis._errorID = id;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get message():string\n\t{\n\n\t\treturn this._messsage;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set message(value:string)\n\t{\n\n\t\tthis._messsage = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get name():string\n\t{\n\n\t\treturn this._name;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set name(value:string)\n\t{\n\n\t\tthis._name = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get errorID():number\n\t{\n\n\t\treturn this._errorID;\n\n\t}\n\n}\n\nexport = Error;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass PartialImplementationError extends Error\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(dependency:string = '', id:number = 0)\n\t{\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\n\t}\n}\n\nexport = PartialImplementationError;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\n/**\n * RangeError is thrown when an index is accessed out of range of the number of\n * available indices on an Array.\n */\nclass RangeError extends Error\n{\n\t/**\n\t * Create a new RangeError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"RangeError\", id);\n\t}\n}\n\nexport = RangeError;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.AssetEvent\n */\nclass AssetEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_RENAME:string = 'assetRename';\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\n\n\t/**\n\t *\n\t */\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\n\n\tprivate _asset:IAsset;\n\tprivate _prevName:string;\n\n\t/**\n\t *\n\t */\n\tconstructor(type:string, asset:IAsset = null, prevName:string = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._asset = asset;\n\t\tthis._prevName = prevName || (this._asset? this._asset.name : null);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get asset():IAsset\n\t{\n\t\treturn this._asset;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetPrevName():string\n\t{\n\t\treturn this._prevName;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new AssetEvent(this.type, this.asset, this.assetPrevName);\n\t}\n}\n\nexport = AssetEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Base class for dispatching events\n*\n* @class away.events.EventDispatcher\n*\n*/\nclass EventDispatcher\n{\n\tprivate listeners:Array<Array<Function>> = new Array<Array<Function>>();\n\tprivate target:any;\n\n\tconstructor(target:any = null)\n\t{\n\t\tthis.target = target || this;\n\t}\n\n\t/**\n\t * Add an event listener\n\t * @method addEventListener\n\t * @param {String} Name of event to add a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tif (this.listeners[ type ] === undefined)\n\t\t\tthis.listeners[ type ] = new Array<Function>();\n\n\t\tif (this.getEventListenerIndex(type, listener) === -1)\n\t\t\tthis.listeners[ type ].push(listener);\n\t}\n\n\t/**\n\t * Remove an event listener\n\t * @method removeEventListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tvar index:number = this.getEventListenerIndex(type, listener);\n\n\t\tif (index !== -1)\n\t\t\tthis.listeners[ type ].splice(index, 1);\n\t}\n\n\t/**\n\t * Dispatch an event\n\t * @method dispatchEvent\n\t * @param {Event} Event to dispatch\n\t */\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\tvar listenerArray:Array<Function> = this.listeners[ event.type ];\n\n\t\tif (listenerArray !== undefined) {\n\t\t\tvar l:number = listenerArray.length;\n\n\t\t\tevent.target = this.target;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tlistenerArray[i](event);\n\t\t}\n\t}\n\n\t/**\n\t * get Event Listener Index in array. Returns -1 if no listener is added\n\t * @method getEventListenerIndex\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tprivate getEventListenerIndex(type:string, listener:Function):number\n\t{\n\t\tif (this.listeners[ type ] !== undefined) {\n\t\t\tvar a:Array<Function> = this.listeners[ type ];\n\t\t\tvar l:number = a.length;\n\n\t\t\tfor (var i:number = 0; i < l; i++)\n\t\t\t\tif (listener == a[i])\n\t\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * check if an object has an event listener assigned to it\n\t * @method hasListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic hasEventListener(type:string, listener?:Function):boolean\n\t{\n\t\tif (listener != null) {\n\t\t\treturn ( this.getEventListenerIndex(type, listener) !== -1 );\n\t\t} else {\n\t\t\tif (this.listeners[ type ] !== undefined)\n\t\t\t\treturn ( this.listeners[ type ].length > 0 );\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = EventDispatcher;",
    "class Event\n{\n\n\tpublic static COMPLETE:string = 'complete';\n\tpublic static OPEN:string = 'open';\n\n\tpublic static ENTER_FRAME:string = 'enterFrame';\n\tpublic static EXIT_FRAME:string = 'exitFrame';\n\n\n\tpublic static RESIZE:string = \"resize\";\n\tpublic static ERROR:string = \"error\";\n\tpublic static CHANGE:string = \"change\";\n\n\t/**\n\t * Type of event\n\t * @property type\n\t * @type String\n\t */\n\tpublic type:string = undefined;\n\n\t/**\n\t * Reference to target object\n\t * @property target\n\t * @type Object\n\t */\n\tpublic target:any = undefined;\n\n\tconstructor(type:string)\n\t{\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new Event(this.type);\n\t}\n}\n\nexport = Event;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * @class away.events.HTTPStatusEvent\n */\nclass HTTPStatusEvent extends Event\n{\n\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\n\n\tpublic status:number;\n\n\tconstructor(type:string, status:number = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis.status = status;\n\n\t}\n}\n\nexport = HTTPStatusEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass IOErrorEvent extends Event\n{\n\n\tpublic static IO_ERROR:string = \"ioError\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = IOErrorEvent;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LoaderEvent extends Event\n{\n\t/**\n\t * Dispatched when a resource and all of its dependencies is retrieved.\n\t */\n\tpublic static RESOURCE_COMPLETE:string = \"resourceComplete\";\n\n\tprivate _url:string;\n\tprivate _content:IAsset;\n\tprivate _assets:IAsset[];\n\n\t/**\n\t * Create a new LoaderEvent object.\n\t *\n\t * @param type The event type.\n\t * @param url The url of the loaded resource.\n\t * @param assets The assets of the loaded resource.\n\t */\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._url = url;\n\t\tthis._content = content;\n\t\tthis._assets = assets;\n\t}\n\n\t/**\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\n\t */\n\tpublic get content():IAsset\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The url of the loaded resource.\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t * The error string on loadError.\n\t */\n\tpublic get assets():IAsset[]\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn <Event> new LoaderEvent(this.type, this._url, this._content, this._assets);\n\t}\n}\n\nexport = LoaderEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ParserEvent extends Event\n{\n\tprivate _message:string;\n\n\t/**\n\t * Dispatched when parsing of an asset completed.\n\t */\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\n\n\t/**\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\n\t * incorrectly formatted.)\n\t */\n\tpublic static PARSE_ERROR:string = 'parseError';\n\n\n\t/**\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\n\t * This is an internal event that should rarely (if ever) be listened for by\n\t * external classes.\n\t */\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\n\n\n\tconstructor(type:string, message:string = '')\n\t{\n\t\tsuper(type);\n\n\t\tthis._message = message;\n\t}\n\n\n\t/**\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\n\t */\n\tpublic get message():string\n\t{\n\t\treturn this._message;\n\t}\n\n\n\tpublic clone():Event\n\t{\n\t\treturn new ParserEvent(this.type, this.message);\n\t}\n}\n\nexport = ParserEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ProgressEvent extends Event\n{\n\tpublic static PROGRESS:string = \"progress\";\n\n\tpublic bytesLoaded:number;\n\n\tpublic bytesTotal:number;\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = ProgressEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionEvent extends Event\n{\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\n\n\tprivate _projection:IProjection;\n\n\tconstructor(type:string, projection:IProjection)\n\t{\n\t\tsuper(type);\n\t\tthis._projection = projection;\n\t}\n\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n}\n\nexport = ProjectionEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass TimerEvent extends Event\n{\n\n\tpublic static TIMER:string = \"timer\";\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = TimerEvent",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Box object is an area defined by its position, as indicated by its\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\n * height and depth.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n * <code>height</code> <code>depth</code> properties of the Box class are\n * independent of each other; changing the value of one property has no effect\n * on the others. However, the <code>right</code>, <code>bottom</code> and\n * <code>back</code> properties are integrally related to those six\n * properties. For example, if you change the value of the <code>right</code>\n * property, the value of the <code>width</code> property changes; if you\n * change the <code>bottom</code> property, the value of the\n * <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Box objects:</p>\n *\n * <ul>\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\n * </ul>\n *\n * <p>You can use the <code>new Box()</code> constructor to create a\n * Box object.</p>\n *\n * <p><b>Note:</b> The Box class does not define a cubic Shape\n * display object.\n */\nclass Box\n{\n\tprivate _size:Vector3D;\n\tprivate _bottomRightBack:Vector3D;\n\tprivate _topLeftFront:Vector3D;\n\n\t/**\n\t * The height of the box, in pixels. Changing the <code>height</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the box, in pixels. Changing the <code>width</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic depth:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>x</code> property of a Box object has no\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>y</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>z</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>z</code> property is equal to the value of the\n\t * <code>front</code> property.</p>\n\t */\n\tpublic z:number\n\n\t/**\n\t * The sum of the <code>z</code> and <code>height</code> properties.\n\t */\n\tpublic get back():number\n\t{\n\t\treturn this.z + this.depth;\n\t}\n\n\tpublic set back(val:number)\n\t{\n\t\tthis.depth = val - this.z;\n\t}\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\tpublic set bottom(val:number)\n\t{\n\t\tthis.height = val - this.y;\n\t}\n\n\t/**\n\t * The location of the Box object's bottom-right corner, determined by the\n\t * values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRightBack():Vector3D\n\t{\n\t\tif (this._bottomRightBack == null)\n\t\t\tthis._bottomRightBack = new Vector3D();\n\n\t\tthis._bottomRightBack.x = this.x + this.width;\n\t\tthis._bottomRightBack.y = this.y + this.height;\n\t\tthis._bottomRightBack.z = this.z + this.depth;\n\n\t\treturn this._bottomRightBack;\n\t}\n\n\t/**\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>front</code> property of a Box object has no effect on the\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\n\t * properties. However it does affect the <code>depth</code> property,\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\n\t * <code>depth</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get front():number\n\t{\n\t\treturn this.z;\n\t}\n\n\tpublic set front(val:number)\n\t{\n\t\tthis.depth += this.z - val;\n\t\tthis.z = val;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\n\t * <code>left</code> property of a Box object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\tpublic set left(val:number)\n\t{\n\t\tthis.width += this.x - val;\n\t\tthis.x = val;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\tpublic set right(val:number)\n\t{\n\t\tthis.width = val - this.x;\n\t}\n\n\t/**\n\t * The size of the Box object, expressed as a Vector3D object with the\n\t * values of the <code>width</code>, <code>height</code> and\n\t * <code>depth</code> properties.\n\t */\n\tpublic get size():Vector3D\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Vector3D();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\t\tthis._size.z = this.depth;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>top</code> property of a Box object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\tpublic set top(val:number)\n\t{\n\t\tthis.height += (this.y - val);\n\t\tthis.y = val;\n\t}\n\n\t/**\n\t * The location of the Box object's top-left-front corner, determined by the\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\n\t */\n\tpublic get topLeftFront():Vector3D\n\t{\n\t\tif (this._topLeftFront == null)\n\t\t\tthis._topLeftFront = new Vector3D();\n\n\t\tthis._topLeftFront.x = this.x;\n\t\tthis._topLeftFront.y = this.y;\n\t\tthis._topLeftFront.z = this.z;\n\n\t\treturn this._topLeftFront;\n\t}\n\n\t/**\n\t * Creates a new Box object with the top-left-front corner specified by the\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\n\t * parameters. If you call this public without parameters, a box with\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param width  The width of the box, in pixels.\n\t * @param height The height of the box, in pixels.\n\t * @param depth The depth of the box, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = depth;\n\t}\n\n\t/**\n\t * Returns a new Box object with the same values for the <code>x</code>,\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\n\t * and <code>depth</code> properties as the original Box object.\n\t *\n\t * @return A new Box object with the same values for the <code>x</code>,\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\n\t *         <code>height</code> and <code>depth</code> properties as the\n\t *         original Box object.\n\t */\n\tpublic clone():Box\n\t{\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number, z:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object. This method is similar to the\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\n\t * object as a parameter.\n\t *\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\n\t *                 <i>z</i> coordinates.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\n\t}\n\n\t/**\n\t * Determines whether the Box object specified by the <code>box</code>\n\t * parameter is contained within this Box object. A Box object is said to\n\t * contain another if the second Box object falls entirely within the\n\t * boundaries of the first.\n\t *\n\t * @param box The Box object being checked.\n\t * @return A value of <code>true</code> if the Box object that you specify\n\t *         is contained by this Box object; otherwise <code>false</code>.\n\t */\n\tpublic containsBox(box:Box):boolean\n\t{\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\n\t}\n\n\t/**\n\t * Copies all of box data from the source Box object into the calling\n\t * Box object.\n\t *\n\t * @param sourceBox The Box object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceBox:Box)\n\t{\n\t\tthis.x = sourceBox.x;\n\t\tthis.y = sourceBox.y;\n\t\tthis.z = sourceBox.z;\n\t\tthis.width = sourceBox.width;\n\t\tthis.height = sourceBox.height;\n\t\tthis.depth = sourceBox.depth;\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Box object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties of an object against\n\t * the same properties of this Box object.\n\t *\n\t * @param toCompare The box to compare to this Box object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\n\t *         properties as this Box object; otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Box):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\n\t}\n\n\t/**\n\t * Increases the size of the Box object by the specified amounts, in\n\t * pixels. The center point of the Box object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, to\n\t * the top and the bottom by the <code>dy</code> value, and to\n\t * the front and the back by the <code>dz</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the box:\n\t * @param dy The value to be added to the top and the bottom of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           height and position of the box:\n\t * @param dz The value to be added to the front and the back of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           depth and position of the box:\n\t */\n\tpublic inflate(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.z -= dz/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t\tthis.depth += dz/2;\n\t}\n\n\t/**\n\t * Increases the size of the Box object. This method is similar to the\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\n\t *              increase the horizontal dimension of the Box object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Box object.\n\t *              The <code>z</code> property is used to increase the\n\t *              longitudinal dimension of the Box object.\n\t */\n\tpublic inflatePoint(delta:Vector3D)\n\t{\n\t\tthis.x -= delta.x/2;\n\t\tthis.y -= delta.y/2;\n\t\tthis.z -= delta.z/2;\n\t\tthis.width += delta.x/2;\n\t\tthis.height += delta.y/2;\n\t\tthis.depth += delta.z/2;\n\t}\n\n\t/**\n\t * If the Box object specified in the <code>toIntersect</code> parameter\n\t * intersects with this Box object, returns the area of intersection\n\t * as a Box object. If the boxes do not intersect, this method returns an\n\t * empty Box object with its properties set to 0.\n\t *\n\t * @param toIntersect The Box object to compare against to see if it\n\t *                    intersects with this Box object.\n\t * @return A Box object that equals the area of intersection. If the\n\t *         boxes do not intersect, this method returns an empty Box\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\n\t *         <code>depth</code> properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Box):Box\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Box = new Box();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\n\t\t\tif (this.z > toIntersect.z) {\n\t\t\t\ti.z = this.z;\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\n\n\t\t\t\tif (i.depth > this.depth)\n\t\t\t\t\ti.depth = this.depth;\n\t\t\t} else {\n\t\t\t\ti.z = toIntersect.z;\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\n\n\t\t\t\tif (i.depth > toIntersect.depth)\n\t\t\t\t\ti.depth = toIntersect.depth;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Box();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Box object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code>, and <code>depth</code> properties of the specified\n\t * Box object to see if it intersects with this Box object.\n\t *\n\t * @param toIntersect The Box object to compare against this Box object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Box object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Box):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar halfExtentsX:number = this.width/2;\n\t\tvar halfExtentsY:number = this.height/2;\n\t\tvar halfExtentsZ:number = this.depth/2;\n\n\t\tvar centerX:number = this.x + halfExtentsX;\n\t\tvar centerY:number = this.y + halfExtentsY;\n\t\tvar centerZ:number = this.z + halfExtentsZ;\n\n\t\tvar px:number = position.x - centerX;\n\t\tvar py:number = position.y - centerY;\n\t\tvar pz:number = position.z - centerZ;\n\n\t\tvar vx:number = direction.x\n\t\tvar vy:number = direction.y\n\t\tvar vz:number = direction.z;\n\n\t\tvar ix:number;\n\t\tvar iy:number;\n\t\tvar iz:number;\n\t\tvar rayEntryDistance:number;\n\n\t\t// ray-plane tests\n\t\tvar intersects:boolean;\n\t\tif (vx < 0) {\n\t\t\trayEntryDistance = ( halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vx > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = -1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy < 0) {\n\t\t\trayEntryDistance = ( halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = -1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz < 0) {\n\t\t\trayEntryDistance = ( halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = -1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn intersects? rayEntryDistance : -1;\n\t}\n\n\t/**\n\t * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\n\t *\n\t * @param point The point for which to find the closest point on the Box\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\n\t * @return\n\t */\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar p:number;\n\n\t\tif (target == null)\n\t\t\ttarget = new Vector3D();\n\n\t\tp = point.x;\n\t\tif (p < this.x)\n\t\t\tp = this.x;\n\t\tif (p > this.x + this.width)\n\t\t\tp = this.x + this.width;\n\t\ttarget.x = p;\n\n\t\tp = point.y;\n\t\tif (p < this.y + this.height)\n\t\t\tp = this.y + this.height;\n\t\tif (p > this.y)\n\t\t\tp = this.y;\n\t\ttarget.y = p;\n\n\t\tp = point.z;\n\t\tif (p < this.z)\n\t\t\tp = this.z;\n\t\tif (p > this.z + this.depth)\n\t\t\tp = this.z + this.depth;\n\t\ttarget.z = p;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Determines whether or not this Box object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Box object's width, height or\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object, as determined by its\n\t * top-left-front corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object using a Vector3D object as a\n\t * parameter. This method is similar to the <code>Box.offset()</code>\n\t * method, except that it takes a Vector3D object as a parameter.\n\t *\n\t * @param position A Vector3D object to use to offset this Box object.\n\t */\n\tpublic offsetPosition(position:Vector3D)\n\t{\n\t\tthis.x += position.x;\n\t\tthis.y += position.y;\n\t\tthis.z += position.z;\n\t}\n\n\t/**\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\n\t * width, height or depth is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\n\t * <code>depth</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.depth = 0;\n\t}\n\n\t/**\n\t * Sets the members of Box to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param widtha  The width of the box, in pixels.\n\t * @param heighta The height of the box, in pixels.\n\t * @param deptha  The depth of the box, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t\tthis.depth = deptha;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal, vertical and\n\t * longitudinal positions and the width, height and depth of the Box object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\n\t}\n\n\t/**\n\t * Adds two boxes together to create a new Box object, by filling\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\n\t *\n\t * @param toUnion A Box object to add to this Box object.\n\t * @return A new Box object that is the union of the two boxes.\n\t */\n\tpublic union(toUnion:Box):Box\n\t{\n\t\tvar u:Box = new Box();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\tif (this.z < toUnion.z) {\n\t\t\tu.z = this.z;\n\t\t\tu.depth = toUnion.z - this.z + toUnion.depth;\n\n\t\t\tif (u.depth < this.depth)\n\t\t\t\tu.depth = this.depth;\n\t\t} else {\n\t\t\tu.z = toUnion.z;\n\t\t\tu.depth = this.z - toUnion.z + this.depth;\n\n\t\t\tif (u.depth < toUnion.depth)\n\t\t\t\tu.depth = toUnion.depth;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Box;",
    "import ColorUtils\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\n/**\n * The ColorTransform class lets you adjust the color values in a display\n * object. The color adjustment or <i>color transformation</i> can be applied\n * to all four channels: red, green, blue, and alpha transparency.\n *\n * <p>When a ColorTransform object is applied to a display object, a new value\n * for each color channel is calculated like this:</p>\n *\n * <ul>\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\n * <code>redOffset</code></li>\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\n * <code>greenOffset</code></li>\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\n * <code>blueOffset</code></li>\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\n * <code>alphaOffset</code></li>\n * </ul>\n *\n * <p>If any of the color channel values is greater than 255 after the\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\n *\n * <p>You can use ColorTransform objects in the following ways:</p>\n *\n * <ul>\n *   <li>In the <code>colorTransform</code> parameter of the\n * <code>colorTransform()</code> method of the BitmapData class</li>\n *   <li>As the <code>colorTransform</code> property of a Transform object\n * (which can be used as the <code>transform</code> property of a display\n * object)</li>\n * </ul>\n *\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\n * a ColorTransform object before you can call the methods of the\n * ColorTransform object.</p>\n *\n * <p>Color transformations do not apply to the background color of a movie\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\n * that are attached to the movie clip.</p>\n */\nclass ColorTransform\n{\n\t/**\n\t * A decimal value that is multiplied with the alpha transparency channel\n\t * value.\n\t *\n\t * <p>If you set the alpha transparency value of a display object directly by\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\n\t * affects the value of the <code>alphaMultiplier</code> property of that\n\t * display object's <code>transform.colorTransform</code> property.</p>\n\t */\n\tpublic alphaMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the alpha transparency channel\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\n\t * value.\n\t */\n    public alphaOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the blue channel value.\n\t */\n    public blueMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the blue channel value after it\n\t * has been multiplied by the <code>blueMultiplier</code> value.\n\t */\n    public blueOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the green channel value.\n\t */\n    public greenMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the green channel value after\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\n\t */\n    public greenOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the red channel value.\n\t */\n    public redMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the red channel value after it\n\t * has been multiplied by the <code>redMultiplier</code> value.\n\t */\n    public redOffset:number;\n\n\t/**\n\t * The RGB color value for a ColorTransform object.\n\t *\n\t * <p>When you set this property, it changes the three color offset values\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\n\t * multiplier values(<code>redMultiplier</code>,\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\n\t * alpha transparency multiplier and offset values do not change.</p>\n\t *\n\t * <p>When you pass a value for this property, use the format\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\n\t * hexadecimal digits that specify the offset of each color component. The 0x\n\t * tells the ActionScript compiler that the number is a hexadecimal\n\t * value.</p>\n\t */\n\tpublic get color():number\n\t{\n\t\treturn((this.redOffset << 16) | ( this.greenOffset << 8) | this.blueOffset);\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\n\n\t\tthis.redOffset = argb[1];  //(value >> 16) & 0xFF;\n\t\tthis.greenOffset = argb[2];  //(value >> 8) & 0xFF;\n\t\tthis.blueOffset = argb[3];  //value & 0xFF;\n\n\t\tthis.redMultiplier = 0;\n\t\tthis.greenMultiplier = 0;\n\t\tthis.blueMultiplier = 0;\n\t}\n\n\t/**\n\t * Creates a ColorTransform object for a display object with the specified\n\t * color channel values and alpha values.\n\t *\n\t * @param redMultiplier   The value for the red multiplier, in the range from\n\t *                        0 to 1.\n\t * @param greenMultiplier The value for the green multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\n\t *                        the range from 0 to 1.\n\t * @param redOffset       The offset value for the red color channel, in the\n\t *                        range from -255 to 255.\n\t * @param greenOffset     The offset value for the green color channel, in\n\t *                        the range from -255 to 255.\n\t * @param blueOffset      The offset for the blue color channel value, in the\n\t *                        range from -255 to 255.\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\n\t *                        the range from -255 to 255.\n\t */\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\n\t{\n\t\tthis.redMultiplier = redMultiplier;\n\t\tthis.greenMultiplier = greenMultiplier;\n\t\tthis.blueMultiplier = blueMultiplier;\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\t\tthis.redOffset = redOffset;\n\t\tthis.greenOffset = greenOffset;\n\t\tthis.blueOffset = blueOffset;\n\t\tthis.alphaOffset = alphaOffset;\n\t}\n\n    public clear()\n    {\n        this.redMultiplier = 1;\n        this.greenMultiplier = 1;\n        this.blueMultiplier = 1;\n        this.alphaMultiplier = 1;\n        this.redOffset = 0;\n        this.greenOffset = 0;\n        this.blueOffset = 0;\n        this.alphaOffset = 0;\n    }\n\n    public clone():ColorTransform\n    {\n        return new ColorTransform(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n    }\n\n    public copyFrom(source:ColorTransform)\n    {\n        this.redMultiplier = source.redMultiplier;\n        this.greenMultiplier = source.greenMultiplier;\n        this.blueMultiplier = source.blueMultiplier;\n        this.alphaMultiplier = source.alphaMultiplier;\n        this.redOffset = source.redOffset;\n        this.greenOffset = source.greenOffset;\n        this.blueOffset = source.blueOffset;\n        this.alphaOffset = source.alphaOffset;\n    }\n\n    public copyTo(destination:ColorTransform)\n    {\n        destination.copyFrom(this);\n    }\n\n    public prepend(ct:ColorTransform)\n    {\n        this.redOffset += ct.redOffset * this.redMultiplier;\n        this.greenOffset += ct.greenOffset * this.greenMultiplier;\n        this.blueOffset += ct.blueOffset * this.blueMultiplier;\n        this.alphaOffset += ct.alphaOffset * this.alphaMultiplier;\n\n        this.redMultiplier *= ct.redMultiplier;\n        this.greenMultiplier *= ct.greenMultiplier;\n        this.blueMultiplier *= ct.blueMultiplier;\n        this.alphaMultiplier *= ct.alphaMultiplier;\n    }\n}\n\nexport = ColorTransform;",
    "/**\n* MathConsts provides some commonly used mathematical constants\n*/\nclass MathConsts\n{\n\t/**\n\t * The amount to multiply with when converting radians to degrees.\n\t */\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\n\n\t/**\n\t * The amount to multiply with when converting degrees to radians.\n\t */\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\n}\n\nexport = MathConsts;",
    "import Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\n/**\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\n */\nclass Matrix3DUtils\n{\n\t/**\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\n\t */\n\tpublic static RAW_DATA_CONTAINER:Float32Array = new Float32Array(16);\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\n\t *\n\t * @param    quarternion    The quarterion object to convert.\n\t */\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\n\t{\n\t\tvar x:number = quarternion.x;\n\t\tvar y:number = quarternion.y;\n\t\tvar z:number = quarternion.z;\n\t\tvar w:number = quarternion.w;\n\n\t\tvar xx:number = x*x;\n\t\tvar xy:number = x*y;\n\t\tvar xz:number = x*z;\n\t\tvar xw:number = x*w;\n\n\t\tvar yy:number = y*y;\n\t\tvar yz:number = y*z;\n\t\tvar yw:number = y*w;\n\n\t\tvar zz:number = z*z;\n\t\tvar zw:number = z*w;\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\traw[0] = 1 - 2*(yy + zz);\n\t\traw[1] = 2*(xy + zw);\n\t\traw[2] = 2*(xz - yw);\n\t\traw[4] = 2*(xy - zw);\n\t\traw[5] = 1 - 2*(xx + zz);\n\t\traw[6] = 2*(yz + xw);\n\t\traw[8] = 2*(xz + yw);\n\t\traw[9] = 2*(yz - xw);\n\t\traw[10] = 1 - 2*(xx + yy);\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tif (m) {\n\t\t\tm.copyRawDataFrom(raw);\n\t\t\treturn m;\n\t\t} else\n\t\t\treturn new Matrix3D(raw);\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the forward vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The forward vector\n\t */\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(2, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the up vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The up vector\n\t */\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(1, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the right vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The right vector\n\t */\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(0, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\n\t */\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\n\t{\n\t\tvar r1:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar r2:Float32Array = m2.rawData;\n\t\tm1.copyRawDataTo(r1);\n\n\t\tfor (var i:number = 0; i < 16; ++i) {\n\t\t\tif (r1[i] != r2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D)\n\t{\n\t\tvar dirN:Vector3D;\n\t\tvar upN:Vector3D;\n\t\tvar lftN:Vector3D;\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tlftN = dir.crossProduct(up);\n\t\tlftN.normalize();\n\n\t\tupN = lftN.crossProduct(dir);\n\t\tupN.normalize();\n\t\tdirN = dir.clone();\n\t\tdirN.normalize();\n\n\t\traw[0] = lftN.x;\n\t\traw[1] = upN.x;\n\t\traw[2] = -dirN.x;\n\t\traw[3] = 0.0;\n\n\t\traw[4] = lftN.y;\n\t\traw[5] = upN.y;\n\t\traw[6] = -dirN.y;\n\t\traw[7] = 0.0;\n\n\t\traw[8] = lftN.z;\n\t\traw[9] = upN.z;\n\t\traw[10] = -dirN.z;\n\t\traw[11] = 0.0;\n\n\t\traw[12] = -lftN.dotProduct(pos);\n\t\traw[13] = -upN.dotProduct(pos);\n\t\traw[14] = dirN.dotProduct(pos);\n\t\traw[15] = 1.0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target === null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar ab2:number = -2*a*b;\n\t\tvar ac2:number = -2*a*c;\n\t\tvar bc2:number = -2*b*c;\n\t\t// reflection matrix\n\t\trawData[0] = 1 - 2*a*a;\n\t\trawData[4] = ab2;\n\t\trawData[8] = ac2;\n\t\trawData[12] = -2*a*d;\n\t\trawData[1] = ab2;\n\t\trawData[5] = 1 - 2*b*b;\n\t\trawData[9] = bc2;\n\t\trawData[13] = -2*b*d;\n\t\trawData[2] = ac2;\n\t\trawData[6] = bc2;\n\t\trawData[10] = 1 - 2*c*c;\n\t\trawData[14] = -2*c*d;\n\t\trawData[3] = 0;\n\t\trawData[7] = 0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar d:number = raw[12];\n\t\tvar h:number = raw[13];\n\t\tvar l:number = raw[14];\n\t\tvar p:number = raw[15];\n\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z + d;\n\t\tresult.y = e * x + f * y + g * z + h;\n\t\tresult.z = i * x + j * y + k * z + l;\n\t\tresult.w = m * x + n * y + o * z + p;\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z;\n\t\tresult.y = e * x + f * y + g * z;\n\t\tresult.z = i * x + j * y + k * z;\n\t\tresult.w = m * x + n * y + o * z;\n\t\treturn result;\n\t}\n\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif(!result)\n\t\t\tresult = new Vector3D();\n\n\t\ttransform.copyColumnTo(3, result);\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar outIndex:number = 0;\n\t\tvar length:number = vin.length;\n\t\tfor(var index:number = 0; index<length; index+=3) {\n\t\t\tvar x:number = vin[index];\n\t\t\tvar y:number = vin[index+1];\n\t\t\tvar z:number = vin[index+2];\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\n\t\t}\n\t}\n}\n\nexport = Matrix3DUtils;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Orientation3D\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\nclass Matrix3D\n{\n\t/**\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\n\t *\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\n\t * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\n\t */\n\tpublic rawData:Float32Array = new Float32Array(16);\n\n\tprivate static tempMatrix:Matrix3D = new Matrix3D();\n\tprivate static tempRawData:Float32Array = Matrix3D.tempMatrix.rawData;\n\n\tprivate _position:Vector3D;\n\n\tprivate _components:Array<Vector3D>;\n\n\t/**\n\t * Creates a Matrix3D object.\n\t */\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tif (v != null && v.length == 16) {\n\t\t\tthis.copyRawDataFrom(v);\n\t\t} else {\n\t\t\tthis.identity();\n\t\t}\n\t}\n\n\t/**\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\n\t */\n\tpublic append(lhs:Matrix3D)\n\t{\n\t\tvar lrd:Float32Array = lhs.rawData;\n\n\t\tvar m111:number = this.rawData[0];\n\t\tvar m112:number = this.rawData[1];\n\t\tvar m113:number = this.rawData[2];\n\t\tvar m114:number = this.rawData[3];\n\t\tvar m121:number = this.rawData[4];\n\t\tvar m122:number = this.rawData[5];\n\t\tvar m123:number = this.rawData[6];\n\t\tvar m124:number = this.rawData[7];\n\t\tvar m131:number = this.rawData[8];\n\t\tvar m132:number = this.rawData[9];\n\t\tvar m133:number = this.rawData[10];\n\t\tvar m134:number = this.rawData[11];\n\t\tvar m141:number = this.rawData[12];\n\t\tvar m142:number = this.rawData[13];\n\t\tvar m143:number = this.rawData[14];\n\t\tvar m144:number = this.rawData[15];\n\t\tvar m211:number = lrd[0];\n\t\tvar m212:number = lrd[1];\n\t\tvar m213:number = lrd[2];\n\t\tvar m214:number = lrd[3];\n\t\tvar m221:number = lrd[4];\n\t\tvar m222:number = lrd[5];\n\t\tvar m223:number = lrd[6];\n\t\tvar m224:number = lrd[7];\n\t\tvar m231:number = lrd[8];\n\t\tvar m232:number = lrd[9];\n\t\tvar m233:number = lrd[10];\n\t\tvar m234:number = lrd[11];\n\t\tvar m241:number = lrd[12];\n\t\tvar m242:number = lrd[13];\n\t\tvar m243:number = lrd[14];\n\t\tvar m244:number = lrd[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Appends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null )\n\t{\n\t\tthis.append(Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees));\n\t}\n\n\t/**\n\t * Appends an incremental skew change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendSkew(xSkew:number, ySkew:number, zSkew:number)\n\t{\n\t\tif(xSkew == 0 && ySkew == 0 && zSkew == 0) return;\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\traw[0] = 1;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = xSkew;\n\t\traw[5] = 1;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = ySkew;\n\t\traw[9] = zSkew;\n\t\traw[10] = 1;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.append(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\n\t\t\treturn;\n\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = xScale;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = yScale;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = zScale;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.append(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic appendTranslation(x:number, y:number, z:number)\n\t{\n\t\tthis.rawData[12] += x;\n\t\tthis.rawData[13] += y;\n\t\tthis.rawData[14] += z;\n\t}\n\n\t/**\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\n\t */\n\tpublic clone():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.rawData);\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\n\t */\n\tpublic copyFrom(sourceMatrix3D:Matrix3D)\n\t{\n\t\tvar sourceRaw:Float32Array = sourceMatrix3D.rawData;\n\t\tvar len:number = sourceRaw.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = sourceRaw[c];\n\t}\n\n\tpublic copyRawDataFrom(vector:Float32Array, index:number = 0, transpose:boolean = false):void\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = vector.length - index;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = vector[c + index];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\tpublic copyRawDataTo(vector:Float32Array, index:number = 0, transpose:boolean = false)\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = this.rawData.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tvector[c + index ] = this.rawData[c];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies this Matrix3D object into a destination Matrix3D object.\n\t */\n\tpublic copyToMatrix3D(dest:Matrix3D)\n\t{\n\t\tthis.copyRawDataTo(dest.rawData);\n\t}\n\n\t/**\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\n\t */\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\n\t{\n\t\tvar q:Quaternion;\n\n\t\tif (this._components == null)\n\t\t\tthis._components = [new Vector3D(), new Vector3D(), new Vector3D(), new Vector3D()];\n\n\t\tvar colX:Vector3D = new Vector3D(this.rawData[0], this.rawData[1], this.rawData[2]);\n\t\tvar colY:Vector3D = new Vector3D(this.rawData[4], this.rawData[5], this.rawData[6]);\n\t\tvar colZ:Vector3D = new Vector3D(this.rawData[8], this.rawData[9], this.rawData[10]);\n\n\t\tvar pos:Vector3D = this._components[0];\n\t\tpos.x = this.rawData[12];\n\t\tpos.y = this.rawData[13];\n\t\tpos.z = this.rawData[14];\n\n\t\tvar scale:Vector3D = this._components[3];\n\t\tvar skew:Vector3D = this._components[2];\n\n\t\t//compute X scale factor and normalise colX\n\t\tscale.x = colX.length;\n\t\tcolX.scaleBy(1/scale.x);\n\n\t\t//compute XY shear factor and make colY orthogonal to colX\n\t\tskew.x = colX.dotProduct(colY);\n\t\tcolY = Vector3D.combine(colY, colX, 1, -skew.x);\n\n\t\t//compute Y scale factor and normalise colY\n\t\tscale.y = colY.length;\n\t\tcolY.scaleBy(1/scale.y);\n\t\tskew.x /= scale.y;\n\n\t\t//compute XZ and YZ shears and make colZ orthogonal to colX and colY\n\t\tskew.y = colX.dotProduct(colZ);\n\t\tcolZ = Vector3D.combine(colZ, colX, 1, -skew.y);\n\t\tskew.z = colY.dotProduct(colZ);\n\t\tcolZ = Vector3D.combine(colZ, colY, 1, -skew.z);\n\n\t\t//compute Z scale and normalise colZ\n\t\tscale.z = colZ.length;\n\t\tcolZ.scaleBy(1/scale.z);\n\t\tskew.y /= scale.z;\n\t\tskew.z /= scale.z;\n\n\t\t//at this point, the matrix (in cols) is orthonormal\n\t\t//check for a coordinate system flip. If the determinant is -1, negate the z scaling factor\n\t\tif (colX.dotProduct(colY.crossProduct(colZ)) < 0) {\n\t\t\tscale.z = -scale.z;\n\t\t\tcolZ.x = -colZ.x;\n\t\t\tcolZ.y = -colZ.y;\n\t\t\tcolZ.z = -colZ.z;\n\t\t}\n\n\t\tvar rot = this._components[1];\n\n\t\tswitch (orientationStyle) {\n\t\t\tcase Orientation3D.AXIS_ANGLE:\n\n\t\t\t\trot.w = Math.acos((colX.x + colY.y + colZ.z - 1)/2);\n\n\t\t\t\tvar len:number = Math.sqrt((colY.z - colZ.y)*(colY.z - colZ.y) + (colZ.x - colX.z)*(colZ.x - colX.z) + (colX.y - colY.x)*(colX.y - colY.x));\n\t\t\t\trot.x = (colY.z - colZ.y)/len;\n\t\t\t\trot.y = (colZ.x - colX.z)/len;\n\t\t\t\trot.z = (colX.y - colY.x)/len;\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.QUATERNION:\n\n\t\t\t\tvar tr = colX.x + colY.y + colZ.z;\n\n\t\t\t\tif (tr > 0) {\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\n\n\t\t\t\t\trot.x = (colY.z - colZ.y)/(4*rot.w);\n\t\t\t\t\trot.y = (colZ.x - colX.z)/(4*rot.w);\n\t\t\t\t\trot.z = (colX.y - colY.x)/(4*rot.w);\n\t\t\t\t} else if ((colX.x > colY.y) && (colX.x > colZ.z)) {\n\t\t\t\t\trot.x = Math.sqrt(1 + colX.x - colY.y - colZ.z)/2;\n\n\t\t\t\t\trot.w = (colY.z - colZ.y)/(4*rot.x);\n\t\t\t\t\trot.y = (colX.y + colY.x)/(4*rot.x);\n\t\t\t\t\trot.z = (colZ.x + colX.z)/(4*rot.x);\n\t\t\t\t} else if (colY.y > colZ.z) {\n\t\t\t\t\trot.y = Math.sqrt(1 + colY.y - colX.x - colZ.z)/2;\n\n\t\t\t\t\trot.x = (colX.y + colY.x)/(4*rot.y);\n\t\t\t\t\trot.w = (colZ.x - colX.z)/(4*rot.y);\n\t\t\t\t\trot.z = (colY.z + colZ.y)/(4*rot.y);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = Math.sqrt(1 + colZ.z - colX.x - colY.y)/2;\n\n\t\t\t\t\trot.x = (colZ.x + colX.z)/(4*rot.z);\n\t\t\t\t\trot.y = (colY.z + colZ.y)/(4*rot.z);\n\t\t\t\t\trot.w = (colX.y - colY.x)/(4*rot.z);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\n\t\t\t\trot.y = Math.asin(-colX.z);\n\n\t\t\t\t//var cos:number = Math.cos(rot.y);\n\n\t\t\t\tif (colX.z != 1 && colX.z != -1) {\n\t\t\t\t\trot.x = Math.atan2(colY.z, colZ.z);\n\t\t\t\t\trot.z = Math.atan2(colX.y, colX.x);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = 0;\n\t\t\t\t\trot.x = Math.atan2(colY.x, colY.y);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn this._components;\n\t}\n\n\t/**\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\n\t * coordinate to another.\n\t */\n\tpublic deltaTransformVector(v:Vector3D, t:Vector3D = null):Vector3D\n\t{\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\tif (!t)\n\t\t\tt = new Vector3D();\n\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8];\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9];\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10];\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11];\n\n\t\treturn t;\n\t}\n\n\t/**\n\t * Converts the current matrix to an identity or unit matrix.\n\t */\n\tpublic identity()\n\t{\n\t\tthis.rawData[0] = 1;\n\t\tthis.rawData[1] = 0;\n\t\tthis.rawData[2] = 0;\n\t\tthis.rawData[3] = 0;\n\t\tthis.rawData[4] = 0;\n\t\tthis.rawData[5] = 1;\n\t\tthis.rawData[6] = 0;\n\t\tthis.rawData[7] = 0;\n\t\tthis.rawData[8] = 0;\n\t\tthis.rawData[9] = 0;\n\t\tthis.rawData[10] = 1;\n\t\tthis.rawData[11] = 0;\n\t\tthis.rawData[12] = 0;\n\t\tthis.rawData[13] = 0;\n\t\tthis.rawData[14] = 0;\n\t\tthis.rawData[15] = 1;\n\t}\n\n\t/**\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\n\t */\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\n\t */\n\tpublic interpolateTo(toMat:Matrix3D, percent:number)\n\t{\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\n\t}\n\n\t/**\n\t * Inverts the current matrix.\n\t */\n\tpublic invert():boolean\n\t{\n\t\tvar d = this.determinant;\n\t\tvar invertable:boolean = Math.abs(d) > 0.00000000001;\n\n\t\tif (invertable) {\n\t\t\td = 1/d;\n\t\t\tvar m11:number = this.rawData[0];\n\t\t\tvar m12:number = this.rawData[1];\n\t\t\tvar m13:number = this.rawData[2];\n\t\t\tvar m14:number = this.rawData[3];\n\t\t\tvar m21:number = this.rawData[4];\n\t\t\tvar m22:number = this.rawData[5];\n\t\t\tvar m23:number = this.rawData[6];\n\t\t\tvar m24:number = this.rawData[7];\n\t\t\tvar m31:number = this.rawData[8];\n\t\t\tvar m32:number = this.rawData[9];\n\t\t\tvar m33:number = this.rawData[10];\n\t\t\tvar m34:number = this.rawData[11];\n\t\t\tvar m41:number = this.rawData[12];\n\t\t\tvar m42:number = this.rawData[13];\n\t\t\tvar m43:number = this.rawData[14];\n\t\t\tvar m44:number = this.rawData[15];\n\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\n\t\t}\n\t\treturn invertable;\n\t}\n\n\t/* TODO implement pointAt\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\n\t {\n\t }\n\t */\n\n\t/**\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\n\t */\n\tpublic prepend(rhs:Matrix3D)\n\t{\n\t\tvar m111:number = rhs.rawData[0];\n\t\tvar m112:number = rhs.rawData[1];\n\t\tvar m113:number = rhs.rawData[2];\n\t\tvar m114:number = rhs.rawData[3];\n\t\tvar m121:number = rhs.rawData[4];\n\t\tvar m122:number = rhs.rawData[5];\n\t\tvar m123:number = rhs.rawData[6];\n\t\tvar m124:number = rhs.rawData[7];\n\t\tvar m131:number = rhs.rawData[8];\n\t\tvar m132:number = rhs.rawData[9];\n\t\tvar m133:number = rhs.rawData[10];\n\t\tvar m134:number = rhs.rawData[11];\n\t\tvar m141:number = rhs.rawData[12];\n\t\tvar m142:number = rhs.rawData[13];\n\t\tvar m143:number = rhs.rawData[14];\n\t\tvar m144:number = rhs.rawData[15];\n\n\t\tvar m211:number = this.rawData[0];\n\t\tvar m212:number = this.rawData[1];\n\t\tvar m213:number = this.rawData[2];\n\t\tvar m214:number = this.rawData[3];\n\t\tvar m221:number = this.rawData[4];\n\t\tvar m222:number = this.rawData[5];\n\t\tvar m223:number = this.rawData[6];\n\t\tvar m224:number = this.rawData[7];\n\t\tvar m231:number = this.rawData[8];\n\t\tvar m232:number = this.rawData[9];\n\t\tvar m233:number = this.rawData[10];\n\t\tvar m234:number = this.rawData[11];\n\t\tvar m241:number = this.rawData[12];\n\t\tvar m242:number = this.rawData[13];\n\t\tvar m243:number = this.rawData[14];\n\t\tvar m244:number = this.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\t}\n\n\t/**\n\t * Prepends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\t/*\n\t\t if ( pivot != null )\n\t\t {\n\t\t var p:Vector3D = pivot;\n\t\t m.appendTranslation( p.x, p.y, p.z );\n\t\t }\n\t\t */\n\t\tthis.prepend(m);\n\t}\n\n\t/**\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic prependScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\n\t\t\treturn;\n\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = xScale;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = yScale;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = zScale;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.prepend(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic prependTranslation(x:number, y:number, z:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = 1;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = 1;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = 1;\n\t\traw[11] = 0;\n\n\t\traw[12] = x;\n\t\traw[13] = y;\n\t\traw[14] = z;\n\t\traw[15] = 1;\n\n\t\tthis.prepend(Matrix3D.tempMatrix);\n\t}\n\n\t// TODO orientationStyle\n\t/**\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\n\t */\n\tpublic recompose(components:Vector3D[]):boolean\n\t{\n\t\tvar pos:Vector3D = (components[0])? components[0] : this.position;\n\n\t\tthis.identity();\n\t\tvar scale:Vector3D = components[3];\n\t\tif(scale && (scale.x != 1 || scale.y != 1 || scale.z != 1))\n\t\t\tthis.appendScale(scale.x, scale.y, scale.z);\n\n\t\tvar skew:Vector3D = components[2];\n\t\tif(skew && (skew.x !=0 || skew.y != 0 || skew.z != 0))\n\t\t\tthis.appendSkew(skew.x, skew.y, skew.z);\n\n\t\tvar sin:number;\n\t\tvar cos:number;\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 0;\n\n\t\tvar rotation:Vector3D = components[1];\n\t\tif (rotation) {\n\t\t\tvar angle:number = -rotation.x;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = 1;\n\t\t\t\traw[1] = 0;\n\t\t\t\traw[2] = 0;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = 0;\n\t\t\t\traw[5] = cos;\n\t\t\t\traw[6] = -sin;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = 0;\n\t\t\t\traw[9] = sin;\n\t\t\t\traw[10] = cos;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t\tangle = -rotation.y;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = cos;\n\t\t\t\traw[1] = 0;\n\t\t\t\traw[2] = sin;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = 0;\n\t\t\t\traw[5] = 1;\n\t\t\t\traw[6] = 0;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = -sin;\n\t\t\t\traw[9] = 0;\n\t\t\t\traw[10] = cos;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t\tangle = -rotation.z;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = cos;\n\t\t\t\traw[1] = -sin;\n\t\t\t\traw[2] = 0;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = sin;\n\t\t\t\traw[5] = cos;\n\t\t\t\traw[6] = 0;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = 0;\n\t\t\t\traw[9] = 0;\n\t\t\t\traw[10] = 1;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t}\n\n\t\tthis.position = pos;\n\t\tthis.rawData[15] = 1;\n\n\t\treturn true;\n\t}\n\n\tpublic transformVector(v:Vector3D, t:Vector3D = null):Vector3D\n\t{\n\t\tif (v == null)\n\t\t\treturn t || new Vector3D();\n\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\tif (!t)\n\t\t\tt = new Vector3D();\n\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15];\n\n\t\treturn t;\n\t}\n\n\tpublic transformBox(b:Box, t:Box = null):Box\n\t{\n\t\tif (b == null)\n\t\t\treturn t || new Box();\n\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tmaxX = b.width + (minX = b.x);\n\t\tmaxY = b.height + (minY = b.y);\n\t\tmaxZ = b.depth + (minZ = b.z);\n\n\t\tif (!t)\n\t\t\tt = new Box();\n\n\t\t//TODO: take account of shear\n\t\tt.width = maxX*this.rawData[0] + maxY*this.rawData[4] + maxZ*this.rawData[8] + this.rawData[12] - (t.x = minX*this.rawData[0] + minY*this.rawData[4] + minZ*this.rawData[8] + this.rawData[12]);\n\t\tt.height = maxX*this.rawData[1] + maxY*this.rawData[5] + maxZ*this.rawData[9] + this.rawData[13] - (t.y = minX*this.rawData[1] + minY*this.rawData[5] + minZ*this.rawData[9] + this.rawData[13]);\n\t\tt.depth = maxX*this.rawData[2] + maxY*this.rawData[6] + maxZ*this.rawData[10] + this.rawData[14] - (t.z = minX*this.rawData[2] + minY*this.rawData[6] + minZ*this.rawData[10] + this.rawData[14]);\n\n\t\treturn t;\n\t}\n\n\t/**\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\n\t */\n\tpublic transformVectors(vin:number[], vout:number[])\n\t{\n\t\tvar i:number = 0;\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\n\n\t\twhile (i + 3 <= vin.length) {\n\t\t\tx = vin[i];\n\t\t\ty = vin[i + 1];\n\t\t\tz = vin[i + 2];\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\n\t */\n\tpublic transpose()\n\t{\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\tthis.copyRawDataTo(raw);\n\n\t\tthis.rawData[1] = raw[4];\n\t\tthis.rawData[2] = raw[8];\n\t\tthis.rawData[3] = raw[12];\n\t\tthis.rawData[4] = raw[1];\n\t\tthis.rawData[6] = raw[9];\n\t\tthis.rawData[7] = raw[13];\n\t\tthis.rawData[8] = raw[2];\n\t\tthis.rawData[9] = raw[6];\n\t\tthis.rawData[11] = raw[14];\n\t\tthis.rawData[12] = raw[3];\n\t\tthis.rawData[13] = raw[7];\n\t\tthis.rawData[14] = raw[11];\n\t}\n\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\n\t{\n\n\t\t// internal class use by rotations which have been tested\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tvar rad = degrees*( Math.PI/180 );\n\t\tvar c:number = Math.cos(rad);\n\t\tvar s:number = Math.sin(rad);\n\t\tvar t:number = 1 - c;\n\t\tvar tmp1:number, tmp2:number;\n\n\t\tm.rawData[0] = c + x*x*t;\n\t\tm.rawData[5] = c + y*y*t;\n\t\tm.rawData[10] = c + z*z*t;\n\n\t\ttmp1 = x*y*t;\n\t\ttmp2 = z*s;\n\t\tm.rawData[1] = tmp1 + tmp2;\n\t\tm.rawData[4] = tmp1 - tmp2;\n\t\ttmp1 = x*z*t;\n\t\ttmp2 = y*s;\n\t\tm.rawData[8] = tmp1 + tmp2;\n\t\tm.rawData[2] = tmp1 - tmp2;\n\t\ttmp1 = y*z*t;\n\t\ttmp2 = x*s;\n\t\tm.rawData[9] = tmp1 - tmp2;\n\t\tm.rawData[6] = tmp1 + tmp2;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * [read-only] A Number that determines whether a matrix is invertible.\n\t */\n\tpublic get determinant():number\n\t{\n\t\treturn ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\n\t}\n\n\t/**\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\n\t * transformation's frame of reference.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\tif (this._position == null)\n\t\t\tthis._position = new Vector3D();\n\n\t\tthis._position.x = this.rawData[12];\n\t\tthis._position.y = this.rawData[13];\n\t\tthis._position.z = this.rawData[14];\n\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis.rawData[12] = value.x;\n\t\tthis.rawData[13] = value.y;\n\t\tthis.rawData[14] = value.z;\n\t}\n\n\tpublic toFixed(decimalPlace:number):string\n\t{\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\n\t}\n}\n\nexport = Matrix3D;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\n/**\n * The Matrix class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n *\n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n *\n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n *\n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n *\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n *\n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n *\n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n *\n * <p>The Matrix class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n *\n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n *\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nclass Matrix\n{\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic d:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>x</i> axis.\n\t */\n\tpublic tx:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>y</i> axis.\n\t */\n\tpublic ty:number;\n\n\t/**\n\t * Creates a new Matrix object with the specified parameters. In matrix\n\t * notation, the properties are organized like this:\n\t *\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n\t * constructor, it creates an <i>identity matrix</i> with the following\n\t * values:</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @return A Matrix object.\n\t */\n\tpublic clone():Matrix\n\t{\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Concatenates a matrix with the current matrix, effectively combining the\n\t * geometric effects of the two. In mathematical terms, concatenating two\n\t * matrixes is the same as combining them using matrix multiplication.\n\t *\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n\t *\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\n\t * you want to concatenate two matrixes without altering either of the two\n\t * source matrixes, first copy the source matrix by using the\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\n\t *\n\t * @param matrix The matrix to be concatenated to the source matrix.\n\t */\n\tpublic concat(matrix:Matrix):void\n\t{\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\n\t * object.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t} else if (column == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (column == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix object into the Vector3D\n\t * object. The w element of the Vector3D object will not be changed.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\n\t\t} else if (column == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.c;\n\t\t\tvector3D.z = 0;\n\t\t} else if (column == 1) {\n\t\t\tvector3D.x = this.b;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = 0;\n\t\t} else {\n\t\t\tvector3D.x = this.tx;\n\t\t\tvector3D.y = this.ty;\n\t\t\tvector3D.z = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Point object into the\n\t * calling Matrix object.\n\t *\n\t * @param sourceMatrix The Matrix object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceMatrix:Matrix):void\n\t{\n\t\tthis.a = sourceMatrix.a;\n\t\tthis.b = sourceMatrix.b;\n\t\tthis.c = sourceMatrix.c;\n\t\tthis.d = sourceMatrix.d;\n\t\tthis.tx = sourceMatrix.tx;\n\t\tthis.ty = sourceMatrix.ty;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (row == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\n\t * The w element of the Vector3D object will not be changed.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.b;\n\t\t\tvector3D.z = this.tx;\n\t\t} else if (row == 1) {\n\t\t\tvector3D.x = this.c;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = this.ty;\n\t\t} else {\n\t\t\tvector3D.setTo(0, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Includes parameters for scaling, rotation, and translation. When applied\n\t * to a matrix it sets the matrix's values based on those parameters.\n\t *\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\n\t * matrix as you would if you applied the <code>identity()</code>,\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n\t * 100, 100)</code> has the same effect as the following:</p>\n\t *\n\t * @param scaleX   The factor by which to scale horizontally.\n\t * @param scaleY   The factor by which scale vertically.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The number of pixels to translate(move) to the right\n\t *                 along the <i>x</i> axis.\n\t * @param ty       The number of pixels to translate(move) down along the\n\t *                 <i>y</i> axis.\n\t */\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = scaleX;\n\t\tthis.d = scaleY;\n\t\tthis.b = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Creates the specific style of matrix expected by the\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n\t * methods of the Graphics class. Width and height are scaled to a\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\n\t * height.\n\t *\n\t * <p>For example, consider a gradient with the following\n\t * characteristics:</p>\n\t *\n\t * <ul>\n\t *   <li><code>GradientType.LINEAR</code></li>\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n\t * 255]</code></li>\n\t *   <li><code>SpreadMethod.PAD</code></li>\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n\t * </ul>\n\t *\n\t * <p>The following illustrations show gradients in which the matrix was\n\t * defined using the <code>createGradientBox()</code> method with different\n\t * parameter settings:</p>\n\t *\n\t * @param width    The width of the gradient box.\n\t * @param height   The height of the gradient box.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The distance, in pixels, to translate to the right along\n\t *                 the <i>x</i> axis. This value is offset by half of the\n\t *                 <code>width</code> parameter.\n\t * @param ty       The distance, in pixels, to translate down along the\n\t *                 <i>y</i> axis. This value is offset by half of the\n\t *                 <code>height</code> parameter.\n\t */\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = width/1638.4;\n\t\tthis.d = height/1638.4;\n\n\t\tif (rotation != 0.0) {\n\t\t\tvar cos = Math.cos(rotation);\n\t\t\tvar sin = Math.sin(rotation);\n\n\t\t\tthis.b = sin*this.d;\n\t\t\tthis.c = -sin*this.a;\n\t\t\tthis.a *= cos;\n\t\t\tthis.d *= cos;\n\t\t} else {\n\t\t\tthis.b = this.c = 0;\n\t\t}\n\n\t\tthis.tx = tx + width/2;\n\t\tthis.ty = ty + height/2;\n\t}\n\n\t/**\n\t * Given a point in the pretransform coordinate space, returns the\n\t * coordinates of that point after the transformation occurs. Unlike the\n\t * standard transformation applied using the <code>transformPoint()</code>\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\n\t * does not consider the translation parameters <code>tx</code> and\n\t * <code>ty</code>.\n\t *\n\t * @param point The point for which you want to get the result of the matrix\n\t *              transformation.\n\t * @return The point resulting from applying the matrix transformation.\n\t */\n\tpublic deltaTransformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\n\t}\n\n\t/**\n\t * Sets each matrix property to a value that causes a null transformation. An\n\t * object transformed by applying an identity matrix will be identical to the\n\t * original.\n\t *\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n\t * <code>ty</code>=0.</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t */\n\tpublic identity():void\n\t{\n\t\tthis.a = 1;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 1;\n\t\tthis.tx = 0;\n\t\tthis.ty = 0;\n\t}\n\n\t/**\n\t * Performs the opposite transformation of the original matrix. You can apply\n\t * an inverted matrix to an object to undo the transformation performed when\n\t * applying the original matrix.\n\t */\n\tpublic invert():void\n\t{\n\t\tvar norm = this.a*this.d - this.b*this.c;\n\n\t\tif (norm == 0) {\n\t\t\tthis.a = this.b = this.c = this.d = 0;\n\t\t\tthis.tx = -this.tx;\n\t\t\tthis.ty = -this.ty;\n\t\t} else {\n\t\t\tnorm = 1.0/norm;\n\t\t\tvar a1 = this.d*norm;\n\t\t\tthis.d = this.a*norm;\n\t\t\tthis.a = a1;\n\t\t\tthis.b *= -norm;\n\t\t\tthis.c *= -norm;\n\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\n\t\t\tthis.tx = tx1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @param matrix The matrix for which you want to get the result of the matrix\n\t *               transformation.\n\t * @return A Matrix object.\n\t */\n\tpublic multiply(matrix:Matrix):Matrix\n\t{\n\t\tvar result = new Matrix();\n\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Applies a rotation transformation to the Matrix object.\n\t *\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n\t * Matrix object. In matrix notation, this is the same as concatenating the\n\t * current matrix with the following:</p>\n\t *\n\t * @param angle The rotation angle in radians.\n\t */\n\tpublic rotate(angle:number):void\n\t{\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\n\t\tvar a1 = this.a*cos - this.b*sin;\n\t\tthis.b = this.a*sin + this.b*cos;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*cos - this.d*sin;\n\t\tthis.d = this.c*sin + this.d*cos;\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\n\t\tthis.ty = this.tx*sin + this.ty*cos;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n\t * <code>sy</code>.\n\t *\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\n\t * is the same as concatenating the current matrix with the following\n\t * matrix:</p>\n\t *\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\n\t */\n\tpublic scale(sx:number, sy:number):void\n\t{\n\t\tthis.a *= sx;\n\t\tthis.b *= sy;\n\n\t\tthis.c *= sx;\n\t\tthis.d *= sy;\n\n\t\tthis.tx *= sx;\n\t\tthis.ty *= sy;\n\t}\n\n\t/**\n\t * Sets the members of Matrix to the specified values.\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a text value listing the properties of the Matrix object.\n\t *\n\t * @return A string containing the values of the properties of the Matrix\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n\t}\n\n\t/**\n\t * Returns the result of applying the geometric transformation represented by\n\t * the Matrix object to the specified point.\n\t *\n\t * @param point The point for which you want to get the result of the Matrix\n\t *              transformation.\n\t * @return The point resulting from applying the Matrix transformation.\n\t */\n\tpublic transformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\n\t}\n\n\t/**\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n\t * by the <code>dx</code> and <code>dy</code> parameters.\n\t *\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\n\t *           pixels.\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\n\t */\n\tpublic translate(dx:number, dy:number):void\n\t{\n\t\tthis.tx += dx;\n\t\tthis.ty += dy;\n\t}\n}\n\nexport = Matrix;",
    "/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Orientation3D\n{\n\t/**\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\n\t * @type {string}\n\t */\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\n\n\t/**\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\n\t * @type {string}\n\t */\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\n\n\t/**\n\t * The quaternion orientation uses complex numbers.\n\t * @type {string}\n\t */\n\tpublic static QUATERNION:string = \"quaternion\";\n}\n\nexport = Orientation3D;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * <p>The PerspectiveProjection class provides an easy way to assign or modify\n * the perspective transformations of a display object and all of its\n * children. For more complex or custom perspective transformations, use the\n * Matrix3D class. While the PerspectiveProjection class provides basic\n * three-dimensional presentation properties, the Matrix3D class provides more\n * detailed control over the three-dimensional presentation of display objects.\n * </p>\n *\n * <p>Projection is a way of representing a three-dimensional object in a\n * two-dimensional space, like a cube projected onto a computer screen.\n * Perspective projection uses a viewing frustum (a rectangular pyramid) to\n * model and project a three-dimensional world and its objects on the screen.\n * The viewing frustum becomes increasingly wider as it moves further from the\n * origin of the viewpoint. The origin of the viewpoint could be a camera or\n * the eyes of an observer facing the screen. The projected perspective\n * produces the illusion of three dimensions with depth and distance, where\n * the objects closer to the screen appear larger than the objects farther\n * from the screen.</p>\n *\n * <p>A default PerspectiveProjection object is a framework defined for\n * perspective transformation of the root object, based on the field of view\n * and aspect ratio (dimensions) of the stage. The projection center, the\n * vanishing point, is set to the center of the stage, which means the\n * three-dimensional display objects disappear toward the center of the stage\n * as they move back in the z axis. The default viewpoint is at point (0,0)\n * looking down the positive z axis. The y-axis points down toward the bottom\n * of the screen. You can gain access to the root display object's perspective\n * projection settings and change the field of view and projection center\n * properties of the perspectiveProjection property through the root object's\n * <code>DisplayObject.transform</code> property.</p>\n *\n * <p>You can also set a different perspective projection setting for a\n * display object through the parent's perspective projection. First, create a\n * PerspectiveProjection object and set its <code>fieldOfView</code> and\n * <code>projectionCenter</code> properties. Next, assign the\n * PerspectiveProjection object to the parent display object using the\n * <code>DisplayObject.transform</code> property. The specified projection\n * matrix and transformation will then apply to all the display object's\n * three-dimensional children.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass PerspectiveProjection\n{\n\tprivate _matrix3D:Matrix3D;\n\n\t/**\n\t * Specifies an angle, as a degree between 0 and 180, for the field of\n\t * view in three dimensions. This value determines how strong the\n\t * perspective transformation and distortion apply to a\n\t * three-dimensional display object with a non-zero z-coordinate.\n\t *\n\t * <p>A degree close to 0 means that the screen's two-dimensional x-\n\t * and y-coordinates are roughly the same as the three-dimensional x-,\n\t * y-, and z-coordinates with little or no distortion. In other words,\n\t * for a small angle, a display object moving down the z axis appears\n\t * to stay near the same size and moves little.</p>\n\t *\n\t * <p>A value close to 180 degrees results in a fisheye projection effect:\n\t * positions with a z value smaller than 0 are magnified, while\n\t * positions with a z value larger than 0 are minimized. With a large\n\t * angle, a display object moving down the z axis appears to change\n\t * size quickly and moves a great distance. If the field of view is\n\t * set to 0 or 180, nothing is seen on the screen.</p>\n\t */\n\tpublic fieldOfView:number;\n\n\t/**\n\t * The distance between the eye or the viewpoint's origin (0,0,0) and\n\t * the display object located in the z axis. During the perspective\n\t * transformation, the <code>focalLength</code> is calculated\n\t * dynamically using the angle of the field of view and the stage's\n\t * aspect ratio (stage width divided by stage height).\n\t *\n\t * @see away.geom.PerspectiveProjection#fieldOfView\n\t */\n\tpublic focalLength:number;\n\n\t/**\n\t * A two-dimensional point representing the center of the projection,\n\t * the vanishing point for the display object.\n\t *\n\t * <p>The <code>projectionCenter</code> property is an offset to the\n\t * default registration point that is the upper left of the stage,\n\t * point (0,0). The default projection transformation center is in the\n\t * middle of the stage, which means the three-dimensional display\n\t * objects disappear toward the center of the stage as they move\n\t * backwards in the z axis.</p>\n\t */\n\tpublic projectionCenter:Point;\n\n\t/**\n\t * Creates an instance of a PerspectiveProjection object.\n\t */\n\tconstructor()\n\t{\n\n\t}\n\t/**\n\t * Returns the underlying Matrix3D object of the display object.\n\t *\n\t * <p>A display object, like the root object, can have a\n\t * PerspectiveProjection object without needing a Matrix3D property\n\t * defined for its transformations. In fact, use either a\n\t * PerspectiveProjection or a Matrix3D object to specify the\n\t * perspective transformation. If when using the PerspectiveProjection\n\t * object, a Matrix3D object was needed, the <code>toMatrix3D()</code>\n\t * method can retrieve the underlying Matrix3D object of the display\n\t * object. For example, the <code>toMatrix3D()</code> method can be\n\t * used with the <code>Utils3D.projectVectors()</code> method.</p>\n\t *\n\t * @see away.geom.Matrix3D\n\t */\n\tpublic toMatrix3D():Matrix3D\n\t{\n\t\treturn this._matrix3D;\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Plane3D\n{\n\t/**\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\n\t */\n\tpublic d:number;\n\n\tpublic _iAlignment:number;\n\n\t// indicates the alignment of the plane\n\tpublic static ALIGN_ANY:number = 0;\n\tpublic static ALIGN_XY_AXIS:number = 1;\n\tpublic static ALIGN_YZ_AXIS:number = 2;\n\tpublic static ALIGN_XZ_AXIS:number = 3;\n\n\t/**\n\t * Create a Plane3D with ABCD coefficients\n\t */\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\n\t\tif (a == 0 && b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (b == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (a == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\n\t * @param p0 Vector3D\n\t * @param p1 Vector3D\n\t * @param p2 Vector3D\n\t */\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D)\n\t{\n\t\tvar d1x:number = p1.x - p0.x;\n\t\tvar d1y:number = p1.y - p0.y;\n\t\tvar d1z:number = p1.z - p0.z;\n\n\t\tvar d2x:number = p2.x - p0.x;\n\t\tvar d2y:number = p2.y - p0.y;\n\t\tvar d2z:number = p2.z - p0.z;\n\n\t\tthis.a = d1y*d2z - d1z*d2y;\n\t\tthis.b = d1z*d2x - d1x*d2z;\n\t\tthis.c = d1x*d2y - d1y*d2x;\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\n\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\n\t * @param normal Vector3D\n\t * @param point  Vector3D\n\t */\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D)\n\t{\n\t\tthis.a = normal.x;\n\t\tthis.b = normal.y;\n\t\tthis.c = normal.z;\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Normalize this Plane3D\n\t * @return Plane3D This Plane3D.\n\t */\n\tpublic normalize():Plane3D\n\t{\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\n\t\tthis.a *= len;\n\t\tthis.b *= len;\n\t\tthis.c *= len;\n\t\tthis.d *= len;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the signed distance between this Plane3D and the point p.\n\t * @param p Vector3D\n\t * @returns Number\n\t */\n\tpublic distance(p:Vector3D):number\n\t{\n\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\n\n\t\t\treturn this.a*p.x - this.d;\n\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\n\t\t\treturn this.b*p.y - this.d;\n\t\t}\n\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\n\n\t\t\treturn this.c*p.z - this.d;\n\n\t\t} else {\n\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\n\t * @param p Vector3D\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\n\t */\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\n\t{\n\t\t// check NaN\n\t\tif (this.d != this.d)\n\t\t\treturn PlaneClassification.FRONT;\n\n\t\tvar len:number;\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\n\t\t\tlen = this.c*p.z - this.d; else\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\tif (len < -epsilon)\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\n\t\t\treturn PlaneClassification.FRONT; else\n\t\t\treturn PlaneClassification.INTERSECT;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\n\t}\n}\n\nexport = Plane3D;",
    "class PlaneClassification\n{\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\n\tpublic static BACK:number = 0;\n\tpublic static FRONT:number = 1;\n\n\tpublic static IN:number = 0;\n\tpublic static OUT:number = 1;\n\tpublic static INTERSECT:number = 2;\n\n}\n\nexport = PlaneClassification;",
    "/**\n * The Point object represents a location in a two-dimensional coordinate\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\n * represents the vertical axis.\n *\n * <p>The following code creates a point at(0,0):</p>\n *\n * <p>Methods and properties of the following classes use Point objects:</p>\n *\n * <ul>\n *   <li>BitmapData</li>\n *   <li>DisplayObject</li>\n *   <li>DisplayObjectContainer</li>\n *   <li>DisplacementMapFilter</li>\n *   <li>NativeWindow</li>\n *   <li>Matrix</li>\n *   <li>Rectangle</li>\n * </ul>\n *\n * <p>You can use the <code>new Point()</code> constructor to create a Point\n * object.</p>\n */\nclass Point\n{\n\t/**\n\t * The horizontal coordinate of the point. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The vertical coordinate of the point. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The length of the line segment from(0,0) to this point.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\n\t}\n\n\t/**\n\t * Creates a new point. If you pass no parameters to this method, a point is\n\t * created at(0,0).\n\t *\n\t * @param x The horizontal coordinate.\n\t * @param y The vertical coordinate.\n\t */\n\tconstructor(x:number = 0, y:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t/**\n\t * Adds the coordinates of another point to the coordinates of this point to\n\t * create a new point.\n\t *\n\t * @param v The point to be added.\n\t * @return The new point.\n\t */\n\tpublic add(v:Point):Point\n\t{\n\t\treturn new Point(this.x + v.x, this.y + v.y);\n\t}\n\n\t/**\n\t * Creates a copy of this Point object.\n\t *\n\t * @return The new Point object.\n\t */\n\tpublic clone():Point\n\t{\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\tpublic copyFrom(sourcePoint:Point)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether two points are equal. Two points are equal if they have\n\t * the same <i>x</i> and <i>y</i> values.\n\t *\n\t * @param toCompare The point to be compared.\n\t * @return A value of <code>true</code> if the object is equal to this Point\n\t *         object; <code>false</code> if it is not equal.\n\t */\n\tpublic equals(toCompare:Point):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\n\t}\n\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current point is\n\t *                 (0,5), and you normalize it to 1, the point returned is\n\t *                  at(0,1).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\treturn;\n\t\t}\n\t\tthrow \"Cannot divide by zero length.\";\n\t}\n\n\t/**\n\t * Offsets the Point object by the specified amount. The value of\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\n\t * value of <i>y</i> to create the new <i>y</i> value.\n\t *\n\t * @param dx The amount by which to offset the horizontal coordinate,\n\t *           <i>x</i>.\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\tpublic setTo(xa:number, ya:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t}\n\n\t/**\n\t * Subtracts the coordinates of another point from the coordinates of this\n\t * point to create a new point.\n\t *\n\t * @param v The point to be subtracted.\n\t * @return The new point.\n\t */\n\tpublic subtract(v:Point):Point\n\t{\n\t\treturn new Point(this.x - v.x, this.y - v.y);\n\t}\n\n\t/**\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\n\t *\n\t * @return The string representation of the coordinates.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\n\t}\n\n\t/**\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @return The distance between the first and second points.\n\t */\n\tpublic static distance(pt1:Point, pt2:Point):number\n\t{\n\t\tvar dx:number = pt2.x - pt1.x;\n\t\tvar dy:number = pt2.y - pt1.y;\n\n\t\treturn Math.sqrt(dx*dx + dy*dy);\n\t}\n\n\t/**\n\t * Determines a point between two specified points. The parameter\n\t * <code>f</code> determines where the new interpolated point is located\n\t * relative to the two end points specified by parameters <code>pt1</code>\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\n\t * point(parameter <code>pt2</code>).\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @param f   The level of interpolation between the two points. Indicates\n\t *            where the new point will be, along the line between\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\n\t *            <code>pt2</code> is returned.\n\t * @return The new, interpolated point.\n\t */\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\n\t{\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\n\t}\n\n\t/**\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\n\t *\n\t * @param len   The length coordinate of the polar pair.\n\t * @param angle The angle, in radians, of the polar pair.\n\t * @return The Cartesian point.\n\t */\n\tpublic static polar(len:number, angle:number):Point\n\t{\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\n\t}\n}\n\nexport = Point;\n",
    "class PoissonLookup\n{\n\tpublic static _distributions:Array<Array<number>>;\n\n\tpublic static initDistributions():void\n\t{\n\t\t// precalculated for best control\n\t\tthis._distributions = new Array<Array<number>>();\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\n\t}\n\n\tpublic static getDistribution(n:number /*int*/):Array<number>\n\t{\n\t\tif (!this._distributions)\n\t\t\tthis.initDistributions();\n\n\t\tif (n < 2 || n > 32)\n\t\t\treturn null;\n\n\t\treturn this._distributions[n - 1];\n\t}\n}\n\nexport = PoissonLookup;",
    "import Matrix3DUtils\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Orientation3D\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Matrix3D\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Quaternion\n{\n\t/**\n\t * The x value of the quaternion.\n\t */\n\tpublic x:number = 0;\n\n\t/**\n\t * The y value of the quaternion.\n\t */\n\tpublic y:number = 0;\n\n\t/**\n\t * The z value of the quaternion.\n\t */\n\tpublic z:number = 0;\n\n\t/**\n\t * The w value of the quaternion.\n\t */\n\tpublic w:number = 1;\n\n\t/**\n\t * Creates a new Quaternion object.\n\t * @param x The x value of the quaternion.\n\t * @param y The y value of the quaternion.\n\t * @param z The z value of the quaternion.\n\t * @param w The w value of the quaternion.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Returns the magnitude of the quaternion object.\n\t */\n\tpublic get magnitude():number\n\t{\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t}\n\n\t/**\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\n\t *\n\t * @param    qa    The first quaternion in the multiplication.\n\t * @param    qb    The second quaternion in the multiplication.\n\t */\n\tpublic multiply(qa:Quaternion, qb:Quaternion)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t}\n\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\n\t{\n\t\t//target ||= new Quaternion();\n\t\tif (target === null) {\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\n\t\tvar x2:number = vector.x;\n\t\tvar y2:number = vector.y;\n\t\tvar z2:number = vector.z;\n\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given rotation around a vector.\n\t *\n\t * @param    axis    The axis around which to rotate\n\t * @param    angle    The angle in radians of the rotation.\n\t */\n\tpublic fromAxisAngle(axis:Vector3D, angle:number)\n\t{\n\t\tvar sin_a:number = Math.sin(angle/2);\n\t\tvar cos_a:number = Math.cos(angle/2);\n\n\t\tthis.x = axis.x*sin_a;\n\t\tthis.y = axis.y*sin_a;\n\t\tthis.z = axis.z*sin_a;\n\t\tthis.w = cos_a;\n\n\t\tthis.normalize();\n\t}\n\n\t/**\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\n\n\t\t// shortest direction\n\t\tif (dot < 0) {\n\t\t\tdot = -dot;\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tif (dot < 0.95) {\n\t\t\t// interpolate angle linearly\n\t\t\tvar angle:number = Math.acos(dot);\n\t\t\tvar s:number = 1/Math.sin(angle);\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\n\t\t\tthis.w = w1*s1 + w2*s2;\n\t\t\tthis.x = x1*s1 + x2*s2;\n\t\t\tthis.y = y1*s1 + y2*s2;\n\t\t\tthis.z = z1*s1 + z2*s2;\n\t\t} else {\n\t\t\t// nearly identical angle, interpolate linearly\n\t\t\tthis.w = w1 + t*(w2 - w1);\n\t\t\tthis.x = x1 + t*(x2 - x1);\n\t\t\tthis.y = y1 + t*(y2 - y1);\n\t\t\tthis.z = z1 + t*(z2 - z1);\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\t\tthis.w *= len;\n\t\t\tthis.x *= len;\n\t\t\tthis.y *= len;\n\t\t\tthis.z *= len;\n\t\t}\n\t}\n\n\t/**\n\t * Linearly interpolates between two quaternions.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar len:number;\n\n\t\t// shortest direction\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tthis.w = w1 + t*(w2 - w1);\n\t\tthis.x = x1 + t*(x2 - x1);\n\t\tthis.y = y1 + t*(y2 - y1);\n\t\tthis.z = z1 + t*(z2 - z1);\n\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\tthis.w *= len;\n\t\tthis.x *= len;\n\t\tthis.y *= len;\n\t\tthis.z *= len;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given euler rotation.\n\t *\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\n\t * @param    az        The angle in radians of the rotation around the az axis.\n\t */\n\tpublic fromEulerAngles(ax:number, ay:number, az:number)\n\t{\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\n\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\n\t}\n\n\t/**\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\n\t * @return The Vector3D containing the Euler angles.\n\t */\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\n\t{\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Normalises the quaternion object.\n\t */\n\tpublic normalize(val:number = 1)\n\t{\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\n\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t\tthis.z *= mag;\n\t\tthis.w *= mag;\n\t}\n\n\t/**\n\t * Used to trace the values of a quaternion.\n\t *\n\t * @return A string representation of the quaternion object.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\n\t}\n\n\t/**\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\n\t * @return A Matrix3D object representing an equivalent rotation.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\trawData[0] = xx - yy - zz + ww;\n\t\trawData[4] = xy2 - zw2;\n\t\trawData[8] = xz2 + yw2;\n\t\trawData[12] = 0;\n\t\trawData[1] = xy2 + zw2;\n\t\trawData[5] = -xx + yy - zz + ww;\n\t\trawData[9] = yz2 - xw2;\n\t\trawData[13] = 0;\n\t\trawData[2] = xz2 - yw2;\n\t\trawData[6] = yz2 + xw2;\n\t\trawData[10] = -xx - yy + zz + ww;\n\t\trawData[14] = 0;\n\t\trawData[3] = 0.0;\n\t\trawData[7] = 0.0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\n\t\tif (!target)\n\t\t\treturn new Matrix3D(rawData);\n\t\telse\n\t\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\n\t */\n\tpublic fromMatrix(matrix:Matrix3D)\n\t{\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t}\n\n\t/**\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\n\t */\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false)\n\t{\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\ttarget[0] = xx - yy - zz + ww;\n\t\ttarget[1] = xy2 - zw2;\n\t\ttarget[2] = xz2 + yw2;\n\t\ttarget[4] = xy2 + zw2;\n\t\ttarget[5] = -xx + yy - zz + ww;\n\t\ttarget[6] = yz2 - xw2;\n\t\ttarget[8] = xz2 - yw2;\n\t\ttarget[9] = yz2 + xw2;\n\t\ttarget[10] = -xx - yy + zz + ww;\n\t\ttarget[3] = target[7] = target[11] = 0;\n\n\t\tif (!exclude4thRow) {\n\t\t\ttarget[12] = target[13] = target[14] = 0;\n\t\t\ttarget[15] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Clones the quaternion.\n\t * @return An exact duplicate of the current Quaternion.\n\t */\n\tpublic clone():Quaternion\n\t{\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Rotates a point.\n\t * @param vector The Vector3D object to be rotated.\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\n\t * @return A Vector3D object containing the rotated point.\n\t */\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\t// p*q'\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the data from a quaternion into this instance.\n\t * @param q The quaternion to copy from.\n\t */\n\tpublic copyFrom(q:Quaternion)\n\t{\n\t\tthis.x = q.x;\n\t\tthis.y = q.y;\n\t\tthis.z = q.z;\n\t\tthis.w = q.w;\n\t}\n}\n\nexport = Quaternion;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * A Rectangle object is an area defined by its position, as indicated by its\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the Rectangle class are independent of\n * each other; changing the value of one property has no effect on the others.\n * However, the <code>right</code> and <code>bottom</code> properties are\n * integrally related to those four properties. For example, if you change the\n * value of the <code>right</code> property, the value of the\n * <code>width</code> property changes; if you change the <code>bottom</code>\n * property, the value of the <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Rectangle objects:</p>\n *\n * <ul>\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\n * <code>merge()</code>, <code>paletteMap()</code>,\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\n * BitmapData class</li>\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\n * DisplayObject class</li>\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\n * class</li>\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\n * method of the Sprite class</li>\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\n * method of the PrintJob class</li>\n * </ul>\n *\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\n * Rectangle object.</p>\n *\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\n * display object. To draw a rectangular Shape object onscreen, use the\n * <code>drawRect()</code> method of the Graphics class.</p>\n */\nclass Rectangle\n{\n\tprivate _size:Point;\n\tprivate _bottomRight:Point;\n\tprivate _topLeft:Point;\n\n\t/**\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>x</code> property of a Rectangle object has no\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>y</code> property of a Rectangle object has no\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's bottom-right corner, determined by\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRight():Point\n\t{\n\t\tif (this._bottomRight == null)\n\t\t\tthis._bottomRight = new Point();\n\n\t\tthis._bottomRight.x = this.x + this.width;\n\t\tthis._bottomRight.y = this.y + this.height;\n\n\t\treturn this._bottomRight;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>left</code> property of a Rectangle object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\t/**\n\t * The size of the Rectangle object, expressed as a Point object with the\n\t * values of the <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic get size():Point\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Point();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>top</code> property of a Rectangle object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's top-left corner, determined by the\n\t * <i>x</i> and <i>y</i> coordinates of the point.\n\t */\n\tpublic get topLeft():Point\n\t{\n\t\tif (this._topLeft == null)\n\t\t\tthis._topLeft = new Point();\n\n\t\tthis._topLeft.x = this.x;\n\t\tthis._topLeft.y = this.y;\n\n\t\treturn this._topLeft;\n\t}\n\n\t/**\n\t * Creates a new Rectangle object with the top-left corner specified by the\n\t * <code>x</code> and <code>y</code> parameters and with the specified\n\t * <code>width</code> and <code>height</code> parameters. If you call this\n\t * public without parameters, a rectangle with <code>x</code>,\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\n\t * to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param width  The width of the rectangle, in pixels.\n\t * @param height The height of the rectangle, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\t/**\n\t * Returns a new Rectangle object with the same values for the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties as the original Rectangle object.\n\t *\n\t * @return A new Rectangle object with the same values for the\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\n\t *         <code>height</code> properties as the original Rectangle object.\n\t */\n\tpublic clone():Rectangle\n\t{\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object. This method is similar to the\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\n\t * object as a parameter.\n\t *\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\n\t *              coordinates.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(point:Point):boolean\n\t{\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n\t}\n\n\t/**\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\n\t * parameter is contained within this Rectangle object. A Rectangle object is\n\t * said to contain another if the second Rectangle object falls entirely\n\t * within the boundaries of the first.\n\t *\n\t * @param rect The Rectangle object being checked.\n\t * @return A value of <code>true</code> if the Rectangle object that you\n\t *         specify is contained by this Rectangle object; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic containsRect(rect:Rectangle):boolean\n\t{\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\n\t}\n\n\t/**\n\t * Copies all of rectangle data from the source Rectangle object into the\n\t * calling Rectangle object.\n\t *\n\t * @param sourceRect The Rectangle object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceRect:Rectangle)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Rectangle object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of an object against the same properties of\n\t * this Rectangle object.\n\t *\n\t * @param toCompare The rectangle to compare to this Rectangle object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\n\t *         and <code>height</code> properties as this Rectangle object;\n\t *         otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Rectangle):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object by the specified amounts, in\n\t * pixels. The center point of the Rectangle object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, and to\n\t * the top and the bottom by the <code>dy</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Rectangle\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the rectangle:\n\t * @param dy The value to be added to the top and the bottom of the\n\t *           Rectangle. The following equation is used to calculate the new\n\t *           height and position of the rectangle:\n\t */\n\tpublic inflate(dx:number, dy:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object. This method is similar to the\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param point The <code>x</code> property of this Point object is used to\n\t *              increase the horizontal dimension of the Rectangle object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Rectangle object.\n\t */\n\tpublic inflatePoint(point:Point)\n\t{\n\t\tthis.x -= point.x/2;\n\t\tthis.y -= point.y/2;\n\t\tthis.width += point.x/2;\n\t\tthis.height += point.y/2;\n\t}\n\n\t/**\n\t * If the Rectangle object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object, returns the area of\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\n\t * this method returns an empty Rectangle object with its properties set to\n\t * 0.\n\t *\n\t * @param toIntersect The Rectangle object to compare against to see if it\n\t *                    intersects with this Rectangle object.\n\t * @return A Rectangle object that equals the area of intersection. If the\n\t *         rectangles do not intersect, this method returns an empty\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\n\t *         properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Rectangle):Rectangle\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Rectangle = new Rectangle();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Rectangle();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of the specified Rectangle object to see if\n\t * it intersects with this Rectangle object.\n\t *\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\n\t *                    object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Rectangle object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Rectangle):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\n\t}\n\n\t/**\n\t * Determines whether or not this Rectangle object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Rectangle object's width or\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object, as determined by its\n\t * top-left corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object using a Point object as a\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\n\t * method, except that it takes a Point object as a parameter.\n\t *\n\t * @param point A Point object to use to offset this Rectangle object.\n\t */\n\tpublic offsetPoint(point:Point)\n\t{\n\t\tthis.x += point.x;\n\t\tthis.y += point.y;\n\t}\n\n\t/**\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n\t * empty if its width or height is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t}\n\n\t/**\n\t * Sets the members of Rectangle to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param widtha  The width of the rectangle, in pixels.\n\t * @param heighta The height of the rectangle, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal and vertical\n\t * positions and the width and height of the Rectangle object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\n\t *         <code>width</code>, and <code>height</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n\t}\n\n\t/**\n\t * Adds two rectangles together to create a new Rectangle object, by filling\n\t * in the horizontal and vertical space between the two rectangles.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\n\t * <code>0</code> as the height or width value, such as: <code>var\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\n\t *\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\n\t * @return A new Rectangle object that is the union of the two rectangles.\n\t */\n\tpublic union(toUnion:Rectangle):Rectangle\n\t{\n\t\tvar u:Rectangle = new Rectangle();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Rectangle;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Sphere\n{\n\t/**\n\t *\n\t */\n\tpublic x:number;\n\n\t/**\n\t *\n\t */\n\tpublic y:number;\n\n\t/**\n\t *\n\t */\n\tpublic z:number;\n\n\t/**\n\t *\n\t */\n\tpublic radius:number;\n\n\t/**\n\t * Create a Sphere with ABCD coefficients\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, radius:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.radius = radius;\n\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar px:number = position.x - this.x, py:number = position.y - this.y, pz:number = position.z - this.z;\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\n\t\tvar rayEntryDistance:number;\n\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\n\t\tvar c:number = px*px + py*py + pz*pz - this.radius*this.radius;\n\t\tvar det:number = b*b - 4*a*c;\n\n\t\tif (det >= 0) { // ray goes through sphere\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\n\t\t\tif (rayEntryDistance >= 0) {\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\n\t\t\t\ttargetNormal.normalize();\n\n\t\t\t\treturn rayEntryDistance;\n\t\t\t}\n\t\t}\n\n\t\t// ray misses sphere\n\t\treturn -1;\n\t}\n\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\tvar px:number = position.x - this.x;\n\t\tvar py:number = position.y - this.y;\n\t\tvar pz:number = position.z - this.z;\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\n\t\treturn distance <= this.radius;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\n\t}\n}\n\nexport = Sphere;",
    "import Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nclass UVTransform\n{\n\tprivate _uvMatrix:Matrix = new Matrix();\n\tprivate _uvMatrixDirty:boolean;\n\n\tprivate _rotation:number = 0;\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\tprivate _offsetU:number = 0;\n\tprivate _offsetV:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get offsetU():number\n\t{\n\t\treturn this._offsetU;\n\t}\n\n\tpublic set offsetU(value:number)\n\t{\n\t\tif (value == this._offsetU)\n\t\t\treturn;\n\n\t\tthis._offsetU = value;\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get offsetV():number\n\t{\n\t\treturn this._offsetV;\n\t}\n\n\tpublic set offsetV(value:number)\n\t{\n\t\tif (value == this._offsetV)\n\t\t\treturn;\n\n\t\tthis._offsetV = value;\n\t\tthis._uvMatrixDirty = true;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rotation():number\n\t{\n\t\treturn this._rotation;\n\t}\n\n\tpublic set rotation(value:number)\n\t{\n\t\tif (value == this._rotation)\n\t\t\treturn;\n\n\t\tthis._rotation = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (value == this._scaleU)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (value == this._scaleV)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._uvMatrixDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get matrix():Matrix\n\t{\n\t\tif (this._uvMatrixDirty)\n\t\t\tthis.updateUVMatrix();\n\n\t\treturn this._uvMatrix;\n\t}\n\n\tconstructor()\n\t{\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate updateUVMatrix()\n\t{\n\t\tthis._uvMatrix.identity();\n\n\t\tif (this._rotation != 0)\n\t\t\tthis._uvMatrix.rotate(this._rotation);\n\n\t\tif (this._scaleU != 1 || this._scaleV != 1)\n\t\t\tthis._uvMatrix.scale(this._scaleU, this._scaleV);\n\n\t\tthis._uvMatrix.translate(this._offsetU, this._offsetV);\n\n\t\tthis._uvMatrixDirty = false;\n\t}\n}\n\nexport = UVTransform;",
    "/**\n * The Vector3D class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n *\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n *\n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nclass Vector3D\n{\n\t/**\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\n\t */\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\n\n\t/**\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\n\t */\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\n\n\t/**\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\n\t */\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\n\n\t/**\n\t * The first element of a Vector3D object, such as the x coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/*\n\t *The second element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The third element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic z:number;\n\n\t/**\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\n\t * and z properties) can hold data such as the angle of rotation. The\n\t * default value is 0.\n\t *\n\t * <p>Quaternion notation employs an angle as the fourth element in\n\t * its calculation of three-dimensional rotation. The w property can\n\t * be used to define the angle of rotation about the Vector3D object.\n\t * The combination of the rotation angle and the coordinates (x,y,z)\n\t * determines the display object's orientation.</p>\n\t *\n\t * <p>In addition, the w property can be used as a perspective warp\n\t * factor for a projected three-dimensional position or as a projection\n\t * transform value in representing a three-dimensional coordinate\n\t * projected into the two-dimensional space. For example, you can\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\n\t * property, that, when applied to a Vector3D object, produces a\n\t * transform value in the Vector3D object's fourth element (the w\n\t * property). Dividing the Vector3D object's other elements by the\n\t * transform value then produces a projected Vector3D object. You can\n\t * use the <code>Vector3D.project()</code> method to divide the first\n\t * three elements of a Vector3D object by its fourth element.</p>\n\t */\n\tpublic w:number;\n\n\t/**\n\t * The length, magnitude, of the current Vector3D object from the\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\n\t * property is ignored. A unit vector has a length or magnitude of\n\t * one.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.lengthSquared);\n\t}\n\n\t/**\n\t * The square of the length of the current Vector3D object, calculated\n\t * using the x, y, and z properties. The w property is ignored. Use the\n\t * <code>lengthSquared()</code> method whenever possible instead of the\n\t * slower <code>Math.sqrt()</code> method call of the\n\t * <code>Vector3D.length()</code> method.\n\t */\n\tpublic get lengthSquared():number\n\t{\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\n\t}\n\n\t/**\n\t * Creates an instance of a Vector3D object. If you do not specify a\n\t * parameter for the constructor, a Vector3D object is created with\n\t * the elements (0,0,0,0).\n\t *\n\t * @param x The first element, such as the x coordinate.\n\t * @param y The second element, such as the y coordinate.\n\t * @param z The third element, such as the z coordinate.\n\t * @param w An optional element for additional data such as the angle\n\t *          of rotation.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Adds the value of the x, y, and z elements of the current Vector3D\n\t * object to the values of the x, y, and z elements of another Vector3D\n\t * object. The <code>add()</code> method does not change the current\n\t * Vector3D object. Instead, it returns a new Vector3D object with\n\t * the new values.\n\t *\n\t * <p>The result of adding two vectors together is a resultant vector.\n\t * One way to visualize the result is by drawing a vector from the\n\t * origin or tail of the first vector to the end or head of the second\n\t * vector. The resultant vector is the distance between the origin\n\t * point of the first vector and the end point of the second vector.\n\t * </p>\n\t */\n\tpublic add(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\n\t}\n\n\t/**\n\t * Returns the angle in radians between two vectors. The returned angle\n\t * is the smallest radian the first Vector3D object rotates until it\n\t * aligns with the second Vector3D object.\n\t *\n\t * <p>The <code>angleBetween()</code> method is a static method. You\n\t * can use it directly as a method of the Vector3D class.</p>\n\t *\n\t * <p>To convert a degree to a radian, you can use the following\n\t * formula:</p>\n\t *\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\n\t *\n\t * @param a The first Vector3D object.\n\t * @param b The second Vector3D object.\n\t * @returns The angle between two Vector3D objects.\n\t */\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\n\t{\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is an exact copy of the current\n\t * Vector3D object.\n\t *\n\t * @returns A new Vector3D object that is a copy of the current\n\t * Vector3D object.\n\t */\n\tpublic clone():Vector3D\n\t{\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\n\t}\n\n\tpublic static combine(a:Vector3D, b:Vector3D, ascl:number, bscl:number):Vector3D\n\t{\n\t\treturn new Vector3D(a.x*ascl + b.x*bscl, a.y*ascl + b.y*bscl, a.z*ascl + b.z*bscl);\n\t}\n\n\t/**\n\t * Copies all of vector data from the source Vector3D object into the\n\t * calling Vector3D object.\n\t *\n\t * @param src The Vector3D object from which to copy the data.\n\t */\n\tpublic copyFrom(src:Vector3D):void\n\t{\n\t\tthis.x = src.x;\n\t\tthis.y = src.y;\n\t\tthis.z = src.z;\n\t\tthis.w = src.w;\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is perpendicular (at a right\n\t * angle) to the current Vector3D and another Vector3D object. If the\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\n\t * Vector3D objects are parallel to each other.\n\t *\n\t * <p>You can use the normalized cross product of two vertices of a\n\t * polygon surface with the normalized vector of the camera or eye\n\t * viewpoint to get a dot product. The value of the dot product can\n\t * identify whether a surface of a three-dimensional object is hidden\n\t * from the viewpoint.</p>\n\t *\n\t * @param a A second Vector3D object.\n\t * @returns A new Vector3D object that is perpendicular to the current\n\t *          Vector3D object and the Vector3D object specified as the\n\t *          parameter.\n\t */\n\tpublic crossProduct(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\n\t}\n\n\t/**\n\t * Decrements the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of\n\t * specified Vector3D object. Unlike the\n\t * <code>Vector3D.subtract()</code> method, the\n\t * <code>decrementBy()</code> method changes the current Vector3D\n\t * object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object containing the values to subtract from\n\t *          the current Vector3D object.\n\t */\n\tpublic decrementBy(a:Vector3D)\n\t{\n\t\tthis.x -= a.x;\n\t\tthis.y -= a.y;\n\t\tthis.z -= a.z;\n\t}\n\n\t/**\n\t * Returns the distance between two Vector3D objects. The\n\t * <code>distance()</code> method is a static method. You can use it\n\t * directly as a method of the Vector3D class to get the Euclidean\n\t * distance between two three-dimensional points.\n\t *\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\n\t * @returns The distance between two Vector3D objects.\n\t */\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\n\t{\n\t\tvar x:number = (pt1.x - pt2.x);\n\t\tvar y:number = (pt1.y - pt2.y);\n\t\tvar z:number = (pt1.z - pt2.z);\n\t\treturn Math.sqrt(x*x + y*y + z*z);\n\t}\n\n\t/**\n\t * If the current Vector3D object and the one specified as the\n\t * parameter are unit vertices, this method returns the cosine of the\n\t * angle between the two vertices. Unit vertices are vertices that\n\t * point to the same direction but their length is one. They remove the\n\t * length of the vector as a factor in the result. You can use the\n\t * <code>normalize()</code> method to convert a vector to a unit\n\t * vector.\n\t *\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\n\t * vertices. It is also used in backface culling or lighting\n\t * calculations. Backface culling is a procedure for determining which\n\t * surfaces are hidden from the viewpoint. You can use the normalized\n\t * vertices from the camera, or eye, viewpoint and the cross product of\n\t * the vertices of a polygon surface to get the dot product. If the dot\n\t * product is less than zero, then the surface is facing the camera or\n\t * the viewer. If the two unit vertices are perpendicular to each\n\t * other, they are orthogonal and the dot product is zero. If the two\n\t * vertices are parallel to each other, the dot product is one.</p>\n\t *\n\t * @param a The second Vector3D object.\n\t * @returns A scalar which is the dot product of the current Vector3D\n\t *          object and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#crossProduct()\n\t * @see away.geom.Vector3D#normalize()\n\t */\n\tpublic dotProduct(a:Vector3D):number\n\t{\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\n\t}\n\n\t/**\n\t * Determines whether two Vector3D objects are equal by comparing the\n\t * x, y, and z elements of the current Vector3D object with a\n\t * specified Vector3D object. If the values of these elements are the\n\t * same, the two Vector3D objects are equal. If the second optional\n\t * parameter is set to true, all four elements of the Vector3D objects,\n\t * including the w property, are compared.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is equal\n\t *          to the current Vector3D object; false if it is not equal.\n\t */\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\n\t}\n\n\t/**\n\t * Increments the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of a\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n\t * method, the <code>incrementBy()</code> method changes the current\n\t * Vector3D object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object to be added to the current Vector3D\n\t *          object.\n\t */\n\tpublic incrementBy(a:Vector3D)\n\t{\n\t\tthis.x += a.x;\n\t\tthis.y += a.y;\n\t\tthis.z += a.z;\n\t}\n\n\t/**\n\t * Compares the elements of the current Vector3D object with the\n\t * elements of a specified Vector3D object to determine whether they\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\n\t * value of all the elements of the two vertices are equal, or the\n\t * result of the comparison is within the tolerance range. The\n\t * difference between two elements must be less than the number\n\t * specified as the tolerance parameter. If the third optional\n\t * parameter is set to <code>true</code>, all four elements of the\n\t * Vector3D objects, including the <code>w</code> property, are\n\t * compared. Otherwise, only the x, y, and z elements are included in\n\t * the comparison.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param tolerance A number determining the tolerance factor. If the\n\t *                  difference between the values of the Vector3D\n\t *                  element specified in the toCompare parameter and\n\t *                  the current Vector3D element is less than the\n\t *                  tolerance number, the two values are considered\n\t *                  nearly equal.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is nearly\n\t *          equal to the current Vector3D object; false if it is not\n\t *          equal.\n\t *\n\t * @see away.geom.Vector3D#equals()\n\t */\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\n\t{\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n\t}\n\n\t/**\n\t * Sets the current Vector3D object to its inverse. The inverse object\n\t * is also considered the opposite of the original object. The value of\n\t * the x, y, and z properties of the current Vector3D object is changed\n\t * to -x, -y, and -z.\n\t */\n\tpublic negate():void\n\t{\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t\tthis.z = -this.z;\n\t}\n\n\t/**\n\t * Converts a Vector3D object to a unit vector by dividing the first\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\n\t * are vertices that have a direction but their length is one. They\n\t * simplify vector calculations by removing length as a factor.\n\t */\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current\n\t *                  Vector3D object is (0,3,4), and you normalize it to\n\t *                  1, the point returned is at(0,0.6,0.8).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\tthis.z *= invLength;\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\n\t * <code>z</code> properties of the current Vector3D object by the\n\t * value of its <code>w</code> property.\n\t *\n\t * <p>If the current Vector3D object is the result of multiplying a\n\t * Vector3D object by a projection Matrix3D object, the w property can\n\t * hold the transform value. The <code>project()</code> method then can\n\t * complete the projection by dividing the elements by the\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n\t * property to create a projection Matrix3D object.</p>\n\t */\n\tpublic project():void\n\t{\n\t\tthis.x /= this.w;\n\t\tthis.y /= this.w;\n\t\tthis.z /= this.w;\n\t}\n\n\t/**\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\n\t * number specified in the parameter. For example, if the vector is\n\t * scaled by ten, the result is a vector that is ten times longer. The\n\t * scalar can also change the direction of the vector. Multiplying the\n\t * vector by a negative number reverses its direction.\n\t *\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\n\n\t */\n\tpublic scaleBy(s:number):void\n\t{\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\t\tthis.z *= s;\n\t}\n\n\t/**\n\t * Sets the members of Vector3D to the specified values\n\t *\n\t * @param xa The first element, such as the x coordinate.\n\t * @param ya The second element, such as the y coordinate.\n\t * @param za The third element, such as the z coordinate.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number):void\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t}\n\n\t/**\n\t * Subtracts the value of the x, y, and z elements of the current\n\t * Vector3D object from the values of the x, y, and z elements of\n\t * another Vector3D object. The <code>subtract()</code> method does not\n\t * change the current Vector3D object. Instead, this method returns a\n\t * new Vector3D object with the new values.\n\t *\n\t * @param a The Vector3D object to be subtracted from the current\n\t *          Vector3D object.\n\t * @returns A new Vector3D object that is the difference between the\n\t *          current Vector3D and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#decrementBy()\n\t */\n\tpublic subtract(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n\t}\n\n\t/**\n\t * Returns a string representation of the current Vector3D object. The\n\t * string contains the values of the x, y, and z properties.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n\t}\n}\n\nexport = Vector3D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nclass AssetBase extends EventDispatcher\n{\n\tpublic static ID_COUNT:number = 0;\n\n\tprivate _originalName:string;\n\tprivate _namespace:string;\n\tprivate _name:string;\n\tprivate _id:number;\n\tprivate _full_path:Array<string>;\n\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\n\n\tconstructor(name:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._id = AssetBase.ID_COUNT++;\n\n\t\tif (name == null)\n\t\t\tname = 'null';\n\n\t\tthis._name = name;\n\t\tthis._originalName = name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * The original name used for this asset in the resource (e.g. file) in which\n\t * it was found. This may not be the same as <code>name</code>, which may\n\t * have changed due to of a name conflict.\n\t */\n\tpublic get originalName():string\n\t{\n\t\treturn this._originalName;\n\t}\n\n\t/**\n\t * A unique id for the asset, used to identify assets in an associative array\n\t */\n\tpublic get id():number\n\t{\n\t\treturn this._id;\n\t}\n\n\tpublic get name():string\n\t{\n\t\treturn this._name;\n\t}\n\n\tpublic set name(val:string)\n\t{\n\t\tvar prev:string;\n\n\t\tprev = this._name;\n\t\tthis._name = val;\n\n\t\tif (this._name == null)\n\t\t\tthis._name = 'null';\n\n\t\tthis.updateFullPath();\n\n\t\t//if (hasEventListener(AssetEvent.ASSET_RENAME))\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_RENAME, <IAsset> this, prev));\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get assetNamespace():string\n\t{\n\t\treturn this._namespace;\n\t}\n\n\tpublic get assetFullPath():Array<string>\n\t{\n\t\treturn this._full_path;\n\t}\n\n\tpublic assetPathEquals(name:string, ns:string):boolean\n\t{\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\n\t}\n\n\n\tpublic isAsset(assetClass:IAssetClass):boolean\n\t{\n\t\treturn this.assetType == assetClass.assetType;\n\t}\n\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\n\t{\n\n\t\tthis._name = name? name : 'null';\n\t\tthis._namespace = ns? ns : AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (overrideOriginal)\n\t\t\tthis._originalName = this._name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\tprivate updateFullPath():void\n\t{\n\t\tthis._full_path = [ this._namespace, this._name ];\n\t}\n}\n\nexport = AssetBase;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibrary\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport LoaderSession\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport ConflictStrategy\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategy\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\n * Its purpose is to create a container for 3D data management, both before and after parsing.\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\n */\nclass AssetLibraryBundle extends EventDispatcher\n{\n\tpublic static _iInstances:Object = new Object();\n\n\tprivate _loaderSessions:Array<LoaderSession>;\n\tprivate _strategy:ConflictStrategyBase;\n\tprivate _strategyPreference:string;\n\tprivate _assets:Array<IAsset>;\n\tprivate _assetDictionary:Object;\n\tprivate _assetDictDirty:boolean;\n\tprivate _loaderSessionsGarbage:Array<LoaderSession> = new Array<LoaderSession>();\n\tprivate _gcTimeoutIID:number;\n\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\t/**\n\t * Creates a new <code>AssetLibraryBundle</code> object.\n\t *\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\n\t\tthis._assetDictionary = new Object();\n\t\tthis._loaderSessions = new Array<LoaderSession>();\n\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\n\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibrary as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\tif (!key)\n\t\t\tkey = 'default';\n\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\n\n\t\treturn AssetLibraryBundle._iInstances[key];\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParsers(parserClasses:Object[])\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\n\t * is used which means that a numeric suffix is appended to one of the assets. The\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\n\t * be renamed.\n\t *\n\t * @see naming.ConflictStrategy\n\t * @see AssetLibrary.conflictPrecedence\n\t */\n\tpublic get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn this._strategy;\n\t}\n\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\n\t\tif (!val)\n\t\t\tthrow new Error('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\n\n\t\tthis._strategy = val.create();\n\n\t}\n\n\t/**\n\t * Defines which asset should have precedence when resolving a naming conflict between\n\t * two assets of which one has just been renamed by the user or by a parser. By default\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\n\t *\n\t * This property is ignored for conflict strategies that do not actually rename an\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\n\t *\n\t * @see away.library.ConflictPrecedence\n\t * @see away.library.ConflictStrategy\n\t */\n\tpublic get conflictPrecedence():string\n\t{\n\t\treturn this._strategyPreference;\n\t}\n\n\tpublic set conflictPrecedence(val:string)\n\t{\n\t\tthis._strategyPreference = val;\n\t}\n\n\t/**\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\n\t * namespace. A \"null\" filter value means no filter of that type is used.\n\t *\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\n\t * null to not filter on asset type.\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\n\t * included in the iteration or not. This needs to be a function that takes a single\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\n\t *\n\t * @see away.library.AssetType\n\t */\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis.getLoaderSession().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads a resource from existing data in memory.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis.getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tpublic getLoaderSession():LoaderSession\n\t{\n\t\tvar loader:LoaderSession = new LoaderSession();\n\n\t\tthis._loaderSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader;\n\t}\n\t\n\tpublic disposeLoaderSession(loader:LoaderSession)\n\t{\n\t\tvar index:number = this._loaderSessions.indexOf(loader);\n\t\tthis._loaderSessions.splice(index, 1);\n\n\t\t// Add loader to a garbage array - for a collection sweep and kill\n\t\tthis._loaderSessionsGarbage.push(loader);\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\treturn null;\n\n\t\treturn this._assetDictionary[ns][name];\n\n\t}\n\tpublic getAllAssets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\t/**\n\t * Adds an asset to the asset library, first making sure that it's name is unique\n\t * using the method defined by the <code>conflictStrategy</code> and\n\t * <code>conflictPrecedence</code> properties.\n\t */\n\tpublic addAsset(asset:IAsset)\n\t{\n\t\tvar ns:string;\n\t\tvar old:IAsset;\n\n\t\t// Bail if asset has already been added.\n\t\tif (this._assets.indexOf(asset) >= 0)\n\t\t\treturn;\n\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\n\t\tns = asset.assetNamespace || AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (old != null)\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\n\n\t\t//create unique-id (for now this is used in AwayBuilder only\n\t\t//asset.id = IDUtil.createUID();\n\n\t\t// Add it\n\t\tthis._assets.push(asset);\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\tthis._assetDictionary[ns] = new Object();\n\n\t\tthis._assetDictionary[ns][asset.name] = asset;\n\n\t\tasset.addEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\t}\n\n\t/**\n\t * Removes an asset from the library, and optionally disposes that asset by calling\n\t * it's disposeAsset() method (which for most assets is implemented as a default\n\t * version of that type's dispose() method.\n\t *\n\t * @param asset The asset which should be removed from this library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tvar idx:number;\n\n\t\tthis.removeAssetFromDict(asset);\n\n\t\tasset.removeEventListener(AssetEvent.ASSET_RENAME, this._onAssetRenameDelegate);\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\n\t\tidx = this._assets.indexOf(asset);\n\n\t\tif (idx >= 0)\n\t\t\tthis._assets.splice(idx, 1);\n\n\t\tif (dispose)\n\t\t\tasset.dispose();\n\t}\n\n\t/**\n\t * Removes an asset which is specified using name and namespace.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\tvar asset:IAsset = this.getAsset(name, ns);\n\n\t\tif (asset)\n\t\t\tthis.removeAsset(asset, dispose);\n\n\t\treturn asset;\n\t}\n\n\t/**\n\t * Removes all assets from the asset library, optionally disposing them as they\n\t * are removed.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAllAssets(dispose:boolean = true)\n\t{\n\t\tif (dispose) {\n\t\t\tvar asset:IAsset;\n\t\t\tvar len:number = this._assets.length;\n\t\t\tfor (var c:number = 0; c < len; c++) {\n\t\t\t\tasset = this._assets[c];\n\t\t\t\tasset.dispose();\n\t\t\t}\n\t\t}\n\n\t\tthis._assets.length = 0;\n\t\tthis.rehashAssetDict();\n\t}\n\n\t/**\n\t * Removes all assets belonging to a particular namespace (null for default)\n\t * from the asset library, and optionall disposes them by calling their\n\t * disposeAsset() method.\n\t *\n\t * @param ns The namespace from which all assets should be removed.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tvar idx:number = 0;\n\t\tvar asset:IAsset;\n\t\tvar old_assets:IAsset[];\n\n\t\t// Empty the assets vector after having stored a copy of it.\n\t\t// The copy will be filled with all assets which weren't removed.\n\t\told_assets = this._assets.concat();\n\t\tthis._assets.length = 0;\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tvar len:number = old_assets.length;\n\t\tfor (var d:number = 0; d < len; d++) {\n\t\t\tasset = old_assets[d];\n\n\t\t\t// Remove from dict if in the supplied namespace. If not,\n\t\t\t// transfer over to the new vector.\n\t\t\tif (asset.assetNamespace == ns) {\n\t\t\t\tif (dispose)\n\t\t\t\t\tasset.dispose();\n\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\n\t\t\t\t// test that is not needed since we know that the namespace\n\t\t\t\t// will be empty when loop finishes.\n\t\t\t\tthis.removeAssetFromDict(asset, false);\n\t\t\t} else {\n\t\t\t\tthis._assets[idx++] = asset;\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t for each (asset in old_assets) {\n\t\t // Remove from dict if in the supplied namespace. If not,\n\t\t // transfer over to the new vector.\n\t\t if (asset.assetNamespace == ns) {\n\t\t if (dispose)\n\t\t asset.dispose();\n\n\t\t // Remove asset from dictionary, but don't try to auto-remove\n\t\t // the namespace, which will trigger an unnecessarily expensive\n\t\t // test that is not needed since we know that the namespace\n\t\t // will be empty when loop finishes.\n\t\t removeAssetFromDict(asset, false);\n\t\t } else\n\t\t _assets[idx++] = asset;\n\n\t\t }\n\t\t */\n\n\t\t// Remove empty namespace\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\n\t\t\tdelete this._assetDictionary[ns];\n\t}\n\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true)\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\n\n\t\t\tif (autoRemoveEmptyNamespace) {\n\n\t\t\t\tvar key:string;\n\t\t\t\tvar empty:boolean = true;\n\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (empty)\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic stopAllLoaderSessions()\n\t{\n\t\tvar len:number = this._loaderSessions.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis.killloaderSession(this._loaderSessions[i]);\n\n\t\tthis._loaderSessions = new Array<LoaderSession>();\n\t}\n\n\tprivate rehashAssetDict()\n\t{\n\t\tvar asset:IAsset;\n\n\t\tthis._assetDictionary = {};\n\n\t\tvar len:number = this._assets.length;\n\t\tfor (var c:number = 0; c < len; c++) {\n\t\t\tasset = this._assets[c];\n\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\n\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\n\n\t\t}\n\n\t\tthis._assetDictDirty = false;\n\n\t}\n\n\t/**\n\t * Called when a an error occurs during loading.\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing.\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Only add asset to library the first time.\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\n\t\t\tthis.addAsset(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tvar loader:LoaderSession = <LoaderSession> event.target;\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis.disposeLoaderSession(loader);\n\t}\n\n\tprivate loaderSessionGC():void\n\t{\n\t\tvar loader:LoaderSession;\n\n\t\twhile (this._loaderSessionsGarbage.length > 0) {\n\t\t\tloader = this._loaderSessionsGarbage.pop();\n\t\t\tthis.killloaderSession(loader);\n\t\t}\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate killloaderSession(loader:LoaderSession)\n\t{\n\t\tloader.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t\tloader.stop();\n\t}\n\n\t/**\n\t * Called when unespected error occurs\n\t */\n\t/*\n\t private onResourceError() : void\n\t {\n\t var msg:string = \"Unexpected parser error\";\n\t if(hasEventListener(LoaderEvent.DEPENDENCY_ERROR)){\n\t var re:LoaderEvent = new LoaderEvent(LoaderEvent.DEPENDENCY_ERROR, \"\");\n\t dispatchEvent(re);\n\t } else{\n\t throw new Error(msg);\n\t }\n\t }\n\t */\n\n\tprivate onAssetRename(event:AssetEvent)\n\t{\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\n\n\t\tif (old != null) {\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\n\t\t} else {\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\n\n\t\t\tif (dict == null)\n\t\t\t\treturn;\n\n\t\t\tdict[event.assetPrevName] = null;\n\t\t\tdict[event.asset.name] = event.asset;\n\t\t}\n\t}\n\n\tprivate onAssetConflictResolved(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event.clone());\n\t}\n}\n\nexport = AssetLibraryBundle;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass AssetLibraryIterator\n{\n\n\tprivate  _assets:Array<IAsset>;\n\tprivate _filtered:Array<IAsset>;\n\n\tprivate _idx:number;\n\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tthis._assets = assets;\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\tpublic get currentAsset():IAsset\n\t{\n\t\t// Return current, or null if no current\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\n\t}\n\n\tpublic get numAssets():number\n\t{\n\t\treturn this._filtered.length;\n\t}\n\n\tpublic next():IAsset\n\t{\n\t\tvar next:IAsset = null;\n\n\t\tif (this._idx < this._filtered.length)\n\t\t\tnext = this._filtered[this._idx];\n\n\t\tthis._idx++;\n\n\t\treturn next;\n\t}\n\n\tpublic reset()\n\t{\n\t\tthis._idx = 0;\n\t}\n\n\tpublic setIndex(index:number)\n\t{\n\t\tthis._idx = index;\n\t}\n\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tif (assetTypeFilter || namespaceFilter) {\n\n\t\t\tvar idx:number;\n\t\t\tvar asset:IAsset;\n\n\n\t\t\tidx = 0;\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\n\n\t\t\tvar l:number = this._assets.length;\n\n\t\t\tfor (var c:number = 0; c < l; c++) {\n\n\t\t\t\tasset = <IAsset> this._assets[c];\n\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._filtered[idx++] = asset;\n\n\t\t\t}\n\n\t\t\t/*\n\t\t\t for each (asset in _assets) {\n\t\t\t // Skip this assets if filtering on type and this is wrong type\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\n\t\t\t if (filterFunc != null && !filterFunc(asset))\n\t\t\t continue;\n\n\t\t\t _filtered[idx++] = asset;\n\t\t\t }\n\t\t\t */\n\n\t\t} else {\n\t\t\tthis._filtered = this._assets;\n\t\t}\n\t}\n}\n\nexport = AssetLibraryIterator;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibraryBundle\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport LoaderSession\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\n */\nclass AssetLibrary\n{\n\t/**\n\t * Creates a new <code>AssetLibrary</code> object.\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t//*/\n\t/**\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibraryBundle as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\treturn AssetLibraryBundle.getInstance(key);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParser(parserClass)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Short-hand for conflictStrategy property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictStrategy\n\t */\n\tpublic static get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\n\t}\n\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\n\t}\n\n\t/**\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictPrecedence\n\t */\n\tpublic static get conflictPrecedence():string\n\t{\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\n\t}\n\n\tpublic static set conflictPrecedence(val:string)\n\t{\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\n\t}\n\n\t/**\n\t * Short-hand for createIterator() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.createIterator()\n\t */\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Short-hand for load() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.load()\n\t */\n\tpublic static load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tAssetLibrary.getBundle().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Short-hand for loadData() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.loadData()\n\t */\n\tpublic static loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tAssetLibrary.getBundle().loadData(data, context, ns, parser);\n\t}\n\n\tpublic static stopLoad()\n\t{\n\t\tAssetLibrary.getBundle().stopAllLoaderSessions();\n\t}\n\n\tpublic static getLoaderSession():LoaderSession\n\t{\n\t\treturn AssetLibrary.getBundle().getLoaderSession();\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAllAssets():Array<IAsset>\n\t{\n\t\treturn AssetLibrary.getBundle().getAllAssets();\n\t}\n\n\t/**\n\t * Short-hand for addEventListener() method on default asset library bundle.\n\t */\n\tpublic static addEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for removeEventListener() method on default asset library bundle.\n\t */\n\tpublic static removeEventListener(type:string, listener:Function)\n\t{\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for hasEventListener() method on default asset library bundle.\n\n\t public static hasEventListener(type:string):boolean\n\t {\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\n\t}\n\n\t public static willTrigger(type:string):boolean\n\t {\n\t\treturn getBundle().willTrigger(type);\n\t}\n\t */\n\n\t/**\n\t * Short-hand for addAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.addAsset()\n\t */\n\tpublic static addAsset(asset:IAsset)\n\t{\n\t\tAssetLibrary.getBundle().addAsset(asset);\n\t}\n\n\t/**\n\t * Short-hand for removeAsset() method on default asset library bundle.\n\t *\n\t * @param asset The asset which should be removed from the library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAsset()\n\t */\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAssetByName()\n\t */\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAllAssets()\n\t */\n\tpublic static removeAllAssets(dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\n\t */\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\n\t}\n}\n\nexport = AssetLibrary;",
    "/**\n * Enumaration class for precedence when resolving naming conflicts in the library.\n *\n * @see away.library.AssetLibrary.conflictPrecedence\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategy\n */\nclass ConflictPrecedence\n{\n\t/**\n\t * Signals that in a conflict, the previous owner of the conflicting name\n\t * should be favored (and keep it's name) and that the newly renamed asset\n\t * is reverted to a non-conflicting name.\n\t */\n\tpublic static FAVOR_OLD:string = 'favorOld';\n\n\t/**\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\n\t * it's newly defined name) and that the previous owner of that name gets\n\t * renamed to a non-conflicting name.\n\t */\n\tpublic static FAVOR_NEW:string = 'favorNew';\n}\n\nexport = ConflictPrecedence;",
    "import ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\n/**\n * Abstract base class for naming conflict resolution classes. Extend this to create a\n * strategy class which the asset library can use to resolve asset naming conflicts, or\n * use one of the bundled concrete strategy classes:\n *\n * <ul>\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\n * </ul>\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.ConflictStrategy\n * @see away.library.IgnoreConflictStrategy\n * @see away.library.ErrorConflictStrategy\n * @see away.library.NumSuffixConflictStrategy\n */\nclass ConflictStrategyBase\n{\n\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\n\t * classes.\n\t */\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\n\t * would break any state caching that happens inside the strategy class.\n\t */\n\tpublic create():ConflictStrategyBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\n\t * the conflict resolution by applying the new names and dispatching the correct events.\n\t */\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar loser_prev_name:string;\n\t\tvar winner:IAsset;\n\t\tvar loser:IAsset;\n\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\n\n\t\tloser_prev_name = loser.name;\n\n\t\tassetsDictionary[winner.name] = winner;\n\t\tassetsDictionary[nonConflictingName] = loser;\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\n\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\n\t}\n}\n\nexport = ConflictStrategyBase;",
    "import ConflictStrategyBase\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport ErrorConflictStrategy\t\t= require(\"awayjs-core/lib/library/ErrorConflictStrategy\");\nimport IgnoreConflictStrategy\t\t= require(\"awayjs-core/lib/library/IgnoreConflictStrategy\");\nimport NumSuffixConflictStrategy\t= require(\"awayjs-core/lib/library/NumSuffixConflictStrategy\");\n\n/**\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\n * property on an AssetLibrary to define how that library resolves naming conflicts.\n *\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategyBase\n */\nclass ConflictStrategy\n{\n\t/**\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\n\t * a numeric suffix appended to the base name.\n\t */\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\n\n\t/**\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\n\t */\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\n\n\t/**\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\n\t * to have the library automatically rename assets to avoid such conflicts.\n\t */\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\n\n\tconstructor(include?:ConflictStrategyBase)\n\t{\n\t\t//TODO: find out why typescript d.ts files do not include this class\n\t}\n}\n\nexport = ConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass ErrorConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new Error('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new ErrorConflictStrategy();\n\t}\n}\n\nexport = ErrorConflictStrategy;",
    "class IDUtil\n{\n\t/**\n\t *  @private\n\t *  Char codes for 0123456789ABCDEF\n\t */\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\n\n\t/**\n\t *  Generates a UID (unique identifier) based on ActionScript's\n\t *  pseudo-random number generator and the current time.\n\t *\n\t *  <p>The UID has the form\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\n\t *\n\t *  <p>This UID will not be truly globally unique; but it is the best\n\t *  we can do without player support for UID generation.</p>\n\t *\n\t *  @return The newly-generated UID.\n\t *\n\t *  @langversion 3.0\n\t *  @playerversion Flash 9\n\t *  @playerversion AIR 1.1\n\t *  @productversion Flex 3\n\t */\n\tpublic static createUID():string\n\t{\n\t\tvar uid = new Array(36);\n\t\tvar index:number = 0;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\t\tfor (j = 0; j < 4; j++)\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\t\t}\n\n\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\tvar time:number = new Date().getTime();\n\t\t// Note: time is the number of milliseconds since 1970,\n\t\t// which is currently more than one trillion.\n\t\t// We use the low 8 hex digits of this number in the UID.\n\t\t// Just in case the system clock has been reset to\n\t\t// Jan 1-4, 1970 (in which case this number could have only\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\n\t\t// before taking the low digits.\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = timeString.charCodeAt(i);\n\n\t\tfor (i = 0; i < 4; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\treturn String.fromCharCode.apply(null, uid);\n\t}\n\n\t/**\n\t * Returns the decimal representation of a hex digit.\n\t * @private\n\n\t private static getDigit(hex:string):number\n\t {\n\t\tswitch (hex) {\n\t\t\tcase \"A\":\n\t\t\tcase \"a\":\n\t\t\t\treturn 10;\n\t\t\tcase \"B\":\n\t\t\tcase \"b\":\n\t\t\t\treturn 11;\n\t\t\tcase \"C\":\n\t\t\tcase \"c\":\n\t\t\t\treturn 12;\n\t\t\tcase \"D\":\n\t\t\tcase \"d\":\n\t\t\t\treturn 13;\n\t\t\tcase \"E\":\n\t\t\tcase \"e\":\n\t\t\t\treturn 14;\n\t\t\tcase \"F\":\n\t\t\tcase \"f\":\n\t\t\t\treturn 15;\n\t\t\tdefault:\n\t\t\t\treturn new uint(hex);\n\t\t}\n\t}\n\t */\n\n}\n\nexport = IDUtil;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass IgnoreConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\t// Do nothing, ignore the fact that there is a conflict.\n\t\treturn;\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new IgnoreConflictStrategy();\n\t}\n}\n\nexport = IgnoreConflictStrategy;",
    "class LoaderContext\n{\n\tpublic static UNDEFINED:number = 0;\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\n\tpublic static MULTIPASS_MATERIALS:number = 2;\n\n\tprivate _includeDependencies:boolean;\n\tprivate _dependencyBaseUrl:string;\n\tprivate _embeddedDataByUrl:Object;\n\tprivate _remappedUrls:Object;\n\tprivate _materialMode:number;\n\n\tprivate _overrideAbsPath:boolean;\n\tprivate _overrideFullUrls:boolean;\n\n\t/**\n\t * LoaderContext provides configuration for the LoaderSession load() and parse() operations.\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\n\t * embedded data.\n\t *\n\t * @see away.loading.LoaderSession\n\t */\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\n\t{\n\t\tthis._includeDependencies = includeDependencies;\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\n\t\tthis._embeddedDataByUrl = {};\n\t\tthis._remappedUrls = {};\n\t\tthis._materialMode = LoaderContext.UNDEFINED;\n\t}\n\n\t/**\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\n\t * parseData() operations) should be automatically loaded. Defaults to true.\n\t */\n\tpublic get includeDependencies():boolean\n\t{\n\t\treturn this._includeDependencies;\n\t}\n\n\tpublic set includeDependencies(val:boolean)\n\t{\n\t\tthis._includeDependencies = val;\n\t}\n\n\t/**\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\n\t * Options:\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\n\t *\n\t */\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic set materialMode(materialMode:number)\n\t{\n\t\tthis._materialMode = materialMode;\n\t}\n\n\t/**\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\n\t * Absolute paths will not be affected by the value of this property.\n\t */\n\tpublic get dependencyBaseUrl():string\n\t{\n\t\treturn this._dependencyBaseUrl;\n\t}\n\n\tpublic set dependencyBaseUrl(val:string)\n\t{\n\t\tthis._dependencyBaseUrl = val;\n\t}\n\n\t/**\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideAbsolutePaths():boolean\n\t{\n\t\treturn this._overrideAbsPath;\n\t}\n\n\tpublic set overrideAbsolutePaths(val:boolean)\n\t{\n\t\tthis._overrideAbsPath = val;\n\t}\n\n\t/**\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideFullURLs():boolean\n\t{\n\t\treturn this._overrideFullUrls;\n\t}\n\n\tpublic set overrideFullURLs(val:boolean)\n\t{\n\t\tthis._overrideFullUrls = val;\n\t}\n\n\t/**\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\n\t * expected by the loaded file.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param newUrl The URL from which away.should load the resource instead.\n\t *\n\t * @see mapUrlToData()\n\t */\n\tpublic mapUrl(originalUrl:string, newUrl:string)\n\t{\n\t\tthis._remappedUrls[originalUrl] = newUrl;\n\t}\n\n\t/**\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\n\t */\n\tpublic mapUrlToData(originalUrl:string, data:any)\n\t{\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether embedded data has been mapped to a particular URL.\n\t */\n\tpublic _iHasDataForUrl(url:string):boolean\n\t{\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns embedded data for a particular URL.\n\t */\n\tpublic _iGetDataForUrl(url:string):any\n\t{\n\t\treturn this._embeddedDataByUrl[url];\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether a replacement URL has been mapped to a particular URL.\n\t */\n\tpublic _iHasMappingForUrl(url:string):boolean\n\t{\n\t\treturn this._remappedUrls.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns new (replacement) URL for a particular original URL.\n\t */\n\tpublic _iGetRemappedUrl(originalUrl:string):string\n\t{\n\t\treturn this._remappedUrls[originalUrl];\n\t}\n}\n\nexport = LoaderContext;",
    "import LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport Image2DParser\t\t\t= require(\"awayjs-core/lib/parsers/Image2DParser\");\nimport ImageCubeParser\t\t\t= require(\"awayjs-core/lib/parsers/ImageCubeParser\");\nimport TextureAtlasParser\t\t= require(\"awayjs-core/lib/parsers/TextureAtlasParser\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport WaveAudioParser\t\t\t= require(\"awayjs-core/lib/parsers/WaveAudioParser\");\n\n\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n/**\n * Dispatched when an image asset dimensions are not a power of 2\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * LoaderSession can load any file format that away.supports (or for which a third-party parser\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\n * and for when the resource (or it's dependencies) have been loaded.\n *\n * The LoaderSession will not make assets available in any other way than through the dispatched\n * events. To store assets and make them available at any point from any module in an application,\n * use the AssetLibrary to load and manage assets.\n *\n * @see away.library.AssetLibrary\n */\nclass LoaderSession extends EventDispatcher\n{\n\tprivate _context:LoaderContext;\n\tprivate _uri:string;\n\tprivate _materialMode:number;\n\n\tprivate _errorHandlers:Array<Function>;\n\tprivate _parseErrorHandlers:Array<Function>;\n\n\tprivate _stack:Array<ResourceDependency>;\n\tprivate _baseDependency:ResourceDependency;\n\tprivate _currentDependency:ResourceDependency;\n\tprivate _namespace:string;\n\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\n\tprivate _onLoadCompleteDelegate:(event:Event) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\n\t// Image parser only parser that is added by default, to save file size.\n\tprivate static _parsers:Array<any> = new Array<any>(Image2DParser, ImageCubeParser, TextureAtlasParser, WaveAudioParser);\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parser The parser class to enable.\n\t *\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parser)\n\t{\n\t\tif (LoaderSession._parsers.indexOf(parser) < 0)\n\t\t\tLoaderSession._parsers.push(parser);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * LoaderSession can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parsers A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parsers:Array<Object>)\n\t{\n\t\tfor (var c:number = 0; c < parsers.length; c++)\n\t\t\tLoaderSession.enableParser(parsers[ c ]);\n\t}\n\n\t/**\n\t * Returns the base dependency of the loader\n\t */\n\tpublic get baseDependency():ResourceDependency\n\t{\n\t\treturn this._baseDependency;\n\t}\n\n\t/**\n\t * Create a new ResourceLoadSession object.\n\t */\n\tconstructor(materialMode:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = materialMode;\n\n\t\tthis._stack = new Array<ResourceDependency>();\n\t\tthis._errorHandlers = new Array<Function>();\n\t\tthis._parseErrorHandlers = new Array<Function>();\n\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t\tthis._onLoadCompleteDelegate = (event:Event) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\n\t */\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\n\t\tthis._context = context;\n\t\tthis._namespace = ns;\n\n\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\n\t\tthis.retrieveDependency(this._baseDependency);\n\t}\n\n\t/**\n\t * Loads a resource from already loaded data.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, LoaderSession will attempt to auto-detect the file type.\n\t */\n\tpublic loadData(data:any, id:string, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._uri = id;\n\t\tthis._context = context;\n\t\tthis._namespace = ns;\n\n\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\n\t\tthis.retrieveDependency(this._baseDependency);\n\t}\n\n\t/**\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\n\t * stack when complete and continues on the top set.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveNext(parser:ParserBase = null)\n\t{\n\t\tif (this._currentDependency.dependencies.length) {\n\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\n\n\t\t\tthis._stack.push(this._currentDependency);\n\t\t\tthis.retrieveDependency(next);\n\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\n\n\t\t\tthis._currentDependency.parser._iResumeParsing();\n\t\t\tthis._stack.pop();\n\n\t\t} else if (this._stack.length) {\n\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\n\n\t\t\tthis._currentDependency = this._stack.pop();\n\n\t\t\tif (prev._iSuccess)\n\t\t\t\tprev.resolve();\n\n\t\t\tthis.retrieveNext(parser);\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.RESOURCE_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a single dependency.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveDependency(dependency:ResourceDependency)\n\t{\n\t\tvar data:any;\n\n\t\tif (this._context && this._context.materialMode != 0)\n\t\t\tthis._materialMode = this._context.materialMode;\n\n\t\tthis._currentDependency = dependency;\n\n\t\tdependency._iLoader = new URLLoader();\n\n\t\tthis.addEventListeners(dependency._iLoader);\n\n\t\t// Get already loaded (or mapped) data if available\n\t\tdata = dependency.data;\n\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\n\n\t\tif (data) {\n\t\t\tif (data.constructor === Function)\n\t\t\t\tdata = new data();\n\n\t\t\tdependency._iSetData(data);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// No need to parse. The parent parser is expecting this\n\t\t\t\t// to be raw data so it can be passed directly.\n\t\t\t\tdependency.resolve();\n\n\t\t\t\t// Move on to next dependency\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\tthis.parseDependency(dependency);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// Resolve URL and start loading\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// Always use binary for raw data loading\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t} else {\n\n\t\t\t\tif (!dependency.parser)\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\n\n\t\t\t\tif (dependency.parser) {\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\n\t\t\t\t} else {\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\n\t\t\t\t\t// file type check will determine format after load, and if\n\t\t\t\t\t// binary, a text load will have broken the file data.\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdependency._iLoader.load(dependency.request);\n\t\t}\n\t}\n\n\tprivate joinUrl(base:string, end:string):string\n\t{\n\t\tif (end.charAt(0) == '/' || end.charAt(0) == '\\\\')\n\t\t\tend = end.substr(1);\n\n\t\tif (end.charAt(0) == '.')\n\t\t\tend = end.substr(2);\n\n\t\tif (base.length == 0)\n\t\t\treturn end;\n\n\t\tif (base.charAt(base.length - 1) == '/' || base.charAt(base.length - 1) == '\\\\')\n\t\t\tbase = base.substr(0, base.length - 1);\n\n\t\treturn base.concat('/', end);\n\n\t}\n\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\n\t{\n\t\tvar scheme_re:RegExp;\n\t\tvar base:string;\n\t\tvar url:string = dependency.request.url;\n\n\t\t// Has the user re-mapped this URL?\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\n\t\t\treturn this._context._iGetRemappedUrl(url);\n\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\n\t\t// We will not try to resolve this since the user can probably be\n\t\t// thrusted to know this URL better than our automatic resolver. :)\n\t\tif (url == this._uri)\n\t\t\treturn url;\n\n\n\t\t// Absolute URL? Check if starts with slash or a URL\n\t\t// scheme definition (e.g. ftp://, http://, file://)\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\n\n\t\tif (url.charAt(0) == '/') {\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\n\t\t\t\treturn url;\n\t\t} else if (scheme_re.test(url)) {\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\n\t\t\tif (this._context && this._context.overrideFullURLs) {\n\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\n\t\t\t}\n\t\t}\n\n\t\t// Since not absolute, just get rid of base file name to find it's\n\t\t// folder and then concatenate dynamic URL\n\t\tif (this._context && this._context.dependencyBaseUrl) {\n\t\t\tbase = this._context.dependencyBaseUrl;\n\t\t\treturn this.joinUrl(base, url);\n\t\t} else {\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\n\t\t\treturn this.joinUrl(base, url);\n\t\t}\n\t}\n\n\tprivate retrieveParserDependencies()\n\t{\n\t\tif (!this._currentDependency)\n\t\t\treturn;\n\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies;\n\t\tvar i:number, len:number = parserDependancies.length;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\n\n\t\t// Since more dependencies might be added eventually, empty this\n\t\t// list so that the same dependency isn't retrieved more than once.\n\t\tparserDependancies.length = 0;\n\n\t\tthis._stack.push(this._currentDependency);\n\n\t\tthis.retrieveNext();\n\t}\n\n\tprivate resolveParserDependencies()\n\t{\n\t\tthis._currentDependency._iSuccess = true;\n\n\t\t// Retrieve any last dependencies remaining on this parser, or\n\t\t// if none exists, just move on.\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\n\t\t\tthis.retrieveParserDependencies();\n\t\telse\n\t\t\tthis.retrieveNext();\n\t}\n\n\t/**\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadError(event:IOErrorEvent)\n\t{\n\t\tvar handled:boolean;\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\t\tvar loader:URLLoader = <URLLoader> event.target;//TODO: keep on eye on this one\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR )) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when LoaderSession does have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._errorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\n\n\t\t\t\tthis._currentDependency.resolveFailure();\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\t// Either this was the base file (last left in the stack) or\n\t\t\t\t// default behavior was prevented by the handlers, and hence\n\t\t\t\t// there is nothing more to do than clean up and bail.\n\t\t\t\tthis.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Error event was not handled by listeners directly on LoaderSession or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error();\n\t\t}\n\t}\n\n\t/**\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\n\t * @param event\n\t */\n\tprivate onParseError(event:ParserEvent)\n\t{\n\t\tvar handled:boolean;\n\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\n\t\tvar loader:URLLoader = <URLLoader>event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when LoaderSession does\n\t\t\t// have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\t\t\tthis.retrieveNext();\n\t\t} else {\n\t\t\t// Error event was not handled by listeners directly on LoaderSession or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error(event.message);\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Add loaded asset to list of assets retrieved as part\n\t\t// of the current dependency. This list will be inspected\n\t\t// by the parent parser when dependency is resolved\n\t\tif (this._currentDependency)\n\t\t\tthis._currentDependency.assets.push(event.asset);\n\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\n\n\t\tif (!this._currentDependency.suppresAssetEvents)\n\t\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate onReadyForDependencies(event:ParserEvent)\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tif (this._context && !this._context.includeDependencies)\n\t\t\tparser._iResumeParsing();\n\t\telse\n\t\t\tthis.retrieveParserDependencies();\n\t}\n\n\t/**\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tvar loader:URLLoader = <URLLoader> event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\t// Resolve this dependency\n\t\tthis._currentDependency._iSetData(loader.data);\n\n\t\tif (this._currentDependency.retrieveAsRawData) {\n\t\t\t// No need to parse this data, which should be returned as is\n\t\t\tthis.resolveParserDependencies();\n\t\t} else {\n\t\t\tthis.parseDependency(this._currentDependency);\n\t\t}\n\t}\n\n\t/**\n\t * Called when parsing is complete.\n\t */\n\tprivate onParseComplete(event:ParserEvent):void\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\n\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\t/**\n\t * Called when an image is too large or it's dimensions are not a power of 2\n\t * @param event\n\t */\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate addEventListeners(loader:URLLoader)\n\t{\n\t\tloader.addEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.addEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tprivate removeEventListeners(loader:URLLoader)\n\t{\n\t\tloader.removeEventListener(Event.COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.removeEventListener(IOErrorEvent.IO_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis.dispose();\n\t}\n\n\tprivate dispose()\n\t{\n\t\tthis._errorHandlers = null;\n\t\tthis._parseErrorHandlers = null;\n\t\tthis._context = null;\n\t\tthis._stack = null;\n\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\n\n\t\tthis._currentDependency = null;\n\n\t}\n\n\t/**\n\t * @private\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\n\t * add error event listeners to the LoaderSession instance. This system is used instead of\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\n\t * that if hasEventListener() returns true, it's client code that's listening for the\n\t * event. Secondly, functions added as error handler through this custom method are\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\n\t * whether they in turn had any client code listening for the event.) If no handlers\n\t * return true, the LoaderSession knows that the event wasn't handled and will throw an RTE.\n\t */\n\n\tpublic _iAddParseErrorHandler(handler)\n\t{\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\n\t\t\tthis._parseErrorHandlers.push(handler);\n\t}\n\n\tpublic _iAddErrorHandler(handler)\n\t{\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\n\t\t\tthis._errorHandlers.push(handler);\n\t}\n\n\n\t/**\n\t * Guesses the parser to be used based on the file contents.\n\t * @param data The data to be parsed.\n\t * @param uri The url or id of the object to be parsed.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromData(data:any):ParserBase\n\t{\n\t\tvar len:number = LoaderSession._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--)\n\t\t\tif (LoaderSession._parsers[i].supportsData(data))\n\t\t\t\treturn new LoaderSession._parsers[i]();\n\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Initiates parsing of the loaded dependency.\n\t *\n\t * @param The dependency to be parsed.\n\t */\n\tprivate parseDependency(dependency:ResourceDependency):void\n\t{\n\t\tvar parser:ParserBase = dependency.parser;\n\n\t\t// If no parser has been defined, try to find one by letting\n\t\t// all plugged in parsers inspect the actual data.\n\t\tif (!parser)\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\n\n\t\tif (parser) {\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t\tif (dependency.request && dependency.request.url)\n\t\t\t\tparser._iFileName = dependency.request.url;\n\n\t\t\tparser.materialMode = this._materialMode;\n\n\t\t\tparser.parseAsync(dependency.data);\n\n\t\t} else {\n\t\t\tvar handled:boolean;\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\";\n\t\t\tvar event:ParserEvent = new ParserEvent(ParserEvent.PARSE_ERROR, message);\n\t\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\t\tthis.dispatchEvent(event);\n\t\t\t\thandled = true;\n\t\t\t} else {\n\t\t\t\t// TODO: Consider not doing this even when LoaderSession does\n\t\t\t\t// have it's own LOAD_ERROR listener\n\t\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tif (!handled)\n\t\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t\t}\n\n\t\t\tif (handled) {\n\t\t\t\tthis.retrieveNext();\n\t\t\t} else {\n\t\t\t\t// Error event was not handled by listeners directly on LoaderSession or\n\t\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Guesses the parser to be used based on the file extension.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromSuffix(url:string):ParserBase\n\t{\n\t\t// Get rid of query string if any and extract extension\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\n\n\t\tvar len:number = LoaderSession._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\n\t\t\tvar parserClass:any = LoaderSession._parsers[i];\n\t\t\tif (parserClass.supportsType(fileExtension))\n\t\t\t\treturn new parserClass();\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport = LoaderSession;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass NumSuffixConflictStrategy extends ConflictStrategyBase\n{\n\tprivate _separator:string;\n\tprivate _next_suffix:Object;\n\n\tconstructor(separator:string = '.')\n\t{\n\t\tsuper();\n\n\t\tthis._separator = separator;\n\t\tthis._next_suffix = {};\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar orig:string;\n\t\tvar new_name:string;\n\t\tvar base:string;\n\t\tvar suffix:number;\n\n\t\torig = changedAsset.name;\n\n\t\tif (orig.indexOf(this._separator) >= 0) {\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\n\t\t\t// use entire name as base\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\n\n\t\t\tif (isNaN(suffix)) {\n\t\t\t\tbase = orig;\n\t\t\t\tsuffix = 0;\n\t\t\t}\n\n\t\t} else {\n\t\t\tbase = orig;\n\t\t\tsuffix = 0;\n\t\t}\n\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\n\n\t\t\tsuffix = this._next_suffix[base];\n\n\t\t}\n\n\t\t// Find the first suffixed name that does\n\t\t// not collide with other names.\n\t\tdo {\n\n\t\t\tsuffix++;\n\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\n\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\n\n\t\tthis._next_suffix[ base ] = suffix;\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\n\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new NumSuffixConflictStrategy(this._separator);\n\t}\n}\n\nexport = NumSuffixConflictStrategy;",
    "\nclass AudioChannel\n{\n\tpublic static maxChannels:number = 16;\n\n\tpublic static _channels:Array<AudioChannel> = new Array<AudioChannel>();\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\n\tprivate static _audioCtx;\n\tprivate _audioCtx;\n\n\tprivate _gainNode;\n\n\tprivate _audio:HTMLAudioElement;\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._gainNode.gain.value;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tthis._gainNode.gain.value = value;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audioCtx = AudioChannel._audioCtx || (AudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode.connect(this._audioCtx.destination);\n\n\t\tthis._audio = new Audio();\n\t\tthis._audio.onended = (event) => this._onEnded(event);\n\t\tthis._audio[\"crossOrigin\"] = \"anonymous\";\n\n\t\tvar source = this._audioCtx.createMediaElementSource(this._audio);\n\t\tsource.connect(this._gainNode);\n\t}\n\t\n\tpublic play(url:string, offset:number = 0, loop:boolean = false)\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._audio.src = url;\n\t\tthis._audio.loop = loop;\n\t\tthis._audio.currentTime = offset;\n\t\tthis._audio.play();\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\n\tprivate _onEnded(event)\n\t{\n\t\tthis.stop();\n\t}\n}\n\nexport = AudioChannel;",
    "import StreamingAudioChannel\t= require(\"awayjs-core/lib/managers/StreamingAudioChannel\");\nimport WebAudioChannel\t\t\t= require(\"awayjs-core/lib/managers/WebAudioChannel\");\nimport IAudioChannel\t\t\t= require(\"awayjs-core/lib/managers/IAudioChannel\");\nimport IAudioChannelClass\t\t= require(\"awayjs-core/lib/managers/IAudioChannelClass\");\n\nclass AudioManager\n{\n\tpublic static getChannel(byteLength:number):IAudioChannel\n\t{\n\t\t//choose best audio channel by bytelength\n\t\tvar channelClass:IAudioChannelClass = (byteLength > 50000)? StreamingAudioChannel : WebAudioChannel;\n\n\t\tvar i:number = 0;\n\t\twhile(channelClass._channels[i] && channelClass._channels[i].isPlaying())\n\t\t\ti++;\n\n\t\tif (i == channelClass.maxChannels) {\n\t\t\t//pick the oldest channel to reuse, ignoring looping channels\n\t\t\tvar channel:IAudioChannel;\n\t\t\tvar len:number = channelClass._channels.length;\n\t\t\tfor (var j:number = 0; j < len; j++) {\n\t\t\t\tchannel = channelClass._channels[j];\n\t\t\t\tif (!channel.isLooping() && !channel.isDecoding()) {\n\t\t\t\t\tchannelClass._channels.push(channelClass._channels.splice(j, 1)[0]);\n\t\t\t\t\tchannel.stop();\n\t\t\t\t\treturn channel;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//do not return channel until one is freed up\n\t\t\treturn null;\n\t\t}\n\n\t\treturn channelClass._channels[i] || (channelClass._channels[i] = new channelClass());\n\t}\n\n\n}\n\nexport = AudioManager;",
    "import ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\n\nclass EventAudioChannel\n{\n\tpublic static maxChannels:number = 4;\n\n\tpublic static _channels:Array<EventAudioChannel> = new Array<EventAudioChannel>();\n\n\tpublic static _base64Cache:Object = new Object();\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _volume:number;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\t\n\tprivate _audio:HTMLAudioElement;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime - this._startTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._audio.volume = this._volume;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audio = new Audio();\n\t\tthis._audio.ontimeupdate = (event) => this._onTimeUpdate(event);\n\t}\n\t\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false, id:number = 0)\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._audio.src = EventAudioChannel._base64Cache[id] || (EventAudioChannel._base64Cache[id] = ParserUtils.arrayBufferToBase64(buffer, \"audio/mp3\"));\n\t\tthis._audio.loop = this._isLooping;\n\n\t\tthis._audio.currentTime = offset;\n\t\tthis._audio.play();\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\n\tprivate _onTimeUpdate(event)\n\t{\n\t\t//TODO: more accurate end detection\n\t\tif (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\n\t\t\tthis.stop();\n\t}\n}\n\nexport = EventAudioChannel;",
    "\nclass StreamingAudioChannel\n{\n\tpublic static maxChannels:number = 4;\n\n\tpublic static _channels:Array<StreamingAudioChannel> = new Array<StreamingAudioChannel>();\n\n\tprivate _sourceOpenDelegate:(event) => void;\n\tprivate _updateEndDelegate:(event) => void;\n\tprivate _sourceBuffer:SourceBuffer;\n\tprivate _sourceDirty:boolean;\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _isQueuing:boolean;\n\tprivate _isOpening:boolean;\n\tprivate _buffer:ArrayBuffer;\n\tprivate _offset:number;\n\tprivate _volume:number;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\t\n\tprivate _audio:HTMLAudioElement;\n\t\n\tprivate _mediaSource:MediaSource;\n\tprivate _urlString:string;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime - this._startTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._audio.volume = this._volume;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._sourceOpenDelegate = (event) => this._sourceOpen(event);\n\t\tthis._updateEndDelegate = (event) => this._updateEnd(event);\n\n\t\tthis._audio = new Audio();\n\t\tthis._audio.ontimeupdate = (event) => this._onTimeUpdate(event);\n\n\t\tthis._updateSource();\n\n\t}\n\t\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false)\n\t{\n\t\tthis._isPlaying = true;\n\n\t\tif (this._isLooping || this._isLooping != loop) {\n\t\t\tthis._isLooping = loop;\n\t\t\tthis._sourceDirty = true;\n\t\t}\n\n\t\tif (this._sourceDirty)\n\t\t\tthis._updateSource();\n\n\t\tthis._buffer = buffer;\n\t\tthis._offset = offset;\n\n\t\tif (!this._isQueuing && !this._isOpening)\n\t\t\tthis._queueBuffer();\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\t\n\tprivate _sourceOpen(event)\n\t{\n\t\tthis._isOpening = false;\n\n\t\t//TODO: find out how in the name of all that is holy how this can be executed more than once on a MediaSource object\n\t\tif (this._mediaSource.activeSourceBuffers.length) {\n\t\t\tconsole.log(\"ERR: double sourceopen event called\")\n\t\t\treturn;\n\t\t}\n\n\t\tthis._sourceBuffer = this._mediaSource.addSourceBuffer('audio/mpeg');\n\t\tthis._sourceBuffer.addEventListener(\"updateend\", this._updateEndDelegate);\n\n\t\tif (this._isPlaying)\n\t\t\tthis._queueBuffer();\n\t}\n\n\tprivate _queueBuffer()\n\t{\n\t\tthis._isQueuing = true;\n\n\t\tthis._startTime = this._sourceBuffer.timestampOffset;\n\t\tthis._sourceBuffer.appendBuffer(this._buffer);\n\t}\n\n\tprivate _updateEnd(event)\n\t{\n\t\tthis._isQueuing = false;\n\n\t\tif (this._isLooping)\n\t\t\tthis._mediaSource.endOfStream();\n\n\t\tthis._duration = this._sourceBuffer.timestampOffset - this._startTime;\n\n\t\tthis._audio.currentTime = this._startTime + this._offset;\n\t\tthis._audio.play();\n\t}\n\n\tprivate _onTimeUpdate(event)\n\t{\n\t\t//TODO: more accurate end detection\n\t\tif (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\n\t\t\tthis.stop();\n\t}\n\n\tprivate _updateSource()\n\t{\n\t\tif(this._mediaSource)\n\t\t\tthis._disposeSource();\n\n\t\tthis._isQueuing = false;\n\t\tthis._isOpening = true;\n\n\t\tthis._mediaSource = new MediaSource();\n\t\tthis._mediaSource.addEventListener(\"sourceopen\", this._sourceOpenDelegate);\n\t\tthis._urlString = URL.createObjectURL(this._mediaSource);\n\t\tthis._audio.src = this._urlString;\n\t\tthis._audio.loop = this._isLooping;\n\n\t\tthis._sourceDirty = false;\n\t}\n\n\tprivate _disposeSource()\n\t{\n\t\tif (!this._isOpening) {\n\t\t\tif (this._sourceBuffer.timestampOffset)\n\t\t\t\tthis._sourceBuffer.remove(0, this._sourceBuffer.timestampOffset);\n\n\t\t\tthis._sourceBuffer.removeEventListener(\"updateend\", this._updateEndDelegate);\n\t\t\tthis._mediaSource.removeSourceBuffer(this._sourceBuffer);\n\t\t\tdelete this._sourceBuffer;\n\t\t\tthis._sourceBuffer = null;\n\t\t}\n\n\t\tthis._mediaSource.removeEventListener(\"sourceopen\", this._sourceOpenDelegate);\n\t\tURL.revokeObjectURL(this._urlString);\n\t\tdelete this._mediaSource;\n\t\tthis._mediaSource = null;\n\t}\n}\n\nexport = StreamingAudioChannel;",
    "\nclass WebAudioChannel\n{\n\tpublic static maxChannels:number = 64;\n\n\tpublic static _channels:Array<WebAudioChannel> = new Array<WebAudioChannel>();\n\n\tpublic static _decodeCache:Object = new Object();\n\tpublic static _errorCache:Object = new Object();\n\n\tprivate static _audioCtx;\n\tprivate _audioCtx;\n\n\tprivate _gainNode;\n\tprivate _source;\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _isDecoding:boolean = false;\n\tprivate _currentTime:number;\n\tprivate _id:number;\n\tprivate _volume:number = 1;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\n\tprivate _onEndedDelegate : (event:any) => void;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audioCtx.currentTime - this._startTime;\n\t}\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._gainNode.gain.value = this._volume;\n\t}\n\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn this._isDecoding;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audioCtx = WebAudioChannel._audioCtx || (WebAudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode.gain.value = this._volume;\n\n\t\tthis._gainNode.connect(this._audioCtx.destination);\n\n\t\tthis._onEndedDelegate = (event) => this._onEnded(event);\n\t}\n\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false, id:number = 0)\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._currentTime = offset;\n\n\t\tthis._id = id;\n\n\t\tthis._isDecoding = true;\n\n\t\t//fast path for short sounds\n\t\tif (WebAudioChannel._decodeCache[id])\n\t\t\tthis._onDecodeComplete(WebAudioChannel._decodeCache[id]);\n\t\telse if (!WebAudioChannel._errorCache[id])\n\t\t\tthis._audioCtx.decodeAudioData(buffer, (buffer) => this._onDecodeComplete(buffer), (event) => this._onError(event));\n\t\telse\n\t\t\tthis.stop();\n\t}\n\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t\tthis._isDecoding = false;\n\n\t\tif (this._source)\n\t\t\tthis._disposeSource();\n\t}\n\n\tpublic _onDecodeComplete(buffer)\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isDecoding = false;\n\n\t\t//if (buffer.duration < 2) //cache all buffers?\n\t\tWebAudioChannel._decodeCache[this._id] = buffer;\n\n\t\tif (this._source)\n\t\t\tthis._disposeSource();\n\n\t\tthis._source = this._audioCtx.createBufferSource();\n\n\t\tthis._source.loop = this._isLooping;\n\t\tthis._source.connect(this._gainNode);\n\n\t\tthis._source.buffer = buffer;\n\t\tthis._duration = buffer.duration;\n\n\t\tthis._startTime = this._audioCtx.currentTime - this._currentTime;\n\t\tthis._source.onended = this._onEndedDelegate;\n\t\ttry {\n\t\t\tthis._source.start(this._audioCtx.currentTime, this._currentTime);\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error starting audio: \" + error);\n\t\t\tthis._disposeSource();\n\t\t}\n\t}\n\n\tpublic _onError(event)\n\t{\n\t\tconsole.log(\"Error with decoding audio data\");\n\t\tWebAudioChannel._errorCache[this._id] = true;\n\t\tthis.stop();\n\t}\n\n\tprivate _onEnded(event):void\n\t{\n\t\tthis.stop();\n\t}\n\n\tprivate _disposeSource()\n\t{\n\t\t//clean up\n\t\tthis._source.stop(this._audioCtx.currentTime);\n\t\tthis._source.onended = null;\n\t\tthis._source.disconnect();\n\t\tdelete this._source.buffer;\n\t\tdelete this._source;\n\t\tthis._source = null;\n\t}\n}\n\nexport = WebAudioChannel;",
    "class CrossDomainPolicy\n{\n\tpublic static ANONYMOUS:string = 'anonymous';\n\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\n}\n\nexport = CrossDomainPolicy;\n",
    "class URLLoaderDataFormat\n{\n\t/**\n\t * TEXT\n\t * @type {string}\n\t */\n\tpublic static TEXT:string = \"text\";\n\n\t/**\n\t * Variables / Value Pairs\n\t * @type {string}\n\t */\n\tpublic static VARIABLES:string = \"variables\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BLOB:string = \"blob\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BINARY:string = \"binary\";\n}\n\nexport = URLLoaderDataFormat;",
    "import URLLoaderDataFormat\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\nimport URLVariables\t\t\t\t\t= require(\"awayjs-core/lib/net/URLVariables\");\nimport AwayEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport HTTPStatusEvent\t\t\t\t= require(\"awayjs-core/lib/events/HTTPStatusEvent\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport AwayProgressEvent\t\t\t= require(\"awayjs-core/lib/events/ProgressEvent\");\n\n/**\n * The URLLoader is used to load a single file, as part of a resource.\n *\n * While URLLoader can be used directly, e.g. to create a third-party asset\n * management system, it's recommended to use any of the classes Loader3D, LoaderSession\n * and AssetLibrary instead in most cases.\n *\n * @see LoaderSession\n * @see away.library.AssetLibrary\n */\nclass URLLoader extends EventDispatcher\n{\n\tprivate _XHR:XMLHttpRequest;\n\tprivate _bytesLoaded:number = 0;\n\tprivate _bytesTotal:number = 0;\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\n\tprivate _loadError:boolean = false;\n\n\tprivate _request:URLRequest;\n\tprivate _data:any;\n\n\tprivate _loadStartEvent:AwayEvent;\n\tprivate _loadErrorEvent:IOErrorEvent;\n\tprivate _loadCompleteEvent:AwayEvent;\n\tprivate _progressEvent:AwayProgressEvent;\n\n\t/**\n\t * Creates a new URLLoader object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get url():string\n\t{\n\n\t\treturn this._request? this._request.url : '';\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\n\t/**\n\t *\n\t * URLLoaderDataFormat.BINARY\n\t * URLLoaderDataFormat.TEXT\n\t * URLLoaderDataFormat.VARIABLES\n\t *\n\t * @param format\n\t */\n\tpublic set dataFormat(format:string)\n\t{\n\t\tthis._dataFormat = format;\n\t}\n\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesLoaded():number\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesTotal():number\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * Load a resource from a file.\n\t *\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\n\t */\n\tpublic load(request:URLRequest):void\n\t{\n\t\tthis._request = request;\n\n\t\tthis.initXHR();\n\n\t\tif (request.method === URLRequestMethod.POST)\n\t\t\tthis.postRequest(request);\n\t\telse\n\t\t\tthis.getRequest(request);\n\t}\n\n\tpublic isSupported():boolean {\n\t\treturn window != null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic close():void\n\t{\n\t\tthis._XHR.abort();\n\t\tthis.disposeXHR();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tif (this._XHR)\n\t\t\tthis._XHR.abort();\n\n\t\tthis.disposeXHR();\n\n\t\tthis._data = null;\n\t\tthis._dataFormat = null;\n\t\tthis._bytesLoaded = null;\n\t\tthis._bytesTotal = null;\n\t}\n\n\t/**\n\t *\n\t * @param xhr\n\t * @param responseType\n\t */\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\n\t{\n\t\tswitch (responseType) {\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\txhr.responseType = responseType;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\txhr.responseType = '';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate getRequest(request:URLRequest):void\n\t{\n\t\ttry {\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\t\t\tthis._XHR.send(); // No data to send\n\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate postRequest(request:URLRequest):void\n\t{\n\t\tthis._loadError = false;\n\n\t\tthis._XHR.open(request.method, request.url, request.async);\n\n\t\tif (request.data != null) {\n\t\t\tif (request.data instanceof URLVariables) {\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\n\n\t\t\t\ttry {\n\t\t\t\t\tthis._XHR.responseType = 'text';\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\n\t\t\t\tif (request.data)\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\n\t\t\t\telse\n\t\t\t\t\tthis._XHR.send(); // no data to send\n\t\t\t}\n\t\t} else {\n\t\t\tthis._XHR.send(); // No data to send\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * @param error {XMLHttpRequestException}\n\t */\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\n\t{\n\t\tswitch (error.code) {\n\n\t\t/******************************************************************************************************************************************************************************************************\n\t\t *\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\n\t\t *\n\t\t ******************************************************************************************************************************************************************************************************/\n\n\t\t\tcase 101:\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initXHR()\n\t{\n\t\tif (!this._XHR) {\n\t\t\tthis._XHR = new XMLHttpRequest();\n\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate disposeXHR()\n\t{\n\t\tif (this._XHR !== null) {\n\t\t\tthis._XHR.onloadstart = null;\n\t\t\tthis._XHR.onprogress = null;\n\t\t\tthis._XHR.onabort = null;\n\t\t\tthis._XHR.onerror = null;\n\t\t\tthis._XHR.onload = null;\n\t\t\tthis._XHR.ontimeout = null;\n\t\t\tthis._XHR.onloadend = null;\n\t\t\tthis._XHR = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decodeURLVariables(source:string):Object\n\t{\n\t\tvar result:Object = new Object();\n\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\n\t\treturn result;\n\t}\n\n\t// XMLHttpRequest - Event Handlers\n\n\t/**\n\t * When XHR state changes\n\t * @param event\n\t */\n\tprivate onReadyStateChange(event:Event)\n\t{\n\t\tif (this._XHR.readyState == 4) {\n\t\t\tif (this._XHR.status == 404) {\n\t\t\t\tthis._loadError = true;\n\n\t\t\t\tif (!this._loadErrorEvent)\n\t\t\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(new HTTPStatusEvent(HTTPStatusEvent.HTTP_STATUS, this._XHR.status));\n\t\t}\n\t}\n\n\t/**\n\t * When the request has completed, regardless of whether or not it was successful.\n\t * @param event\n\t */\n\tprivate onLoadEnd(event:ProgressEvent)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\t}\n\n\t/**\n\t * When the author specified timeout has passed before the request could complete.\n\t * @param event\n\t */\n\tprivate onTimeOut(event:Event)\n\t{\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\n\t}\n\n\t/**\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t * @param event\n\t */\n\tprivate onAbort(event:UIEvent)\n\t{\n\t\t// TODO: investigate whether this needs to be an IOError\n\t}\n\n\t/**\n\t * While loading and sending data.\n\t * @param event\n\t */\n\tprivate onProgress(event:ProgressEvent)\n\t{\n\t\tif (!this._progressEvent)\n\t\t\tthis._progressEvent = new AwayProgressEvent(AwayProgressEvent.PROGRESS);\n\n\t\tthis._progressEvent.bytesTotal = event.total;\n\t\tthis._progressEvent.bytesLoaded = event.loaded;\n\n\t\tthis.dispatchEvent(this._progressEvent);\n\t}\n\n\t/**\n\t * When the request starts.\n\t * @param event\n\t */\n\tprivate onLoadStart(event:ProgressEvent)\n\t{\n\t\tif (!this._loadStartEvent)\n\t\t\tthis._loadStartEvent = new AwayEvent(AwayEvent.OPEN);\n\n\t\tthis.dispatchEvent(this._loadStartEvent);\n\t}\n\n\t/**\n\t * When the request has successfully completed.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\n\t\tswitch (this._dataFormat) {\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\tthis._data = this._XHR.response;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!this._loadCompleteEvent)\n\t\t\tthis._loadCompleteEvent = new AwayEvent(AwayEvent.COMPLETE);\n\n\t\tthis.dispatchEvent(this._loadCompleteEvent);\n\t}\n\n\t/**\n\t * When the request has failed. ( due to network issues ).\n\t * @param event\n\t */\n\tprivate onLoadError(event:Event)\n\t{\n\t\tthis._loadError = true;\n\n\t\tif (!this._loadErrorEvent)\n\t\t\tthis._loadErrorEvent = new IOErrorEvent(IOErrorEvent.IO_ERROR);\n\n\t\tthis.dispatchEvent(this._loadErrorEvent);\n\t}\n}\n\nexport = URLLoader;",
    "class URLRequestMethod\n{\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static POST:string = 'POST';\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static GET:string = 'GET';\n}\n\nexport = URLRequestMethod;",
    "import URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\n\nclass URLRequest\n{\n\t/*\n\t * The MIME content type of the content in the the data property.\n\t * @type {string}\n\t */\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\n\n\t/**\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\n\t *\n\t */\n\tpublic data:any;\n\n\t/**\n\t *\n\t * away.net.URLRequestMethod.GET\n\t * away.net.URLRequestMethod.POST\n\t *\n\t * @type {string}\n\t */\n\tpublic method:string = URLRequestMethod.GET;\n\n\t/**\n\t * Use asynchronous XMLHttpRequest\n\t * @type {boolean}\n\t */\n\tpublic async:boolean = true;\n\n\t/**\n\t *\n\t */\n\tprivate _url:string;\n\n\t/**\n\n\t * @param url\n\t */\n\tconstructor(url:string = null)\n\t{\n\t\tthis._url = url;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set url(value:string)\n\t{\n\t\tthis._url = value;\n\t}\n\n\t/**\n\t * dispose\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.data = null;\n\t\tthis._url = null;\n\t}\n}\n\nexport = URLRequest;",
    "class URLVariables\n{\n\tprivate _variables:Object = new Object();\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tconstructor(source:string = null)\n\t{\n\t\tif (source !== null)\n\t\t\tthis.decode(source);\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decode(source:string):void\n\t{\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic toString():string\n\t{\n\t\treturn '';\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get variables():Object\n\t{\n\t\treturn this._variables;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get formData():FormData\n\t{\n\t\tvar fd:FormData = new FormData();\n\n\t\tfor (var s in this._variables)\n\t\t\tfd.append(s, this._variables[s]);\n\n\t\treturn fd;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic set variables(obj:Object)\n\t{\n\t\tthis._variables = obj;\n\t}\n}\n\nexport = URLVariables;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\n/**\n * Image2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nclass Image2DParser extends ParserBase\n{\n\tprivate _startedParsing:boolean;\n\tprivate _doneParsing:boolean;\n\tprivate _loadingImage:boolean;\n\tprivate _htmlImageElement:HTMLImageElement;\n\n\t/**\n\t * Creates a new Image2DParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\n\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\n\t\tif (data  instanceof HTMLImageElement)\n\t\t\treturn true;\n\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tba.position = 0;\n\n\t\tif (ba.readUnsignedShort() == 0xffd8)\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\n\n\t\tba.position = 0;\n\t\tif (ba.readShort() == 0x424D)\n\t\t\treturn true; // BMP\n\n\t\tba.position = 1;\n\t\tif (ba.readUTFBytes(3) == 'PNG')\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'ATF')\n\t\t\treturn true;\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tvar asset:BitmapImage2D;\n\t\tvar sizeError:boolean = false;\n\n\t\tif (this._loadingImage) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else if (this._htmlImageElement) {\n\t\t\tif (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t}\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\n\t\t\tvar htmlImageElement:HTMLImageElement = <HTMLImageElement> this.data;\n\t\t\tif (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\n\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\n\n\t\t\tvar ba:ByteArray = this.data;\n\t\t\tba.position = 0;\n\t\t\tvar htmlImageElement:HTMLImageElement = ParserUtils.byteArrayToImage(this.data);\n\n\t\t\tif (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t} else {\n\t\t\t\tsizeError = true;\n\t\t\t}\n\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\n\n\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\n\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\n\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\tthis._loadingImage = true;\n\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\n\t\t{\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\n\t\t}\n\n\t\tthis._pContent = asset;\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tpublic onLoadComplete(event)\n\t{\n\t\tthis._loadingImage = false;\n\t}\n}\n\nexport = Image2DParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\n\n/**\n * ImageCubeParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nclass ImageCubeParser extends ParserBase\n{\n\tprivate static posX:string = 'posX';\n\tprivate static negX:string = 'negX';\n\tprivate static posY:string = 'posY';\n\tprivate static negY:string = 'negY';\n\tprivate static posZ:string = 'posZ';\n\tprivate static negZ:string = 'negZ';\n\n\tprivate _imgDependencyDictionary:Object;\n\n\t/**\n\t * Creates a new ImageCubeParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"cube\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar obj = JSON.parse(data);\n\n\t\t\tif (obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\n\t\t\tvar asset:BitmapImageCube = new BitmapImageCube(this._getBitmapImage2D(ImageCubeParser.posX).width);\n\n\t\t\tasset.draw(BitmapImageCube.posX, this._getBitmapImage2D(ImageCubeParser.posX));\n\t\t\tasset.draw(BitmapImageCube.negX, this._getBitmapImage2D(ImageCubeParser.negX));\n\t\t\tasset.draw(BitmapImageCube.posY, this._getBitmapImage2D(ImageCubeParser.posY));\n\t\t\tasset.draw(BitmapImageCube.negY, this._getBitmapImage2D(ImageCubeParser.negY));\n\t\t\tasset.draw(BitmapImageCube.posZ, this._getBitmapImage2D(ImageCubeParser.posZ));\n\t\t\tasset.draw(BitmapImageCube.negZ, this._getBitmapImage2D(ImageCubeParser.negZ));\n\n\t\t\t//clear dictionary\n\t\t\tthis._imgDependencyDictionary = null;\n\n\t\t\tasset.name = this._iFileName;\n\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\ttry {\n\t\t\tvar json:any = JSON.parse(this.data);\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\n\t\t\tvar rec:any;\n\n\t\t\tif (data.length != 6)\n\t\t\t\tthis._pDieWithError('ImageCubeParser: Error - cube texture should have exactly 6 images');\n\n\t\t\tif (json) {\n\t\t\t\tthis._imgDependencyDictionary = new Object();\n\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\n\t\t\t\t\trec = data[c];\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\n\t\t\t\t}\n\n\t\t\t\tif (!this._validateCubeData()) {\n\n\t\t\t\t\tthis._pDieWithError(\"ImageCubeParser: JSON data error - cubes require id of:   \\n\" + ImageCubeParser.posX + ', ' + ImageCubeParser.negX + ',  \\n' + ImageCubeParser.posY + ', ' + ImageCubeParser.negY + ',  \\n' + ImageCubeParser.posZ + ', ' + ImageCubeParser.negZ);\n\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate _validateCubeData():boolean\n\t{\n\t\treturn  ( this._imgDependencyDictionary[ ImageCubeParser.posX ] != null && this._imgDependencyDictionary[ ImageCubeParser.negX ] != null && this._imgDependencyDictionary[ ImageCubeParser.posY ] != null && this._imgDependencyDictionary[ ImageCubeParser.negY ] != null && this._imgDependencyDictionary[ ImageCubeParser.posZ ] != null && this._imgDependencyDictionary[ ImageCubeParser.negZ ] != null );\n\t}\n\n\tprivate _getBitmapImage2D(name:string):BitmapImage2D\n\t{\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\n\n\t\tif (dependency)\n\t\t\treturn <BitmapImage2D> dependency.assets[0];\n\n\t\treturn null;\n\t}\n\n}\n\nexport = ImageCubeParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport Timer\t\t\t\t\t= require(\"awayjs-core/lib/utils/Timer\");\nimport getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\n/**\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\n * supported by away.\n *\n * If used by <code>LoaderSession</code> to automatically determine the parser type, two public static methods should\n * be implemented, with the following signatures:\n *\n * <code>public static supportsType(extension : string) : boolean</code>\n * Indicates whether or not a given file extension is supported by the parser.\n *\n * <code>public static supportsData(data : *) : boolean</code>\n * Tests whether a data block can be parsed by the parser.\n *\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\n * handle regardless of whether the object was loaded or not.\n *\n * @see LoaderSession\n */\nclass ParserBase extends EventDispatcher\n{\n\tpublic _isParsing:boolean;\n\tpublic _iFileName:string;\n\tprivate _dataFormat:string;\n\tprivate _data:any;\n\tprivate _frameLimit:number;\n\tprivate _lastFrameTime:number;\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\n\tpublic _pContent:IAsset;\n\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// Needs to be implemented in all Parsers (\n\t//<code>public static supportsType(extension : string) : boolean</code>\n\t//* Indicates whether or not a given file extension is supported by the parser.\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate _dependencies:Array<ResourceDependency>;\n\tprivate _parsingPaused:boolean;\n\tprivate _parsingComplete:boolean;\n\tprivate _parsingFailure:boolean;\n\tprivate _timer:Timer;\n\tprivate _materialMode:number;\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\n\t */\n\tpublic static PARSING_DONE:boolean = true;\n\t/* Protected */\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\n\t */\n\tpublic static MORE_TO_PARSE:boolean = false;\n\t/* Protected */\n\n\n\tpublic get content():IAsset\n\t{\n\t\treturn this._pContent;\n\t}\n\n\t/**\n\t * Creates a new ParserBase object\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\n\t *\n\t * @see away.loading.parsers.ParserDataFormat\n\t */\n\tconstructor(format:string)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = 0;\n\t\tthis._dataFormat = format;\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\n\t}\n\n\t/**\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\n\t */\n\n\tpublic isBitmapImage2DValid(bitmapImage2D:BitmapImage2D):boolean\n\t{\n\t\tvar isValid:boolean = ImageUtils.isImage2DValid(bitmapImage2D);\n\n\t\tif (!isValid) {\n\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tpublic set parsingFailure(b:boolean)\n\t{\n\t\tthis._parsingFailure = b;\n\t}\n\n\tpublic get parsingFailure():boolean\n\t{\n\t\treturn this._parsingFailure;\n\t}\n\n\tpublic get parsingPaused():boolean\n\t{\n\t\treturn this._parsingPaused;\n\t}\n\n\tpublic get parsingComplete():boolean\n\t{\n\t\treturn this._parsingComplete;\n\t}\n\n\tpublic set materialMode(newMaterialMode:number)\n\t{\n\t\tthis._materialMode = newMaterialMode;\n\t}\n\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\n\t */\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\n\t * next frame.\n\t *\n\t * @param data The untyped data object in which the loaded data resides.\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\n\t * actual time spent on a frame can exceed this number since time-checks can\n\t * only be performed between logical sections of the parsing procedure.\n\t */\n\tpublic parseAsync(data:any, frameLimit:number = 30)\n\t{\n\t\tthis._data = data;\n\t\tthis._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\n\t * dependency should be a member of the dependencies property.\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\treturn asset.name;\n\t}\n\n\tpublic _iResumeParsing()\n\t{\n\t\tthis._parsingPaused = false;\n\n\t\tif (this._timer)\n\t\t\tthis._timer.start();\n\n\t\t//get started!\n\t\tif (!this._isParsing)\n\t\t\tthis._pOnInterval();\n\t}\n\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null)\n\t{\n\t\tvar type_event:string;\n\t\tvar type_name:string;\n\n\t\tif (name != null)\n\t\t\tasset.name = name;\n\n\t\t// If the asset has no name, give it\n\t\t// a per-type default name.\n\t\tif (!asset.name)\n\t\t\tasset.name = asset.assetType;\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\n\t}\n\n\t/**\n\t * Parse the next block of data.\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pDieWithError(message:string = 'Unknown parsing error')\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t\tthis._timer = null;\n\t\t}\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t}\n\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false, sub_id:number=0):ResourceDependency\n\t{\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents, sub_id);\n\t\tthis._dependencies.push(dependency);\n\n\t\treturn dependency;\n\t}\n\n\tpublic _pPauseAndRetrieveDependencies()\n\t{\n\t\tthis._pPauseParsing();\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\n\t}\n\n\tpublic _pPauseParsing()\n\t{\n\t\tif (this._timer)\n\t\t\tthis._timer.stop();\n\n\t\tthis._parsingPaused = true;\n\t}\n\n\t/**\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\n\t */\n\tpublic _pHasTime():boolean\n\t{\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\n\t}\n\n\t/**\n\t * Called when the parsing pause interval has passed and parsing can proceed.\n\t */\n\tpublic _pOnInterval(event:TimerEvent = null)\n\t{\n\t\tthis._lastFrameTime = getTimer();\n\t\tthis._isParsing = true;\n\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\n\t\t\tthis._pFinishParsing();\n\n\t\tthis._isParsing = false;\n\t}\n\n\t/**\n\t * Initializes the parsing of data.\n\t * @param frameLimit The maximum duration of a parsing session.\n\t */\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tthis._frameLimit = frameLimit;\n\t\tthis._timer = new Timer(this._frameLimit, 0);\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\tthis._timer.start();\n\n\t\t//get started!\n\t\tthis._pOnInterval();\n\t}\n\n\t/**\n\t * Finish parsing the data.\n\t */\n\tpublic _pFinishParsing()\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t}\n\n\t\tthis._timer = null;\n\t\tthis._parsingComplete = true;\n\t\tthis._isParsing = false;\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetTextData():string\n\t{\n\t\treturn ParserUtils.toString(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {ByteArray}\n\t * @private\n\t */\n\tpublic _pGetByteData():ByteArray\n\t{\n\t\treturn ParserUtils.toByteArray(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {any}\n\t * @private\n\t */\n\tpublic _pGetData():any\n\t{\n\t\treturn this._data;\n\t}\n\n}\n\nexport = ParserBase;",
    "/**\n * An enumeration providing values to describe the data format of parsed data.\n */\nclass ParserDataFormat\n{\n\t/**\n\t * Describes the format of a binary file.\n\t */\n\tpublic static BINARY:string = \"binary\";\n\n\t/**\n\t * Describes the format of a plain text file.\n\t */\n\tpublic static PLAIN_TEXT:string = \"plainText\";\n\n\t/**\n\t * Describes the format of an image file\n\t */\n\tpublic static IMAGE:string = \"image\";\n\n}\n\nexport = ParserDataFormat;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport WaveAudio\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass ParserUtils\n{\n\tpublic static arrayBufferToBase64(data:ArrayBuffer, mimeType:string)\n\t{\n\t\tvar byteStr:string = '';\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\n\t\tvar len:number = bytes.byteLength;\n\n\t\tfor (var i = 0; i < len; i++)\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\n\n\t\tvar base64Image:string = window.btoa(byteStr);\n\t\treturn 'data:' + mimeType + ';base64,' + base64Image;\n\t}\n\n\tpublic static arrayBufferToAudio(data:ArrayBuffer, fileType:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'audio/' + fileType);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an ArrayBuffer to a base64 string\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\tpublic static byteArrayToAudio(data:ByteArray, filetype:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'audio/' + filetype);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an Blob to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a Blob\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static blobToImage(data:Blob):HTMLImageElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an Blob to audio - returns an HTMLAudioElement\n\t *\n\t * @param audio data as a Blob\n\t *\n\t * @return HTMLAudioElement\n\t *\n\t */\n\tpublic static blobToAudio(data:Blob):HTMLAudioElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static imageToBitmapImage2D(img:HTMLImageElement, powerOfTwo:boolean = true):BitmapImage2D\n\t{\n\t\tvar bitmapData:BitmapImage2D = new BitmapImage2D(img.width, img.height, true, null, powerOfTwo);\n\t\tbitmapData.draw(img);\n\n\t\treturn bitmapData;\n\t}\n\n\t/**\n\t * Returns a object as ByteArray, if possible.\n\t *\n\t * @param data The object to return as ByteArray\n\t *\n\t * @return The ByteArray or null\n\t *\n\t */\n\tpublic static toByteArray(data:any):ByteArray\n\t{\n\t\tvar b:ByteArray = new ByteArray();\n\t\tb.setArrayBuffer(data);\n\t\treturn b;\n\t}\n\n\t/**\n\t * Returns a object as String, if possible.\n\t *\n\t * @param data The object to return as String\n\t * @param length The length of the returned String\n\t *\n\t * @return The String or null\n\t *\n\t */\n\tpublic static toString(data:any, length:number = 0):string\n\t{\n\n\t\tif (typeof data === 'string') {\n\t\t\tvar s:string = <string> data;\n\n\t\t\tif (s['substr'] != null)\n\t\t\t\treturn s.substr(0, s.length);\n\t\t}\n\n\t\tif (data instanceof ByteArray) {\n\t\t\tvar ba:ByteArray = <ByteArray> data;\n\t\t\tba.position = 0;\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\n\t\t}\n\n\t\treturn null;\n\n\t\t/*\n\t\t var ba:ByteArray;\n\n\t\t length ||= uint.MAX_VALUE;\n\n\t\t if (data is String)\n\t\t return String(data).substr(0, length);\n\n\t\t ba = toByteArray(data);\n\t\t if (ba) {\n\t\t ba.position = 0;\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\n\t\t }\n\n\t\t return null;\n\n\t\t */\n\n\t}\n}\n\nexport = ParserUtils;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\n * required by a parser, used by ResourceLoadSession.\n *\n */\nclass ResourceDependency\n{\n\tprivate _id:string;\n\tprivate _sub_id:number;\n\n\tprivate _request:URLRequest;\n\tprivate _assets:Array<IAsset>;\n\tprivate _parser:ParserBase;\n\tprivate _parentParser:ParserBase;\n\tprivate _data:any;\n\tprivate _retrieveAsRawData:boolean;\n\tprivate _suppressAssetEvents:boolean;\n\tprivate _dependencies:Array<ResourceDependency>;\n\n\tpublic _iLoader:URLLoader;\n\tpublic _iSuccess:boolean;\n\n\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false, sub_id:number=0)\n\t{\n\t\tthis._id = id;\n\t\tthis._sub_id = sub_id;\n\t\tthis._request = request;\n\t\tthis._data = data;\n\t\tthis._parser = parser;\n\t\tthis._parentParser = parentParser;\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\n\t\tthis._assets = new Array<IAsset>();\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get id():string\n\t{\n\t\treturn this._id;\n\t}\n\tpublic get sub_id():number\n\t{\n\t\treturn this._sub_id;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get request():URLRequest\n\t{\n\t\treturn this._request;\n\t}\n\n\t/**\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parser():ParserBase\n\t{\n\t\treturn this._parser;\n\t}\n\n\t/**\n\t * The parser which is dependent on this ResourceDependency object.\n\t */\n\tpublic get parentParser():ParserBase\n\t{\n\t\treturn this._parentParser;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get retrieveAsRawData():boolean\n\t{\n\t\treturn this._retrieveAsRawData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get suppresAssetEvents():boolean\n\t{\n\t\treturn this._suppressAssetEvents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * @private\n\t * Method to set data after having already created the dependency object, e.g. after load.\n\t */\n\tpublic _iSetData(data:any):void\n\t{\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t */\n\tpublic _iSetParser(parser:ParserBase):void\n\t{\n\t\tthis._parser = parser;\n\t}\n\n\t/**\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\n\t * to its intended parent. The dependency should be a member of the dependencies property.\n\t */\n\tpublic resolve():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependency(this);\n\t}\n\n\t/**\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\n\t */\n\tpublic resolveFailure():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\n\t}\n\n\t/**\n\t * Resolve the dependencies name\n\t */\n\tpublic resolveName(asset:IAsset):string\n\t{\n\t\tif (this._parentParser)\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\n\n\t\treturn asset.name;\n\t}\n}\n\nexport = ResourceDependency;",
    "import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport XmlUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/XmlUtils\");\n\n/**\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nclass TextureAtlasParser extends ParserBase\n{\n\tprivate _doc:Node;\n\tprivate _imagePath:string;\n\tprivate _imageData:BitmapImage2D;\n\tprivate _subTextureNodes:NodeList;\n\tprivate _parseState:number = 0;\n\n\t/**\n\t * Creates a new TextureAtlasParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"xml\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar content:string = ParserUtils.toString(data);\n\t\t\tif(content.indexOf(\"TextureAtlas\") != -1 || content.indexOf(\"textureatlas\") != -1)\n\t\t\t\treturn true;\n\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif(resourceDependency.assets.length) {\n\t\t\tthis._imageData = <BitmapImage2D> resourceDependency.assets[0];\n\t\t\tthis._pFinalizeAsset(this._imageData);\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_SUBTEXTURES;\n\t\t} else {\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar nodes:NodeList;\n\n\t\tswitch(this._parseState) {\n\t\t\tcase TextureAtlasParserState.PARSE_XML:\n\t\t\t\ttry {\n\t\t\t\t\tthis._doc = XmlUtils.getChildrenWithTag(XmlUtils.strToXml(this._pGetTextData()), \"TextureAtlas\")[0];\n\n\t\t\t\t\tthis._imagePath = XmlUtils.readAttributeValue(this._doc, \"imagePath\");\n\n\t\t\t\t\tthis._subTextureNodes = XmlUtils.getChildrenWithTag(this._doc, \"SubTexture\");\n\n\t\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_IMAGE;\n\n\t\t\t\t} catch(Error) {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_IMAGE:\n\t\t\t\tif (this._imagePath){\n\t\t\t\t\tthis._pAddDependency(this._imagePath, new URLRequest(this._imagePath));\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t\t} else {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_SUBTEXTURES:\n\t\t\t\tvar sampler:Sampler2D;\n\t\t\t\tvar element:Node;\n\t\t\t\tvar x:string;\n\t\t\t\tvar y:string;\n\t\t\t\tvar width:string;\n\t\t\t\tvar height:string;\n\t\t\t\tvar len:number = this._subTextureNodes.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\telement = this._subTextureNodes[i];\n\t\t\t\t\tsampler = new Sampler2D();\n\n\t\t\t\t\t//setup subtexture rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"x\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"y\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"width\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"height\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tsampler.imageRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n\n\t\t\t\t\t//setup frame rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"frameX\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"frameY\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"frameWidth\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"frameHeight\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tsampler.frameRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n\n\t\t\t\t\tthis._pFinalizeAsset(sampler, XmlUtils.readAttributeValue(element, \"name\"));\n\t\t\t\t}\n\n\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_COMPLETE:\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n}\n\nexport = TextureAtlasParser;\n\nclass TextureAtlasParserState {\n\tpublic static PARSE_XML:number = 0;\n\tpublic static PARSE_IMAGE:number = 1;\n\tpublic static PARSE_SUBTEXTURES:number = 2;\n\tpublic static PARSE_COMPLETE:number = 3;\n}",
    "import WaveAudio\t\t\t\t= require(\"awayjs-core/lib/data/WaveAudio\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass WaveAudioParser extends ParserBase\n{\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"wav\" || extension == \"mp3\" || extension == \"ogg\";\n\n\t}\n\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tvar filetype : string = WaveAudioParser.parseFileType(ba);\n\t\treturn filetype? true : false;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//clear content\n\t\tdelete this._pContent;\n\t\tthis._pContent = null;\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this.data instanceof ByteArray) { // Parse a ByteArray\n\t\t\tthis._pContent = new WaveAudio(this.data.arraybytes);\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\t\t\tthis._pContent = new WaveAudio(this.data);\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate static parseFileType(ba:ByteArray):string\n\t{\n\t\tba.position = 0;\n\n\t\tba.position = 0;\n\t\tif (ba.readUnsignedShort() & 0xFFE0) {\n\t\t\treturn 'mp3'; // test for MP3 syncword\n\t\t}\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'RIFF')\n\t\t\treturn 'wav';\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'OggS')\n\t\t\treturn 'ogg';\n\n\t\tba.position = 0;\n\n\t\treturn null;\n\t}\n}\n\nexport = WaveAudioParser;",
    "/**\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\n *\n * @see away.projections.PerspectiveLens#coordinateSystem\n */\nclass CoordinateSystem\n{\n\t/**\n\t * Default option, projects to a left-handed coordinate system\n\t */\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\n\n\t/**\n\t * Projects to a right-handed coordinate system\n\t */\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\n}\n\nexport = CoordinateSystem;",
    "import PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass FreeMatrixProjection extends ProjectionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._pNear = value;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._pFar = value;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._pAspectRatio = value;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.pInvalidateMatrix();\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = FreeMatrixProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass ObliqueNearPlaneProjection extends ProjectionBase\n{\n\n\tprivate _baseProjection:IProjection;\n\tprivate _plane:Plane3D;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\n\t{\n\t\tsuper();\n\t\tthis.baseProjection = baseProjection;\n\t\tthis.plane = plane;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\t}\n\n\t//@override\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._baseProjection.frustumCorners;\n\t}\n\n\t//@override\n\tpublic get near():number\n\t{\n\t\treturn this._baseProjection.near;\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._baseProjection.near = value;\n\t}\n\n\t//@override\n\tpublic get far():number\n\t{\n\t\treturn this._baseProjection.far;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._baseProjection.far = value;\n\t}\n\n\t//@override\n\tpublic get iAspectRatio():number\n\t{\n\t\treturn this._baseProjection._iAspectRatio;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._baseProjection._iAspectRatio = value;\n\t}\n\n\tpublic get plane():Plane3D\n\t{\n\t\treturn this._plane;\n\t}\n\n\tpublic set plane(value:Plane3D)\n\t{\n\t\tthis._plane = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic set baseProjection(value:IProjection)\n\t{\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis._baseProjection = value;\n\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\n\n\t\tvar cx:number = this._plane.a;\n\t\tvar cy:number = this._plane.b;\n\t\tvar cz:number = this._plane.c;\n\t\tvar cw:number = -this._plane.d + .05;\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\n\t\tinverse.invert();\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\t\tthis._pMatrix.copyRowTo(3, p);\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n}\n\nexport = ObliqueNearPlaneProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicOffCenterProjection extends ProjectionBase\n{\n\n\tprivate _minX:number;\n\tprivate _maxX:number;\n\tprivate _minY:number;\n\tprivate _maxY:number;\n\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\n\t{\n\t\tsuper();\n\t\tthis._minX = minX;\n\t\tthis._maxX = maxX;\n\t\tthis._minY = minY;\n\t\tthis._maxY = maxY;\n\t}\n\n\tpublic get minX():number\n\t{\n\t\treturn this._minX;\n\t}\n\n\tpublic set minX(value:number)\n\t{\n\t\tthis._minX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxX():number\n\t{\n\t\treturn this._maxX;\n\t}\n\n\tpublic set maxX(value:number)\n\t{\n\t\tthis._maxX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get minY():number\n\t{\n\t\treturn this._minY;\n\t}\n\n\tpublic set minY(value:number)\n\t{\n\t\tthis._minY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxY():number\n\t{\n\t\treturn this._maxY;\n\t}\n\n\tpublic set maxY(value:number)\n\t{\n\t\tthis._maxY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar w:number = 1/(this._maxX - this._minX);\n\t\tvar h:number = 1/(this._maxY - this._minY);\n\t\tvar d:number = 1/(this._pFar - this._pNear);\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(this._maxX + this._minX)*w;\n\t\traw[13] = -(this._maxY + this._minY)*h;\n\t\traw[14] = -this._pNear*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = OrthographicOffCenterProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicProjection extends ProjectionBase\n{\n\n\tprivate _projectionHeight:number;\n\tprivate _xMax:number;\n\tprivate _yMax:number;\n\n\tconstructor(projectionHeight:number = 500)\n\t{\n\t\tsuper();\n\t\tthis._projectionHeight = projectionHeight;\n\t}\n\n\tpublic get projectionHeight():number\n\t{\n\t\treturn this._projectionHeight;\n\t}\n\n\tpublic set projectionHeight(value:number)\n\t{\n\t\tif (value == this._projectionHeight) {\n\t\t\treturn;\n\t\t}\n\t\tthis._projectionHeight = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.projectionHeight = this._projectionHeight;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tthis._yMax = this._projectionHeight*.5;\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\n\t\t\t// assume symmetric frustum\n\n\t\t\tleft = -this._xMax;\n\t\t\tright = this._xMax;\n\t\t\ttop = -this._yMax;\n\t\t\tbottom = this._yMax;\n\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\n\t\t\traw[5] = 2/this._projectionHeight;\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\n\t\t\traw[15] = 1;\n\n\t\t} else {\n\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\n\n\t\t\tleft = center - xWidth;\n\t\t\tright = center + xWidth;\n\t\t\ttop = middle - yHgt;\n\t\t\tbottom = middle + yHgt;\n\n\t\t\traw[0] = 2*1/(right - left);\n\t\t\traw[5] = -2*1/(top - bottom);\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\n\t\t\traw[12] = (right + left)/(right - left);\n\t\t\traw[13] = (bottom + top)/(bottom - top);\n\t\t\traw[14] = this._pNear/(this.near - this.far);\n\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\t\traw[15] = 1;\n\t\t}\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport= OrthographicProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport CoordinateSystem\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass PerspectiveProjection extends ProjectionBase\n{\n\tprivate _fieldOfView:number = 60;\n\tprivate _focalLength:number = 1000;\n\tprivate _hFieldOfView:number = 60;\n\tprivate _hFocalLength:number = 1000;\n\tprivate _preserveAspectRatio:boolean = true;\n\tprivate _preserveFocalLength:boolean = false;\n\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper(coordinateSystem);\n\t\tthis.fieldOfView = fieldOfView;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveAspectRatio():boolean\n\t{\n\t\treturn this._preserveAspectRatio;\n\t}\n\n\tpublic set preserveAspectRatio(value:boolean)\n\t{\n\t\tif (this._preserveAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._preserveAspectRatio = value;\n\n\t\tif (this._preserveAspectRatio)\n\t\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveFocalLength():boolean\n\t{\n\t\treturn this._preserveFocalLength;\n\t}\n\n\tpublic set preserveFocalLength(value:boolean)\n\t{\n\t\tif (this._preserveFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._preserveFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get fieldOfView():number\n\t{\n\t\treturn this._fieldOfView;\n\t}\n\n\tpublic set fieldOfView(value:number)\n\t{\n\t\tif (this._fieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._fieldOfView = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get focalLength():number\n\t{\n\t\treturn this._focalLength;\n\t}\n\n\tpublic set focalLength(value:number)\n\t{\n\t\tif (this._focalLength == value)\n\t\t\treturn;\n\n\t\tthis._focalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFieldOfView():number\n\t{\n\t\treturn this._hFieldOfView;\n\t}\n\n\tpublic set hFieldOfView(value:number)\n\t{\n\t\tif (this._hFieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._hFieldOfView = value;\n\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFocalLength():number\n\t{\n\t\treturn this._hFocalLength;\n\t}\n\n\tpublic set hFocalLength(value:number)\n\t{\n\t\tif (this._hFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._hFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\n\t\tv.x *= sZ;\n\t\tv.y *= sZ;\n\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tif (this._preserveFocalLength) {\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\n\t\t} else {\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\n\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\t\t\telse\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\n\t\t}\n\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\t// assume scissored frustum\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\n\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\n\t\tright = center;\n\t\ttop = middle;\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\n\n\t\traw[0] = 2/(right - left);\n\t\traw[5] = 2/(bottom - top);\n\t\traw[8] = (right + left)/(right - left);\n\t\traw[9] = (bottom + top)/(bottom - top);\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\n\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\n\t\t\traw[5] = -raw[5];\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\n\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\n\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\n\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionBase extends EventDispatcher implements IProjection\n{\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\tpublic _pViewPort:Rectangle = new Rectangle();\n\tpublic _pNear:number = 20;\n\tpublic _pFar:number = 3000;\n\tpublic _pAspectRatio:number = 1;\n\n\tpublic _pMatrixInvalid:boolean = true;\n\tpublic _pFrustumCorners:number[] = [];\n\tpublic _pCoordinateSystem:string;\n\tpublic _pOriginX:number = 0.5;\n\tpublic _pOriginY:number = 0.5;\n\n\tprivate _unprojection:Matrix3D;\n\tprivate _unprojectionInvalid:boolean = true;\n\n\tconstructor(coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper();\n\n\t\tthis.coordinateSystem = coordinateSystem;\n\t}\n\n\t/**\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\n\t */\n\tpublic get coordinateSystem():string\n\t{\n\t\treturn this._pCoordinateSystem;\n\t}\n\n\tpublic set coordinateSystem(value:string)\n\t{\n\t\tif (this._pCoordinateSystem == value)\n\t\t\treturn;\n\n\t\tthis._pCoordinateSystem = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._pFrustumCorners;\n\t}\n\n\tpublic set frustumCorners(frustumCorners:number[])\n\t{\n\t\tthis._pFrustumCorners = frustumCorners;\n\t}\n\n\tpublic get matrix():Matrix3D\n\t{\n\t\tif (this._pMatrixInvalid) {\n\t\t\tthis.pUpdateMatrix();\n\t\t\tthis._pMatrixInvalid = false;\n\t\t}\n\t\treturn this._pMatrix;\n\t}\n\n\tpublic set matrix(value:Matrix3D)\n\t{\n\t\tthis._pMatrix = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get near():number\n\t{\n\t\treturn this._pNear;\n\t}\n\n\tpublic set near(value:number)\n\t{\n\t\tif (value == this._pNear) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pNear = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get originX():number\n\t{\n\t\treturn this._pOriginX;\n\t}\n\n\tpublic set originX(value:number)\n\t{\n\t\tif (this._pOriginX == value)\n\t\t\treturn;\n\n\t\tthis._pOriginX = value;\n\t}\n\n\tpublic get originY():number\n\t{\n\t\treturn this._pOriginY;\n\t}\n\n\tpublic set originY(value:number)\n\t{\n\t\tif (this._pOriginY == value)\n\t\t\treturn;\n\n\t\tthis._pOriginY = value;\n\t}\n\n\tpublic get far():number\n\t{\n\t\treturn this._pFar;\n\t}\n\n\tpublic set far(value:number)\n\t{\n\t\tif (value == this._pFar) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pFar = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\n\t\tv.x = v.x/v.w;\n\t\tv.y = -v.y/v.w;\n\n\t\t//z is unaffected by transform\n\t\tv.z = point3d.z;\n\n\t\treturn v;\n\t}\n\n\tpublic get unprojectionMatrix():Matrix3D\n\t{\n\t\tif (this._unprojectionInvalid) {\n\t\t\tif (!this._unprojection)\n\t\t\t\tthis._unprojection = new Matrix3D();\n\n\t\t\tthis._unprojection.copyFrom(this.matrix);\n\t\t\tthis._unprojection.invert();\n\t\t\tthis._unprojectionInvalid = false;\n\t\t}\n\t\treturn this._unprojection;\n\t}\n\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():ProjectionBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iAspectRatio():number\n\t{\n\t\treturn this._pAspectRatio;\n\t}\n\n\tpublic set _iAspectRatio(value:number)\n\t{\n\t\tif (this._pAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._pAspectRatio = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic pInvalidateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = true;\n\t\tthis._unprojectionInvalid = true;\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\n\t}\n\n\tpublic pUpdateMatrix()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pScissorRect.x = x;\n\t\tthis._pScissorRect.y = y;\n\t\tthis._pScissorRect.width = width;\n\t\tthis._pScissorRect.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pViewPort.x = x;\n\t\tthis._pViewPort.y = y;\n\t\tthis._pViewPort.width = width;\n\t\tthis._pViewPort.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n}\n\nexport = ProjectionBase;",
    "class Keyboard\n{\n\t/**\n\t * Constant associated with the key code value for the A key (65).\n\t */\n\tpublic static A:number /*uint*/ = 65;\n\n\t/**\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\n\t */\n\tpublic static ALTERNATE:number /*uint*/ = 18;\n\n\t/**\n\t * Select the audio mode\n\t */\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\n\n\t/**\n\t * Constant associated with the key code value for the B key (66).\n\t */\n\tpublic static B:number /*uint*/ = 66;\n\n\t/**\n\t * Return to previous page in application\n\t */\n\tpublic static BACK:number /*uint*/ = 0x01000016;\n\n\t/**\n\t * Constant associated with the key code value for the ` key (192).\n\t */\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\n\n\t/**\n\t * Constant associated with the key code value for the \\ key (220).\n\t */\n\tpublic static BACKSLASH:number /*uint*/ = 220;\n\n\t/**\n\t * Constant associated with the key code value for the Backspace key (8).\n\t */\n\tpublic static BACKSPACE:number /*uint*/ = 8;\n\n\t/**\n\t * Blue function key button\n\t */\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\n\n\t/**\n\t * Constant associated with the key code value for the C key (67).\n\t */\n\tpublic static C:number /*uint*/ = 67;\n\n\t/**\n\t * Constant associated with the key code value for the Caps Lock key (20).\n\t */\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\n\n\t/**\n\t * Channel down\n\t */\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Channel up\n\t */\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Constant associated with the key code value for the , key (188).\n\t */\n\tpublic static COMMA:number /*uint*/ = 188;\n\n\t/**\n\t * Constant associated with the Mac command key (15). This constant is\n\t * currently only used for setting menu key equivalents.\n\t */\n\tpublic static COMMAND:number /*uint*/ = 15;\n\n\t/**\n\t * Constant associated with the key code value for the Control key (17).\n\t */\n\tpublic static CONTROL:number /*uint*/ = 17;\n\n\t/**\n\t * An array containing all the defined key name constants.\n\t */\n\tpublic static CharCodeStrings:Array<any>;\n\n\t/**\n\t * Constant associated with the key code value for the D key (68).\n\t */\n\tpublic static D:number /*uint*/ = 68;\n\n\t/**\n\t * Constant associated with the key code value for the Delete key (46).\n\t */\n\tpublic static DELETE:number /*uint*/ = 46;\n\n\t/**\n\t * Constant associated with the key code value for the Down Arrow key (40).\n\t */\n\tpublic static DOWN:number /*uint*/ = 40;\n\n\t/**\n\t * Engage DVR application mode\n\t */\n\tpublic static DVR:number /*uint*/ = 0x01000019;\n\n\t/**\n\t * Constant associated with the key code value for the E key (69).\n\t */\n\tpublic static E:number /*uint*/ = 69;\n\n\t/**\n\t * Constant associated with the key code value for the End key (35).\n\t */\n\tpublic static END:number /*uint*/ = 35;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key (13).\n\t */\n\tpublic static ENTER:number /*uint*/ = 13;\n\n\t/**\n\t * Constant associated with the key code value for the = key (187).\n\t */\n\tpublic static EQUAL:number /*uint*/ = 187;\n\n\t/**\n\t * Constant associated with the key code value for the Escape key (27).\n\t */\n\tpublic static ESCAPE:number /*uint*/ = 27;\n\n\t/**\n\t * Exits current application mode\n\t */\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\n\n\t/**\n\t * Constant associated with the key code value for the F key (70).\n\t */\n\tpublic static F:number /*uint*/ = 70;\n\n\t/**\n\t * Constant associated with the key code value for the F1 key (112).\n\t */\n\tpublic static F1:number /*uint*/ = 112;\n\n\t/**\n\t * Constant associated with the key code value for the F10 key (121).\n\t */\n\tpublic static F10:number /*uint*/ = 121;\n\n\t/**\n\t * Constant associated with the key code value for the F11 key (122).\n\t */\n\tpublic static F11:number /*uint*/ = 122;\n\n\t/**\n\t * Constant associated with the key code value for the F12 key (123).\n\t */\n\tpublic static F12:number /*uint*/ = 123;\n\n\t/**\n\t * Constant associated with the key code value for the F13 key (124).\n\t */\n\tpublic static F13:number /*uint*/ = 124;\n\n\t/**\n\t * Constant associated with the key code value for the F14 key (125).\n\t */\n\tpublic static F14:number /*uint*/ = 125;\n\n\t/**\n\t * Constant associated with the key code value for the F15 key (126).\n\t */\n\tpublic static F15:number /*uint*/ = 126;\n\n\t/**\n\t * Constant associated with the key code value for the F2 key (113).\n\t */\n\tpublic static F2:number /*uint*/ = 113;\n\n\t/**\n\t * Constant associated with the key code value for the F3 key (114).\n\t */\n\tpublic static F3:number /*uint*/ = 114;\n\n\t/**\n\t * Constant associated with the key code value for the F4 key (115).\n\t */\n\tpublic static F4:number /*uint*/ = 115;\n\n\t/**\n\t * Constant associated with the key code value for the F5 key (116).\n\t */\n\tpublic static F5:number /*uint*/ = 116;\n\n\t/**\n\t * Constant associated with the key code value for the F6 key (117).\n\t */\n\tpublic static F6:number /*uint*/ = 117;\n\n\t/**\n\t * Constant associated with the key code value for the F7 key (118).\n\t */\n\tpublic static F7:number /*uint*/ = 118;\n\n\t/**\n\t * Constant associated with the key code value for the F8 key (119).\n\t */\n\tpublic static F8:number /*uint*/ = 119;\n\n\t/**\n\t * Constant associated with the key code value for the F9 key (120).\n\t */\n\tpublic static F9:number /*uint*/ = 120;\n\n\t/**\n\t * Engage fast-forward transport mode\n\t */\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\n\n\t/**\n\t * Constant associated with the key code value for the G key (71).\n\t */\n\tpublic static G:number /*uint*/ = 71;\n\n\t/**\n\t * Green function key button\n\t */\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\n\n\t/**\n\t * Engage program guide\n\t */\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\n\n\t/**\n\t * Constant associated with the key code value for the H key (72).\n\t */\n\tpublic static H:number /*uint*/ = 72;\n\n\t/**\n\t * Engage help application or context-sensitive help\n\t */\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\n\n\t/**\n\t * Constant associated with the key code value for the Home key (36).\n\t */\n\tpublic static HOME:number /*uint*/ = 36;\n\n\t/**\n\t * Constant associated with the key code value for the I key (73).\n\t */\n\tpublic static I:number /*uint*/ = 73;\n\n\t/**\n\t * Info button\n\t */\n\tpublic static INFO:number /*uint*/ = 0x01000013;\n\n\t/**\n\t * Cycle input\n\t */\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\n\n\t/**\n\t * Constant associated with the key code value for the Insert key (45).\n\t */\n\tpublic static INSERT:number /*uint*/ = 45;\n\n\t/**\n\t * Constant associated with the key code value for the J key (74).\n\t */\n\tpublic static J:number /*uint*/ = 74;\n\n\t/**\n\t * Constant associated with the key code value for the K key (75).\n\t */\n\tpublic static K:number /*uint*/ = 75;\n\n\t/**\n\t * The Begin key\n\t */\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\n\n\t/**\n\t * The Break key\n\t */\n\tpublic static KEYNAME_BREAK:string = \"Break\";\n\n\t/**\n\t * The Clear Display key\n\t */\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\n\n\t/**\n\t * The Clear Line key\n\t */\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\n\n\t/**\n\t * The Delete key\n\t */\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\n\n\t/**\n\t * The Delete Character key\n\t */\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\n\n\t/**\n\t * The Delete Line key\n\t */\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\n\n\t/**\n\t * The down arrow\n\t */\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\n\n\t/**\n\t * The End key\n\t */\n\tpublic static KEYNAME_END:string = \"End\";\n\n\t/**\n\t * The Execute key\n\t */\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\n\n\t/**\n\t * The F1 key\n\t */\n\tpublic static KEYNAME_F1:string = \"F1\";\n\n\t/**\n\t * The F10 key\n\t */\n\tpublic static KEYNAME_F10:string = \"F10\";\n\n\t/**\n\t * The F11 key\n\t */\n\tpublic static KEYNAME_F11:string = \"F11\";\n\n\t/**\n\t * The F12 key\n\t */\n\tpublic static KEYNAME_F12:string = \"F12\";\n\n\t/**\n\t * The F13 key\n\t */\n\tpublic static KEYNAME_F13:string = \"F13\";\n\n\t/**\n\t * The F14 key\n\t */\n\tpublic static KEYNAME_F14:string = \"F14\";\n\n\t/**\n\t * The F15 key\n\t */\n\tpublic static KEYNAME_F15:string = \"F15\";\n\n\t/**\n\t * The F16 key\n\t */\n\tpublic static KEYNAME_F16:string = \"F16\";\n\n\t/**\n\t * The F17 key\n\t */\n\tpublic static KEYNAME_F17:string = \"F17\";\n\n\t/**\n\t * The F18 key\n\t */\n\tpublic static KEYNAME_F18:string = \"F18\";\n\n\t/**\n\t * The F19 key\n\t */\n\tpublic static KEYNAME_F19:string = \"F19\";\n\n\t/**\n\t * The F2 key\n\t */\n\tpublic static KEYNAME_F2:string = \"F2\";\n\n\t/**\n\t * The F20 key\n\t */\n\tpublic static KEYNAME_F20:string = \"F20\";\n\n\t/**\n\t * The F21 key\n\t */\n\tpublic static KEYNAME_F21:string = \"F21\";\n\n\t/**\n\t * The F22 key\n\t */\n\tpublic static KEYNAME_F22:string = \"F22\";\n\n\t/**\n\t * The F23 key\n\t */\n\tpublic static KEYNAME_F23:string = \"F23\";\n\n\t/**\n\t * The F24 key\n\t */\n\tpublic static KEYNAME_F24:string = \"F24\";\n\n\t/**\n\t * The F25 key\n\t */\n\tpublic static KEYNAME_F25:string = \"F25\";\n\n\t/**\n\t * The F26 key\n\t */\n\tpublic static KEYNAME_F26:string = \"F26\";\n\n\t/**\n\t * The F27 key\n\t */\n\tpublic static KEYNAME_F27:string = \"F27\";\n\n\t/**\n\t * The F28 key\n\t */\n\tpublic static KEYNAME_F28:string = \"F28\";\n\n\t/**\n\t * The F29 key\n\t */\n\tpublic static KEYNAME_F29:string = \"F29\";\n\n\t/**\n\t * The F3 key\n\t */\n\tpublic static KEYNAME_F3:string = \"F3\";\n\n\t/**\n\t * The F30 key\n\t */\n\tpublic static KEYNAME_F30:string = \"F30\";\n\n\t/**\n\t * The F31 key\n\t */\n\tpublic static KEYNAME_F31:string = \"F31\";\n\n\t/**\n\t * The F32 key\n\t */\n\tpublic static KEYNAME_F32:string = \"F32\";\n\n\t/**\n\t * The F33 key\n\t */\n\tpublic static KEYNAME_F33:string = \"F33\";\n\n\t/**\n\t * The F34 key\n\t */\n\tpublic static KEYNAME_F34:string = \"F34\";\n\n\t/**\n\t * The F35 key\n\t */\n\tpublic static KEYNAME_F35:string = \"F35\";\n\n\t/**\n\t * The F4 key\n\t */\n\tpublic static KEYNAME_F4:string = \"F4\";\n\n\t/**\n\t * The F5 key\n\t */\n\tpublic static KEYNAME_F5:string = \"F5\";\n\n\t/**\n\t * The F6 key\n\t */\n\tpublic static KEYNAME_F6:string = \"F6\";\n\n\t/**\n\t * The F7 key\n\t */\n\tpublic static KEYNAME_F7:string = \"F7\";\n\n\t/**\n\t * The F8 key\n\t */\n\tpublic static KEYNAME_F8:string = \"F8\";\n\n\t/**\n\t * The F9 key\n\t */\n\tpublic static KEYNAME_F9:string = \"F9\";\n\n\t/**\n\t * The Find key\n\t */\n\tpublic static KEYNAME_FIND:string = \"Find\";\n\n\t/**\n\t * The Help key\n\t */\n\tpublic static KEYNAME_HELP:string = \"Help\";\n\n\t/**\n\t * The Home key\n\t */\n\tpublic static KEYNAME_HOME:string = \"Home\";\n\n\t/**\n\t * The Insert key\n\t */\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\n\n\t/**\n\t * The Insert Character key\n\t */\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\n\n\t/**\n\t * The Insert Line key\n\t */\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\n\n\t/**\n\t * The left arrow\n\t */\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\n\n\t/**\n\t * The Menu key\n\t */\n\tpublic static KEYNAME_MENU:string = \"Menu\";\n\n\t/**\n\t * The Mode Switch key\n\t */\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\n\n\t/**\n\t * The Next key\n\t */\n\tpublic static KEYNAME_NEXT:string = \"Next\";\n\n\t/**\n\t * The Page Down key\n\t */\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\n\n\t/**\n\t * The Page Up key\n\t */\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\n\n\t/**\n\t * The Pause key\n\t */\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\n\n\t/**\n\t * The Previous key\n\t */\n\tpublic static KEYNAME_PREV:string = \"Prev\";\n\n\t/**\n\t * The PRINT key\n\t */\n\tpublic static KEYNAME_PRINT:string = \"Print\";\n\n\t/**\n\t * The PRINT Screen\n\t */\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\n\n\t/**\n\t * The Redo key\n\t */\n\tpublic static KEYNAME_REDO:string = \"Redo\";\n\n\t/**\n\t * The Reset key\n\t */\n\tpublic static KEYNAME_RESET:string = \"Reset\";\n\n\t/**\n\t * The right arrow\n\t */\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\n\n\t/**\n\t * The Scroll Lock key\n\t */\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\n\n\t/**\n\t * The Select key\n\t */\n\tpublic static KEYNAME_SELECT:string = \"Select\";\n\n\t/**\n\t * The Stop key\n\t */\n\tpublic static KEYNAME_STOP:string = \"Stop\";\n\n\t/**\n\t * The System Request key\n\t */\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\n\n\t/**\n\t * The System key\n\t */\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\n\n\t/**\n\t * The Undo key\n\t */\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\n\n\t/**\n\t * The up arrow\n\t */\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\n\n\t/**\n\t * The User key\n\t */\n\tpublic static KEYNAME_USER:string = \"User\";\n\n\t/**\n\t * Constant associated with the key code value for the L key (76).\n\t */\n\tpublic static L:number /*uint*/ = 76;\n\n\t/**\n\t * Watch last channel or show watched\n\t */\n\tpublic static LAST:number /*uint*/ = 0x01000011;\n\n\t/**\n\t * Constant associated with the key code value for the Left Arrow key (37).\n\t */\n\tpublic static LEFT:number /*uint*/ = 37;\n\n\t/**\n\t * Constant associated with the key code value for the [ key (219).\n\t */\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\n\n\t/**\n\t * Return to live [position in broadcast]\n\t */\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\n\n\t/**\n\t * Constant associated with the key code value for the M key (77).\n\t */\n\tpublic static M:number /*uint*/ = 77;\n\n\t/**\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\n\t */\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\n\n\t/**\n\t * Engage menu\n\t */\n\tpublic static MENU:number /*uint*/ = 0x01000012;\n\n\t/**\n\t * Constant associated with the key code value for the - key (189).\n\t */\n\tpublic static MINUS:number /*uint*/ = 189;\n\n\t/**\n\t * Constant associated with the key code value for the N key (78).\n\t */\n\tpublic static N:number /*uint*/ = 78;\n\n\t/**\n\t * Skip to next track or chapter\n\t */\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\n\n\t/**\n\t * Constant associated with the key code value for the 0 key (48).\n\t */\n\tpublic static NUMBER_0:number /*uint*/ = 48;\n\n\t/**\n\t * Constant associated with the key code value for the 1 key (49).\n\t */\n\tpublic static NUMBER_1:number /*uint*/ = 49;\n\n\t/**\n\t * Constant associated with the key code value for the 2 key (50).\n\t */\n\tpublic static NUMBER_2:number /*uint*/ = 50;\n\n\t/**\n\t * Constant associated with the key code value for the 3 key (51).\n\t */\n\tpublic static NUMBER_3:number /*uint*/ = 51;\n\n\t/**\n\t * Constant associated with the key code value for the 4 key (52).\n\t */\n\tpublic static NUMBER_4:number /*uint*/ = 52;\n\n\t/**\n\t * Constant associated with the key code value for the 5 key (53).\n\t */\n\tpublic static NUMBER_5:number /*uint*/ = 53;\n\n\t/**\n\t * Constant associated with the key code value for the 6 key (54).\n\t */\n\tpublic static NUMBER_6:number /*uint*/ = 54;\n\n\t/**\n\t * Constant associated with the key code value for the 7 key (55).\n\t */\n\tpublic static NUMBER_7:number /*uint*/ = 55;\n\n\t/**\n\t * Constant associated with the key code value for the 8 key (56).\n\t */\n\tpublic static NUMBER_8:number /*uint*/ = 56;\n\n\t/**\n\t * Constant associated with the key code value for the 9 key (57).\n\t */\n\tpublic static NUMBER_9:number /*uint*/ = 57;\n\n\t/**\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\n\t */\n\tpublic static NUMPAD:number /*uint*/ = 21;\n\n\t/**\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\n\t */\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\n\n\t/**\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\n\t */\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\n\n\t/**\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\n\t */\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\n\n\t/**\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\n\t */\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\n\n\t/**\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\n\t */\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\n\n\t/**\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\n\t */\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\n\n\t/**\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\n\t */\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\n\n\t/**\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\n\t */\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\n\n\t/**\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\n\t */\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\n\n\t/**\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\n\t */\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\n\n\t/**\n\t * Constant associated with the key code value for the addition key on the number pad (107).\n\t */\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\n\n\t/**\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\n\t */\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\n\n\t/**\n\t * Constant associated with the key code value for the division key on the number pad (111).\n\t */\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\n\t */\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\n\n\t/**\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\n\t */\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\n\n\t/**\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\n\t */\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\n\n\t/**\n\t * Constant associated with the key code value for the O key (79).\n\t */\n\tpublic static O:number /*uint*/ = 79;\n\n\t/**\n\t * Constant associated with the key code value for the P key (80).\n\t */\n\tpublic static P:number /*uint*/ = 80;\n\n\t/**\n\t * Constant associated with the key code value for the Page Down key (34).\n\t */\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\n\n\t/**\n\t * Constant associated with the key code value for the Page Up key (33).\n\t */\n\tpublic static PAGE_UP:number /*uint*/ = 33;\n\n\t/**\n\t * Engage pause transport mode\n\t */\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\n\n\t/**\n\t * Constant associated with the key code value for the . key (190).\n\t */\n\tpublic static PERIOD:number /*uint*/ = 190;\n\n\t/**\n\t * Engage play transport mode\n\t */\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\n\n\t/**\n\t * Skip to previous track or chapter\n\t */\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\n\n\t/**\n\t * Constant associated with the key code value for the Q key (81).\n\t */\n\tpublic static Q:number /*uint*/ = 81;\n\n\t/**\n\t * Constant associated with the key code value for the ' key (222).\n\t */\n\tpublic static QUOTE:number /*uint*/ = 222;\n\n\t/**\n\t * Constant associated with the key code value for the R key (82).\n\t */\n\tpublic static R:number /*uint*/ = 82;\n\n\t/**\n\t * Record item or engage record transport mode\n\t */\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\n\n\t/**\n\t * Red function key button\n\t */\n\tpublic static RED:number /*uint*/ = 0x01000000;\n\n\t/**\n\t * Engage rewind transport mode\n\t */\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\n\n\t/**\n\t * Constant associated with the key code value for the Right Arrow key (39).\n\t */\n\tpublic static RIGHT:number /*uint*/ = 39;\n\n\t/**\n\t * Constant associated with the key code value for the ] key (221).\n\t */\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\n\n\t/**\n\t * Constant associated with the key code value for the S key (83).\n\t */\n\tpublic static S:number /*uint*/ = 83;\n\n\t/**\n\t * Search button\n\t */\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\n\n\t/**\n\t * Constant associated with the key code value for the ; key (186).\n\t */\n\tpublic static SEMICOLON:number /*uint*/ = 186;\n\n\t/**\n\t * Engage setup application or menu\n\t */\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\n\n\t/**\n\t * Constant associated with the key code value for the Shift key (16).\n\t */\n\tpublic static SHIFT:number /*uint*/ = 16;\n\n\t/**\n\t * Quick skip backward (usually 7-10 seconds)\n\t */\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\n\n\t/**\n\t * Quick skip ahead (usually 30 seconds)\n\t */\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\n\n\t/**\n\t * Constant associated with the key code value for the / key (191).\n\t */\n\tpublic static SLASH:number /*uint*/ = 191;\n\n\t/**\n\t * Constant associated with the key code value for the Spacebar (32).\n\t */\n\tpublic static SPACE:number /*uint*/ = 32;\n\n\t/**\n\t * Engage stop transport mode\n\t */\n\tpublic static STOP:number /*uint*/ = 0x01000009;\n\n\t/**\n\t * Toggle subtitles\n\t */\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\n\n\t/**\n\t * Constant associated with the key code value for the T key (84).\n\t */\n\tpublic static T:number /*uint*/ = 84;\n\n\t/**\n\t * Constant associated with the key code value for the Tab key (9).\n\t */\n\tpublic static TAB:number /*uint*/ = 9;\n\n\t/**\n\t * Constant associated with the key code value for the U key (85).\n\t */\n\tpublic static U:number /*uint*/ = 85;\n\n\t/**\n\t * Constant associated with the key code value for the Up Arrow key (38).\n\t */\n\tpublic static UP:number /*uint*/ = 38;\n\n\t/**\n\t * Constant associated with the key code value for the V key (86).\n\t */\n\tpublic static V:number /*uint*/ = 86;\n\n\t/**\n\t * Engage video-on-demand\n\t */\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\n\n\t/**\n\t * Constant associated with the key code value for the W key (87).\n\t */\n\tpublic static W:number /*uint*/ = 87;\n\n\t/**\n\t * Constant associated with the key code value for the X key (88).\n\t */\n\tpublic static X:number /*uint*/ = 88;\n\n\t/**\n\t * Constant associated with the key code value for the Y key (89).\n\t */\n\tpublic static Y:number /*uint*/ = 89;\n\n\t/**\n\t * Yellow function key button\n\t */\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\n\n\t/**\n\t * Constant associated with the key code value for the Z key (90).\n\t */\n\tpublic static Z:number /*uint*/ = 90;\n\n}\n\nexport = Keyboard;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\nclass BitmapImageUtils\n{\n\tpublic static _fillRect(context:CanvasRenderingContext2D, rect:Rectangle, color:number, transparent:boolean)\n\t{\n\t\tif (color == 0x0 && transparent) {\n\t\t\tcontext.clearRect(rect.x, rect.y, rect.width, rect.height);\n\t\t} else {\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\t\tif (transparent)\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\n\t\t\telse\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\n\n\t\t\tcontext.fillRect(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\t}\n\n\tpublic static _copyPixels(context:CanvasRenderingContext2D, bmpd:HTMLElement, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tcontext.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t}\n\n\tpublic static _draw(context:CanvasRenderingContext2D, source:any, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean)\n\t{\n\t\tcontext.save();\n\n\t\tif (matrix != null)\n\t\t\tcontext.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\n\t\tif (clipRect != null)\n\t\t\tcontext.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\n\t\telse\n\t\t\tcontext.drawImage(source, 0, 0);\n\n\t\tcontext.restore();\n\t}\n}\n\nexport = BitmapImageUtils;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nclass ByteArrayBase\n{\n\tpublic position:number = 0;\n\tpublic length:number = 0;\n\tpublic _mode:string = \"\";\n\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\n\t}\n\n\tpublic compareEqual(other, count)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (count > other.length - other.position)\n\t\t\tcount = other.length - other.position;\n\t\tvar co0 = count;\n\t\tvar r = true;\n\t\twhile (r && count >= 4) {\n\t\t\tcount -= 4;\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\n\t\t}\n\t\twhile (r && count >= 1) {\n\t\t\tcount--;\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\n\t\t}\n\t\tvar c0;\n\t\tthis.position -= (c0 - count);\n\t\tother.position -= (c0 - count);\n\t\treturn r;\n\t}\n\n\tpublic writeBase64String(s:string)\n\t{\n\t\tfor (var i:number = 0; i < s.length; i++) {\n\t\t\tvar v = s.charAt(i);\n\t\t}\n\t}\n\n\tpublic dumpToConsole()\n\t{\n\t\tvar oldpos = this.position;\n\t\tthis.position = 0;\n\t\tvar nstep:number = 8;\n\n\t\tfunction asHexString(x, digits)\n\t\t{\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\n\t\t\tvar sh:string = \"\";\n\t\t\tfor (var d:number = 0; d < digits; d++) {\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\n\t\t\t}\n\t\t\treturn sh;\n\t\t}\n\n\t\tfor (var i = 0; i < this.length; i += nstep) {\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\n\t\t\t}\n\t\t\tconsole.log(s);\n\t\t}\n\t\tthis.position = oldpos;\n\t}\n\n\tpublic readBase64String(count:number)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (!(count > 0)) return \"\";\n\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\n\t}\n\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self)\n\t{ // return base64 string of the next count bytes\n\t\tvar r = \"\";\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\n\t\tvar base64Key = ByteArrayBase.Base64Key;\n\t\twhile (count >= 3) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\n\t\t\tenc4 = b2 & 63;\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\n\t\t\tcount -= 3;\n\t\t}\n\t\t// pad\n\t\tif (count == 2) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\n\t\t} else if (count == 1) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\n\t\t}\n\t\treturn r;\n\t}\n}\n\nexport = ByteArrayBase;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArrayBuffer extends ByteArrayBase\n{\n\n\t/*\n\t public maxlength:number = 0;\n\t public arraybytes; //ArrayBuffer\n\t public unalignedarraybytestemp; //ArrayBuffer\n\t */\n\n\tpublic _bytes:number[];\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._bytes = [];\n\t\tthis._mode = \"Array\";\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[this.position++] = bi & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tif (this.position + 2 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\n\t\tthis.position += 2;\n\t\treturn r;\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tif (this.position + 4 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\n\t\tthis.position += 4;\n\t\treturn r >>> 0;\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\t// this is crazy slow and silly, but as a fallback...\n\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\t// don't handle inf/nan yet\n\t\t// special case zero\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\t// remove the sign, after this we only deal with positive numbers\n\t\tvar sign:number = 0;\n\t\tif (x < 0) {\n\t\t\tx = -x;\n\t\t\tsign = 1;\n\t\t} else {\n\t\t\tsign = 0;\n\t\t}\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\n\t\texponent = Math.floor(exponent);\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\n\t\tvar mantissa = Math.floor(x) - 0x800000;\n\t\texponent = exponent + 127;\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\n\t\tif (x >>> 31 != 0) {\n\t\t\ty = -y;\n\t\t}\n\t\treturn y;\n\t}\n\n\t/*\n\t public ensureWriteableSpace( n:number )\n\t {\n\t this.ensureSpace( n + this.position );\n\t }\n\n\t private ensureSpace( n:number )\n\t {\n\t if ( n > this.maxlength ) {\n\t var newmaxlength:number = (n+255)&(~255);\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t newview.set(view);      // memcpy\n\t this.arraybytes = newarraybuffer;\n\t this.maxlength = newmaxlength;\n\t }\n\t }\n\t */\n}\n\nexport = ByteArrayBuffer;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArray extends ByteArrayBase\n{\n\tpublic maxlength:number;\n\tpublic arraybytes; //ArrayBuffer\n\tpublic unalignedarraybytestemp; //ArrayBuffer\n\n\tconstructor(maxlength:number = 4)\n\t{\n\t\tsuper();\n\t\tthis._mode = \"Typed array\";\n\t\tthis.maxlength = Math.max((maxlength + 255) & (~255), 4);\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\n\t}\n\n\tpublic ensureWriteableSpace(n:number)\n\t{\n\t\tthis.ensureSpace(n + this.position);\n\t}\n\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\n\t{\n\t\tthis.ensureSpace(aBuffer.byteLength);\n\n\t\tthis.length = aBuffer.byteLength;\n\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\n\n\t\tlocalInt8View.set(inInt8AView);\n\n\t\tthis.position = 0;\n\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\treturn ( this.length ) - ( this.position );\n\t}\n\n\tpublic ensureSpace(n:number)\n\t{\n\t\tif (n > this.maxlength) {\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t\t\tnewview.set(view);      // memcpy\n\t\t\tthis.arraybytes = newarraybuffer;\n\t\t\tthis.maxlength = newmaxlength;\n\t\t}\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\n\t\tvar view = new Int8Array(this.arraybytes);\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte()\n\t{\n\t\tif (this.position >= this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view = new Int8Array(this.arraybytes);\n\n\t\treturn view[ this.position++ ];\n\t}\n\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0)\n\t{\n\t\tif (length == null)\n\t\t\tlength = bytes.length;\n\n\t\tbytes.ensureWriteableSpace(offset + length);\n\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\n\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\n\n\t\tthis.position += length;\n\n\t\tif (length + offset > bytes.length)\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUnsignedByte()\n\t{\n\t\tif (this.position >= this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\treturn view[this.position++];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(2);\n\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview2.set(view3);\n\t\t}\n\n\t\tthis.position += 2;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUTFBytes(len:number):string\n\t{\n\t\tvar value:string = \"\";\n\t\tvar max:number = this.position + len;\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\n\t\t// utf8-encode\n\t\twhile (this.position < max) {\n\n\t\t\tvar c:number = data.getUint8(this.position++);\n\n\t\t\tif (c < 0x80) {\n\n\t\t\t\tif (c == 0) break;\n\t\t\t\tvalue += String.fromCharCode(c);\n\n\t\t\t} else if (c < 0xE0) {\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else if (c < 0xF0) {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvar c3 = data.getUint8(this.position++);\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic readInt():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar int:number = data.getInt32(this.position, true);\n\n\t\tthis.position += 4;\n\n\t\treturn int;\n\t}\n\n\tpublic readShort():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar short:number = data.getInt16(this.position, true);\n\n\t\tthis.position += 2;\n\n\t\treturn short;\n\t}\n\n\tpublic readDouble():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar double:number = data.getFloat64(this.position, true);\n\n\t\tthis.position += 8;\n\n\t\treturn double;\n\t}\n\n\tpublic readUnsignedShort()\n\t{\n\t\tif (this.position > this.length + 2)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 1;\n\t\t\tthis.position += 2;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 2;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffffffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUnsignedInt()\n\t{\n\t\tif (this.position > this.length + 4)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = b;\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = b;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readFloat()\n\t{\n\t\tif (this.position > this.length + 4)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tif ((this.position & 3) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tvar pa = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[pa];\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[ 0 ];\n\t\t}\n\t}\n}\n\nexport = ByteArray;",
    "class CSS\n{\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.width = width + \"px\";\n\t\telement.style.height = height + \"px\";\n\t\telement[\"width\"] = width;\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementWidth(element:HTMLElement, width:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.width = width + \"px\";\n\t\telement[\"width\"] = width;\n\t}\n\n\tpublic static setElementHeight(element:HTMLElement, height:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.height = height + \"px\";\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementX(element:HTMLElement, x:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.position = 'absolute';\n\t\telement.style.left = x + \"px\";\n\t}\n\n\tpublic static setElementY(element:HTMLElement, y:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.position = 'absolute';\n\t\telement.style.top = y + \"px\";\n\t}\n\n\tpublic static getElementVisibility(element:HTMLElement):boolean\n\t{\n\t\tif(!element) return false;\n\t\treturn element.style.visibility == 'visible';\n\t}\n\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean)\n\t{\n\t\tif(!element) return;\n\t\tif (visible) {\n\t\t\telement.style.visibility = 'visible';\n\t\t} else {\n\t\t\telement.style.visibility = 'hidden';\n\t\t}\n\t}\n\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number)\n\t{\n\t\tif (element instanceof HTMLCanvasElement) {\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\n\t\t\tcontext.globalAlpha = alpha;\n\t\t}\n\t}\n\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false)\n\t{\n\t\tif(!element) return;\n\t\tif (absolute) {\n\t\t\telement.style.position = \"absolute\";\n\t\t} else {\n\t\t\telement.style.position = \"relative\";\n\t\t}\n\n\t\telement.style.left = x + \"px\";\n\t\telement.style.top = y + \"px\";\n\t}\n}\n\nexport = CSS;",
    "/**\n *\n */\nclass ColorUtils\n{\n\tpublic static float32ColorToARGB(float32Color:number):number[]\n\t{\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24;\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\n\t\tvar b:number = float32Color & 0xff;\n\t\tvar result:number[] = [ a, r , g , b ];\n\n\t\treturn result;\n\t}\n\n\tpublic static ARGBtoFloat32(a:number, r:number, g:number, b:number):number\n\t{\n\t\treturn ((a << 24) | (r << 16) | (g << 8) | b);\n\t}\n\n\tprivate static componentToHex(c:number):string\n\t{\n\t\tvar hex = c.toString(16);\n\t\treturn hex.length == 1? \"0\" + hex : hex;\n\t}\n\n\tpublic static RGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n\n\tpublic static ARGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n}\n\nexport = ColorUtils;",
    "import PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\n\n/**\n *\n */\nclass Debug\n{\n\tpublic static THROW_ERRORS:boolean = true;\n\tpublic static ENABLE_LOG:boolean = true;\n\tpublic static LOG_PI_ERRORS:boolean = true;\n\n\tprivate static keyword:string = null;\n\n\tpublic static breakpoint():void\n\t{\n\t\tDebug['break']();\n\t}\n\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true)\n\t{\n\t\tif (!enable)\n\t\t\tDebug.keyword = null;\n\t\telse\n\t\t\tDebug.keyword = str;\n\t}\n\n\tpublic static throwPIR(clss:string, fnc:string, msg:string)\n\t{\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\n\n\t\tif (Debug.THROW_ERRORS) {\n\t\t\tif (Debug.keyword) {\n\t\t\t\tvar e:string = clss + fnc + msg;\n\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\n\t\t}\n\t}\n\n\tprivate static logPIR(clss:string, fnc:string, msg:string = '')\n\t{\n\t\tif (Debug.LOG_PI_ERRORS)\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\n\t}\n\n\tpublic static log(...args:any[])\n\t{\n\t\tif (Debug.ENABLE_LOG)\n\t\t\tconsole.log(args);\n\t}\n}\n\nexport = Debug;",
    "declare var SIMD:any;\n\n/**\n *\n */\nclass Extensions\n{\n\tpublic static SIMD:boolean = Boolean(typeof(SIMD) !== \"undefined\");\n}\n\nexport = Extensions;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nclass ImageUtils\n{\n\tprivate static MAX_SIZE:number = 2048;\n\n\tpublic static isImage2DValid(image2D:Image2D):boolean\n\t{\n\t\tif (image2D == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image2D.width) && ImageUtils.isDimensionValid(image2D.height);\n\t}\n\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\n\t{\n\t\tif (image == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image.width) && ImageUtils.isDimensionValid(image.height);\n\t}\n\n\tpublic static isDimensionValid(d:number):boolean\n\t{\n\t\treturn d >= 1 && d <= ImageUtils.MAX_SIZE && ImageUtils.isPowerOfTwo(d);\n\t}\n\n\tpublic static isPowerOfTwo(value:number):boolean\n\t{\n\t\treturn value? ((value & -value) == value) : false;\n\t}\n\n\tpublic static getBestPowerOf2(value:number):number\n\t{\n\t\tvar p:number = 1;\n\n\t\twhile (p < value)\n\t\t\tp <<= 1;\n\n\t\tif (p > ImageUtils.MAX_SIZE)\n\t\t\tp = ImageUtils.MAX_SIZE;\n\n\t\treturn p;\n\t}\n}\n\nexport = ImageUtils",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\nclass MipmapGenerator\n{\n\tprivate static _mipMaps = [];\n\tprivate static _mipMapUses = [];\n\n\tprivate static _matrix:Matrix = new Matrix();\n\tprivate static _rect:Rectangle = new Rectangle();\n\tprivate static _source:BitmapImage2D;\n\n\t/**\n\t * Uploads a BitmapImage2D with mip maps to a target Texture object.\n\t * @param source The source to upload.\n\t * @param target The target Texture to upload to.\n\t * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\n\t * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\n\t */\n\tpublic static _generateMipMaps(source:HTMLElement, output?:Array<BitmapImage2D>, alpha?:boolean);\n\tpublic static _generateMipMaps(source:BitmapImage2D, output?:Array<BitmapImage2D>, alpha?:boolean);\n\tpublic static _generateMipMaps(source:any, output?:Array<BitmapImage2D>, alpha:boolean = false)\n\t{\n\t\tvar w:number = source.width;\n\t\tvar h:number = source.height;\n\t\tvar i:number = 0;\n\n\t\tvar mipmap:BitmapImage2D;\n\n\t\tMipmapGenerator._rect.width = w;\n\t\tMipmapGenerator._rect.height = h;\n\n\t\t//use (OR) to create non-square texture mipmaps\n\t\twhile (w >= 1 || h >= 1) {\n\n\t\t\tmipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\n\n\t\t\tif (alpha)\n\t\t\t\tmipmap.fillRect(MipmapGenerator._rect, 0);\n\n\t\t\tMipmapGenerator._matrix.a = MipmapGenerator._rect.width/source.width;\n\t\t\tMipmapGenerator._matrix.d = MipmapGenerator._rect.height/source.height;\n\n\t\t\tmipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\n\n\t\t\tw >>= 1;\n\t\t\th >>= 1;\n\n\t\t\tMipmapGenerator._rect.width = w > 1? w : 1;\n\t\t\tMipmapGenerator._rect.height = h > 1? h : 1;\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate static _getMipmapHolder(mipMapHolder:BitmapImage2D, newW:number, newH:number):BitmapImage2D\n\t{\n\t\tif (mipMapHolder) {\n\t\t\tif (mipMapHolder.width == newW && mipMapHolder.height == newH)\n\t\t\t\treturn mipMapHolder;\n\n\t\t\tMipmapGenerator._freeMipMapHolder(mipMapHolder);\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW]) {\n\t\t\tMipmapGenerator._mipMaps[newW] = [];\n\t\t\tMipmapGenerator._mipMapUses[newW] = [];\n\t\t}\n\n\t\tif (!MipmapGenerator._mipMaps[newW][newH]) {\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapImage2D(newW, newH, true);\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = 1;\n\t\t} else {\n\t\t\tMipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\n\t\t\tmipMapHolder = MipmapGenerator._mipMaps[newW][newH];\n\t\t}\n\n\t\treturn mipMapHolder;\n\t}\n\n\tpublic static _freeMipMapHolder(mipMapHolder:BitmapImage2D)\n\t{\n\t\tvar holderWidth:number = mipMapHolder.width;\n\t\tvar holderHeight:number = mipMapHolder.height;\n\n\t\tif (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\n\t\t\tMipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\n\t\t}\n\t}\n}\n\nexport = MipmapGenerator;",
    "import getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nclass RequestAnimationFrame\n{\n\tprivate _callback:Function;\n\tprivate _callbackContext:Object;\n\tprivate _active:boolean = false;\n\tprivate _rafUpdateFunction:any;\n\tprivate _prevTime:number;\n\tprivate _dt:number;\n\tprivate _currentTime:number;\n\tprivate _argsArray:Array<any> = new Array();\n\tprivate _getTimer:Function;\n\n\tconstructor(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._getTimer = getTimer;\n\n\t\tthis.setCallback(callback, callbackContext);\n\n\t\tthis._rafUpdateFunction = () => {\n\t\t\tif (this._active)\n\t\t\t\tthis._tick();\n\t\t}\n\n\t\tthis._argsArray.push(this._dt);\n\t}\n\n\t// Public\n\n\t/**\n\t *\n\t * @param callback\n\t * @param callbackContext\n\t */\n\tpublic setCallback(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._callback = callback;\n\t\tthis._callbackContext = callbackContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic start()\n\t{\n\t\tthis._prevTime = this._getTimer();\n\t\tthis._active = true;\n\n\t\tif(window) {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\t\t\t} else {\n\t\t\t\tif (window['mozRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\n\t\t\t\telse if (window['webkitRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\n\t\t\t\telse if (window['oRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic stop()\n\t{\n\t\tthis._active = false;\n\t}\n\n\t// Get / Set\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic get active():boolean\n\t{\n\t\treturn this._active;\n\t}\n\n\t// Private\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _tick():void\n\t{\n\t\tthis._currentTime = this._getTimer();\n\t\tthis._dt = this._currentTime - this._prevTime;\n\t\tthis._argsArray[0] = this._dt;\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\n\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\n\t\tthis._prevTime = this._currentTime;\n\t}\n\n\n}\n\nexport = RequestAnimationFrame;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\n\nclass Timer extends EventDispatcher\n{\n\tprivate _delay:number;\n\tprivate _repeatCount:number = 0;\n\tprivate _currentCount:number = 0;\n\tprivate _iid:number;\n\tprivate _running:boolean = false;\n\n\tconstructor(delay:number, repeatCount:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._delay = delay;\n\t\tthis._repeatCount = repeatCount;\n\n\t\tif (isNaN(delay) || delay < 0)\n\t\t\tthrow new Error(\"Delay is negative or not a number\");\n\t}\n\n\tpublic get currentCount():number\n\t{\n\t\treturn this._currentCount;\n\t}\n\n\tpublic get delay():number\n\t{\n\t\treturn this._delay;\n\t}\n\n\tpublic set delay(value:number)\n\t{\n\t\tthis._delay = value;\n\n\t\tif (this._running) {\n\t\t\tthis.stop();\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\tpublic get repeatCount():number\n\t{\n\t\treturn this._repeatCount;\n\t}\n\n\tpublic set repeatCount(value:number)\n\t{\n\t\tthis._repeatCount = value;\n\t}\n\n\tpublic reset():void\n\t{\n\t\tif (this._running)\n\t\t\tthis.stop();\n\n\t\tthis._currentCount = 0;\n\t}\n\n\tpublic get running():boolean\n\t{\n\t\treturn this._running;\n\t}\n\n\tpublic start():void\n\t{\n\t\tthis._running = true;\n\t\tclearInterval(this._iid);\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\n\t}\n\n\tpublic stop():void\n\t{\n\t\tthis._running = false;\n\t\tclearInterval(this._iid);\n\t}\n\n\tprivate tick():void\n\t{\n\t\tthis._currentCount++;\n\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\n\n\t\t\tthis.stop();\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t}\n\t}\n}\n\nexport = Timer;",
    "class XmlUtils {\n\n\tpublic static getChildrenWithTag(node:Node, tag:string):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(node) {\n\t\t\tvar num:number = node.childNodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = node.childNodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.nodeName == tag) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static filterListByParam(nodes:NodeList, paramName:string, paramValue):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(nodes) {\n\t\t\tvar num:number = nodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = nodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.attributes.getNamedItem(paramName).value == paramValue) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static strToXml(str:string):Node {\n\t\tvar parser:DOMParser = new DOMParser();\n\t\tvar node:Node = parser.parseFromString(str, \"text/xml\");\n\t\treturn node;\n\t}\n\n\tpublic static nodeToString(node:Node):string {\n\t\tif(!node) return \"\";\n\t\tvar str = (new XMLSerializer()).serializeToString(node);\n\t\treturn str;\n\t}\n\n\tpublic static readAttributeValue(node:Node, attrName:string):string {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn \"\";\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\tif(!attribute) {\n\t\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", attribute does not exist.\");\n\t\t\treturn \"\";\n\t\t}\n\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", value: \" + attribute.value);\n\t\treturn attribute.value;\n\t}\n\n\tpublic static writeAttributeValue(node:Node, attrName:string, attrValue:string) {\n\t\tvar attribute:Attr = new Attr();\n\t\tattribute.name = attrName;\n\t\tattribute.value = attrValue;\n\t\tattribute = node.attributes.setNamedItem(attribute);\n\t\tconsole.log(\"XmlUltils - writeAttributeValue() - name: \" + attribute.name + \", value: \" + attribute.value);\n\t}\n\n\tpublic static hasAttribute(node:Node, attrName:string):boolean {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\treturn attribute != null;\n\t}\n}\nexport = XmlUtils;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "/**\n *\n *\n * @returns {number}\n */\nfunction getTimer():number\n{\n\t// number milliseconds of 1970/01/01\n\t// this different to AS3 implementation which gets the number of milliseconds\n\t// since instance of Flash player was initialised\n\treturn Date.now();\n}\n\nexport = getTimer;"
  ],
  "sourceRoot": ""
}