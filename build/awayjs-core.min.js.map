{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-core.js",
    "awayjs-core/lib/attributes/AttributesBuffer.ts",
    "awayjs-core/lib/attributes/AttributesView.ts",
    "awayjs-core/lib/attributes/Byte4Attributes.ts",
    "awayjs-core/lib/attributes/Float1Attributes.ts",
    "awayjs-core/lib/attributes/Float2Attributes.ts",
    "awayjs-core/lib/attributes/Float3Attributes.ts",
    "awayjs-core/lib/attributes/Float4Attributes.ts",
    "awayjs-core/lib/attributes/Short2Attributes.ts",
    "awayjs-core/lib/attributes/Short3Attributes.ts",
    "awayjs-core/lib/audio/WaveAudio.ts",
    "awayjs-core/lib/errors/AbstractMethodError.ts",
    "awayjs-core/lib/errors/ArgumentError.ts",
    "awayjs-core/lib/errors/DocumentError.ts",
    "awayjs-core/lib/errors/ErrorBase.ts",
    "awayjs-core/lib/errors/PartialImplementationError.ts",
    "awayjs-core/lib/errors/RangeError.ts",
    "awayjs-core/lib/events/AssetEvent.ts",
    "awayjs-core/lib/events/EventBase.ts",
    "awayjs-core/lib/events/EventDispatcher.ts",
    "awayjs-core/lib/events/LoaderEvent.ts",
    "awayjs-core/lib/events/ParserEvent.ts",
    "awayjs-core/lib/events/ProjectionEvent.ts",
    "awayjs-core/lib/events/TimerEvent.ts",
    "awayjs-core/lib/events/URLLoaderEvent.ts",
    "awayjs-core/lib/geom/Box.ts",
    "awayjs-core/lib/geom/ColorTransform.ts",
    "awayjs-core/lib/geom/MathConsts.ts",
    "awayjs-core/lib/geom/Matrix3DUtils.ts",
    "awayjs-core/lib/geom/Matrix3D.ts",
    "awayjs-core/lib/geom/Matrix.ts",
    "awayjs-core/lib/geom/Orientation3D.ts",
    "awayjs-core/lib/geom/PerspectiveProjection.ts",
    "awayjs-core/lib/geom/Plane3D.ts",
    "awayjs-core/lib/geom/PlaneClassification.ts",
    "awayjs-core/lib/geom/Point.ts",
    "awayjs-core/lib/geom/PoissonLookup.ts",
    "awayjs-core/lib/geom/Quaternion.ts",
    "awayjs-core/lib/geom/Rectangle.ts",
    "awayjs-core/lib/geom/Sphere.ts",
    "awayjs-core/lib/geom/Vector3D.ts",
    "awayjs-core/lib/image/BitmapImage2D.ts",
    "awayjs-core/lib/image/BitmapImageChannel.ts",
    "awayjs-core/lib/image/BitmapImageCube.ts",
    "awayjs-core/lib/image/BlendMode.ts",
    "awayjs-core/lib/image/CPUCanvas.ts",
    "awayjs-core/lib/image/CPURenderingContext2D.ts",
    "awayjs-core/lib/image/Image2D.ts",
    "awayjs-core/lib/image/ImageBase.ts",
    "awayjs-core/lib/image/ImageCube.ts",
    "awayjs-core/lib/image/ImageData.ts",
    "awayjs-core/lib/image/Sampler2D.ts",
    "awayjs-core/lib/image/SamplerBase.ts",
    "awayjs-core/lib/image/SamplerCube.ts",
    "awayjs-core/lib/image/SpecularImage2D.ts",
    "awayjs-core/lib/library/AbstractionBase.ts",
    "awayjs-core/lib/library/AssetBase.ts",
    "awayjs-core/lib/library/AssetLibraryBundle.ts",
    "awayjs-core/lib/library/AssetLibraryIterator.ts",
    "awayjs-core/lib/library/AssetLibrary.ts",
    "awayjs-core/lib/library/ConflictPrecedence.ts",
    "awayjs-core/lib/library/ConflictStrategyBase.ts",
    "awayjs-core/lib/library/ConflictStrategy.ts",
    "awayjs-core/lib/library/ErrorConflictStrategy.ts",
    "awayjs-core/lib/library/IDUtil.ts",
    "awayjs-core/lib/library/IgnoreConflictStrategy.ts",
    "awayjs-core/lib/library/LoaderContext.ts",
    "awayjs-core/lib/library/LoaderInfo.ts",
    "awayjs-core/lib/library/Loader.ts",
    "awayjs-core/lib/library/NumSuffixConflictStrategy.ts",
    "awayjs-core/lib/managers/AudioChannel.ts",
    "awayjs-core/lib/managers/AudioManager.ts",
    "awayjs-core/lib/managers/EventAudioChannel.ts",
    "awayjs-core/lib/managers/StreamingAudioChannel.ts",
    "awayjs-core/lib/managers/WebAudioChannel.ts",
    "awayjs-core/lib/net/CrossDomainPolicy.ts",
    "awayjs-core/lib/net/URLLoaderDataFormat.ts",
    "awayjs-core/lib/net/URLLoader.ts",
    "awayjs-core/lib/net/URLRequestMethod.ts",
    "awayjs-core/lib/net/URLRequest.ts",
    "awayjs-core/lib/net/URLVariables.ts",
    "awayjs-core/lib/parsers/Image2DParser.ts",
    "awayjs-core/lib/parsers/ImageCubeParser.ts",
    "awayjs-core/lib/parsers/ParserBase.ts",
    "awayjs-core/lib/parsers/ParserDataFormat.ts",
    "awayjs-core/lib/parsers/ParserUtils.ts",
    "awayjs-core/lib/parsers/ResourceDependency.ts",
    "awayjs-core/lib/parsers/TextureAtlasParser.ts",
    "awayjs-core/lib/parsers/WaveAudioParser.ts",
    "awayjs-core/lib/projections/CoordinateSystem.ts",
    "awayjs-core/lib/projections/FreeMatrixProjection.ts",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection.ts",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection.ts",
    "awayjs-core/lib/projections/OrthographicProjection.ts",
    "awayjs-core/lib/projections/PerspectiveProjection.ts",
    "awayjs-core/lib/projections/ProjectionBase.ts",
    "awayjs-core/lib/ui/Keyboard.ts",
    "awayjs-core/lib/utils/BitmapImageUtils.ts",
    "awayjs-core/lib/utils/ByteArrayBase.ts",
    "awayjs-core/lib/utils/ByteArrayBuffer.ts",
    "awayjs-core/lib/utils/ByteArray.ts",
    "awayjs-core/lib/utils/CSS.ts",
    "awayjs-core/lib/utils/ColorUtils.ts",
    "awayjs-core/lib/utils/Debug.ts",
    "awayjs-core/lib/utils/Extensions.ts",
    "awayjs-core/lib/utils/ImageUtils.ts",
    "awayjs-core/lib/utils/MipmapGenerator.ts",
    "awayjs-core/lib/utils/RequestAnimationFrame.ts",
    "awayjs-core/lib/utils/Timer.ts",
    "awayjs-core/lib/utils/XmlUtils.ts",
    "awayjs-core/lib/utils/getTimer.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AttributesBuffer",
    "_super",
    "stride",
    "count",
    "_count",
    "_stride",
    "_newStride",
    "_viewVOs",
    "Array",
    "_buffer",
    "ArrayBuffer",
    "_bufferView",
    "Uint8Array",
    "byteLength",
    "Object",
    "defineProperty",
    "get",
    "assetType",
    "enumerable",
    "configurable",
    "_lengthDirty",
    "_updateLength",
    "set",
    "value",
    "resize",
    "_contentDirty",
    "buffer",
    "invalidate",
    "clear",
    "clone",
    "attributesBuffer",
    "bufferView",
    "len",
    "view",
    "_internalClone",
    "getView",
    "index",
    "_setAttributes",
    "viewIndex",
    "arrayBufferView",
    "offset",
    "array",
    "viewVO",
    "vLength",
    "vOffset",
    "vCount",
    "subarray",
    "_getLocalArrayBuffer",
    "localBuffer",
    "localBufferView",
    "_addView",
    "ViewVO",
    "push",
    "_index",
    "_removeView",
    "splice",
    "dispose",
    "_getOffset",
    "j",
    "newLength",
    "newBuffer",
    "newView",
    "vOldOffset",
    "oldOffset",
    "Math",
    "min",
    "size",
    "dimensions",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-core/lib/attributes/AttributesView",
    "AttributesView",
    "arrayClass",
    "attributesBufferCount",
    "_arrayClass",
    "_size",
    "BYTES_PER_ELEMENT",
    "_dimensions",
    "_attributesBuffer",
    "values",
    "_localArrayBuffer",
    "_cloneCache",
    "cloneCache",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "Byte4Attributes",
    "attributesBufferLength",
    "unsigned",
    "Int8Array",
    "awayjs-core/lib/attributes/Float1Attributes",
    "Float1Attributes",
    "Float32Array",
    "awayjs-core/lib/attributes/Float2Attributes",
    "Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "Float3Attributes",
    "awayjs-core/lib/attributes/Float4Attributes",
    "Float4Attributes",
    "awayjs-core/lib/attributes/Short2Attributes",
    "Short2Attributes",
    "Uint16Array",
    "Int16Array",
    "awayjs-core/lib/attributes/Short3Attributes",
    "Short3Attributes",
    "awayjs-core/lib/audio/WaveAudio",
    "AudioManager",
    "WaveAudio",
    "_volume",
    "_audioChannel",
    "volume",
    "currentTime",
    "duration",
    "stop",
    "play",
    "loop",
    "getChannel",
    "id",
    "newInstance",
    "name",
    "awayjs-core/lib/managers/AudioManager",
    "awayjs-core/lib/errors/AbstractMethodError",
    "ErrorBase",
    "AbstractMethodError",
    "message",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-core/lib/errors/ArgumentError",
    "ArgumentError",
    "awayjs-core/lib/errors/DocumentError",
    "DocumentError",
    "DOCUMENT_DOES_NOT_EXIST",
    "_name",
    "_errorID",
    "_messsage",
    "awayjs-core/lib/errors/PartialImplementationError",
    "PartialImplementationError",
    "dependency",
    "awayjs-core/lib/errors/RangeError",
    "RangeError",
    "awayjs-core/lib/events/AssetEvent",
    "EventBase",
    "AssetEvent",
    "type",
    "asset",
    "prevName",
    "_asset",
    "_prevName",
    "INVALIDATE",
    "DISPOSE",
    "CLEAR",
    "RENAME",
    "ENTER_FRAME",
    "EXIT_FRAME",
    "ASSET_CONFLICT_RESOLVED",
    "ASSET_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "awayjs-core/lib/events/EventBase",
    "undefined",
    "target",
    "awayjs-core/lib/events/EventDispatcher",
    "EventDispatcher",
    "listenerObjects",
    "addEventListener",
    "listener",
    "ListenerObject",
    "removeEventListener",
    "numListeners",
    "dispatchEvent",
    "event",
    "hasEventListener",
    "getEventListenerIndex",
    "listeners",
    "awayjs-core/lib/events/IEventDispatcher",
    "awayjs-core/lib/events/LoaderEvent",
    "LoaderEvent",
    "url",
    "content",
    "assets",
    "_url",
    "_content",
    "_assets",
    "LOAD_COMPLETE",
    "awayjs-core/lib/events/ParserEvent",
    "ParserEvent",
    "_message",
    "PARSE_COMPLETE",
    "PARSE_ERROR",
    "READY_FOR_DEPENDENCIES",
    "awayjs-core/lib/events/ProjectionEvent",
    "ProjectionEvent",
    "projection",
    "_projection",
    "MATRIX_CHANGED",
    "awayjs-core/lib/events/TimerEvent",
    "TimerEvent",
    "TIMER",
    "TIMER_COMPLETE",
    "awayjs-core/lib/events/URLLoaderEvent",
    "URLLoaderEvent",
    "urlLoader",
    "_urlLoader",
    "HTTP_STATUS",
    "LOAD_ERROR",
    "LOAD_PROGRESS",
    "LOAD_START",
    "awayjs-core/lib/geom/Box",
    "Vector3D",
    "Box",
    "x",
    "y",
    "z",
    "width",
    "height",
    "depth",
    "val",
    "_bottomRightBack",
    "_topLeftFront",
    "contains",
    "containsPoint",
    "position",
    "containsBox",
    "box",
    "copyFrom",
    "sourceBox",
    "equals",
    "toCompare",
    "inflate",
    "dx",
    "dy",
    "dz",
    "inflatePoint",
    "delta",
    "intersection",
    "toIntersect",
    "intersects",
    "rayIntersection",
    "direction",
    "targetNormal",
    "halfExtentsX",
    "halfExtentsY",
    "halfExtentsZ",
    "centerX",
    "centerY",
    "centerZ",
    "px",
    "py",
    "pz",
    "vx",
    "vy",
    "vz",
    "ix",
    "iy",
    "iz",
    "rayEntryDistance",
    "closestPointToPoint",
    "point",
    "isEmpty",
    "offsetPosition",
    "setEmpty",
    "setBoundIdentity",
    "Number",
    "MAX_VALUE",
    "setTo",
    "xa",
    "ya",
    "za",
    "widtha",
    "heighta",
    "deptha",
    "toString",
    "union",
    "toUnion",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/geom/ColorTransform",
    "ColorUtils",
    "ColorTransform",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "argb",
    "float32ColorToARGB",
    "source",
    "copyTo",
    "destination",
    "prepend",
    "ct",
    "awayjs-core/lib/utils/ColorUtils",
    "awayjs-core/lib/geom/MathConsts",
    "MathConsts",
    "RADIANS_TO_DEGREES",
    "PI",
    "DEGREES_TO_RADIANS",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "Matrix3D",
    "Matrix3DUtils",
    "quaternion2matrix",
    "quarternion",
    "m",
    "w",
    "xx",
    "xy",
    "xz",
    "xw",
    "yy",
    "yz",
    "yw",
    "zz",
    "zw",
    "raw",
    "RAW_DATA_CONTAINER",
    "copyRawDataFrom",
    "getForward",
    "v",
    "copyColumnTo",
    "normalize",
    "getUp",
    "getRight",
    "compare",
    "m1",
    "m2",
    "r1",
    "r2",
    "rawData",
    "copyRawDataTo",
    "lookAt",
    "matrix",
    "pos",
    "dir",
    "up",
    "dirN",
    "upN",
    "lftN",
    "crossProduct",
    "dotProduct",
    "reflection",
    "plane",
    "c",
    "ab2",
    "ac2",
    "bc2",
    "transformVector",
    "vector",
    "result",
    "g",
    "k",
    "h",
    "deltaTransformVector",
    "getTranslation",
    "transform",
    "deltaTransformVectors",
    "vin",
    "vout",
    "outIndex",
    "CALCULATION_MATRIX",
    "awayjs-core/lib/geom/Matrix3D",
    "Orientation3D",
    "_position",
    "_positionDirty",
    "identity",
    "append",
    "lhs",
    "lrd",
    "m111",
    "m112",
    "m113",
    "m114",
    "m121",
    "m122",
    "m123",
    "m124",
    "m131",
    "m132",
    "m133",
    "m134",
    "m141",
    "m142",
    "m143",
    "m144",
    "m211",
    "m212",
    "m213",
    "m214",
    "m221",
    "m222",
    "m223",
    "m224",
    "m231",
    "m232",
    "m233",
    "m234",
    "m241",
    "m242",
    "m243",
    "m244",
    "appendRotation",
    "degrees",
    "axis",
    "getAxisRotation",
    "appendSkew",
    "xSkew",
    "ySkew",
    "zSkew",
    "tempRawData",
    "tempMatrix",
    "appendScale",
    "xScale",
    "yScale",
    "zScale",
    "appendTranslation",
    "copyColumnFrom",
    "column",
    "vector3D",
    "sourceRaw",
    "targetRaw",
    "transpose",
    "copyRowFrom",
    "row",
    "copyRowTo",
    "decompose",
    "orientationStyle",
    "q",
    "_components",
    "colX",
    "colY",
    "colZ",
    "scale",
    "skew",
    "scaleBy",
    "combine",
    "rot",
    "AXIS_ANGLE",
    "acos",
    "sqrt",
    "QUATERNION",
    "tr",
    "EULER_ANGLES",
    "asin",
    "atan2",
    "interpolate",
    "thisMat",
    "toMat",
    "percent",
    "interpolateTo",
    "invert",
    "determinant",
    "invertable",
    "abs",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "m41",
    "m42",
    "m43",
    "m44",
    "rhs",
    "prependRotation",
    "prependScale",
    "prependTranslation",
    "recompose",
    "components",
    "sin",
    "cos",
    "rotation",
    "angle",
    "transformBox",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "transformVectors",
    "rad",
    "tmp1",
    "tmp2",
    "invalidatePosition",
    "toFixed",
    "decimalPlace",
    "magnitude",
    "pow",
    "round",
    "awayjs-core/lib/geom/Orientation3D",
    "awayjs-core/lib/geom/Matrix",
    "Point",
    "Matrix",
    "tx",
    "ty",
    "concat",
    "a1",
    "c1",
    "tx1",
    "sourceMatrix",
    "createBox",
    "scaleX",
    "scaleY",
    "createGradientBox",
    "deltaTransformPoint",
    "norm",
    "multiply",
    "rotate",
    "sx",
    "sy",
    "transformPoint",
    "translate",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/PerspectiveProjection",
    "PerspectiveProjection",
    "toMatrix3D",
    "_matrix3D",
    "awayjs-core/lib/geom/Plane3D",
    "PlaneClassification",
    "Plane3D",
    "_iAlignment",
    "ALIGN_XY_AXIS",
    "ALIGN_YZ_AXIS",
    "ALIGN_XZ_AXIS",
    "ALIGN_ANY",
    "fromPoints",
    "p0",
    "p1",
    "p2",
    "d1x",
    "d1y",
    "d1z",
    "d2x",
    "d2y",
    "d2z",
    "fromNormalAndPoint",
    "normal",
    "distance",
    "classifyPoint",
    "epsilon",
    "FRONT",
    "BACK",
    "INTERSECT",
    "awayjs-core/lib/geom/PlaneClassification",
    "IN",
    "OUT",
    "add",
    "sourcePoint",
    "thickness",
    "invLength",
    "subtract",
    "pt1",
    "pt2",
    "polar",
    "awayjs-core/lib/geom/PoissonLookup",
    "PoissonLookup",
    "initDistributions",
    "_distributions",
    "getDistribution",
    "awayjs-core/lib/geom/Quaternion",
    "Quaternion",
    "qa",
    "qb",
    "w1",
    "x1",
    "y1",
    "z1",
    "w2",
    "x2",
    "y2",
    "z2",
    "multiplyVector",
    "fromAxisAngle",
    "sin_a",
    "cos_a",
    "slerp",
    "dot",
    "s1",
    "s2",
    "lerp",
    "fromEulerAngles",
    "ax",
    "ay",
    "az",
    "halfX",
    "halfY",
    "halfZ",
    "cosX",
    "sinX",
    "cosY",
    "sinY",
    "cosZ",
    "sinZ",
    "toEulerAngles",
    "mag",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "ww",
    "fromMatrix",
    "toRawData",
    "exclude4thRow",
    "rotatePoint",
    "awayjs-core/lib/geom/Rectangle",
    "Rectangle",
    "_bottomRight",
    "_topLeft",
    "containsRect",
    "rect",
    "sourceRect",
    "offsetPoint",
    "awayjs-core/lib/geom/Sphere",
    "Sphere",
    "radius",
    "det",
    "sqrtDet",
    "lengthSquared",
    "angleBetween",
    "ascl",
    "bscl",
    "src",
    "decrementBy",
    "allFour",
    "incrementBy",
    "nearEquals",
    "tolerance",
    "negate",
    "project",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "awayjs-core/lib/image/BitmapImage2D",
    "Image2D",
    "BitmapImageUtils",
    "CPUCanvas",
    "BitmapImage2D",
    "transparent",
    "fillColor",
    "powerOfTwo",
    "_locked",
    "_transparent",
    "document",
    "_imageCanvas",
    "createElement",
    "_context",
    "getContext",
    "fillRect",
    "_rect",
    "draw",
    "colorTransform",
    "_imageData",
    "getImageData",
    "data",
    "putImageData",
    "copyChannel",
    "sourceBitmap",
    "destPoint",
    "sourceChannel",
    "destChannel",
    "imageData",
    "sourceData",
    "destData",
    "sourceOffset",
    "log",
    "destOffset",
    "sourceIndex",
    "destIndex",
    "copyPixels",
    "destRect",
    "getCanvas",
    "_copyPixels",
    "blendMode",
    "clipRect",
    "smoothing",
    "_draw",
    "color",
    "_fillRect",
    "getPixel",
    "pixelData",
    "getPixel32",
    "lock",
    "setArray",
    "inputArray",
    "setPixel",
    "setPixel32",
    "setPixels",
    "inputByteArray",
    "readUnsignedInt",
    "unlock",
    "_setSize",
    "awayjs-core/lib/image/CPUCanvas",
    "awayjs-core/lib/image/Image2D",
    "awayjs-core/lib/utils/BitmapImageUtils",
    "awayjs-core/lib/image/BitmapImageChannel",
    "BitmapImageChannel",
    "ALPHA",
    "BLUE",
    "GREEN",
    "RED",
    "awayjs-core/lib/image/BitmapImageCube",
    "ImageCube",
    "BitmapImageCube",
    "side",
    "posX",
    "negX",
    "posY",
    "negY",
    "posZ",
    "negZ",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-core/lib/image/BlendMode",
    "BlendMode",
    "ADD",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "NORMAL",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "SUBTRACT",
    "CPURenderingContext2D",
    "ImageData",
    "reset",
    "contextId",
    "awayjs-core/lib/image/CPURenderingContext2D",
    "awayjs-core/lib/image/ImageData",
    "cpuCanvas",
    "point2",
    "restore",
    "setTransform",
    "save",
    "arc",
    "startAngle",
    "endAngle",
    "anticlockwise",
    "measureText",
    "text",
    "isPointInPath",
    "fillRule",
    "quadraticCurveTo",
    "cpx",
    "cpy",
    "imagedata",
    "dirtyX",
    "dirtyY",
    "dirtyWidth",
    "dirtyHeight",
    "fillText",
    "maxWidth",
    "createRadialGradient",
    "x0",
    "y0",
    "r0",
    "lineTo",
    "getLineDash",
    "fill",
    "createImageData",
    "imageDataOrSw",
    "sh",
    "createPattern",
    "image",
    "repetition",
    "closePath",
    "clip",
    "clearRect",
    "moveTo",
    "sw",
    "applyPixel32",
    "floor",
    "copyPixel32",
    "fromX",
    "fromY",
    "fromIndex",
    "fillStyle",
    "parsedFillStyle",
    "colorStrings",
    "substring",
    "lastIndexOf",
    "split",
    "parsedA",
    "parseFloat",
    "parsedR",
    "parseInt",
    "parsedG",
    "parsedB",
    "bezierCurveTo",
    "cp1x",
    "cp1y",
    "cp2x",
    "cp2y",
    "drawImage",
    "offsetX",
    "offsetY",
    "canvasOffsetX",
    "canvasOffsetY",
    "canvasImageWidth",
    "canvasImageHeight",
    "indexOf",
    "bitmap",
    "drawBitmap",
    "htmlImage",
    "htmlCanvas",
    "htmlContext",
    "htmlImageData",
    "resultBitmap",
    "passBitmap",
    "canvas",
    "canvasImageData",
    "sampleBilinear",
    "sampleBox",
    "sample",
    "stroke",
    "strokeRect",
    "setLineDash",
    "segments",
    "strokeText",
    "beginPath",
    "arcTo",
    "createLinearGradient",
    "texture",
    "texelSizeX",
    "texelSizeY",
    "color00",
    "color10",
    "color01",
    "color11",
    "interColor0",
    "interpolateColor",
    "interColor1",
    "area",
    "xsize",
    "ysize",
    "toY",
    "ceil",
    "max",
    "toX",
    "awayjs-core/lib/image/IImageCanvas",
    "ImageBase",
    "ImageUtils",
    "_powerOfTwo",
    "_testDimensions",
    "isDimensionValid",
    "awayjs-core/lib/image/ImageBase",
    "awayjs-core/lib/utils/ImageUtils",
    "_pFormat",
    "awayjs-core/lib/image/Sampler2D",
    "SamplerBase",
    "Sampler2D",
    "repeat",
    "smooth",
    "mipmap",
    "_repeat",
    "_updateRect",
    "_imageRect",
    "_frameRect",
    "awayjs-core/lib/image/SamplerBase",
    "_smooth",
    "_mipmap",
    "awayjs-core/lib/image/SamplerCube",
    "SamplerCube",
    "awayjs-core/lib/image/SpecularImage2D",
    "SpecularImage2D",
    "specularSource",
    "glossSource",
    "_specularSource",
    "_glossSource",
    "_output",
    "_testSize",
    "origin",
    "awayjs-core/lib/library/AbstractionBase",
    "AbstractionBase",
    "pool",
    "_this",
    "_invalid",
    "_pool",
    "_onClearDelegate",
    "onClear",
    "_onInvalidateDelegate",
    "onInvalidate",
    "clearAbstraction",
    "_id",
    "ID_COUNT",
    "_originalName",
    "updateFullPath",
    "prev",
    "_namespace",
    "_full_path",
    "assetPathEquals",
    "ns",
    "isAsset",
    "assetClass",
    "resetAssetPath",
    "overrideOriginal",
    "DEFAULT_NAMESPACE",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "AssetLibraryIterator",
    "Loader",
    "ConflictPrecedence",
    "ConflictStrategy",
    "AssetLibraryBundle",
    "_loaderSessionsGarbage",
    "_assetDictionary",
    "_loaderSessions",
    "conflictStrategy",
    "IGNORE",
    "create",
    "conflictPrecedence",
    "FAVOR_NEW",
    "_onAssetRenameDelegate",
    "onAssetRename",
    "_onAssetConflictResolvedDelegate",
    "onAssetConflictResolved",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "getInstance",
    "key",
    "_iInstances",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "_strategy",
    "_strategyPreference",
    "createIterator",
    "assetTypeFilter",
    "namespaceFilter",
    "filterFunc",
    "load",
    "req",
    "context",
    "parser",
    "getLoader",
    "loadData",
    "loader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "disposeLoader",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "getAsset",
    "_assetDictDirty",
    "rehashAssetDict",
    "getAllAssets",
    "addAsset",
    "old",
    "assetNamespace",
    "resolveConflict",
    "removeAsset",
    "idx",
    "removeAssetFromDict",
    "removeAssetByName",
    "removeAllAssets",
    "removeNamespaceAssets",
    "old_assets",
    "autoRemoveEmptyNamespace",
    "empty",
    "stopAllLoaders",
    "killloaderSession",
    "pop",
    "clearTimeout",
    "dict",
    "awayjs-core/lib/library/AssetLibraryIterator",
    "awayjs-core/lib/library/ConflictPrecedence",
    "awayjs-core/lib/library/ConflictStrategy",
    "awayjs-core/lib/library/Loader",
    "filter",
    "_idx",
    "_filtered",
    "next",
    "setIndex",
    "awayjs-core/lib/library/AssetLibrary",
    "AssetLibrary",
    "getBundle",
    "stopLoad",
    "FAVOR_OLD",
    "awayjs-core/lib/library/ConflictStrategyBase",
    "ConflictStrategyBase",
    "changedAsset",
    "oldAsset",
    "assetsDictionary",
    "precedence",
    "_pUpdateNames",
    "nonConflictingName",
    "newAsset",
    "loser_prev_name",
    "winner",
    "loser",
    "ErrorConflictStrategy",
    "IgnoreConflictStrategy",
    "NumSuffixConflictStrategy",
    "include",
    "APPEND_NUM_SUFFIX",
    "THROW_ERROR",
    "awayjs-core/lib/library/ErrorConflictStrategy",
    "awayjs-core/lib/library/IgnoreConflictStrategy",
    "awayjs-core/lib/library/NumSuffixConflictStrategy",
    "assetFullPath",
    "awayjs-core/lib/library/IAbstractionPool",
    "awayjs-core/lib/library/IAssetClass",
    "awayjs-core/lib/library/IAsset",
    "awayjs-core/lib/library/IDUtil",
    "IDUtil",
    "createUID",
    "uid",
    "ALPHA_CHAR_CODES",
    "random",
    "time",
    "Date",
    "getTime",
    "timeString",
    "toUpperCase",
    "substr",
    "charCodeAt",
    "String",
    "fromCharCode",
    "apply",
    "awayjs-core/lib/library/LoaderContext",
    "LoaderContext",
    "includeDependencies",
    "dependencyBaseUrl",
    "_includeDependencies",
    "_dependencyBaseUrl",
    "_embeddedDataByUrl",
    "_remappedUrls",
    "_materialMode",
    "UNDEFINED",
    "materialMode",
    "_overrideAbsPath",
    "_overrideFullUrls",
    "mapUrl",
    "originalUrl",
    "newUrl",
    "mapUrlToData",
    "_iHasDataForUrl",
    "_iGetDataForUrl",
    "_iHasMappingForUrl",
    "_iGetRemappedUrl",
    "SINGLEPASS_MATERIALS",
    "MULTIPASS_MATERIALS",
    "awayjs-core/lib/library/LoaderInfo",
    "LoaderInfo",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_contentType",
    "_loader",
    "URLLoader",
    "URLLoaderDataFormat",
    "Image2DParser",
    "ImageCubeParser",
    "TextureAtlasParser",
    "ResourceDependency",
    "WaveAudioParser",
    "_stack",
    "_errorHandlers",
    "_parseErrorHandlers",
    "_onReadyForDependenciesDelegate",
    "onReadyForDependencies",
    "_onParseCompleteDelegate",
    "onParseComplete",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_parsers",
    "parsers",
    "_baseDependency",
    "_loaderInfo",
    "_uri",
    "replace",
    "retrieveDependency",
    "retrieveNext",
    "_currentDependency",
    "dependencies",
    "parsingPaused",
    "_iResumeParsing",
    "_iSuccess",
    "resolve",
    "_iLoader",
    "addEventListeners",
    "request",
    "Function",
    "_iSetData",
    "retrieveAsRawData",
    "parseDependency",
    "resolveDependencyUrl",
    "dataFormat",
    "BINARY",
    "_iSetParser",
    "getParserFromSuffix",
    "joinUrl",
    "base",
    "end",
    "charAt",
    "scheme_re",
    "RegExp",
    "overrideAbsolutePaths",
    "test",
    "overrideFullURLs",
    "noscheme_url",
    "retrieveParserDependencies",
    "parserDependancies",
    "resolveParserDependencies",
    "handled",
    "isDependency",
    "removeEventListeners",
    "resolveFailure",
    "suppresAssetEvents",
    "resolveName",
    "handler",
    "getParserFromData",
    "supportsData",
    "_iFileName",
    "parseAsync",
    "fileExtension",
    "toLowerCase",
    "supportsType",
    "awayjs-core/lib/net/URLLoader",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/parsers/Image2DParser",
    "awayjs-core/lib/parsers/ImageCubeParser",
    "awayjs-core/lib/parsers/ResourceDependency",
    "awayjs-core/lib/parsers/TextureAtlasParser",
    "awayjs-core/lib/parsers/WaveAudioParser",
    "separator",
    "_separator",
    "_next_suffix",
    "orig",
    "new_name",
    "suffix",
    "isNaN",
    "awayjs-core/lib/managers/AudioChannel",
    "AudioChannel",
    "_isPlaying",
    "_isLooping",
    "_audioCtx",
    "window",
    "_gainNode",
    "createGain",
    "connect",
    "_audio",
    "Audio",
    "onended",
    "_onEnded",
    "createMediaElementSource",
    "gain",
    "isPlaying",
    "isLooping",
    "isDecoding",
    "pause",
    "maxChannels",
    "_channels",
    "StreamingAudioChannel",
    "WebAudioChannel",
    "channelClass",
    "channel",
    "awayjs-core/lib/managers/StreamingAudioChannel",
    "awayjs-core/lib/managers/WebAudioChannel",
    "awayjs-core/lib/managers/EventAudioChannel",
    "ParserUtils",
    "EventAudioChannel",
    "_startTime",
    "ontimeupdate",
    "_onTimeUpdate",
    "_duration",
    "_base64Cache",
    "arrayBufferToBase64",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-core/lib/managers/IAudioChannelClass",
    "awayjs-core/lib/managers/IAudioChannel",
    "_sourceOpenDelegate",
    "_sourceOpen",
    "_updateEndDelegate",
    "_updateEnd",
    "_updateSource",
    "_sourceDirty",
    "_offset",
    "_isQueuing",
    "_isOpening",
    "_queueBuffer",
    "_mediaSource",
    "activeSourceBuffers",
    "console",
    "_sourceBuffer",
    "addSourceBuffer",
    "timestampOffset",
    "appendBuffer",
    "endOfStream",
    "_disposeSource",
    "MediaSource",
    "_urlString",
    "URL",
    "createObjectURL",
    "remove",
    "removeSourceBuffer",
    "revokeObjectURL",
    "_isDecoding",
    "_onEndedDelegate",
    "_currentTime",
    "_decodeCache",
    "_onDecodeComplete",
    "_errorCache",
    "decodeAudioData",
    "_onError",
    "_source",
    "createBufferSource",
    "start",
    "error",
    "disconnect",
    "awayjs-core/lib/net/CrossDomainPolicy",
    "CrossDomainPolicy",
    "ANONYMOUS",
    "USE_CREDENTIALS",
    "TEXT",
    "VARIABLES",
    "BLOB",
    "ARRAY_BUFFER",
    "URLRequestMethod",
    "URLVariables",
    "_dataFormat",
    "_loadError",
    "_request",
    "_data",
    "format",
    "initXHR",
    "method",
    "POST",
    "postRequest",
    "getRequest",
    "isSupported",
    "close",
    "_XHR",
    "abort",
    "disposeXHR",
    "setResponseType",
    "xhr",
    "responseType",
    "open",
    "async",
    "send",
    "handleXmlHttpRequestException",
    "urlVars",
    "formData",
    "XMLHttpRequest",
    "onloadstart",
    "onLoadStart",
    "onprogress",
    "onProgress",
    "onabort",
    "onAbort",
    "onerror",
    "onload",
    "ontimeout",
    "onTimeOut",
    "onloadend",
    "onLoadEnd",
    "onreadystatechange",
    "onReadyStateChange",
    "decodeURLVariables",
    "join",
    "tokens",
    "re",
    "exec",
    "decodeURIComponent",
    "readyState",
    "_status",
    "status",
    "_loadErrorEvent",
    "_statusEvent",
    "total",
    "loaded",
    "_progressEvent",
    "_loadStartEvent",
    "responseText",
    "response",
    "_loadCompleteEvent",
    "awayjs-core/lib/net/URLRequestMethod",
    "awayjs-core/lib/net/URLVariables",
    "GET",
    "awayjs-core/lib/net/URLRequest",
    "URLRequest",
    "_variables",
    "decode",
    "obj",
    "fd",
    "FormData",
    "ParserBase",
    "ByteArray",
    "extension",
    "HTMLImageElement",
    "ba",
    "readUnsignedShort",
    "readShort",
    "readUTFBytes",
    "readByte",
    "_pProceedParsing",
    "sizeError",
    "_loadingImage",
    "MORE_TO_PARSE",
    "_htmlImageElement",
    "imageToBitmapImage2D",
    "_pFinalizeAsset",
    "htmlImageElement",
    "byteArrayToImage",
    "complete",
    "arrayBufferToImage",
    "Blob",
    "blobToImage",
    "_pContent",
    "PARSING_DONE",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/utils/ByteArray",
    "JSON",
    "parse",
    "_iResolveDependency",
    "resourceDependency",
    "_iResolveDependencyFailure",
    "_imgDependencyDictionary",
    "_getBitmapImage2D",
    "json",
    "rec",
    "_pDieWithError",
    "_pAddDependency",
    "_validateCubeData",
    "_pPauseAndRetrieveDependencies",
    "Timer",
    "getTimer",
    "_dependencies",
    "_pOnIntervalDelegate",
    "_pOnInterval",
    "isBitmapImage2DValid",
    "bitmapImage2D",
    "isValid",
    "isImage2DValid",
    "_parsingFailure",
    "_parsingPaused",
    "_parsingComplete",
    "newMaterialMode",
    "frameLimit",
    "_pStartParsing",
    "_iResolveDependencyName",
    "_timer",
    "_isParsing",
    "type_event",
    "type_name",
    "suppressErrorEvents",
    "sub_id",
    "_pPauseParsing",
    "_pHasTime",
    "_lastFrameTime",
    "_frameLimit",
    "_pFinishParsing",
    "_pGetTextData",
    "_pGetByteData",
    "toByteArray",
    "_pGetData",
    "awayjs-core/lib/utils/Timer",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-core/lib/parsers/ParserDataFormat",
    "ParserDataFormat",
    "PLAIN_TEXT",
    "IMAGE",
    "mimeType",
    "byteStr",
    "bytes",
    "base64Image",
    "btoa",
    "arrayBufferToAudio",
    "fileType",
    "str",
    "audio",
    "img",
    "Image",
    "arraybytes",
    "byteArrayToAudio",
    "filetype",
    "URLObj",
    "blobToAudio",
    "bitmapData",
    "setArrayBuffer",
    "getBytesAvailable",
    "parentParser",
    "suppressAssetEvents",
    "_sub_id",
    "_parser",
    "_parentParser",
    "_retrieveAsRawData",
    "_suppressAssetEvents",
    "XmlUtils",
    "_parseState",
    "TextureAtlasParserState",
    "PARSE_SUBTEXTURES",
    "nodes",
    "PARSE_XML",
    "_doc",
    "getChildrenWithTag",
    "strToXml",
    "_imagePath",
    "readAttributeValue",
    "_subTextureNodes",
    "PARSE_IMAGE",
    "sampler",
    "element",
    "imageRect",
    "frameRect",
    "awayjs-core/lib/utils/XmlUtils",
    "parseFileType",
    "awayjs-core/lib/projections/CoordinateSystem",
    "CoordinateSystem",
    "LEFT_HANDED",
    "RIGHT_HANDED",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ProjectionBase",
    "FreeMatrixProjection",
    "_pMatrix",
    "_pNear",
    "_pFar",
    "_pAspectRatio",
    "pInvalidateMatrix",
    "pUpdateMatrix",
    "_pMatrixInvalid",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-core/lib/projections/ProjectionBase",
    "awayjs-core/lib/projections/IProjection",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection",
    "ObliqueNearPlaneProjection",
    "baseProjection",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_baseProjection",
    "frustumCorners",
    "near",
    "far",
    "_iAspectRatio",
    "_plane",
    "cx",
    "cy",
    "cz",
    "cw",
    "signX",
    "signY",
    "inverse",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "OrthographicOffCenterProjection",
    "_minX",
    "_maxX",
    "_minY",
    "_maxY",
    "unproject",
    "nX",
    "nY",
    "sZ",
    "unprojectionMatrix",
    "_pFrustumCorners",
    "awayjs-core/lib/projections/OrthographicProjection",
    "OrthographicProjection",
    "projectionHeight",
    "_projectionHeight",
    "_yMax",
    "_xMax",
    "left",
    "right",
    "top",
    "bottom",
    "_pScissorRect",
    "_pViewPort",
    "xWidth",
    "yHgt",
    "center",
    "middle",
    "fieldOfView",
    "coordinateSystem",
    "_fieldOfView",
    "_focalLength",
    "_hFieldOfView",
    "_hFocalLength",
    "_preserveAspectRatio",
    "_preserveFocalLength",
    "tan",
    "_pCoordinateSystem",
    "atan",
    "tanMinX",
    "_pOriginX",
    "tanMaxX",
    "tanMinY",
    "_pOriginY",
    "tanMaxY",
    "_unprojectionInvalid",
    "point3d",
    "_unprojection",
    "_iUpdateScissorRect",
    "_iUpdateViewport",
    "awayjs-core/lib/ui/Keyboard",
    "Keyboard",
    "A",
    "ALTERNATE",
    "AUDIO",
    "B",
    "BACKQUOTE",
    "BACKSLASH",
    "BACKSPACE",
    "C",
    "CAPS_LOCK",
    "CHANNEL_DOWN",
    "CHANNEL_UP",
    "COMMA",
    "COMMAND",
    "CONTROL",
    "D",
    "DELETE",
    "DOWN",
    "DVR",
    "E",
    "END",
    "ENTER",
    "EQUAL",
    "ESCAPE",
    "EXIT",
    "F",
    "F1",
    "F10",
    "F11",
    "F12",
    "F13",
    "F14",
    "F15",
    "F2",
    "F3",
    "F4",
    "F5",
    "F6",
    "F7",
    "F8",
    "F9",
    "FAST_FORWARD",
    "G",
    "GUIDE",
    "H",
    "HELP",
    "HOME",
    "I",
    "INFO",
    "INPUT",
    "INSERT",
    "J",
    "K",
    "KEYNAME_BEGIN",
    "KEYNAME_BREAK",
    "KEYNAME_CLEARDISPLAY",
    "KEYNAME_CLEARLINE",
    "KEYNAME_DELETE",
    "KEYNAME_DELETECHAR",
    "KEYNAME_DELETELINE",
    "KEYNAME_DOWNARROW",
    "KEYNAME_END",
    "KEYNAME_EXECUTE",
    "KEYNAME_F1",
    "KEYNAME_F10",
    "KEYNAME_F11",
    "KEYNAME_F12",
    "KEYNAME_F13",
    "KEYNAME_F14",
    "KEYNAME_F15",
    "KEYNAME_F16",
    "KEYNAME_F17",
    "KEYNAME_F18",
    "KEYNAME_F19",
    "KEYNAME_F2",
    "KEYNAME_F20",
    "KEYNAME_F21",
    "KEYNAME_F22",
    "KEYNAME_F23",
    "KEYNAME_F24",
    "KEYNAME_F25",
    "KEYNAME_F26",
    "KEYNAME_F27",
    "KEYNAME_F28",
    "KEYNAME_F29",
    "KEYNAME_F3",
    "KEYNAME_F30",
    "KEYNAME_F31",
    "KEYNAME_F32",
    "KEYNAME_F33",
    "KEYNAME_F34",
    "KEYNAME_F35",
    "KEYNAME_F4",
    "KEYNAME_F5",
    "KEYNAME_F6",
    "KEYNAME_F7",
    "KEYNAME_F8",
    "KEYNAME_F9",
    "KEYNAME_FIND",
    "KEYNAME_HELP",
    "KEYNAME_HOME",
    "KEYNAME_INSERT",
    "KEYNAME_INSERTCHAR",
    "KEYNAME_INSERTLINE",
    "KEYNAME_LEFTARROW",
    "KEYNAME_MENU",
    "KEYNAME_MODESWITCH",
    "KEYNAME_NEXT",
    "KEYNAME_PAGEDOWN",
    "KEYNAME_PAGEUP",
    "KEYNAME_PAUSE",
    "KEYNAME_PREV",
    "KEYNAME_PRINT",
    "KEYNAME_PRINTSCREEN",
    "KEYNAME_REDO",
    "KEYNAME_RESET",
    "KEYNAME_RIGHTARROW",
    "KEYNAME_SCROLLLOCK",
    "KEYNAME_SELECT",
    "KEYNAME_STOP",
    "KEYNAME_SYSREQ",
    "KEYNAME_SYSTEM",
    "KEYNAME_UNDO",
    "KEYNAME_UPARROW",
    "KEYNAME_USER",
    "L",
    "LAST",
    "LEFT",
    "LEFTBRACKET",
    "LIVE",
    "M",
    "MASTER_SHELL",
    "MENU",
    "MINUS",
    "N",
    "NEXT",
    "NUMBER_0",
    "NUMBER_1",
    "NUMBER_2",
    "NUMBER_3",
    "NUMBER_4",
    "NUMBER_5",
    "NUMBER_6",
    "NUMBER_7",
    "NUMBER_8",
    "NUMBER_9",
    "NUMPAD",
    "NUMPAD_0",
    "NUMPAD_1",
    "NUMPAD_2",
    "NUMPAD_3",
    "NUMPAD_4",
    "NUMPAD_5",
    "NUMPAD_6",
    "NUMPAD_7",
    "NUMPAD_8",
    "NUMPAD_9",
    "NUMPAD_ADD",
    "NUMPAD_DECIMAL",
    "NUMPAD_DIVIDE",
    "NUMPAD_ENTER",
    "NUMPAD_MULTIPLY",
    "NUMPAD_SUBTRACT",
    "O",
    "P",
    "PAGE_DOWN",
    "PAGE_UP",
    "PAUSE",
    "PERIOD",
    "PLAY",
    "PREVIOUS",
    "Q",
    "QUOTE",
    "R",
    "RECORD",
    "REWIND",
    "RIGHT",
    "RIGHTBRACKET",
    "S",
    "SEARCH",
    "SEMICOLON",
    "SETUP",
    "SHIFT",
    "SKIP_BACKWARD",
    "SKIP_FORWARD",
    "SLASH",
    "SPACE",
    "STOP",
    "SUBTITLE",
    "T",
    "TAB",
    "U",
    "UP",
    "V",
    "VOD",
    "W",
    "X",
    "Y",
    "YELLOW",
    "Z",
    "bmpd",
    "awayjs-core/lib/utils/ByteArrayBase",
    "ByteArrayBase",
    "_mode",
    "writeByte",
    "writeUnsignedByte",
    "readUnsignedByte",
    "writeUnsignedShort",
    "writeUnsignedInt",
    "writeFloat",
    "toFloatBits",
    "readFloat",
    "fromFloatBits",
    "compareEqual",
    "other",
    "co0",
    "c0",
    "writeBase64String",
    "dumpToConsole",
    "oldpos",
    "nstep",
    "asHexString",
    "digits",
    "lut",
    "readBase64String",
    "internalGetBase64String",
    "getUnsignedByteFunc",
    "self",
    "b0",
    "b1",
    "b2",
    "enc1",
    "enc2",
    "enc3",
    "enc4",
    "base64Key",
    "Base64Key",
    "awayjs-core/lib/utils/ByteArrayBuffer",
    "ByteArrayBuffer",
    "bi",
    "sign",
    "exponent",
    "mantissa",
    "maxlength",
    "unalignedarraybytestemp",
    "ensureWriteableSpace",
    "ensureSpace",
    "aBuffer",
    "inInt8AView",
    "localInt8View",
    "newmaxlength",
    "newarraybuffer",
    "newview",
    "readBytes",
    "byteView",
    "localByteView",
    "view2",
    "view3",
    "DataView",
    "getUint8",
    "c2",
    "c3",
    "readInt",
    "int",
    "getInt32",
    "short",
    "getInt16",
    "readDouble",
    "double",
    "getFloat64",
    "pa",
    "Uint32Array",
    "awayjs-core/lib/utils/CSS",
    "CSS",
    "setElementSize",
    "style",
    "setElementWidth",
    "setElementHeight",
    "setElementX",
    "setElementY",
    "getElementVisibility",
    "visibility",
    "setElementVisibility",
    "visible",
    "setElementAlpha",
    "alpha",
    "HTMLCanvasElement",
    "globalAlpha",
    "setElementPosition",
    "absolute",
    "float32Color",
    "ARGBtoFloat32",
    "componentToHex",
    "hex",
    "RGBToHexString",
    "ARGBToHexString",
    "awayjs-core/lib/utils/Debug",
    "Debug",
    "breakpoint",
    "throwPIROnKeyWordOnly",
    "enable",
    "keyword",
    "throwPIR",
    "clss",
    "fnc",
    "msg",
    "logPIR",
    "THROW_ERRORS",
    "LOG_PI_ERRORS",
    "args",
    "_i",
    "ENABLE_LOG",
    "awayjs-core/lib/utils/Extensions",
    "Extensions",
    "SIMD",
    "Boolean",
    "awayjs-core/lib/utils/IArrayBufferViewClass",
    "image2D",
    "isHTMLImageElementValid",
    "MAX_SIZE",
    "isPowerOfTwo",
    "getBestPowerOf2",
    "awayjs-core/lib/utils/MipmapGenerator",
    "MipmapGenerator",
    "_generateMipMaps",
    "output",
    "_getMipmapHolder",
    "_matrix",
    "bitmapImage",
    "downsampleImage",
    "mipMapHolder",
    "newW",
    "newH",
    "_freeMipMapHolder",
    "_mipMaps",
    "_mipMapUses",
    "holderWidth",
    "holderHeight",
    "destBitmap",
    "BoxFilter",
    "xkernel",
    "PolyphaseKernel",
    "ykernel",
    "tempBitmap",
    "iscale",
    "kernelLength",
    "kernelWidth",
    "kernelWindowSize",
    "sumR",
    "sumG",
    "sumB",
    "sumA",
    "windowSize",
    "colorR",
    "colorG",
    "colorB",
    "colorA",
    "valueAt",
    "srcLength",
    "dstLength",
    "samples",
    "sum",
    "isamples",
    "evaluate",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "RequestAnimationFrame",
    "callback",
    "callbackContext",
    "_active",
    "_argsArray",
    "_getTimer",
    "setCallback",
    "_rafUpdateFunction",
    "_tick",
    "_dt",
    "_callback",
    "_callbackContext",
    "_prevTime",
    "requestAnimationFrame",
    "delay",
    "repeatCount",
    "_repeatCount",
    "_currentCount",
    "_running",
    "_delay",
    "clearInterval",
    "_iid",
    "setInterval",
    "tick",
    "node",
    "tag",
    "fragment",
    "createDocumentFragment",
    "num",
    "childNodes",
    "child",
    "nodeName",
    "appendChild",
    "filterListByParam",
    "paramName",
    "paramValue",
    "attributes",
    "getNamedItem",
    "DOMParser",
    "parseFromString",
    "nodeToString",
    "XMLSerializer",
    "serializeToString",
    "attrName",
    "attrs",
    "attribute",
    "writeAttributeValue",
    "attrValue",
    "Attr",
    "setNamedItem",
    "hasAttribute",
    "now"
  ],
  "mappings": "AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAR,UAAA,YAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,GAAAL,SAAAT,UAAA,YAAAA,OAAA,KAAA,GAAAM,GAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,+CAAA,SAAAjB,EAAAkB,EAAAJ,GCCA,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GCFtB,IAAOG,GAAS5B,EAAc,oCAE9B,IAAM6B,GAAgB,SAAAC,GAASX,EAAzBU,EAAgBC,EA6FrB,SA7FKD,GA6FOE,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAE9BF,EAAAf,KAAAK,KA3FOA,MAAAa,OAAgB,CAChBb,MAAAc,QAAiB,CACjBd,MAAAe,WAAoB,CAMpBf,MAAAgB,SAAyB,GAAIC,MAqFpCjB,MAAKc,QAAUd,KAAKe,WAAaJ,CACjCX,MAAKa,OAASD,CAEdZ,MAAKkB,QAAU,GAAIC,aAAYnB,KAAKc,QAAQd,KAAKa,OACjDb,MAAKoB,YAAc,GAAIC,YAAWrB,KAAKkB,QAAS,EAAGlB,KAAKkB,QAAQI,YAlFjEC,OAAAC,eAAWf,EAAAF,UAAA,aDOJkB,ICPP,WAEC,MAAOhB,GAAiBiB,WDQlBC,WAAY,KACZC,aAAc,MCNrBL,QAAAC,eAAWf,EAAAF,UAAA,UDSJkB,ICTP,WAEC,GAAIzB,KAAK6B,aACR7B,KAAK8B,eAEN,OAAO9B,MAAKc,SDSNiB,ICNP,SAAkBC,GAEjB,GAAIhC,KAAKe,YAAciB,EACtB,MAEDhC,MAAKe,WAAaiB,CAElBhC,MAAKiC,UDKCN,WAAY,KACZC,aAAc,MCHrBL,QAAAC,eAAWf,EAAAF,UAAA,SDMJkB,ICNP,WAEC,MAAOzB,MAAKa,QDONkB,ICJP,SAAiBC,GAEhB,GAAIhC,KAAKa,QAAUmB,EAClB,MAEDhC,MAAKa,OAASmB,CAEdhC,MAAKiC,UDGCN,WAAY,KACZC,aAAc,MCArBL,QAAAC,eAAWf,EAAAF,UAAA,UDGJkB,ICHP,WAEC,GAAIzB,KAAK6B,aACR7B,KAAK8B,eAEN9B,MAAKkC,cAAgB,KAErB,OAAOlC,MAAKkB,SDENS,WAAY,KACZC,aAAc,MCCrBL,QAAAC,eAAWf,EAAAF,UAAA,cDEJkB,ICFP,WAEC,GAAIzB,KAAK6B,aACR7B,KAAK8B,eAEN9B,MAAKkC,cAAgB,KAErB,OAAOlC,MAAKoB,aDCNW,ICEP,SAAsBC,GAErBhC,KAAKoB,YAAcY,CACnBhC,MAAKkB,QAAUlB,KAAKoB,YAAYe,QDD1BR,WAAY,KACZC,aAAc,MCGrBL,QAAAC,eAAWf,EAAAF,UAAA,UDAJkB,ICAP,WAEC,MAAOzB,MAAKa,OAAOb,KAAKW,QDClBgB,WAAY,KACZC,aAAc,MCkBdnB,GAAAF,UAAA6B,WAAP,WAEC,GAAIpC,KAAKkC,cACR,MAEDxB,GAAAH,UAAM6B,WAAUzC,KAAAK,KAEhBA,MAAKkC,cAAgB,KAOfzB,GAAAF,UAAA0B,OAAP,WAEC,GAAIjC,KAAK6B,aACR,MAED7B,MAAKqC,OAELrC,MAAK6B,aAAe,IAGpB,KAAK7B,KAAKe,WAAY,CACrBf,KAAKkB,QAAU,IACflB,MAAKoB,YAAc,MAIdX,GAAAF,UAAA+B,MAAP,WAEC,GAAIC,GAAoC,GAAI9B,GAAiBT,KAAKc,QAASd,KAAKa,OAChF0B,GAAiBC,WAAWT,IAAI/B,KAAKwC,WAErC,IAAIC,GAAazC,KAAKgB,SAASpB,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIoD,EAAKpD,IAC/BW,KAAKgB,SAAS3B,GAAGqD,KAAKC,eAAeJ,EAEtC,OAAOA,GAGD9B,GAAAF,UAAAqC,QAAP,SAAeC,GAEd,GAAIA,EAAQ7C,KAAKgB,SAASpB,OACzB,MAAOI,MAAKgB,SAAS6B,GAAOH,IAE7B,OAAO,MAGDjC,GAAAF,UAAAuC,eAAP,SAAsBC,EAAkBC,EAAiCC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExE,GAAIC,GAAoBF,YAA2B3B,YAA0B2B,EAAkB,GAAI3B,YAAW2B,EAAgBb,OAE9H,IAAIgB,GAAgBnD,KAAKgB,SAAS+B,EAClC,IAAIK,GAAiBD,EAAOvD,MAC5B,IAAIyD,GAAiBF,EAAOF,MAC5B,IAAIK,GAAgBJ,EAAMtD,OAAOwD,CAGjC,IAAIpD,KAAKY,MAAQ0C,EAASL,EACzBjD,KAAKY,MAAQ0C,EAASL,CAEvB,IAAIjD,KAAK6B,aACR7B,KAAK8B,eAGN,IAAI9B,KAAKgB,SAASpB,QAAU,EAAG,CAC9BI,KAAKoB,YAAYW,IAAImB,OACf,CACN,IAAK,GAAI7D,GAAW,EAAGA,EAAIiE,EAAQjE,IAClCW,KAAKoB,YAAYW,IAAImB,EAAMK,SAASlE,EAAE+D,GAAU/D,EAAE,GAAG+D,IAAW/D,EAAE4D,GAAQjD,KAAKc,QAAUuC,GAG3FrD,KAAKoC,aAGC3B,GAAAF,UAAAiD,qBAAP,SAA4BT,GAE3B,GAAII,GAAgBnD,KAAKgB,SAAS+B,EAClC,IAAIK,GAAiBD,EAAOvD,MAC5B,IAAIyD,GAAiBF,EAAOF,MAE5B,IAAIjD,KAAK6B,aACR7B,KAAK8B,eAGN,IAAI9B,KAAKgB,SAASpB,QAAU,EAC3B,MAAOI,MAAKkB,OAEb,IAAIuC,GAA0B,GAAItC,aAAYnB,KAAKa,OAAOuC,EAC1D,IAAIM,GAA6B,GAAIrC,YAAWoC,EAEhD,KAAK,GAAIpE,GAAW,EAAGA,EAAIW,KAAKa,OAAQxB,IACvCqE,EAAgB3B,IAAI/B,KAAKoB,YAAYmC,SAASlE,EAAEW,KAAKc,QAAUuC,EAAShE,EAAEW,KAAKc,QAAUuC,EAAUD,GAAU/D,EAAE+D,EAEhH,OAAOK,GAGDhD,GAAAF,UAAAoD,SAAP,SAAgBjB,GAEf,GAAIS,GAAgB,GAAIS,GAAOlB,EAC/B,IAAID,GAAazC,KAAKgB,SAASpB,MAE/BuD,GAAOF,OAASR,EAAKzC,KAAKgB,SAASyB,EAAM,GAAGQ,OAASjD,KAAKgB,SAASyB,EAAM,GAAG7C,OAAS,CAErFI,MAAKgB,SAAS6C,KAAKV,EAEnB,IAAInD,KAAKe,WAAaoC,EAAOF,OAASE,EAAOvD,OAAQ,CACpDI,KAAKe,WAAaoC,EAAOF,OAASE,EAAOvD,MACzCI,MAAKiC,SAGNS,EAAKoB,OAASrB,EAGRhC,GAAAF,UAAAwD,YAAP,SAAmBrB,GAElB,GAAIK,GAAmBL,EAAKoB,MAC5B,IAAIX,GAAgBnD,KAAKgB,SAASgD,OAAOjB,EAAW,GAAG,EACvD,IAAIN,GAAazC,KAAKgB,SAASpB,MAE/BuD,GAAOc,SAEP,KAAK,GAAI5E,GAAW0D,EAAW1D,EAAIoD,EAAKpD,IAAK,CAC5C8D,EAASnD,KAAKgB,SAAS3B,EACvB8D,GAAOF,OAAS5D,EAAGW,KAAKgB,SAAS3B,EAAI,GAAG4D,OAASjD,KAAKgB,SAAS3B,EAAI,GAAGO,OAAS,CAC/EuD,GAAOT,KAAKoB,OAASzE,EAGtBW,KAAKe,WAAaoC,EAAOF,OAASE,EAAOvD,MAEzCI,MAAKiC,SAGCxB,GAAAF,UAAA2D,WAAP,SAAkBnB,GAEjB,MAAO/C,MAAKgB,SAAS+B,GAAWE,OAG1BxC,GAAAF,UAAAuB,cAAP,WAEC9B,KAAK6B,aAAe,KAEpB,IAAIxC,EACJ,IAAI8E,EACJ,IAAI1B,GAAazC,KAAKgB,SAASpB,MAE/B,IAAIwE,GAAmBpE,KAAKe,WAAWf,KAAKa,MAE5C,KAAKb,KAAKkB,SAAWlB,KAAKkB,QAAQI,YAAc8C,EAAW,CAC1D,GAAIC,GAAwB,GAAIlD,aAAYiD,EAC5C,IAAIE,GAAqB,GAAIjD,YAAWgD,EAAW,EAAGA,EAAU/C,WAChE,IAAI6B,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIkB,EAEJ,IAAIvE,KAAKc,SAAWd,KAAKe,WAAY,CACpC,IAAK1B,EAAI,EAAGA,EAAIoD,EAAKpD,IAAK,CACzB8D,EAASnD,KAAKgB,SAAS3B,EACvB+D,GAAUD,EAAOvD,MACjByD,GAAUF,EAAOF,MACjBsB,GAAapB,EAAOqB,SACpB,KAAKL,EAAI,EAAGA,EAAInE,KAAKa,OAAQsD,IAC5B,GAAII,GAAc,KACjBD,EAAQvC,IAAI,GAAIV,YAAWrB,KAAKkB,QAASiD,EAAEnE,KAAKc,QAAUyD,EAAYnB,GAAUe,EAAEnE,KAAKe,WAAasC,EAEtGF,GAAOqB,UAAYrB,EAAOF,OAG3BjD,KAAKc,QAAUd,KAAKe,eACd,CACNuD,EAAQvC,IAAI,GAAIV,YAAWrB,KAAKkB,QAAS,EAAGuD,KAAKC,IAAIN,EAAWpE,KAAKkB,QAAQI,cAG9EtB,KAAKkB,QAAUmD,CACfrE,MAAKoB,YAAckD,GA1RP7D,GAAAiB,UAAmB,2BA6RlC,OAAAjB,IA/R+BD,EAiS/B,IAAMoD,GAAM,WAUX,QAVKA,GAUOlB,GAEX1C,KAAK0C,KAAOA,CACZ1C,MAAKJ,OAAS8C,EAAKiC,KAAKjC,EAAKkC,WAGvBhB,EAAArD,UAAA0D,QAAP,WAECjE,KAAK0C,KAAO,KAGNkB,GAAArD,UAAA+B,MAAP,WAEC,MAAO,IAAIsB,GAAO5D,KAAK0C,MAEzB,OAAAkB,KAE0B9D,GAAAJ,QAAjBe,IDzENoE,oCAAoC,sCAAsCC,6CAA6C,SAASlG,EAAQkB,EAAOJ,GAClJ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GE7PtB,IAAOI,GAAgB7B,EAAa,8CAEpC,IAAO4B,GAAS5B,EAAc,oCAG9B,IAAMmG,GAAc,SAAArE,GAASX,EAAvBgF,EAAcrE,EAgGnB,SAhGKqE,GAgGOC,EAAkCJ,EAAmBK,GAAA,GAAAA,QAAA,GAA6B,CAA7BA,EAAA,EAEhEvE,EAAAf,KAAAK,KAEAA,MAAKkF,YAAcF,CACnBhF,MAAKmF,MAAQH,EAAWI,iBACxBpF,MAAKqF,YAAcT,CACnB5E,MAAKsF,kBAAqBL,YAAiCxE,GAAsCwE,EAAwB,GAAIxE,GAAiBT,KAAKqF,YAAYrF,KAAKmF,MAAOF,EAE3KjF,MAAKsF,kBAAkB3B,SAAS3D,MAlGjCuB,OAAAC,eAAWuD,EAAAxE,UAAA,aFoQJkB,IEpQP,WAEC,MAAOsD,GAAerD,WFqQhBC,WAAY,KACZC,aAAc,MEtPrBL,QAAAC,eAAWuD,EAAAxE,UAAA,UFyPJkB,IEzPP,WAEC,MAAOzB,MAAKsF,mBF0PN3D,WAAY,KACZC,aAAc,MEpPrBL,QAAAC,eAAWuD,EAAAxE,UAAA,QF2PJkB,IE3PP,WAEC,MAAOzB,MAAKmF,OF4PNpD,IEzPP,SAAgBC,GAEf,GAAIhC,KAAKmF,OAASnD,EACjB,MAEDhC,MAAKmF,MAAQnD,CAEbhC,MAAKsF,kBAAkBvB,YAAY/D,KACnCA,MAAKsF,kBAAkB3B,SAAS3D,OFwP1B2B,WAAY,KACZC,aAAc,MElPrBL,QAAAC,eAAWuD,EAAAxE,UAAA,cFyPJkB,IEzPP,WAEC,MAAOzB,MAAKqF,aF0PNtD,IEvPP,SAAsBC,GAErB,GAAIhC,KAAKqF,aAAerD,EACvB,MAEDhC,MAAKqF,YAAcrD,CAGnBhC,MAAKsF,kBAAkBvB,YAAY/D,KACnCA,MAAKsF,kBAAkB3B,SAAS3D,OFsP1B2B,WAAY,KACZC,aAAc,MEpPrBL,QAAAC,eAAWuD,EAAAxE,UAAA,SFuPJkB,IEvPP,WAEC,MAAOzB,MAAKsF,kBAAkB1E,OFwPxBmB,IErPP,SAAiBC,GAEhBhC,KAAKsF,kBAAkB1E,MAAQoB,GFsPzBL,WAAY,KACZC,aAAc,MEpPrBL,QAAAC,eAAWuD,EAAAxE,UAAA,UFuPJkB,IEvPP,WAEC,MAAOzB,MAAKsF,kBAAkBpB,WAAWlE,KAAK8D,SFwPxCnC,WAAY,KACZC,aAAc,MEtPrBL,QAAAC,eAAWuD,EAAAxE,UAAA,UFyPJkB,IEzPP,WAEC,MAAOzB,MAAKsF,kBAAkB1E,MAAMZ,KAAKqF,aF0PnC1D,WAAY,KACZC,aAAc,MErOdmD,GAAAxE,UAAAwB,IAAP,SAAWwD,EAAYtC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBjD,KAAKsF,kBAAkBxC,eAAe9C,KAAK8D,OAASyB,YAAkBtE,OAAQ,GAAKjB,MAAgB,YAAEuF,GAA4BA,EAAQtC,EAEzIjD,MAAKwF,kBAAoB,KAGnBT,GAAAxE,UAAAkB,IAAP,SAAWb,EAAcqC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,IAAKjD,KAAKwF,kBACTxF,KAAKwF,kBAAoBxF,KAAKsF,kBAAkB9B,qBAAqBxD,KAAK8D,OAE3E,IAAIrB,GAAazC,KAAKqF,YAAYrF,KAAKmF,KACvC,OAAO,IAAKnF,MAAgB,YAAEA,KAAKwF,kBAAmBvC,EAAOR,EAAK7B,EAAMZ,KAAKqF,aAGvEN,GAAAxE,UAAAoC,eAAP,SAAsBJ,GAErB,MAAQvC,MAAKyF,YAAc,GAAIV,GAAe/E,KAAKkF,YAAalF,KAAKqF,YAAa9C,GAG5EwC,GAAAxE,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,GAAIA,EACHvC,KAAK2C,eAAeJ,EAErB,KAAKvC,KAAKyF,YACTzF,KAAKsF,kBAAkBhD,OAExB,IAAIoD,GAA4B1F,KAAKyF,WACrCzF,MAAKyF,YAAc,IAEnB,OAAOC,GAMDX,GAAAxE,UAAA0D,QAAP,WAEC,IAAKjE,KAAKsF,kBACT,MAEDtF,MAAKsF,kBAAkBvB,YAAY/D,KACnCA,MAAKsF,kBAAoB,IACzBtF,MAAKwF,kBAAoB,KAzJZT,GAAArD,UAAmB,6BA2JlC,OAAAqD,IA7J6BvE,EA+J7BV,GAAwBJ,QAAfqF,IF8NNlF,8CAA8C,8CAA8CgF,oCAAoC,sCAAsCc,8CAA8C,SAAS/G,EAAQkB,EAAOJ,GAC/O,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GGtYtB,IAAO0E,GAAcnG,EAAa,4CAGlC,IAAMgH,GAAe,SAAAlF,GAASX,EAAxB6F,EAAelF,EAkBpB,SAlBKkF,GAkBOC,EAA6BC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAExCpF,EAAAf,KAAAK,KAAM8F,EAAUzE,WAAa0E,UAAW,EAAGF,GAZ5CtE,OAAAC,eAAWoE,EAAArF,UAAA,aHyYJkB,IGzYP,WAEC,MAAOmE,GAAgBlE,WH0YjBC,WAAY,KACZC,aAAc,MG1XdgE,GAAArF,UAAAwB,IAAP,SAAWwD,EAAYtC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBvC,EAAAH,UAAMwB,IAAGpC,KAAAK,KAACuF,EAAQtC,GAKZ2C,GAAArF,UAAAkB,IAAP,SAAWb,EAAcqC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,MAAOvC,GAAAH,UAAMkB,IAAG9B,KAAAK,KAACY,EAAOqC,GAGlB2C,GAAArF,UAAAoC,eAAP,SAAsBJ,GAErB,MAAQvC,MAAKyF,YAAc,GAAIG,GAAgBrD,EAAkBvC,KAAKkF,aAAe7D,YAG/EuE,GAAArF,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,MAAyB7B,GAAAH,UAAM+B,MAAK3C,KAAAK,KAACuC,GA5CxBqD,GAAAlE,UAAmB,8BA8ClC,OAAAkE,IAhD8Bb,EAkD9BjF,GAAyBJ,QAAhBkG,IHyXNd,4CAA4C,8CAA8CkB,+CAA+C,SAASpH,EAAQkB,EAAOJ,GACpK,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GInbtB,IAAO0E,GAAcnG,EAAa,4CAGlC,IAAMqH,GAAgB,SAAAvF,GAASX,EAAzBkG,EAAgBvF,EAkBrB,SAlBKuF,GAkBOJ,GAEXnF,EAAAf,KAAAK,KAAMkG,aAAc,EAAGL,GAZxBtE,OAAAC,eAAWyE,EAAA1F,UAAA,aJqbJkB,IIrbP,WAEC,MAAOwE,GAAiBvE,WJsblBC,WAAY,KACZC,aAAc,MIxadqE,GAAA1F,UAAAwB,IAAP,SAAWwD,EAAYtC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBvC,EAAAH,UAAMwB,IAAGpC,KAAAK,KAACuF,EAAQtC,GAGZgD,GAAA1F,UAAAkB,IAAP,SAAWb,EAAcqC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,MAAsBvC,GAAAH,UAAMkB,IAAG9B,KAAAK,KAACY,EAAOqC,GAGjCgD,GAAA1F,UAAAoC,eAAP,SAAsBJ,GAErB,MAAQvC,MAAKyF,YAAc,GAAIQ,GAAiB1D,GAG1C0D,GAAA1F,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,MAA0B7B,GAAAH,UAAM+B,MAAK3C,KAAAK,KAACuC,GAxCzB0D,GAAAvE,UAAmB,+BA0ClC,OAAAuE,IA5C+BlB,EA8C/BjF,GAA0BJ,QAAjBuG,IJyaNnB,4CAA4C,8CAA8CqB,+CAA+C,SAASvH,EAAQkB,EAAOJ,GACpK,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GK/dtB,IAAO0E,GAAcnG,EAAa,4CAGlC,IAAMwH,GAAgB,SAAA1F,GAASX,EAAzBqG,EAAgB1F,EAkBrB,SAlBK0F,GAkBOP,GAEXnF,EAAAf,KAAAK,KAAMkG,aAAc,EAAGL,GAZxBtE,OAAAC,eAAW4E,EAAA7F,UAAA,aLieJkB,IKjeP,WAEC,MAAO2E,GAAiB1E,WLkelBC,WAAY,KACZC,aAAc,MKpddwE,GAAA7F,UAAAwB,IAAP,SAAWwD,EAAYtC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBvC,EAAAH,UAAMwB,IAAGpC,KAAAK,KAACuF,EAAQtC,GAGZmD,GAAA7F,UAAAkB,IAAP,SAAWb,EAAcqC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,MAAsBvC,GAAAH,UAAMkB,IAAG9B,KAAAK,KAACY,EAAOqC,GAGjCmD,GAAA7F,UAAAoC,eAAP,SAAsBJ,GAErB,MAAQvC,MAAKyF,YAAc,GAAIW,GAAiB7D,GAG1C6D,GAAA7F,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,MAA0B7B,GAAAH,UAAM+B,MAAK3C,KAAAK,KAACuC,GAxCzB6D,GAAA1E,UAAmB,+BA0ClC,OAAA0E,IA5C+BrB,EA8C/BjF,GAA0BJ,QAAjB0G,ILqdNtB,4CAA4C,8CAA8CuB,+CAA+C,SAASzH,EAAQkB,EAAOJ,GACpK,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GM3gBtB,IAAO0E,GAAcnG,EAAa,4CAGlC,IAAM0H,GAAgB,SAAA5F,GAASX,EAAzBuG,EAAgB5F,EAkBrB,SAlBK4F,GAkBOT,GAEXnF,EAAAf,KAAAK,KAAMkG,aAAc,EAAGL,GAZxBtE,OAAAC,eAAW8E,EAAA/F,UAAA,aN6gBJkB,IM7gBP,WAEC,MAAO6E,GAAiB5E,WN8gBlBC,WAAY,KACZC,aAAc,MMhgBd0E,GAAA/F,UAAAwB,IAAP,SAAWwD,EAAYtC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBvC,EAAAH,UAAMwB,IAAGpC,KAAAK,KAACuF,EAAQtC,GAGZqD,GAAA/F,UAAAkB,IAAP,SAAWb,EAAcqC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,MAAsBvC,GAAAH,UAAMkB,IAAG9B,KAAAK,KAACY,EAAOqC,GAGjCqD,GAAA/F,UAAAoC,eAAP,SAAsBJ,GAErB,MAAQvC,MAAKyF,YAAc,GAAIa,GAAiB/D,GAG1C+D,GAAA/F,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,MAA0B7B,GAAAH,UAAM+B,MAAK3C,KAAAK,KAACuC,GAxCzB+D,GAAA5E,UAAmB,+BA0ClC,OAAA4E,IA5C+BvB,EA8C/BjF,GAA0BJ,QAAjB4G,INigBNxB,4CAA4C,8CAA8CyB,+CAA+C,SAAS3H,EAAQkB,EAAOJ,GACpK,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GOvjBtB,IAAO0E,GAAcnG,EAAa,4CAGlC,IAAM4H,GAAgB,SAAA9F,GAASX,EAAzByG,EAAgB9F,EAkBrB,SAlBK8F,GAkBOX,GAEXnF,EAAAf,KAAAK,KAAMkG,aAAc,EAAGL,GAZxBtE,OAAAC,eAAWgF,EAAAjG,UAAA,aPyjBJkB,IOzjBP,WAEC,MAAO+E,GAAiB9E,WP0jBlBC,WAAY,KACZC,aAAc,MO5iBd4E,GAAAjG,UAAAwB,IAAP,SAAWwD,EAAYtC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBvC,EAAAH,UAAMwB,IAAGpC,KAAAK,KAACuF,EAAQtC,GAGZuD,GAAAjG,UAAAkB,IAAP,SAAWb,EAAcqC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,MAAsBvC,GAAAH,UAAMkB,IAAG9B,KAAAK,KAACY,EAAOqC,GAGjCuD,GAAAjG,UAAAoC,eAAP,SAAsBJ,GAErB,MAAQvC,MAAKyF,YAAc,GAAIe,GAAiBjE,GAG1CiE,GAAAjG,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,MAA0B7B,GAAAH,UAAM+B,MAAK3C,KAAAK,KAACuC,GAxCzBiE,GAAA9E,UAAmB,+BA0ClC,OAAA8E,IA5C+BzB,EA8C/BjF,GAA0BJ,QAAjB8G,IP6iBN1B,4CAA4C,8CAA8C2B,+CAA+C,SAAS7H,EAAQkB,EAAOJ,GACpK,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GQnmBtB,IAAO0E,GAAcnG,EAAa,4CAGlC,IAAM8H,GAAgB,SAAAhG,GAASX,EAAzB2G,EAAgBhG,EAkBrB,SAlBKgG,GAkBOb,EAA6BC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAExCpF,EAAAf,KAAAK,KAAM8F,EAAUa,YAAcC,WAAY,EAAGf,GAZ9CtE,OAAAC,eAAWkF,EAAAnG,UAAA,aRsmBJkB,IQtmBP,WAEC,MAAOiF,GAAiBhF,WRumBlBC,WAAY,KACZC,aAAc,MQxlBd8E,GAAAnG,UAAAwB,IAAP,SAAWwD,EAAYtC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBvC,EAAAH,UAAMwB,IAAGpC,KAAAK,KAACuF,EAAQtC,GAKZyD,GAAAnG,UAAAkB,IAAP,SAAWb,EAAcqC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,MAAOvC,GAAAH,UAAMkB,IAAG9B,KAAAK,KAACY,EAAOqC,GAGlByD,GAAAnG,UAAAoC,eAAP,SAAsBJ,GAErB,MAAQvC,MAAKyF,YAAc,GAAIiB,GAAiBnE,EAAkBvC,KAAKkF,aAAeyB,aAGhFD,GAAAnG,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,MAA0B7B,GAAAH,UAAM+B,MAAK3C,KAAAK,KAACuC,GA3CzBmE,GAAAhF,UAAmB,+BA6ClC,OAAAgF,IA/C+B3B,EAiDLjF,GAAAJ,QAAjBgH,IRulBN5B,4CAA4C,8CAA8C+B,+CAA+C,SAASjI,EAAQkB,EAAOJ,GACpK,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GShpBtB,IAAO0E,GAAcnG,EAAa,4CAGlC,IAAMkI,GAAgB,SAAApG,GAASX,EAAzB+G,EAAgBpG,EAkBrB,SAlBKoG,GAkBOjB,EAA6BC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAExCpF,EAAAf,KAAAK,KAAM8F,EAAUa,YAAcC,WAAY,EAAGf,GAZ9CtE,OAAAC,eAAWsF,EAAAvG,UAAA,aTmpBJkB,ISnpBP,WAEC,MAAOqF,GAAiBpF,WTopBlBC,WAAY,KACZC,aAAc,MSroBdkF,GAAAvG,UAAAwB,IAAP,SAAWwD,EAAYtC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtBvC,EAAAH,UAAMwB,IAAGpC,KAAAK,KAACuF,EAAQtC,GAKZ6D,GAAAvG,UAAAkB,IAAP,SAAWb,EAAcqC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExB,MAAOvC,GAAAH,UAAMkB,IAAG9B,KAAAK,KAACY,EAAOqC,GAGlB6D,GAAAvG,UAAAoC,eAAP,SAAsBJ,GAErB,MAAQvC,MAAKyF,YAAc,GAAIqB,GAAiBvE,EAAkBvC,KAAKkF,aAAeyB,aAGhFG,GAAAvG,UAAA+B,MAAP,SAAaC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,KAEZ,MAA0B7B,GAAAH,UAAM+B,MAAK3C,KAAAK,KAACuC,GA3CzBuE,GAAApF,UAAmB,+BA6ClC,OAAAoF,IA/C+B/B,EAiDLjF,GAAAJ,QAAjBoH,ITooBNhC,4CAA4C,8CAA8CiC,mCAAmC,SAASnI,EAAQkB,EAAOJ,GACxJ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GU7rBtB,IAAO2G,GAAYpI,EAAc,wCAKjC,IAAO4B,GAAS5B,EAAc,oCV6rB9B,IUxrBMqI,GAAS,SAAAvG,GAASX,EAAlBkH,EAASvG,EAoDd,SApDKuG,GAoDO9E,GAEXzB,EAAAf,KAAAK,KAjDOA,MAAAkH,QAAiB,CAmDxBlH,MAAKkB,QAAUiB,EA5ChBZ,OAAAC,eAAWyF,EAAA1G,UAAA,aV2rBJkB,IU3rBP,WAEC,MAAOwF,GAAUvF,WV4rBXC,WAAY,KACZC,aAAc,MU1rBrBL,QAAAC,eAAWyF,EAAA1G,UAAA,UV6rBJkB,IU7rBP,WAEC,MAAOzB,MAAKkH,SV8rBNnF,IU3rBP,SAAkBC,GAEjB,GAAIhC,KAAKkH,SAAWlF,EACnB,MAEDhC,MAAKkH,QAAUlF,CAEf,IAAIhC,KAAKmH,cACRnH,KAAKmH,cAAcC,OAASpH,KAAKkH,SV0rB5BvF,WAAY,KACZC,aAAc,MUxrBrBL,QAAAC,eAAWyF,EAAA1G,UAAA,eV2rBJkB,IU3rBP,WAEC,GAAIzB,KAAKmH,cACR,MAAOnH,MAAKmH,cAAcE,WAE3B,OAAO,IV2rBD1F,WAAY,KACZC,aAAc,MUzrBrBL,QAAAC,eAAWyF,EAAA1G,UAAA,YV4rBJkB,IU5rBP,WAEC,GAAIzB,KAAKmH,cACR,MAAOnH,MAAKmH,cAAcG,QAE3B,OAAO,IV4rBD3F,WAAY,KACZC,aAAc,MUhrBdqF,GAAA1G,UAAA0D,QAAP,WAECjE,KAAKuH,OAGCN,GAAA1G,UAAAiH,KAAP,SAAYvE,EAAewE,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,MAE1BzH,KAAKmH,cAAgBH,EAAaU,WAAW1H,KAAKkB,QAAQI,WAE1D,IAAItB,KAAKmH,cAAe,CACvBnH,KAAKmH,cAAcC,OAASpH,KAAKkH,OACjClH,MAAKmH,cAAcK,KAAKxH,KAAKkB,QAAS+B,EAAQwE,EAAMzH,KAAK2H,KAIpDV,GAAA1G,UAAAgH,KAAP,WAEC,GAAIvH,KAAKmH,cACRnH,KAAKmH,cAAcI,aAEbvH,MAAKmH,aACZnH,MAAKmH,cAAgB,KAGfF,GAAA1G,UAAA+B,MAAP,WAEC,GAAIsF,GAAwB,GAAIX,GAAUjH,KAAKkB,QAE/C0G,GAAYC,KAAO7H,KAAK6H,IAExB,OAAOD,GAvFMX,GAAAvF,UAAmB,mBAyFlC,OAAAuF,IA3FwBzG,EA6FxBV,GAAmBJ,QAAVuH,IV2qBNpC,oCAAoC,oCAAoCiD,wCAAwC,0CAA0CC,8CAA8C,SAASnJ,EAAQkB,EAAOJ,GACnO,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GWxxBtB,IAAO2H,GAASpJ,EAAc,mCX+xB9B,IWzxBMqJ,GAAmB,SAAAvH,GAASX,EAA5BkI,EAAmBvH,EAOxB,SAPKuH,GAOOC,EAAuBP,GAAvB,GAAAO,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAP,QAAA,GAAa,CAAbA,EAAA,EAElCjH,EAAAf,KAAAK,KAAMkI,GAAW,gJAAiJP,GAEpK,MAAAM,IAXkCD,EAaLlI,GAAAJ,QAApBuI,IX4xBNE,mCAAmC,qCAAqCC,wCAAwC,SAASxJ,EAAQkB,EAAOJ,GAC3I,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GYpzBtB,IAAO2H,GAASpJ,EAAc,mCZ2zB9B,IYrzBMyJ,GAAa,SAAA3H,GAASX,EAAtBsI,EAAa3H,EAQlB,SARK2H,GAQOH,EAAuBP,GAAvB,GAAAO,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAP,QAAA,GAAa,CAAbA,EAAA,EAElCjH,EAAAf,KAAAK,KAAMkI,GAAW,gBAAiBP,GAEpC,MAAAU,IAZ4BL,EAcLlI,GAAAJ,QAAd2I,IZwzBNF,mCAAmC,qCAAqCG,wCAAwC,SAAS1J,EAAQkB,EAAOJ,GAC3I,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Gaj1BtB,IAAO2H,GAASpJ,EAAc,mCAE9B,IAAM2J,GAAa,SAAA7H,GAASX,EAAtBwI,EAAa7H,EAIlB,SAJK6H,GAIOL,EAAkCP,GAAlC,GAAAO,QAAA,GAAgC,CAAhCA,EAAA,gBAAkC,GAAAP,QAAA,GAAa,CAAbA,EAAA,EAE7CjH,EAAAf,KAAAK,KAAMkI,EAASP,GAJFY,EAAAC,wBAAiC,sBAMhD,OAAAD,IAR4BP,EAU5BlI,GAAuBJ,QAAd6I,Ibo1BNJ,mCAAmC,qCAAqCA,oCAAoC,SAASvJ,EAAQkB,EAAOJ,Gch2BvI,GAAMsI,GAAS,WAOd,QAPKA,GAOOE,EAAqBP,EAAec,GAApC,GAAAP,QAAA,GAAmB,CAAnBA,EAAA,GAAqB,GAAAP,QAAA,GAAa,CAAbA,EAAA,EAAe,GAAAc,QAAA,GAAiB,CAAjBA,EAAA,GAJxCzI,KAAA0I,SAAkB,CAClB1I,MAAA2I,UAAmB,EACnB3I,MAAAyI,MAAe,EAKtBzI,MAAK2I,UAAYT,CACjBlI,MAAKyI,MAAQZ,IACb7H,MAAK0I,SAAWf,EAQjBpG,OAAAC,eAAWwG,EAAAzH,UAAA,Wd81BJkB,Ic91BP,WAEC,MAAOzB,MAAK2I,Wdm2BN5G,Ic51BP,SAAmBC,GAElBhC,KAAK2I,UAAY3G,Gd61BXL,WAAY,KACZC,aAAc,Mcv1BrBL,QAAAC,eAAWwG,EAAAzH,UAAA,Qd81BJkB,Ic91BP,WAGC,MAAOzB,MAAKyI,Odk2BN1G,Ic11BP,SAAgBC,GAGfhC,KAAKyI,MAAQzG,Gd01BPL,WAAY,KACZC,aAAc,Mcn1BrBL,QAAAC,eAAWwG,EAAAzH,UAAA,Wd01BJkB,Ic11BP,WAGC,MAAOzB,MAAK0I,Ud01BN/G,WAAY,KACZC,aAAc,Mcv1BtB,OAAAoG,KAEAlI,GAAmBJ,QAAVsI,Od21BHY,qDAAqD,SAAShK,EAAQkB,EAAOJ,GACnF,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Ger6BtB,IAAO2H,GAASpJ,EAAc,mCf46B9B,Iet6BMiK,GAA0B,SAAAnI,GAASX,EAAnC8I,EAA0BnI,EAO/B,SAPKmI,GAOOC,EAAwBnB,GAAxB,GAAAmB,QAAA,GAAsB,CAAtBA,EAAA,GAAwB,GAAAnB,QAAA,GAAa,CAAbA,EAAA,EAEnCjH,EAAAf,KAAAK,KAAM,sFAAwF8I,EAAYnB,GAE5G,MAAAkB,IAXyCb,EAazClI,GAAoCJ,QAA3BmJ,Ify6BNV,mCAAmC,qCAAqCY,qCAAqC,SAASnK,EAAQkB,EAAOJ,GACxI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgBj8BtB,IAAO2H,GAASpJ,EAAc,mChBw8B9B,IgBl8BMoK,GAAU,SAAAtI,GAASX,EAAnBiJ,EAAUtI,EAQf,SARKsI,GAQOd,EAAuBP,GAAvB,GAAAO,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAP,QAAA,GAAa,CAAbA,EAAA,EAElCjH,EAAAf,KAAAK,KAAMkI,GAAW,aAAcP,GAEjC,MAAAqB,IAZyBhB,EAczBlI,GAAoBJ,QAAXsJ,IhBq8BNb,mCAAmC,qCAAqCc,qCAAqC,SAASrK,EAAQkB,EAAOJ,GACxI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiB79BtB,IAAO6I,GAAStK,EAAc,mCjBm+B9B,IiB99BMuK,GAAU,SAAAzI,GAASX,EAAnBoJ,EAAUzI,EAqDf,SArDKyI,GAqDOC,EAAaC,EAAcC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEtC5I,EAAAf,KAAAK,KAAMoJ,EAENpJ,MAAKuJ,OAASF,CACdrJ,MAAKwJ,UAAYF,GAAYtJ,KAAKuJ,OAAO1B,KAM1CtG,OAAAC,eAAW2H,EAAA5I,UAAA,SjB66BJkB,IiB76BP,WAEC,MAAOzB,MAAKuJ,QjB86BN5H,WAAY,KACZC,aAAc,MiBz6BrBL,QAAAC,eAAW2H,EAAA5I,UAAA,YjB+6BJkB,IiB/6BP,WAEC,MAAOzB,MAAKwJ,WjBg7BN7H,WAAY,KACZC,aAAc,MiB36BduH,GAAA5I,UAAA+B,MAAP,WAEC,MAAO,IAAI6G,GAAWnJ,KAAKoJ,KAAMpJ,KAAKuJ,OAAQvJ,KAAKwJ,WA7EtCL,GAAAM,WAAoB,YAKpBN,GAAAO,QAAiB,SAKjBP,GAAAQ,MAAe,OAKfR,GAAAS,OAAgB,QAKhBT,GAAAU,YAAqB,YAKrBV,GAAAW,WAAoB,WAKpBX,GAAAY,wBAAiC,uBAKjCZ,GAAAa,eAAwB,eAKxBb,GAAAc,mBAA4B,kBAuC3C,OAAAd,IApFyBD,EAsFzBpJ,GAAoBJ,QAAXyJ,IjBq9BNe,mCAAmC,qCAAqCA,oCAAoC,SAAStL,EAAQkB,EAAOJ,GkBjjCvI,GAAMwJ,GAAS,WAgBd,QAhBKA,GAgBOE,GATLpJ,KAAAoJ,KAAce,SAOdnK,MAAAoK,OAAaD,SAInBnK,MAAKoJ,KAAOA,EAONF,EAAA3I,UAAA+B,MAAP,WAEC,MAAO,IAAI4G,GAAUlJ,KAAKoJ,MAE5B,OAAAF,KAEmBpJ,GAAAJ,QAAVwJ,OlB8iCHmB,0CAA0C,SAASzL,EAAQkB,EAAOJ,GAOxE,GmB5kCM4K,GAAe,WAKpB,QALKA,GAKOF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAHJpK,KAAAuK,gBAAwC,GAAItJ,MAKnDjB,MAAKoK,OAASA,GAAUpK,KASlBsK,EAAA/J,UAAAiK,iBAAP,SAAwBpB,EAAaqB,GAEpC,GAAIhL,GAAmBO,KAAKuK,gBAAgBnB,EAE5C,IAAI3J,IAAM0K,UACT1K,EAAIO,KAAKuK,gBAAgBnB,GAAQ,GAAIsB,EAEtCjL,GAAE+K,iBAAiBC,GASbH,GAAA/J,UAAAoK,oBAAP,SAA2BvB,EAAaqB,GAEvC,GAAIhL,GAAmBO,KAAKuK,gBAAgBnB,EAE5C,IAAI3J,EAAG,CACNA,EAAEkL,oBAAoBF,EAEtB,IAAIhL,EAAEmL,cAAgB,QACd5K,MAAKuK,gBAAgBnB,IASxBkB,GAAA/J,UAAAsK,cAAP,SAAqBC,GAEpB,GAAIrL,GAAmBO,KAAKuK,gBAAgBO,EAAM1B,KAElD,IAAI3J,EAAG,CACNqL,EAAMV,OAASpK,KAAKoK,MACpB3K,GAAEoL,cAAcC,IAUXR,GAAA/J,UAAAwK,iBAAP,SAAwB3B,EAAaqB,GAEpC,GAAIzK,KAAKuK,gBAAgBnB,KAAUe,UAClC,MAAO,MAER,IAAIM,GAAY,KACf,MAAOzK,MAAKuK,gBAAgBnB,GAAM4B,sBAAsBP,MAAe,CAExE,OAAOzK,MAAKuK,gBAAgBnB,GAAMwB,aAAe,EAEnD,OAAAN,KAEA,IAAMI,GAAc,WAApB,QAAMA,KAEE1K,KAAA6C,MAAe,CAEf7C,MAAAiL,UAA6C,GAAIhK,MAEjDjB,MAAA4K,aAAsB,EAEtBF,EAAAnK,UAAAiK,iBAAP,SAAwBC,GAGvB,GAAIzK,KAAKgL,sBAAsBP,MAAe,EAC7C,MAEDzK,MAAKiL,UAAUpH,KAAK4G,EACpBzK,MAAK4K,eAGCF,GAAAnK,UAAAoK,oBAAP,SAA2BF,GnBujCpB,GmBpjCF5H,GAAe7C,KAAKgL,sBAAsBP,EAE9C,IAAI5H,KAAW,EACd,MAED7C,MAAKiL,UAAUjH,OAAOnB,EAAO,EAC7B,IAAIA,GAAS7C,KAAK6C,MACjB7C,KAAK6C,OAEN7C,MAAK4K,eAGCF,GAAAnK,UAAAsK,cAAP,SAAqBC,GAEpB,GAAIrI,GAAazC,KAAK4K,YACtB,KAAK5K,KAAK6C,MAAQ,EAAG7C,KAAK6C,MAAQJ,GAAOzC,KAAK6C,MAAQ7C,KAAK4K,aAAc5K,KAAK6C,QAC7E7C,KAAKiL,UAAUjL,KAAK6C,OAAOiI,GAStBJ,GAAAnK,UAAAyK,sBAAP,SAA6BP,GAE5B,IAAK,GAAI5H,GAAe,EAAGA,EAAQ7C,KAAK4K,aAAc/H,IACrD,GAAI4H,GAAYzK,KAAKiL,UAAUpI,GAC9B,MAAOA,EAET,QAAQ,EAEV,OAAA6H,KACA5K,GAAyBJ,QAAhB4K,OnB+iCHY,2CAA2C,SAAStM,EAAQkB,EAAOJ,SAEnEyL,sCAAsC,SAASvM,EAAQkB,EAAOJ,GACpE,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoBjsCtB,IAAO6I,GAAStK,EAAc,mCAE9B,IAAMwM,GAAW,SAAA1K,GAASX,EAApBqL,EAAW1K,EAkBhB,SAlBK0K,GAkBOhC,EAAaiC,EAAmBC,EAAuBC,GAA1C,GAAAF,QAAA,GAAiB,CAAjBA,EAAA,KAAmB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,KAElE7K,EAAAf,KAAAK,KAAMoJ,EAENpJ,MAAKwL,KAAOH,CACZrL,MAAKyL,SAAWH,CAChBtL,MAAK0L,QAAUH,EAMhBhK,OAAAC,eAAW4J,EAAA7K,UAAA,WpB0rCJkB,IoB1rCP,WAEC,MAAOzB,MAAKyL,UpB2rCN9J,WAAY,KACZC,aAAc,MoBtrCrBL,QAAAC,eAAW4J,EAAA7K,UAAA,OpB4rCJkB,IoB5rCP,WAEC,MAAOzB,MAAKwL,MpB6rCN7J,WAAY,KACZC,aAAc,MoBxrCrBL,QAAAC,eAAW4J,EAAA7K,UAAA,UpB8rCJkB,IoB9rCP,WAEC,MAAOzB,MAAK0L,SpB+rCN/J,WAAY,KACZC,aAAc,MoBzrCdwJ,GAAA7K,UAAA+B,MAAP,WAEC,MAAO,IAAI8I,GAAYpL,KAAKoJ,KAAMpJ,KAAKwL,KAAMxL,KAAKyL,SAAUzL,KAAK0L,SApDpDN,GAAAO,cAAuB,cAsDtC,OAAAP,IA3D0BlC,EA6DLpJ,GAAAJ,QAAZ0L,IpBosCNlB,mCAAmC,qCAAqC0B,sCAAsC,SAAShN,EAAQkB,EAAOJ,GACzI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqBzwCtB,IAAO6I,GAAStK,EAAc,mCAE9B,IAAMiN,GAAW,SAAAnL,GAASX,EAApB8L,EAAWnL,EAwBhB,SAxBKmL,GAwBOzC,EAAalB,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,GAExBxH,EAAAf,KAAAK,KAAMoJ,EAENpJ,MAAK8L,SAAW5D,EAOjB3G,OAAAC,eAAWqK,EAAAtL,UAAA,WrBkvCJkB,IqBlvCP,WAEC,MAAOzB,MAAK8L,UrBmvCNnK,WAAY,KACZC,aAAc,MqBhvCdiK,GAAAtL,UAAA+B,MAAP,WAEC,MAAO,IAAIuJ,GAAY7L,KAAKoJ,KAAMpJ,KAAK8L,UApC1BD,GAAAE,eAAwB,eAMxBF,GAAAG,YAAqB,YAQrBH,GAAAI,uBAAgC,sBAwB/C,OAAAJ,IA7C0B3C,EA+CLpJ,GAAAJ,QAAZmM,IrBkwCN3B,mCAAmC,qCAAqCgC,0CAA0C,SAAStN,EAAQkB,EAAOJ,GAC7I,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsBxzCtB,IAAO6I,GAAStK,EAAc,mCAG9B,IAAMuN,GAAe,SAAAzL,GAASX,EAAxBoM,EAAezL,EAMpB,SANKyL,GAMO/C,EAAagD,GAExB1L,EAAAf,KAAAK,KAAMoJ,EACNpJ,MAAKqM,YAAcD,EAGpB7K,OAAAC,eAAW2K,EAAA5L,UAAA,ctBmzCJkB,IsBnzCP,WAEC,MAAOzB,MAAKqM,atBozCN1K,WAAY,KACZC,aAAc,MsBj0CPuK,GAAAG,eAAwB,eAcvC,OAAAH,IAhB8BjD,EAkB9BpJ,GAAyBJ,QAAhByM,ItBwzCNjC,mCAAmC,qCAAqCqC,qCAAqC,SAAS3N,EAAQkB,EAAOJ,GACxI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuBl1CtB,IAAO6I,GAAStK,EAAc,mCAE9B,IAAM4N,GAAU,SAAA9L,GAASX,EAAnByM,EAAU9L,EAYf,SAZK8L,GAYOpD,GAEX1I,EAAAf,KAAAK,KAAMoJ,GATOoD,EAAAC,MAAe,OAKfD,GAAAE,eAAwB,eAOvC,OAAAF,IAjByBtD,EAmBNpJ,GAAAJ,QAAV8M,IvBi1CNtC,mCAAmC,qCAAqCyC,yCAAyC,SAAS/N,EAAQkB,EAAOJ,GAC5I,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwB12CtB,IAAO6I,GAAStK,EAAc,mCAE9B,IAAMgO,GAAc,SAAAlM,GAASX,EAAvB6M,EAAclM,EAcnB,SAdKkM,GAcOxD,EAAayD,GAExBnM,EAAAf,KAAAK,KAAMoJ,EAENpJ,MAAK8M,WAAaD,EAMnBtL,OAAAC,eAAWoL,EAAArM,UAAA,axB61CJkB,IwB71CP,WAEC,MAAOzB,MAAK8M,YxB81CNnL,WAAY,KACZC,aAAc,MwBx1CdgL,GAAArM,UAAA+B,MAAP,WAEC,MAAO,IAAIsK,GAAe5M,KAAKoJ,KAAMpJ,KAAK8M,YAjC7BF,GAAAG,YAAqB,YAErBH,GAAAI,WAAoB,WAEpBJ,GAAAK,cAAuB,cAEvBL,GAAAM,WAAoB,WAEpBN,GAAAjB,cAAuB,cA2BtC,OAAAiB,IArC6B1D,EAuC7BpJ,GAAwBJ,QAAfkN,IxBm2CN1C,mCAAmC,qCAAqCiD,4BAA4B,SAASvO,EAAQkB,EAAOJ,GyB74C/H,GAAO0N,GAAQxO,EAAe,gCzB26C9B,IyB74CMyO,GAAG,WAsOR,QAtOKA,GAsOOC,EAAcC,EAAcC,EAAcC,EAAkBC,EAAmBC,GAA/E,GAAAL,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAE1F3N,KAAKsN,EAAIA,CACTtN,MAAKuN,EAAIA,CACTvN,MAAKwN,EAAIA,CACTxN,MAAKyN,MAAQA,CACbzN,MAAK0N,OAASA,CACd1N,MAAK2N,MAAQA,EA9KdpM,OAAAC,eAAW6L,EAAA9M,UAAA,QzBm3CJkB,IyBn3CP,WAEC,MAAOzB,MAAKwN,EAAIxN,KAAK2N,OzBo3Cf5L,IyBj3CP,SAAgB6L,GAEf5N,KAAK2N,MAAQC,EAAM5N,KAAKwN,GzBk3ClB7L,WAAY,KACZC,aAAc,MyB72CrBL,QAAAC,eAAW6L,EAAA9M,UAAA,UzBm3CJkB,IyBn3CP,WAEC,MAAOzB,MAAKuN,EAAIvN,KAAK0N,QzBo3Cf3L,IyBj3CP,SAAkB6L,GAEjB5N,KAAK0N,OAASE,EAAM5N,KAAKuN,GzBk3CnB5L,WAAY,KACZC,aAAc,MyB52CrBL,QAAAC,eAAW6L,EAAA9M,UAAA,mBzBm3CJkB,IyBn3CP,WAEC,GAAIzB,KAAK6N,kBAAoB,KAC5B7N,KAAK6N,iBAAmB,GAAIT,EAE7BpN,MAAK6N,iBAAiBP,EAAItN,KAAKsN,EAAItN,KAAKyN,KACxCzN,MAAK6N,iBAAiBN,EAAIvN,KAAKuN,EAAIvN,KAAK0N,MACxC1N,MAAK6N,iBAAiBL,EAAIxN,KAAKwN,EAAIxN,KAAK2N,KAExC,OAAO3N,MAAK6N,kBzBk3CNlM,WAAY,KACZC,aAAc,MyBr2CrBL,QAAAC,eAAW6L,EAAA9M,UAAA,SzBm3CJkB,IyBn3CP,WAEC,MAAOzB,MAAKwN,GzBo3CNzL,IyBj3CP,SAAiB6L,GAEhB5N,KAAK2N,OAAS3N,KAAKwN,EAAII,CACvB5N,MAAKwN,EAAII,GzBk3CHjM,WAAY,KACZC,aAAc,MyBt2CrBL,QAAAC,eAAW6L,EAAA9M,UAAA,QzBm3CJkB,IyBn3CP,WAEC,MAAOzB,MAAKsN,GzBo3CNvL,IyBj3CP,SAAgB6L,GAEf5N,KAAKyN,OAASzN,KAAKsN,EAAIM,CACvB5N,MAAKsN,EAAIM,GzBk3CHjM,WAAY,KACZC,aAAc,MyB72CrBL,QAAAC,eAAW6L,EAAA9M,UAAA,SzBm3CJkB,IyBn3CP,WAEC,MAAOzB,MAAKsN,EAAItN,KAAKyN,OzBo3Cf1L,IyBj3CP,SAAiB6L,GAEhB5N,KAAKyN,MAAQG,EAAM5N,KAAKsN,GzBk3ClB3L,WAAY,KACZC,aAAc,MyB32CrBL,QAAAC,eAAW6L,EAAA9M,UAAA,QzBm3CJkB,IyBn3CP,WAEC,GAAIzB,KAAKmF,OAAS,KACjBnF,KAAKmF,MAAQ,GAAIiI,EAElBpN,MAAKmF,MAAMmI,EAAItN,KAAKyN,KACpBzN,MAAKmF,MAAMoI,EAAIvN,KAAK0N,MACpB1N,MAAKmF,MAAMqI,EAAIxN,KAAK2N,KAEpB,OAAO3N,MAAKmF,OzBk3CNxD,WAAY,KACZC,aAAc,MyBt2CrBL,QAAAC,eAAW6L,EAAA9M,UAAA,OzBm3CJkB,IyBn3CP,WAEC,MAAOzB,MAAKuN,GzBo3CNxL,IyBj3CP,SAAe6L,GAEd5N,KAAK0N,QAAW1N,KAAKuN,EAAIK,CACzB5N,MAAKuN,EAAIK,GzBk3CHjM,WAAY,KACZC,aAAc,MyB52CrBL,QAAAC,eAAW6L,EAAA9M,UAAA,gBzBm3CJkB,IyBn3CP,WAEC,GAAIzB,KAAK8N,eAAiB,KACzB9N,KAAK8N,cAAgB,GAAIV,EAE1BpN,MAAK8N,cAAcR,EAAItN,KAAKsN,CAC5BtN,MAAK8N,cAAcP,EAAIvN,KAAKuN,CAC5BvN,MAAK8N,cAAcN,EAAIxN,KAAKwN,CAE5B,OAAOxN,MAAK8N,ezBk3CNnM,WAAY,KACZC,aAAc,MyB10CdyL,GAAA9M,UAAA+B,MAAP,WAEC,MAAO,IAAI+K,GAAIrN,KAAKsN,EAAGtN,KAAKuN,EAAGvN,KAAKwN,EAAGxN,KAAKyN,MAAOzN,KAAK0N,OAAQ1N,KAAK2N,OAa/DN,GAAA9M,UAAAwN,SAAP,SAAgBT,EAAUC,EAAUC,GAEnC,MAAQxN,MAAKsN,GAAKA,GAAKtN,KAAKsN,EAAItN,KAAKyN,OAASH,GAAKtN,KAAKuN,GAAKA,GAAKvN,KAAKuN,EAAIvN,KAAK0N,QAAUH,GAAKvN,KAAKwN,GAAKA,GAAKxN,KAAKwN,EAAIxN,KAAK2N,OAASH,EAc/HH,GAAA9M,UAAAyN,cAAP,SAAqBC,GAEpB,MAAQjO,MAAKsN,GAAKW,EAASX,GAAKtN,KAAKsN,EAAItN,KAAKyN,OAASQ,EAASX,GAAKtN,KAAKuN,GAAKU,EAASV,GAAKvN,KAAKuN,EAAIvN,KAAK0N,QAAUO,EAASV,GAAKvN,KAAKwN,GAAKS,EAAST,GAAKxN,KAAKwN,EAAIxN,KAAK2N,OAASM,EAAST,EAarLH,GAAA9M,UAAA2N,YAAP,SAAmBC,GAElB,MAAQnO,MAAKsN,GAAKa,EAAIb,GAAKtN,KAAKsN,EAAItN,KAAKyN,OAASU,EAAIb,EAAIa,EAAIV,OAASzN,KAAKuN,GAAKY,EAAIZ,GAAKvN,KAAKuN,EAAIvN,KAAK0N,QAAUS,EAAIZ,EAAIY,EAAIT,QAAU1N,KAAKwN,GAAKW,EAAIX,GAAKxN,KAAKwN,EAAIxN,KAAK2N,OAASQ,EAAIX,EAAIW,EAAIR,MASxLN,GAAA9M,UAAA6N,SAAP,SAAgBC,GAEfrO,KAAKsN,EAAIe,EAAUf,CACnBtN,MAAKuN,EAAIc,EAAUd,CACnBvN,MAAKwN,EAAIa,EAAUb,CACnBxN,MAAKyN,MAAQY,EAAUZ,KACvBzN,MAAK0N,OAASW,EAAUX,MACxB1N,MAAK2N,MAAQU,EAAUV,MAgBjBN,GAAA9M,UAAA+N,OAAP,SAAcC,GAEb,MAAQvO,MAAKsN,GAAKiB,EAAUjB,GAAKtN,KAAKuN,GAAKgB,EAAUhB,GAAKvN,KAAKwN,GAAKe,EAAUf,GAAKxN,KAAKyN,OAASc,EAAUd,OAASzN,KAAK0N,QAAUa,EAAUb,QAAU1N,KAAK2N,OAASY,EAAUZ,MAoBzKN,GAAA9M,UAAAiO,QAAP,SAAeC,EAAWC,EAAWC,GAEpC3O,KAAKsN,GAAKmB,EAAG,CACbzO,MAAKuN,GAAKmB,EAAG,CACb1O,MAAKwN,GAAKmB,EAAG,CACb3O,MAAKyN,OAASgB,EAAG,CACjBzO,MAAK0N,QAAUgB,EAAG,CAClB1O,MAAK2N,OAASgB,EAAG,EAiBXtB,GAAA9M,UAAAqO,aAAP,SAAoBC,GAEnB7O,KAAKsN,GAAKuB,EAAMvB,EAAE,CAClBtN,MAAKuN,GAAKsB,EAAMtB,EAAE,CAClBvN,MAAKwN,GAAKqB,EAAMrB,EAAE,CAClBxN,MAAKyN,OAASoB,EAAMvB,EAAE,CACtBtN,MAAK0N,QAAUmB,EAAMtB,EAAE,CACvBvN,MAAK2N,OAASkB,EAAMrB,EAAE,EAiBhBH,GAAA9M,UAAAuO,aAAP,SAAoBC,GAEnB,GAAI/O,KAAKgP,WAAWD,GAAc,CACjC,GAAI1P,GAAQ,GAAIgO,EAEhB,IAAIrN,KAAKsN,EAAIyB,EAAYzB,EAAG,CAC3BjO,EAAEiO,EAAItN,KAAKsN,CACXjO,GAAEoO,MAAQsB,EAAYzB,EAAItN,KAAKsN,EAAIyB,EAAYtB,KAE/C,IAAIpO,EAAEoO,MAAQzN,KAAKyN,MAClBpO,EAAEoO,MAAQzN,KAAKyN,UACV,CACNpO,EAAEiO,EAAIyB,EAAYzB,CAClBjO,GAAEoO,MAAQzN,KAAKsN,EAAIyB,EAAYzB,EAAItN,KAAKyN,KAExC,IAAIpO,EAAEoO,MAAQsB,EAAYtB,MACzBpO,EAAEoO,MAAQsB,EAAYtB,MAGxB,GAAIzN,KAAKuN,EAAIwB,EAAYxB,EAAG,CAC3BlO,EAAEkO,EAAIvN,KAAKuN,CACXlO,GAAEqO,OAASqB,EAAYxB,EAAIvN,KAAKuN,EAAIwB,EAAYrB,MAEhD,IAAIrO,EAAEqO,OAAS1N,KAAK0N,OACnBrO,EAAEqO,OAAS1N,KAAK0N,WACX,CACNrO,EAAEkO,EAAIwB,EAAYxB,CAClBlO,GAAEqO,OAAS1N,KAAKuN,EAAIwB,EAAYxB,EAAIvN,KAAK0N,MAEzC,IAAIrO,EAAEqO,OAASqB,EAAYrB,OAC1BrO,EAAEqO,OAASqB,EAAYrB,OAIzB,GAAI1N,KAAKwN,EAAIuB,EAAYvB,EAAG,CAC3BnO,EAAEmO,EAAIxN,KAAKwN,CACXnO,GAAEsO,MAAQoB,EAAYvB,EAAIxN,KAAKwN,EAAIuB,EAAYpB,KAE/C,IAAItO,EAAEsO,MAAQ3N,KAAK2N,MAClBtO,EAAEsO,MAAQ3N,KAAK2N,UACV,CACNtO,EAAEmO,EAAIuB,EAAYvB,CAClBnO,GAAEsO,MAAQ3N,KAAKwN,EAAIuB,EAAYvB,EAAIxN,KAAK2N,KAExC,IAAItO,EAAEsO,MAAQoB,EAAYpB,MACzBtO,EAAEsO,MAAQoB,EAAYpB,MAGxB,MAAOtO,GAGR,MAAO,IAAIgO,GAcLA,GAAA9M,UAAAyO,WAAP,SAAkBD,GAEjB,MAAQ/O,MAAKsN,EAAItN,KAAKyN,MAAQsB,EAAYzB,GAAKtN,KAAKsN,EAAIyB,EAAYzB,EAAIyB,EAAYtB,OAASzN,KAAKuN,EAAIvN,KAAK0N,OAASqB,EAAYxB,GAAKvN,KAAKuN,EAAIwB,EAAYxB,EAAIwB,EAAYrB,QAAU1N,KAAKwN,EAAIxN,KAAK2N,MAAQoB,EAAYvB,GAAKxN,KAAKwN,EAAIuB,EAAYvB,EAAIuB,EAAYpB,MAG1PN,GAAA9M,UAAA0O,gBAAP,SAAuBhB,EAAmBiB,EAAoBC,GAE7D,GAAInP,KAAKgO,cAAcC,GACtB,MAAO,EAER,IAAImB,GAAsBpP,KAAKyN,MAAM,CACrC,IAAI4B,GAAsBrP,KAAK0N,OAAO,CACtC,IAAI4B,GAAsBtP,KAAK2N,MAAM,CAErC,IAAI4B,GAAiBvP,KAAKsN,EAAI8B,CAC9B,IAAII,GAAiBxP,KAAKuN,EAAI8B,CAC9B,IAAII,GAAiBzP,KAAKwN,EAAI8B,CAE9B,IAAII,GAAYzB,EAASX,EAAIiC,CAC7B,IAAII,GAAY1B,EAASV,EAAIiC,CAC7B,IAAII,GAAY3B,EAAST,EAAIiC,CAE7B,IAAII,GAAYX,EAAU5B,CAC1B,IAAIwC,GAAYZ,EAAU3B,CAC1B,IAAIwC,GAAYb,EAAU1B,CAE1B,IAAIwC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EzBqzCE,IyBlzCFnB,EACJ,IAAIa,EAAK,EAAG,CACXM,GAAqBf,EAAeM,GAAKG,CACzC,IAAIM,EAAmB,EAAG,CACzBF,EAAKN,EAAKQ,EAAiBL,CAC3BI,GAAKN,EAAKO,EAAiBJ,CAC3B,IAAIE,GAAMZ,GAAgBY,EAAKZ,GAAgBa,GAAMZ,GAAgBY,EAAKZ,EAAc,CACvFH,EAAa7B,EAAI,CACjB6B,GAAa5B,EAAI,CACjB4B,GAAa3B,EAAI,CAEjBwB,GAAa,OAIhB,IAAKA,GAAca,EAAK,EAAG,CAC1BM,IAAsBf,EAAeM,GAAKG,CAC1C,IAAIM,EAAmB,EAAG,CACzBF,EAAKN,EAAKQ,EAAiBL,CAC3BI,GAAKN,EAAKO,EAAiBJ,CAC3B,IAAIE,GAAMZ,GAAgBY,EAAKZ,GAAgBa,GAAMZ,GAAgBY,EAAKZ,EAAc,CACvFH,EAAa7B,GAAK,CAClB6B,GAAa5B,EAAI,CACjB4B,GAAa3B,EAAI,CACjBwB,GAAa,OAIhB,IAAKA,GAAcc,EAAK,EAAG,CAC1BK,GAAqBd,EAAeM,GAAKG,CACzC,IAAIK,EAAmB,EAAG,CACzBH,EAAKN,EAAKS,EAAiBN,CAC3BK,GAAKN,EAAKO,EAAiBJ,CAC3B,IAAIC,GAAMZ,GAAgBY,EAAKZ,GAAgBc,GAAMZ,GAAgBY,EAAKZ,EAAc,CACvFH,EAAa7B,EAAI,CACjB6B,GAAa5B,EAAI,CACjB4B,GAAa3B,EAAI,CACjBwB,GAAa,OAIhB,IAAKA,GAAcc,EAAK,EAAG,CAC1BK,IAAsBd,EAAeM,GAAKG,CAC1C,IAAIK,EAAmB,EAAG,CACzBH,EAAKN,EAAKS,EAAiBN,CAC3BK,GAAKN,EAAKO,EAAiBJ,CAC3B,IAAIC,GAAMZ,GAAgBY,EAAKZ,GAAgBc,GAAMZ,GAAgBY,EAAKZ,EAAc,CACvFH,EAAa7B,EAAI,CACjB6B,GAAa5B,GAAK,CAClB4B,GAAa3B,EAAI,CACjBwB,GAAa,OAIhB,IAAKA,GAAce,EAAK,EAAG,CAC1BI,GAAqBb,EAAeM,GAAKG,CACzC,IAAII,EAAmB,EAAG,CACzBH,EAAKN,EAAKS,EAAiBN,CAC3BI,GAAKN,EAAKQ,EAAiBL,CAC3B,IAAIG,GAAMZ,GAAgBY,EAAKZ,GAAgBW,GAAMZ,GAAgBY,EAAKZ,EAAc,CACvFD,EAAa7B,EAAI,CACjB6B,GAAa5B,EAAI,CACjB4B,GAAa3B,EAAI,CACjBwB,GAAa,OAIhB,IAAKA,GAAce,EAAK,EAAG,CAC1BI,IAAsBb,EAAeM,GAAKG,CAC1C,IAAII,EAAmB,EAAG,CACzBH,EAAKN,EAAKS,EAAiBN,CAC3BI,GAAKN,EAAKQ,EAAiBL,CAC3B,IAAIG,GAAMZ,GAAgBY,EAAKZ,GAAgBW,GAAMZ,GAAgBY,EAAKZ,EAAc,CACvFD,EAAa7B,EAAI,CACjB6B,GAAa5B,EAAI,CACjB4B,GAAa3B,GAAK,CAClBwB,GAAa,OAKhB,MAAOA,GAAYmB,GAAoB,EAUjC9C,GAAA9M,UAAA6P,oBAAP,SAA2BC,EAAgBjG,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAE1C,GAAIjK,EAEJ,IAAIiK,GAAU,KACbA,EAAS,GAAIgD,EAEdjN,GAAIkQ,EAAM/C,CACV,IAAInN,EAAIH,KAAKsN,EACZnN,EAAIH,KAAKsN,CACV,IAAInN,EAAIH,KAAKsN,EAAItN,KAAKyN,MACrBtN,EAAIH,KAAKsN,EAAItN,KAAKyN,KACnBrD,GAAOkD,EAAInN,CAEXA,GAAIkQ,EAAM9C,CACV,IAAIpN,EAAIH,KAAKuN,EAAIvN,KAAK0N,OACrBvN,EAAIH,KAAKuN,EAAIvN,KAAK0N,MACnB,IAAIvN,EAAIH,KAAKuN,EACZpN,EAAIH,KAAKuN,CACVnD,GAAOmD,EAAIpN,CAEXA,GAAIkQ,EAAM7C,CACV,IAAIrN,EAAIH,KAAKwN,EACZrN,EAAIH,KAAKwN,CACV,IAAIrN,EAAIH,KAAKwN,EAAIxN,KAAK2N,MACrBxN,EAAIH,KAAKwN,EAAIxN,KAAK2N,KACnBvD,GAAOoD,EAAIrN,CAEX,OAAOiK,GASDiD,GAAA9M,UAAA+P,QAAP,WAEC,MAAQtQ,MAAKsN,GAAK,GAAKtN,KAAKuN,GAAK,GAAKvN,KAAKwN,GAAK,GAAKxN,KAAKyN,OAAS,GAAKzN,KAAK0N,QAAU,GAAK1N,KAAK2N,OAAS,EAWpGN,GAAA9M,UAAA0C,OAAP,SAAcwL,EAAWC,EAAWC,GAEnC3O,KAAKsN,GAAKmB,CACVzO,MAAKuN,GAAKmB,CACV1O,MAAKwN,GAAKmB,EAUJtB,GAAA9M,UAAAgQ,eAAP,SAAsBtC,GAErBjO,KAAKsN,GAAKW,EAASX,CACnBtN,MAAKuN,GAAKU,EAASV,CACnBvN,MAAKwN,GAAKS,EAAST,EAYbH,GAAA9M,UAAAiQ,SAAP,WAECxQ,KAAKsN,EAAI,CACTtN,MAAKuN,EAAI,CACTvN,MAAKwN,EAAI,CACTxN,MAAKyN,MAAQ,CACbzN,MAAK0N,OAAS,CACd1N,MAAK2N,MAAQ,EAGPN,GAAA9M,UAAAkQ,iBAAP,WAECzQ,KAAKsN,EAAIoD,OAAOC,UAAU,CAC1B3Q;KAAKuN,EAAImD,OAAOC,UAAU,CAC1B3Q,MAAKwN,EAAIkD,OAAOC,UAAU,CAC1B3Q,MAAKyN,OAASiD,OAAOC,SACrB3Q,MAAK0N,QAAUgD,OAAOC,SACtB3Q,MAAK2N,OAAS+C,OAAOC,UAgBftD,GAAA9M,UAAAqQ,MAAP,SAAaC,EAAWC,EAAWC,EAAWC,EAAeC,EAAgBC,GAE5ElR,KAAKsN,EAAIuD,CACT7Q,MAAKuN,EAAIuD,CACT9Q,MAAKwN,EAAIuD,CACT/Q,MAAKyN,MAAQuD,CACbhR,MAAK0N,OAASuD,CACdjR,MAAK2N,MAAQuD,EAWP7D,GAAA9M,UAAA4Q,SAAP,WAEC,MAAO,YAAcnR,KAAKsN,EAAI,OAAStN,KAAKuN,EAAI,OAASvN,KAAKwN,EAAI,WAAaxN,KAAKyN,MAAQ,YAAczN,KAAK0N,OAAS,WAAa1N,KAAK2N,MAAQ,IAc5IN,GAAA9M,UAAA6Q,MAAP,SAAaC,EAAajH,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAEzB,GAAIA,GAAU,KACbA,EAAS,GAAIiD,EAEd,IAAIrN,KAAKsN,EAAI+D,EAAQ/D,EAAG,CACvBlD,EAAOkD,EAAItN,KAAKsN,CAChBlD,GAAOqD,MAAQ4D,EAAQ/D,EAAItN,KAAKsN,EAAI+D,EAAQ5D,KAE5C,IAAIrD,EAAOqD,MAAQzN,KAAKyN,MACvBrD,EAAOqD,MAAQzN,KAAKyN,UACf,CACNrD,EAAOkD,EAAI+D,EAAQ/D,CACnBlD,GAAOqD,MAAQzN,KAAKsN,EAAI+D,EAAQ/D,EAAItN,KAAKyN,KAEzC,IAAIrD,EAAOqD,MAAQ4D,EAAQ5D,MAC1BrD,EAAOqD,MAAQ4D,EAAQ5D,MAGzB,GAAIzN,KAAKuN,EAAI8D,EAAQ9D,EAAG,CACvBnD,EAAOmD,EAAIvN,KAAKuN,CAChBnD,GAAOsD,OAAS2D,EAAQ9D,EAAIvN,KAAKuN,EAAI8D,EAAQ3D,MAE7C,IAAItD,EAAOsD,OAAS1N,KAAK0N,OACxBtD,EAAOsD,OAAS1N,KAAK0N,WAChB,CACNtD,EAAOmD,EAAI8D,EAAQ9D,CACnBnD,GAAOsD,OAAS1N,KAAKuN,EAAI8D,EAAQ9D,EAAIvN,KAAK0N,MAE1C,IAAItD,EAAOsD,OAAS2D,EAAQ3D,OAC3BtD,EAAOsD,OAAS2D,EAAQ3D,OAG1B,GAAI1N,KAAKwN,EAAI6D,EAAQ7D,EAAG,CACvBpD,EAAOoD,EAAIxN,KAAKwN,CAChBpD,GAAOuD,MAAQ0D,EAAQ7D,EAAIxN,KAAKwN,EAAI6D,EAAQ1D,KAE5C,IAAIvD,EAAOuD,MAAQ3N,KAAK2N,MACvBvD,EAAOuD,MAAQ3N,KAAK2N,UACf,CACNvD,EAAOoD,EAAI6D,EAAQ7D,CACnBpD,GAAOuD,MAAQ3N,KAAKwN,EAAI6D,EAAQ7D,EAAIxN,KAAK2N,KAEzC,IAAIvD,EAAOuD,MAAQ0D,EAAQ1D,MAC1BvD,EAAOuD,MAAQ0D,EAAQ1D,MAGzB,MAAOvD,GAET,OAAAiD,KAEAvN,GAAaJ,QAAJ2N,IzBsxCNiE,gCAAgC,kCAAkCC,uCAAuC,SAAS3S,EAAQkB,EAAOJ,G0BtkEpI,GAAO8R,GAAU5S,EAAa,mC1BgnE9B,I0BtkEM6S,GAAc,WA4GnB,QA5GKA,GA4GOC,EAA0BC,EAA4BC,EAA2BC,EAA4BC,EAAsBC,EAAwBC,EAAuBC,GAAlL,GAAAP,QAAA,GAAwB,CAAxBA,EAAA,EAA0B,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,EAA4B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,EAA2B,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,EAA4B,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAAwB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAE7LjS,KAAK0R,cAAgBA,CACrB1R,MAAK2R,gBAAkBA,CACvB3R,MAAK4R,eAAiBA,CACtB5R,MAAK6R,gBAAkBA,CACvB7R,MAAK8R,UAAYA,CACjB9R,MAAK+R,YAAcA,CACnB/R,MAAKgS,WAAaA,CAClBhS,MAAKiS,YAAcA,EAhDpB1Q,OAAAC,eAAWiQ,EAAAlR,UAAA,S1B0jEJkB,I0B1jEP,WAEC,MAAQzB,MAAK8R,WAAa,GAAQ9R,KAAK+R,aAAe,EAAK/R,KAAKgS,Y1B2jE1DjQ,I0BxjEP,SAAiBC,GAEhB,GAAIkQ,GAAgBV,EAAWW,mBAAmBnQ,EAElDhC,MAAK8R,UAAYI,EAAK,EACtBlS,MAAK+R,YAAcG,EAAK,EACxBlS,MAAKgS,WAAaE,EAAK,EAEvBlS,MAAK0R,cAAgB,CACrB1R,MAAK2R,gBAAkB,CACvB3R,MAAK4R,eAAiB,G1BujEhBjQ,WAAY,KACZC,aAAc,M0BphEX6P,GAAAlR,UAAA8B,MAAP,WAEIrC,KAAK0R,cAAgB,CACrB1R,MAAK2R,gBAAkB,CACvB3R,MAAK4R,eAAiB,CACtB5R,MAAK6R,gBAAkB,CACvB7R,MAAK8R,UAAY,CACjB9R,MAAK+R,YAAc,CACnB/R,MAAKgS,WAAa,CAClBhS,MAAKiS,YAAc,EAGhBR,GAAAlR,UAAA+B,MAAP,WAEI,MAAO,IAAImP,GAAezR,KAAK0R,cAAe1R,KAAK2R,gBAAiB3R,KAAK4R,eAAgB5R,KAAK6R,gBAAiB7R,KAAK8R,UAAW9R,KAAK+R,YAAa/R,KAAKgS,WAAYhS,KAAKiS,aAGpKR,GAAAlR,UAAA6N,SAAP,SAAgBgE,GAEZpS,KAAK0R,cAAgBU,EAAOV,aAC5B1R,MAAK2R,gBAAkBS,EAAOT,eAC9B3R,MAAK4R,eAAiBQ,EAAOR,cAC7B5R,MAAK6R,gBAAkBO,EAAOP,eAC9B7R,MAAK8R,UAAYM,EAAON,SACxB9R,MAAK+R,YAAcK,EAAOL,WAC1B/R,MAAKgS,WAAaI,EAAOJ,UACzBhS,MAAKiS,YAAcG,EAAOH,YAGvBR,GAAAlR,UAAA8R,OAAP,SAAcC,GAEVA,EAAYlE,SAASpO,MAGlByR,GAAAlR,UAAAgS,QAAP,SAAeC,GAEXxS,KAAK8R,WAAaU,EAAGV,UAAY9R,KAAK0R,aACtC1R,MAAK+R,aAAeS,EAAGT,YAAc/R,KAAK2R,eAC1C3R,MAAKgS,YAAcQ,EAAGR,WAAahS,KAAK4R,cACxC5R,MAAKiS,aAAeO,EAAGP,YAAcjS,KAAK6R,eAE1C7R,MAAK0R,eAAiBc,EAAGd,aACzB1R,MAAK2R,iBAAmBa,EAAGb,eAC3B3R,MAAK4R,gBAAkBY,EAAGZ,cAC1B5R,MAAK6R,iBAAmBW,EAAGX,gBAEnC,OAAAJ,KAEwB3R,GAAAJ,QAAf+R,I1B8gENgB,mCAAmC,qCAAqCC,mCAAmC,SAAS9T,EAAQkB,EAAOJ,GAItI,G2BjuEMiT,GAAU,WAAhB,QAAMA,MAKSA,EAAAC,mBAA4B,IAAInO,KAAKoO,EAKrCF,GAAAG,mBAA4BrO,KAAKoO,GAAG,GACnD,OAAAF,KAEA7S,GAAoBJ,QAAXiT,O3BmuEHI,sCAAsC,SAASnU,EAAQkB,EAAOJ,G4BlvEpE,GAAOsT,GAAQpU,EAAe,gCAE9B,IAAOwO,GAAQxO,EAAe,gC5BsvE9B,I4BhvEMqU,GAAa,WAAnB,QAAMA,MAeSA,EAAAC,kBAAd,SAAgCC,EAAwBC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAEvD,GAAI9F,GAAW6F,EAAY7F,CAC3B,IAAIC,GAAW4F,EAAY5F,CAC3B,IAAIC,GAAW2F,EAAY3F,CAC3B,IAAI6F,GAAWF,EAAYE,CAE3B,IAAIC,GAAYhG,EAAEA,CAClB,IAAIiG,GAAYjG,EAAEC,CAClB,IAAIiG,GAAYlG,EAAEE,CAClB,IAAIiG,GAAYnG,EAAE+F,CAElB,IAAIK,GAAYnG,EAAEA,CAClB,IAAIoG,GAAYpG,EAAEC,CAClB,IAAIoG,GAAYrG,EAAE8F,CAElB,IAAIQ,GAAYrG,EAAEA,CAClB,IAAIsG,GAAYtG,EAAE6F,CAElB,IAAIU,GAAmBd,EAAce,kBACrCD,GAAI,GAAK,EAAI,GAAGL,EAAKG,EACrBE,GAAI,GAAK,GAAGR,EAAKO,EACjBC,GAAI,GAAK,GAAGP,EAAKI,EACjBG,GAAI,GAAK,GAAGR,EAAKO,EACjBC,GAAI,GAAK,EAAI,GAAGT,EAAKO,EACrBE,GAAI,GAAK,GAAGJ,EAAKF,EACjBM,GAAI,GAAK,GAAGP,EAAKI,EACjBG,GAAI,GAAK,GAAGJ,EAAKF,EACjBM,GAAI,IAAM,EAAI,GAAGT,EAAKI,EACtBK,GAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAM,CAC1DA,GAAI,IAAM,CAEV,IAAIX,EAAG,CACNA,EAAEa,gBAAgBF,EAClB,OAAOX,OAEP,OAAO,IAAIJ,GAASe,GASRd,GAAAiB,WAAd,SAAyBd,EAAYe,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAEpC,GAAIA,IAAM,KACTA,EAAI,GAAI/G,GAAS,EAAK,EAAK,EAE5BgG,GAAEgB,aAAa,EAAGD,EAClBA,GAAEE,WAEF,OAAOF,GASMlB,GAAAqB,MAAd,SAAoBlB,EAAYe,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAE/B,GAAIA,IAAM,KACTA,EAAI,GAAI/G,GAAS,EAAK,EAAK,EAE5BgG,GAAEgB,aAAa,EAAGD,EAClBA,GAAEE,WAEF,OAAOF,GASMlB,GAAAsB,SAAd,SAAuBnB,EAAYe,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAGlC,GAAIA,IAAM,KAAM,CAEfA,EAAI,GAAI/G,GAAS,EAAK,EAAK,GAI5BgG,EAAEgB,aAAa,EAAGD,EAClBA,GAAEE,WAEF,OAAOF,GAMMlB,GAAAuB,QAAd,SAAsBC,EAAaC,GAElC,GAAIC,GAAkB1B,EAAce,kBACpC,IAAIY,GAAkBF,EAAGG,OACzBJ,GAAGK,cAAcH,EAEjB,KAAK,GAAItV,GAAW,EAAGA,EAAI,KAAMA,EAAG,CACnC,GAAIsV,EAAGtV,IAAMuV,EAAGvV,GACf,MAAO,OAGT,MAAO,MAGM4T,GAAA8B,OAAd,SAAqBC,EAAiBC,EAAcC,EAAcC,GAEjE,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIvB,GAAmBd,EAAce,kBAErCsB,GAAOJ,EAAIK,aAAaJ,EACxBG,GAAKjB,WAELgB,GAAMC,EAAKC,aAAaL,EACxBG,GAAIhB,WACJe,GAAOF,EAAI5S,OACX8S,GAAKf,WAELN,GAAI,GAAKuB,EAAKhI,CACdyG,GAAI,GAAKsB,EAAI/H,CACbyG,GAAI,IAAMqB,EAAK9H,CACfyG,GAAI,GAAK,CAETA,GAAI,GAAKuB,EAAK/H,CACdwG,GAAI,GAAKsB,EAAI9H,CACbwG,GAAI,IAAMqB,EAAK7H,CACfwG,GAAI,GAAK,CAETA,GAAI,GAAKuB,EAAK9H,CACduG,GAAI,GAAKsB,EAAI7H,CACbuG,GAAI,KAAOqB,EAAK5H,CAChBuG,GAAI,IAAM,CAEVA,GAAI,KAAOuB,EAAKE,WAAWP,EAC3BlB,GAAI,KAAOsB,EAAIG,WAAWP,EAC1BlB,GAAI,IAAMqB,EAAKI,WAAWP,EAC1BlB,GAAI,IAAM,CAEViB,GAAOf,gBAAgBF,GAGVd,GAAAwC,WAAd,SAAyBC,EAAetL,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEvC,GAAIA,IAAW,KACdA,EAAS,GAAI4I,EAEd,IAAI5T,GAAWsW,EAAMtW,EAAGc,EAAWwV,EAAMxV,EAAGyV,EAAWD,EAAMC,EAAG1V,EAAWyV,EAAMzV,CACjF,IAAI4U,GAAuB5B,EAAce,kBACzC,IAAI4B,IAAc,EAAExW,EAAEc,CACtB,IAAI2V,IAAc,EAAEzW,EAAEuW,CACtB,IAAIG,IAAc,EAAE5V,EAAEyV,CAEtBd,GAAQ,GAAK,EAAI,EAAEzV,EAAEA,CACrByV,GAAQ,GAAKe,CACbf,GAAQ,GAAKgB,CACbhB,GAAQ,KAAO,EAAEzV,EAAEa,CACnB4U,GAAQ,GAAKe,CACbf,GAAQ,GAAK,EAAI,EAAE3U,EAAEA,CACrB2U,GAAQ,GAAKiB,CACbjB,GAAQ,KAAO,EAAE3U,EAAED,CACnB4U,GAAQ,GAAKgB,CACbhB,GAAQ,GAAKiB,CACbjB,GAAQ,IAAM,EAAI,EAAEc,EAAEA,CACtBd,GAAQ,KAAO,EAAEc,EAAE1V,CACnB4U,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,IAAM,CACdA,GAAQ,IAAM,CACdzK,GAAO6J,gBAAgBY,EAEvB,OAAOzK,GAIM6I,GAAA8C,gBAAd,SAA8Bf,EAAiBgB,EAAiBC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAE/D,IAAKA,EACJA,EAAS,GAAI7I,EAEd,IAAI2G,GAAmBd,EAAce,kBACrCgB,GAAOF,cAAcf,EACrB,IAAI3U,GAAW2U,EAAI,EACnB,IAAIlV,GAAWkV,EAAI,EACnB,IAAI1U,GAAW0U,EAAI,EACnB,IAAIX,GAAWW,EAAI,EACnB,IAAI7T,GAAW6T,EAAI,EACnB,IAAIzU,GAAWyU,EAAI,EACnB,IAAI5P,GAAW4P,EAAI,EACnB,IAAIhV,GAAWgV,EAAI,EACnB,IAAI4B,GAAW5B,EAAI,EACnB,IAAImC,GAAWnC,EAAI,EACnB,IAAIoC,GAAWpC,EAAI,GACnB,IAAI7U,GAAW6U,EAAI,GACnB,IAAI9T,GAAW8T,EAAI,GACnB,IAAIqC,GAAWrC,EAAI,GACnB,IAAItU,GAAWsU,EAAI,GACnB,IAAI5T,GAAW4T,EAAI,GAEnB,IAAIzG,GAAW0I,EAAO1I,CACtB,IAAIC,GAAWyI,EAAOzI,CACtB,IAAIC,GAAWwI,EAAOxI,CACtByI,GAAO3I,EAAIlO,EAAIkO,EAAIpN,EAAIqN,EAAIoI,EAAInI,EAAIvN,CACnCgW,GAAO1I,EAAI1O,EAAIyO,EAAIhO,EAAIiO,EAAI2I,EAAI1I,EAAI4I,CACnCH,GAAOzI,EAAInO,EAAIiO,EAAInJ,EAAIoJ,EAAI4I,EAAI3I,EAAI/N,CACnCwW,GAAO5C,EAAID,EAAI9F,EAAIvO,EAAIwO,EAAIrO,EAAIsO,EAAIrN,CACnC,OAAO8V,GAGMhD,GAAAoD,qBAAd,SAAmCrB,EAAiBgB,EAAiBC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEpE,IAAKA,EACJA,EAAS,GAAI7I,EAEd,IAAI2G,GAAmBd,EAAce,kBACrCgB,GAAOF,cAAcf,EACrB,IAAI3U,GAAW2U,EAAI,EACnB,IAAIlV,GAAWkV,EAAI,EACnB,IAAI1U,GAAW0U,EAAI,EACnB,IAAIX,GAAWW,EAAI,EACnB,IAAI7T,GAAW6T,EAAI,EACnB,IAAIzU,GAAWyU,EAAI,EACnB,IAAI5P,GAAW4P,EAAI,EACnB,IAAIhV,GAAWgV,EAAI,EACnB,IAAI4B,GAAW5B,EAAI,EACnB,IAAImC,GAAWnC,EAAI,EACnB,IAAIoC,GAAWpC,EAAI,GACnB,IAAI7U,GAAW6U,EAAI,GACnB,IAAIzG,GAAW0I,EAAO1I,CACtB,IAAIC,GAAWyI,EAAOzI,CACtB,IAAIC,GAAWwI,EAAOxI,CACtByI,GAAO3I,EAAIlO,EAAIkO,EAAIpN,EAAIqN,EAAIoI,EAAInI,CAC/ByI,GAAO1I,EAAI1O,EAAIyO,EAAIhO,EAAIiO,EAAI2I,EAAI1I,CAC/ByI,GAAOzI,EAAInO,EAAIiO,EAAInJ,EAAIoJ,EAAI4I,EAAI3I,CAC/ByI,GAAO5C,EAAID,EAAI9F,EAAIvO,EAAIwO,EAAIrO,EAAIsO,CAC/B,OAAOyI,GAGMhD,GAAAqD,eAAd,SAA6BC,EAAoBN,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhD,IAAIA,EACHA,EAAS,GAAI7I,EAEdmJ,GAAUnC,aAAa,EAAG6B,EAC1B,OAAOA,GAGMhD,GAAAuD,sBAAd,SAAoCxB,EAAiByB,EAAmBC,GAEvE,GAAI3C,GAAmBd,EAAce,kBACrCgB,GAAOF,cAAcf,EACrB,IAAI3U,GAAW2U,EAAI,EACnB,IAAIlV,GAAWkV,EAAI,EACnB,IAAI1U,GAAW0U,EAAI,EACnB,IAAIX,GAAWW,EAAI,EACnB,IAAI7T,GAAW6T,EAAI,EACnB,IAAIzU,GAAWyU,EAAI,EACnB,IAAI5P,GAAW4P,EAAI,EACnB,IAAIhV,GAAWgV,EAAI,EACnB,IAAI4B,GAAW5B,EAAI,EACnB,IAAImC,GAAWnC,EAAI,EACnB,IAAIoC,GAAWpC,EAAI,GACnB,IAAI7U,GAAW6U,EAAI,GACnB,IAAI4C,GAAkB,CACtB,IAAI/W,GAAgB6W,EAAI7W,MACxB,KAAI,GAAIiD,GAAe,EAAGA,EAAMjD,EAAQiD,GAAO,EAAG,CACjD,GAAIyK,GAAWmJ,EAAI5T,EACnB,IAAI0K,GAAWkJ,EAAI5T,EAAM,EACzB,IAAI2K,GAAWiJ,EAAI5T,EAAM,EACzB6T,GAAKC,KAAcvX,EAAIkO,EAAIpN,EAAIqN,EAAIoI,EAAInI,CACvCkJ,GAAKC,KAAc9X,EAAIyO,EAAIhO,EAAIiO,EAAI2I,EAAI1I,CACvCkJ,GAAKC,KAActX,EAAIiO,EAAInJ,EAAIoJ,EAAI4I,EAAI3I,GAhS3ByF,GAAAe,mBAAkC,GAAI9N,cAAa,GAGnD+M,GAAA2D,mBAA8B,GAAI5D,EAgSjD,OAAAC,KAEAnT,GAAuBJ,QAAduT,I5BwsEN4D,gCAAgC,gCAAgCvF,gCAAgC,kCAAkCuF,iCAAiC,SAASjY,EAAQkB,EAAOJ,G6B3/E9L,GAAO2N,GAAGzO,EAAiB,2BAC3B,IAAO+T,GAAU/T,EAAe,kCAChC,IAAOkY,GAAalY,EAAc,qCAElC,IAAOwO,GAAQxO,EAAgB,gCAC/B,IAAOyJ,GAAazJ,EAAc,uCAElC,IAAMoU,GAAQ,WAqBb,QArBKA,GAqBOmB,GAAA,GAAAA,QAAA,GAAqB,CAArBA,EAAA,KAbLnU,KAAA6U,QAAuB,GAAI3O,cAAa,GAKvClG,MAAA+W,UAAqB,GAAI3J,EACzBpN,MAAAgX,eAAyB,IAShC,IAAI7C,GAAK,MAAQA,EAAEvU,QAAU,GAAI,CAChCI,KAAKiU,gBAAgBE,OACf,CACNnU,KAAKiX,YAOAjE,EAAAzS,UAAA2W,OAAP,SAAcC,GAEb,GAAIC,GAAmBD,EAAItC,OAE3B,IAAIwC,GAAcrX,KAAK6U,QAAQ,EAC/B,IAAIyC,GAActX,KAAK6U,QAAQ,EAC/B,IAAI0C,GAAcvX,KAAK6U,QAAQ,EAC/B,IAAI2C,GAAcxX,KAAK6U,QAAQ,EAC/B,IAAI4C,GAAczX,KAAK6U,QAAQ,EAC/B,IAAI6C,GAAc1X,KAAK6U,QAAQ,EAC/B,IAAI8C,GAAc3X,KAAK6U,QAAQ,EAC/B,IAAI+C,GAAc5X,KAAK6U,QAAQ,EAC/B,IAAIgD,GAAc7X,KAAK6U,QAAQ,EAC/B,IAAIiD,GAAc9X,KAAK6U,QAAQ,EAC/B,IAAIkD,GAAc/X,KAAK6U,QAAQ,GAC/B,IAAImD,GAAchY,KAAK6U,QAAQ,GAC/B,IAAIoD,GAAcjY,KAAK6U,QAAQ,GAC/B,IAAIqD,GAAclY,KAAK6U,QAAQ,GAC/B,IAAIsD,GAAcnY,KAAK6U,QAAQ,GAC/B,IAAIuD,GAAcpY,KAAK6U,QAAQ,GAC/B,IAAIwD,GAAcjB,EAAI,EACtB,IAAIkB,GAAclB,EAAI,EACtB,IAAImB,GAAcnB,EAAI,EACtB,IAAIoB,GAAcpB,EAAI,EACtB,IAAIqB,GAAcrB,EAAI,EACtB,IAAIsB,GAActB,EAAI,EACtB,IAAIuB,GAAcvB,EAAI,EACtB,IAAIwB,GAAcxB,EAAI,EACtB,IAAIyB,GAAczB,EAAI,EACtB,IAAI0B,GAAc1B,EAAI,EACtB,IAAI2B,GAAc3B,EAAI,GACtB,IAAI4B,GAAc5B,EAAI,GACtB,IAAI6B,GAAc7B,EAAI,GACtB,IAAI8B,GAAc9B,EAAI,GACtB,IAAI+B,GAAc/B,EAAI,GACtB,IAAIgC,GAAchC,EAAI,GAEtBpX,MAAK6U,QAAQ,GAAKwC,EAAKgB,EAAOf,EAAKmB,EAAOlB,EAAKsB,EAAOrB,EAAKyB,CAC3DjZ,MAAK6U,QAAQ,GAAKwC,EAAKiB,EAAOhB,EAAKoB,EAAOnB,EAAKuB,EAAOtB,EAAK0B,CAC3DlZ,MAAK6U,QAAQ,GAAKwC,EAAKkB,EAAOjB,EAAKqB,EAAOpB,EAAKwB,EAAOvB,EAAK2B,CAC3DnZ,MAAK6U,QAAQ,GAAKwC,EAAKmB,EAAOlB,EAAKsB,EAAOrB,EAAKyB,EAAOxB,EAAK4B,CAE3DpZ,MAAK6U,QAAQ,GAAK4C,EAAKY,EAAOX,EAAKe,EAAOd,EAAKkB,EAAOjB,EAAKqB,CAC3DjZ,MAAK6U,QAAQ,GAAK4C,EAAKa,EAAOZ,EAAKgB,EAAOf,EAAKmB,EAAOlB,EAAKsB,CAC3DlZ,MAAK6U,QAAQ,GAAK4C,EAAKc,EAAOb,EAAKiB,EAAOhB,EAAKoB,EAAOnB,EAAKuB,CAC3DnZ,MAAK6U,QAAQ,GAAK4C,EAAKe,EAAOd,EAAKkB,EAAOjB,EAAKqB,EAAOpB,EAAKwB,CAE3DpZ,MAAK6U,QAAQ,GAAKgD,EAAKQ,EAAOP,EAAKW,EAAOV,EAAKc,EAAOb,EAAKiB,CAC3DjZ,MAAK6U,QAAQ,GAAKgD,EAAKS,EAAOR,EAAKY,EAAOX,EAAKe,EAAOd,EAAKkB,CAC3DlZ,MAAK6U,QAAQ,IAAMgD,EAAKU,EAAOT,EAAKa,EAAOZ,EAAKgB,EAAOf,EAAKmB,CAC5DnZ,MAAK6U,QAAQ,IAAMgD,EAAKW,EAAOV,EAAKc,EAAOb,EAAKiB,EAAOhB,EAAKoB,CAE5DpZ,MAAK6U,QAAQ,IAAMoD,EAAKI,EAAOH,EAAKO,EAAON,EAAKU,EAAOT,EAAKa,CAC5DjZ,MAAK6U,QAAQ,IAAMoD,EAAKK,EAAOJ,EAAKQ,EAAOP,EAAKW,EAAOV,EAAKc,CAC5DlZ,MAAK6U,QAAQ,IAAMoD,EAAKM,EAAOL,EAAKS,EAAOR,EAAKY,EAAOX,EAAKe,CAC5DnZ,MAAK6U,QAAQ,IAAMoD,EAAKO,EAAON,EAAKU,EAAOT,EAAKa,EAAOZ,EAAKgB,CAE5DpZ,MAAKgX,eAAiB,KAMhBhE,GAAAzS,UAAA8Y,eAAP,SAAsBC,EAAgBC,GAErCvZ,KAAKkX,OAAOlE,EAASwG,gBAAgBD,EAAKjM,EAAGiM,EAAKhM,EAAGgM,EAAK/L,EAAG8L,IAMvDtG,GAAAzS,UAAAkZ,WAAP,SAAkBC,EAAcC,EAAcC,GAE7C,GAAGF,GAAS,GAAKC,GAAS,GAAKC,GAAS,EAAG,MAC3C,IAAI7F,GAAmBf,EAAS6G,WAChC9F,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,GAAK,CAETA,GAAI,GAAK2F,CACT3F,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,GAAK,CAETA,GAAI,GAAK4F,CACT5F,GAAI,GAAK6F,CACT7F,GAAI,IAAM,CACVA,GAAI,IAAM,CAEVA,GAAI,IAAM,CACVA,GAAI,IAAM,CACVA,GAAI,IAAM,CACVA,GAAI,IAAM,CAEV/T,MAAKkX,OAAOlE,EAAS8G,YAMf9G,GAAAzS,UAAAwZ,YAAP,SAAmBC,EAAeC,EAAeC,GAEhD,GAAGF,GAAU,GAAKC,GAAU,GAAKC,GAAU,EAC1C,MAED,IAAInG,GAAmBf,EAAS6G,WAEhC9F,GAAI,GAAKiG,CACTjG,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,GAAK,CAETA,GAAI,GAAK,CACTA,GAAI,GAAKkG,CACTlG,GAAI,GAAK,CACTA,GAAI,GAAK,CAETA,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,IAAMmG,CACVnG,GAAI,IAAM,CAEVA,GAAI,IAAM,CACVA,GAAI,IAAM,CACVA,GAAI,IAAM,CACVA,GAAI,IAAM,CAEV/T,MAAKkX,OAAOlE,EAAS8G,YAMf9G,GAAAzS,UAAA4Z,kBAAP,SAAyB7M,EAAUC,EAAUC,GAE5CxN,KAAK6U,QAAQ,KAAOvH,CACpBtN,MAAK6U,QAAQ,KAAOtH,CACpBvN,MAAK6U,QAAQ,KAAOrH,CAEpBxN,MAAKgX,eAAiB,KAMhBhE,GAAAzS,UAAA+B,MAAP,WAEC,MAAO,IAAI0Q,GAAShT,KAAK6U,SAMnB7B,GAAAzS,UAAA6Z,eAAP,SAAsBC,EAAeC,GAEpC,OAAQD,GACP,IAAK,GACJra,KAAK6U,QAAS,GAAMyF,EAAShN,CAC7BtN,MAAK6U,QAAS,GAAMyF,EAAS/M,CAC7BvN,MAAK6U,QAAS,GAAMyF,EAAS9M,CAC7BxN,MAAK6U,QAAS,GAAMyF,EAASjH,CAC7B,MACD,KAAK,GACJrT,KAAK6U,QAAS,GAAMyF,EAAShN,CAC7BtN,MAAK6U,QAAS,GAAMyF,EAAS/M,CAC7BvN,MAAK6U,QAAS,GAAMyF,EAAS9M,CAC7BxN,MAAK6U,QAAS,GAAMyF,EAASjH,CAC7B,MACD,KAAK,GACJrT,KAAK6U,QAAS,GAAMyF,EAAShN,CAC7BtN,MAAK6U,QAAS,GAAMyF,EAAS/M,CAC7BvN,MAAK6U,QAAS,IAAOyF,EAAS9M,CAC9BxN,MAAK6U,QAAS,IAAOyF,EAASjH,CAC9B,MACD,KAAK,GACJrT,KAAK6U,QAAS,IAAOyF,EAAShN,CAC9BtN,MAAK6U,QAAS,IAAOyF,EAAS/M,CAC9BvN,MAAK6U,QAAS,IAAOyF,EAAS9M,CAC9BxN,MAAK6U,QAAS,IAAOyF,EAASjH,CAC9B,MACD,SACC,KAAM,IAAIhL,GAAc,yBAA2BgS,EAAS,+BAOxDrH,GAAAzS,UAAA6T,aAAP,SAAoBiG,EAAeC,GAElC,OAAQD,GACP,IAAK,GACJC,EAAShN,EAAItN,KAAK6U,QAAS,EAC3ByF,GAAS/M,EAAIvN,KAAK6U,QAAS,EAC3ByF,GAAS9M,EAAIxN,KAAK6U,QAAS,EAC3ByF,GAASjH,EAAIrT,KAAK6U,QAAS,EAC3B,MACD,KAAK,GACJyF,EAAShN,EAAItN,KAAK6U,QAAS,EAC3ByF,GAAS/M,EAAIvN,KAAK6U,QAAS,EAC3ByF,GAAS9M,EAAIxN,KAAK6U,QAAS,EAC3ByF,GAASjH,EAAIrT,KAAK6U,QAAS,EAC3B,MACD,KAAK,GACJyF,EAAShN,EAAItN,KAAK6U,QAAS,EAC3ByF,GAAS/M,EAAIvN,KAAK6U,QAAS,EAC3ByF,GAAS9M,EAAIxN,KAAK6U,QAAS,GAC3ByF,GAASjH,EAAIrT,KAAK6U,QAAS,GAC3B,MACD,KAAK,GACJyF,EAAShN,EAAItN,KAAK6U,QAAS,GAC3ByF,GAAS/M,EAAIvN,KAAK6U,QAAS,GAC3ByF,GAAS9M,EAAIxN,KAAK6U,QAAS,GAC3ByF,GAASjH,EAAIrT,KAAK6U,QAAS,GAC3B,MACD,SACC,KAAM,IAAIxM,GAAc,yBAA2BgS,EAAS,+BAOxDrH,GAAAzS,UAAA6N,SAAP,SAAgBgE,GAEf,GAAImI,GAAyBnI,EAAOyC,OACpC,IAAIpS,GAAa8X,EAAU3a,MAC3B,KAAK,GAAI+V,GAAW,EAAGA,EAAIlT,EAAKkT,IAC/B3V,KAAK6U,QAAQc,GAAK4E,EAAU5E,GAMvB3C,GAAAzS,UAAA8R,OAAP,SAAcjI,GAEb,GAAIoQ,GAAyBpQ,EAAOyK,OACpC,IAAIpS,GAAazC,KAAK6U,QAAQjV,MAC9B,KAAK,GAAI+V,GAAW,EAAGA,EAAIlT,EAAKkT,IAC/B6E,EAAU7E,GAAK3V,KAAK6U,QAAQc,GAGvB3C,GAAAzS,UAAA0T,gBAAP,SAAuB+B,EAAqBnT,EAAkB4X,GAAlB,GAAA5X,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAA4X,QAAA,GAAyB,CAAzBA,EAAA,MAE7D,GAAIA,EACHza,KAAKya,WAEN,IAAIhY,GAAauT,EAAOpW,OAASiD,CACjC,KAAK,GAAI8S,GAAW,EAAGA,EAAIlT,EAAKkT,IAC/B3V,KAAK6U,QAAQc,GAAKK,EAAOL,EAAI9S,EAE9B,IAAI4X,EACHza,KAAKya,YAGAzH,GAAAzS,UAAAuU,cAAP,SAAqBkB,EAAqBnT,EAAkB4X,GAAlB,GAAA5X,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAA4X,QAAA,GAAyB,CAAzBA,EAAA,MAE3D,GAAIA,EACHza,KAAKya,WAEN,IAAIhY,GAAazC,KAAK6U,QAAQjV,MAC9B,KAAK,GAAI+V,GAAW,EAAGA,EAAIlT,EAAKkT,IAC/BK,EAAOL,EAAI9S,GAAU7C,KAAK6U,QAAQc,EAEnC,IAAI8E,EACHza,KAAKya,YAMAzH,GAAAzS,UAAAma,YAAP,SAAmBC,EAAYL,GAE9B,OAAQK,GACP,IAAK,GACJ3a,KAAK6U,QAAS,GAAMyF,EAAShN,CAC7BtN,MAAK6U,QAAS,GAAMyF,EAAS/M,CAC7BvN,MAAK6U,QAAS,GAAMyF,EAAS9M,CAC7BxN,MAAK6U,QAAS,IAAOyF,EAASjH,CAC9B,MACD,KAAK,GACJrT,KAAK6U,QAAS,GAAMyF,EAAShN,CAC7BtN,MAAK6U,QAAS,GAAMyF,EAAS/M,CAC7BvN,MAAK6U,QAAS,GAAMyF,EAAS9M,CAC7BxN,MAAK6U,QAAS,IAAOyF,EAASjH,CAC9B,MACD,KAAK,GACJrT,KAAK6U,QAAS,GAAMyF,EAAShN,CAC7BtN,MAAK6U,QAAS,GAAMyF,EAAS/M,CAC7BvN,MAAK6U,QAAS,IAAOyF,EAAS9M,CAC9BxN,MAAK6U,QAAS,IAAOyF,EAASjH,CAC9B,MACD,KAAK,GACJrT,KAAK6U,QAAS,GAAMyF,EAAShN,CAC7BtN,MAAK6U,QAAS,GAAMyF,EAAS/M,CAC7BvN,MAAK6U,QAAS,IAAOyF,EAAS9M,CAC9BxN,MAAK6U,QAAS,IAAOyF,EAASjH,CAC9B,MACD,SACC,KAAM,IAAIhL,GAAc,sBAAwBsS,EAAM,+BAOlD3H,GAAAzS,UAAAqa,UAAP,SAAiBD,EAAYL,GAE5B,OAAQK,GACP,IAAK,GACJL,EAAShN,EAAItN,KAAK6U,QAAS,EAC3ByF,GAAS/M,EAAIvN,KAAK6U,QAAS,EAC3ByF,GAAS9M,EAAIxN,KAAK6U,QAAS,EAC3ByF,GAASjH,EAAIrT,KAAK6U,QAAS,GAC3B,MACD,KAAK,GACJyF,EAAShN,EAAItN,KAAK6U,QAAS,EAC3ByF,GAAS/M,EAAIvN,KAAK6U,QAAS,EAC3ByF,GAAS9M,EAAIxN,KAAK6U,QAAS,EAC3ByF,GAASjH,EAAIrT,KAAK6U,QAAS,GAC3B,MACD,KAAK,GACJyF,EAAShN,EAAItN,KAAK6U,QAAS,EAC3ByF,GAAS/M,EAAIvN,KAAK6U,QAAS,EAC3ByF,GAAS9M,EAAIxN,KAAK6U,QAAS,GAC3ByF,GAASjH,EAAIrT,KAAK6U,QAAS,GAC3B,MACD,KAAK,GACJyF,EAAShN,EAAItN,KAAK6U,QAAS,EAC3ByF,GAAS/M,EAAIvN,KAAK6U,QAAS,EAC3ByF,GAAS9M,EAAIxN,KAAK6U,QAAS,GAC3ByF,GAASjH,EAAIrT,KAAK6U,QAAS,GAC3B,MACD,SACC,KAAM,IAAIxM,GAAc,sBAAwBsS,EAAM,+BAOlD3H,GAAAzS,UAAAsa,UAAP,SAAiBC,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,cAEhB,GAAIC,EAEJ,IAAI/a,KAAKgb,aAAe,KACvBhb,KAAKgb,aAAe,KAAM,GAAI5N,GAAY,GAAIA,GAAY,GAAIA,GAE/D,IAAI6N,GAAgB,GAAI7N,GAASpN,KAAK6U,QAAQ,GAAI7U,KAAK6U,QAAQ,GAAI7U,KAAK6U,QAAQ,GAChF,IAAIqG,GAAgB,GAAI9N,GAASpN,KAAK6U,QAAQ,GAAI7U,KAAK6U,QAAQ,GAAI7U,KAAK6U,QAAQ,GAChF,IAAIsG,GAAgB,GAAI/N,GAASpN,KAAK6U,QAAQ,GAAI7U,KAAK6U,QAAQ,GAAI7U,KAAK6U,QAAQ,IAEhF,IAAIuG,GAAiBpb,KAAKgb,YAAY,EACtC,IAAIK,GAAgBrb,KAAKgb,YAAY,EAGrCI,GAAM9N,EAAI2N,EAAKrb,MACfqb,GAAKK,QAAQ,EAAEF,EAAM9N,EAGrB+N,GAAK/N,EAAI2N,EAAKzF,WAAW0F,EACzBA,GAAO9N,EAASmO,QAAQL,EAAMD,EAAM,GAAII,EAAK/N,EAG7C8N,GAAM7N,EAAI2N,EAAKtb,MACfsb,GAAKI,QAAQ,EAAEF,EAAM7N,EACrB8N,GAAK/N,GAAK8N,EAAM7N,CAGhB8N,GAAK9N,EAAI0N,EAAKzF,WAAW2F,EACzBA,GAAO/N,EAASmO,QAAQJ,EAAMF,EAAM,GAAII,EAAK9N,EAC7C8N,GAAK7N,EAAI0N,EAAK1F,WAAW2F,EACzBA,GAAO/N,EAASmO,QAAQJ,EAAMD,EAAM,GAAIG,EAAK7N,EAG7C4N,GAAM5N,EAAI2N,EAAKvb,MACfub,GAAKG,QAAQ,EAAEF,EAAM5N,EACrB6N,GAAK9N,GAAK6N,EAAM5N,CAChB6N,GAAK7N,GAAK4N,EAAM5N,CAIhB,IAAIyN,EAAKzF,WAAW0F,EAAK3F,aAAa4F,IAAS,EAAG,CACjDC,EAAM5N,GAAK4N,EAAM5N,CACjB2N,GAAK7N,GAAK6N,EAAK7N,CACf6N,GAAK5N,GAAK4N,EAAK5N,CACf4N,GAAK3N,GAAK2N,EAAK3N,EAGhB,GAAIgO,GAAMxb,KAAKgb,YAAY,EAE3B,QAAQF,GACP,IAAKhE,GAAc2E,WAElBD,EAAInI,EAAI5O,KAAKiX,MAAMT,EAAK3N,EAAI4N,EAAK3N,EAAI4N,EAAK3N,EAAI,GAAG,EAEjD,IAAI/K,GAAagC,KAAKkX,MAAMT,EAAK1N,EAAI2N,EAAK5N,IAAI2N,EAAK1N,EAAI2N,EAAK5N,IAAM4N,EAAK7N,EAAI2N,EAAKzN,IAAI2N,EAAK7N,EAAI2N,EAAKzN,IAAMyN,EAAK1N,EAAI2N,EAAK5N,IAAI2N,EAAK1N,EAAI2N,EAAK5N,GACxIkO,GAAIlO,GAAK4N,EAAK1N,EAAI2N,EAAK5N,GAAG9K,CAC1B+Y,GAAIjO,GAAK4N,EAAK7N,EAAI2N,EAAKzN,GAAG/K,CAC1B+Y,GAAIhO,GAAKyN,EAAK1N,EAAI2N,EAAK5N,GAAG7K,CAE1B,MACD,KAAKqU,GAAc8E,WAElB,GAAIC,GAAKZ,EAAK3N,EAAI4N,EAAK3N,EAAI4N,EAAK3N,CAEhC,IAAIqO,EAAK,EAAG,CACXL,EAAInI,EAAI5O,KAAKkX,KAAK,EAAIE,GAAI,CAE1BL,GAAIlO,GAAK4N,EAAK1N,EAAI2N,EAAK5N,IAAI,EAAEiO,EAAInI,EACjCmI,GAAIjO,GAAK4N,EAAK7N,EAAI2N,EAAKzN,IAAI,EAAEgO,EAAInI,EACjCmI,GAAIhO,GAAKyN,EAAK1N,EAAI2N,EAAK5N,IAAI,EAAEkO,EAAInI,OAC3B,IAAK4H,EAAK3N,EAAI4N,EAAK3N,GAAO0N,EAAK3N,EAAI6N,EAAK3N,EAAI,CAClDgO,EAAIlO,EAAI7I,KAAKkX,KAAK,EAAIV,EAAK3N,EAAI4N,EAAK3N,EAAI4N,EAAK3N,GAAG,CAEhDgO,GAAInI,GAAK6H,EAAK1N,EAAI2N,EAAK5N,IAAI,EAAEiO,EAAIlO,EACjCkO,GAAIjO,GAAK0N,EAAK1N,EAAI2N,EAAK5N,IAAI,EAAEkO,EAAIlO,EACjCkO,GAAIhO,GAAK2N,EAAK7N,EAAI2N,EAAKzN,IAAI,EAAEgO,EAAIlO,OAC3B,IAAI4N,EAAK3N,EAAI4N,EAAK3N,EAAG,CAC3BgO,EAAIjO,EAAI9I,KAAKkX,KAAK,EAAIT,EAAK3N,EAAI0N,EAAK3N,EAAI6N,EAAK3N,GAAG,CAEhDgO,GAAIlO,GAAK2N,EAAK1N,EAAI2N,EAAK5N,IAAI,EAAEkO,EAAIjO,EACjCiO,GAAInI,GAAK8H,EAAK7N,EAAI2N,EAAKzN,IAAI,EAAEgO,EAAIjO,EACjCiO,GAAIhO,GAAK0N,EAAK1N,EAAI2N,EAAK5N,IAAI,EAAEiO,EAAIjO,OAC3B,CACNiO,EAAIhO,EAAI/I,KAAKkX,KAAK,EAAIR,EAAK3N,EAAIyN,EAAK3N,EAAI4N,EAAK3N,GAAG,CAEhDiO,GAAIlO,GAAK6N,EAAK7N,EAAI2N,EAAKzN,IAAI,EAAEgO,EAAIhO,EACjCgO,GAAIjO,GAAK2N,EAAK1N,EAAI2N,EAAK5N,IAAI,EAAEiO,EAAIhO,EACjCgO,GAAInI,GAAK4H,EAAK1N,EAAI2N,EAAK5N,IAAI,EAAEkO,EAAIhO,GAGlC,KACD,KAAKsJ,GAAcgF,aAElBN,EAAIjO,EAAI9I,KAAKsX,MAAMd,EAAKzN,EAIxB,IAAIyN,EAAKzN,GAAK,GAAKyN,EAAKzN,IAAM,EAAG,CAChCgO,EAAIlO,EAAI7I,KAAKuX,MAAMd,EAAK1N,EAAG2N,EAAK3N,EAChCgO,GAAIhO,EAAI/I,KAAKuX,MAAMf,EAAK1N,EAAG0N,EAAK3N,OAC1B,CACNkO,EAAIhO,EAAI,CACRgO,GAAIlO,EAAI7I,KAAKuX,MAAMd,EAAK5N,EAAG4N,EAAK3N,GAGjC,MAGFvN,KAAKgb,YAAY,GAAKhb,KAAKiO,QAE3B,OAAOjO,MAAKgb,YAONhI,GAAAzS,UAAA8V,qBAAP,SAA4BlC,EAAYrV,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAEvC,GAAIwO,GAAW6G,EAAE7G,CACjB,IAAIC,GAAW4G,EAAE5G,CACjB,IAAIC,GAAW2G,EAAE3G,CAEjB,KAAK1O,EACJA,EAAI,GAAIsO,EAETtO,GAAEwO,EAAIA,EAAEtN,KAAK6U,QAAQ,GAAKtH,EAAEvN,KAAK6U,QAAQ,GAAKrH,EAAExN,KAAK6U,QAAQ,EAC7D/V,GAAEyO,EAAID,EAAEtN,KAAK6U,QAAQ,GAAKtH,EAAEvN,KAAK6U,QAAQ,GAAKrH,EAAExN,KAAK6U,QAAQ,EAC7D/V,GAAE0O,EAAIF,EAAEtN,KAAK6U,QAAQ,GAAKtH,EAAEvN,KAAK6U,QAAQ,GAAKrH,EAAExN,KAAK6U,QAAQ,GAC7D/V,GAAEuU,EAAI/F,EAAEtN,KAAK6U,QAAQ,GAAKtH,EAAEvN,KAAK6U,QAAQ,GAAKrH,EAAExN,KAAK6U,QAAQ,GAE7D,OAAO/V,GAMDkU,GAAAzS,UAAA0W,SAAP,WAECjX,KAAK6U,QAAQ,GAAK,CAClB7U,MAAK6U,QAAQ,GAAK,CAClB7U,MAAK6U,QAAQ,GAAK,CAClB7U,MAAK6U,QAAQ,GAAK,CAClB7U,MAAK6U,QAAQ,GAAK,CAClB7U,MAAK6U,QAAQ,GAAK,CAClB7U,MAAK6U,QAAQ,GAAK,CAClB7U,MAAK6U,QAAQ,GAAK,CAClB7U,MAAK6U,QAAQ,GAAK,CAClB7U,MAAK6U,QAAQ,GAAK,CAClB7U,MAAK6U,QAAQ,IAAM,CACnB7U,MAAK6U,QAAQ,IAAM,CACnB7U,MAAK6U,QAAQ,IAAM,CACnB7U,MAAK6U,QAAQ,IAAM,CACnB7U,MAAK6U,QAAQ,IAAM,CACnB7U,MAAK6U,QAAQ,IAAM,CAEnB7U,MAAKgX,eAAiB,KAMhBhE,GAAAiJ,YAAP,SAAmBC,EAAkBC,EAAgBC,GAEpD,GAAIhJ,GAAa,GAAIJ,EACrB,KAAK,GAAI3T,GAAW,EAAGA,EAAI,KAAMA,EAChC+T,EAAEyB,QAAQxV,GAAK6c,EAAQrH,QAAQxV,IAAM8c,EAAMtH,QAAQxV,GAAK6c,EAAQrH,QAAQxV,IAAI+c,CAE7E,OAAOhJ,GAMDJ,GAAAzS,UAAA8b,cAAP,SAAqBF,EAAgBC,GAEpC,IAAK,GAAI/c,GAAW,EAAGA,EAAI,KAAMA,EAChCW,KAAK6U,QAAQxV,GAAKW,KAAK6U,QAAQxV,IAAM8c,EAAMtH,QAAQxV,GAAKW,KAAK6U,QAAQxV,IAAI+c,EAMpEpJ,GAAAzS,UAAA+b,OAAP,WAEC,GAAIrc,GAAID,KAAKuc,WACb,IAAIC,GAAqB/X,KAAKgY,IAAIxc,GAAK,KAEvC,IAAIuc,EAAY,CACfvc,EAAI,EAAEA,CACN,IAAIyc,GAAa1c,KAAK6U,QAAQ,EAC9B,IAAI8H,GAAa3c,KAAK6U,QAAQ,EAC9B,IAAI+H,GAAa5c,KAAK6U,QAAQ,EAC9B,IAAIgI,GAAa7c,KAAK6U,QAAQ,EAC9B,IAAIiI,GAAa9c,KAAK6U,QAAQ,EAC9B,IAAIkI,GAAa/c,KAAK6U,QAAQ,EAC9B,IAAImI,GAAahd,KAAK6U,QAAQ,EAC9B,IAAIoI,GAAajd,KAAK6U,QAAQ,EAC9B,IAAIqI,GAAald,KAAK6U,QAAQ,EAC9B,IAAIsI,GAAand,KAAK6U,QAAQ,EAC9B,IAAIuI,GAAapd,KAAK6U,QAAQ,GAC9B,IAAIwI,GAAard,KAAK6U,QAAQ,GAC9B,IAAIyI,GAAatd,KAAK6U,QAAQ,GAC9B,IAAI0I,GAAavd,KAAK6U,QAAQ,GAC9B,IAAI2I,GAAaxd,KAAK6U,QAAQ,GAC9B,IAAI4I,GAAazd,KAAK6U,QAAQ,GAE9B7U,MAAK6U,QAAQ,GAAK5U,GAAG8c,GAAKK,EAAIK,EAAMD,EAAIH,GAAOF,GAAKH,EAAIS,EAAMD,EAAIP,GAAOM,GAAKP,EAAIK,EAAMD,EAAIH,GAC5Fjd,MAAK6U,QAAQ,IAAM5U,GAAG0c,GAAKS,EAAIK,EAAMD,EAAIH,GAAOF,GAAKP,EAAIa,EAAMD,EAAIX,GAAOU,GAAKX,EAAIS,EAAMD,EAAIP,GAC7F7c,MAAK6U,QAAQ,GAAK5U,GAAG0c,GAAKK,EAAIS,EAAMD,EAAIP,GAAOF,GAAKH,EAAIa,EAAMD,EAAIX,GAAOU,GAAKX,EAAIK,EAAMD,EAAIH,GAC5F7c,MAAK6U,QAAQ,IAAM5U,GAAG0c,GAAKK,EAAIK,EAAMD,EAAIH,GAAOF,GAAKH,EAAIS,EAAMD,EAAIP,GAAOM,GAAKP,EAAIK,EAAMD,EAAIH,GAC7F7c,MAAK6U,QAAQ,IAAM5U,GAAG6c,GAAKM,EAAIK,EAAMD,EAAIH,GAAOH,GAAKF,EAAIS,EAAMD,EAAIP,GAAOK,GAAKN,EAAIK,EAAMD,EAAIH,GAC7Fjd,MAAK6U,QAAQ,GAAK5U,GAAGyc,GAAKU,EAAIK,EAAMD,EAAIH,GAAOH,GAAKN,EAAIa,EAAMD,EAAIX,GAAOS,GAAKV,EAAIS,EAAMD,EAAIP,GAC5F7c,MAAK6U,QAAQ,IAAM5U,GAAGyc,GAAKM,EAAIS,EAAMD,EAAIP,GAAOH,GAAKF,EAAIa,EAAMD,EAAIX,GAAOS,GAAKV,EAAIK,EAAMD,EAAIH,GAC7F7c,MAAK6U,QAAQ,GAAK5U,GAAGyc,GAAKM,EAAIK,EAAMD,EAAIH,GAAOH,GAAKF,EAAIS,EAAMD,EAAIP,GAAOK,GAAKN,EAAIK,EAAMD,EAAIH,GAC5F7c,MAAK6U,QAAQ,GAAK5U,GAAG6c,GAAKK,EAAIM,EAAMF,EAAIF,GAAOH,GAAKH,EAAIU,EAAMF,EAAIN,GAAOK,GAAKP,EAAIM,EAAMF,EAAIF,GAC5Fjd,MAAK6U,QAAQ,IAAM5U,GAAGyc,GAAKS,EAAIM,EAAMF,EAAIF,GAAOH,GAAKP,EAAIc,EAAMF,EAAIV,GAAOS,GAAKX,EAAIU,EAAMF,EAAIN,GAC7F7c,MAAK6U,QAAQ,IAAM5U,GAAGyc,GAAKK,EAAIU,EAAMF,EAAIN,GAAOH,GAAKH,EAAIc,EAAMF,EAAIV,GAAOS,GAAKX,EAAIM,EAAMF,EAAIF,GAC7F7c,MAAK6U,QAAQ,KAAO5U,GAAGyc,GAAKK,EAAIM,EAAMF,EAAIF,GAAOH,GAAKH,EAAIU,EAAMF,EAAIN,GAAOK,GAAKP,EAAIM,EAAMF,EAAIF,GAC9F7c,MAAK6U,QAAQ,KAAO5U,GAAG6c,GAAKK,EAAIK,EAAMD,EAAIH,GAAOF,GAAKH,EAAIS,EAAMD,EAAIP,GAAOM,GAAKP,EAAIK,EAAMD,EAAIH,GAC9Fhd,MAAK6U,QAAQ,IAAM5U,GAAGyc,GAAKS,EAAIK,EAAMD,EAAIH,GAAOF,GAAKP,EAAIa,EAAMD,EAAIX,GAAOU,GAAKX,EAAIS,EAAMD,EAAIP,GAC7F5c,MAAK6U,QAAQ,KAAO5U,GAAGyc,GAAKK,EAAIS,EAAMD,EAAIP,GAAOF,GAAKH,EAAIa,EAAMD,EAAIX,GAAOU,GAAKX,EAAIK,EAAMD,EAAIH,GAC9F5c,MAAK6U,QAAQ,IAAM5U,GAAGyc,GAAKK,EAAIK,EAAMD,EAAIH,GAAOF,GAAKH,EAAIS,EAAMD,EAAIP,GAAOM,GAAKP,EAAIK,EAAMD,EAAIH,IAG9F5c,KAAKgX,eAAiB,IAEtB,OAAOwF,GAYDxJ,GAAAzS,UAAAgS,QAAP,SAAemL,GAEd,GAAIrG,GAAcqG,EAAI7I,QAAQ,EAC9B,IAAIyC,GAAcoG,EAAI7I,QAAQ,EAC9B,IAAI0C,GAAcmG,EAAI7I,QAAQ,EAC9B,IAAI2C,GAAckG,EAAI7I,QAAQ,EAC9B,IAAI4C,GAAciG,EAAI7I,QAAQ,EAC9B,IAAI6C,GAAcgG,EAAI7I,QAAQ,EAC9B,IAAI8C,GAAc+F,EAAI7I,QAAQ,EAC9B,IAAI+C,GAAc8F,EAAI7I,QAAQ,EAC9B,IAAIgD,GAAc6F,EAAI7I,QAAQ,EAC9B,IAAIiD,GAAc4F,EAAI7I,QAAQ,EAC9B,IAAIkD,GAAc2F,EAAI7I,QAAQ,GAC9B,IAAImD,GAAc0F,EAAI7I,QAAQ,GAC9B,IAAIoD,GAAcyF,EAAI7I,QAAQ,GAC9B,IAAIqD,GAAcwF,EAAI7I,QAAQ,GAC9B,IAAIsD,GAAcuF,EAAI7I,QAAQ,GAC9B,IAAIuD,GAAcsF,EAAI7I,QAAQ,GAE9B,IAAIwD,GAAcrY,KAAK6U,QAAQ,EAC/B,IAAIyD,GAActY,KAAK6U,QAAQ,EAC/B,IAAI0D,GAAcvY,KAAK6U,QAAQ,EAC/B,IAAI2D,GAAcxY,KAAK6U,QAAQ,EAC/B,IAAI4D,GAAczY,KAAK6U,QAAQ,EAC/B,IAAI6D,GAAc1Y,KAAK6U,QAAQ,EAC/B,IAAI8D,GAAc3Y,KAAK6U,QAAQ,EAC/B,IAAI+D,GAAc5Y,KAAK6U,QAAQ,EAC/B,IAAIgE,GAAc7Y,KAAK6U,QAAQ,EAC/B,IAAIiE,GAAc9Y,KAAK6U,QAAQ,EAC/B,IAAIkE,GAAc/Y,KAAK6U,QAAQ,GAC/B,IAAImE,GAAchZ,KAAK6U,QAAQ,GAC/B,IAAIoE,GAAcjZ,KAAK6U,QAAQ,GAC/B,IAAIqE,GAAclZ,KAAK6U,QAAQ,GAC/B,IAAIsE,GAAcnZ,KAAK6U,QAAQ,GAC/B,IAAIuE,GAAcpZ,KAAK6U,QAAQ,GAE/B7U,MAAK6U,QAAQ,GAAKwC,EAAKgB,EAAOf,EAAKmB,EAAOlB,EAAKsB,EAAOrB,EAAKyB,CAC3DjZ,MAAK6U,QAAQ,GAAKwC,EAAKiB,EAAOhB,EAAKoB,EAAOnB,EAAKuB,EAAOtB,EAAK0B,CAC3DlZ,MAAK6U,QAAQ,GAAKwC,EAAKkB,EAAOjB,EAAKqB,EAAOpB,EAAKwB,EAAOvB,EAAK2B,CAC3DnZ,MAAK6U,QAAQ,GAAKwC,EAAKmB,EAAOlB,EAAKsB,EAAOrB,EAAKyB,EAAOxB,EAAK4B,CAE3DpZ,MAAK6U,QAAQ,GAAK4C,EAAKY,EAAOX,EAAKe,EAAOd,EAAKkB,EAAOjB,EAAKqB,CAC3DjZ,MAAK6U,QAAQ,GAAK4C,EAAKa,EAAOZ,EAAKgB,EAAOf,EAAKmB,EAAOlB,EAAKsB,CAC3DlZ,MAAK6U,QAAQ,GAAK4C,EAAKc,EAAOb,EAAKiB,EAAOhB,EAAKoB,EAAOnB,EAAKuB,CAC3DnZ,MAAK6U,QAAQ,GAAK4C,EAAKe,EAAOd,EAAKkB,EAAOjB,EAAKqB,EAAOpB,EAAKwB,CAE3DpZ,MAAK6U,QAAQ,GAAKgD,EAAKQ,EAAOP,EAAKW,EAAOV,EAAKc,EAAOb,EAAKiB,CAC3DjZ,MAAK6U,QAAQ,GAAKgD,EAAKS,EAAOR,EAAKY,EAAOX,EAAKe,EAAOd,EAAKkB,CAC3DlZ,MAAK6U,QAAQ,IAAMgD,EAAKU,EAAOT,EAAKa,EAAOZ,EAAKgB,EAAOf,EAAKmB,CAC5DnZ,MAAK6U,QAAQ,IAAMgD,EAAKW,EAAOV,EAAKc,EAAOb,EAAKiB,EAAOhB,EAAKoB,CAE5DpZ,MAAK6U,QAAQ,IAAMoD,EAAKI,EAAOH,EAAKO,EAAON,EAAKU,EAAOT,EAAKa,CAC5DjZ,MAAK6U,QAAQ,IAAMoD,EAAKK,EAAOJ,EAAKQ,EAAOP,EAAKW,EAAOV,EAAKc,CAC5DlZ,MAAK6U,QAAQ,IAAMoD,EAAKM,EAAOL,EAAKS,EAAOR,EAAKY,EAAOX,EAAKe,CAC5DnZ,MAAK6U,QAAQ,IAAMoD,EAAKO,EAAON,EAAKU,EAAOT,EAAKa,EAAOZ,EAAKgB,CAE5DpZ,MAAKgX,eAAiB,KAMhBhE,GAAAzS,UAAAod,gBAAP,SAAuBrE,EAAgBC,GAEtC,GAAInG,GAAaJ,EAASwG,gBAAgBD,EAAKjM,EAAGiM,EAAKhM,EAAGgM,EAAK/L,EAAG8L,EASlEtZ,MAAKuS,QAAQa,GAMPJ,GAAAzS,UAAAqd,aAAP,SAAoB5D,EAAeC,EAAeC,GAEjD,GAAGF,GAAU,GAAKC,GAAU,GAAKC,GAAU,EAC1C,MAED,IAAInG,GAAmBf,EAAS6G,WAEhC9F,GAAI,GAAKiG,CACTjG,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,GAAK,CAETA,GAAI,GAAK,CACTA,GAAI,GAAKkG,CACTlG,GAAI,GAAK,CACTA,GAAI,GAAK,CAETA,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,IAAMmG,CACVnG,GAAI,IAAM,CAEVA,GAAI,IAAM,CACVA,GAAI,IAAM,CACVA,GAAI,IAAM,CACVA,GAAI,IAAM,CAEV/T,MAAKuS,QAAQS,EAAS8G,YAMhB9G,GAAAzS,UAAAsd,mBAAP,SAA0BvQ,EAAUC,EAAUC,GAE7C,GAAIuG,GAAmBf,EAAS6G,WAEhC9F,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,GAAK,CAETA,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,GAAK,CAETA,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,IAAM,CACVA,GAAI,IAAM,CAEVA,GAAI,IAAMzG,CACVyG,GAAI,IAAMxG,CACVwG,GAAI,IAAMvG,CACVuG,GAAI,IAAM,CAEV/T,MAAKuS,QAAQS,EAAS8G,YAOhB9G,GAAAzS,UAAAud,UAAP,SAAiBC,GAEhB,GAAI9I,GAAe8I,EAAW,IAAM/d,KAAKiO,QAEzCjO,MAAKiX,UACL,IAAImE,GAAiB2C,EAAW,EAChC,IAAG3C,IAAUA,EAAM9N,GAAK,GAAK8N,EAAM7N,GAAK,GAAK6N,EAAM5N,GAAK,GACvDxN,KAAK+Z,YAAYqB,EAAM9N,EAAG8N,EAAM7N,EAAG6N,EAAM5N,EAE1C,IAAI6N,GAAgB0C,EAAW,EAC/B,IAAG1C,IAASA,EAAK/N,GAAI,GAAK+N,EAAK9N,GAAK,GAAK8N,EAAK7N,GAAK,GAClDxN,KAAKyZ,WAAW4B,EAAK/N,EAAG+N,EAAK9N,EAAG8N,EAAK7N,EAEtC,IAAIwQ,EACJ,IAAIC,EACJ,IAAIlK,GAAmBf,EAAS6G,WAChC9F,GAAI,IAAM,CACVA,GAAI,IAAM,CACVA,GAAI,IAAM,CACVA,GAAI,IAAM,CAEV,IAAImK,GAAoBH,EAAW,EACnC,IAAIG,EAAU,CACb,GAAIC,IAAgBD,EAAS5Q,CAC7B,IAAG6Q,GAAS,EAAE,CACbH,EAAMvZ,KAAKuZ,IAAIG,EACfF,GAAMxZ,KAAKwZ,IAAIE,EAEfpK,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,GAAK,CAETA,GAAI,GAAK,CACTA,GAAI,GAAKkK,CACTlK,GAAI,IAAMiK,CACVjK,GAAI,GAAK,CAETA,GAAI,GAAK,CACTA,GAAI,GAAKiK,CACTjK,GAAI,IAAMkK,CACVlK,GAAI,IAAM,CAEV/T,MAAKkX,OAAOlE,EAAS8G,YAEtBqE,GAASD,EAAS3Q,CAClB,IAAG4Q,GAAS,EAAE,CACbH,EAAMvZ,KAAKuZ,IAAIG,EACfF,GAAMxZ,KAAKwZ,IAAIE,EAEfpK,GAAI,GAAKkK,CACTlK,GAAI,GAAK,CACTA,GAAI,GAAKiK,CACTjK,GAAI,GAAK,CAETA,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,GAAK,CAETA,GAAI,IAAMiK,CACVjK,GAAI,GAAK,CACTA,GAAI,IAAMkK,CACVlK,GAAI,IAAM,CAEV/T,MAAKkX,OAAOlE,EAAS8G,YAEtBqE,GAASD,EAAS1Q,CAClB,IAAG2Q,GAAS,EAAE,CACbH,EAAMvZ,KAAKuZ,IAAIG,EACfF,GAAMxZ,KAAKwZ,IAAIE,EAEfpK,GAAI,GAAKkK,CACTlK,GAAI,IAAMiK,CACVjK,GAAI,GAAK,CACTA,GAAI,GAAK,CAETA,GAAI,GAAKiK,CACTjK,GAAI,GAAKkK,CACTlK,GAAI,GAAK,CACTA,GAAI,GAAK,CAETA,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,IAAM,CACVA,GAAI,IAAM,CAEV/T,MAAKkX,OAAOlE,EAAS8G,aAIvB9Z,KAAK6U,QAAQ,IAAMI,EAAI3H,CACvBtN,MAAK6U,QAAQ,IAAMI,EAAI1H,CACvBvN,MAAK6U,QAAQ,IAAMI,EAAIzH,CAEvB,IAAIuQ,EAAW,GACd/d,KAAKgX,eAAiB,IAEvBhX,MAAK6U,QAAQ,IAAM,CAEnB,OAAO,MAGD7B,GAAAzS,UAAAwV,gBAAP,SAAuB5B,EAAYrV,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAElC,GAAIqV,GAAK,KACR,MAAOrV,IAAK,GAAIsO,EAEjB,IAAIE,GAAW6G,EAAE7G,CACjB,IAAIC,GAAW4G,EAAE5G,CACjB,IAAIC,GAAW2G,EAAE3G,CAEjB,KAAK1O,EACJA,EAAI,GAAIsO,EAETtO,GAAEwO,EAAIA,EAAEtN,KAAK6U,QAAQ,GAAKtH,EAAEvN,KAAK6U,QAAQ,GAAKrH,EAAExN,KAAK6U,QAAQ,GAAK7U,KAAK6U,QAAQ,GAC/E/V,GAAEyO,EAAID,EAAEtN,KAAK6U,QAAQ,GAAKtH,EAAEvN,KAAK6U,QAAQ,GAAKrH,EAAExN,KAAK6U,QAAQ,GAAK7U,KAAK6U,QAAQ,GAC/E/V,GAAE0O,EAAIF,EAAEtN,KAAK6U,QAAQ,GAAKtH,EAAEvN,KAAK6U,QAAQ,GAAKrH,EAAExN,KAAK6U,QAAQ,IAAM7U,KAAK6U,QAAQ,GAChF/V,GAAEuU,EAAI/F,EAAEtN,KAAK6U,QAAQ,GAAKtH,EAAEvN,KAAK6U,QAAQ,GAAKrH,EAAExN,KAAK6U,QAAQ,IAAM7U,KAAK6U,QAAQ,GAEhF,OAAO/V,GAGDkU,GAAAzS,UAAA6d,aAAP,SAAoBle,EAAOpB,GAAA,GAAAA,QAAA,GAAY,CAAZA,EAAA,KAE1B,GAAIoB,GAAK,KACR,MAAOpB,IAAK,GAAIuO,EAEjB,IAAIgR,GAAaC,EAAaC,CAC9B,IAAIC,GAAaC,EAAaC,CAE9BF,GAAOte,EAAEuN,OAAS4Q,EAAOne,EAAEoN,EAC3BmR,GAAOve,EAAEwN,QAAU4Q,EAAOpe,EAAEqN,EAC5BmR,GAAOxe,EAAEyN,OAAS4Q,EAAOre,EAAEsN,EAE3B,KAAK1O,EACJA,EAAI,GAAIuO,EAGTvO,GAAE2O,MAAQ+Q,EAAKxe,KAAK6U,QAAQ,GAAK4J,EAAKze,KAAK6U,QAAQ,GAAK6J,EAAK1e,KAAK6U,QAAQ,GAAK7U,KAAK6U,QAAQ,KAAO/V,EAAEwO,EAAI+Q,EAAKre,KAAK6U,QAAQ,GAAKyJ,EAAKte,KAAK6U,QAAQ,GAAK0J,EAAKve,KAAK6U,QAAQ,GAAK7U,KAAK6U,QAAQ,IAC3L/V,GAAE4O,OAAS8Q,EAAKxe,KAAK6U,QAAQ,GAAK4J,EAAKze,KAAK6U,QAAQ,GAAK6J,EAAK1e,KAAK6U,QAAQ,GAAK7U,KAAK6U,QAAQ,KAAO/V,EAAEyO,EAAI8Q,EAAKre,KAAK6U,QAAQ,GAAKyJ,EAAKte,KAAK6U,QAAQ,GAAK0J,EAAKve,KAAK6U,QAAQ,GAAK7U,KAAK6U,QAAQ,IAC5L/V,GAAE6O,MAAQ6Q,EAAKxe,KAAK6U,QAAQ,GAAK4J,EAAKze,KAAK6U,QAAQ,GAAK6J,EAAK1e,KAAK6U,QAAQ,IAAM7U,KAAK6U,QAAQ,KAAO/V,EAAE0O,EAAI6Q,EAAKre,KAAK6U,QAAQ,GAAKyJ,EAAKte,KAAK6U,QAAQ,GAAK0J,EAAKve,KAAK6U,QAAQ,IAAM7U,KAAK6U,QAAQ,IAE7L,OAAO/V,GAMDkU,GAAAzS,UAAAoe,iBAAP,SAAwBlI,EAAcC,GAErC,GAAIrX,GAAW,CACf,IAAIiO,GAAW,EAAGC,EAAW,EAAGC,EAAW,CAE3C,OAAOnO,EAAI,GAAKoX,EAAI7W,OAAQ,CAC3B0N,EAAImJ,EAAIpX,EACRkO,GAAIkJ,EAAIpX,EAAI,EACZmO,GAAIiJ,EAAIpX,EAAI,EACZqX,GAAKrX,GAAKiO,EAAEtN,KAAK6U,QAAQ,GAAKtH,EAAEvN,KAAK6U,QAAQ,GAAKrH,EAAExN,KAAK6U,QAAQ,GAAK7U,KAAK6U,QAAQ,GACnF6B,GAAKrX,EAAI,GAAKiO,EAAEtN,KAAK6U,QAAQ,GAAKtH,EAAEvN,KAAK6U,QAAQ,GAAKrH,EAAExN,KAAK6U,QAAQ,GAAK7U,KAAK6U,QAAQ,GACvF6B,GAAKrX,EAAI,GAAKiO,EAAEtN,KAAK6U,QAAQ,GAAKtH,EAAEvN,KAAK6U,QAAQ,GAAKrH,EAAExN,KAAK6U,QAAQ,IAAM7U,KAAK6U,QAAQ,GACxFxV,IAAK,GAOA2T,GAAAzS,UAAAka,UAAP,WAEC,GAAI1G,GAAmBf,EAAS6G,WAChC7Z,MAAK8U,cAAcf,EAEnB/T,MAAK6U,QAAQ,GAAKd,EAAI,EACtB/T,MAAK6U,QAAQ,GAAKd,EAAI,EACtB/T,MAAK6U,QAAQ,GAAKd,EAAI,GACtB/T,MAAK6U,QAAQ,GAAKd,EAAI,EACtB/T,MAAK6U,QAAQ,GAAKd,EAAI,EACtB/T,MAAK6U,QAAQ,GAAKd,EAAI,GACtB/T,MAAK6U,QAAQ,GAAKd,EAAI,EACtB/T,MAAK6U,QAAQ,GAAKd,EAAI,EACtB/T,MAAK6U,QAAQ,IAAMd,EAAI,GACvB/T,MAAK6U,QAAQ,IAAMd,EAAI,EACvB/T,MAAK6U,QAAQ,IAAMd,EAAI,EACvB/T,MAAK6U,QAAQ,IAAMd,EAAI,GAEvB/T,MAAKgX,eAAiB,KAGhBhE,GAAAwG,gBAAP,SAAuBlM,EAAUC,EAAUC,EAAU8L,GAKpD,GAAIlG,GAAa,GAAIJ,EAErB,IAAI4L,GAAMtF,EAAQ3G,EAAWG,kBAC7B,IAAI6C,GAAWlR,KAAKwZ,IAAIW,EACxB,IAAI3f,GAAWwF,KAAKuZ,IAAIY,EACxB,IAAI9f,GAAW,EAAI6W,CACnB,IAAIkJ,GAAaC,CAEjB1L,GAAEyB,QAAQ,GAAKc,EAAIrI,EAAEA,EAAExO,CACvBsU,GAAEyB,QAAQ,GAAKc,EAAIpI,EAAEA,EAAEzO,CACvBsU,GAAEyB,QAAQ,IAAMc,EAAInI,EAAEA,EAAE1O,CAExB+f,GAAOvR,EAAEC,EAAEzO,CACXggB,GAAOtR,EAAEvO,CACTmU,GAAEyB,QAAQ,GAAKgK,EAAOC,CACtB1L,GAAEyB,QAAQ,GAAKgK,EAAOC,CACtBD,GAAOvR,EAAEE,EAAE1O,CACXggB,GAAOvR,EAAEtO,CACTmU,GAAEyB,QAAQ,GAAKgK,EAAOC,CACtB1L,GAAEyB,QAAQ,GAAKgK,EAAOC,CACtBD,GAAOtR,EAAEC,EAAE1O,CACXggB,GAAOxR,EAAErO,CACTmU,GAAEyB,QAAQ,GAAKgK,EAAOC,CACtB1L,GAAEyB,QAAQ,GAAKgK,EAAOC,CAEtB,OAAO1L,GAMR7R,QAAAC,eAAWwR,EAAAzS,UAAA,e7Bk1EJkB,I6Bl1EP,WAEC,OAASzB,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,GAAK7U,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,KAAK7U,KAAK6U,QAAQ,IAAI7U,KAAK6U,QAAQ,IAAM7U,KAAK6U,QAAQ,IAAI7U,KAAK6U,QAAQ,MAAQ7U,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,GAAK7U,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,KAAK7U,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,IAAM7U,KAAK6U,QAAQ,IAAI7U,KAAK6U,QAAQ,KAAO7U,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,IAAM7U,KAAK6U,QAAQ,IAAI7U,KAAK6U,QAAQ,KAAK7U,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,IAAM7U,KAAK6U,QAAQ,IAAI7U,KAAK6U,QAAQ,KAAO7U,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,GAAK7U,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,KAAK7U,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,IAAM7U,KAAK6U,QAAQ,IAAI7U,KAAK6U,QAAQ,KAAO7U,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,IAAM7U,KAAK6U,QAAQ,IAAI7U,KAAK6U,QAAQ,KAAK7U,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,IAAM7U,KAAK6U,QAAQ,IAAI7U,KAAK6U,QAAQ,KAAO7U,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,IAAM7U,KAAK6U,QAAQ,IAAI7U,KAAK6U,QAAQ,KAAK7U,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,GAAK7U,KAAK6U,QAAQ,GAAG7U,KAAK6U,QAAQ,K7Bm1E10BlT,WAAY,KACZC,aAAc,M6B70ErBL,QAAAC,eAAWwR,EAAAzS,UAAA,Y7Bo1EJkB,I6Bp1EP,WAEC,GAAIzB,KAAKgX,eAAgB,CACxBhX,KAAKgX,eAAiB,KACtBhX,MAAK+W,UAAUzJ,EAAItN,KAAK6U,QAAQ,GAChC7U,MAAK+W,UAAUxJ,EAAIvN,KAAK6U,QAAQ,GAChC7U,MAAK+W,UAAUvJ,EAAIxN,KAAK6U,QAAQ,IAGjC,MAAO7U,MAAK+W,W7Bo1ENpV,WAAY,KACZC,aAAc,M6Bl1EdoR,GAAAzS,UAAAwe,mBAAP,WAEC/e,KAAKgX,eAAiB,KAGhBhE,GAAAzS,UAAAye,QAAP,SAAeC,GAEd,GAAIC,GAAmBza,KAAK0a,IAAI,GAAIF,EACpC,OAAO,YAAcxa,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAGqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAGqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAGqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAGqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAGqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAGqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAGqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAGqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAGqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAGqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,IAAIqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,IAAIqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,IAAIqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,IAAIqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,IAAIqK,GAAWA,EAAY,IAAMza,KAAK2a,MAAMpf,KAAK6U,QAAQ,IAAIqK,GAAWA,EAAY,IAG/4BlM,GAAAzS,UAAA4Q,SAAP,WAEC,MAAO,YAAc1M,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAG,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAG,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAG,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAG,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAG,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAG,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAG,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAG,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAG,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,GAAG,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,IAAI,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,IAAI,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,IAAI,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,IAAI,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,IAAI,KAAM,IAAO,IAAMpQ,KAAK2a,MAAMpf,KAAK6U,QAAQ,IAAI,KAAM,IAAO,IA/+BvuB7B,GAAA8G,WAAsB,GAAI9G,EAC1BA,GAAA6G,YAA2B7G,EAAS8G,WAAWjF,OAg/B/D,OAAA7B,KAEkBlT,GAAAJ,QAATsT,I7Bm1EN5K,uCAAuC,uCAAuC+E,2BAA2B,2BAA2BuF,kCAAkC,kCAAkC2M,qCAAqC,qCAAqC/N,gCAAgC,kCAAkCgO,+BAA+B,SAAS1gB,EAAQkB,EAAOJ,G8Bv1G9Y,GAAO6f,GAAK3gB,EAAe,6BAE3B,IAAOyJ,GAAazJ,EAAa,uC9B+4GjC,I8Bt1GM4gB,GAAM,WA2DX,QA3DKA,GA2DOpgB,EAAcc,EAAcyV,EAAc1V,EAAcwf,EAAeC,GAAvE,GAAAtgB,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAc,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAyV,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAA1V,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAwf,QAAA,GAAa,CAAbA,EAAA,EAAe,GAAAC,QAAA,GAAa,CAAbA,EAAA,EAElF1f,KAAKZ,EAAIA,CACTY,MAAKE,EAAIA,CACTF,MAAK2V,EAAIA,CACT3V,MAAKC,EAAIA,CACTD,MAAKyf,GAAKA,CACVzf,MAAK0f,GAAKA,EASJF,EAAAjf,UAAA+B,MAAP,WAEC,MAAO,IAAIkd,GAAOxf,KAAKZ,EAAGY,KAAKE,EAAGF,KAAK2V,EAAG3V,KAAKC,EAAGD,KAAKyf,GAAIzf,KAAK0f,IAqB1DF,GAAAjf,UAAAof,OAAP,SAAc3K,GAEb,GAAI4K,GAAK5f,KAAKZ,EAAE4V,EAAO5V,EAAIY,KAAKE,EAAE8U,EAAOW,CACzC3V,MAAKE,EAAIF,KAAKZ,EAAE4V,EAAO9U,EAAIF,KAAKE,EAAE8U,EAAO/U,CACzCD,MAAKZ,EAAIwgB,CAET,IAAIC,GAAK7f,KAAK2V,EAAEX,EAAO5V,EAAIY,KAAKC,EAAE+U,EAAOW,CACzC3V,MAAKC,EAAID,KAAK2V,EAAEX,EAAO9U,EAAIF,KAAKC,EAAE+U,EAAO/U,CAEzCD,MAAK2V,EAAIkK,CAET,IAAIC,GAAM9f,KAAKyf,GAAGzK,EAAO5V,EAAIY,KAAK0f,GAAG1K,EAAOW,EAAIX,EAAOyK,EACvDzf,MAAK0f,GAAK1f,KAAKyf,GAAGzK,EAAO9U,EAAIF,KAAK0f,GAAG1K,EAAO/U,EAAI+U,EAAO0K,EACvD1f,MAAKyf,GAAKK,EAUJN,GAAAjf,UAAA6Z,eAAP,SAAsBC,EAAeC,GAEpC,GAAID,EAAS,EAAG,CACf,KAAM,UAAYA,EAAS,yBACrB,IAAIA,GAAU,EAAG,CACvBra,KAAKZ,EAAIkb,EAAShN,CAClBtN,MAAK2V,EAAI2E,EAAS/M,MACZ,IAAI8M,GAAU,EAAG,CACvBra,KAAKE,EAAIoa,EAAShN,CAClBtN,MAAKC,EAAIqa,EAAS/M,MACZ,CACNvN,KAAKyf,GAAKnF,EAAShN,CACnBtN,MAAK0f,GAAKpF,EAAS/M,GAWdiS,GAAAjf,UAAA6T,aAAP,SAAoBiG,EAAeC,GAElC,GAAID,EAAS,EAAG,CACf,KAAM,IAAIhS,GAAc,yBAA2BgS,EAAS,kCACtD,IAAIA,GAAU,EAAG,CACvBC,EAAShN,EAAItN,KAAKZ,CAClBkb,GAAS/M,EAAIvN,KAAK2V,CAClB2E,GAAS9M,EAAI,MACP,IAAI6M,GAAU,EAAG,CACvBC,EAAShN,EAAItN,KAAKE,CAClBoa,GAAS/M,EAAIvN,KAAKC,CAClBqa,GAAS9M,EAAI,MACP,CACN8M,EAAShN,EAAItN,KAAKyf,EAClBnF,GAAS/M,EAAIvN,KAAK0f,EAClBpF,GAAS9M,EAAI,GAURgS,GAAAjf,UAAA6N,SAAP,SAAgB2R,GAEf/f,KAAKZ,EAAI2gB,EAAa3gB,CACtBY,MAAKE,EAAI6f,EAAa7f,CACtBF,MAAK2V,EAAIoK,EAAapK,CACtB3V,MAAKC,EAAI8f,EAAa9f,CACtBD,MAAKyf,GAAKM,EAAaN,EACvBzf,MAAK0f,GAAKK,EAAaL,GASjBF,GAAAjf,UAAAma,YAAP,SAAmBC,EAAYL,GAE9B,GAAIK,EAAM,EAAG,CACZ,KAAM,IAAItS,GAAc,sBAAwBsS,EAAM,kCAChD,IAAIA,GAAO,EAAG,CACpB3a,KAAKZ,EAAIkb,EAAShN,CAClBtN,MAAK2V,EAAI2E,EAAS/M,MACZ,IAAIoN,GAAO,EAAG,CACpB3a,KAAKE,EAAIoa,EAAShN,CAClBtN,MAAKC,EAAIqa,EAAS/M,MACZ,CACNvN,KAAKyf,GAAKnF,EAAShN,CACnBtN,MAAK0f,GAAKpF,EAAS/M,GAWdiS,GAAAjf,UAAAqa,UAAP,SAAiBD,EAAYL,GAE5B,GAAIK,EAAM,EAAG,CACZ,KAAM,IAAItS,GAAc,sBAAwBsS,EAAM,kCAChD,IAAIA,GAAO,EAAG,CACpBL,EAAShN,EAAItN,KAAKZ,CAClBkb,GAAS/M,EAAIvN,KAAKE,CAClBoa,GAAS9M,EAAIxN,KAAKyf,OACZ,IAAI9E,GAAO,EAAG,CACpBL,EAAShN,EAAItN,KAAK2V,CAClB2E,GAAS/M,EAAIvN,KAAKC,CAClBqa,GAAS9M,EAAIxN,KAAK0f,OACZ,CACNpF,EAAS1J,MAAM,EAAG,EAAG,IAsBhB4O,GAAAjf,UAAAyf,UAAP,SAAiBC,EAAeC,EAAehC,EAAqBuB,EAAeC,GAApC,GAAAxB,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAuB,QAAA,GAAa,CAAbA,EAAA,EAAe,GAAAC,QAAA,GAAa,CAAbA,EAAA,EAElF1f,KAAKZ,EAAI6gB,CACTjgB,MAAKC,EAAIigB,CACTlgB,MAAKE,EAAIge,CACTle,MAAKyf,GAAKA,CACVzf,MAAK0f,GAAKA,EAoCJF,GAAAjf,UAAA4f,kBAAP,SAAyB1S,EAAcC,EAAewQ,EAAqBuB,EAAeC,GAApC,GAAAxB,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAuB,QAAA,GAAa,CAAbA,EAAA,EAAe,GAAAC,QAAA,GAAa,CAAbA,EAAA,EAEzF1f,KAAKZ,EAAIqO,EAAM,MACfzN,MAAKC,EAAIyN,EAAO,MAEhB,IAAIwQ,GAAY,EAAK,CACpB,GAAID,GAAMxZ,KAAKwZ,IAAIC,EACnB,IAAIF,GAAMvZ,KAAKuZ,IAAIE,EAEnBle,MAAKE,EAAI8d,EAAIhe,KAAKC,CAClBD,MAAK2V,GAAKqI,EAAIhe,KAAKZ,CACnBY,MAAKZ,GAAK6e,CACVje,MAAKC,GAAKge,MACJ,CACNje,KAAKE,EAAIF,KAAK2V,EAAI,EAGnB3V,KAAKyf,GAAKA,EAAKhS,EAAM,CACrBzN,MAAK0f,GAAKA,EAAKhS,EAAO,EAehB8R,GAAAjf,UAAA6f,oBAAP,SAA2B/P,GAE1B,MAAO,IAAIkP,GAAMlP,EAAM/C,EAAEtN,KAAKZ,EAAIiR,EAAM9C,EAAEvN,KAAK2V,EAAGtF,EAAM/C,EAAEtN,KAAKE,EAAImQ,EAAM9C,EAAEvN,KAAKC,GAgB1Euf,GAAAjf,UAAA0W,SAAP,WAECjX,KAAKZ,EAAI,CACTY,MAAKE,EAAI,CACTF,MAAK2V,EAAI,CACT3V,MAAKC,EAAI,CACTD,MAAKyf,GAAK,CACVzf,MAAK0f,GAAK,EAQJF,GAAAjf,UAAA+b,OAAP,WAEC,GAAI+D,GAAOrgB,KAAKZ,EAAEY,KAAKC,EAAID,KAAKE,EAAEF,KAAK2V,CAEvC,IAAI0K,GAAQ,EAAG,CACdrgB,KAAKZ,EAAIY,KAAKE,EAAIF,KAAK2V,EAAI3V,KAAKC,EAAI,CACpCD,MAAKyf,IAAMzf,KAAKyf,EAChBzf,MAAK0f,IAAM1f,KAAK0f,OACV,CACNW,EAAO,EAAIA,CACX,IAAIT,GAAK5f,KAAKC,EAAEogB,CAChBrgB,MAAKC,EAAID,KAAKZ,EAAEihB,CAChBrgB,MAAKZ,EAAIwgB,CACT5f,MAAKE,IAAMmgB,CACXrgB,MAAK2V,IAAM0K,CAEX,IAAIP,IAAO9f,KAAKZ,EAAEY,KAAKyf,GAAKzf,KAAK2V,EAAE3V,KAAK0f,EACxC1f,MAAK0f,IAAM1f,KAAKE,EAAEF,KAAKyf,GAAKzf,KAAKC,EAAED,KAAK0f,EACxC1f,MAAKyf,GAAKK,GAaLN,GAAAjf,UAAA+f,SAAP,SAAgBtL,GAEf,GAAIiB,GAAS,GAAIuJ,EAEjBvJ,GAAO7W,EAAIY,KAAKZ,EAAE4V,EAAO5V,EAAIY,KAAKE,EAAE8U,EAAOW,CAC3CM,GAAO/V,EAAIF,KAAKZ,EAAE4V,EAAO9U,EAAIF,KAAKE,EAAE8U,EAAO/U,CAC3CgW,GAAON,EAAI3V,KAAK2V,EAAEX,EAAO5V,EAAIY,KAAKC,EAAE+U,EAAOW,CAC3CM,GAAOhW,EAAID,KAAK2V,EAAEX,EAAO9U,EAAIF,KAAKC,EAAE+U,EAAO/U,CAE3CgW,GAAOwJ,GAAKzf,KAAKyf,GAAGzK,EAAO5V,EAAIY,KAAK0f,GAAG1K,EAAOW,EAAIX,EAAOyK,EACzDxJ,GAAOyJ,GAAK1f,KAAKyf,GAAGzK,EAAO9U,EAAIF,KAAK0f,GAAG1K,EAAO/U,EAAI+U,EAAO0K,EAEzD,OAAOzJ,GAaDuJ,GAAAjf,UAAAggB,OAAP,SAAcpC,GAEb,GAAIF,GAAMxZ,KAAKwZ,IAAIE,EACnB,IAAIH,GAAMvZ,KAAKuZ,IAAIG,EAEnB,IAAIyB,GAAK5f,KAAKZ,EAAE6e,EAAMje,KAAKE,EAAE8d,CAC7Bhe,MAAKE,EAAIF,KAAKZ,EAAE4e,EAAMhe,KAAKE,EAAE+d,CAC7Bje,MAAKZ,EAAIwgB,CAET,IAAIC,GAAK7f,KAAK2V,EAAEsI,EAAMje,KAAKC,EAAE+d,CAC7Bhe,MAAKC,EAAID,KAAK2V,EAAEqI,EAAMhe,KAAKC,EAAEge,CAC7Bje,MAAK2V,EAAIkK,CAET,IAAIC,GAAM9f,KAAKyf,GAAGxB,EAAMje,KAAK0f,GAAG1B,CAChChe,MAAK0f,GAAK1f,KAAKyf,GAAGzB,EAAMhe,KAAK0f,GAAGzB,CAChCje,MAAKyf,GAAKK,EAgBJN,GAAAjf,UAAA6a,MAAP,SAAaoF,EAAWC,GAEvBzgB,KAAKZ,GAAKohB,CACVxgB,MAAKE,GAAKugB,CAEVzgB,MAAK2V,GAAK6K,CACVxgB,MAAKC,GAAKwgB,CAEVzgB,MAAKyf,IAAMe,CACXxgB,MAAK0f,IAAMe,EAmBLjB,GAAAjf,UAAAqQ,MAAP,SAAaxR,EAAUc,EAAUyV,EAAU1V,EAAUwf,EAAWC,GAE/D1f,KAAKZ,EAAIA,CACTY,MAAKE,EAAIA,CACTF,MAAK2V,EAAIA,CACT3V,MAAKC,EAAIA,CACTD,MAAKyf,GAAKA,CACVzf,MAAK0f,GAAKA,EAUJF,GAAAjf,UAAA4Q,SAAP,WAEC,MAAO,eAAiBnR,KAAKZ,EAAI,OAASY,KAAKE,EAAI,OAASF,KAAK2V,EAAI,OAAS3V,KAAKC,EAAI,QAAUD,KAAKyf,GAAK,QAAUzf,KAAK0f,GAAK,IAWzHF,GAAAjf,UAAAmgB,eAAP,SAAsBrQ,GAErB,MAAO,IAAIkP,GAAMlP,EAAM/C,EAAEtN,KAAKZ,EAAIiR,EAAM9C,EAAEvN,KAAK2V,EAAI3V,KAAKyf,GAAIpP,EAAM/C,EAAEtN,KAAKE,EAAImQ,EAAM9C,EAAEvN,KAAKC,EAAID,KAAK0f,IAW7FF,GAAAjf,UAAAogB,UAAP,SAAiBlS,EAAWC,GAE3B1O,KAAKyf,IAAMhR,CACXzO,MAAK0f,IAAMhR,EAEb,OAAA8Q,KAEgB1f,GAAAJ,QAAP8f,I9BuxGNpX,uCAAuC,uCAAuCwY,6BAA6B,+BAA+BvB,sCAAsC,SAASzgB,EAAQkB,EAAOJ,GAI3M,G+Bv1HMoX,GAAa,WAAnB,QAAMA,MAMSA,EAAA2E,WAAoB,WAMpB3E,GAAAgF,aAAsB,aAMtBhF,GAAA8E,WAAoB,YACnC,OAAA9E,KAEAhX,GAAuBJ,QAAdoX,O/Bw1HH+J,8CAA8C,SAASjiB,EAAQkB,EAAOJ,GA4D5E,GgC92HMohB,GAAqB,WAoD1B,QApDKA,MAuEEA,EAAAvgB,UAAAwgB,WAAP,WAEC,MAAO/gB,MAAKghB,UAEd,OAAAF,KAE+BhhB,GAAAJ,QAAtBohB,OhC6zHHG,gCAAgC,SAASriB,EAAQkB,EAAOJ,GiCx8H9D,GAAOwhB,GAAmBtiB,EAAW,2CAGrC,IAAMuiB,GAAO,WAiCZ,QAjCKA,GAiCO/hB,EAAcc,EAAcyV,EAAc1V,GAA1C,GAAAb,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAc,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAyV,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAA1V,QAAA,GAAY,CAAZA,EAAA,EAErDD,KAAKZ,EAAIA,CACTY,MAAKE,EAAIA,CACTF,MAAK2V,EAAIA,CACT3V,MAAKC,EAAIA,CAET,IAAIb,GAAK,GAAKc,GAAK,EAAG,CAErBF,KAAKohB,YAAcD,EAAQE,kBAErB,IAAInhB,GAAK,GAAKyV,GAAK,EAAG,CAE5B3V,KAAKohB,YAAcD,EAAQG,kBAErB,IAAIliB,GAAK,GAAKuW,GAAK,EAAG,CAE5B3V,KAAKohB,YAAcD,EAAQI,kBAErB,CAENvhB,KAAKohB,YAAcD,EAAQK,WAYtBL,EAAA5gB,UAAAkhB,WAAP,SAAkBC,EAAaC,EAAaC,GAE3C,GAAIC,GAAaF,EAAGrU,EAAIoU,EAAGpU,CAC3B,IAAIwU,GAAaH,EAAGpU,EAAImU,EAAGnU,CAC3B,IAAIwU,GAAaJ,EAAGnU,EAAIkU,EAAGlU,CAE3B,IAAIwU,GAAaJ,EAAGtU,EAAIoU,EAAGpU,CAC3B,IAAI2U,GAAaL,EAAGrU,EAAImU,EAAGnU,CAC3B,IAAI2U,GAAaN,EAAGpU,EAAIkU,EAAGlU,CAE3BxN,MAAKZ,EAAI0iB,EAAII,EAAMH,EAAIE,CACvBjiB,MAAKE,EAAI6hB,EAAIC,EAAMH,EAAIK,CACvBliB,MAAK2V,EAAIkM,EAAII,EAAMH,EAAIE,CACvBhiB,MAAKC,EAAID,KAAKZ,EAAEsiB,EAAGpU,EAAItN,KAAKE,EAAEwhB,EAAGnU,EAAIvN,KAAK2V,EAAE+L,EAAGlU,CAG/C,IAAIxN,KAAKZ,GAAK,GAAKY,KAAKE,GAAK,EAAG,CAE/BF,KAAKohB,YAAcD,EAAQE,kBAErB,IAAIrhB,KAAKE,GAAK,GAAKF,KAAK2V,GAAK,EAAG,CAEtC3V,KAAKohB,YAAcD,EAAQG,kBAErB,IAAIthB,KAAKZ,GAAK,GAAKY,KAAK2V,GAAK,EAAG,CAEtC3V,KAAKohB,YAAcD,EAAQI,kBAErB,CAENvhB,KAAKohB,YAAcD,EAAQK,WAWtBL,GAAA5gB,UAAA4hB,mBAAP,SAA0BC,EAAiB/R,GAE1CrQ,KAAKZ,EAAIgjB,EAAO9U,CAChBtN,MAAKE,EAAIkiB,EAAO7U,CAChBvN,MAAK2V,EAAIyM,EAAO5U,CAChBxN,MAAKC,EAAID,KAAKZ,EAAEiR,EAAM/C,EAAItN,KAAKE,EAAEmQ,EAAM9C,EAAIvN,KAAK2V,EAAEtF,EAAM7C,CACxD,IAAIxN,KAAKZ,GAAK,GAAKY,KAAKE,GAAK,EAAG,CAE/BF,KAAKohB,YAAcD,EAAQE,kBAErB,IAAIrhB,KAAKE,GAAK,GAAKF,KAAK2V,GAAK,EAAG,CAEtC3V,KAAKohB,YAAcD,EAAQG,kBAErB,IAAIthB,KAAKZ,GAAK,GAAKY,KAAK2V,GAAK,EAAG,CAEtC3V,KAAKohB,YAAcD,EAAQI,kBAErB,CAENvhB,KAAKohB,YAAcD,EAAQK,WAUtBL,GAAA5gB,UAAA8T,UAAP,WAEC,GAAI5R,GAAa,EAAEgC,KAAKkX,KAAK3b,KAAKZ,EAAEY,KAAKZ,EAAIY,KAAKE,EAAEF,KAAKE,EAAIF,KAAK2V,EAAE3V,KAAK2V,EACzE3V,MAAKZ,GAAKqD,CACVzC,MAAKE,GAAKuC,CACVzC,MAAK2V,GAAKlT,CACVzC,MAAKC,GAAKwC,CACV,OAAOzC,MAQDmhB,GAAA5gB,UAAA8hB,SAAP,SAAgBliB,GAGf,GAAIH,KAAKohB,aAAeD,EAAQG,cAAe,CAE9C,MAAOthB,MAAKZ,EAAEe,EAAEmN,EAAItN,KAAKC,MAEnB,IAAID,KAAKohB,aAAeD,EAAQI,cAAe,CACrD,MAAOvhB,MAAKE,EAAEC,EAAEoN,EAAIvN,KAAKC,MAGrB,IAAID,KAAKohB,aAAeD,EAAQE,cAAe,CAEnD,MAAOrhB,MAAK2V,EAAExV,EAAEqN,EAAIxN,KAAKC,MAEnB,CAEN,MAAOD,MAAKZ,EAAEe,EAAEmN,EAAItN,KAAKE,EAAEC,EAAEoN,EAAIvN,KAAK2V,EAAExV,EAAEqN,EAAIxN,KAAKC,GAW9CkhB,GAAA5gB,UAAA+hB,cAAP,SAAqBniB,EAAYoiB,GAAA,GAAAA,QAAA,GAAqB,CAArBA,EAAA,IAGhC,GAAIviB,KAAKC,GAAKD,KAAKC,EAClB,MAAOihB,GAAoBsB,KAE5B,IAAI/f,EACJ,IAAIzC,KAAKohB,aAAeD,EAAQG,cAC/B7e,EAAMzC,KAAKZ,EAAEe,EAAEmN,EAAItN,KAAKC,MAAQ,IAAID,KAAKohB,aAAeD,EAAQI,cAChE9e,EAAMzC,KAAKE,EAAEC,EAAEoN,EAAIvN,KAAKC,MAAQ,IAAID,KAAKohB,aAAeD,EAAQE,cAChE5e,EAAMzC,KAAK2V,EAAExV,EAAEqN,EAAIxN,KAAKC,MACxBwC,GAAMzC,KAAKZ,EAAEe,EAAEmN,EAAItN,KAAKE,EAAEC,EAAEoN,EAAIvN,KAAK2V,EAAExV,EAAEqN,EAAIxN,KAAKC,CAEnD,IAAIwC,GAAO8f,EACV,MAAOrB,GAAoBuB,SAAW,IAAIhgB,EAAM8f,EAChD,MAAOrB,GAAoBsB,UAC3B,OAAOtB,GAAoBwB,UAGtBvB,GAAA5gB,UAAA4Q,SAAP,WAEC,MAAO,cAAgBnR,KAAKZ,EAAI,OAASY,KAAKE,EAAI,OAASF,KAAK2V,EAAI,OAAS3V,KAAKC,EAAI,IAhLzEkhB,GAAAK,UAAmB,CACnBL,GAAAE,cAAuB,CACvBF,GAAAG,cAAuB,CACvBH,GAAAI,cAAuB,CA+KtC,OAAAJ,KAEiBrhB,GAAAJ,QAARyhB,IjC+4HNwB,2CAA2C,6CAA6CA,4CAA4C,SAAS/jB,EAAQkB,EAAOJ,GkC/lI/J,GAAMwhB,GAAmB,WAAzB,QAAMA,MAGSA,EAAAuB,KAAc,CACdvB,GAAAsB,MAAe,CAEftB,GAAA0B,GAAY,CACZ1B,GAAA2B,IAAa,CACb3B,GAAAwB,UAAmB,CAElC,OAAAxB,KAEAphB,GAA6BJ,QAApBwhB,OlCimIHN,8BAA8B,SAAShiB,EAAQkB,EAAOJ,GAuB5D,GmC9mIM6f,GAAK,WA2BV,QA3BKA,GA2BOjS,EAAcC,GAAd,GAAAD,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAEzBvN,KAAKsN,EAAIA,CACTtN,MAAKuN,EAAIA,EAfVhM,OAAAC,eAAW+d,EAAAhf,UAAA,UnCinIJkB,ImCjnIP,WAEC,MAAOgD,MAAKkX,KAAK3b,KAAKsN,EAAEtN,KAAKsN,EAAItN,KAAKuN,EAAEvN,KAAKuN,InCknIvC5L,WAAY,KACZC,aAAc,MmC5lId2d,GAAAhf,UAAAuiB,IAAP,SAAW3O,GAEV,MAAO,IAAIoL,GAAMvf,KAAKsN,EAAI6G,EAAE7G,EAAGtN,KAAKuN,EAAI4G,EAAE5G,GAQpCgS,GAAAhf,UAAA+B,MAAP,WAEC,MAAO,IAAIid,GAAMvf,KAAKsN,EAAGtN,KAAKuN,GAGxBgS,GAAAhf,UAAA6N,SAAP,SAAgB2U,IAaTxD,GAAAhf,UAAA+N,OAAP,SAAcC,GAEb,MAAQvO,MAAKsN,GAAKiB,EAAUjB,GAAKtN,KAAKuN,GAAKgB,EAAUhB,EAW/CgS,GAAAhf,UAAA8T,UAAP,SAAiB2O,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,EAEhB,GAAIhjB,KAAKJ,QAAU,EAAG,CACrB,GAAIqjB,GAAYD,EAAUhjB,KAAKJ,MAC/BI,MAAKsN,GAAK2V,CACVjjB,MAAKuN,GAAK0V,CACV,QAED,KAAM,gCAaA1D,GAAAhf,UAAA0C,OAAP,SAAcwL,EAAWC,GAExB1O,KAAKsN,GAAKmB,CACVzO,MAAKuN,GAAKmB,EAGJ6Q,GAAAhf,UAAAqQ,MAAP,SAAaC,EAAWC,GAEvB9Q,KAAKsN,EAAIuD,CACT7Q,MAAKuN,EAAIuD,EAUHyO,GAAAhf,UAAA2iB,SAAP,SAAgB/O,GAEf,MAAO,IAAIoL,GAAMvf,KAAKsN,EAAI6G,EAAE7G,EAAGtN,KAAKuN,EAAI4G,EAAE5G,GAWpCgS,GAAAhf,UAAA4Q,SAAP,WAEC,MAAO,cAAgBnR,KAAKsN,EAAI,OAAStN,KAAKuN,EAAI,IAUrCgS,GAAA8C,SAAd,SAAuBc,EAAWC,GAEjC,GAAI3U,GAAY2U,EAAI9V,EAAI6V,EAAI7V,CAC5B,IAAIoB,GAAY0U,EAAI7V,EAAI4V,EAAI5V,CAE5B,OAAO9I,MAAKkX,KAAKlN,EAAGA,EAAKC,EAAGA,GAsBf6Q,GAAAtD,YAAd,SAA0BkH,EAAWC,EAAW9jB,GAE/C,MAAO,IAAIigB,GAAM6D,EAAI9V,GAAK6V,EAAI7V,EAAI8V,EAAI9V,GAAGhO,EAAG8jB,EAAI7V,GAAK4V,EAAI5V,EAAI6V,EAAI7V,GAAGjO,GAUvDigB,GAAA8D,MAAd,SAAoB5gB,EAAY0b,GAE/B,MAAO,IAAIoB,GAAM9c,EAAIgC,KAAKwZ,IAAIE,GAAQ1b,EAAIgC,KAAKuZ,IAAIG,IAErD,OAAAoB,KAEezf,GAAAJ,QAAN6f,OnC+kIH+D,sCAAsC,SAAS1kB,EAAQkB,EAAOJ,GoCpyIpE,GAAM6jB,GAAa,WAAnB,QAAMA,MAISA,EAAAC,kBAAd,WAGCxjB,KAAKyjB,eAAiB,GAAIxiB,MAC1BjB,MAAKyjB,eAAe,GAAK,GAAIxiB,OAAc,SAAW,SACtDjB,MAAKyjB,eAAe,GAAK,GAAIxiB,OAAc,SAAW,UAAY,UAAY,SAC9EjB,MAAKyjB,eAAe,GAAK,GAAIxiB,OAAc,SAAW,aAAe,UAAY,UAAY,SAAW,SACxGjB,MAAKyjB,eAAe,GAAK,GAAIxiB,OAAc,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,SAC5HjB,MAAKyjB,eAAe,GAAK,GAAIxiB,OAAc,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,UACnJjB,MAAKyjB,eAAe,GAAK,GAAIxiB,OAAc,SAAW,SAAW,UAAY,UAAY,UAAY,WAAa,SAAW,UAAY,UAAY,UAAY,UAAY,QAC7KjB,MAAKyjB,eAAe,GAAK,GAAIxiB,OAAc,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAClMjB;KAAKyjB,eAAe,GAAK,GAAIxiB,OAAc,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,YAAc,UAAY,SAC3NjB,MAAKyjB,eAAe,GAAK,GAAIxiB,OAAc,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,WAAa,UAAY,UAAY,SAAW,SAAW,UAAY,QAAU,UAAY,SAAW,UAAY,UAAY,SACjPjB,MAAKyjB,eAAe,GAAK,GAAIxiB,OAAc,UAAY,WAAa,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,OAAS,SAAW,UAAY,SACtQjB,MAAKyjB,eAAe,IAAM,GAAIxiB,OAAc,UAAY,UAAY,UAAY,QAAU,QAAU,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAC5RjB,MAAKyjB,eAAe,IAAM,GAAIxiB,QAAe,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,WAAa,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,QAAU,SACrTjB,MAAKyjB,eAAe,IAAM,GAAIxiB,OAAc,QAAU,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,QAAU,UAAY,WAAa,SAAW,SAAW,UAAY,SAAW,WAAa,UAAY,SAAW,UAAY,UAAY,SAAW,WAAa,SAAW,SAAW,QAAU,SAAW,SACxUjB,MAAKyjB,eAAe,IAAM,GAAIxiB,QAAe,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,SAAW,WAAa,SAAW,UAAY,QAAU,UAAY,OAAS,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAChWjB,MAAKyjB,eAAe,IAAM,GAAIxiB,OAAc,SAAW,QAAU,SAAW,WAAa,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,SACzXjB,MAAKyjB,eAAe,IAAM,GAAIxiB,OAAc,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,QAAU,YAAc,QAAU,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,UAAY,SAAW,YAAc,UAAY,UAAY,WAAa,QAAU,SACtZjB,MAAKyjB,eAAe,IAAM,GAAIxiB,OAAc,SAAW,QAAU,SAAW,WAAa,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,WAAa,UAAY,UAAY,UAAY,WAAa,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,SACzajB,MAAKyjB,eAAe,IAAM,GAAIxiB,OAAc,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,QAAU,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,SAC5bjB,MAAKyjB,eAAe,IAAM,GAAIxiB,OAAc,UAAY,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,WAAa,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,WAAa,SAAW,SAAW,UAAY,UAAY,QAAU,SAAW,QAAU,UAAY,SAAW,SACvdjB,MAAKyjB,eAAe,IAAM,GAAIxiB,OAAc,SAAW,QAAU,UAAY,UAAY,SAAW,QAAU,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,SAAW,WAAa,SAAW,QAAU,UAAY,SAAW,UAAY,QAAU,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,SACzejB,MAAKyjB,eAAe,IAAM,GAAIxiB,OAAc,UAAY,SAAW,UAAY,WAAa,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,WAAa,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,SAAW,QAAU,SACzgBjB,MAAKyjB,eAAe,IAAM,GAAIxiB,OAAc,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,QAAU,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,WAAa,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,WAAa,QAAU,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,WAAa,UAAY,SACzhBjB,MAAKyjB,eAAe,IAAM,GAAIxiB,QAAe,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,SAAW,YAAc,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,YAAc,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SACrjBjB,MAAKyjB,eAAe,IAAM,GAAIxiB,QAAe,UAAY,UAAY,SAAW,UAAY,WAAa,UAAY,UAAY,SAAW,UAAY,UAAY,QAAU,UAAY,UAAY,UAAY,UAAY,UAAY,WAAa,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,QAAU,QAAU,SAAW,QAAU,SAAW,SAAW,SAAW,QAAU,SAAW,UAAY,SACxkBjB,MAAKyjB,eAAe,IAAM,GAAIxiB,QAAe,UAAY,SAAW,UAAY,UAAY,YAAc,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,WAAa,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,SAAW,QAAU,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,WAAa,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,QAAU,SAAW,QAAU,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,SAAW,QAAU,SAAW,SACjmBjB,MAAKyjB,eAAe,IAAM,GAAIxiB,OAAc,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,QAAU,SAAW,UAAY,UAAY,SAAW,QAAU,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,WAAa,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,WAAa,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,WAAa,UAAY,UAAY,SAAW,QACxnBjB,MAAKyjB,eAAe,IAAM,GAAIxiB,QAAe,SAAW,UAAY,UAAY,WAAa,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,YAAc,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SAC/oBjB,MAAKyjB,eAAe,IAAM,GAAIxiB,OAAc,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,WAAa,UAAY,SAAW,UAAY,WAAa,SAAW,UAAY,SAAW,QAAU,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,SAAW,QAAU,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,SAClqBjB,MAAKyjB,eAAe,IAAM,GAAIxiB,QAAe,UAAY,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,WAAa,SAAW,UAAY,SAAW,UAAY,SAAW,MAAQ,SAAW,QAAU,SAAW,SAAW,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,UAAY,QAAU,SACzrBjB,MAAKyjB,eAAe,IAAM,GAAIxiB,OAAc,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,WAAa,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,WAAa,UAAY,UAAY,UAAY,SAAW,SAAW,QAAU,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,QAAU,SAAW,UAAY,QAAU,SAAW,SAAW,UAAY,OAAS,UAAY,QAAU,SAAW,QAAU,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,QACjtBjB,MAAKyjB,eAAe,IAAM,GAAIxiB,OAAc,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,OAAS,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,QAAU,SAAW,UAAY,SAAW,QAAU,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,QAAU,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,QAAU,UAAY,UAAY,UAAY,SAAW,UAChuBjB,MAAKyjB,eAAe,IAAM,GAAIxiB,QAAe,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,QAAU,UAAY,UAAY,SAAW,UAAY,QAAU,WAAa,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,WAAa,SAAW,SAAW,UAAY,SAAW,SAAW,UAGjvBsiB,GAAAG,gBAAd,SAA8B3kB,GAE7B,IAAKiB,KAAKyjB,eACTzjB,KAAKwjB,mBAEN,IAAIzkB,EAAI,GAAKA,EAAI,GAChB,MAAO,KAER,OAAOiB,MAAKyjB,eAAe1kB,EAAI,GAEjC,OAAAwkB,KAEAzjB,GAAuBJ,QAAd6jB,OpCiyIHI,mCAAmC,SAAS/kB,EAAQkB,EAAOJ,GqCv1IjE,GAAOuT,GAAarU,EAAY,qCAChC,IAAOkY,GAAalY,EAAY,qCAChC,IAAOoU,GAAQpU,EAAc,gCAC7B,IAAOwO,GAAQxO,EAAc,gCrC41I7B,IqCv1IMglB,GAAU,WA6Bf,QA7BKA,GA6BOtW,EAAcC,EAAcC,EAAc6F,GAA1C,GAAA/F,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAA6F,QAAA,GAAY,CAAZA,EAAA,EAxB/CrT,KAAAsN,EAAW,CAKXtN,MAAAuN,EAAW,CAKXvN,MAAAwN,EAAW,CAKXxN,MAAAqT,EAAW,CAWjBrT,MAAKsN,EAAIA,CACTtN,MAAKuN,EAAIA,CACTvN,MAAKwN,EAAIA,CACTxN,MAAKqT,EAAIA,EAMV9R,OAAAC,eAAWoiB,EAAArjB,UAAA,arCq1IJkB,IqCr1IP,WAEC,MAAOgD,MAAKkX,KAAK3b,KAAKqT,EAAErT,KAAKqT,EAAIrT,KAAKsN,EAAEtN,KAAKsN,EAAItN,KAAKuN,EAAEvN,KAAKuN,EAAIvN,KAAKwN,EAAExN,KAAKwN,IrCs1IvE7L,WAAY,KACZC,aAAc,MqC90IdgiB,GAAArjB,UAAA+f,SAAP,SAAgBuD,EAAeC,GAE9B,GAAIC,GAAYF,EAAGxQ,EAAG2Q,EAAYH,EAAGvW,EAAG2W,EAAYJ,EAAGtW,EAAG2W,EAAYL,EAAGrW,CACzE,IAAI2W,GAAYL,EAAGzQ,EAAG+Q,EAAYN,EAAGxW,EAAG+W,EAAYP,EAAGvW,EAAG+W,EAAYR,EAAGtW,CAEzExN,MAAKqT,EAAI0Q,EAAGI,EAAKH,EAAGI,EAAKH,EAAGI,EAAKH,EAAGI,CACpCtkB,MAAKsN,EAAIyW,EAAGK,EAAKJ,EAAGG,EAAKF,EAAGK,EAAKJ,EAAGG,CACpCrkB,MAAKuN,EAAIwW,EAAGM,EAAKL,EAAGM,EAAKL,EAAGE,EAAKD,EAAGE,CACpCpkB,MAAKwN,EAAIuW,EAAGO,EAAKN,EAAGK,EAAKJ,EAAGG,EAAKF,EAAGC,EAG9BP,GAAArjB,UAAAgkB,eAAP,SAAsBvO,EAAiB5L,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,EAAA,KAGtC,GAAIA,IAAW,KAAM,CACpBA,EAAS,GAAIwZ,GAKd,GAAIQ,GAAYpO,EAAO1I,CACvB,IAAI+W,GAAYrO,EAAOzI,CACvB,IAAI+W,GAAYtO,EAAOxI,CAEvBpD,GAAOiJ,GAAKrT,KAAKsN,EAAE8W,EAAKpkB,KAAKuN,EAAE8W,EAAKrkB,KAAKwN,EAAE8W,CAC3Cla,GAAOkD,EAAItN,KAAKqT,EAAE+Q,EAAKpkB,KAAKuN,EAAE+W,EAAKtkB,KAAKwN,EAAE6W,CAC1Cja,GAAOmD,EAAIvN,KAAKqT,EAAEgR,EAAKrkB,KAAKsN,EAAEgX,EAAKtkB,KAAKwN,EAAE4W,CAC1Cha,GAAOoD,EAAIxN,KAAKqT,EAAEiR,EAAKtkB,KAAKsN,EAAE+W,EAAKrkB,KAAKuN,EAAE6W,CAE1C,OAAOha,GASDwZ,GAAArjB,UAAAikB,cAAP,SAAqBjL,EAAe4E,GAEnC,GAAIsG,GAAehgB,KAAKuZ,IAAIG,EAAM,EAClC,IAAIuG,GAAejgB,KAAKwZ,IAAIE,EAAM,EAElCne,MAAKsN,EAAIiM,EAAKjM,EAAEmX,CAChBzkB,MAAKuN,EAAIgM,EAAKhM,EAAEkX,CAChBzkB,MAAKwN,EAAI+L,EAAK/L,EAAEiX,CAChBzkB,MAAKqT,EAAIqR,CAET1kB,MAAKqU,YASCuP,GAAArjB,UAAAokB,MAAP,SAAad,EAAeC,EAAehlB,GAE1C,GAAIilB,GAAYF,EAAGxQ,EAAG2Q,EAAYH,EAAGvW,EAAG2W,EAAYJ,EAAGtW,EAAG2W,EAAYL,EAAGrW,CACzE,IAAI2W,GAAYL,EAAGzQ,EAAG+Q,EAAYN,EAAGxW,EAAG+W,EAAYP,EAAGvW,EAAG+W,EAAYR,EAAGtW,CACzE,IAAIoX,GAAab,EAAGI,EAAKH,EAAGI,EAAKH,EAAGI,EAAKH,EAAGI,CAG5C,IAAIM,EAAM,EAAG,CACZA,GAAOA,CACPT,IAAMA,CACNC,IAAMA,CACNC,IAAMA,CACNC,IAAMA,EAGP,GAAIM,EAAM,IAAM,CrCw0IN,GqCt0ILzG,GAAe1Z,KAAKiX,KAAKkJ,EAC7B,IAAI3lB,GAAW,EAAEwF,KAAKuZ,IAAIG,EAC1B,IAAI0G,GAAYpgB,KAAKuZ,IAAIG,GAAO,EAAIrf,IAAIG,CACxC,IAAI6lB,GAAYrgB,KAAKuZ,IAAIG,EAAMrf,GAAGG,CAClCe,MAAKqT,EAAI0Q,EAAGc,EAAKV,EAAGW,CACpB9kB,MAAKsN,EAAI0W,EAAGa,EAAKT,EAAGU,CACpB9kB,MAAKuN,EAAI0W,EAAGY,EAAKR,EAAGS,CACpB9kB,MAAKwN,EAAI0W,EAAGW,EAAKP,EAAGQ,MACd,CAEN9kB,KAAKqT,EAAI0Q,EAAKjlB,GAAGqlB,EAAKJ,EACtB/jB,MAAKsN,EAAI0W,EAAKllB,GAAGslB,EAAKJ,EACtBhkB,MAAKuN,EAAI0W,EAAKnlB,GAAGulB,EAAKJ,EACtBjkB,MAAKwN,EAAI0W,EAAKplB,GAAGwlB,EAAKJ,EACtB,IAAIzhB,GAAa,EAAIgC,KAAKkX,KAAK3b,KAAKqT,EAAErT,KAAKqT,EAAIrT,KAAKsN,EAAEtN,KAAKsN,EAAItN,KAAKuN,EAAEvN,KAAKuN,EAAIvN,KAAKwN,EAAExN,KAAKwN,EAC3FxN,MAAKqT,GAAK5Q,CACVzC,MAAKsN,GAAK7K,CACVzC,MAAKuN,GAAK9K,CACVzC,MAAKwN,GAAK/K,GAULmhB,GAAArjB,UAAAwkB,KAAP,SAAYlB,EAAeC,EAAehlB,GAEzC,GAAIilB,GAAYF,EAAGxQ,EAAG2Q,EAAYH,EAAGvW,EAAG2W,EAAYJ,EAAGtW,EAAG2W,EAAYL,EAAGrW,CACzE,IAAI2W,GAAYL,EAAGzQ,EAAG+Q,EAAYN,EAAGxW,EAAG+W,EAAYP,EAAGvW,EAAG+W,EAAYR,EAAGtW,CACzE,IAAI/K,EAGJ,IAAIshB,EAAGI,EAAKH,EAAGI,EAAKH,EAAGI,EAAKH,EAAGI,EAAK,EAAG,CACtCH,GAAMA,CACNC,IAAMA,CACNC,IAAMA,CACNC,IAAMA,EAGPtkB,KAAKqT,EAAI0Q,EAAKjlB,GAAGqlB,EAAKJ,EACtB/jB,MAAKsN,EAAI0W,EAAKllB,GAAGslB,EAAKJ,EACtBhkB,MAAKuN,EAAI0W,EAAKnlB,GAAGulB,EAAKJ,EACtBjkB,MAAKwN,EAAI0W,EAAKplB,GAAGwlB,EAAKJ,EAEtBzhB,GAAM,EAAIgC,KAAKkX,KAAK3b,KAAKqT,EAAErT,KAAKqT,EAAIrT,KAAKsN,EAAEtN,KAAKsN,EAAItN,KAAKuN,EAAEvN,KAAKuN,EAAIvN,KAAKwN,EAAExN,KAAKwN,EAChFxN,MAAKqT,GAAK5Q,CACVzC,MAAKsN,GAAK7K,CACVzC,MAAKuN,GAAK9K,CACVzC,MAAKwN,GAAK/K,EAUJmhB,GAAArjB,UAAAykB,gBAAP,SAAuBC,EAAWC,EAAWC,GAE5C,GAAIC,GAAeH,EAAG,GAAII,EAAeH,EAAG,GAAII,EAAeH,EAAG,EAClE,IAAII,GAAc9gB,KAAKwZ,IAAImH,GAAQI,EAAc/gB,KAAKuZ,IAAIoH,EAC1D,IAAIK,GAAchhB,KAAKwZ,IAAIoH,GAAQK,EAAcjhB,KAAKuZ,IAAIqH,EAC1D,IAAIM,GAAclhB,KAAKwZ,IAAIqH,GAAQM,EAAcnhB,KAAKuZ,IAAIsH,EAE1DtlB,MAAKqT,EAAIkS,EAAKE,EAAKE,EAAOH,EAAKE,EAAKE,CACpC5lB,MAAKsN,EAAIkY,EAAKC,EAAKE,EAAOJ,EAAKG,EAAKE,CACpC5lB,MAAKuN,EAAIgY,EAAKG,EAAKC,EAAOH,EAAKC,EAAKG,CACpC5lB,MAAKwN,EAAI+X,EAAKE,EAAKG,EAAOJ,EAAKE,EAAKC,EAQ9B/B,GAAArjB,UAAAslB,cAAP,SAAqBzb,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAIpB,GAAIA,IAAW,KAAM,CAEpBA,EAAS,GAAIgD,GAIdhD,EAAOkD,EAAI7I,KAAKuX,MAAM,GAAGhc,KAAKqT,EAAErT,KAAKsN,EAAItN,KAAKuN,EAAEvN,KAAKwN,GAAI,EAAI,GAAGxN,KAAKsN,EAAEtN,KAAKsN,EAAItN,KAAKuN,EAAEvN,KAAKuN,GAC5FnD,GAAOmD,EAAI9I,KAAKsX,KAAK,GAAG/b,KAAKqT,EAAErT,KAAKuN,EAAIvN,KAAKwN,EAAExN,KAAKsN,GACpDlD,GAAOoD,EAAI/I,KAAKuX,MAAM,GAAGhc,KAAKqT,EAAErT,KAAKwN,EAAIxN,KAAKsN,EAAEtN,KAAKuN,GAAI,EAAI,GAAGvN,KAAKuN,EAAEvN,KAAKuN,EAAIvN,KAAKwN,EAAExN,KAAKwN,GAE5F,OAAOpD,GAMDwZ,GAAArjB,UAAA8T,UAAP,SAAiBzG,GAAA,GAAAA,QAAA,GAAc,CAAdA,EAAA,EAEhB,GAAIkY,GAAalY,EAAInJ,KAAKkX,KAAK3b,KAAKsN,EAAEtN,KAAKsN,EAAItN,KAAKuN,EAAEvN,KAAKuN,EAAIvN,KAAKwN,EAAExN,KAAKwN,EAAIxN,KAAKqT,EAAErT,KAAKqT,EAE3FrT,MAAKsN,GAAKwY,CACV9lB,MAAKuN,GAAKuY,CACV9lB,MAAKwN,GAAKsY,CACV9lB,MAAKqT,GAAKyS,EAQJlC,GAAArjB,UAAA4Q,SAAP,WAEC,MAAO,MAAQnR,KAAKsN,EAAI,MAAQtN,KAAKuN,EAAI,MAAQvN,KAAKwN,EAAI,MAAQxN,KAAKqT,EAAI,IAQrEuQ,GAAArjB,UAAAwgB,WAAP,SAAkB3W,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEjB,GAAIyK,GAAuB5B,EAAce,kBACzC,IAAI+R,GAAa,EAAI/lB,KAAKsN,EAAEtN,KAAKuN,EAAGyY,EAAa,EAAIhmB,KAAKsN,EAAEtN,KAAKwN,EAAGyY,EAAa,EAAIjmB,KAAKsN,EAAEtN,KAAKqT,CACjG,IAAI6S,GAAa,EAAIlmB,KAAKuN,EAAEvN,KAAKwN,EAAG2Y,EAAa,EAAInmB,KAAKuN,EAAEvN,KAAKqT,EAAG+S,EAAa,EAAIpmB,KAAKwN,EAAExN,KAAKqT,CACjG,IAAIC,GAAYtT,KAAKsN,EAAEtN,KAAKsN,EAAGoG,EAAY1T,KAAKuN,EAAEvN,KAAKuN,EAAGsG,EAAY7T,KAAKwN,EAAExN,KAAKwN,EAAG6Y,EAAYrmB,KAAKqT,EAAErT,KAAKqT,CAE7GwB,GAAQ,GAAKvB,EAAKI,EAAKG,EAAKwS,CAC5BxR,GAAQ,GAAKkR,EAAMK,CACnBvR,GAAQ,GAAKmR,EAAMG,CACnBtR,GAAQ,IAAM,CACdA,GAAQ,GAAKkR,EAAMK,CACnBvR,GAAQ,IAAMvB,EAAKI,EAAKG,EAAKwS,CAC7BxR,GAAQ,GAAKqR,EAAMD,CACnBpR,GAAQ,IAAM,CACdA,GAAQ,GAAKmR,EAAMG,CACnBtR,GAAQ,GAAKqR,EAAMD,CACnBpR,GAAQ,KAAOvB,EAAKI,EAAKG,EAAKwS,CAC9BxR,GAAQ,IAAM,CACdA,GAAQ,GAAK,CACbA,GAAQ,GAAK,CACbA,GAAQ,IAAM,CACdA,GAAQ,IAAM,CAEd,KAAKzK,EACJ,MAAO,IAAI4I,GAAS6B,OAEpBzK,GAAO6J,gBAAgBY,EAExB,OAAOzK,GAODwZ,GAAArjB,UAAA+lB,WAAP,SAAkBtR,GAEjB,GAAIb,GAAaa,EAAO6F,UAAU/D,EAAc8E,YAAY,EAC5D5b,MAAKsN,EAAI6G,EAAE7G,CACXtN,MAAKuN,EAAI4G,EAAE5G,CACXvN,MAAKwN,EAAI2G,EAAE3G,CACXxN,MAAKqT,EAAIc,EAAEd,EAQLuQ,GAAArjB,UAAAgmB,UAAP,SAAiBnc,EAAiBoc,GAAA,GAAAA,QAAA,GAA6B,CAA7BA,EAAA,MAEjC,GAAIT,GAAa,EAAI/lB,KAAKsN,EAAEtN,KAAKuN,EAAGyY,EAAa,EAAIhmB,KAAKsN,EAAEtN,KAAKwN,EAAGyY,EAAa,EAAIjmB,KAAKsN,EAAEtN,KAAKqT,CACjG,IAAI6S,GAAa,EAAIlmB,KAAKuN,EAAEvN,KAAKwN,EAAG2Y,EAAa,EAAInmB,KAAKuN,EAAEvN,KAAKqT,EAAG+S,EAAa,EAAIpmB,KAAKwN,EAAExN,KAAKqT,CACjG,IAAIC,GAAYtT,KAAKsN,EAAEtN,KAAKsN,EAAGoG,EAAY1T,KAAKuN,EAAEvN,KAAKuN,EAAGsG,EAAY7T,KAAKwN,EAAExN,KAAKwN,EAAG6Y,EAAYrmB,KAAKqT,EAAErT,KAAKqT,CAE7GjJ,GAAO,GAAKkJ,EAAKI,EAAKG,EAAKwS,CAC3Bjc,GAAO,GAAK2b,EAAMK,CAClBhc,GAAO,GAAK4b,EAAMG,CAClB/b,GAAO,GAAK2b,EAAMK,CAClBhc,GAAO,IAAMkJ,EAAKI,EAAKG,EAAKwS,CAC5Bjc,GAAO,GAAK8b,EAAMD,CAClB7b,GAAO,GAAK4b,EAAMG,CAClB/b,GAAO,GAAK8b,EAAMD,CAClB7b,GAAO,KAAOkJ,EAAKI,EAAKG,EAAKwS,CAC7Bjc,GAAO,GAAKA,EAAO,GAAKA,EAAO,IAAM,CAErC,KAAKoc,EAAe,CACnBpc,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAAM,CACvCA,GAAO,IAAM,GAQRwZ,GAAArjB,UAAA+B,MAAP,WAEC,MAAO,IAAIshB,GAAW5jB,KAAKsN,EAAGtN,KAAKuN,EAAGvN,KAAKwN,EAAGxN,KAAKqT,GAS7CuQ,GAAArjB,UAAAkmB,YAAP,SAAmBzQ,EAAiB5L,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEnC,GAAI4Z,GAAWC,EAAWC,EAAWH,CACrC,IAAIK,GAAYpO,EAAO1I,EAAG+W,EAAYrO,EAAOzI,EAAG+W,EAAYtO,EAAOxI,CAGnE,IAAIpD,IAAW,KAAM,CAEpBA,EAAS,GAAIgD,GAKd2W,GAAM/jB,KAAKsN,EAAE8W,EAAKpkB,KAAKuN,EAAE8W,EAAKrkB,KAAKwN,EAAE8W,CACrCN,GAAKhkB,KAAKqT,EAAE+Q,EAAKpkB,KAAKuN,EAAE+W,EAAKtkB,KAAKwN,EAAE6W,CACpCJ,GAAKjkB,KAAKqT,EAAEgR,EAAKrkB,KAAKsN,EAAEgX,EAAKtkB,KAAKwN,EAAE4W,CACpCF,GAAKlkB,KAAKqT,EAAEiR,EAAKtkB,KAAKsN,EAAE+W,EAAKrkB,KAAKuN,EAAE6W,CAEpCha,GAAOkD,GAAKyW,EAAG/jB,KAAKsN,EAAI0W,EAAGhkB,KAAKqT,EAAI4Q,EAAGjkB,KAAKwN,EAAI0W,EAAGlkB,KAAKuN,CACxDnD,GAAOmD,GAAKwW,EAAG/jB,KAAKuN,EAAIyW,EAAGhkB,KAAKwN,EAAIyW,EAAGjkB,KAAKqT,EAAI6Q,EAAGlkB,KAAKsN,CACxDlD,GAAOoD,GAAKuW,EAAG/jB,KAAKwN,EAAIwW,EAAGhkB,KAAKuN,EAAI0W,EAAGjkB,KAAKsN,EAAI4W,EAAGlkB,KAAKqT,CAExD,OAAOjJ,GAODwZ,GAAArjB,UAAA6N,SAAP,SAAgB2M,GAEf/a,KAAKsN,EAAIyN,EAAEzN,CACXtN,MAAKuN,EAAIwN,EAAExN,CACXvN,MAAKwN,EAAIuN,EAAEvN,CACXxN,MAAKqT,EAAI0H,EAAE1H,EAEb,OAAAuQ,KAEA9jB,GAAoBJ,QAAXkkB,IrCmyIN/M,gCAAgC,gCAAgC9D,qCAAqC,qCAAqCsM,qCAAqC,qCAAqC/N,gCAAgC,kCAAkCoV,kCAAkC,SAAS9nB,EAAQkB,EAAOJ,GsClqJnV,GAAO6f,GAAK3gB,EAAe,6BtCgtJ3B,IsClqJM+nB,GAAS,WAoJd,QApJKA,GAoJOrZ,EAAcC,EAAcE,EAAkBC,GAA9C,GAAAJ,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAE,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEzD1N,KAAKsN,EAAIA,CACTtN,MAAKuN,EAAIA,CACTvN,MAAKyN,MAAQA,CACbzN,MAAK0N,OAASA,EA5GfnM,OAAAC,eAAWmlB,EAAApmB,UAAA,UtCmpJJkB,IsCnpJP,WAEC,MAAOzB,MAAKuN,EAAIvN,KAAK0N,QtCopJf/L,WAAY,KACZC,aAAc,MsC9oJrBL,QAAAC,eAAWmlB,EAAApmB,UAAA,etCqpJJkB,IsCrpJP,WAEC,GAAIzB,KAAK4mB,cAAgB,KACxB5mB,KAAK4mB,aAAe,GAAIrH,EAEzBvf,MAAK4mB,aAAatZ,EAAItN,KAAKsN,EAAItN,KAAKyN,KACpCzN,MAAK4mB,aAAarZ,EAAIvN,KAAKuN,EAAIvN,KAAK0N,MAEpC,OAAO1N,MAAK4mB,ctCopJNjlB,WAAY,KACZC,aAAc,MsCxoJrBL,QAAAC,eAAWmlB,EAAApmB,UAAA,QtCqpJJkB,IsCrpJP,WAEC,MAAOzB,MAAKsN,GtCspJN3L,WAAY,KACZC,aAAc,MsCjpJrBL,QAAAC,eAAWmlB,EAAApmB,UAAA,StCupJJkB,IsCvpJP,WAEC,MAAOzB,MAAKsN,EAAItN,KAAKyN,OtCwpJf9L,WAAY,KACZC,aAAc,MsClpJrBL,QAAAC,eAAWmlB,EAAApmB,UAAA,QtCypJJkB,IsCzpJP,WAEC,GAAIzB,KAAKmF,OAAS,KACjBnF,KAAKmF,MAAQ,GAAIoa,EAElBvf,MAAKmF,MAAMmI,EAAItN,KAAKyN,KACpBzN,MAAKmF,MAAMoI,EAAIvN,KAAK0N,MAEpB,OAAO1N,MAAKmF,OtCwpJNxD,WAAY,KACZC,aAAc,MsC5oJrBL,QAAAC,eAAWmlB,EAAApmB,UAAA,OtCypJJkB,IsCzpJP,WAEC,MAAOzB,MAAKuN,GtC0pJN5L,WAAY,KACZC,aAAc,MsCppJrBL,QAAAC,eAAWmlB,EAAApmB,UAAA,WtC2pJJkB,IsC3pJP,WAEC,GAAIzB,KAAK6mB,UAAY,KACpB7mB,KAAK6mB,SAAW,GAAItH,EAErBvf,MAAK6mB,SAASvZ,EAAItN,KAAKsN,CACvBtN,MAAK6mB,SAAStZ,EAAIvN,KAAKuN,CAEvB,OAAOvN,MAAK6mB,UtC0pJNllB,WAAY,KACZC,aAAc,MsCxnJd+kB,GAAApmB,UAAA+B,MAAP,WAEC,MAAO,IAAIqkB,GAAU3mB,KAAKsN,EAAGtN,KAAKuN,EAAGvN,KAAKyN,MAAOzN,KAAK0N,QAYhDiZ,GAAApmB,UAAAwN,SAAP,SAAgBT,EAAUC,GAEzB,MAAQvN,MAAKsN,GAAKA,GAAKtN,KAAKsN,EAAItN,KAAKyN,OAASH,GAAKtN,KAAKuN,GAAKA,GAAKvN,KAAKuN,EAAIvN,KAAK0N,QAAUH,EAcpFoZ,GAAApmB,UAAAyN,cAAP,SAAqBqC,GAEpB,MAAQrQ,MAAKsN,GAAK+C,EAAM/C,GAAKtN,KAAKsN,EAAItN,KAAKyN,OAAS4C,EAAM/C,GAAKtN,KAAKuN,GAAK8C,EAAM9C,GAAKvN,KAAKuN,EAAIvN,KAAK0N,QAAU2C,EAAM9C,EAc5GoZ,GAAApmB,UAAAumB,aAAP,SAAoBC,GAEnB,MAAQ/mB,MAAKsN,GAAKyZ,EAAKzZ,GAAKtN,KAAKsN,EAAItN,KAAKyN,OAASsZ,EAAKzZ,EAAIyZ,EAAKtZ,OAASzN,KAAKuN,GAAKwZ,EAAKxZ,GAAKvN,KAAKuN,EAAIvN,KAAK0N,QAAUqZ,EAAKxZ,EAAIwZ,EAAKrZ,OAS9HiZ,GAAApmB,UAAA6N,SAAP,SAAgB4Y,IAkBTL,GAAApmB,UAAA+N,OAAP,SAAcC,GAEb,MAAQvO,MAAKsN,GAAKiB,EAAUjB,GAAKtN,KAAKuN,GAAKgB,EAAUhB,GAAKvN,KAAKyN,OAASc,EAAUd,OAASzN,KAAK0N,QAAUa,EAAUb,OAgB9GiZ,GAAApmB,UAAAiO,QAAP,SAAeC,EAAWC,GAEzB1O,KAAKsN,GAAKmB,EAAG,CACbzO,MAAKuN,GAAKmB,EAAG,CACb1O,MAAKyN,OAASgB,EAAG,CACjBzO,MAAK0N,QAAUgB,EAAG,EAeZiY,GAAApmB,UAAAqO,aAAP,SAAoByB,GAEnBrQ,KAAKsN,GAAK+C,EAAM/C,EAAE,CAClBtN,MAAKuN,GAAK8C,EAAM9C,EAAE,CAClBvN,MAAKyN,OAAS4C,EAAM/C,EAAE,CACtBtN,MAAK0N,QAAU2C,EAAM9C,EAAE,EAkBjBoZ,GAAApmB,UAAAuO,aAAP,SAAoBC,GAEnB,GAAI/O,KAAKgP,WAAWD,GAAc,CACjC,GAAI1P,GAAc,GAAIsnB,EAEtB,IAAI3mB,KAAKsN,EAAIyB,EAAYzB,EAAG,CAC3BjO,EAAEiO,EAAItN,KAAKsN,CACXjO,GAAEoO,MAAQsB,EAAYzB,EAAItN,KAAKsN,EAAIyB,EAAYtB,KAE/C,IAAIpO,EAAEoO,MAAQzN,KAAKyN,MAClBpO,EAAEoO,MAAQzN,KAAKyN,UACV,CACNpO,EAAEiO,EAAIyB,EAAYzB,CAClBjO,GAAEoO,MAAQzN,KAAKsN,EAAIyB,EAAYzB,EAAItN,KAAKyN,KAExC,IAAIpO,EAAEoO,MAAQsB,EAAYtB,MACzBpO,EAAEoO,MAAQsB,EAAYtB,MAGxB,GAAIzN,KAAKuN,EAAIwB,EAAYxB,EAAG,CAC3BlO,EAAEkO,EAAIvN,KAAKuN,CACXlO,GAAEqO,OAASqB,EAAYxB,EAAIvN,KAAKuN,EAAIwB,EAAYrB,MAEhD,IAAIrO,EAAEqO,OAAS1N,KAAK0N,OACnBrO,EAAEqO,OAAS1N,KAAK0N,WACX,CACNrO,EAAEkO,EAAIwB,EAAYxB,CAClBlO,GAAEqO,OAAS1N,KAAKuN,EAAIwB,EAAYxB,EAAIvN,KAAK0N,MAEzC,IAAIrO,EAAEqO,OAASqB,EAAYrB,OAC1BrO,EAAEqO,OAASqB,EAAYrB,OAGzB,MAAOrO,GAGR,MAAO,IAAIsnB,GAeLA,GAAApmB,UAAAyO,WAAP,SAAkBD,GAEjB,MAAQ/O,MAAKsN,EAAItN,KAAKyN,MAAQsB,EAAYzB,GAAKtN,KAAKsN,EAAIyB,EAAYzB,EAAIyB,EAAYtB,OAASzN,KAAKuN,EAAIvN,KAAK0N,OAASqB,EAAYxB,GAAKvN,KAAKuN,EAAIwB,EAAYxB,EAAIwB,EAAYrB,OASpKiZ,GAAApmB,UAAA+P,QAAP,WAEC,MAAQtQ,MAAKsN,GAAK,GAAKtN,KAAKuN,GAAK,GAAKvN,KAAKyN,OAAS,GAAKzN,KAAK0N,QAAU,EAUlEiZ,GAAApmB,UAAA0C,OAAP,SAAcwL,EAAWC,GAExB1O,KAAKsN,GAAKmB,CACVzO,MAAKuN,GAAKmB,EAUJiY,GAAApmB,UAAA0mB,YAAP,SAAmB5W,GAElBrQ,KAAKsN,GAAK+C,EAAM/C,CAChBtN,MAAKuN,GAAK8C,EAAM9C,EAWVoZ,GAAApmB,UAAAiQ,SAAP,WAECxQ,KAAKsN,EAAI,CACTtN,MAAKuN,EAAI,CACTvN,MAAKyN,MAAQ,CACbzN,MAAK0N,OAAS,EAaRiZ,GAAApmB,UAAAqQ,MAAP,SAAaC,EAAWC,EAAWE,EAAeC,GAEjDjR,KAAKsN,EAAIuD,CACT7Q,MAAKuN,EAAIuD,CACT9Q,MAAKyN,MAAQuD,CACbhR,MAAK0N,OAASuD,EAWR0V,GAAApmB,UAAA4Q,SAAP,WAEC,MAAO,kBAAoBnR,KAAKsN,EAAI,OAAStN,KAAKuN,EAAI,WAAavN,KAAKyN,MAAQ,YAAczN,KAAK0N,OAAS,IActGiZ,GAAApmB,UAAA6Q,MAAP,SAAaC,GAEZ,GAAIlS,GAAc,GAAIwnB,EAEtB,IAAI3mB,KAAKsN,EAAI+D,EAAQ/D,EAAG,CACvBnO,EAAEmO,EAAItN,KAAKsN,CACXnO,GAAEsO,MAAQ4D,EAAQ/D,EAAItN,KAAKsN,EAAI+D,EAAQ5D,KAEvC,IAAItO,EAAEsO,MAAQzN,KAAKyN,MAClBtO,EAAEsO,MAAQzN,KAAKyN,UACV,CACNtO,EAAEmO,EAAI+D,EAAQ/D,CACdnO,GAAEsO,MAAQzN,KAAKsN,EAAI+D,EAAQ/D,EAAItN,KAAKyN,KAEpC,IAAItO,EAAEsO,MAAQ4D,EAAQ5D,MACrBtO,EAAEsO,MAAQ4D,EAAQ5D,MAGpB,GAAIzN,KAAKuN,EAAI8D,EAAQ9D,EAAG,CACvBpO,EAAEoO,EAAIvN,KAAKuN,CACXpO,GAAEuO,OAAS2D,EAAQ9D,EAAIvN,KAAKuN,EAAI8D,EAAQ3D,MAExC,IAAIvO,EAAEuO,OAAS1N,KAAK0N,OACnBvO,EAAEuO,OAAS1N,KAAK0N,WACX,CACNvO,EAAEoO,EAAI8D,EAAQ9D,CACdpO,GAAEuO,OAAS1N,KAAKuN,EAAI8D,EAAQ9D,EAAIvN,KAAK0N,MAErC,IAAIvO,EAAEuO,OAAS2D,EAAQ3D,OACtBvO,EAAEuO,OAAS2D,EAAQ3D,OAGrB,MAAOvO,GAET,OAAAwnB,KAEmB7mB,GAAAJ,QAAVinB,ItCwlJN/F,6BAA6B,+BAA+BsG,+BAA+B,SAAStoB,EAAQkB,EAAOJ,GuC3mKtH,GAAMynB,GAAM,WAyBX,QAzBKA,GAyBO7Z,EAAcC,EAAcC,EAAc4Z,GAA1C,GAAA9Z,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAA4Z,QAAA,GAAiB,CAAjBA,EAAA,EAErDpnB,KAAKsN,EAAIA,CACTtN,MAAKuN,EAAIA,CACTvN,MAAKwN,EAAIA,CACTxN,MAAKonB,OAASA,EAIRD,EAAA5mB,UAAA0O,gBAAP,SAAuBhB,EAAmBiB,EAAoBC,GAE7D,GAAInP,KAAKgO,cAAcC,GACtB,MAAO,EAER,IAAIyB,GAAYzB,EAASX,EAAItN,KAAKsN,EAAGqC,EAAY1B,EAASV,EAAIvN,KAAKuN,EAAGqC,EAAY3B,EAAST,EAAIxN,KAAKwN,CACpG,IAAIqC,GAAYX,EAAU5B,EAAGwC,EAAYZ,EAAU3B,EAAGwC,EAAYb,EAAU1B,CAC5E,IAAI2C,EAEJ,IAAI/Q,GAAWyQ,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,CAClC,IAAI7P,GAAW,GAAIwP,EAAGG,EAAKF,EAAGG,EAAKF,EAAGG,EACtC,IAAI4F,GAAWjG,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAAK5P,KAAKonB,OAAOpnB,KAAKonB,MACxD,IAAIC,GAAannB,EAAEA,EAAI,EAAEd,EAAEuW,CAE3B,IAAI0R,GAAO,EAAG,CACb,GAAIC,GAAiB7iB,KAAKkX,KAAK0L,EAC/BlX,KAAsBjQ,EAAIonB,IAAY,EAAEloB,EACxC,IAAI+Q,GAAoB,EAAG,CAC1BhB,EAAa7B,EAAIoC,EAAKS,EAAiBN,CACvCV,GAAa5B,EAAIoC,EAAKQ,EAAiBL,CACvCX,GAAa3B,EAAIoC,EAAKO,EAAiBJ,CACvCZ,GAAakF,WAEb,OAAOlE,IAKT,OAAQ,EAGFgX,GAAA5mB,UAAAyN,cAAP,SAAqBC,GAEpB,GAAIyB,GAAYzB,EAASX,EAAItN,KAAKsN,CAClC,IAAIqC,GAAY1B,EAASV,EAAIvN,KAAKuN,CAClC,IAAIqC,GAAY3B,EAAST,EAAIxN,KAAKwN,CAClC,IAAI6U,GAAkB5d,KAAKkX,KAAKjM,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EACnD,OAAOyS,IAAYriB,KAAKonB,OAGlBD,GAAA5mB,UAAA4Q,SAAP,WAEC,MAAO,aAAenR,KAAKsN,EAAI,OAAStN,KAAKuN,EAAI,OAASvN,KAAKwN,EAAI,YAAcxN,KAAKonB,OAAS,IAEjG,OAAAD,KAEgBrnB,GAAAJ,QAAPynB,OvCglKH7V,iCAAiC,SAAS1S,EAAQkB,EAAOJ,GA2B/D,GwCpqKM0N,GAAQ,WA8Fb,QA9FKA,GA8FOE,EAAcC,EAAcC,EAAc6F,GAA1C,GAAA/F,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAC,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAA6F,QAAA,GAAY,CAAZA,EAAA,EAErDrT,KAAKsN,EAAIA,CACTtN,MAAKuN,EAAIA,CACTvN,MAAKwN,EAAIA,CACTxN,MAAKqT,EAAIA,EAjCV9R,OAAAC,eAAW4L,EAAA7M,UAAA,UxC+nKJkB,IwC/nKP,WAEC,MAAOgD,MAAKkX,KAAK3b,KAAKunB,gBxCgoKhB5lB,WAAY,KACZC,aAAc,MwCvnKrBL,QAAAC,eAAW4L,EAAA7M,UAAA,iBxCioKJkB,IwCjoKP,WAEC,MAAOzB,MAAKsN,EAAEtN,KAAKsN,EAAItN,KAAKuN,EAAEvN,KAAKuN,EAAIvN,KAAKwN,EAAExN,KAAKwN,GxCkoK7C7L,WAAY,KACZC,aAAc,MwC/lKdwL,GAAA7M,UAAAuiB,IAAP,SAAW1jB,GAEV,MAAO,IAAIgO,GAASpN,KAAKsN,EAAIlO,EAAEkO,EAAGtN,KAAKuN,EAAInO,EAAEmO,EAAGvN,KAAKwN,EAAIpO,EAAEoO,EAAGxN,KAAKqT,EAAIjU,EAAEiU,GAoB5DjG,GAAAoa,aAAd,SAA2BpoB,EAAYc,GAEtC,MAAOuE,MAAKiX,KAAKtc,EAAEoW,WAAWtV,IAAId,EAAEQ,OAAOM,EAAEN,SAUvCwN,GAAA7M,UAAA+B,MAAP,WAEC,MAAO,IAAI8K,GAASpN,KAAKsN,EAAGtN,KAAKuN,EAAGvN,KAAKwN,EAAGxN,KAAKqT,GAGpCjG,GAAAmO,QAAd,SAAsBnc,EAAYc,EAAYunB,EAAaC,GAE1D,MAAO,IAAIta,GAAShO,EAAEkO,EAAEma,EAAOvnB,EAAEoN,EAAEoa,EAAMtoB,EAAEmO,EAAEka,EAAOvnB,EAAEqN,EAAEma,EAAMtoB,EAAEoO,EAAEia,EAAOvnB,EAAEsN,EAAEka,GASvEta,GAAA7M,UAAA6N,SAAP,SAAgBuZ,GAEf3nB,KAAKsN,EAAIqa,EAAIra,CACbtN,MAAKuN,EAAIoa,EAAIpa,CACbvN,MAAKwN,EAAIma,EAAIna,CACbxN,MAAKqT,EAAIsU,EAAItU,EAoBPjG,GAAA7M,UAAAgV,aAAP,SAAoBnW,GAEnB,MAAO,IAAIgO,GAASpN,KAAKuN,EAAEnO,EAAEoO,EAAIxN,KAAKwN,EAAEpO,EAAEmO,EAAGvN,KAAKwN,EAAEpO,EAAEkO,EAAItN,KAAKsN,EAAElO,EAAEoO,EAAGxN,KAAKsN,EAAElO,EAAEmO,EAAIvN,KAAKuN,EAAEnO,EAAEkO,EAAG,GAczFF,GAAA7M,UAAAqnB,YAAP,SAAmBxoB,GAElBY,KAAKsN,GAAKlO,EAAEkO,CACZtN,MAAKuN,GAAKnO,EAAEmO,CACZvN,MAAKwN,GAAKpO,EAAEoO,EAaNJ,GAAAiV,SAAP,SAAgBc,EAAcC,GAE7B,GAAI9V,GAAY6V,EAAI7V,EAAI8V,EAAI9V,CAC5B,IAAIC,GAAY4V,EAAI5V,EAAI6V,EAAI7V,CAC5B,IAAIC,GAAY2V,EAAI3V,EAAI4V,EAAI5V,CAC5B,OAAO/I,MAAKkX,KAAKrO,EAAEA,EAAIC,EAAEA,EAAIC,EAAEA,GA8BzBJ,GAAA7M,UAAAiV,WAAP,SAAkBpW,GAEjB,MAAOY,MAAKsN,EAAElO,EAAEkO,EAAItN,KAAKuN,EAAEnO,EAAEmO,EAAIvN,KAAKwN,EAAEpO,EAAEoO,EAsBpCJ,GAAA7M,UAAA+N,OAAP,SAAcC,EAAoBsZ,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,MAEjC,MAAQ7nB,MAAKsN,GAAKiB,EAAUjB,GAAKtN,KAAKuN,GAAKgB,EAAUhB,GAAKvN,KAAKwN,GAAKe,EAAUf,KAAOqa,GAAW7nB,KAAKqT,GAAK9E,EAAU8E,GAa9GjG,GAAA7M,UAAAunB,YAAP,SAAmB1oB,GAElBY,KAAKsN,GAAKlO,EAAEkO,CACZtN,MAAKuN,GAAKnO,EAAEmO,CACZvN,MAAKwN,GAAKpO,EAAEoO,EAoCNJ,GAAA7M,UAAAwnB,WAAP,SAAkBxZ,EAAoByZ,EAAkBH,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEvD,MAASpjB,MAAKgY,IAAIzc,KAAKsN,EAAIiB,EAAUjB,GAAK0a,GAAevjB,KAAKgY,IAAIzc,KAAKuN,EAAIgB,EAAUhB,GAAKya,GAAevjB,KAAKgY,IAAIzc,KAAKwN,EAAIe,EAAUf,GAAKwa,KAAgBH,GAAWpjB,KAAKgY,IAAIzc,KAAKqT,EAAI9E,EAAU8E,GAAK2U,GAShM5a,GAAA7M,UAAA0nB,OAAP,WAECjoB,KAAKsN,GAAKtN,KAAKsN,CACftN,MAAKuN,GAAKvN,KAAKuN,CACfvN,MAAKwN,GAAKxN,KAAKwN,EAiBTJ,GAAA7M,UAAA8T,UAAP,SAAiB2O,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,EAEhB,GAAIhjB,KAAKJ,QAAU,EAAG,CACrB,GAAIqjB,GAAYD,EAAUhjB,KAAKJ,MAC/BI,MAAKsN,GAAK2V,CACVjjB,MAAKuN,GAAK0V,CACVjjB,MAAKwN,GAAKyV,CACV,SAgBK7V,GAAA7M,UAAA2nB,QAAP,WAECloB,KAAKsN,GAAKtN,KAAKqT,CACfrT,MAAKuN,GAAKvN,KAAKqT,CACfrT,MAAKwN,GAAKxN,KAAKqT,EAcTjG,GAAA7M,UAAA+a,QAAP,SAAerc,GAEde,KAAKsN,GAAKrO,CACVe,MAAKuN,GAAKtO,CACVe,MAAKwN,GAAKvO,EAUJmO,GAAA7M,UAAAqQ,MAAP,SAAaC,EAAWC,EAAWC,GAElC/Q,KAAKsN,EAAIuD,CACT7Q,MAAKuN,EAAIuD,CACT9Q,MAAKwN,EAAIuD,EAiBH3D,GAAA7M,UAAA2iB,SAAP,SAAgB9jB,GAEf,MAAO,IAAIgO,GAASpN,KAAKsN,EAAIlO,EAAEkO,EAAGtN,KAAKuN,EAAInO,EAAEmO,EAAGvN,KAAKwN,EAAIpO,EAAEoO,GAOrDJ,GAAA7M,UAAA4Q,SAAP,WAEC,MAAO,iBAAmBnR,KAAKsN,EAAI,OAAStN,KAAKuN,EAAI,MAAQvN,KAAKwN,EAAI,OAASxN,KAAKqT,EAAI,IApc3EjG,GAAA+a,OAAkB,GAAI/a,GAAS,EAAG,EAAG,EAKrCA,GAAAgb,OAAkB,GAAIhb,GAAS,EAAG,EAAG,EAKrCA,GAAAib,OAAkB,GAAIjb,GAAS,EAAG,EAAG,EA4bpD,OAAAA,KAEAtN,GAAkBJ,QAAT0N,OxCylKHkb,uCAAuC,SAAS1pB,EAAQkB,EAAOJ,GACrE,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyCrkLtB,IAAOkoB,GAAO3pB,EAAe,gCAO7B,IAAO4S,GAAU5S,EAAc,mCAC/B,IAAO4pB,GAAgB5pB,EAAa,yCAGpC,IAAO6pB,GAAS7pB,EAAW,kCzCynL3B,IyC/jLM8pB,GAAa,SAAAhoB,GAASX,EAAtB2oB,EAAahoB,EAiElB,SAjEKgoB,GAiEOjb,EAAcC,EAAeib,EAA4BC,EAAyBC,GAArD,GAAAF,QAAA,GAA0B,CAA1BA,EAAA,KAA4B,GAAAC,QAAA,GAAuB,CAAvBA,EAAA,KAAyB,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,KAE7FnoB,EAAAf,KAAAK,KAAMyN,EAAOC,EAAQmb,EA3Dd7oB,MAAA8oB,QAAkB,KA6DzB9oB,MAAK+oB,aAAeJ,CACpB,IAAGK,SAAU,CACZhpB,KAAKipB,aAAmCD,SAASE,cAAc,cAC1D,CACLlpB,KAAKipB,aAAe,GAAIR,GAEzBzoB,KAAKipB,aAAaxb,MAAQA,CAC1BzN,MAAKipB,aAAavb,OAASA,CAC3B1N,MAAKmpB,SAAWnpB,KAAKipB,aAAaG,WAAW,KAE7C,IAAIR,GAAa,KAChB5oB,KAAKqpB,SAASrpB,KAAKspB,MAAOV,GAlE5BrnB,OAAAC,eAAWknB,EAAAnoB,UAAA,azCumLJkB,IyCvmLP,WAEC,MAAOinB,GAAchnB,WzCwmLfC,WAAY,KACZC,aAAc,MyC9lLrBL,QAAAC,eAAWknB,EAAAnoB,UAAA,ezCymLJkB,IyCzmLP,WAEC,MAAOzB,MAAK+oB,czC0mLNhnB,IyCvmLP,SAAuBC,GAEtBhC,KAAK+oB,aAAe/mB,GzCwmLdL,WAAY,KACZC,aAAc,MyCljLd8mB,GAAAnoB,UAAA+B,MAAP,WAEC,GAAIxD,GAAkB,GAAI4pB,GAAc1oB,KAAKyN,MAAOzN,KAAK0N,OAAQ1N,KAAK2oB,YAAa,KAAM3oB,KAAK6oB,WAC9F/pB,GAAEyqB,KAAKvpB,KACP,OAAOlB,GAcD4pB,GAAAnoB,UAAAipB,eAAP,SAAsBzC,EAAgByC,GAErC,IAAKxpB,KAAK8oB,QACT9oB,KAAKypB,WAAazpB,KAAKmpB,SAASO,aAAa,EAAG,EAAG1pB,KAAKspB,MAAM7b,MAAOzN,KAAKspB,MAAM5b,OAEjF,IAAIic,GAAqB3pB,KAAKypB,WAAWE,IAEzC,IAAItqB,GAAmB8E,EAAmBtB,CAC1C,KAAKxD,EAAI,EAAGA,EAAI0nB,EAAKtZ,QAASpO,EAAG,CAChC,IAAK8E,EAAI,EAAGA,EAAI4iB,EAAKrZ,SAAUvJ,EAAG,CACjCtB,GAASxD,EAAI0nB,EAAKzZ,GAAKnJ,EAAI4iB,EAAKxZ,GAAGvN,KAAKyN,OAAO,CAE/Ckc,GAAK9mB,GAAS8mB,EAAK9mB,GAAO2mB,EAAe9X,cAAgB8X,EAAe1X,SACxE6X,GAAK9mB,EAAQ,GAAK8mB,EAAK9mB,EAAQ,GAAG2mB,EAAe7X,gBAAkB6X,EAAezX,WAClF4X,GAAK9mB,EAAQ,GAAK8mB,EAAK9mB,EAAQ,GAAG2mB,EAAe5X,eAAiB4X,EAAexX,UACjF2X,GAAK9mB,EAAQ,GAAK8mB,EAAK9mB,EAAQ,GAAG2mB,EAAe3X,gBAAkB2X,EAAevX,aAIpF,IAAKjS,KAAK8oB,QAAS,CAClB9oB,KAAKmpB,SAASS,aAAa5pB,KAAKypB,WAAY,EAAG,EAC/CzpB,MAAKypB,WAAa,KAGnBzpB,KAAKoC,aA8CCsmB,GAAAnoB,UAAAspB,YAAP,SAAmBC,EAA4B9C,EAAsB+C,EAAiBC,EAAsBC,GAE3G,GAAIC,GAAsBJ,EAAaJ,cAEvC,KAAK1pB,KAAK8oB,QACT9oB,KAAKypB,WAAazpB,KAAKmpB,SAASO,aAAa,EAAG,EAAG1pB,KAAKspB,MAAM7b,MAAOzN,KAAKspB,MAAM5b,OAEjF,IAAIyc,GAA2BL,EAAaJ,eAAeC,IAC3D,IAAIS,GAAyBpqB,KAAKypB,WAAWE,IAE7C,IAAIU,GAAsB5lB,KAAK2a,MAAM3a,KAAK6lB,IAAIN,GAAevlB,KAAK6lB,IAAI,GACtE,IAAIC,GAAoB9lB,KAAK2a,MAAM3a,KAAK6lB,IAAIL,GAAaxlB,KAAK6lB,IAAI,GAElE,IAAIjrB,GAAmB8E,EAAmBqmB,EAA6BC,CACvE,KAAKprB,EAAI,EAAGA,EAAI2nB,EAAWvZ,QAASpO,EAAG,CACtC,IAAK8E,EAAI,EAAGA,EAAI6iB,EAAWtZ,SAAUvJ,EAAG,CACvCqmB,GAAenrB,EAAI2nB,EAAW1Z,GAAKnJ,EAAI6iB,EAAWzZ,GAAGuc,EAAarc,OAAO,CACzEgd,IAAaprB,EAAI0qB,EAAUzc,GAAKnJ,EAAI4lB,EAAUxc,GAAGvN,KAAKyN,OAAO,CAE7D2c,GAASK,EAAYF,GAAcJ,EAAWK,EAAcH,IAI9D,IAAKrqB,KAAK8oB,QAAS,CAClB9oB,KAAKmpB,SAASS,aAAa5pB,KAAKypB,WAAY,EAAG,EAC/CzpB,MAAKypB,WAAa,KAGnBzpB,KAAKoC,aA4CCsmB,GAAAnoB,UAAAmqB,WAAP,SAAkBtY,EAAY4U,EAAsB2D,GAEnD,GAAIvY,YAAkBsW,GACrBtW,EAASA,EAAOwY,WAEjB,IAAI5qB,KAAK8oB,QAAS,CAQjB9oB,KAAKmpB,SAASS,aAAa5pB,KAAKypB,WAAY,EAAG,EAC/CjB,GAAiBqC,YAAY7qB,KAAKmpB,SAAU/W,EAAQ4U,EAAY2D,EAChE3qB,MAAKypB,WAAazpB,KAAKmpB,SAASO,aAAa,EAAG,EAAG1pB,KAAKspB,MAAM7b,MAAOzN,KAAKspB,MAAM5b,YAE1E,CACN8a,EAAiBqC,YAAY7qB,KAAKmpB,SAAU/W,EAAQ4U,EAAY2D,GAGjE3qB,KAAKoC,aAsBCsmB,GAAAnoB,UAAA0D,QAAP,WAECvD,EAAAH,UAAM0D,QAAOtE,KAAAK,KAEbA,MAAKmpB,SAAW,IAChBnpB,MAAKipB,aAAe,IACpBjpB,MAAKypB,WAAa,IAClBzpB,MAAKspB,MAAQ,IACbtpB,MAAK+oB,aAAe,IACpB/oB,MAAK8oB,QAAU,KA6ETJ,GAAAnoB,UAAAgpB,KAAP,SAAYnX,EAAY4C,EAAgBwU,EAAgCsB,EAAsBC,EAAqBC,GAElH,GAAI5Y,YAAkBsW,IAAiBtW,EAAOwY,YAAY,CACzDxY,EAASA,EAAOwY,YAGjB,GAAI5qB,KAAK8oB,QAAS,CAQjB9oB,KAAKmpB,SAASS,aAAa5pB,KAAKypB,WAAY,EAAG,EAC/CjB,GAAiByC,MAAMjrB,KAAKmpB,SAAU/W,EAAQ4C,EAAQwU,EAAgBsB,EAAWC,EAAUC,EAC3FhrB,MAAKypB,WAAazpB,KAAKmpB,SAASO,aAAa,EAAG,EAAG1pB,KAAKspB,MAAM7b,MAAOzN,KAAKspB,MAAM5b,YAC1E,CACN8a,EAAiByC,MAAMjrB,KAAKmpB,SAAU/W,EAAQ4C,EAAQwU,EAAgBsB,EAAWC,EAAUC,GAG5FhrB,KAAKoC,aAYCsmB,GAAAnoB,UAAA8oB,SAAP,SAAgBtC,EAAgBmE,GAE/B,GAAIlrB,KAAK8oB,QAAS,CAQjB,GAAI9oB,KAAKypB,WACRzpB,KAAKmpB,SAASS,aAAa5pB,KAAKypB,WAAY,EAAG,EAEhDjB,GAAiB2C,UAAUnrB,KAAKmpB,SAAUpC,EAAMmE,EAAOlrB,KAAK+oB,aAE5D,IAAI/oB,KAAKypB,WACRzpB,KAAKypB,WAAazpB,KAAKmpB,SAASO,aAAa,EAAG,EAAG1pB,KAAKspB,MAAM7b,MAAOzN,KAAKspB,MAAM5b,YAC3E,CACN8a,EAAiB2C,UAAUnrB,KAAKmpB,SAAUpC,EAAMmE,EAAOlrB,KAAK+oB,cAG7D/oB,KAAKoC,aA0BCsmB,GAAAnoB,UAAA6qB,SAAP,SAAgB9d,EAAGC,GAElB,GAAIvO,EACJ,IAAIkX,EACJ,IAAIhW,EACJ,IAAId,EAEJ,KAAKY,KAAK8oB,QAAS,CAClB,GAAIuC,GAAsBrrB,KAAKmpB,SAASO,aAAapc,EAAGC,EAAG,EAAG,EAE9DvO,GAAIqsB,EAAU1B,KAAK,EACnBzT,GAAImV,EAAU1B,KAAK,EACnBzpB,GAAImrB,EAAU1B,KAAK,EACnBvqB,GAAIisB,EAAU1B,KAAK,OAEb,CACN,GAAI9mB,IAAgByK,EAAIC,EAAEvN,KAAKypB,WAAWhc,OAAO,CAEjDzO,GAAIgB,KAAKypB,WAAWE,KAAK9mB,EAAQ,EACjCqT,GAAIlW,KAAKypB,WAAWE,KAAK9mB,EAAQ,EACjC3C,GAAIF,KAAKypB,WAAWE,KAAK9mB,EAAQ,EACjCzD,GAAIY,KAAKypB,WAAWE,KAAK9mB,EAAQ,GAIlC,IAAKzD,EACJ,MAAO,EAER,OAAQJ,IAAK,GAAOkX,GAAK,EAAKhW,EAyBxBwoB,GAAAnoB,UAAA+qB,WAAP,SAAkBhe,EAAGC,GAEpB,GAAIvO,EACJ,IAAIkX,EACJ,IAAIhW,EACJ,IAAId,EAEJ,KAAKY,KAAK8oB,QAAS,CAClB,GAAIuC,GAAsBrrB,KAAKmpB,SAASO,aAAapc,EAAGC,EAAG,EAAG,EAE9DvO,GAAIqsB,EAAU1B,KAAK,EACnBzT,GAAImV,EAAU1B,KAAK,EACnBzpB,GAAImrB,EAAU1B,KAAK,EACnBvqB,GAAIisB,EAAU1B,KAAK,OAEb,CACN,GAAI9mB,IAAgByK,EAAIC,EAAEvN,KAAKypB,WAAWhc,OAAO,CAEjDzO,GAAIgB,KAAKypB,WAAWE,KAAK9mB,EAAQ,EACjCqT,GAAIlW,KAAKypB,WAAWE,KAAK9mB,EAAQ,EACjC3C,GAAIF,KAAKypB,WAAWE,KAAK9mB,EAAQ,EACjCzD,GAAIY,KAAKypB,WAAWE,KAAK9mB,EAAQ,GAGlC,MAAQzD,IAAK,GAAOJ,GAAK,GAAOkX,GAAK,EAAKhW,EAWpCwoB,GAAAnoB,UAAAgrB,KAAP,WAEC,GAAIvrB,KAAK8oB,QACR,MAED9oB,MAAK8oB,QAAU,IACf9oB,MAAKypB,WAAazpB,KAAKmpB,SAASO,aAAa,EAAG,EAAG1pB,KAAKspB,MAAM7b,MAAOzN,KAAKspB,MAAM5b,QAe1Egb,GAAAnoB,UAAAirB,SAAP,SAAgBzE,EAAgB0E,GAE/B,IAAKzrB,KAAK8oB,QACT9oB,KAAKypB,WAAazpB,KAAKmpB,SAASO,aAAa,EAAG,EAAG1pB,KAAKspB,MAAM7b,MAAOzN,KAAKspB,MAAM5b,OAEjF,IAAIrO,GAAmB8E,EAAmBtB,EAAuBqP,CACjE,KAAK7S,EAAI,EAAGA,EAAI0nB,EAAKtZ,QAASpO,EAAG,CAChC,IAAK8E,EAAI,EAAGA,EAAI4iB,EAAKrZ,SAAUvJ,EAAG,CACjC+N,EAAOV,EAAWW,mBAAmBsZ,EAAWpsB,EAAI8E,EAAE4iB,EAAKtZ,OAC3D5K,IAASxD,EAAI0nB,EAAKzZ,GAAKnJ,EAAI4iB,EAAKxZ,GAAGvN,KAAKypB,WAAWhc,OAAO,CAE1DzN,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKqP,EAAK,EACvClS,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKqP,EAAK,EACvClS,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKqP,EAAK,EACvClS,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKqP,EAAK,IAIzC,IAAKlS,KAAK8oB,QAAS,CAClB9oB,KAAKmpB,SAASS,aAAa5pB,KAAKypB,WAAY,EAAG,EAC/CzpB,MAAKypB,WAAa,KAGnBzpB,KAAKoC,aAoBCsmB,GAAAnoB,UAAAmrB,SAAP,SAAgBpe,EAAUC,EAAU2d,GAEnC,GAAIhZ,GAAgBV,EAAWW,mBAAmB+Y,EAElD,KAAKlrB,KAAK8oB,QACT9oB,KAAKypB,WAAazpB,KAAKmpB,SAASO,aAAa,EAAG,EAAG1pB,KAAKspB,MAAM7b,MAAOzN,KAAKspB,MAAM5b,OAEjF,IAAI7K,IAAgByK,EAAIC,EAAEvN,KAAKypB,WAAWhc,OAAO,CAEjDzN,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKqP,EAAK,EACvClS,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKqP,EAAK,EACvClS,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKqP,EAAK,EACvClS,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAK,GAElC,KAAK7C,KAAK8oB,QAAS,CAClB9oB,KAAKmpB,SAASS,aAAa5pB,KAAKypB,WAAY,EAAG,EAC/CzpB,MAAKypB,WAAa,KAGnBzpB,KAAKoC,aAkCCsmB,GAAAnoB,UAAAorB,WAAP,SAAkBre,EAAGC,EAAG2d,GAEvB,GAAIhZ,GAAgBV,EAAWW,mBAAmB+Y,EAElD,KAAKlrB,KAAK8oB,QACT9oB,KAAKypB,WAAazpB,KAAKmpB,SAASO,aAAa,EAAG,EAAG1pB,KAAKspB,MAAM7b,MAAOzN,KAAKspB,MAAM5b,OAEjF,IAAI7K,IAAgByK,EAAIC,EAAEvN,KAAKypB,WAAWhc,OAAO,CAEjDzN,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKqP,EAAK,EACvClS,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKqP,EAAK,EACvClS,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKqP,EAAK,EACvClS,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKqP,EAAK,EAEvC,KAAKlS,KAAK8oB,QAAS,CAClB9oB,KAAKmpB,SAASS,aAAa5pB,KAAKypB,WAAY,EAAG,EAC/CzpB,MAAKypB,WAAa,KAGnBzpB,KAAKoC,aAsBCsmB,GAAAnoB,UAAAqrB,UAAP,SAAiB7E,EAAgB8E,GAEhC,IAAK7rB,KAAK8oB,QACT9oB,KAAKypB,WAAazpB,KAAKmpB,SAASO,aAAa,EAAG,EAAG1pB,KAAKspB,MAAM7b,MAAOzN,KAAKspB,MAAM5b,OAEjFme,GAAe5d,SAAW,CAC1B,IAAI5O,GAAmB8E,EAAmBtB,CAC1C,KAAKxD,EAAI,EAAGA,EAAI0nB,EAAKtZ,QAASpO,EAAG,CAChC,IAAK8E,EAAI,EAAGA,EAAI4iB,EAAKrZ,SAAUvJ,EAAG,CACjCtB,GAASxD,EAAI0nB,EAAKzZ,GAAKnJ,EAAI4iB,EAAKxZ,GAAGvN,KAAKypB,WAAWhc,OAAO,CAE1DzN,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKgpB,EAAeC,iBACjD9rB,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKgpB,EAAeC,iBACjD9rB,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKgpB,EAAeC,iBACjD9rB,MAAKypB,WAAWE,KAAK9mB,EAAQ,GAAKgpB,EAAeC,mBAInD,IAAK9rB,KAAK8oB,QAAS,CAClB9oB,KAAKmpB,SAASS,aAAa5pB,KAAKypB,WAAY,EAAG,EAC/CzpB,MAAKypB,WAAa,KAGnBzpB,KAAKoC,aAeCsmB,GAAAnoB,UAAAwrB,OAAP,WAEC,IAAK/rB,KAAK8oB,QACT,MAED9oB,MAAK8oB,QAAU,KAEf9oB,MAAKmpB,SAASS,aAAa5pB,KAAKypB,WAAY,EAAG,EAC/CzpB,MAAKypB,WAAa,KAOZf,GAAAnoB,UAAAmpB,aAAP,WAEC,IAAK1pB,KAAK8oB,QACT,MAAO9oB,MAAKmpB,SAASO,aAAa,EAAG,EAAG1pB,KAAKspB,MAAM7b,MAAOzN,KAAKspB,MAAM5b,OAEtE,OAAO1N,MAAKypB,WAONf,GAAAnoB,UAAAqqB,UAAP,WAEC,MAA2B5qB,MAAKipB,aAS1BP,GAAAnoB,UAAAyrB,SAAP,SAAgBve,EAAcC,GAE7B,GAAI1N,KAAK8oB,QACR9oB,KAAKmpB,SAASS,aAAa5pB,KAAKypB,WAAY,EAAG,EAEhD,IAAGzpB,KAAKipB,aAAc,CACrBjpB,KAAKipB,aAAaxb,MAAQA,CAC1BzN,MAAKipB,aAAavb,OAASA,EAG5BhN,EAAAH,UAAMyrB,SAAQrsB,KAAAK,KAACyN,EAAOC,EAEtB,IAAI1N,KAAK8oB,QACR9oB,KAAKypB,WAAazpB,KAAKmpB,SAASO,aAAa,EAAG,EAAG1pB,KAAKspB,MAAM7b,MAAOzN,KAAKspB,MAAM5b,QAvxBpEgb,GAAAhnB,UAAmB,uBAyxBlC,OAAAgnB,IA3xB4BH,EA6xB5BzoB,GAAuBJ,QAAdgpB,IzC62KNuD,kCAAkC,kCAAkCC,gCAAgC,gCAAgCC,yCAAyC,yCAAyC1Z,mCAAmC,qCAAqC2Z,4CAA4C,SAASxtB,EAAQkB,EAAOJ,G0C/sMrW,GAAM2sB,GAAkB,WAAxB,QAAMA,MAESA,EAAAC,MAAwB,CACxBD,GAAAE,KAAuB,CACvBF,GAAAG,MAAwB,CACxBH,GAAAI,IAAsB,CACrC,OAAAJ,KAEAvsB,GAA4BJ,QAAnB2sB,O1CmtMHK,yCAAyC,SAAS9tB,EAAQkB,EAAOJ,GACvE,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2ChuMtB,IAAOqoB,GAAa9pB,EAAa,sCACjC,IAAO+tB,GAAS/tB,EAAc,kCAI9B,IAAO+nB,GAAS/nB,EAAc,iCAG9B,IAAO4S,GAAU5S,EAAc,mCAE/B,IAAO4pB,GAAgB5pB,EAAa,yC3CsxMpC,I2C3tMMguB,GAAe,SAAAlsB,GAASX,EAAxB6sB,EAAelsB,EAwEpB,SAxEKksB,GAwEOjoB,EAAagkB,EAA4BC,GAA5B,GAAAD,QAAA,GAA0B,CAA1BA,EAAA,KAA4B,GAAAC,QAAA,GAAuB,CAAvBA,EAAA,KAEpDloB,EAAAf,KAAAK,KAAM2E,EA/DC3E,MAAAipB,aAAwC,GAAIhoB,OAAyB,EACrEjB,MAAAmpB,SAA2C,GAAIloB,OAAgC,EAC/EjB,MAAAypB,WAA8B,GAAIxoB,OAAiB,EAEnDjB,MAAA8oB,QAAkB,KA6DzB9oB,MAAK+oB,aAAeJ,CAEpB,KAAK,GAAItpB,GAAW,EAAGA,EAAI,EAAGA,IAAK,CAClCW,KAAKipB,aAAa5pB,GAAyB2pB,SAASE,cAAc,SAClElpB,MAAKipB,aAAa5pB,GAAGoO,MAAQ9I,CAC7B3E,MAAKipB,aAAa5pB,GAAGqO,OAAS/I,CAC9B3E,MAAKmpB,SAAS9pB,GAAKW,KAAKipB,aAAa5pB,GAAG+pB,WAAW,KAEnD,IAAIR,GAAa,KAChB5oB,KAAKqpB,SAAShqB,EAAG,GAAIsnB,GAAU,EAAG,EAAGhiB,EAAMA,GAAOikB,IAhErDrnB,OAAAC,eAAWorB,EAAArsB,UAAA,a3C2vMJkB,I2C3vMP,WAEC,MAAOmrB,GAAgBlrB,W3C4vMjBC,WAAY,KACZC,aAAc,M2ClvMrBL,QAAAC,eAAWorB,EAAArsB,UAAA,e3C6vMJkB,I2C7vMP,WAEC,MAAOzB,MAAK+oB,c3C8vMNhnB,I2C3vMP,SAAuBC,GAEtBhC,KAAK+oB,aAAe/mB,G3C4vMdL,WAAY,KACZC,aAAc,M2CvsMdgrB,GAAArsB,UAAA+B,MAAP,WAEC,GAAIxD,GAAoB,GAAI8tB,GAAgB5sB,KAAKmF,MAAOnF,KAAK2oB,YAE7D,KAAK,GAAItpB,GAAW,EAAGA,EAAI,EAAGA,IAAK,CAClCP,EAAEyqB,KAAKlqB,EAAGW,KAAK4qB,UAAUvrB,IAE1B,MAAOP,GAcD8tB,GAAArsB,UAAAipB,eAAP,SAAsBqD,EAAa9F,EAAgByC,GAElD,IAAKxpB,KAAK8oB,QACT9oB,KAAKypB,WAAWoD,GAAQ7sB,KAAKmpB,SAAS0D,GAAMnD,aAAa,EAAG,EAAG1pB,KAAKmF,MAAOnF,KAAKmF,MAEjF,IAAIwkB,GAAqB3pB,KAAKypB,WAAWoD,GAAMlD,IAE/C,IAAItqB,GAAmB8E,EAAmBtB,CAC1C,KAAKxD,EAAI,EAAGA,EAAI0nB,EAAKtZ,QAASpO,EAAG,CAChC,IAAK8E,EAAI,EAAGA,EAAI4iB,EAAKrZ,SAAUvJ,EAAG,CACjCtB,GAASxD,EAAI0nB,EAAKzZ,GAAKnJ,EAAI4iB,EAAKxZ,GAAGvN,KAAKmF,OAAO,CAE/CwkB,GAAK9mB,GAAS8mB,EAAK9mB,GAAO2mB,EAAe9X,cAAgB8X,EAAe1X,SACxE6X,GAAK9mB,EAAQ,GAAK8mB,EAAK9mB,EAAQ,GAAG2mB,EAAe7X,gBAAkB6X,EAAezX,WAClF4X,GAAK9mB,EAAQ,GAAK8mB,EAAK9mB,EAAQ,GAAG2mB,EAAe5X,eAAiB4X,EAAexX,UACjF2X,GAAK9mB,EAAQ,GAAK8mB,EAAK9mB,EAAQ,GAAG2mB,EAAe3X,gBAAkB2X,EAAevX,aAIpF,IAAKjS,KAAK8oB,QAAS,CAClB9oB,KAAKmpB,SAAS0D,GAAMjD,aAAa5pB,KAAKypB,WAAWoD,GAAO,EAAG,EAC3D7sB,MAAKypB,WAAWoD,GAAQ,KAGzB7sB,KAAKoC,aA8CCwqB,GAAArsB,UAAAspB,YAAP,SAAmBgD,EAAa/C,EAA4B9C,EAAsB+C,EAAiBC,EAAsBC,GAExH,GAAIC,GAAsBJ,EAAaJ,cAEvC,KAAK1pB,KAAK8oB,QACT9oB,KAAKypB,WAAWoD,GAAQ7sB,KAAKmpB,SAAS0D,GAAMnD,aAAa,EAAG,EAAG1pB,KAAKmF,MAAOnF,KAAKmF,MAEjF,IAAIglB,GAA2BL,EAAaJ,eAAeC,IAC3D,IAAIS,GAAyBpqB,KAAKypB,WAAWoD,GAAMlD,IAEnD,IAAIU,GAAsB5lB,KAAK2a,MAAM3a,KAAK6lB,IAAIN,GAAevlB,KAAK6lB,IAAI,GACtE,IAAIC,GAAoB9lB,KAAK2a,MAAM3a,KAAK6lB,IAAIL,GAAaxlB,KAAK6lB,IAAI,GAElE,IAAIjrB,GAAmB8E,EAAmBqmB,EAA6BC,CACvE,KAAKprB,EAAI,EAAGA,EAAI2nB,EAAWvZ,QAASpO,EAAG,CACtC,IAAK8E,EAAI,EAAGA,EAAI6iB,EAAWtZ,SAAUvJ,EAAG,CACvCqmB,GAAenrB,EAAI2nB,EAAW1Z,GAAKnJ,EAAI6iB,EAAWzZ,GAAGuc,EAAarc,OAAO,CACzEgd,IAAaprB,EAAI0qB,EAAUzc,GAAKnJ,EAAI4lB,EAAUxc,GAAGvN,KAAKmF,OAAO,CAE7DilB,GAASK,EAAYF,GAAcJ,EAAWK,EAAcH,IAI9D,IAAKrqB,KAAK8oB,QAAS,CAClB9oB,KAAKmpB,SAAS0D,GAAMjD,aAAa5pB,KAAKypB,WAAWoD,GAAO,EAAG,EAC3D7sB,MAAKypB,WAAWoD,GAAQ,KAGzB7sB,KAAKoC,aA4CCwqB,GAAArsB,UAAAmqB,WAAP,SAAkBmC,EAAaza,EAAY4U,EAAsB2D,GAEhE,GAAIvY,YAAkBsW,GACrBtW,EAASA,EAAOwY,WAEjB,IAAI5qB,KAAK8oB,QAAS,CAQjB9oB,KAAKmpB,SAAS0D,GAAMjD,aAAa5pB,KAAKypB,WAAWoD,GAAO,EAAG,EAC3DrE,GAAiBqC,YAAY7qB,KAAKmpB,SAAS0D,GAAOza,EAAQ4U,EAAY2D,EACtE3qB,MAAKypB,WAAWoD,GAAQ7sB,KAAKmpB,SAAS0D,GAAMnD,aAAa,EAAG,EAAG1pB,KAAKmF,MAAOnF,KAAKmF;KAE1E,CACNqjB,EAAiBqC,YAAY7qB,KAAKmpB,SAAS0D,GAAOza,EAAQ4U,EAAY2D,GAGvE3qB,KAAKoC,aAsBCwqB,GAAArsB,UAAA0D,QAAP,WAECvD,EAAAH,UAAM0D,QAAOtE,KAAAK,KAEb,KAAK,GAAIX,GAAW,EAAGA,EAAI,EAAGA,IAAK,CAClCW,KAAKmpB,SAAS9pB,GAAK,IACnBW,MAAKipB,aAAa5pB,GAAK,IACvBW,MAAKypB,WAAWpqB,GAAK,KAGtBW,KAAK+oB,aAAe,IACpB/oB,MAAK8oB,QAAU,KA6ET8D,GAAArsB,UAAAgpB,KAAP,SAAYsD,EAAaza,EAAY4C,EAAgBwU,EAAgCsB,EAAsBC,EAAqBC,GAE/H,GAAI5Y,YAAkBsW,GACrBtW,EAASA,EAAOwY,WAEjB,IAAI5qB,KAAK8oB,QAAS,CAQjB9oB,KAAKmpB,SAAS0D,GAAMjD,aAAa5pB,KAAKypB,WAAWoD,GAAO,EAAG,EAC3DrE,GAAiByC,MAAMjrB,KAAKmpB,SAAS0D,GAAOza,EAAQ4C,EAAQwU,EAAgBsB,EAAWC,EAAUC,EACjGhrB,MAAKypB,WAAWoD,GAAQ7sB,KAAKmpB,SAAS0D,GAAMnD,aAAa,EAAG,EAAG1pB,KAAKmF,MAAOnF,KAAKmF,WAC1E,CACNqjB,EAAiByC,MAAMjrB,KAAKmpB,SAAS0D,GAAOza,EAAQ4C,EAAQwU,EAAgBsB,EAAWC,EAAUC,GAGlGhrB,KAAKoC,aAYCwqB,GAAArsB,UAAA8oB,SAAP,SAAgBwD,EAAa9F,EAAgBmE,GAE5C,GAAIlrB,KAAK8oB,QAAS,CAQjB,GAAI9oB,KAAKypB,WAAWoD,GACnB7sB,KAAKmpB,SAAS0D,GAAMjD,aAAa5pB,KAAKypB,WAAWoD,GAAO,EAAG,EAE5DrE,GAAiB2C,UAAUnrB,KAAKmpB,SAAS0D,GAAO9F,EAAMmE,EAAOlrB,KAAK+oB,aAElE,IAAI/oB,KAAKypB,WAAWoD,GACnB7sB,KAAKypB,WAAWoD,GAAQ7sB,KAAKmpB,SAAS0D,GAAMnD,aAAa,EAAG,EAAG1pB,KAAKmF,MAAOnF,KAAKmF,WAC3E,CACNqjB,EAAiB2C,UAAUnrB,KAAKmpB,SAAS0D,GAAO9F,EAAMmE,EAAOlrB,KAAK+oB,cAGnE/oB,KAAKoC,aA0BCwqB,GAAArsB,UAAA6qB,SAAP,SAAgByB,EAAavf,EAAUC,GAEtC,GAAIvO,EACJ,IAAIkX,EACJ,IAAIhW,EACJ,IAAId,EAEJ,KAAKY,KAAK8oB,QAAS,CAClB,GAAIuC,GAAsBrrB,KAAKmpB,SAAS0D,GAAMnD,aAAapc,EAAGC,EAAG,EAAG,EAEpEvO,GAAIqsB,EAAU1B,KAAK,EACnBzT,GAAImV,EAAU1B,KAAK,EACnBzpB,GAAImrB,EAAU1B,KAAK,EACnBvqB,GAAIisB,EAAU1B,KAAK,OAEb,CACN,GAAI9mB,IAAgByK,EAAIC,EAAEvN,KAAKmF,OAAO,CAEtCnG,GAAIgB,KAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,EACvCqT,GAAIlW,KAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,EACvC3C,GAAIF,KAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,EACvCzD,GAAIY,KAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAIxC,IAAKzD,EACJ,MAAO,EAER,OAAQJ,IAAK,GAAOkX,GAAK,EAAKhW,EAyBxB0sB,GAAArsB,UAAA+qB,WAAP,SAAkBuB,EAAavf,EAAGC,GAEjC,GAAIvO,EACJ,IAAIkX,EACJ,IAAIhW,EACJ,IAAId,EAEJ,KAAKY,KAAK8oB,QAAS,CAClB,GAAIuC,GAAsBrrB,KAAKmpB,SAAS0D,GAAMnD,aAAapc,EAAGC,EAAG,EAAG,EAEpEvO,GAAIqsB,EAAU1B,KAAK,EACnBzT,GAAImV,EAAU1B,KAAK,EACnBzpB,GAAImrB,EAAU1B,KAAK,EACnBvqB,GAAIisB,EAAU1B,KAAK,OAEb,CACN,GAAI9mB,IAAgByK,EAAIC,EAAEvN,KAAKmF,OAAO,CAEtCnG,GAAIgB,KAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,EACvCqT,GAAIlW,KAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,EACvC3C,GAAIF,KAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,EACvCzD,GAAIY,KAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAGxC,MAAQzD,IAAK,GAAOJ,GAAK,GAAOkX,GAAK,EAAKhW,EAWpC0sB,GAAArsB,UAAAgrB,KAAP,WAEC,GAAIvrB,KAAK8oB,QACR,MAED9oB,MAAK8oB,QAAU,IAEf,KAAK,GAAIzpB,GAAW,EAAGA,EAAI,EAAGA,IAC7BW,KAAKypB,WAAWpqB,GAAKW,KAAKmpB,SAAS9pB,GAAGqqB,aAAa,EAAG,EAAG1pB,KAAKmF,MAAOnF,KAAKmF,OAerEynB,GAAArsB,UAAAirB,SAAP,SAAgBqB,EAAa9F,EAAgB0E,GAE5C,IAAKzrB,KAAK8oB,QACT9oB,KAAKypB,WAAWoD,GAAQ7sB,KAAKmpB,SAAS0D,GAAMnD,aAAa,EAAG,EAAG1pB,KAAKmF,MAAOnF,KAAKmF,MAEjF,IAAI9F,GAAmB8E,EAAmBtB,EAAuBqP,CACjE,KAAK7S,EAAI,EAAGA,EAAI0nB,EAAKtZ,QAASpO,EAAG,CAChC,IAAK8E,EAAI,EAAGA,EAAI4iB,EAAKrZ,SAAUvJ,EAAG,CACjC+N,EAAOV,EAAWW,mBAAmBsZ,EAAWpsB,EAAI8E,EAAE4iB,EAAKtZ,OAC3D5K,IAASxD,EAAI0nB,EAAKzZ,GAAKnJ,EAAI4iB,EAAKxZ,GAAGvN,KAAKmF,OAAO,CAE/CnF,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKqP,EAAK,EAC7ClS,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKqP,EAAK,EAC7ClS,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKqP,EAAK,EAC7ClS,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKqP,EAAK,IAI/C,IAAKlS,KAAK8oB,QAAS,CAClB9oB,KAAKmpB,SAAS0D,GAAMjD,aAAa5pB,KAAKypB,WAAWoD,GAAO,EAAG,EAC3D7sB,MAAKypB,WAAWoD,GAAQ,KAGzB7sB,KAAKoC,aAoBCwqB,GAAArsB,UAAAmrB,SAAP,SAAgBmB,EAAavf,EAAUC,EAAU2d,GAEhD,GAAIhZ,GAAgBV,EAAWW,mBAAmB+Y,EAElD,KAAKlrB,KAAK8oB,QACT9oB,KAAKypB,WAAWoD,GAAQ7sB,KAAKmpB,SAAS0D,GAAMnD,aAAa,EAAG,EAAG1pB,KAAKmF,MAAOnF,KAAKmF,MAEjF,IAAItC,IAAgByK,EAAIC,EAAEvN,KAAKmF,OAAO,CAEtCnF,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKqP,EAAK,EAC7ClS,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKqP,EAAK,EAC7ClS,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKqP,EAAK,EAC7ClS,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAK,GAExC,KAAK7C,KAAK8oB,QAAS,CAClB9oB,KAAKmpB,SAAS0D,GAAMjD,aAAa5pB,KAAKypB,WAAWoD,GAAO,EAAG,EAC3D7sB,MAAKypB,WAAa,KAGnBzpB,KAAKoC,aAkCCwqB,GAAArsB,UAAAorB,WAAP,SAAkBkB,EAAavf,EAAGC,EAAG2d,GAEpC,GAAIhZ,GAAgBV,EAAWW,mBAAmB+Y,EAElD,KAAKlrB,KAAK8oB,QACT9oB,KAAKypB,WAAWoD,GAAQ7sB,KAAKmpB,SAAS0D,GAAMnD,aAAa,EAAG,EAAG1pB,KAAKmF,MAAOnF,KAAKmF,MAEjF,IAAItC,IAAgByK,EAAIC,EAAEvN,KAAKmF,OAAO,CAEtCnF,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKqP,EAAK,EAC7ClS,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKqP,EAAK,EAC7ClS,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKqP,EAAK,EAC7ClS,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKqP,EAAK,EAE7C,KAAKlS,KAAK8oB,QAAS,CAClB9oB,KAAKmpB,SAAS0D,GAAMjD,aAAa5pB,KAAKypB,WAAWoD,GAAO,EAAG,EAC3D7sB,MAAKypB,WAAWoD,GAAQ,KAGzB7sB,KAAKoC,aAsBCwqB,GAAArsB,UAAAqrB,UAAP,SAAiBiB,EAAa9F,EAAgB8E,GAE7C,IAAK7rB,KAAK8oB,QACT9oB,KAAKypB,WAAWoD,GAAQ7sB,KAAKmpB,SAAS0D,GAAMnD,aAAa,EAAG,EAAG1pB,KAAKmF,MAAOnF,KAAKmF,MAEjF0mB,GAAe5d,SAAW,CAC1B,IAAI5O,GAAmB8E,EAAmBtB,CAC1C,KAAKxD,EAAI,EAAGA,EAAI0nB,EAAKtZ,QAASpO,EAAG,CAChC,IAAK8E,EAAI,EAAGA,EAAI4iB,EAAKrZ,SAAUvJ,EAAG,CACjCtB,GAASxD,EAAI0nB,EAAKzZ,GAAKnJ,EAAI4iB,EAAKxZ,GAAGvN,KAAKmF,OAAO,CAE/CnF,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKgpB,EAAeC,iBACvD9rB,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKgpB,EAAeC,iBACvD9rB,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKgpB,EAAeC,iBACvD9rB,MAAKypB,WAAWoD,GAAMlD,KAAK9mB,EAAQ,GAAKgpB,EAAeC,mBAIzD,IAAK9rB,KAAK8oB,QAAS,CAClB9oB,KAAKmpB,SAAS0D,GAAMjD,aAAa5pB,KAAKypB,WAAWoD,GAAO,EAAG,EAC3D7sB,MAAKypB,WAAWoD,GAAQ,KAGzB7sB,KAAKoC,aAeCwqB,GAAArsB,UAAAwrB,OAAP,WAEC,IAAK/rB,KAAK8oB,QACT,MAED9oB,MAAK8oB,QAAU,KAEf,KAAK,GAAIzpB,GAAW,EAAGA,EAAI,EAAGA,IAAK,CAClCW,KAAKmpB,SAAS9pB,GAAGuqB,aAAa5pB,KAAKypB,WAAWpqB,GAAI,EAAG,EACrDW,MAAKypB,WAAWpqB,GAAK,MAQhButB,GAAArsB,UAAAmpB,aAAP,SAAoBmD,GAEnB,IAAK7sB,KAAK8oB,QACT,MAAO9oB,MAAKmpB,SAAS0D,GAAMnD,aAAa,EAAG,EAAG1pB,KAAKmF,MAAOnF,KAAKmF,MAEhE,OAAOnF,MAAKypB,WAAWoD,GAOjBD,GAAArsB,UAAAqqB,UAAP,SAAiBiC,GAEhB,MAAO7sB,MAAKipB,aAAa4D,GASnBD,GAAArsB,UAAAyrB,SAAP,SAAgBrnB,GAEfjE,EAAAH,UAAMyrB,SAAQrsB,KAAAK,KAAC2E,EAEf,KAAK,GAAItF,GAAW,EAAGA,EAAI,EAAGA,IAAK,CAClC,GAAIW,KAAK8oB,QACR9oB,KAAKmpB,SAAS9pB,GAAGuqB,aAAa5pB,KAAKypB,WAAWpqB,GAAI,EAAG,EAEtDW,MAAKipB,aAAa5pB,GAAGoO,MAAQ9I,CAC7B3E,MAAKipB,aAAa5pB,GAAGqO,OAAS/I,CAE9B,IAAI3E,KAAK8oB,QACR9oB,KAAKypB,WAAWpqB,GAAKW,KAAKmpB,SAAS9pB,GAAGqqB,aAAa,EAAG,EAAG1pB,KAAKmF,MAAOnF,KAAKmF,QApyB/DynB,GAAAlrB,UAAmB,yBAEnBkrB,GAAAE,KAAc,CACdF,GAAAG,KAAc,CACdH,GAAAI,KAAc,CACdJ,GAAAK,KAAc,CACdL,GAAAM,KAAc,CACdN,GAAAO,KAAc,CAgyB7B,OAAAP,IAzyB8BD,EA2yBL7sB,GAAAJ,QAAhBktB,I3CqgMNlG,iCAAiC,iCAAiC4B,sCAAsC,sCAAsC8E,kCAAkC,kCAAkCjB,yCAAyC,yCAAyC1Z,mCAAmC,qCAAqC4a,mCAAmC,SAASzuB,EAAQkB,EAAOJ,GAW1a,G4Ct3NM4tB,GAAS,WAAf,QAAMA,MAYSA,EAAAC,IAAa,KAUbD,GAAAhB,MAAe,OAcfgB,GAAAE,OAAgB,QAahBF,GAAAG,WAAoB,YASpBH,GAAAI,MAAe,OAYfJ,GAAAK,UAAmB,WAKnBL,GAAAM,OAAgB,QAYhBN,GAAAO,MAAe,OAcfP,GAAAQ,QAAiB,SAejBR,GAAAS,SAAkB,UAOlBT,GAAAU,OAAgB,QAYhBV,GAAAW,QAAiB,SAQjBX,GAAAY,OAAgB,QAqBhBZ,GAAAa,OAAgB,QAYhBb,GAAAc,SAAkB,UACjC,OAAAd,KAEAxtB,GAAmBJ,QAAV4tB,O5C22NHrB,mCAAmC,SAASrtB,EAAQkB,EAAOJ,G6CviOjE,GAAO2uB,GAAqBzvB,EAAW,8CACvC,IAAO0vB,GAAS1vB,EAAW,kCAE3B,IAAM6pB,GAAS,WAUX,QAVEA,KACKzoB,KAAAyN,MAAe,CACfzN,MAAA0N,OAAgB,CASnB1N,MAAKuuB,QALT9F,EAAAloB,UAAA6oB,WAAA,SAAWoF,GACP,MAAO,IAAIH,GAAsBruB,MAO9ByoB,GAAAloB,UAAAguB,MAAP,WACI,IAAKvuB,KAAKkqB,UAAW,CACjBlqB,KAAKkqB,UAAY,GAAIoE,GAAUtuB,KAAKyN,MAAOzN,KAAK0N,YAC/C,CACD1N,KAAKkqB,UAAUzc,MAAQzN,KAAKyN,KAC5BzN,MAAKkqB,UAAUxc,OAAS1N,KAAK0N,MAE7B,IAAG1N,KAAKkqB,UAAUP,KAAM,CACpB3pB,KAAKkqB,UAAUP,KAAK/pB,OAAS,CAC7BI,MAAKkqB,UAAUP,KAAO,KAE1B3pB,KAAKkqB,UAAUP,KAAO,GAAItoB,YAAWrB,KAAKyN,MAAMzN,KAAK0N,OAAO,GAGhE,IAAK,GAAIrO,GAAW,EAAGA,EAAIW,KAAKyN,MAAQzN,KAAK0N,OAAS,EAAGrO,GAAK,EAAG,CAC7DW,KAAKkqB,UAAUP,KAAKtqB,GAAK,GACzBW,MAAKkqB,UAAUP,KAAKtqB,EAAI,GAAK,GAC7BW,MAAKkqB,UAAUP,KAAKtqB,EAAI,GAAK,GAC7BW,MAAKkqB,UAAUP,KAAKtqB,EAAI,GAAK,KAI9BopB,GAAAloB,UAAAmpB,aAAP,WACI,GAAI1pB,KAAKkqB,UAAUzc,OAASzN,KAAKyN,OAASzN,KAAKkqB,UAAUxc,QAAU1N,KAAK0N,OAAQ,CAC5E1N,KAAKuuB,QAET,MAAOvuB,MAAKkqB,UAIpB,OAAAzB,KACmB3oB,GAAAJ,QAAV+oB,I7CiiONgG,8CAA8C,8CAA8CC,kCAAkC,oCAAoCD,+CAA+C,SAAS7vB,EAAQkB,EAAOJ,G8ChlO5O,GAAOgpB,GAAa9pB,EAAW,sCAC/B,IAAO4gB,GAAM5gB,EAAW,8BACxB,IAAO2gB,GAAK3gB,EAAW,6B9CmlOvB,I8ChlOMyvB,GAAqB,WAyBvB,QAzBEA,GAyBUM,GAgHJ3uB,KAAAqQ,MAAc,GAAIkP,EAClBvf,MAAA4uB,OAAe,GAAIrP,EAhHvBvf,MAAK2uB,UAAYA,EAGdN,EAAA9tB,UAAAsuB,QAAP,WACI7uB,KAAKgV,OAAS,KAGXqZ,GAAA9tB,UAAAuuB,aAAP,SAAoBpS,EAAYC,EAAYG,EAAYC,EAAYtO,EAAWC,GAC3E1O,KAAKgV,OAAS,GAAIwK,GAAO9C,EAAKC,EAAKG,EAAKC,EAAKtO,EAAIC,GAG9C2f,GAAA9tB,UAAAwuB,KAAP,YAGOV,GAAA9tB,UAAAyuB,IAAP,SAAW1hB,EAAUC,EAAU6Z,EAAe6H,EAAmBC,EAAiBC,IAG3Ed,GAAA9tB,UAAA6uB,YAAP,SAAmBC,GACf,MAAOllB,WAGJkkB,GAAA9tB,UAAA+uB,cAAP,SAAqBhiB,EAAUC,EAAUgiB,GACrC,MAAOplB,WAGJkkB,GAAA9tB,UAAAivB,iBAAP,SAAwBC,EAAYC,EAAYpiB,EAAUC,IAGnD8gB,GAAA9tB,UAAAqpB,aAAP,SAAoB+F,EAAqBlhB,EAAWC,EAAWkhB,EAAeC,EAAeC,EAAmBC,IAGzG1B,GAAA9tB,UAAAggB,OAAP,SAAcpC,IAGPkQ,GAAA9tB,UAAAyvB,SAAP,SAAgBX,EAAa/hB,EAAUC,EAAU0iB,IAG1C5B,GAAA9tB,UAAAogB,UAAP,SAAiBrT,EAAUC,IAGpB8gB,GAAA9tB,UAAA6a,MAAP,SAAa9N,EAAUC,IAGhB8gB,GAAA9tB,UAAA2vB,qBAAP,SAA4BC,EAAWC,EAAWC,EAAWrM,EAAWC,EAAWtP,GAC/E,MAAOxK,WAGJkkB,GAAA9tB,UAAA+vB,OAAP,SAAchjB,EAAUC,IAGjB8gB,GAAA9tB,UAAAgwB,YAAP,WACI,MAAOpmB,WAGJkkB,GAAA9tB,UAAAiwB,KAAP,SAAYjB,IAGLlB,GAAA9tB,UAAAkwB,gBAAP,SAAuBC,EAAmBC,GACtC,MAAOxmB,WAGJkkB,GAAA9tB,UAAAqwB,cAAP,SAAqBC,EAAmBC,GACpC,MAAO3mB,WAGJkkB,GAAA9tB,UAAAwwB,UAAP,YAGO1C,GAAA9tB,UAAAwmB,KAAP,SAAYzZ,EAAUC,EAAU8F,EAAU+C,IAGnCiY,GAAA9tB,UAAAywB,KAAP,SAAYzB,IAGLlB,GAAA9tB,UAAA0wB,UAAP,SAAiB3jB,EAAUC,EAAU8F,EAAU+C,GAC3C,GAAI8T,GAAsBlqB,KAAK2uB,UAAUjF,cACzC,KAAK,GAAIrqB,GAAWiO,EAAGjO,EAAIiO,EAAI+F,EAAGhU,IAAK,CACnC,IAAK,GAAI8E,GAAWoJ,EAAGpJ,EAAIoJ,EAAI6I,EAAGjS,IAAK,CAEnC,GAAItB,IAAgBxD,EAAI8E,EAAI+lB,EAAUzc,OAAS,CAC/Cyc,GAAUP,KAAK9mB,GAAS,CACxBqnB,GAAUP,KAAK9mB,EAAQ,GAAK,CAC5BqnB,GAAUP,KAAK9mB,EAAQ,GAAK,CAC5BqnB,GAAUP,KAAK9mB,EAAQ,GAAK,IAKjCwrB,GAAA9tB,UAAA2wB,OAAP,SAAc5jB,EAAUC,IAGjB8gB,GAAA9tB,UAAAmpB,aAAP,SAAoBlJ,EAAWC,EAAW0Q,EAAWR,GAiBjD,MAAO3wB,MAAK2uB,UAAUjF,eAMlB2E,GAAA9tB,UAAA6wB,aAAR,SAAqBhnB,EAAkBkD,EAAUC,EAAU2d,GAGvD5d,EAAI7I,KAAK4sB,MAAM/jB,EACfC,GAAI9I,KAAK4sB,MAAM9jB,EAEf,IAAID,EAAI,GAAKA,GAAKlD,EAAOqD,OAASF,GAAKnD,EAAOsD,QAAUH,EAAI,EAAG,MAC/D,IAAI1K,IAAgByK,EAAIC,EAAInD,EAAOqD,OAAS,CAE5CrD,GAAOuf,KAAK9mB,IAAUqoB,EAAM,EAC5B9gB,GAAOuf,KAAK9mB,EAAQ,IAAMqoB,EAAM,EAChC9gB,GAAOuf,KAAK9mB,EAAQ,IAAMqoB,EAAM,EAChC9gB,GAAOuf,KAAK9mB,EAAQ,IAAMqoB,EAAM,EAOhC9gB,GAAOuf,KAAK9mB,GAASuH,EAAOuf,KAAK9mB,GAAS,GAC1CuH,GAAOuf,KAAK9mB,EAAQ,GAAKuH,EAAOuf,KAAK9mB,EAAQ,GAAK,GAClDuH,GAAOuf,KAAK9mB,EAAQ,GAAKuH,EAAOuf,KAAK9mB,EAAQ,GAAK,GAClDuH,GAAOuf,KAAK9mB,EAAQ,GAAKuH,EAAOuf,KAAK9mB,EAAQ,GAAK,IAG9CwrB,GAAA9tB,UAAA+wB,YAAR,SAAoBlnB,EAAkBkD,EAAUC,EAAU6E,EAAkBmf,EAAcC,GACtFlkB,EAAI7I,KAAK4sB,MAAM/jB,EACfC,GAAI9I,KAAK4sB,MAAM9jB,EACfgkB,GAAQ9sB,KAAK4sB,MAAME,EACnBC,GAAQ/sB,KAAK4sB,MAAMG,EAEnB,IAAIlkB,EAAI,GAAKA,GAAKlD,EAAOqD,OAASF,GAAKnD,EAAOsD,QAAUH,EAAI,EAAG,MAC/D,IAAIgkB,EAAQ,GAAKA,GAASnf,EAAO3E,OAAS+jB,GAASpf,EAAO1E,QAAU8jB,EAAQ,EAAG,MAC/E,IAAI3uB,IAAgByK,EAAIC,EAAInD,EAAOqD,OAAS,CAC5C,IAAIgkB,IAAoBF,EAAQC,EAAQpf,EAAO3E,OAAS,CACxDrD,GAAOuf,KAAK9mB,GAASuP,EAAOuX,KAAK8H,EACjCrnB,GAAOuf,KAAK9mB,EAAQ,GAAKuP,EAAOuX,KAAK8H,EAAY,EACjDrnB,GAAOuf,KAAK9mB,EAAQ,GAAKuP,EAAOuX,KAAK8H,EAAY,EACjDrnB,GAAOuf,KAAK9mB,EAAQ,GAAKuP,EAAOuX,KAAK8H,EAAY,GAS9CpD,GAAA9tB,UAAA8oB,SAAP,SAAgB/b,EAAUC,EAAU8F,EAAU+C,GAC1C,GAAIpW,KAAK0xB,UAAW,CAChB,GAAI1xB,KAAK2xB,iBAAmB3xB,KAAK0xB,UAAW,CACxC,GAAIE,GAAwB5xB,KAAK0xB,UAAUG,UAAU,EAAG7xB,KAAK0xB,UAAUI,YAAY,MAAMC,MAAM,IAC/F/xB,MAAKgyB,QAAUC,WAAWL,EAAa,IAAM,GAC7C5xB,MAAKkyB,QAAUC,SAASP,EAAa,GACrC5xB,MAAKoyB,QAAUD,SAASP,EAAa,GACrC5xB,MAAKqyB,QAAUF,SAASP,EAAa,GACrC5xB,MAAK2xB,gBAAkB3xB,KAAK0xB,UAGhC,GAAIxH,GAAsBlqB,KAAK2uB,UAAUjF,cACzC,KAAK,GAAIrqB,GAAWiO,EAAGjO,EAAIiO,EAAI+F,EAAGhU,IAAK,CACnC,IAAK,GAAI8E,GAAWoJ,EAAGpJ,EAAIoJ,EAAI6I,EAAGjS,IAAK,CAEnC,GAAItB,IAAgBxD,EAAI8E,EAAI+lB,EAAUzc,OAAS,CAC/Cyc,GAAUP,KAAK9mB,GAAS7C,KAAKkyB,OAC7BhI,GAAUP,KAAK9mB,EAAQ,GAAK7C,KAAKoyB,OACjClI,GAAUP,KAAK9mB,EAAQ,GAAK7C,KAAKqyB,OACjCnI,GAAUP,KAAK9mB,EAAQ,GAAK7C,KAAKgyB,WAM1C3D,GAAA9tB,UAAA+xB,cAAP,SAAqBC,EAAaC,EAAaC,EAAaC,EAAaplB,EAAUC,IAG5E8gB,GAAA9tB,UAAAoyB,UAAP,SAAiB9B,EAAmB+B,EAAgBC,EAAgBplB,EAAcC,EAAeolB,EAAsBC,EAAsBC,EAAyBC,GAClK,GAAI/yB,GAAQ2wB,CACZ,IAAIA,EAAMvwB,YAAY6Q,WAAW+hB,QAAQ,kBAAoB,EAAG,CAC5D,GAAIC,GAAuCjzB,CAC3CizB,GAAO5H,MAEPvrB,MAAKozB,WAAWD,EAAQP,EAASC,EAASplB,EAAOC,EAAQolB,EAAeC,EAAeC,EAAkBC,EAEzGE,GAAOpH,aACJ,IAAI8E,EAAMvwB,YAAY6Q,WAAW+hB,QAAQ,cAAgB,EAAG,CAC/D,GAAIG,GAAgDxC,CACpD,IAAIyC,GAAmDtK,SAASE,cAAc,SAC9EoK,GAAW7lB,MAAQ4lB,EAAU5lB,KAC7B6lB,GAAW5lB,OAAS2lB,EAAU3lB,MAC9B,IAAI6lB,GAAuCD,EAAWlK,WAAW,KACjEmK,GAAYZ,UAAUU,EAAW,EAAG,EACpC,IAAIG,GAA0BD,EAAY7J,aAAa,EAAG,EAAG2J,EAAU5lB,MAAO4lB,EAAU3lB,OAExF,IAAI+lB,GAA6B,GAAI/K,GAAc2K,EAAU5lB,MAAO4lB,EAAU3lB,OAAQ,KAAM,EAAG,MAC/F+lB,GAAa/J,eAAeC,KAAO6J,EAAc7J,IACjD,IAAI+J,GAAiBD,CACrBzzB,MAAK2yB,UAAUe,EAAYd,EAASC,EAASplB,EAAOC,EAAQolB,EAAeC,EAAeC,EAAkBC,OACzG,IAAIpC,EAAMvwB,YAAY6Q,WAAW+hB,QAAQ,cAAgB,EAAG,C9CghO/D,G8C9gOIS,GAA+BzzB,CACnCF,MAAKozB,WAAWO,EAAQf,EAASC,EAASplB,EAAOC,EAAQolB,EAAeC,EAAeC,EAAkBC,IAoBzG5E,GAAA9tB,UAAA6yB,WAAR,SAAmBD,EAAYP,EAAgBC,EAAgBplB,EAAcC,EAAeolB,EAAsBC,EAAsBC,EAAyBC,GAC7J,IAAKxlB,GAASA,GAAS,EAAG,CACtBA,EAAQ0lB,EAAO1lB,KACfC,GAASylB,EAAOzlB,OAGpB,IAAKolB,GAAiBA,GAAiB,EAAG,CACtCA,EAAgB,CAChBC,GAAgB,EAGpB,IAAKC,GAAoBA,GAAoB,GAAKhzB,KAAKgV,OAAQ,CAC3Dge,EAAmBvlB,CACnBwlB,GAAoBvlB,E9C8/NxB,G8Cz/NIyc,GAAuBgJ,EAAOzJ,cAClC,IAAIkK,GAA4B5zB,KAAK2uB,UAAUjF,cAE/C,IAAI1pB,KAAKgV,SAAWge,GAAoBvlB,GAASwlB,GAAqBvlB,GAAS,CAC3E,GAAIsH,GAAgBhV,KAAKgV,MACzB,KAAKA,EAAQ,CACTA,EAAS,GAAIwK,EACbxK,GAAOoG,MAAM4X,EAAmBvlB,EAAOwlB,EAAoBvlB,GAG/D,GAAIuS,GAAgBxb,KAAKkX,KAAK3G,EAAO5V,EAAI4V,EAAO5V,EAAI4V,EAAO9U,EAAI8U,EAAO9U,EACtE,IAAIggB,GAAgBzb,KAAKkX,KAAK3G,EAAOW,EAAIX,EAAOW,EAAIX,EAAO/U,EAAI+U,EAAO/U,EAEtE+yB,GAAmBvlB,EAAQwS,CAC3BgT,GAAoBvlB,EAASwS,CAE7BlL,GAAOyK,IAAMqT,CACb9d,GAAO0K,IAAMqT,CAEbD,GAAgBruB,KAAK4sB,MAAMrc,EAAOyK,GAClCsT,GAAgBtuB,KAAK4sB,MAAMrc,EAAO0K,GAElC1K,GAAOsH,QAEP,IAAI2D,GAAU,GAAKC,GAAU,EAAG,CAC5B,GAAI/f,GAAU,GAAIof,EAClB,KAAK,GAAIlgB,GAAWyzB,EAAezzB,EAAIyzB,EAAgBE,EAAkB3zB,IAAK,CAC1E,IAAK,GAAI8E,GAAW4uB,EAAe5uB,EAAI4uB,EAAgBE,EAAmB9uB,IAAK,CAC3EhE,EAAEmN,EAAIjO,CACNc,GAAEoN,EAAIpJ,CACNhE,GAAI6U,EAAO0L,eAAevgB,EAE1B,IAAI+qB,GAAiBmD,EAAsBwF,eAAe1zB,EAAEmN,EAAGnN,EAAEoN,EAAG4c,EACpEnqB,MAAKoxB,aAAawC,EAAiBv0B,EAAG8E,EAAG+mB,SAG9C,C9Co/NH,G8Cl/NIvJ,GAAW3hB,KAAKqQ,KACpB,IAAIuR,GAAW5hB,KAAK4uB,MACpB,KAAK,GAAIvvB,GAAWyzB,EAAezzB,EAAIyzB,EAAgBE,EAAkB3zB,IAAK,CAC1E,IAAK,GAAI8E,GAAW4uB,EAAe5uB,EAAI4uB,EAAgBE,EAAmB9uB,IAAK,CAC3Ewd,EAAGrU,EAAIjO,CACPsiB,GAAGpU,EAAIpJ,CACPwd,GAAK3M,EAAO0L,eAAeiB,EAE3BC,GAAGtU,EAAIjO,EAAI,CACXuiB,GAAGrU,EAAIpJ,EAAI,CACXyd,GAAK5M,EAAO0L,eAAekB,EAE3B,IAAIsJ,GAAiBmD,EAAsByF,UAAUnS,EAAGrU,EAAIslB,EAASjR,EAAGpU,EAAIslB,EAASjR,EAAGtU,EAAIslB,EAAShR,EAAGrU,EAAIslB,EAAS1I,EACrHnqB,MAAKoxB,aAAawC,EAAiBv0B,EAAG8E,EAAG+mB,KAKrDlW,EAAOsH,aACJ,CACH,IAAK,GAAIjd,GAAWyzB,EAAezzB,EAAIyzB,EAAgBE,EAAkB3zB,IAAK,CAC1E,IAAK,GAAI8E,GAAW4uB,EAAe5uB,EAAI4uB,EAAgBE,EAAmB9uB,IAAK,CAC3E,GAAI+mB,GAAiBmD,EAAsB0F,OAAO10B,EAAIyzB,EAAgBF,EAASzuB,EAAI4uB,EAAgBF,EAAS1I,EAC5GnqB,MAAKoxB,aAAawC,EAAiBv0B,EAAG8E,EAAG+mB,MAMlDmD,GAAA9tB,UAAAgW,UAAP,SAAiBmG,EAAYC,EAAYG,EAAYC,EAAYtO,EAAWC,IAGrE2f,GAAA9tB,UAAAyzB,OAAP,YAGO3F,GAAA9tB,UAAA0zB,WAAP,SAAkB3mB,EAAUC,EAAU8F,EAAU+C,IAGzCiY,GAAA9tB,UAAA2zB,YAAP,SAAmBC,IAGZ9F,GAAA9tB,UAAA6zB,WAAP,SAAkB/E,EAAa/hB,EAAUC,EAAU0iB,IAG5C5B,GAAA9tB,UAAA8zB,UAAP,YAGOhG,GAAA9tB,UAAA+zB,MAAP,SAAatQ,EAAWC,EAAWG,EAAWC,EAAW+C,IAGlDiH,GAAA9tB,UAAAg0B,qBAAP,SAA4BpE,EAAWC,EAAWpM,EAAWC,GACzD,MAAO9Z,WAGIkkB,GAAAwF,eAAf,SAA8B10B,EAAUgV,EAAUqgB,EAAmBC,EAAuBC,GAAvB,GAAAD,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,EACxF,GAAIC,GAAmBtG,EAAsB0F,OAAO50B,EAAGgV,EAAGqgB,EAC1D,IAAII,GAAmBvG,EAAsB0F,OAAO50B,EAAIs1B,EAAYtgB,EAAGqgB,EACvE,IAAIK,GAAmBxG,EAAsB0F,OAAO50B,EAAGgV,EAAIugB,EAAYF,EACvE,IAAIM,GAAmBzG,EAAsB0F,OAAO50B,EAAIs1B,EAAYtgB,EAAIugB,EAAYF,EAEpF,IAAIp1B,GAAWD,CACfC,GAAIA,EAAIqF,KAAK4sB,MAAMjyB,EAEnB,IAAI21B,GAAuB1G,EAAsB2G,iBAAiBL,EAASC,EAASx1B,EACpF,IAAI61B,GAAuB5G,EAAsB2G,iBAAiBH,EAASC,EAAS11B,EAEpF,IAAIc,GAAWiU,CACfjU,GAAIA,EAAIuE,KAAK4sB,MAAMnxB,EACnB,OAAOmuB,GAAsB2G,iBAAiBD,EAAaE,EAAa/0B,GAG7DmuB,GAAA0F,OAAf,SAAsB50B,EAAUgV,EAAU+V,GACtC/qB,EAAIsF,KAAK4sB,MAAMlyB,EACfgV,GAAI1P,KAAK4sB,MAAMld,EAEf,IAAI8B,IAAmB,EAAG,EAAG,EAAG,EAEhC,IAAI9W,EAAI,GAAKA,GAAK+qB,EAAUzc,OAAS0G,EAAI,GAAKA,GAAK+V,EAAUxc,OAAQ,CACjE,MAAOuI,GAGX,GAAIpT,IAAgB1D,EAAIgV,EAAI+V,EAAUzc,OAAS,CAC/CwI,GAAO,GAAKiU,EAAUP,KAAK9mB,EAC3BoT,GAAO,GAAKiU,EAAUP,KAAK9mB,EAAQ,EACnCoT,GAAO,GAAKiU,EAAUP,KAAK9mB,EAAQ,EACnCoT,GAAO,GAAKiU,EAAUP,KAAK9mB,EAAQ,EACnC,OAAOoT,GAGIoY,GAAAyF,UAAf,SAAyB3D,EAAWC,EAAWpM,EAAWC,EAAWuQ,GACjE,GAAIU,GAAc,CAClB,IAAIjf,IAAmB,EAAG,EAAG,EAAG,EAChC,IAAI3I,EACJ,IAAIC,EACJ,IAAI4nB,EACJ,IAAIC,EAEJ,IAAI5D,GAAe/sB,KAAK4sB,MAAMjB,EAC9B,IAAIiF,GAAa5wB,KAAK6wB,KAAKrR,EAE3BuN,GAAQ/sB,KAAK8wB,IAAI9wB,KAAKC,IAAI8sB,EAAOgD,EAAQ9mB,OAAS,GAAI,EACtD2nB,GAAM5wB,KAAK8wB,IAAI9wB,KAAKC,IAAI2wB,EAAKb,EAAQ9mB,OAAS,GAAI,EAElD,KAAKH,EAAIikB,EAAOjkB,EAAI8nB,EAAK9nB,IAAK,CAC1B6nB,EAAQ,CAER,IAAI7nB,EAAI6iB,EAAI,CACRgF,EAAQA,GAAS,GAAOhF,EAAK7iB,IAGjC,GAAIA,EAAI0W,EAAI,CACRmR,EAAQA,GAAS,GAAO7nB,EAAI0W,IAGhC,GAAIsN,GAAe9sB,KAAK4sB,MAAMlB,EAC9B,IAAIqF,GAAa/wB,KAAK6wB,KAAKtR,EAE3BuN,GAAQ9sB,KAAK8wB,IAAI9wB,KAAKC,IAAI6sB,EAAOiD,EAAQ/mB,MAAQ,GAAI,EACrD+nB,GAAM/wB,KAAK8wB,IAAI9wB,KAAKC,IAAI8wB,EAAKhB,EAAQ/mB,MAAQ,GAAI,EAGjD,KAAKH,EAAIikB,EAAOjkB,EAAIkoB,EAAKloB,IAAK,CAC1B6nB,EAAQC,CAER,IAAIlK,GAAiBmD,EAAsB0F,OAAOzmB,EAAGC,EAAGinB,EAExD,IAAIlnB,EAAI6iB,EAAI,CACRgF,EAAQA,GAAS,GAAOhF,EAAK7iB,IAEjC,GAAIA,EAAI0W,EAAI,CACRmR,EAAQA,GAAS,GAAO7nB,EAAI0W,IAEhC/N,EAAO,IAAMiV,EAAM,GAAKiK,CACxBlf,GAAO,IAAMiV,EAAM,GAAKiK,CACxBlf,GAAO,IAAMiV,EAAM,GAAKiK,CACxBlf,GAAO,IAAMiV,EAAM,GAAKiK,CACxBD,GAAOA,EAAOC,GAItBlf,EAAO,IAAMif,CACbjf,GAAO,IAAMif,CACbjf,GAAO,IAAMif,CACbjf,GAAO,IAAMif,CAEbjf,GAAO,GAAKA,EAAO,GAAK,GACxBA,GAAO,GAAKA,EAAO,GAAK,GACxBA,GAAO,GAAKA,EAAO,GAAK,GACxBA,GAAO,GAAKA,EAAO,GAAK,GACxB,OAAOA,GAGIoY,GAAA2G,iBAAf,SAAgC5iB,EAAiBhI,EAAiBhL,GAC9D,GAAI6W,KACJA,GAAO,GAAK7D,EAAO,IAAMhI,EAAO,GAAKgI,EAAO,IAAMhT,CAClD6W,GAAO,GAAK7D,EAAO,IAAMhI,EAAO,GAAKgI,EAAO,IAAMhT,CAClD6W,GAAO,GAAK7D,EAAO,IAAMhI,EAAO,GAAKgI,EAAO,IAAMhT,CAClD6W,GAAO,GAAK7D,EAAO,IAAMhI,EAAO,GAAKgI,EAAO,IAAMhT,CAClD,OAAO6W,GAGf,OAAAoY,KACAvuB,GAA+BJ,QAAtB2uB,I9Cq9NN/O,8BAA8B,8BAA8BsB,6BAA6B,6BAA6B0H,sCAAsC,wCAAwCmN,sCAAsC,SAAS72B,EAAQkB,EAAOJ,SAE/PwsB,iCAAiC,SAASttB,EAAQkB,EAAOJ,GAC/D,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+Cj8OtB,IAAOq1B,GAAS92B,EAAc,kCAE9B,IAAO+nB,GAAS/nB,EAAc,iCAC9B,IAAO+2B,GAAU/2B,EAAc,mCAE/B,IAAM2pB,GAAO,SAAA7nB,GAASX,EAAhBwoB,EAAO7nB,EA8DZ,SA9DK6nB,GA8DO9a,EAAcC,EAAemb,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,KAExCnoB,EAAAf,KAAAK,KA1DOA,MAAA41B,YAAsB,IA4D7B51B,MAAKspB,MAAQ,GAAI3C,GAAU,EAAG,EAAGlZ,EAAOC,EACxC1N,MAAK41B,YAAc/M,CACnB7oB,MAAK61B,kBAxDNt0B,OAAAC,eAAW+mB,EAAAhoB,UAAA,a/Cu8OJkB,I+Cv8OP,WAEC,MAAO8mB,GAAQ7mB,W/Cw8OTC,WAAY,KACZC,aAAc,M+Cn8OrBL,QAAAC,eAAW+mB,EAAAhoB,UAAA,U/Cy8OJkB,I+Cz8OP,WAEC,MAAOzB,MAAKspB,MAAM5b,Q/C08OZ3L,I+Cv8OP,SAAkBC,GAEjB,GAAIhC,KAAKspB,MAAM5b,QAAU1L,EACxB,MAEDhC,MAAKgsB,SAAShsB,KAAKspB,MAAM7b,MAAOzL,I/Cu8O1BL,WAAY,KACZC,aAAc,M+Ch8OrBL,QAAAC,eAAW+mB,EAAAhoB,UAAA,Q/Cw8OJkB,I+Cx8OP,WAEC,MAAOzB,MAAKspB,O/Cy8ON3nB,WAAY,KACZC,aAAc,M+Cp8OrBL,QAAAC,eAAW+mB,EAAAhoB,UAAA,S/C08OJkB,I+C18OP,WAEC,MAAOzB,MAAKspB,MAAM7b,O/C28OZ1L,I+Cx8OP,SAAiBC,GAEhB,GAAIhC,KAAKspB,MAAM7b,OAASzL,EACvB,MAEDhC,MAAKgsB,SAAShqB,EAAOhC,KAAKspB,MAAM5b,S/Cw8O1B/L,WAAY,KACZC,aAAc,M+Cp7Od2mB,GAAAhoB,UAAAyrB,SAAP,SAAgBve,EAAcC,GAE7B,GAAI1N,KAAKspB,MAAM7b,OAASA,GAASzN,KAAKspB,MAAM5b,QAAUA,EACrD1N,KAAKqC,OAENrC,MAAKspB,MAAM7b,MAAQA,CACnBzN,MAAKspB,MAAM5b,OAASA,CAEpB1N,MAAK61B,kBAOEtN,GAAAhoB,UAAAs1B,gBAAR,WAEC,GAAI71B,KAAK41B,eAAiBD,EAAWG,iBAAiB91B,KAAKspB,MAAM7b,SAAWkoB,EAAWG,iBAAiB91B,KAAKspB,MAAM5b,SAClH,KAAM,IAAInO,OAAM,iFAOlBgC,QAAAC,eAAW+mB,EAAAhoB,UAAA,c/Cu7OJkB,I+Cv7OP,WACC,MAAOzB,MAAK41B,a/Cy7ON7zB,I+Ct7OP,SAAsBC,GACrB,GAAGhC,KAAK41B,aAAe5zB,EAAO,MAC9BhC,MAAK41B,YAAc5zB,CACnBhC,MAAK61B,mB/Cy7OCl0B,WAAY,KACZC,aAAc,M+CriPP2mB,GAAA7mB,UAAmB,iBA6GlC,OAAA6mB,IA/GsBmN,EAiHtB51B,GAAiBJ,QAAR6oB,I/C67ON7B,iCAAiC,iCAAiCqP,kCAAkC,kCAAkCC,mCAAmC,qCAAqCD,mCAAmC,SAASn3B,EAAQkB,EAAOJ,GAC5Q,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgDpjPtB,IAAOG,GAAS5B,EAAe,oCAE/B,IAAM82B,GAAS,SAAAh1B,GAASX,EAAlB21B,EAASh1B,EAOd,SAPKg1B,KASJh1B,EAAAf,KAAAK,KAPMA,MAAAi2B,SAAkB,OAczB10B,OAAAC,eAAWk0B,EAAAn1B,UAAA,UhDmjPJkB,IgDnjPP,WAEC,MAAOzB,MAAKi2B,UhDojPNt0B,WAAY,KACZC,aAAc,MgDnjPtB,OAAA8zB,IApBwBl1B,EAsBLV,GAAAJ,QAAVg2B,IhDujPN7wB,oCAAoC,sCAAsCuoB,mCAAmC,SAASxuB,EAAQkB,EAAOJ,GACxI,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiDxlPtB,IAAOq1B,GAAS92B,EAAc,kCAE9B,IAAO+2B,GAAU/2B,EAAc,mCAE/B,IAAM+tB,GAAS,SAAAjsB,GAASX,EAAlB4sB,EAASjsB,EAkCd,SAlCKisB,GAkCOhoB,GAEXjE,EAAAf,KAAAK,KAEAA,MAAKmF,MAAQR,CAEb3E,MAAK61B,kBA9BNt0B,OAAAC,eAAWmrB,EAAApsB,UAAA,ajD6lPJkB,IiD7lPP,WAEC,MAAOkrB,GAAUjrB,WjD8lPXC,WAAY,KACZC,aAAc,MiDzlPrBL,QAAAC,eAAWmrB,EAAApsB,UAAA,QjD+lPJkB,IiD/lPP,WAEC,MAAOzB,MAAKmF,OjDgmPNpD,IiD7lPP,SAAgBC,GAEf,GAAIhC,KAAKmF,OAASnD,EACjB,MAEDhC,MAAKgsB,SAAShsB,KAAKmF,QjD6lPbxD,WAAY,KACZC,aAAc,MiDzkPd+qB,GAAApsB,UAAAyrB,SAAP,SAAgBrnB,GAEf,GAAI3E,KAAKmF,OAASR,EACjB3E,KAAKqC,OAENrC,MAAKmF,MAAQR,CAEb3E,MAAK61B,kBAOElJ,GAAApsB,UAAAs1B,gBAAR,WAEC,IAAKF,EAAWG,iBAAiB91B,KAAKmF,OACrC,KAAM,IAAI5F,OAAM,iFAhEJotB,GAAAjrB,UAAmB,mBAkElC,OAAAirB,IApEwB+I,EAsExB51B,GAAmBJ,QAAVitB,IjD+kPNoJ,kCAAkC,kCAAkCC,mCAAmC,qCAAqCtH,mCAAmC,SAAS9vB,EAAQkB,EAAOJ,GkDzpP1M,GAAM4uB,GAAS,WAKX,QALEA,GAKU7gB,EAAcC,GACtB1N,KAAKyN,MAAQA,CACbzN,MAAK0N,OAASA,CACd1N,MAAK2pB,KAAO,GAAItoB,YAAWoM,EAAMC,EAAO,GAEhD,MAAA4gB,KACAxuB,GAAmBJ,QAAV4uB,OlDypPH4H,mCAAmC,SAASt3B,EAAQkB,EAAOJ,GACjE,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmDzqPtB,IAAO81B,GAAWv3B,EAAc,oCnDgsPhC,ImDvqPMw3B,GAAS,SAAA11B,GAASX,EAAlBq2B,EAAS11B,EAkGd,SAlGK01B,GAkGOC,EAAwBC,EAAwBC,GAAhD,GAAAF,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAE3D71B,EAAAf,KAAAK,KAAMs2B,EAAQC,EAEdv2B,MAAKw2B,QAAUH,CAEfr2B,MAAKy2B,cA5FNl1B,OAAAC,eAAW40B,EAAA71B,UAAA,anD+qPJkB,ImD/qPP,WAEC,MAAO20B,GAAU10B,WnDgrPXC,WAAY,KACZC,aAAc,MmDlpPrBL,QAAAC,eAAW40B,EAAA71B,UAAA,UnD8qPJkB,ImD9qPP,WAEC,MAAOzB,MAAKw2B,SnD+qPNz0B,ImD7qPP,SAAkBC,GAEjB,GAAIhC,KAAKw2B,SAAWx0B,EACnB,MAEDhC,MAAKw2B,QAAUx0B,GnD8qPTL,WAAY,KACZC,aAAc,MmDvqPrBL,QAAAC,eAAW40B,EAAA71B,UAAA,anD6qPJkB,ImD7qPP,WAEC,MAAOzB,MAAK02B,YnD8qPN30B,ImD5qPP,SAAqBC,GAEpB,GAAIhC,KAAK02B,YAAc10B,EACtB,MAEDhC,MAAK02B,WAAa10B,CAElBhC,MAAKy2B,enD2qPC90B,WAAY,KACZC,aAAc,MmDtqPrBL,QAAAC,eAAW40B,EAAA71B,UAAA,anD4qPJkB,ImD5qPP,WAEC,MAAOzB,MAAK22B,YnD6qPN50B,ImD3qPP,SAAqBC,GAEpB,GAAIhC,KAAK22B,YAAc30B,EACtB,MAEDhC,MAAK22B,WAAa30B,CAElBhC,MAAKy2B,enD0qPC90B,WAAY,KACZC,aAAc,MmD1pPbw0B,GAAA71B,UAAAk2B,YAAR,YAzGcL,GAAA10B,UAAmB,mBA4GlC,OAAA00B,IA9GwBD,EAgHxBr2B,GAAmBJ,QAAV02B,InD8pPNQ,oCAAoC,sCAAsCA,qCAAqC,SAASh4B,EAAQkB,EAAOJ,GAC1I,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoD3yPtB,IAAOG,GAAS5B,EAAc,oCpDizP9B,IoD5yPMu3B,GAAW,SAAAz1B,GAASX,EAApBo2B,EAAWz1B,EA0ChB,SA1CKy1B,GA0COG,EAAwBC,GAAxB,GAAAD,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAEnC71B,EAAAf,KAAAK,KAEAA,MAAK62B,QAAUP,CACft2B,MAAK82B,QAAUP,EAvChBh1B,OAAAC,eAAW20B,EAAA51B,UAAA,UpDozPJkB,IoDpzPP,WAEC,MAAOzB,MAAK62B,SpDqzPN90B,IoDnzPP,SAAkBC,GAEjB,GAAIhC,KAAK62B,SAAW70B,EACnB,MAEDhC,MAAK62B,QAAU70B,GpDozPTL,WAAY,KACZC,aAAc,MoD7yPrBL,QAAAC,eAAW20B,EAAA51B,UAAA,UpDmzPJkB,IoDnzPP,WAEC,MAAOzB,MAAK82B,SpDozPN/0B,IoDlzPP,SAAkBC,GAEjB,GAAIhC,KAAK82B,SAAW90B,EACnB,MAEDhC,MAAK82B,QAAU90B,GpDmzPTL,WAAY,KACZC,aAAc,MoDryPtB,OAAAu0B,IAjD0B31B,EAmDLV,GAAAJ,QAAZy2B,IpDyyPNtxB,oCAAoC,sCAAsCkyB,qCAAqC,SAASn4B,EAAQkB,EAAOJ,GAC1I,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqDv2PtB,IAAO81B,GAAWv3B,EAAc,oCrD83PhC,IqDv2PMo4B,GAAW,SAAAt2B,GAASX,EAApBi3B,EAAWt2B,EAkBhB,SAlBKs2B,GAkBOV,EAAwBC,GAAxB,GAAAD,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAEnC71B,EAAAf,KAAAK,KAAMs2B,EAAQC,GAZfh1B,OAAAC,eAAWw1B,EAAAz2B,UAAA,arDg3PJkB,IqDh3PP,WAEC,MAAOu1B,GAAYt1B,WrDi3PbC,WAAY,KACZC,aAAc,MqD13PPo1B,GAAAt1B,UAAmB,qBAoBlC,OAAAs1B,IAtB0Bb,EAwB1Br2B,GAAqBJ,QAAZs3B,IrD22PNJ,oCAAoC,sCAAsCK,yCAAyC,SAASr4B,EAAQkB,EAAOJ,GAC9I,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsD/5PtB,IAAOqoB,GAAa9pB,EAAa,sCACjC,IAAOytB,GAAkBztB,EAAY,2CACrC,IAAO2pB,GAAO3pB,EAAe,gCAC7B,IAAO2gB,GAAK3gB,EAAe,6BtDq6P3B,IsDh6PMs4B,GAAe,SAAAx2B,GAASX,EAAxBm3B,EAAex2B,EAuDpB,SAvDKw2B,GAuDOC,EAAqCC,GAArC,GAAAD,QAAA,GAAmC,CAAnCA,EAAA,KAAqC,GAAAC,QAAA,GAAgC,CAAhCA,EAAA,KAEhD12B,EAAAf,KAAAK,KAAM,EAAG,EAETA,MAAKq3B,gBAAkBF,CACvBn3B,MAAKs3B,aAAeF,CAEpBp3B,MAAKu3B,QAAU,GAAI7O,GAAc,EAAG,EAAG,MAAO,SAE9C1oB,MAAKw3B,YApDNj2B,OAAAC,eAAW01B,EAAA32B,UAAA,atDu6PJkB,IsDv6PP,WAEC,MAAOy1B,GAAgBx1B,WtDw6PjBC,WAAY,KACZC,aAAc,MsDt6PrBL,QAAAC,eAAW01B,EAAA32B,UAAA,kBtDy6PJkB,IsDz6PP,WAEC,MAAOzB,MAAKq3B,iBtD06PNt1B,IsDv6PP,SAA0BC,GAEzB,GAAIhC,KAAKq3B,iBAAmBr1B,EAC3B,MAEDhC,MAAKq3B,gBAAkBr1B,CAEvBhC,MAAKoC,YAELpC,MAAKw3B,atDq6PC71B,WAAY,KACZC,aAAc,MsDl6PrBL,QAAAC,eAAW01B,EAAA32B,UAAA,etDq6PJkB,IsDr6PP,WAEC,MAAOzB,MAAKs3B,ctDs6PNv1B,IsDn6PP,SAAuBC,GAEtB,GAAIhC,KAAKs3B,cAAgBt1B,EACxB,MAEDhC,MAAKs3B,aAAet1B,CAEpBhC,MAAKoC,YAELpC,MAAKw3B,atDi6PC71B,WAAY,KACZC,aAAc,MsD14Pds1B,GAAA32B,UAAA+B,MAAP,WAEC,MAAO,IAAI40B,GAAgBl3B,KAAKq3B,gBAAiBr3B,KAAKs3B,cAsBhDJ,GAAA32B,UAAA0D,QAAP,WAECvD,EAAAH,UAAM0D,QAAOtE,KAAAK,KAEbA,MAAKspB,MAAQ,IAEbtpB,MAAKu3B,QAAQtzB,UAOPizB,GAAA32B,UAAAmpB,aAAP,WAEC,GAAI+N,GAAe,GAAIlY,EAEvBvf,MAAKu3B,QAAQlO,SAASrpB,KAAKspB,MAAO,SAElC,IAAItpB,KAAKs3B,aACRt3B,KAAKu3B,QAAQ1N,YAAY7pB,KAAKs3B,aAAct3B,KAAKspB,MAAOmO,EAAQpL,EAAmBG,MAAOH,EAAmBG,MAE9G,IAAIxsB,KAAKq3B,gBACRr3B,KAAKu3B,QAAQ1N,YAAY7pB,KAAKq3B,gBAAiBr3B,KAAKspB,MAAOmO,EAAQpL,EAAmBI,IAAKJ,EAAmBI,IAE/G,OAAOzsB,MAAKu3B,QAAQ7N,eAOdwN,GAAA32B,UAAAqqB,UAAP,WAEC,MAAO5qB,MAAKu3B,QAAQ3M,YASdsM,GAAA32B,UAAAyrB,SAAP,SAAgBve,EAAcC,GAE7BhN,EAAAH,UAAMyrB,SAAQrsB,KAAAK,KAACyN,EAAOC,EAEtB1N,MAAKu3B,QAAQvL,SAASve,EAAOC,GAGtBwpB,GAAA32B,UAAAi3B,UAAR,WAEC,GAAInkB,GAAU+C,CAEd,IAAIpW,KAAKq3B,gBAAiB,CACzBhkB,EAAIrT,KAAKq3B,gBAAgB5pB,KACzB2I,GAAIpW,KAAKq3B,gBAAgB3pB,WACnB,IAAI1N,KAAKs3B,aAAc,CAC7BjkB,EAAIrT,KAAKs3B,aAAa7pB,KACtB2I,GAAIpW,KAAKs3B,aAAa5pB,WAChB,CACN2F,EAAI,CACJ+C,GAAI,EAGL,GAAI/C,GAAKrT,KAAKu3B,QAAQ9pB,OAAS2I,GAAKpW,KAAKu3B,QAAQ7pB,OAAQ,CACxD1N,KAAKu3B,QAAQtzB,SACbjE,MAAKu3B,QAAU,GAAI7O,GAAcrV,EAAG+C,EAAG,MAAO,UAG/CpW,KAAKgsB,SAAS3Y,EAAG+C,GArKJ8gB,GAAAx1B,UAAmB,yBAuKlC,OAAAw1B,IAzK8B3O,EA2KLzoB,GAAAJ,QAAhBw3B,ItDk4PNtW,6BAA6B,6BAA6B0H,sCAAsC,sCAAsC8D,2CAA2C,2CAA2CF,gCAAgC,kCAAkCwL,2CAA2C,SAAS94B,EAAQkB,EAAOJ,GACpW,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuD1jQtB,IAAO8I,GAAUvK,EAAe,oCAChC,IAAO0L,GAAe1L,EAAc,yCvDikQpC,IuDzjQM+4B,GAAe,SAAAj3B,GAASX,EAAxB43B,EAAej3B,EAWpB,SAXKi3B,GAWOtuB,EAAcuuB,GAX3B,GAAAC,GAAA73B,IAaEU,GAAAf,KAAAK,KAJMA,MAAA83B,SAAmB,IAMzB93B,MAAKuJ,OAASF,CACdrJ,MAAK+3B,MAAQH,CAEb53B,MAAKg4B,iBAAmB,SAACltB,GAAqB,MAAA+sB,GAAKI,QAAQntB,GAC3D9K,MAAKk4B,sBAAwB,SAACptB,GAAqB,MAAA+sB,GAAKM,aAAartB,GAErE9K,MAAKuJ,OAAOiB,iBAAiBrB,EAAWQ,MAAO3J,KAAKg4B,iBACpDh4B,MAAKuJ,OAAOiB,iBAAiBrB,EAAWM,WAAYzJ,KAAKk4B,uBAMnDP,EAAAp3B,UAAA03B,QAAP,SAAentB,GAEd9K,KAAKuJ,OAAOoB,oBAAoBxB,EAAWQ,MAAO3J,KAAKg4B,iBACvDh4B,MAAKuJ,OAAOoB,oBAAoBxB,EAAWM,WAAYzJ,KAAKk4B,sBAE5Dl4B,MAAK+3B,MAAMK,iBAAiBp4B,KAAKuJ,OACjCvJ,MAAK+3B,MAAQ,IACb/3B,MAAKuJ,OAAS,KAMRouB,GAAAp3B,UAAA43B,aAAP,SAAoBrtB,GAEnB9K,KAAK83B,SAAW,KAElB,OAAAH,IA7C8BrtB,EA+CLxK,GAAAJ,QAAhBi4B,IvD2iQN1uB,oCAAoC,oCAAoCoB,yCAAyC,2CAA2CxF,qCAAqC,SAASjG,EAAQkB,EAAOJ,GAC5N,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwDtmQtB,IAAO4H,GAAmBrJ,EAAY,6CACtC,IAAOuK,GAAUvK,EAAc,oCAC/B,IAAO0L,GAAe1L,EAAa,yCAEnC,IAAM4B,GAAS,SAAAE,GAASX,EAAlBS,EAASE,EAYd,SAZKF,GAYOqH,GAAA,GAAAA,QAAA,GAAkB,CAAlBA,EAAA,KAEXnH,EAAAf,KAAAK,KAEAA,MAAKq4B,IAAM73B,EAAU83B,UAErB,IAAIzwB,GAAQ,KACXA,EAAO,MAER7H,MAAKyI,MAAQZ,CACb7H,MAAKu4B,cAAgB1wB,CAErB7H,MAAKw4B,iBAMNj3B,OAAAC,eAAWhB,EAAAD,UAAA,axDylQJkB,IwDzlQP,WAEC,KAAM,IAAIwG,IxD0lQJtG,WAAY,KACZC,aAAc,MwDnlQrBL,QAAAC,eAAWhB,EAAAD,UAAA,gBxD2lQJkB,IwD3lQP,WAEC,MAAOzB,MAAKu4B,exD4lQN52B,WAAY,KACZC,aAAc,MwDvlQrBL,QAAAC,eAAWhB,EAAAD,UAAA,MxD6lQJkB,IwD7lQP,WAEC,MAAOzB,MAAKq4B,KxD8lQN12B,WAAY,KACZC,aAAc,MwD5lQrBL,QAAAC,eAAWhB,EAAAD,UAAA,QxD+lQJkB,IwD/lQP,WAEC,MAAOzB,MAAKyI,OxDgmQN1G,IwD7lQP,SAAgB6L,GAEf,GAAI6qB,EAEJA,GAAOz4B,KAAKyI,KACZzI,MAAKyI,MAAQmF,CAEb,IAAI5N,KAAKyI,OAAS,KACjBzI,KAAKyI,MAAQ,MAEdzI,MAAKw4B,gBAELx4B,MAAK6K,cAAc,GAAI1B,GAAWA,EAAWS,OAAQ5J,KAAMy4B,KxD0lQrD92B,WAAY,KACZC,aAAc,MwDrlQdpB,GAAAD,UAAA6B,WAAP,WAECpC,KAAK6K,cAAc,GAAI1B,GAAWA,EAAWM,WAAYzJ,OAMnDQ,GAAAD,UAAA0D,QAAP,WAECjE,KAAK6K,cAAc,GAAI1B,GAAWA,EAAWO,QAAS1J,OAGhDQ,GAAAD,UAAA8B,MAAP,WAECrC,KAAK6K,cAAc,GAAI1B,GAAWA,EAAWQ,MAAO3J,OAGrDuB,QAAAC,eAAWhB,EAAAD,UAAA,kBxDqlQJkB,IwDrlQP,WAEC,MAAOzB,MAAK04B,YxDslQN/2B,WAAY,KACZC,aAAc,MwDplQrBL,QAAAC,eAAWhB,EAAAD,UAAA,iBxDulQJkB,IwDvlQP,WAEC,MAAOzB,MAAK24B,YxDwlQNh3B,WAAY,KACZC,aAAc,MwDtlQdpB,GAAAD,UAAAq4B,gBAAP,SAAuB/wB,EAAagxB,GAEnC,MAAQ74B,MAAKyI,OAASZ,KAAUgxB,GAAM74B,KAAK04B,YAAcG,GAInDr4B,GAAAD,UAAAu4B,QAAP,SAAeC,GAEd,MAAO/4B,MAAK0B,WAAaq3B,EAAWr3B,UAG9BlB,GAAAD,UAAAy4B,eAAP,SAAsBnxB,EAAagxB,EAAkBI,GAAlB,GAAAJ,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAI,QAAA,GAA+B,CAA/BA,EAAA,KAGpDj5B,KAAKyI,MAAQZ,EAAMA,EAAO,MAC1B7H,MAAK04B,WAAaG,EAAIA,EAAKr4B,EAAU04B,iBAErC,IAAID,EACHj5B,KAAKu4B,cAAgBv4B,KAAKyI,KAE3BzI,MAAKw4B,iBAGEh4B,GAAAD,UAAAi4B,eAAR,WAECx4B,KAAK24B,YAAe34B,KAAK04B,WAAY14B,KAAKyI,OA/H7BjI,GAAA83B,SAAkB,CAQlB93B,GAAA04B,kBAA2B,SAyH1C,OAAA14B,IAnIwB8J,EAqIxBxK,GAAmBJ,QAAVc,IxDmlQNuH,6CAA6C,6CAA6CkB,oCAAoC,oCAAoCoB,yCAAyC,2CAA2C8uB,8CAA8C,SAASv6B,EAAQkB,EAAOJ,GAC/T,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyDjuQtB,IAAO+4B,GAAoBx6B,EAAY,+CACvC,IAAOy6B,GAAMz6B,EAAa,iCAE1B,IAAO06B,GAAkB16B,EAAY,6CACrC,IAAO26B,GAAgB36B,EAAa,2CAEpC,IAAO4B,GAAS5B,EAAc,oCAE9B,IAAOoJ,GAASpJ,EAAc,mCAC9B,IAAOuK,GAAUvK,EAAc,oCAC/B,IAAOgO,GAAchO,EAAa,wCAClC,IAAOwM,GAAWxM,EAAY,qCAC9B,IAAO0L,GAAe1L,EAAa,yCACnC,IAAOiN,GAAWjN,EAAc,qCzDsuQhC,IyD9tQM46B,GAAkB,SAAA94B,GAASX,EAA3By5B,EAAkB94B,EA0BvB,SA1BK84B,KAAN,GAAA3B,GAAA73B,IA4BEU,GAAAf,KAAAK,KAlBOA,MAAAy5B,uBAAuC,GAAIx4B,MAoBlDjB,MAAK0L,QAAU,GAAIzK,MACnBjB,MAAK05B,iBAAmB,GAAIn4B,OAC5BvB,MAAK25B,gBAAkB,GAAI14B,MAE3BjB,MAAK45B,iBAAmBL,EAAiBM,OAAOC,QAChD95B,MAAK+5B,mBAAqBT,EAAmBU,SAE7Ch6B,MAAKi6B,uBAAyB,SAACnvB,GAAqB,MAAA+sB,GAAKqC,cAAcpvB,GACvE9K,MAAKm6B,iCAAmC,SAACrvB,GAAqB,MAAA+sB,GAAKuC,wBAAwBtvB,GAC3F9K,MAAKq6B,4BAA8B,SAACvvB,GAAsB,MAAA+sB,GAAKyC,mBAAmBxvB,GAClF9K,MAAKu6B,4BAA8B,SAACzvB,GAAsB,MAAA+sB,GAAK2C,mBAAmB1vB,GAClF9K,MAAKy6B,yBAA2B,SAAC3vB,GAAqB,MAAA+sB,GAAK6C,gBAAgB5vB,GAC3E9K,MAAK26B,qBAAuB,SAAC7vB,GAAyB,MAAA+sB,GAAK+C,YAAY9vB,GACvE9K,MAAK66B,sBAAwB,SAAC/vB,GAAsB,MAAA+sB,GAAKiD,aAAahwB,IAYzD0uB,EAAAuB,YAAd,SAA0BC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,UAEzB,IAAKA,EACJA,EAAM,SAEP,KAAKxB,EAAmByB,YAAY76B,eAAe46B,GAClDxB,EAAmByB,YAAYD,GAAO,GAAIxB,EAE3C,OAAOA,GAAmByB,YAAYD,GAOhCxB,GAAAj5B,UAAA26B,aAAP,SAAoBC,GAEnB9B,EAAO6B,aAAaC,GAMd3B,GAAAj5B,UAAA66B,cAAP,SAAqBC,GAEpBhC,EAAO+B,cAAcC,GAatB95B,QAAAC,eAAWg4B,EAAAj5B,UAAA,oBzDisQJkB,IyDjsQP,WAEC,MAAOzB,MAAKs7B,WzDksQNv5B,IyD/rQP,SAA4B6L,GAG3B,IAAKA,EACJ,KAAM,IAAI5F,GAAU,6EAErBhI,MAAKs7B,UAAY1tB,EAAIksB,UzD8rQfn4B,WAAY,KACZC,aAAc,MyD/qQrBL,QAAAC,eAAWg4B,EAAAj5B,UAAA,sBzD8rQJkB,IyD9rQP,WAEC,MAAOzB,MAAKu7B,qBzD+rQNx5B,IyD5rQP,SAA8B6L,GAE7B5N,KAAKu7B,oBAAsB3tB,GzD6rQrBjM,WAAY,KACZC,aAAc,MyD7qQd43B,GAAAj5B,UAAAi7B,eAAP,SAAsBC,EAA+BC,EAA+BC,GAA9D,GAAAF,QAAA,GAA6B,CAA7BA,EAAA,KAA+B,GAAAC,QAAA,GAA6B,CAA7BA,EAAA,KAA+B,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,KAEnF,MAAO,IAAIvC,GAAqBp5B,KAAK0L,QAAS+vB,EAAiBC,EAAiBC,GAY1EnC,GAAAj5B,UAAAq7B,KAAP,SAAYC,EAAgBC,EAA8BjD,EAAkBkD,GAAhD,GAAAD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAjD,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAkD,QAAA,GAAwB,CAAxBA,EAAA,KAE3E/7B,KAAKg8B,YAAYJ,KAAKC,EAAKC,EAASjD,EAAIkD,GAYlCvC,GAAAj5B,UAAA07B,SAAP,SAAgBtS,EAAUmS,EAA8BjD,EAAkBkD,GAAhD,GAAAD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAjD,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAkD,QAAA,GAAwB,CAAxBA,EAAA,KAEzE/7B,KAAKg8B,YAAYC,SAAStS,EAAM,GAAImS,EAASjD,EAAIkD,GAG3CvC,GAAAj5B,UAAAy7B,UAAP,WAEC,GAAIE,GAAgB,GAAI7C,EAExBr5B,MAAK25B,gBAAgB91B,KAAKq4B,EAE1BA,GAAO1xB,iBAAiBY,EAAYO,cAAe3L,KAAKq6B,4BACxD6B,GAAO1xB,iBAAiBrB,EAAWc,mBAAoBjK,KAAKu6B,4BAC5D2B,GAAO1xB,iBAAiBrB,EAAWa,eAAgBhK,KAAKy6B,yBAGxDyB,GAAOC,kBAAkBn8B,KAAK26B,qBAC9BuB,GAAOE,uBAAuBp8B,KAAK66B,sBAEnC,OAAOqB,GAGD1C,GAAAj5B,UAAA87B,cAAP,SAAqBH,GAArB,GAAArE,GAAA73B,IAEC,IAAI6C,GAAe7C,KAAK25B,gBAAgBzG,QAAQgJ,EAChDl8B,MAAK25B,gBAAgB31B,OAAOnB,EAAO,EAGnC7C,MAAKy5B,uBAAuB51B,KAAKq4B,EACjCl8B,MAAKs8B,cAAgBC,WAAW,WAAO1E,EAAK2E,mBAAoB,KAM1DhD,GAAAj5B,UAAAk8B,SAAP,SAAgB50B,EAAagxB,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,KAE5B,GAAI74B,KAAK08B,gBACR18B,KAAK28B,iBAEN,IAAI9D,GAAM,KACTA,EAAKr4B,EAAU04B,iBAEhB,KAAKl5B,KAAK05B,iBAAiBt5B,eAAey4B,GACzC,MAAO,KAER,OAAO74B,MAAK05B,iBAAiBb,GAAIhxB,GAG3B2xB,GAAAj5B,UAAAq8B,aAAP,WAEC,MAAO58B,MAAK0L,QAON8tB,GAAAj5B,UAAAs8B,SAAP,SAAgBxzB,GAEf,GAAIwvB,EACJ,IAAIiE,EAGJ,IAAI98B,KAAK0L,QAAQwnB,QAAQ7pB,IAAU,EAClC,MAEDyzB,GAAM98B,KAAKy8B,SAASpzB,EAAMxB,KAAMwB,EAAM0zB,eACtClE,GAAKxvB,EAAM0zB,gBAAkBv8B,EAAU04B,iBAEvC,IAAI4D,GAAO,KACV98B,KAAKs7B,UAAU0B,gBAAgB3zB,EAAOyzB,EAAK98B,KAAK05B,iBAAiBb,GAAK74B,KAAKu7B,oBAM5Ev7B,MAAK0L,QAAQ7H,KAAKwF,EAElB,KAAKrJ,KAAK05B,iBAAiBt5B,eAAey4B,GACzC74B,KAAK05B,iBAAiBb,GAAM,GAAIt3B,OAEjCvB,MAAK05B,iBAAiBb,GAAIxvB,EAAMxB,MAAQwB,CAExCA,GAAMmB,iBAAiBrB,EAAWS,OAAQ5J,KAAKi6B,uBAC/C5wB,GAAMmB,iBAAiBrB,EAAWY,wBAAyB/J,KAAKm6B,kCAW1DX,GAAAj5B,UAAA08B,YAAP,SAAmB5zB,EAAcpF,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhC,GAAIi5B,EAEJl9B,MAAKm9B,oBAAoB9zB,EAEzBA,GAAMsB,oBAAoBxB,EAAWS,OAAQ5J,KAAKi6B,uBAClD5wB,GAAMsB,oBAAoBxB,EAAWY,wBAAyB/J,KAAKm6B,iCAEnE+C,GAAMl9B,KAAK0L,QAAQwnB,QAAQ7pB,EAE3B,IAAI6zB,GAAO,EACVl9B,KAAK0L,QAAQ1H,OAAOk5B,EAAK,EAE1B,IAAIj5B,EACHoF,EAAMpF,UAYDu1B,GAAAj5B,UAAA68B,kBAAP,SAAyBv1B,EAAagxB,EAAkB50B,GAAlB,GAAA40B,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAA50B,QAAA,GAAsB,CAAtBA,EAAA,KAEvD,GAAIoF,GAAerJ,KAAKy8B,SAAS50B,EAAMgxB,EAEvC,IAAIxvB,EACHrJ,KAAKi9B,YAAY5zB,EAAOpF,EAEzB,OAAOoF,GASDmwB,GAAAj5B,UAAA88B,gBAAP,SAAuBp5B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEtB,GAAIA,EAAS,CACZ,GAAIoF,EACJ,IAAI5G,GAAazC,KAAK0L,QAAQ9L,MAC9B,KAAK,GAAI+V,GAAW,EAAGA,EAAIlT,EAAKkT,IAAK,CACpCtM,EAAQrJ,KAAK0L,QAAQiK,EACrBtM,GAAMpF,WAIRjE,KAAK0L,QAAQ9L,OAAS,CACtBI,MAAK28B,kBAaCnD,GAAAj5B,UAAA+8B,sBAAP,SAA6BzE,EAAkB50B,GAAlB,GAAA40B,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAA50B,QAAA,GAAsB,CAAtBA,EAAA,KAE9C,GAAIi5B,GAAa,CACjB,IAAI7zB,EACJ,IAAIk0B,EAIJA,GAAav9B,KAAK0L,QAAQiU,QAC1B3f,MAAK0L,QAAQ9L,OAAS,CAEtB,IAAIi5B,GAAM,KACTA,EAAKr4B,EAAU04B,iBAEhB,IAAIz2B,GAAa86B,EAAW39B,MAC5B,KAAK,GAAIK,GAAW,EAAGA,EAAIwC,EAAKxC,IAAK,CACpCoJ,EAAQk0B,EAAWt9B,EAInB,IAAIoJ,EAAM0zB,gBAAkBlE,EAAI,CAC/B,GAAI50B,EACHoF,EAAMpF,SAMPjE,MAAKm9B,oBAAoB9zB,EAAO,WAC1B,CACNrJ,KAAK0L,QAAQwxB,KAAS7zB,GAwBxB,GAAIrJ,KAAK05B,iBAAiBt5B,eAAey4B,SACjC74B,MAAK05B,iBAAiBb,GAGvBW,GAAAj5B,UAAA48B,oBAAR,SAA4B9zB,EAAcm0B,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAEzC,GAAIx9B,KAAK08B,gBACR18B,KAAK28B,iBAEN,IAAI38B,KAAK05B,iBAAiBt5B,eAAeiJ,EAAM0zB,gBAAiB,CAC/D,GAAI/8B,KAAK05B,iBAAiBrwB,EAAM0zB,gBAAgB38B,eAAeiJ,EAAMxB,YAC7D7H,MAAK05B,iBAAiBrwB,EAAM0zB,gBAAgB1zB,EAAMxB,KAE1D,IAAI21B,EAA0B,CAE7B,GAAIxC,EACJ,IAAIyC,GAAgB,IAEpB,KAAKzC,IAAOh7B,MAAK05B,iBAAiBrwB,EAAM0zB,gBAAiB,CACxDU,EAAQ,KACR,OAGD,GAAIA,QACIz9B,MAAK05B,iBAAiBrwB,EAAM0zB,kBAKhCvD,GAAAj5B,UAAAm9B,eAAP,WAEC,GAAIj7B,GAAazC,KAAK25B,gBAAgB/5B,MACtC,KAAK,GAAIP,GAAW,EAAGA,EAAIoD,EAAKpD,IAC/BW,KAAK29B,kBAAkB39B,KAAK25B,gBAAgBt6B,GAE7CW,MAAK25B,gBAAkB,GAAI14B,OAGpBu4B,GAAAj5B,UAAAo8B,gBAAR,WAEC,GAAItzB,EAEJrJ,MAAK05B,mBAEL,IAAIj3B,GAAazC,KAAK0L,QAAQ9L,MAC9B,KAAK,GAAI+V,GAAW,EAAGA,EAAIlT,EAAKkT,IAAK,CACpCtM,EAAQrJ,KAAK0L,QAAQiK,EAErB,KAAK3V,KAAK05B,iBAAiBt5B,eAAeiJ,EAAM0zB,gBAC/C/8B,KAAK05B,iBAAiBrwB,EAAM0zB,kBAE7B/8B,MAAK05B,iBAAiBrwB,EAAM0zB,gBAAgB1zB,EAAMxB,MAAQwB,EAI3DrJ,KAAK08B,gBAAkB,MAOhBlD,GAAAj5B,UAAAq6B,YAAR,SAAoB9vB,GAEnB,GAAI9K,KAAK+K,iBAAiB6B,EAAeI,YAAa,CACrDhN,KAAK6K,cAAcC,EACnB,OAAO,UACD,CACN,MAAO,QAOD0uB,GAAAj5B,UAAAu6B,aAAR,SAAqBhwB,GAEpB,GAAI9K,KAAK+K,iBAAiBc,EAAYG,aAAc,CACnDhM,KAAK6K,cAAcC,EACnB,OAAO,UACD,CACN,MAAO,QAID0uB,GAAAj5B,UAAAm6B,gBAAR,SAAwB5vB,GAGvB,GAAIA,EAAM1B,MAAQD,EAAWa,eAC5BhK,KAAK68B,SAAS/xB,EAAMzB,MAErBrJ,MAAK6K,cAAcC,GAIZ0uB,GAAAj5B,UAAAi6B,mBAAR,SAA2B1vB,GAE1B9K,KAAK6K,cAAcC,GAMZ0uB,GAAAj5B,UAAA+5B,mBAAR,SAA2BxvB,GAE1B,GAAIoxB,GAAyBpxB,EAAMV,MAEnCpK;KAAK6K,cAAcC,EAEnB9K,MAAKq8B,cAAcH,GAGZ1C,GAAAj5B,UAAAi8B,gBAAR,WAEC,GAAIN,EAEJ,OAAOl8B,KAAKy5B,uBAAuB75B,OAAS,EAAG,CAC9Cs8B,EAASl8B,KAAKy5B,uBAAuBmE,KACrC59B,MAAK29B,kBAAkBzB,GAGxB2B,aAAa79B,KAAKs8B,cAClBt8B,MAAKs8B,cAAgB,KAGd9C,GAAAj5B,UAAAo9B,kBAAR,SAA0BzB,GAEzBA,EAAOvxB,oBAAoBS,EAAYO,cAAe3L,KAAKq6B,4BAC3D6B,GAAOvxB,oBAAoBxB,EAAWc,mBAAoBjK,KAAKu6B,4BAC/D2B,GAAOvxB,oBAAoBxB,EAAWa,eAAgBhK,KAAKy6B,yBAC3DyB,GAAO30B,OAIAiyB,GAAAj5B,UAAA25B,cAAR,SAAsBpvB,GAErB,GAAIzB,GAAyByB,EAAMV,MACnC,IAAI0yB,GAAa98B,KAAKy8B,SAASpzB,EAAM0zB,eAAgB1zB,EAAMxB,KAE3D,IAAIi1B,GAAO,KAAM,CAChB98B,KAAKs7B,UAAU0B,gBAAgB3zB,EAAOyzB,EAAK98B,KAAK05B,iBAAiBrwB,EAAM0zB,gBAAiB/8B,KAAKu7B,yBACvF,CACN,GAAIuC,GAAc99B,KAAK05B,iBAAiB5uB,EAAMzB,MAAM0zB,eAEpD,IAAIe,GAAQ,KACX,MAEDA,GAAKhzB,EAAMxB,UAAY,IACvBw0B,GAAKhzB,EAAMzB,MAAMxB,MAAQiD,EAAMzB,OAIzBmwB,GAAAj5B,UAAA65B,wBAAR,SAAgCtvB,GAE/B9K,KAAK6K,cAAcC,EAAMxI,SA9hBZk3B,GAAAyB,YAAqB,GAAI15B,OAgiBxC,OAAAi4B,IAliBiClvB,EAoiBjCxK,GAA4BJ,QAAnB85B,IzDonQNrxB,mCAAmC,mCAAmCc,oCAAoC,oCAAoCoB,yCAAyC,yCAAyCc,qCAAqC,qCAAqCS,qCAAqC,qCAAqCe,wCAAwC,wCAAwC9H,oCAAoC,oCAAoCk5B,+CAA+C,+CAA+CC,6CAA6C,6CAA6CC,2CAA2C,2CAA2CC,iCAAiC,mCAAmCH,gDAAgD,SAASn/B,EAAQkB,EAAOJ,G0D7qRz6B,GAAM05B,GAAoB,WAQzB,QARKA,GAQO7tB,EAAsBkwB,EAAwBC,EAAwBC,GAEjF37B,KAAK0L,QAAUH,CACfvL,MAAKm+B,OAAO1C,EAAiBC,EAAiBC,GAG/Cp6B,OAAAC,eAAW43B,EAAA74B,UAAA,gB1DsqRJkB,I0DtqRP,WAGC,MAASzB,MAAKo+B,KAAOp+B,KAAKq+B,UAAUz+B,OAAUI,KAAKq+B,UAAWr+B,KAAKo+B,MAAS,M1DuqRtEz8B,WAAY,KACZC,aAAc,M0DrqRrBL,QAAAC,eAAW43B,EAAA74B,UAAA,a1DwqRJkB,I0DxqRP,WAEC,MAAOzB,MAAKq+B,UAAUz+B,Q1DyqRhB+B,WAAY,KACZC,aAAc,M0DvqRdw3B,GAAA74B,UAAA+9B,KAAP,WAEC,GAAIA,GAAc,IAElB,IAAIt+B,KAAKo+B,KAAOp+B,KAAKq+B,UAAUz+B,OAC9B0+B,EAAOt+B,KAAKq+B,UAAUr+B,KAAKo+B,KAE5Bp+B,MAAKo+B,MAEL,OAAOE,GAGDlF,GAAA74B,UAAAguB,MAAP,WAECvuB,KAAKo+B,KAAO,EAGNhF,GAAA74B,UAAAg+B,SAAP,SAAgB17B,GAEf7C,KAAKo+B,KAAOv7B,EAGLu2B,GAAA74B,UAAA49B,OAAR,SAAe1C,EAAwBC,EAAwBC,GAE9D,GAAIF,GAAmBC,EAAiB,CAEvC,GAAIwB,EACJ,IAAI7zB,EAGJ6zB,GAAM,CACNl9B,MAAKq+B,UAAY,GAAIp9B,MAErB,IAAIxB,GAAWO,KAAK0L,QAAQ9L,MAE5B,KAAK,GAAI+V,GAAW,EAAGA,EAAIlW,EAAGkW,IAAK,CAElCtM,EAAiBrJ,KAAK0L,QAAQiK,EAG9B,IAAI8lB,GAAmBpyB,EAAM3H,WAAa+5B,EACzC,QAGD,IAAIC,GAAmBryB,EAAM0zB,gBAAkBrB,EAC9C,QAGD,IAAIC,GAAc,OAASA,EAAWtyB,GACrC,QAEDrJ,MAAKq+B,UAAUnB,KAAS7zB,OAsBnB,CACNrJ,KAAKq+B,UAAYr+B,KAAK0L,SAGzB,OAAA0tB,KAE8Bt5B,GAAAJ,QAArB05B,O1DooRHoF,wCAAwC,SAAS5/B,EAAQkB,EAAOJ,G2D5uRtE,GAAO85B,GAAkB56B,EAAY,6CAErC,IAAOy6B,GAAMz6B,EAAa,iC3DkvR1B,I2DvuRM6/B,GAAY,WAMjB,QANKA,MAoBSA,EAAAC,UAAd,SAAwB1D,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,UAEvB,MAAOxB,GAAmBuB,YAAYC,GAMzByD,GAAAvD,aAAd,SAA2BC,GAE1B9B,EAAO6B,aAAaC,GAMPsD,GAAArD,cAAd,SAA4BC,GAE3BhC,EAAO+B,cAAcC,GAQtB95B,QAAAC,eAAkBi9B,EAAA,oB3DguRXh9B,I2DhuRP,WAEC,MAAOg9B,GAAaC,YAAY9E,kB3DiuR1B73B,I2D9tRP,SAAmC6L,GAElC6wB,EAAaC,YAAY9E,iBAAmBhsB,G3D+tRtCjM,WAAY,KACZC,aAAc,M2DxtRrBL,QAAAC,eAAkBi9B,EAAA,sB3DguRXh9B,I2DhuRP,WAEC,MAAOg9B,GAAaC,YAAY3E,oB3DiuR1Bh4B,I2D9tRP,SAAqC6L,GAEpC6wB,EAAaC,YAAY3E,mBAAqBnsB,G3D+tRxCjM,WAAY,KACZC,aAAc,M2DxtRP68B,GAAAjD,eAAd,SAA6BC,EAA+BC,EAA+BC,GAA9D,GAAAF,QAAA,GAA6B,CAA7BA,EAAA,KAA+B,GAAAC,QAAA,GAA6B,CAA7BA,EAAA,KAA+B,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,KAE1F,MAAO8C,GAAaC,YAAYlD,eAAeC,EAAiBC,EAAiBC,GAQpE8C,GAAA7C,KAAd,SAAmBC,EAAgBC,EAA8BjD,EAAkBkD,GAAhD,GAAAD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAjD,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAkD,QAAA,GAAwB,CAAxBA,EAAA,KAElF0C,EAAaC,YAAY9C,KAAKC,EAAKC,EAASjD,EAAIkD,GAQnC0C,GAAAxC,SAAd,SAAuBtS,EAAUmS,EAA8BjD,EAAkBkD,GAAhD,GAAAD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAjD,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAkD,QAAA,GAAwB,CAAxBA,EAAA,KAEhF0C,EAAaC,YAAYzC,SAAStS,EAAMmS,EAASjD,EAAIkD,GAGxC0C,GAAAE,SAAd,WAECF,EAAaC,YAAYhB,iBAGZe,GAAAzC,UAAd,WAEC,MAAOyC,GAAaC,YAAY1C,YAQnByC,GAAAhC,SAAd,SAAuB50B,EAAagxB,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,KAEnC,MAAO4F,GAAaC,YAAYjC,SAAS50B,EAAMgxB,GAQlC4F,GAAA7B,aAAd,WAEC,MAAO6B,GAAaC,YAAY9B,eAMnB6B,GAAAj0B,iBAAd,SAA+BpB,EAAaqB,GAE3Cg0B,EAAaC,YAAYl0B,iBAAiBpB,EAAMqB,GAMnCg0B,GAAA9zB,oBAAd,SAAkCvB,EAAaqB,GAE9Cg0B,EAAaC,YAAY/zB,oBAAoBvB,EAAMqB,GAsBtCg0B,GAAA5B,SAAd,SAAuBxzB,GAEtBo1B,EAAaC,YAAY7B,SAASxzB,GAWrBo1B,GAAAxB,YAAd,SAA0B5zB,EAAcpF,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEvCw6B,EAAaC,YAAYzB,YAAY5zB,EAAOpF,GAY/Bw6B,GAAArB,kBAAd,SAAgCv1B,EAAagxB,EAAkB50B,GAAlB,GAAA40B,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAA50B,QAAA,GAAsB,CAAtBA,EAAA,KAE9D,MAAOw6B,GAAaC,YAAYtB,kBAAkBv1B,EAAMgxB,EAAI50B,GAU/Cw6B,GAAApB,gBAAd,SAA8Bp5B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAE7Bw6B,EAAaC,YAAYrB,gBAAgBp5B,GAQ5Bw6B,GAAAnB,sBAAd,SAAoCzE,EAAkB50B,GAAlB,GAAA40B,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAA50B,QAAA,GAAsB,CAAtBA,EAAA,KAErDw6B,EAAaC,YAAYpB,sBAAsBzE,EAAI50B,GAErD,OAAAw6B,KAEsB3+B,GAAAJ,QAAb++B,I3DqtRNtF,6CAA6C,6CAA6C+E,iCAAiC,mCAAmCF,8CAA8C,SAASp/B,EAAQkB,EAAOJ,GAQvO,G4Dl8RM45B,GAAkB,WAAxB,QAAMA,MAOSA,EAAAsF,UAAmB,UAOnBtF,GAAAU,UAAmB,UAClC,OAAAV,KAE4Bx5B,GAAAJ,QAAnB45B,O5Do8RHuF,gDAAgD,SAASjgC,EAAQkB,EAAOJ,G6D59R9E,GAAO45B,GAAkB16B,EAAY,6CAErC,IAAOqJ,GAAmBrJ,EAAY,6CACtC,IAAOuK,GAAUvK,EAAc,oC7D8+R/B,I6D39RMkgC,GAAoB,WAGzB,QAHKA,MAWEA,EAAAv+B,UAAAy8B,gBAAP,SAAuB+B,EAAqBC,EAAiBC,EAAyBC,GAErF,KAAM,IAAIj3B,GAQJ62B,GAAAv+B,UAAAu5B,OAAP,WAEC,KAAM,IAAI7xB,GAOJ62B,GAAAv+B,UAAA4+B,cAAP,SAAqBtG,EAAWuG,EAA2BJ,EAAiBK,EAAiBJ,EAAyBC,GAErH,GAAII,EACJ,IAAIC,EACJ,IAAIC,EAEJD,GAAUL,IAAe5F,EAAmBU,UAAYqF,EAAWL,CACnEQ,GAASN,IAAe5F,EAAmBU,UAAYgF,EAAWK,CAElEC,GAAkBE,EAAM33B,IAExBo3B,GAAiBM,EAAO13B,MAAQ03B,CAChCN,GAAiBG,GAAsBI,CACvCA,GAAMxG,eAAeoG,EAAoBvG,EAAI,MAE7C2G,GAAM30B,cAAc,GAAI1B,GAAWA,EAAWY,wBAAyBy1B,EAAOF,IAEhF,OAAAR,KAE8Bh/B,GAAAJ,QAArBo/B,I7Dg9RN/2B,6CAA6C,6CAA6CkB,oCAAoC,oCAAoC+0B,6CAA6C,+CAA+CC,4CAA4C,SAASr/B,EAAQkB,EAAOJ,G8DthSrU,GAAO+/B,GAAqB7gC,EAAY,gDACxC,IAAO8gC,GAAsB9gC,EAAY,iDACzC,IAAO+gC,GAAyB/gC,EAAW,oD9DmiS3C,I8DthSM26B,GAAgB,WAsBrB,QAtBKA,GAsBOqG,IAhBErG,EAAAsG,kBAAyC,GAAIF,EAO7CpG,GAAAM,OAA8B,GAAI6F,EAOlCnG,GAAAuG,YAAmC,GAAIL,EAMtD,OAAAlG,KAE0Bz5B,GAAAJ,QAAjB65B,I9DmhSNwG,gDAAgD,gDAAgDC,iDAAiD,iDAAiDC,oDAAoD,sDAAsDF,iDAAiD,SAASnhC,EAAQkB,EAAOJ,GACxX,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+DpkStB,IAAOy+B,GAAoBlgC,EAAY,+CAEvC,IAAOoJ,GAASpJ,EAAc,mCAE9B,IAAM6gC,GAAqB,SAAA/+B,GAASX,EAA9B0/B,EAAqB/+B,EAE1B,SAFK++B,KAIJ/+B,EAAAf,KAAAK,MAGMy/B,EAAAl/B,UAAAy8B,gBAAP,SAAuB+B,EAAqBC,EAAiBC,EAAyBC,GAErF,KAAM,IAAIl3B,GAAU,uGAAyG+2B,EAAamB,eAGpIT,GAAAl/B,UAAAu5B,OAAP,WAEC,MAAO,IAAI2F,GAEb,OAAAA,IAhBoCX,EAkBLh/B,GAAAJ,QAAtB+/B,I/DikSNt3B,mCAAmC,mCAAmC02B,+CAA+C,iDAAiDsB,4CAA4C,SAASvhC,EAAQkB,EAAOJ,SAEvO0gC,uCAAuC,SAASxhC,EAAQkB,EAAOJ,SAE/D2gC,kCAAkC,SAASzhC,EAAQkB,EAAOJ,SAE1D4gC,kCAAkC,SAAS1hC,EAAQkB,EAAOJ,GgE7lShE,GAAM6gC,GAAM,WAAZ,QAAMA,MA0BSA,EAAAC,UAAd,WAEC,GAAIC,GAAM,GAAIx/B,OAAM,GACpB,IAAI4B,GAAe,CAEnB,IAAIxD,EACJ,IAAI8E,EAEJ,KAAK9E,EAAI,EAAGA,EAAI,EAAGA,IAClBohC,EAAI59B,KAAW09B,EAAOG,iBAAiBj8B,KAAK4sB,MAAM5sB,KAAKk8B,SAAS,IAEjE,KAAKthC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvBohC,EAAI59B,KAAW,EAEf,KAAKsB,EAAI,EAAGA,EAAI,EAAGA,IAClBs8B,EAAI59B,KAAW09B,EAAOG,iBAAiBj8B,KAAK4sB,MAAM5sB,KAAKk8B,SAAS,KAGlEF,EAAI59B,KAAW,EAEf,IAAI+9B,IAAc,GAAIC,OAAOC,ShE0lSvB,IgEllSFC,IAAqB,UAAYH,EAAKzvB,SAAS,IAAI6vB,eAAeC,QAAQ,EAE9E,KAAK5hC,EAAI,EAAGA,EAAI,EAAGA,IAClBohC,EAAI59B,KAAWk+B,EAAWG,WAAW7hC,EAEtC,KAAKA,EAAI,EAAGA,EAAI,EAAGA,IAClBohC,EAAI59B,KAAW09B,EAAOG,iBAAiBj8B,KAAK4sB,MAAM5sB,KAAKk8B,SAAS,IAEjE,OAAOQ,QAAOC,aAAaC,MAAM,KAAMZ,GAxDzBF,GAAAG,kBAAoB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GA0FhG,OAAAH,KAEAzgC,GAAgBJ,QAAP6gC,OhEsjSHP,kDAAkD,SAASphC,EAAQkB,EAAOJ,GAChF,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiE7pStB,IAAOy+B,GAAoBlgC,EAAY,+CAGvC,IAAM8gC,GAAsB,SAAAh/B,GAASX,EAA/B2/B,EAAsBh/B,EAE3B,SAFKg/B,KAIJh/B,EAAAf,KAAAK,MAGM0/B,EAAAn/B,UAAAy8B,gBAAP,SAAuB+B,EAAqBC,EAAiBC,EAAyBC,GAGrF,OAGMQ,GAAAn/B,UAAAu5B,OAAP,WAEC,MAAO,IAAI4F,GAEb,OAAAA,IAjBqCZ,EAmBrCh/B,GAAgCJ,QAAvBggC,IjE0pSNb,+CAA+C,iDAAiDyC,yCAAyC,SAAS1iC,EAAQkB,EAAOJ,GkEhrSpK,GAAM6hC,GAAa,WAsBlB,QAtBKA,GAsBOC,EAAoCC,GAApC,GAAAD,QAAA,GAAkC,CAAlCA,EAAA,KAAoC,GAAAC,QAAA,GAA+B,CAA/BA,EAAA,KAE/CzhC,KAAK0hC,qBAAuBF,CAC5BxhC,MAAK2hC,mBAAqBF,GAAqB,EAC/CzhC,MAAK4hC,qBACL5hC,MAAK6hC,gBACL7hC,MAAK8hC,cAAgBP,EAAcQ,UAOpCxgC,OAAAC,eAAW+/B,EAAAhhC,UAAA,uBlEoqSJkB,IkEpqSP,WAEC,MAAOzB,MAAK0hC,sBlEqqSN3/B,IkElqSP,SAA+B6L,GAE9B5N,KAAK0hC,qBAAuB9zB,GlEmqStBjM,WAAY,KACZC,aAAc,MkEzpSrBL,QAAAC,eAAW+/B,EAAAhhC,UAAA,gBlEoqSJkB,IkEpqSP,WAEC,MAAOzB,MAAK8hC,elEqqSN//B,IkElqSP,SAAwBigC,GAEvBhiC,KAAK8hC,cAAgBE,GlEmqSfrgC,WAAY,KACZC,aAAc,MkE7pSrBL,QAAAC,eAAW+/B,EAAAhhC,UAAA,qBlEoqSJkB,IkEpqSP,WAEC,MAAOzB,MAAK2hC,oBlEqqSN5/B,IkElqSP,SAA6B6L,GAE5B5N,KAAK2hC,mBAAqB/zB,GlEmqSpBjM,WAAY,KACZC,aAAc,MkE5pSrBL,QAAAC,eAAW+/B,EAAAhhC,UAAA,yBlEoqSJkB,IkEpqSP,WAEC,MAAOzB,MAAKiiC,kBlEqqSNlgC,IkElqSP,SAAiC6L,GAEhC5N,KAAKiiC,iBAAmBr0B,GlEmqSlBjM,WAAY,KACZC,aAAc,MkE5pSrBL,QAAAC,eAAW+/B,EAAAhhC,UAAA,oBlEoqSJkB,IkEpqSP,WAEC,MAAOzB,MAAKkiC,mBlEqqSNngC,IkElqSP,SAA4B6L,GAE3B5N,KAAKkiC,kBAAoBt0B,GlEmqSnBjM,WAAY,KACZC,aAAc,MkEvpSd2/B,GAAAhhC,UAAA4hC,OAAP,SAAcC,EAAoBC,GAEjCriC,KAAK6hC,cAAcO,GAAeC,EAU5Bd,GAAAhhC,UAAA+hC,aAAP,SAAoBF,EAAoBzY,GAEvC3pB,KAAK4hC,mBAAmBQ,GAAezY,EAOjC4X,GAAAhhC,UAAAgiC,gBAAP,SAAuBl3B,GAEtB,MAAOrL,MAAK4hC,mBAAmBxhC,eAAeiL,GAOxCk2B,GAAAhhC,UAAAiiC,gBAAP,SAAuBn3B,GAEtB,MAAOrL,MAAK4hC,mBAAmBv2B,GAOzBk2B,GAAAhhC,UAAAkiC,mBAAP,SAA0Bp3B,GAEzB,MAAOrL,MAAK6hC,cAAczhC,eAAeiL,GAOnCk2B,GAAAhhC,UAAAmiC,iBAAP,SAAwBN,GAEvB,MAAOpiC,MAAK6hC,cAAcO,GArKbb,GAAAQ,UAAmB,CACnBR,GAAAoB,qBAA8B,CAC9BpB,GAAAqB,oBAA6B,CAqK5C,OAAArB,KAEAzhC,GAAuBJ,QAAd6hC,OlE6pSHsB,sCAAsC,SAASjkC,EAAQkB,EAAOJ,GACpE,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmE70StB,IAAOiK,GAAe1L,EAAa,yCnEi7SnC,ImE30SMkkC,GAAU,SAAApiC,GAASX,EAAnB+iC,EAAUpiC,EAAhB,SAAMoiC,KAAmBpiC,EAAA2gC,MAAArhC,KAAA+iC,WAyBxBxhC,OAAAC,eAAWshC,EAAAviC,UAAA,SnEw0SJkB,ImEx0SP,WAEC,MAAOzB,MAAKgjC,QnEy0SNrhC,WAAY,KACZC,aAAc,MmEn0SrBL,QAAAC,eAAWshC,EAAAviC,UAAA,enE00SJkB,ImE10SP,WAEC,MAAOzB,MAAKijC,cnE20SNthC,WAAY,KACZC,aAAc,MmEh0SrBL,QAAAC,eAAWshC,EAAAviC,UAAA,cnE40SJkB,ImE50SP,WAEC,MAAOzB,MAAKkjC,anE60SNvhC,WAAY,KACZC,aAAc,MmE3zSrBL,QAAAC,eAAWshC,EAAAviC,UAAA,WnE80SJkB,ImE90SP,WAEC,MAAOzB,MAAKyL,UnE+0SN9J,WAAY,KACZC,aAAc,MmEl0SrBL,QAAAC,eAAWshC,EAAAviC,UAAA,enEg1SJkB,ImEh1SP,WAEC,MAAOzB,MAAKmjC,cnEi1SNxhC,WAAY,KACZC,aAAc,MmE7zSrBL,QAAAC,eAAWshC,EAAAviC,UAAA,UnEk1SJkB,ImEl1SP,WAEC,MAAOzB,MAAKojC,SnEm1SNzhC,WAAY,KACZC,aAAc,MmEn0SrBL,QAAAC,eAAWshC,EAAAviC,UAAA,OnEo1SJkB,ImEp1SP,WAEC,MAAOzB,MAAKwL,MnEq1SN7J,WAAY,KACZC,aAAc,MmEp1StB,OAAAkhC,IAnIyBx4B,EAqIzBxK,GAAoBJ,QAAXojC,InEw1SNz4B,yCAAyC,2CAA2C6zB,kCAAkC,SAASt/B,EAAQkB,EAAOJ,GACjJ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoEtkTtB,IAAOgjC,GAASzkC,EAAc,gCAC9B,IAAO0kC,GAAmB1kC,EAAY,0CAEtC,IAAOuK,GAAUvK,EAAc,oCAC/B,IAAO0L,GAAe1L,EAAa,yCACnC,IAAOgO,GAAchO,EAAa,wCAClC,IAAOwM,GAAWxM,EAAc,qCAChC,IAAOiN,GAAWjN,EAAc,qCAChC,IAAO2kC,GAAa3kC,EAAa,wCACjC,IAAO4kC,GAAe5kC,EAAa,0CACnC,IAAO6kC,GAAkB7kC,EAAY,6CAErC,IAAO8kC,GAAkB9kC,EAAY,6CACrC,IAAO+kC,GAAe/kC,EAAa,0CpEwnTnC,IoEzjTMy6B,GAAM,SAAA34B,GAASX,EAAfs5B,EAAM34B,EAyFX,SAzFK24B,GAyFO2I,GAzFb,GAAAnK,GAAA73B,IAyFa,IAAAgiC,QAAA,GAAuB,CAAvBA,EAAA,EAEXthC,EAAAf,KAAAK,KAEAA,MAAK8hC,cAAgBE,CAErBhiC,MAAK4jC,OAAS,GAAI3iC,MAClBjB,MAAK6jC,eAAiB,GAAI5iC,MAC1BjB,MAAK8jC,oBAAsB,GAAI7iC,MAE/BjB,MAAK+jC,gCAAkC,SAACj5B,GAAsB,MAAA+sB,GAAKmM,uBAAuBl5B,GAC1F9K,MAAKikC,yBAA2B,SAACn5B,GAAsB,MAAA+sB,GAAKqM,gBAAgBp5B,GAC5E9K,MAAK66B,sBAAwB,SAAC/vB,GAAsB,MAAA+sB,GAAKiD,aAAahwB,GACtE9K,MAAKmkC,wBAA0B,SAACr5B,GAAyB,MAAA+sB,GAAKuM,eAAet5B,GAC7E9K,MAAK26B,qBAAuB,SAAC7vB,GAAyB,MAAA+sB,GAAK+C,YAAY9vB,GACvE9K,MAAKu6B,4BAA8B,SAACzvB,GAAqB,MAAA+sB,GAAK2C,mBAAmB1vB,GACjF9K,MAAKy6B,yBAA2B,SAAC3vB,GAAqB,MAAA+sB,GAAK6C,gBAAgB5vB,IArE9DuuB,EAAA6B,aAAd,SAA2Ba,GAE1B,GAAI1C,EAAOgL,SAASnR,QAAQ6I,GAAU,EACrC1C,EAAOgL,SAASxgC,KAAKk4B,GAYT1C,GAAA+B,cAAd,SAA4BkJ,GAE3B,IAAK,GAAI3uB,GAAW,EAAGA,EAAI2uB,EAAQ1kC,OAAQ+V,IAC1C0jB,EAAO6B,aAAaoJ,EAAS3uB,IAM/BpU,QAAAC,eAAW63B,EAAA94B,UAAA,kBpEijTJkB,IoEjjTP,WAEC,MAAOzB,MAAKukC,iBpEkjTN5iC,WAAY,KACZC,aAAc,MoEhiTrBL,QAAAC,eAAW63B,EAAA94B,UAAA,cpEmjTJkB,IoEnjTP,WAEC,MAAOzB,MAAKwkC,apEojTN7iC,WAAY,KACZC,aAAc,MoEphTdy3B,GAAA94B,UAAAq7B,KAAP,SAAYC,EAAgBC,EAA8BjD,EAAkBkD,GAAhD,GAAAD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAjD,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAkD,QAAA,GAAwB,CAAxBA,EAAA,KAE3E/7B,KAAKykC,KAAO5I,EAAIxwB,IAAMwwB,EAAIxwB,IAAIq5B,QAAQ,MAAO,IAC7C1kC,MAAKmpB,SAAW2S,CAChB97B,MAAK04B,WAAaG,CAElB74B,MAAKukC,gBAAkB,GAAIb,GAAmB,GAAI7H,EAAK,KAAME,EAAQ,KACrE/7B,MAAK2kC,mBAAmB3kC,KAAKukC,iBAWvBlL,GAAA94B,UAAA07B,SAAP,SAAgBtS,EAAUhiB,EAAWm0B,EAA8BjD,EAAkBkD,GAAhD,GAAAD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAjD,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAkD,QAAA,GAAwB,CAAxBA,EAAA,KAEpF/7B,KAAKykC,KAAO98B,CACZ3H,MAAKmpB,SAAW2S,CAChB97B,MAAK04B,WAAaG,CAElB74B,MAAKukC,gBAAkB,GAAIb,GAAmB/7B,EAAI,KAAMgiB,EAAMoS,EAAQ,KACtE/7B,MAAK2kC,mBAAmB3kC,KAAKukC,iBAQtBlL,GAAA94B,UAAAqkC,aAAR,SAAqB7I,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,EAAA,KAEpB,GAAI/7B,KAAK6kC,mBAAmBC,aAAallC,OAAQ,CAEhD,GAAI0+B,GAA0Bt+B,KAAK6kC,mBAAmBC,aAAalH,KAEnE59B,MAAK4jC,OAAO//B,KAAK7D,KAAK6kC,mBACtB7kC,MAAK2kC,mBAAmBrG,OAElB,IAAIt+B,KAAK6kC,mBAAmB9I,QAAU/7B,KAAK6kC,mBAAmB9I,OAAOgJ,cAAe,CAE1F/kC,KAAK6kC,mBAAmB9I,OAAOiJ,iBAC/BhlC,MAAK4jC,OAAOhG,UAEN,IAAI59B,KAAK4jC,OAAOhkC,OAAQ,CAE9B,GAAI64B,GAA0Bz4B,KAAK6kC,kBAEnC7kC,MAAK6kC,mBAAqB7kC,KAAK4jC,OAAOhG,KAEtC,IAAInF,EAAKwM,UACRxM,EAAKyM,SAENllC,MAAK4kC,aAAa7I,OAEZ,CACN/7B,KAAK6K,cAAc,GAAIO,GAAYA,EAAYO,cAAe3L,KAAKykC,KAAMzkC,KAAKukC,gBAAgBxI,OAAOzwB,QAAStL,KAAKukC,gBAAgBh5B,UAQ7H8tB,GAAA94B,UAAAokC,mBAAR,SAA2B77B,GAE1B,GAAI6gB,EAEJ,IAAI3pB,KAAKmpB,UAAYnpB,KAAKmpB,SAAS6Y,cAAgB,EAClDhiC,KAAK8hC,cAAgB9hC,KAAKmpB,SAAS6Y,YAEpChiC,MAAK6kC,mBAAqB/7B,CAE1BA,GAAWq8B,SAAW,GAAI9B,EAE1BrjC,MAAKolC,kBAAkBt8B,EAAWq8B,SAGlCxb,GAAO7gB,EAAW6gB,IAElB,IAAI3pB,KAAKmpB,UAAYrgB,EAAWu8B,SAAWrlC,KAAKmpB,SAASoZ,gBAAgBz5B,EAAWu8B,QAAQh6B,KAC3Fse,EAAO3pB,KAAKmpB,SAASqZ,gBAAgB15B,EAAWu8B,QAAQh6B,IAEzD,IAAIse,EAAM,CACT,GAAIA,EAAKrpB,cAAgBglC,SACxB3b,EAAO,GAAIA,EAEZ7gB,GAAWy8B,UAAU5b,EAErB,IAAI7gB,EAAW08B,kBAAmB,CAGjC18B,EAAWo8B,SAGXllC,MAAK4kC,mBAEC,CACN5kC,KAAKylC,gBAAgB38B,QAGhB,CAENA,EAAWu8B,QAAQh6B,IAAMrL,KAAK0lC,qBAAqB58B,EAEnD,IAAIA,EAAW08B,kBAAmB,CAEjC18B,EAAWq8B,SAASQ,WAAarC,EAAoBsC,WAC/C,CAEN,IAAK98B,EAAWizB,OACfjzB,EAAW+8B,YAAY7lC,KAAK8lC,oBAAoBh9B,EAAWu8B,QAAQh6B,KAEpE,IAAIvC,EAAWizB,OAAQ,CACtBjzB,EAAWq8B,SAASQ,WAAa78B,EAAWizB,OAAO4J,eAC7C,CAIN78B,EAAWq8B,SAASQ,WAAarC,EAAoBsC,QAIvD98B,EAAWq8B,SAASvJ,KAAK9yB,EAAWu8B,UAI9BhM,GAAA94B,UAAAwlC,QAAR,SAAgBC,EAAaC,GAE5B,GAAIA,EAAIC,OAAO,IAAM,KAAOD,EAAIC,OAAO,IAAM,KAC5CD,EAAMA,EAAIhF,OAAO,EAElB,IAAIgF,EAAIC,OAAO,IAAM,IACpBD,EAAMA,EAAIhF,OAAO,EAElB,IAAI+E,EAAKpmC,QAAU,EAClB,MAAOqmC,EAER,IAAID,EAAKE,OAAOF,EAAKpmC,OAAS,IAAM,KAAOomC,EAAKE,OAAOF,EAAKpmC,OAAS,IAAM,KAC1EomC,EAAOA,EAAK/E,OAAO,EAAG+E,EAAKpmC,OAAS,EAErC,OAAOomC,GAAKrmB,OAAO,IAAKsmB,GAIjB5M,GAAA94B,UAAAmlC,qBAAR,SAA6B58B,GAE5B,GAAIq9B,EACJ,IAAIH,EACJ,IAAI36B,GAAavC,EAAWu8B,QAAQh6B,GAGpC,IAAIrL,KAAKmpB,UAAYnpB,KAAKmpB,SAASsZ,mBAAmBp3B,GACrD,MAAOrL,MAAKmpB,SAASuZ,iBAAiBr3B,EAKvC,IAAIA,GAAOrL,KAAKykC,KACf,MAAOp5B,EAKR86B,GAAY,GAAIC,QAAO,sBAEvB,IAAI/6B,EAAI66B,OAAO,IAAM,IAAK,CACzB,GAAIlmC,KAAKmpB,UAAYnpB,KAAKmpB,SAASkd,sBAClC,MAAOrmC,MAAK+lC,QAAQ/lC,KAAKmpB,SAASsY,kBAAmBp2B,OACrD,OAAOA,OACF,IAAI86B,EAAUG,KAAKj7B,GAAM,CAG/B,GAAIrL,KAAKmpB,UAAYnpB,KAAKmpB,SAASod,iBAAkB,CAEpD,GAAIC,GAAyBn7B,EAAIq5B,QAASyB,EAAY,GACtD,OAAOnmC,MAAK+lC,QAAQ/lC,KAAKmpB,SAASsY,kBAA4B+E,IAMhE,GAAIxmC,KAAKmpB,UAAYnpB,KAAKmpB,SAASsY,kBAAmB,CACrDuE,EAAOhmC,KAAKmpB,SAASsY,iBACrB,OAAOzhC,MAAK+lC,QAAQC,EAAM36B,OACpB,CACN26B,EAAOhmC,KAAKykC,KAAK5S,UAAU,EAAG7xB,KAAKykC,KAAK3S,YAAY,KAAO,EAC3D,OAAO9xB,MAAK+lC,QAAQC,EAAM36B,IAIpBguB,GAAA94B,UAAAkmC,2BAAR,WAEC,IAAKzmC,KAAK6kC,mBACT,MAED,IAAI6B,GAAqB1mC,KAAK6kC,mBAAmB9I,OAAO+I,YACxD,IAAIzlC,GAAUoD,EAAaikC,EAAmB9mC,MAE9C,KAAKP,EAAI,EAAGA,EAAIoD,EAAKpD,IACpBW,KAAK6kC,mBAAmBC,aAAazlC,GAAKqnC,EAAmBrnC,EAI9DqnC,GAAmB9mC,OAAS,CAE5BI,MAAK4jC,OAAO//B,KAAK7D,KAAK6kC,mBAEtB7kC,MAAK4kC,eAGEvL,GAAA94B,UAAAomC,0BAAR,WAEC3mC,KAAK6kC,mBAAmBI,UAAY,IAIpC,IAAIjlC,KAAK6kC,mBAAmB9I,QAAU/7B,KAAK6kC,mBAAmB9I,OAAO+I,aAAallC,UAAYI,KAAKmpB,UAAYnpB,KAAKmpB,SAASqY,qBAC5HxhC,KAAKymC,iCAELzmC,MAAK4kC,eAOCvL,GAAA94B,UAAAq6B,YAAR,SAAoB9vB,GAEnB,GAAI87B,EACJ,IAAIC,GAAwB7mC,KAAK6kC,oBAAsB7kC,KAAKukC,eAC5D,IAAIrI,GAAmBpxB,EAAM+B,SAE7B7M,MAAK8mC,qBAAqB5K,EAE1B,IAAIl8B,KAAK+K,iBAAiB6B,EAAeI,YAAa,CACrDhN,KAAK6K,cAAcC,EACnB87B,GAAU,SACJ,CpEi/SG,GoE/+SLvnC,GAAUoD,EAAazC,KAAK6jC,eAAejkC,MAC/C,KAAKP,EAAI,EAAGA,EAAIoD,EAAKpD,IACpB,IAAKunC,EACJA,EAAU5mC,KAAK6jC,eAAexkC,GAAGyL,GAGpC,GAAI87B,EAAS,CAGZ,GAAIC,EAAc,CAEjB7mC,KAAK6kC,mBAAmBkC,gBACxB/mC,MAAK4kC,mBAEC,CAIN5kC,KAAKiE,SACL,aAEK,CAIN,KAAM,IAAI1E,QAQJ85B,GAAA94B,UAAAu6B,aAAR,SAAqBhwB,GAEpB,GAAI87B,EAEJ,IAAIC,GAAwB7mC,KAAK6kC,oBAAsB7kC,KAAKukC,eAE5D,IAAIrI,GAA8BpxB,EAAMV,MAExCpK,MAAK8mC,qBAAqB5K,EAE1B,IAAIl8B,KAAK+K,iBAAiBc,EAAYG,aAAc,CACnDhM,KAAK6K,cAAcC,EACnB87B,GAAU,SACJ,CpEw+SG,GoEr+SLvnC,GAAUoD,EAAazC,KAAK8jC,oBAAoBlkC,MAEpD,KAAKP,EAAI,EAAGA,EAAIoD,EAAKpD,IACpB,IAAKunC,EACJA,EAAU5mC,KAAK8jC,oBAAoBzkC,GAAGyL,GAGzC,GAAI87B,EAAS,CACZ5mC,KAAK4kC,mBACC,CAGN,KAAM,IAAIrlC,OAAMuL,EAAM5C,UAIhBmxB,GAAA94B,UAAAm6B,gBAAR,SAAwB5vB,GAKvB,GAAI9K,KAAK6kC,mBACR7kC,KAAK6kC,mBAAmBt5B,OAAO1H,KAAKiH,EAAMzB,MAE3CyB,GAAMzB,MAAM2vB,eAAeluB,EAAMzB,MAAMxB,KAAM7H,KAAK04B,WAElD,KAAK14B,KAAK6kC,mBAAmBmC,mBAC5BhnC,KAAK6K,cAAcC,GAGbuuB,GAAA94B,UAAAyjC,uBAAR,SAA+Bl5B,GAE9B,GAAIixB,GAAiCjxB,EAAMV,MAE3C,IAAIpK,KAAKmpB,WAAanpB,KAAKmpB,SAASqY,oBACnCzF,EAAOiJ,sBAEPhlC,MAAKymC,6BAOCpN,GAAA94B,UAAA6jC,eAAR,SAAuBt5B,GAEtB,GAAIoxB,GAAmBpxB,EAAM+B,SAE7B7M,MAAK8mC,qBAAqB5K,EAG1Bl8B,MAAK6kC,mBAAmBU,UAAUrJ,EAAOvS,KAEzC,IAAI3pB,KAAK6kC,mBAAmBW,kBAAmB,CAE9CxlC,KAAK2mC,gCACC,CACN3mC,KAAKylC,gBAAgBzlC,KAAK6kC,qBAOpBxL,GAAA94B,UAAA2jC,gBAAR,SAAwBp5B,GAEvB,GAAIixB,GAAiCjxB,EAAMV,MAE3CpK,MAAK2mC,2BAEL5K,GAAOpxB,oBAAoBkB,EAAYI,uBAAwBjM,KAAK+jC,gCACpEhI,GAAOpxB,oBAAoBkB,EAAYE,eAAgB/L,KAAKikC,yBAC5DlI,GAAOpxB,oBAAoBkB,EAAYG,YAAahM,KAAK66B,sBACzDkB,GAAOpxB,oBAAoBxB,EAAWc,mBAAoBjK,KAAKu6B,4BAC/DwB,GAAOpxB,oBAAoBxB,EAAWa,eAAgBhK,KAAKy6B,0BAOpDpB,GAAA94B,UAAAi6B,mBAAR,SAA2B1vB,GAE1BA,EAAMzB,MAAMxB,KAAO7H,KAAK6kC,mBAAmBoC,YAAYn8B,EAAMzB,MAE7DrJ,MAAK6K,cAAcC,GAGZuuB,GAAA94B,UAAA6kC,kBAAR,SAA0BlJ,GAEzBA,EAAO1xB,iBAAiBoC,EAAejB,cAAe3L,KAAKmkC,wBAC3DjI,GAAO1xB,iBAAiBoC,EAAeI,WAAYhN,KAAK26B,sBAGjDtB,GAAA94B,UAAAumC,qBAAR,SAA6B5K,GAE5BA,EAAOvxB,oBAAoBiC,EAAejB,cAAe3L,KAAKmkC,wBAC9DjI,GAAOvxB,oBAAoBiC,EAAeI,WAAYhN,KAAK26B,sBAGrDtB,GAAA94B,UAAAgH,KAAP,WAECvH,KAAKiE,UAGEo1B,GAAA94B,UAAA0D,QAAR,WAECjE,KAAK6jC,eAAiB,IACtB7jC,MAAK8jC,oBAAsB,IAC3B9jC,MAAKmpB,SAAW,IAChBnpB,MAAK4jC,OAAS,IAEd,IAAI5jC,KAAK6kC,oBAAsB7kC,KAAK6kC,mBAAmBM,SACtDnlC,KAAK8mC,qBAAqB9mC,KAAK6kC,mBAAmBM,SAEnDnlC,MAAK6kC,mBAAqB,KAgBpBxL,GAAA94B,UAAA67B,uBAAP,SAA8B8K,GAE7B,GAAIlnC,KAAK8jC,oBAAoB5Q,QAAQgU,GAAW,EAC/ClnC,KAAK8jC,oBAAoBjgC,KAAKqjC,GAGzB7N,GAAA94B,UAAA47B,kBAAP,SAAyB+K,GAExB,GAAIlnC,KAAK6jC,eAAe3Q,QAAQgU,GAAW,EAC1ClnC,KAAK6jC,eAAehgC,KAAKqjC,GAUnB7N,GAAA94B,UAAA4mC,kBAAR,SAA0Bxd,GAEzB,GAAIlnB,GAAa42B,EAAOgL,SAASzkC,MAGjC,KAAK,GAAIP,GAAWoD,EAAM,EAAGpD,GAAK,EAAGA,IACpC,GAAIg6B,EAAOgL,SAAShlC,GAAG+nC,aAAazd,GACnC,MAAO,IAAI0P,GAAOgL,SAAShlC,EAE7B,OAAO,MASAg6B,GAAA94B,UAAAklC,gBAAR,SAAwB38B,GAEvB,GAAIizB,GAAoBjzB,EAAWizB,MAInC,KAAKA,EACJjzB,EAAW+8B,YAAY9J,EAAS/7B,KAAKmnC,kBAAkBr+B,EAAW6gB,MAEnE,IAAIoS,EAAQ,CACXA,EAAOvxB,iBAAiBqB,EAAYI,uBAAwBjM,KAAK+jC,gCACjEhI,GAAOvxB,iBAAiBqB,EAAYE,eAAgB/L,KAAKikC,yBACzDlI,GAAOvxB,iBAAiBqB,EAAYG,YAAahM,KAAK66B,sBACtDkB,GAAOvxB,iBAAiBrB,EAAWc,mBAAoBjK,KAAKu6B,4BAC5DwB,GAAOvxB,iBAAiBrB,EAAWa,eAAgBhK,KAAKy6B,yBAExD,IAAI3xB,EAAWu8B,SAAWv8B,EAAWu8B,QAAQh6B,IAC5C0wB,EAAOsL,WAAav+B,EAAWu8B,QAAQh6B,GAExC0wB,GAAOiG,aAAehiC,KAAK8hC,aAE3B/F,GAAOuL,WAAWx+B,EAAW6gB,UAEvB,CACN,GAAIid,EACJ,IAAI1+B,GAAiB,6FACrB,IAAI4C,GAAoB,GAAIe,GAAYA,EAAYG,YAAa9D,EACjE,IAAIlI,KAAK+K,iBAAiBc,EAAYG,aAAc,CACnDhM,KAAK6K,cAAcC,EACnB87B,GAAU,SACJ,CpEs7SM,GoEn7SRvnC,GAAUoD,EAAazC,KAAK8jC,oBAAoBlkC,MAEpD,KAAKP,EAAI,EAAGA,EAAIoD,EAAKpD,IACpB,IAAKunC,EACJA,EAAoB5mC,KAAK8jC,oBAAoBzkC,GAAGyL,GAGnD,GAAI87B,EAAS,CACZ5mC,KAAK4kC,mBACC,CAGN,KAAM,IAAIrlC,OAAM2I,KASXmxB,GAAA94B,UAAAulC,oBAAR,SAA4Bz6B,GpEi7SrB,GoE96SF26B,GAAe36B,EAAI6nB,QAAQ,KAAO,EAAI7nB,EAAI0mB,MAAM,KAAK,GAAK1mB,CAC9D,IAAIk8B,GAAuBvB,EAAK/E,OAAO+E,EAAKlU,YAAY,KAAO,GAAG0V,aAElE,IAAI/kC,GAAa42B,EAAOgL,SAASzkC,MAGjC,KAAK,GAAIP,GAAWoD,EAAM,EAAGpD,GAAK,EAAGA,IAAK,CACzC,GAAI87B,GAAkB9B,EAAOgL,SAAShlC,EACtC,IAAI87B,EAAYsM,aAAaF,GAC5B,MAAO,IAAIpM,GAGb,MAAO,MA7mBO9B,GAAAgL,SAAsB,GAAIpjC,OAAWsiC,EAAeC,EAAiBC,EAAoBE,EA+mBzG,OAAAtK,IAvoBqB/uB,EAyoBrBxK,GAAgBJ,QAAP25B,IpE86SNpwB,oCAAoC,oCAAoCoB,yCAAyC,yCAAyCc,qCAAqC,qCAAqCS,qCAAqC,qCAAqCe,wCAAwC,wCAAwC+6B,gCAAgC,gCAAgCC,0CAA0C,0CAA0CC,wCAAwC,wCAAwCC,0CAA0C,0CAA0CC,6CAA6C,6CAA6CC,6CAA6C,6CAA6CC,0CAA0C,4CAA4C/H,qDAAqD,SAASrhC,EAAQkB,EAAOJ,GAChhC,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqE1oUtB,IAAOy+B,GAAoBlgC,EAAY,+CAGvC,IAAM+gC,GAAyB,SAAAj/B,GAASX,EAAlC4/B,EAAyBj/B,EAK9B,SALKi/B,GAKOsI,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,IAEXvnC,EAAAf,KAAAK,KAEAA,MAAKkoC,WAAaD,CAClBjoC,MAAKmoC,gBAGCxI,EAAAp/B,UAAAy8B,gBAAP,SAAuB+B,EAAqBC,EAAiBC,EAAyBC,GAErF,GAAIkJ,EACJ,IAAIC,EACJ,IAAIrC,EACJ,IAAIsC,EAEJF,GAAOrJ,EAAal3B,IAEpB,IAAIugC,EAAKlV,QAAQlzB,KAAKkoC,aAAe,EAAG,CAIvClC,EAAOoC,EAAKvW,UAAU,EAAGuW,EAAKtW,YAAY9xB,KAAKkoC,YAC/CI,GAASnW,SAASiW,EAAKvW,UAAUmU,EAAKpmC,OAAS,GAE/C,IAAI2oC,MAAMD,GAAS,CAClBtC,EAAOoC,CACPE,GAAS,OAGJ,CACNtC,EAAOoC,CACPE,GAAS,EAGV,GAAIA,GAAU,GAAKtoC,KAAKmoC,aAAa/nC,eAAe4lC,GAAO,CAE1DsC,EAAStoC,KAAKmoC,aAAanC,GAM5B,EAAG,CAEFsC,GAEAD,GAAWrC,EAAKrmB,OAAO3f,KAAKkoC,WAAYI,EAAOn3B,kBAEvC8tB,EAAiB7+B,eAAeioC,GAEzCroC,MAAKmoC,aAAcnC,GAASsC,CAC5BtoC,MAAKm/B,cAAcH,EAASjC,eAAgBsL,EAAUrJ,EAAUD,EAAcE,EAAkBC,GAI1FS,GAAAp/B,UAAAu5B,OAAP,WAEC,MAAO,IAAI6F,GAA0B3/B,KAAKkoC,YAE5C,OAAAvI,IAhEwCb,EAkExCh/B,GAAmCJ,QAA1BigC,IrEsnUNd,+CAA+C,iDAAiD2J,yCAAyC,SAAS5pC,EAAQkB,EAAOJ,GsE1rUpK,GAAM+oC,GAAY,WA+CjB,QA/CKA,KAAN,GAAA5Q,GAAA73B,IAMSA,MAAA0oC,WAAqB,KACrB1oC,MAAA2oC,WAAqB,KA0C5B3oC,MAAK4oC,UAAYH,EAAaG,YAAcH,EAAaG,UAAY,IAAKC,OAAO,iBAAmBA,OAAO,uBAE3G7oC,MAAK8oC,UAAY9oC,KAAK4oC,UAAUG,YAChC/oC,MAAK8oC,UAAY9oC,KAAK4oC,UAAUG,YAChC/oC,MAAK8oC,UAAUE,QAAQhpC,KAAK4oC,UAAUt2B,YAEtCtS,MAAKipC,OAAS,GAAIC,MAClBlpC,MAAKipC,OAAOE,QAAU,SAACr+B,GAAU,MAAA+sB,GAAKuR,SAASt+B,GAC/C9K,MAAKipC,OAAO,eAAiB,WAE7B,IAAI72B,GAASpS,KAAK4oC,UAAUS,yBAAyBrpC,KAAKipC,OAC1D72B,GAAO42B,QAAQhpC,KAAK8oC,WA5CrBvnC,OAAAC,eAAWinC,EAAAloC,UAAA,etE2rUJkB,IsE3rUP,WAEC,MAAOzB,MAAKipC,OAAO5hC,atE4rUb1F,WAAY,KACZC,aAAc,MsEzrUrBL,QAAAC,eAAWinC,EAAAloC,UAAA,UtE4rUJkB,IsE5rUP,WAEC,MAAOzB,MAAK8oC,UAAUQ,KAAKtnC,OtE6rUrBD,IsE1rUP,SAAkBC,GAEjBhC,KAAK8oC,UAAUQ,KAAKtnC,MAAQA,GtE2rUtBL,WAAY,KACZC,aAAc,MsEzrUd6mC,GAAAloC,UAAAgpC,UAAP,WAEC,MAAOvpC,MAAK0oC,WAGND,GAAAloC,UAAAipC,UAAP,WAEC,MAAOxpC,MAAK2oC,WAGNF,GAAAloC,UAAAkpC,WAAP,WAEC,MAAO,OAmBDhB,GAAAloC,UAAAiH,KAAP,SAAY6D,EAAYpI,EAAmBwE,GAAnB,GAAAxE,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAwE,QAAA,GAAoB,CAApBA,EAAA,MAE1CzH,KAAK0oC,WAAa,IAClB1oC,MAAK2oC,WAAalhC,CAElBzH,MAAKipC,OAAOthB,IAAMtc,CAClBrL,MAAKipC,OAAOxhC,KAAOA,CACnBzH,MAAKipC,OAAO5hC,YAAcpE,CAC1BjD,MAAKipC,OAAOzhC,OAGNihC,GAAAloC,UAAAgH,KAAP,WAECvH,KAAKipC,OAAOS,OACZ1pC,MAAK0oC,WAAa,KAClB1oC,MAAK2oC,WAAa,MAGXF,GAAAloC,UAAA6oC,SAAR,SAAiBt+B,GAEhB9K,KAAKuH,OAjFQkhC,GAAAkB,YAAqB,EAErBlB,GAAAmB,UAAgC,GAAI3oC,MAiFnD,OAAAwnC,KAEsB3oC,GAAAJ,QAAb+oC,OtEqqUH3gC,yCAAyC,SAASlJ,EAAQkB,EAAOJ,GuE7vUvE,GAAOmqC,GAAqBjrC,EAAW,iDACvC,IAAOkrC,GAAelrC,EAAa,2CAInC,IAAMoI,GAAY,WAAlB,QAAMA,MAESA,EAAAU,WAAd,SAAyBpG,GvE8vUlB,GuE3vUFyoC,GAAmCzoC,EAAa,IAAQuoC,EAAwBC,CAEpF,IAAIzqC,GAAW,CACf,OAAM0qC,EAAaH,UAAUvqC,IAAM0qC,EAAaH,UAAUvqC,GAAGkqC,YAC5DlqC,GAED,IAAIA,GAAK0qC,EAAaJ,YAAa,CvE2vUzB,GuEzvULK,EACJ,IAAIvnC,GAAasnC,EAAaH,UAAUhqC,MACxC,KAAK,GAAIuE,GAAW,EAAGA,EAAI1B,EAAK0B,IAAK,CACpC6lC,EAAUD,EAAaH,UAAUzlC,EACjC,KAAK6lC,EAAQR,cAAgBQ,EAAQP,aAAc,CAClDM,EAAaH,UAAU/lC,KAAKkmC,EAAaH,UAAU5lC,OAAOG,EAAG,GAAG,GAChE6lC,GAAQziC,MACR,OAAOyiC,IAKT,MAAO,MAGR,MAAOD,GAAaH,UAAUvqC,KAAO0qC,EAAaH,UAAUvqC,GAAK,GAAI0qC,IAIvE,OAAA/iC,KAEAlH,GAAsBJ,QAAbsH,IvEuvUNijC,iDAAiD,iDAAiDC,2CAA2C,6CAA6CC,8CAA8C,SAASvrC,EAAQkB,EAAOJ,GwE9xUnQ,GAAO0qC,GAAWxrC,EAAc,sCAEhC,IAAMyrC,GAAiB,WAyDtB,QAzDKA,KAAN,GAAAxS,GAAA73B,IAQSA,MAAA0oC,WAAqB,KACrB1oC,MAAA2oC,WAAqB,KAErB3oC,MAAAsqC,WAAoB,CAgD3BtqC,MAAKipC,OAAS,GAAIC,MAClBlpC,MAAKipC,OAAOsB,aAAe,SAACz/B,GAAU,MAAA+sB,GAAK2S,cAAc1/B,IA5C1DvJ,OAAAC,eAAW6oC,EAAA9pC,UAAA,YxEwxUJkB,IwExxUP,WAEC,MAAOzB,MAAKyqC,WxEyxUN9oC,WAAY,KACZC,aAAc,MwEvxUrBL,QAAAC,eAAW6oC,EAAA9pC,UAAA,exE0xUJkB,IwE1xUP,WAEC,MAAOzB,MAAKipC,OAAO5hC,YAAcrH,KAAKsqC,YxE2xUhC3oC,WAAY,KACZC,aAAc,MwExxUrBL,QAAAC,eAAW6oC,EAAA9pC,UAAA,UxE2xUJkB,IwE3xUP,WAEC,MAAOzB,MAAKkH,SxE4xUNnF,IwEzxUP,SAAkBC,GAEjB,GAAIhC,KAAKkH,SAAWlF,EACnB,MAEDhC,MAAKkH,QAAUlF,CAEfhC,MAAKipC,OAAO7hC,OAASpH,KAAKkH,SxEwxUpBvF,WAAY,KACZC,aAAc,MwEtxUdyoC,GAAA9pC,UAAAgpC,UAAP,WAEC,MAAOvpC,MAAK0oC,WAGN2B,GAAA9pC,UAAAipC,UAAP,WAEC,MAAOxpC,MAAK2oC,WAGN0B,GAAA9pC,UAAAkpC,WAAP,WAEC,MAAO,OASDY,GAAA9pC,UAAAiH,KAAP,SAAYrF,EAAoBc,EAAmBwE,EAAsBE,GAAzC,GAAA1E,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAwE,QAAA,GAAoB,CAApBA,EAAA,MAAsB,GAAAE,QAAA,GAAa,CAAbA,EAAA,EAExE3H,KAAK0oC,WAAa,IAClB1oC,MAAK2oC,WAAalhC,CAElBzH,MAAKipC,OAAOthB,IAAM0iB,EAAkBK,aAAa/iC,KAAQ0iC,EAAkBK,aAAa/iC,GAAMyiC,EAAYO,oBAAoBxoC,EAAQ,aACtInC,MAAKipC,OAAOxhC,KAAOzH,KAAK2oC,UAExB3oC,MAAKipC,OAAO5hC,YAAcpE,CAC1BjD,MAAKipC,OAAOzhC,OAGN6iC,GAAA9pC,UAAAgH,KAAP,WAECvH,KAAKipC,OAAOS,OACZ1pC,MAAK0oC,WAAa,KAClB1oC,MAAK2oC,WAAa,MAGX0B,GAAA9pC,UAAAiqC,cAAR,SAAsB1/B,GAGrB,IAAK9K,KAAK2oC,YAAc3oC,KAAKyqC,UAAYzqC,KAAKipC,OAAO5hC,YAAcrH,KAAKsqC,WAAa,GACpFtqC,KAAKuH,OApFO8iC,GAAAV,YAAqB,CAErBU,GAAAT,UAAqC,GAAI3oC,MAEzCopC,GAAAK,aAAsB,GAAInpC,OAkFzC,OAAA8oC,KAEAvqC,GAA2BJ,QAAlB2qC,IxE6wUNO,sCAAsC,wCAAwCC,+CAA+C,SAASjsC,EAAQkB,EAAOJ,SAElJorC,0CAA0C,SAASlsC,EAAQkB,EAAOJ,SAElEuqC,kDAAkD,SAASrrC,EAAQkB,EAAOJ,GyE52UhF,GAAMmqC,GAAqB,WAkE1B,QAlEKA,KAAN,GAAAhS,GAAA73B,IAUSA,MAAA0oC,WAAqB,KACrB1oC,MAAA2oC,WAAqB,KAMrB3oC,MAAAsqC,WAAoB,CAmD3BtqC,MAAK+qC,oBAAsB,SAACjgC,GAAU,MAAA+sB,GAAKmT,YAAYlgC,GACvD9K,MAAKirC,mBAAqB,SAACngC,GAAU,MAAA+sB,GAAKqT,WAAWpgC,GAErD9K,MAAKipC,OAAS,GAAIC,MAClBlpC,MAAKipC,OAAOsB,aAAe,SAACz/B,GAAU,MAAA+sB,GAAK2S,cAAc1/B,GAEzD9K,MAAKmrC,gBAjDN5pC,OAAAC,eAAWqoC,EAAAtpC,UAAA,YzEi2UJkB,IyEj2UP,WAEC,MAAOzB,MAAKyqC,WzEk2UN9oC,WAAY,KACZC,aAAc,MyEh2UrBL,QAAAC,eAAWqoC,EAAAtpC,UAAA,ezEm2UJkB,IyEn2UP,WAEC,MAAOzB,MAAKipC,OAAO5hC,YAAcrH,KAAKsqC,YzEo2UhC3oC,WAAY,KACZC,aAAc,MyEj2UrBL,QAAAC,eAAWqoC,EAAAtpC,UAAA,UzEo2UJkB,IyEp2UP,WAEC,MAAOzB,MAAKkH,SzEq2UNnF,IyEl2UP,SAAkBC,GAEjB,GAAIhC,KAAKkH,SAAWlF,EACnB,MAEDhC,MAAKkH,QAAUlF,CAEfhC,MAAKipC,OAAO7hC,OAASpH,KAAKkH,SzEi2UpBvF,WAAY,KACZC,aAAc,MyE/1UdioC,GAAAtpC,UAAAgpC,UAAP,WAEC,MAAOvpC,MAAK0oC,WAGNmB,GAAAtpC,UAAAipC,UAAP,WAEC,MAAOxpC,MAAK2oC,WAGNkB,GAAAtpC,UAAAkpC,WAAP,WAEC,MAAO,OAeDI,GAAAtpC,UAAAiH,KAAP,SAAYrF,EAAoBc,EAAmBwE,GAAnB,GAAAxE,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAwE,QAAA,GAAoB,CAApBA,EAAA,MAElDzH,KAAK0oC,WAAa,IAElB,IAAI1oC,KAAK2oC,YAAc3oC,KAAK2oC,YAAclhC,EAAM,CAC/CzH,KAAK2oC,WAAalhC,CAClBzH,MAAKorC,aAAe,KAGrB,GAAIprC,KAAKorC,aACRprC,KAAKmrC,eAENnrC,MAAKkB,QAAUiB,CACfnC,MAAKqrC,QAAUpoC,CAEf,KAAKjD,KAAKsrC,aAAetrC,KAAKurC,WAC7BvrC,KAAKwrC,eAGA3B,GAAAtpC,UAAAgH,KAAP,WAECvH,KAAKipC,OAAOS,OACZ1pC,MAAK0oC,WAAa,KAClB1oC,MAAK2oC,WAAa,MAGXkB,GAAAtpC,UAAAyqC,YAAR,SAAoBlgC,GAEnB9K,KAAKurC,WAAa,KAGlB,IAAIvrC,KAAKyrC,aAAaC,oBAAoB9rC,OAAQ,CACjD+rC,QAAQrhB,IAAI,sCACZ,QAGDtqB,KAAK4rC,cAAgB5rC,KAAKyrC,aAAaI,gBAAgB,aACvD7rC,MAAK4rC,cAAcphC,iBAAiB,YAAaxK,KAAKirC,mBAEtD,IAAIjrC,KAAK0oC,WACR1oC,KAAKwrC,eAGC3B,GAAAtpC,UAAAirC,aAAR,WAECxrC,KAAKsrC,WAAa,IAElBtrC,MAAKsqC,WAAatqC,KAAK4rC,cAAcE,eACrC9rC,MAAK4rC,cAAcG,aAAa/rC,KAAKkB,SAG9B2oC,GAAAtpC,UAAA2qC,WAAR,SAAmBpgC,GAElB9K,KAAKsrC,WAAa,KAElB,IAAItrC,KAAK2oC,WACR3oC,KAAKyrC,aAAaO,aAEnBhsC,MAAKyqC,UAAYzqC,KAAK4rC,cAAcE,gBAAkB9rC,KAAKsqC,UAE3DtqC,MAAKipC,OAAO5hC,YAAcrH,KAAKsqC,WAAatqC,KAAKqrC,OACjDrrC,MAAKipC,OAAOzhC,OAGLqiC,GAAAtpC,UAAAiqC,cAAR,SAAsB1/B,GAGrB,IAAK9K,KAAK2oC,YAAc3oC,KAAKyqC,UAAYzqC,KAAKipC,OAAO5hC,YAAcrH,KAAKsqC,WAAa,GACpFtqC,KAAKuH,OAGCsiC,GAAAtpC,UAAA4qC,cAAR,WAEC,GAAGnrC,KAAKyrC,aACPzrC,KAAKisC,gBAENjsC,MAAKsrC,WAAa,KAClBtrC,MAAKurC,WAAa,IAElBvrC,MAAKyrC,aAAe,GAAIS,YACxBlsC,MAAKyrC,aAAajhC,iBAAiB,aAAcxK,KAAK+qC,oBACtD/qC,MAAKmsC,WAAaC,IAAIC,gBAAgBrsC,KAAKyrC,aAC3CzrC,MAAKipC,OAAOthB,IAAM3nB,KAAKmsC,UACvBnsC,MAAKipC,OAAOxhC,KAAOzH,KAAK2oC,UAExB3oC,MAAKorC,aAAe,MAGbvB,GAAAtpC,UAAA0rC,eAAR,WAEC,IAAKjsC,KAAKurC,WAAY,CACrB,GAAIvrC,KAAK4rC,cAAcE,gBACtB9rC,KAAK4rC,cAAcU,OAAO,EAAGtsC,KAAK4rC,cAAcE,gBAEjD9rC,MAAK4rC,cAAcjhC,oBAAoB,YAAa3K,KAAKirC,mBACzDjrC,MAAKyrC,aAAac,mBAAmBvsC,KAAK4rC,qBACnC5rC,MAAK4rC,aACZ5rC,MAAK4rC,cAAgB,KAGtB5rC,KAAKyrC,aAAa9gC,oBAAoB,aAAc3K,KAAK+qC,oBACzDqB,KAAII,gBAAgBxsC,KAAKmsC,kBAClBnsC,MAAKyrC,YACZzrC,MAAKyrC,aAAe,KAnLP5B,GAAAF,YAAqB,CAErBE,GAAAD,UAAyC,GAAI3oC,MAmL5D,OAAA4oC,KAE+B/pC,GAAAJ,QAAtBmqC,OzEszUHK,4CAA4C,SAAStrC,EAAQkB,EAAOJ,G0E/+U1E,GAAMoqC,GAAe,WAmEpB,QAnEKA,KAAN,GAAAjS,GAAA73B,IAeSA,MAAA0oC,WAAqB,KACrB1oC,MAAA2oC,WAAqB,KACrB3oC,MAAAysC,YAAsB,KAGtBzsC,MAAAkH,QAAiB,CACjBlH,MAAAsqC,WAAoB,CAgD3BtqC,MAAK4oC,UAAYkB,EAAgBlB,YAAckB,EAAgBlB,UAAY,IAAKC,OAAO,iBAAmBA,OAAO,uBAEjH7oC,MAAK8oC,UAAY9oC,KAAK4oC,UAAUG,YAChC/oC,MAAK8oC,UAAUQ,KAAKtnC,MAAQhC,KAAKkH,OAEjClH,MAAK8oC,UAAUE,QAAQhpC,KAAK4oC,UAAUt2B,YAEtCtS,MAAK0sC,iBAAmB,SAAC5hC,GAAU,MAAA+sB,GAAKuR,SAASt+B,IAlDlDvJ,OAAAC,eAAWsoC,EAAAvpC,UAAA,Y1Eq+UJkB,I0Er+UP,WAEC,MAAOzB,MAAKyqC,W1Es+UN9oC,WAAY,KACZC,aAAc,M0Ep+UrBL,QAAAC,eAAWsoC,EAAAvpC,UAAA,e1Eu+UJkB,I0Ev+UP,WAEC,MAAOzB,MAAK4oC,UAAUvhC,YAAcrH,KAAKsqC,Y1Ew+UnC3oC,WAAY,KACZC,aAAc,M0Et+UrBL,QAAAC,eAAWsoC,EAAAvpC,UAAA,U1Ey+UJkB,I0Ez+UP,WAEC,MAAOzB,MAAKkH,S1E0+UNnF,I0Ev+UP,SAAkBC,GAEjB,GAAIhC,KAAKkH,SAAWlF,EACnB,MAEDhC,MAAKkH,QAAUlF,CAEfhC,MAAK8oC,UAAUQ,KAAKtnC,MAAQhC,KAAKkH,S1Es+U3BvF,WAAY,KACZC,aAAc,M0En+UdkoC,GAAAvpC,UAAAgpC,UAAP,WAEC,MAAOvpC,MAAK0oC,WAGNoB,GAAAvpC,UAAAipC,UAAP,WAEC,MAAOxpC,MAAK2oC,WAGNmB,GAAAvpC,UAAAkpC,WAAP,WAEC,MAAOzpC,MAAKysC,YAeN3C,GAAAvpC,UAAAiH,KAAP,SAAYrF,EAAoBc,EAAmBwE,EAAsBE,GAAzE,GAAAkwB,GAAA73B,IAAgC,IAAAiD,QAAA,GAAiB,CAAjBA,EAAA;CAAmB,GAAAwE,QAAA,GAAoB,CAApBA,EAAA,MAAsB,GAAAE,QAAA,GAAa,CAAbA,EAAA,EAExE3H,KAAK0oC,WAAa,IAClB1oC,MAAK2oC,WAAalhC,CAElBzH,MAAK2sC,aAAe1pC,CAEpBjD,MAAKq4B,IAAM1wB,CAEX3H,MAAKysC,YAAc,IAGnB,IAAI3C,EAAgB8C,aAAajlC,GAChC3H,KAAK6sC,kBAAkB/C,EAAgB8C,aAAajlC,QAChD,KAAKmiC,EAAgBgD,YAAYnlC,GACrC3H,KAAK4oC,UAAUmE,gBAAgB5qC,EAAQ,SAACA,GAAW,MAAA01B,GAAKgV,kBAAkB1qC,IAAS,SAAC2I,GAAU,MAAA+sB,GAAKmV,SAASliC,SAE5G9K,MAAKuH,OAGAuiC,GAAAvpC,UAAAgH,KAAP,WAEC,IAAKvH,KAAK0oC,WACT,MAED1oC,MAAK0oC,WAAa,KAClB1oC,MAAK2oC,WAAa,KAClB3oC,MAAKysC,YAAc,KAEnB,IAAIzsC,KAAKitC,QACRjtC,KAAKisC,iBAGAnC,GAAAvpC,UAAAssC,kBAAP,SAAyB1qC,GAExB,IAAKnC,KAAK0oC,WACT,MAED1oC,MAAKysC,YAAc,KAGnB3C,GAAgB8C,aAAa5sC,KAAKq4B,KAAOl2B,CAEzC,IAAInC,KAAKitC,QACRjtC,KAAKisC,gBAENjsC,MAAKitC,QAAUjtC,KAAK4oC,UAAUsE,oBAE9BltC,MAAKitC,QAAQxlC,KAAOzH,KAAK2oC,UACzB3oC,MAAKitC,QAAQjE,QAAQhpC,KAAK8oC,UAE1B9oC,MAAKitC,QAAQ9qC,OAASA,CACtBnC,MAAKyqC,UAAYtoC,EAAOmF,QAExBtH,MAAKsqC,WAAatqC,KAAK4oC,UAAUvhC,YAAcrH,KAAK2sC,YACpD3sC,MAAKitC,QAAQ9D,QAAUnpC,KAAK0sC,gBAC5B,KACC1sC,KAAKitC,QAAQE,MAAMntC,KAAK4oC,UAAUvhC,YAAarH,KAAK2sC,cACnD,MAAOS,GACRzB,QAAQrhB,IAAI,yBAA2B8iB,EACvCptC,MAAKisC,kBAIAnC,GAAAvpC,UAAAysC,SAAP,SAAgBliC,GAEf6gC,QAAQrhB,IAAI,iCACZwf,GAAgBgD,YAAY9sC,KAAKq4B,KAAO,IACxCr4B,MAAKuH,OAGEuiC,GAAAvpC,UAAA6oC,SAAR,SAAiBt+B,GAEhB9K,KAAKuH,OAGEuiC,GAAAvpC,UAAA0rC,eAAR,WAGCjsC,KAAKitC,QAAQ1lC,KAAKvH,KAAK4oC,UAAUvhC,YACjCrH,MAAKitC,QAAQ9D,QAAU,IACvBnpC,MAAKitC,QAAQI,mBACNrtC,MAAKitC,QAAQ9qC,aACbnC,MAAKitC,OACZjtC,MAAKitC,QAAU,KAjKFnD,GAAAH,YAAqB,EAErBG,GAAAF,UAAmC,GAAI3oC,MAEvC6oC,GAAA8C,aAAsB,GAAIrrC,OAC1BuoC,GAAAgD,YAAqB,GAAIvrC,OA8JxC,OAAAuoC,KAEAhqC,GAAyBJ,QAAhBoqC,O1Es8UHwD,yCAAyC,SAAS1uC,EAAQkB,EAAOJ,G2E9mVvE,GAAM6tC,GAAiB,WAAvB,QAAMA,MAESA,EAAAC,UAAmB,WAEnBD,GAAAE,gBAAyB,iBACxC,OAAAF,KAEAztC,GAA2BJ,QAAlB6tC,O3EinVH5F,2CAA2C,SAAS/oC,EAAQkB,EAAOJ,G4ExnVzE,GAAM4jC,GAAmB,WAAzB,QAAMA,MAMSA,EAAAoK,KAAc,MAMdpK,GAAAqK,UAAmB,WAMnBrK,GAAAsK,KAAc,MAMdtK,GAAAuK,aAAsB,aAMtBvK,GAAAsC,OAAgB,QAC/B,OAAAtC,KAEAxjC,GAA6BJ,QAApB4jC,O5EwnVHoE,iCAAiC,SAAS9oC,EAAQkB,EAAOJ,GAC/D,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6E9pVtB,IAAOijC,GAAmB1kC,EAAa,0CAEvC,IAAOkvC,GAAgBlvC,EAAc,uCACrC,IAAOmvC,GAAYnvC,EAAe,mCAClC,IAAO0L,GAAe1L,EAAc,yCACpC,IAAOgO,GAAchO,EAAc,wC7E0qVnC,I6E9pVMykC,GAAS,SAAA3iC,GAASX,EAAlBsjC,EAAS3iC,EAqBd,SArBK2iC,KAuBJ3iC,EAAAf,KAAAK,KAnBOA,MAAAijC,aAAsB,CACtBjjC,MAAAkjC,YAAqB,CACrBljC,MAAAguC,YAAqB1K,EAAoBoK,IACzC1tC,MAAAiuC,WAAqB,MAsB7B1sC,OAAAC,eAAW6hC,EAAA9iC,UAAA,O7EipVJkB,I6EjpVP,WAGC,MAAOzB,MAAKkuC,SAAUluC,KAAKkuC,SAAS7iC,IAAM,I7EipVpC1J,WAAY,KACZC,aAAc,M6E5oVrBL,QAAAC,eAAW6hC,EAAA9iC,UAAA,Q7EkpVJkB,I6ElpVP,WAEC,MAAOzB,MAAKmuC,O7EmpVNxsC,WAAY,KACZC,aAAc,M6ExoVrBL,QAAAC,eAAW6hC,EAAA9iC,UAAA,c7E2oVJkB,I6EtoVP,WAEC,MAAOzB,MAAKguC,a7E+oVNjsC,I6EtpVP,SAAsBqsC,GAErBpuC,KAAKguC,YAAcI,G7EupVbzsC,WAAY,KACZC,aAAc,M6E5oVrBL,QAAAC,eAAW6hC,EAAA9iC,UAAA,e7EmpVJkB,I6EnpVP,WAEC,MAAOzB,MAAKijC,c7EopVNthC,WAAY,KACZC,aAAc,M6E9oVrBL,QAAAC,eAAW6hC,EAAA9iC,UAAA,c7EqpVJkB,I6ErpVP,WAEC,MAAOzB,MAAKkjC,a7EspVNvhC,WAAY,KACZC,aAAc,M6E/oVdyhC,GAAA9iC,UAAAq7B,KAAP,SAAYyJ,GAEXrlC,KAAKkuC,SAAW7I,CAEhBrlC,MAAKquC,SAEL,IAAIhJ,EAAQiJ,SAAWR,EAAiBS,KACvCvuC,KAAKwuC,YAAYnJ,OAEjBrlC,MAAKyuC,WAAWpJ,GAGXhC,GAAA9iC,UAAAmuC,YAAP,WACC,MAAO7F,SAAU,KAMXxF,GAAA9iC,UAAAouC,MAAP,WAEC3uC,KAAK4uC,KAAKC,OAEV7uC,MAAK8uC,aAMCzL,GAAA9iC,UAAA0D,QAAP,WAEC,GAAIjE,KAAK4uC,KACR5uC,KAAK4uC,KAAKC,OAEX7uC,MAAK8uC,aAQEzL,GAAA9iC,UAAAwuC,gBAAR,SAAwBC,EAAoBC,GAE3C,OAAQA,GACP,IAAK3L,GAAoBuK,aACzB,IAAKvK,GAAoBsK,KACzB,IAAKtK,GAAoBoK,KACxBsB,EAAIC,aAAeA,CACnB,MAED,KAAK3L,GAAoBqK,UACxBqB,EAAIC,aAAe3L,EAAoBoK,IACvC,MAED,KAAKpK,GAAoBsC,OACxBoJ,EAAIC,aAAe,EACnB,MAED,WAQM5L,GAAA9iC,UAAAkuC,WAAR,SAAmBpJ,GAElB,IACCrlC,KAAK4uC,KAAKM,KAAK7J,EAAQiJ,OAAQjJ,EAAQh6B,IAAKg6B,EAAQ8J,MACpDnvC,MAAK+uC,gBAAgB/uC,KAAK4uC,KAAM5uC,KAAKguC,YACrChuC,MAAK4uC,KAAKQ,OACT,MAAOvwC,GACRmB,KAAKqvC,8BAA8BxwC,IAQ7BwkC,GAAA9iC,UAAAiuC,YAAR,SAAoBnJ,GAEnBrlC,KAAKiuC,WAAa,KAElBjuC,MAAK4uC,KAAKM,KAAK7J,EAAQiJ,OAAQjJ,EAAQh6B,IAAKg6B,EAAQ8J,MAEpD,IAAI9J,EAAQ1b,MAAQ,KAAM,CACzB,GAAI0b,EAAQ1b,eAAgBokB,GAAc,CACzC,GAAIuB,GAAsCjK,EAAQ1b,IAElD,KACC3pB,KAAK4uC,KAAKK,aAAe,MACzBjvC,MAAK4uC,KAAKQ,KAAKE,EAAQC,UACtB,MAAO1wC,GACRmB,KAAKqvC,8BAA8BxwC,QAE9B,CACNmB,KAAK+uC,gBAAgB/uC,KAAK4uC,KAAM5uC,KAAKguC,YAErC,IAAI3I,EAAQ1b,KACX3pB,KAAK4uC,KAAKQ,KAAK/J,EAAQ1b,UAEvB3pB,MAAK4uC,KAAKQ,YAEN,CACNpvC,KAAK4uC,KAAKQ,QASJ/L,GAAA9iC,UAAA8uC,8BAAR,SAAsCjC,GAErC,OAAQA,EAAM5tC,MASb,IAAK,KAEJ,OAOK6jC,GAAA9iC,UAAA8tC,QAAR,WAAA,GAAAxW,GAAA73B,IAEC,KAAKA,KAAK4uC,KAAM,CACf5uC,KAAK4uC,KAAO,GAAIY,eAEhBxvC,MAAK4uC,KAAKa,YAAc,SAAC3kC,GAAwB,MAAA+sB,GAAK6X,YAAY5kC,GAClE9K,MAAK4uC,KAAKe,WAAa,SAAC7kC,GAAwB,MAAA+sB,GAAK+X,WAAW9kC,GAChE9K,MAAK4uC,KAAKiB,QAAU,SAAC/kC,GAAkB,MAAA+sB,GAAKiY,QAAQhlC,GACpD9K,MAAK4uC,KAAKmB,QAAU,SAACjlC,GAAqB,MAAA+sB,GAAK+C,YAAY9vB,GAC3D9K,MAAK4uC,KAAKoB,OAAS,SAACllC,GAAgB,MAAA+sB,GAAKuM,eAAet5B,GACxD9K,MAAK4uC,KAAKqB,UAAY,SAACnlC,GAAgB,MAAA+sB,GAAKqY,UAAUplC,GACtD9K,MAAK4uC,KAAKuB,UAAY,SAACrlC,GAAwB,MAAA+sB,GAAKuY,UAAUtlC,GAC9D9K,MAAK4uC,KAAKyB,mBAAqB,SAACvlC,GAAgB,MAAA+sB,GAAKyY,mBAAmBxlC,KAOlEu4B,GAAA9iC,UAAAuuC,WAAR,WAEC,GAAI9uC,KAAK4uC,OAAS,KAAM,CACvB5uC,KAAK4uC,KAAKa,YAAc,IACxBzvC,MAAK4uC,KAAKe,WAAa,IACvB3vC,MAAK4uC,KAAKiB,QAAU,IACpB7vC,MAAK4uC,KAAKmB,QAAU,IACpB/vC,MAAK4uC,KAAKoB,OAAS,IACnBhwC,MAAK4uC,KAAKqB,UAAY,IACtBjwC,MAAK4uC,KAAKuB,UAAY,IACtBnwC,MAAK4uC,KAAO,MAQPvL,GAAA9iC,UAAAgwC,mBAAP,SAA0Bn+B,GAEzB,GAAI6D,GAAgB,GAAI1U,OAExB6Q,GAASA,EAAO2f,MAAM,KAAKye,KAAK,IAEhC,IAAIC,GAAQC,EAAK,uBAEjB,OAAOD,EAASC,EAAGC,KAAKv+B,GACvB6D,EAAO26B,mBAAmBH,EAAO,KAAOG,mBAAmBH,EAAO,GAEnE,OAAOx6B,GASAotB,GAAA9iC,UAAA+vC,mBAAR,SAA2BxlC,GAE1B,GAAI9K,KAAK4uC,KAAKiC,YAAc,EAAG,CAC9B7wC,KAAK8wC,QAAU9wC,KAAK4uC,KAAKmC,MACzB,IAAI/wC,KAAK8wC,SAAW,IAAK,CACxB9wC,KAAKiuC,WAAa,IAElBjuC,MAAK6K,cAAc7K,KAAKgxC,kBAAoBhxC,KAAKgxC,gBAAkB,GAAIpkC,GAAeA,EAAeI,WAAYhN,QAGlHA,KAAK6K,cAAc7K,KAAKixC,eAAiBjxC,KAAKixC,aAAe,GAAIrkC,GAAeA,EAAeG,YAAa/M,SAQtGqjC,GAAA9iC,UAAA6vC,UAAR,SAAkBtlC,GAEjB,GAAI9K,KAAKiuC,aAAe,KACvB,OAOM5K,GAAA9iC,UAAA2vC,UAAR,SAAkBplC,IASVu4B,GAAA9iC,UAAAuvC,QAAR,SAAgBhlC,IASRu4B,GAAA9iC,UAAAqvC,WAAR,SAAmB9kC,GAElB9K,KAAKkjC,YAAcp4B,EAAMomC,KACzBlxC,MAAKijC,aAAen4B,EAAMqmC,MAE1BnxC,MAAK6K,cAAc7K,KAAKoxC,iBAAmBpxC,KAAKoxC,eAAiB,GAAIxkC,GAAeA,EAAeK,cAAejN,QAO3GqjC,GAAA9iC,UAAAmvC,YAAR,SAAoB5kC,GAEnB9K,KAAK6K,cAAc7K,KAAKqxC,kBAAoBrxC,KAAKqxC,gBAAkB,GAAIzkC,GAAeA,EAAeM,WAAYlN,QAO1GqjC,GAAA9iC,UAAA6jC,eAAR,SAAuBt5B,GAEtB,GAAI9K,KAAKiuC,aAAe,KACvB,MAED,QAAQjuC,KAAKguC,aACZ,IAAK1K,GAAoBoK,KACxB1tC,KAAKmuC,MAAQnuC,KAAK4uC,KAAK0C,YACvB,MAED,KAAKhO,GAAoBqK,UACxB3tC,KAAKmuC,MAAQnuC,KAAKuwC,mBAAmBvwC,KAAK4uC,KAAK0C,aAC/C,MAED,KAAKhO,GAAoBsK,KACzB,IAAKtK,GAAoBuK,aACzB,IAAKvK,GAAoBsC,OACxB5lC,KAAKmuC,MAAQnuC,KAAK4uC,KAAK2C,QACvB,MAED,SACCvxC,KAAKmuC,MAAQnuC,KAAK4uC,KAAK0C,YACvB,OAGFtxC,KAAK6K,cAAc7K,KAAKwxC,qBAAuBxxC,KAAKwxC,mBAAqB,GAAI5kC,GAAeA,EAAejB,cAAe3L,QAOnHqjC,GAAA9iC,UAAAq6B,YAAR,SAAoB9vB,GAEnB9K,KAAKiuC,WAAa,IAElBjuC,MAAK6K,cAAc7K,KAAKgxC,kBAAoBhxC,KAAKgxC,gBAAmB,GAAIpkC,GAAeA,EAAeI,WAAYhN,QAEpH,OAAAqjC,IA/XwB/4B,EAiYxBxK,GAAmBJ,QAAV2jC,I7EqlVNh5B,yCAAyC,yCAAyCsC,wCAAwC,wCAAwCg7B,0CAA0C,0CAA0C8J,uCAAuC,uCAAuCC,mCAAmC,qCAAqCD,wCAAwC,SAAS7yC,EAAQkB,EAAOJ,G8Ev+V/c,GAAMouC,GAAgB,WAAtB,QAAMA,MAMSA,EAAAS,KAAc,MAKdT,GAAA6D,IAAa,KAC5B,OAAA7D,KAEAhuC,GAA0BJ,QAAjBouC,O9E2+VH8D,kCAAkC,SAAShzC,EAAQkB,EAAOJ,G+Ez/VhE,GAAOouC,GAAgBlvC,EAAc,uCAErC,IAAMizC,GAAU,WAsCf,QAtCKA,GAsCOxmC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAjBLrL,KAAAsuC,OAAgBR,EAAiB6D,GAMjC3xC,MAAAmvC,MAAgB,IAatBnvC,MAAKwL,KAAOH,EAOb9J,OAAAC,eAAWqwC,EAAAtxC,UAAA,O/Eq+VJkB,I+Er+VP,WAEC,MAAOzB,MAAKwL,M/E0+VNzJ,I+En+VP,SAAeC,GAEdhC,KAAKwL,KAAOxJ,G/Eo+VNL,WAAY,KACZC,aAAc,M+E/9VdiwC,GAAAtxC,UAAA0D,QAAP,WAECjE,KAAK2pB,KAAO,IACZ3pB,MAAKwL,KAAO,KAEd,OAAAqmC,KAEA/xC,GAAoBJ,QAAXmyC,I/Eq+VNJ,uCAAuC,yCAAyCC,oCAAoC,SAAS9yC,EAAQkB,EAAOJ,GgF9iW/I,GAAMquC,GAAY,WAQjB,QARKA,GAQO37B,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KANJpS,KAAA8xC,WAAoB,GAAIvwC,OAQ/B,IAAI6Q,IAAW,KACdpS,KAAK+xC,OAAO3/B,GAOP27B,EAAAxtC,UAAAwxC,OAAP,SAAc3/B,GAEbA,EAASA,EAAO2f,MAAM,KAAKye,KAAK,IAEhC,IAAIC,GAAQC,EAAK,uBAEjB,OAAOD,EAASC,EAAGC,KAAKv+B,GACvBpS,KAAK8xC,WAAWlB,mBAAmBH,EAAO,KAAOG,mBAAmBH,EAAO,IAOtE1C,GAAAxtC,UAAA4Q,SAAP,WAEC,MAAO,GAOR5P,QAAAC,eAAWusC,EAAAxtC,UAAA,ahFuiWJkB,IgFviWP,WAEC,MAAOzB,MAAK8xC,YhF4iWN/vC,IgFvhWP,SAAqBiwC,GAEpBhyC,KAAK8xC,WAAaE,GhFwhWZrwC,WAAY,KACZC,aAAc,MgFziWrBL,QAAAC,eAAWusC,EAAAxtC,UAAA,YhFgjWJkB,IgFhjWP,WAEC,GAAIwwC,GAAc,GAAIC,SAEtB,KAAK,GAAIjzC,KAAKe,MAAK8xC,WAClBG,EAAG/6B,OAAOjY,EAAGe,KAAK8xC,WAAW7yC,GAE9B,OAAOgzC,IhF+iWDtwC,WAAY,KACZC,aAAc,MgFriWtB,OAAAmsC,KAEsBjuC,GAAAJ,QAAbquC,OhFyiWHnG,yCAAyC,SAAShpC,EAAQkB,EAAOJ,GACvE,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiFlnWtB,IAAOijC,GAAmB1kC,EAAY,0CACtC,IAAOuzC,GAAUvzC,EAAc,qCAC/B,IAAOwrC,GAAWxrC,EAAc,sCAChC,IAAOwzC,GAASxzC,EAAc,kCjF0nW9B,IiFlnWM2kC,GAAa,SAAA7iC,GAASX,EAAtBwjC,EAAa7iC,EAYlB,SAZK6iC,KAcJ7iC,EAAAf,KAAAK,KAAMsjC,EAAoBsK,MAQbrK,EAAAkE,aAAd,SAA2B4K,GAG1BA,EAAYA,EAAU7K,aACtB,OAAO6K,IAAa,OAASA,GAAa,QAAUA,GAAa,OAASA,GAAa,MAS1E9O,GAAA6D,aAAd,SAA2Bzd,GAG1B,GAAIA,YAAiB2oB,kBACpB,MAAO,KAER,MAAM3oB,YAAgByoB,IACrB,MAAO,MAER,IAAIG,GAA2B5oB,CAC/B4oB,GAAGtkC,SAAW,CAEd,IAAIskC,EAAGC,qBAAuB,MAC7B,MAAO,KAERD,GAAGtkC,SAAW,CACd,IAAIskC,EAAGE,aAAe,MACrB,MAAO,KAERF,GAAGtkC,SAAW,CACd,IAAIskC,EAAGG,aAAa,IAAM,MACzB,MAAO,KAERH,GAAGtkC,SAAW,CACd,IAAIskC,EAAGG,aAAa,IAAM,OAASH,EAAGE,aAAe,OAAUF,EAAGI,YAAc,GAC/E,MAAO,KAERJ,GAAGtkC,SAAW,CACd,IAAIskC,EAAGG,aAAa,IAAM,MACzB,MAAO,KAER,OAAO,OAODnP,GAAAhjC,UAAAqyC,iBAAP,WAAA,GAAA/a,GAAA73B,IAGC,IAAIqJ,EACJ,IAAIwpC,GAAoB,KAExB,IAAI7yC,KAAK8yC,cAAe,CACvB,MAAOX,GAAWY,kBACZ,IAAI/yC,KAAKgzC,kBAAmB,CAEjC3pC,EAAQ+gC,EAAY6I,qBAAqBjzC,KAAKgzC,kBAAmB,MACjEhzC,MAAKkzC,gBAAyB7pC,EAAOrJ,KAAKqnC,gBAErC,IAAIrnC,KAAK2pB,eAAgB2oB,kBAAkB,CACjD,GAAIa,GAAuDnzC,KAAK2pB,IAG/DtgB,GAAQ+gC,EAAY6I,qBAAqBE,EAAkB,MAC3DnzC,MAAKkzC,gBAAyB7pC,EAAOrJ,KAAKqnC,gBAKrC,IAAIrnC,KAAK2pB,eAAgByoB,GAAW,CAE1C,GAAIG,GAAevyC,KAAK2pB,IACxB4oB,GAAGtkC,SAAW,CACdjO,MAAKgzC,kBAAoB5I,EAAYgJ,iBAAiBpzC,KAAK2pB,KAE3D,KAAK3pB,KAAKgzC,kBAAkBK,SAAU,CACrCrzC,KAAKgzC,kBAAkBhD,OAAS,SAACllC,GAAU,MAAA+sB,GAAKuM,eAAet5B,GAC/D9K,MAAK8yC,cAAgB,IAErB,OAAOX,GAAWY,cAIlB1pC,EAAQ+gC,EAAY6I,qBAAqBjzC,KAAKgzC,kBAAmB,MACjEhzC,MAAKkzC,gBAAyB7pC,EAAOrJ,KAAKqnC,gBAMrC,IAAIrnC,KAAK2pB,eAAgBxoB,aAAa,CAE5CnB,KAAKgzC,kBAAoB5I,EAAYkJ,mBAAmBtzC,KAAK2pB,KAE7DtgB,GAAQ+gC,EAAY6I,qBAAqBjzC,KAAKgzC,kBAAmB,MACjEhzC,MAAKkzC,gBAAyB7pC,EAAOrJ,KAAKqnC,gBAEpC,IAAIrnC,KAAK2pB,eAAgB4pB,MAAM,CAErCvzC,KAAKgzC,kBAAoB5I,EAAYoJ,YAAYxzC,KAAK2pB,KAEtD3pB,MAAKgzC,kBAAkBhD,OAAS,SAACllC,GAAU,MAAA+sB,GAAKuM,eAAet5B,GAC/D9K,MAAK8yC,cAAgB,IAErB,OAAOX,GAAWY,cAGnB,GAAIF,GAAa,KACjB,EAMA7yC,KAAKyzC,UAAYpqC,CAEjB,OAAO8oC,GAAWuB,aAIZnQ,GAAAhjC,UAAA6jC,eAAP,SAAsBt5B,GAErB9K,KAAK8yC,cAAgB,MAEvB,OAAAvP,IAvJ4B4O,EAyJ5BryC,GAAuBJ,QAAd6jC,IjFikWNoE,0CAA0C,0CAA0CgM,qCAAqC,qCAAqC/I,sCAAsC,sCAAsCgJ,kCAAkC,oCAAoC/L,2CAA2C,SAASjpC,EAAQkB,EAAOJ,GACtX,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkF3uWtB,IAAOusB,GAAehuB,EAAa,wCAEnC,IAAO0kC,GAAmB1kC,EAAY,0CACtC,IAAOizC,GAAUjzC,EAAc,iCAC/B,IAAOuzC,GAAUvzC,EAAc,qClFkvW/B,IkF1uWM4kC,GAAe,SAAA9iC,GAASX,EAAxByjC,EAAe9iC,EAgBpB,SAhBK8iC,KAkBJ9iC,EAAAf,KAAAK,KAAMsjC,EAAoBoK,MASblK,EAAAiE,aAAd,SAA2B4K,GAE1BA,EAAYA,EAAU7K,aACtB,OAAO6K,IAAa,OAQP7O,GAAA4D,aAAd,SAA2Bzd,GAE1B,IACC,GAAIqoB,GAAM6B,KAAKC,MAAMnqB,EAErB,IAAIqoB,EAAK,CACR,MAAO,MAER,MAAO,OACN,MAAOnzC,GACR,MAAO,OAGR,MAAO,OAMD2kC,GAAAjjC,UAAAwzC,oBAAP,SAA2BC,IAQpBxQ,GAAAjjC,UAAA0zC,2BAAP,SAAkCD,IAQ3BxQ,GAAAjjC,UAAAqyC,iBAAP,WAEC,GAAI5yC,KAAKk0C,0BAA4B,KAAM,CAC1C,GAAI7qC,GAAwB,GAAIujB,GAAgB5sB,KAAKm0C,kBAAkB3Q,EAAgB1W,MAAMrf,MAE7FpE,GAAMkgB,KAAKqD,EAAgBE,KAAM9sB,KAAKm0C,kBAAkB3Q,EAAgB1W,MACxEzjB,GAAMkgB,KAAKqD,EAAgBG,KAAM/sB,KAAKm0C,kBAAkB3Q,EAAgBzW,MACxE1jB,GAAMkgB,KAAKqD,EAAgBI,KAAMhtB,KAAKm0C,kBAAkB3Q,EAAgBxW,MACxE3jB,GAAMkgB,KAAKqD,EAAgBK,KAAMjtB,KAAKm0C,kBAAkB3Q,EAAgBvW,MACxE5jB,GAAMkgB,KAAKqD,EAAgBM,KAAMltB,KAAKm0C,kBAAkB3Q,EAAgBtW,MACxE7jB,GAAMkgB,KAAKqD,EAAgBO,KAAMntB,KAAKm0C,kBAAkB3Q,EAAgBrW,MAGxEntB,MAAKk0C,yBAA2B,IAEhC7qC,GAAMxB,KAAO7H,KAAKqnC,UAElBrnC,MAAKkzC,gBAAyB7pC,EAAOrJ,KAAKqnC,WAE1C,OAAO8K,GAAWuB,aAGnB,IACC,GAAIU,GAAWP,KAAKC,MAAM9zC,KAAK2pB,KAC/B,IAAIA,GAAqCyqB,EAAKzqB,IAC9C,IAAI0qB,EAEJ,IAAI1qB,EAAK/pB,QAAU,EAClBI,KAAKs0C,eAAe,qEAErB,IAAIF,EAAM,CACTp0C,KAAKk0C,yBAA2B,GAAI3yC,OAEpC,KAAK,GAAIoU,GAAW,EAAGA,EAAIgU,EAAK/pB,OAAQ+V,IAAK,CAC5C0+B,EAAM1qB,EAAKhU,EACX3V,MAAKk0C,yBAAyBG,EAAI1sC,IAAM3H,KAAKu0C,gBAAgBF,EAAI1sC,GAAI,GAAIkqC,GAAWwC,EAAIxjB,MAAM1f,aAG/F,IAAKnR,KAAKw0C,oBAAqB,CAE9Bx0C,KAAKs0C,eAAe,+DAAiE9Q,EAAgB1W,KAAO,KAAO0W,EAAgBzW,KAAO,QAAUyW,EAAgBxW,KAAO,KAAOwW,EAAgBvW,KAAO,QAAUuW,EAAgBtW,KAAO,KAAOsW,EAAgBrW,KAEjQ,OAAOglB,GAAWuB,aAInB1zC,KAAKy0C,gCAEL,OAAOtC,GAAWY,eAElB,MAAOl0C,GACRmB,KAAKs0C,eAAe,uCAGrB,MAAOnC,GAAWuB,aAIXlQ,GAAAjjC,UAAAi0C,kBAAR,WAEC,MAAUx0C,MAAKk0C,yBAA0B1Q,EAAgB1W,OAAU,MAAQ9sB,KAAKk0C,yBAA0B1Q,EAAgBzW,OAAU,MAAQ/sB,KAAKk0C,yBAA0B1Q,EAAgBxW,OAAU,MAAQhtB,KAAKk0C,yBAA0B1Q,EAAgBvW,OAAU,MAAQjtB,KAAKk0C,yBAA0B1Q,EAAgBtW,OAAU,MAAQltB,KAAKk0C,yBAA0B1Q,EAAgBrW,OAAU,KAGjYqW,GAAAjjC,UAAA4zC,kBAAR,SAA0BtsC,GAEzB,GAAIiB,GAAqD9I,KAAKk0C,yBAA0BrsC,EAExF,IAAIiB,EACH,MAAuBA,GAAWyC,OAAO,EAE1C,OAAO,MA7IOi4B,GAAA1W,KAAc,MACd0W,GAAAzW,KAAc,MACdyW,GAAAxW,KAAc,MACdwW,GAAAvW,KAAc,MACduW,GAAAtW,KAAc,MACdsW,GAAArW,KAAc,MA2I9B,OAAAqW,IAlJ8B2O,EAoJ9BryC,GAAyBJ,QAAhB8jC,IlFmsWN9W,wCAAwC,wCAAwCib,0CAA0C,0CAA0CiK,iCAAiC,iCAAiC+B,qCAAqC,uCAAuCA,sCAAsC,SAAS/0C,EAAQkB,EAAOJ,GACnX,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmFt2WtB,IAAO4H,GAAmBrJ,EAAY,6CACtC,IAAOuK,GAAUvK,EAAc,oCAC/B,IAAO0L,GAAe1L,EAAa,yCACnC,IAAOiN,GAAWjN,EAAc,qCAChC,IAAO4N,GAAU5N,EAAc,oCAC/B,IAAOwrC,GAAWxrC,EAAc,sCAChC,IAAO8kC,GAAkB9kC,EAAY,6CAErC,IAAO+2B,GAAU/2B,EAAc,mCAC/B,IAAO81C,GAAK91C,EAAe,8BAC3B,IAAO+1C,GAAQ/1C,EAAe,iCnF23W9B,ImFt2WMuzC,GAAU,SAAAzxC,GAASX,EAAnBoyC,EAAUzxC,EAuDf,SAvDKyxC,GAuDO/D,GAvDb,GAAAvW,GAAA73B,IAyDEU,GAAAf,KAAAK,KAEAA,MAAK8hC,cAAgB,CACrB9hC,MAAKguC,YAAcI,CACnBpuC,MAAK40C,cAAgB,GAAI3zC,MAEzBjB,MAAK60C,qBAAuB,SAAC/pC,GAAqB,MAAA+sB,GAAKid,aAAahqC,IA5CvDqnC,EAAA1K,aAAd,SAA2B4K,GAE1B,KAAM,IAAIpqC,GAuBX1G,QAAAC,eAAW2wC,EAAA5xC,UAAA,WnFs1WJkB,ImFt1WP,WAEC,MAAOzB,MAAKyzC,WnFu1WN9xC,WAAY,KACZC,aAAc,MmFh0WduwC,GAAA5xC,UAAAw0C,qBAAP,SAA4BC,GAE3B,GAAIC,GAAkBtf,EAAWuf,eAAeF,EAEhD,KAAKC,EAAS,CAEbtJ,QAAQrhB,IAAI,+EAGb,MAAO2qB,GAGR1zC,QAAAC,eAAW2wC,EAAA5xC,UAAA,kBnFi0WJkB,ImF5zWP,WAEC,MAAOzB,MAAKm1C,iBnF6zWNpzC,ImFp0WP,SAA0B7B,GAEzBF,KAAKm1C,gBAAkBj1C,GnFq0WjByB,WAAY,KACZC,aAAc,MmF9zWrBL,QAAAC,eAAW2wC,EAAA5xC,UAAA,iBnFi0WJkB,ImFj0WP,WAEC,MAAOzB,MAAKo1C,gBnFk0WNzzC,WAAY,KACZC,aAAc,MmFh0WrBL,QAAAC,eAAW2wC,EAAA5xC,UAAA,mBnFm0WJkB,ImFn0WP,WAEC,MAAOzB,MAAKq1C,kBnFo0WN1zC,WAAY,KACZC,aAAc,MmFl0WrBL,QAAAC,eAAW2wC,EAAA5xC,UAAA,gBnFq0WJkB,ImFh0WP,WAEC,MAAOzB,MAAK8hC,enFi0WN//B,ImFx0WP,SAAwBuzC,GAEvBt1C,KAAK8hC,cAAgBwT,GnFy0Wf3zC,WAAY,KACZC,aAAc,MmFl0WrBL,QAAAC,eAAW2wC,EAAA5xC,UAAA,QnFq0WJkB,ImFr0WP,WAEC,MAAOzB,MAAKmuC,OnFs0WNxsC,WAAY,KACZC,aAAc,MmFj0WrBL,QAAAC,eAAW2wC,EAAA5xC,UAAA,cnFu0WJkB,ImFv0WP,WAEC,MAAOzB,MAAKguC,anFw0WNrsC,WAAY,KACZC,aAAc,MmF5zWduwC,GAAA5xC,UAAA+mC,WAAP,SAAkB3d,EAAU4rB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,GAE3Bv1C,KAAKmuC,MAAQxkB,CACb3pB,MAAKw1C,eAAeD,GAMrBh0C,QAAAC,eAAW2wC,EAAA5xC,UAAA,gBnFw0WJkB,ImFx0WP,WAEC,MAAOzB,MAAK40C,enFy0WNjzC,WAAY,KACZC,aAAc,MmFh0WduwC,GAAA5xC,UAAAwzC,oBAAP,SAA2BC,GAE1B,KAAM,IAAI/rC,GAQJkqC,GAAA5xC,UAAA0zC,2BAAP,SAAkCD,GAEjC,KAAM,IAAI/rC,GAQJkqC,GAAA5xC,UAAAk1C,wBAAP,SAA+BzB,EAAuC3qC,GAErE,MAAOA,GAAMxB,KAGPsqC,GAAA5xC,UAAAykC,gBAAP,WAEChlC,KAAKo1C,eAAiB,KAEtB,IAAIp1C,KAAK01C,OACR11C,KAAK01C,OAAOvI,OAGb,KAAKntC,KAAK21C,WACT31C,KAAK80C,eAGA3C,GAAA5xC,UAAA2yC,gBAAP,SAAuB7pC,EAAcxB,GAAA,GAAAA,QAAA,GAAkB,CAAlBA,EAAA,KAEpC,GAAI+tC,EACJ,IAAIC,EAEJ,IAAIhuC,GAAQ,KACXwB,EAAMxB,KAAOA,CAId,KAAKwB,EAAMxB,KACVwB,EAAMxB,KAAOwB,EAAM3H,SAEpB1B,MAAK6K,cAAc,GAAI1B,GAAWA,EAAWa,eAAgBX,IAQvD8oC,GAAA5xC,UAAAqyC,iBAAP,WAEC,KAAM,IAAI3qC,GAGJkqC,GAAA5xC,UAAA+zC,eAAP,SAAsBpsC,GAAA,GAAAA,QAAA,GAAwC,CAAxCA,EAAA,wBAErB,GAAIlI,KAAK01C,OAAQ,CAChB11C,KAAK01C,OAAO/qC,oBAAoB6B,EAAWC,MAAOzM,KAAK60C,qBACvD70C,MAAK01C,OAAOnuC,MACZvH,MAAK01C,OAAS,KAGf11C,KAAK6K,cAAc,GAAIgB,GAAYA,EAAYG,YAAa9D,IAGtDiqC,GAAA5xC,UAAAg0C,gBAAP,SAAuB5sC,EAAWk0B,EAAgB2J,EAAmC7b,EAAiBmsB,EAAqCC,GAAzF,GAAAvQ,QAAA,GAAiC,CAAjCA,EAAA,MAAmC,GAAA7b,QAAA,GAAe,CAAfA,EAAA,KAAiB,GAAAmsB,QAAA,GAAmC,CAAnCA,EAAA,MAAqC,GAAAC,QAAA,GAAe,CAAfA,EAAA,EAE1I,GAAIjtC,GAAgC,GAAI46B,GAAmB/7B,EAAIk0B,EAAKlS,EAAM,KAAM3pB,KAAMwlC,EAAmBsQ,EAAqBC,EAC9H/1C,MAAK40C,cAAc/wC,KAAKiF,EAExB,OAAOA,GAGDqpC,GAAA5xC,UAAAk0C,+BAAP,WAECz0C,KAAKg2C,gBAELh2C,MAAK6K,cAAc,GAAIgB,GAAYA,EAAYI,yBAGzCkmC,GAAA5xC,UAAAy1C,eAAP,WAEC,GAAIh2C,KAAK01C,OACR11C,KAAK01C,OAAOnuC,MAEbvH,MAAKo1C,eAAiB,KAOhBjD,GAAA5xC,UAAA01C,UAAP,WAEC,MAAStB,KAAa30C,KAAKk2C,eAAkBl2C,KAAKm2C,YAM5ChE,GAAA5xC,UAAAu0C,aAAP,SAAoBhqC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAEnB9K,KAAKk2C,eAAiBvB,GACtB30C,MAAK21C,WAAa,IAElB,IAAI31C,KAAK4yC,qBAAuB5yC,KAAKm1C,gBACpCn1C,KAAKo2C,iBAENp2C,MAAK21C,WAAa,MAOZxD,GAAA5xC,UAAAi1C,eAAP,SAAsBD,GAErBv1C,KAAKm2C,YAAcZ,CACnBv1C,MAAK01C,OAAS,GAAIhB,GAAM10C,KAAKm2C,YAAa,EAC1Cn2C,MAAK01C,OAAOlrC,iBAAiBgC,EAAWC,MAAOzM,KAAK60C,qBACpD70C,MAAK01C,OAAOvI,OAGZntC,MAAK80C,eAMC3C,GAAA5xC,UAAA61C,gBAAP,WAEC,GAAIp2C,KAAK01C,OAAQ,CAChB11C,KAAK01C,OAAO/qC,oBAAoB6B,EAAWC,MAAOzM,KAAK60C,qBACvD70C,MAAK01C,OAAOnuC,OAGbvH,KAAK01C,OAAS,IACd11C,MAAKq1C,iBAAmB,IACxBr1C,MAAK21C,WAAa,KAElB31C,MAAK6K,cAAc,GAAIgB,GAAYA,EAAYE,iBAQzComC,GAAA5xC,UAAA81C,cAAP,WAEC,MAAOjM,GAAYj5B,SAASnR,KAAKmuC,OAQ3BgE,GAAA5xC,UAAA+1C,cAAP,WAEC,MAAOlM,GAAYmM,YAAYv2C,KAAKmuC,OAQ9BgE,GAAA5xC,UAAAi2C,UAAP,WAEC,MAAOx2C,MAAKmuC,MA7SCgE,GAAAuB,aAAuB,IAMvBvB,GAAAY,cAAwB,KA0SvC,OAAAZ,IAlVyB7nC,EAoVLxK,GAAAJ,QAAXyyC,InF2yWNpqC,6CAA6C,6CAA6CkB,oCAAoC,oCAAoCoB,yCAAyC,yCAAyCuB,qCAAqC,qCAAqCW,oCAAoC,oCAAoCq+B,sCAAsC,sCAAsC9C,6CAA6C,6CAA6C9R,mCAAmC,mCAAmCygB,8BAA8B,8BAA8BC,iCAAiC,mCAAmCC,4CAA4C,SAAS/3C,EAAQkB,EAAOJ,GAIzzB,GoFlqXMk3C,GAAgB,WAAtB,QAAMA,MAKSA,EAAAhR,OAAgB,QAKhBgR,GAAAC,WAAoB,WAKpBD,GAAAE,MAAe,OAE9B,OAAAF,KAE0B92C,GAAAJ,QAAjBk3C,OpFkqXHhM,uCAAuC,SAAShsC,EAAQkB,EAAOJ,GqFxrXrE,GAAOgpB,GAAa9pB,EAAa,sCAEjC,IAAOwzC,GAASxzC,EAAc,kCAE9B,IAAMwrC,GAAW,WAAjB,QAAMA,MAESA,EAAAO,oBAAd,SAAkChhB,EAAkBotB,GAEnD,GAAIC,GAAiB,EACrB,IAAIC,GAAmB,GAAI51C,YAAWsoB,EACtC,IAAIlnB,GAAaw0C,EAAM31C,UAEvB,KAAK,GAAIjC,GAAI,EAAGA,EAAIoD,EAAKpD,IACxB23C,GAAW7V,OAAOC,aAAa6V,EAAO53C,GAEvC,IAAI63C,GAAqBrO,OAAOsO,KAAKH,EACrC,OAAO,QAAUD,EAAW,WAAaG,EAG5B9M,GAAAgN,mBAAd,SAAiCztB,EAAkB0tB,GAElD,GAAIC,GAAalN,EAAYO,oBAAoBhhB,EAAM,SAAW0tB,EAClE,IAAIE,GAA4C,GAAIrO,MACpDqO,GAAM5vB,IAAM2vB,CACZ,OAAOC,GAWMnN,GAAAkJ,mBAAd,SAAiC3pB,GAEhC,GAAI2tB,GAAalN,EAAYO,oBAAoBhhB,EAAM,YACvD,IAAI6tB,GAA0C,GAAIC,MAClDD,GAAI7vB,IAAM2vB,CACV,OAAOE,GAWMpN,GAAAgJ,iBAAd,SAA+BzpB,GAE9B,GAAI2tB,GAAalN,EAAYO,oBAAoBhhB,EAAK+tB,WAAY,YAClE,IAAIF,GAA0C,GAAIC,MAClDD,GAAI7vB,IAAM2vB,CACV,OAAOE,GAGMpN,GAAAuN,iBAAd,SAA+BhuB,EAAgBiuB,GAE9C,GAAIN,GAAalN,EAAYO,oBAAoBhhB,EAAK+tB,WAAY,SAAWE,EAC7E,IAAIL,GAA4C,GAAIrO,MACpDqO,GAAM5vB,IAAM2vB,CACZ,OAAOC,GAWMnN,GAAAoJ,YAAd,SAA0B7pB,GAEzB,GAAIkuB,GAAahP,OAAO,QAAUA,OAAO,YACzC,IAAIlhB,GAAMkwB,EAAOxL,gBAAgB1iB,EACjC,IAAI6tB,GAA0C,GAAIC,MAClDD,GAAI7vB,IAAMA,CACV,OAAO6vB,GAWMpN,GAAA0N,YAAd,SAA0BnuB,GAEzB,GAAIkuB,GAAahP,OAAO,QAAUA,OAAO,YACzC,IAAIlhB,GAAMkwB,EAAOxL,gBAAgB1iB,EACjC,IAAI6tB,GAA0C,GAAItO,MAClDsO,GAAI7vB,IAAMA,CACV,OAAO6vB,GAMMpN,GAAA6I,qBAAd,SAAmCuE,EAAsB3uB,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,KAExD,GAAIkvB,GAA2B,GAAIrvB,GAAc8uB,EAAI/pC,MAAO+pC,EAAI9pC,OAAQ,KAAM,KAAMmb,EACpFkvB,GAAWxuB,KAAKiuB,EAEhB,OAAOO,GAWM3N,GAAAmM,YAAd,SAA0B5sB,GAEzB,GAAIzpB,GAAc,GAAIkyC,EACtBlyC,GAAE83C,eAAeruB,EACjB,OAAOzpB,GAYMkqC,GAAAj5B,SAAd,SAAuBwY,EAAU/pB,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAGhC,SAAW+pB,KAAS,SAAU,CAC7B,GAAI1qB,GAAoB0qB,CAExB,IAAI1qB,EAAE,WAAa,KAClB,MAAOA,GAAEgiC,OAAO,EAAGhiC,EAAEW,QAGvB,GAAI+pB,YAAgByoB,GAAW,CAC9B,GAAIG,GAA2B5oB,CAC/B4oB,GAAGtkC,SAAW,CACd,OAAOskC,GAAGG,aAAajuC,KAAKC,IAAI6tC,EAAG0F,oBAAqBr4C,IAGzD,MAAO,MAqBT,OAAAwqC,KAEqBtqC,GAAAJ,QAAZ0qC,IrFgqXN9hB,sCAAsC,sCAAsCsrB,kCAAkC,oCAAoC9L,8CAA8C,SAASlpC,EAAQkB,EAAOJ,GAM3N,GsF30XMgkC,GAAkB,WAkBvB,QAlBKA,GAkBO/7B,EAAW09B,EAAoB1b,EAAUoS,EAAmBmc,EAAyB1S,EAAmC2S,EAAqCpC,GAAxE,GAAAvQ,QAAA,GAAiC,CAAjCA,EAAA,MAAmC,GAAA2S,QAAA,GAAmC,CAAnCA,EAAA,MAAqC,GAAApC,QAAA,GAAe,CAAfA,EAAA,EAExK/1C,KAAKq4B,IAAM1wB,CACX3H,MAAKo4C,QAAUrC,CACf/1C,MAAKkuC,SAAW7I,CAChBrlC,MAAKmuC,MAAQxkB,CACb3pB,MAAKq4C,QAAUtc,CACf/7B,MAAKs4C,cAAgBJ,CACrBl4C,MAAKu4C,mBAAqB/S,CAC1BxlC,MAAKw4C,qBAAuBL,CAC5Bn4C,MAAK0L,QAAU,GAAIzK,MACnBjB,MAAK40C,cAAgB,GAAI3zC,OAM1BM,OAAAC,eAAWkiC,EAAAnjC,UAAA,MtF4zXJkB,IsF5zXP,WAEC,MAAOzB,MAAKq4B,KtF6zXN12B,WAAY,KACZC,aAAc,MsF5zXrBL,QAAAC,eAAWkiC,EAAAnjC,UAAA,UtF+zXJkB,IsF/zXP,WAEC,MAAOzB,MAAKo4C,StFg0XNz2C,WAAY,KACZC,aAAc,MsF3zXrBL,QAAAC,eAAWkiC,EAAAnjC,UAAA,WtFi0XJkB,IsFj0XP,WAEC,MAAOzB,MAAKkuC,UtFk0XNvsC,WAAY,KACZC,aAAc,MsF7zXrBL,QAAAC,eAAWkiC,EAAAnjC,UAAA,QtFm0XJkB,IsFn0XP,WAEC,MAAOzB,MAAKmuC,OtFo0XNxsC,WAAY,KACZC,aAAc,MsF/zXrBL,QAAAC,eAAWkiC,EAAAnjC,UAAA,UtFq0XJkB,IsFr0XP,WAEC,MAAOzB,MAAKq4C,StFs0XN12C,WAAY,KACZC,aAAc,MsFj0XrBL,QAAAC,eAAWkiC,EAAAnjC,UAAA,gBtFu0XJkB,IsFv0XP,WAEC,MAAOzB,MAAKs4C,etFw0XN32C,WAAY,KACZC,aAAc,MsFn0XrBL,QAAAC,eAAWkiC,EAAAnjC,UAAA,qBtFy0XJkB,IsFz0XP,WAEC,MAAOzB,MAAKu4C,oBtF00XN52C,WAAY,KACZC,aAAc,MsFr0XrBL,QAAAC,eAAWkiC,EAAAnjC,UAAA,sBtF20XJkB,IsF30XP,WAEC,MAAOzB,MAAKw4C,sBtF40XN72C,WAAY,KACZC,aAAc,MsFv0XrBL,QAAAC,eAAWkiC,EAAAnjC,UAAA,UtF60XJkB,IsF70XP,WAEC,MAAOzB,MAAK0L,StF80XN/J,WAAY,KACZC,aAAc,MsFz0XrBL,QAAAC,eAAWkiC,EAAAnjC,UAAA,gBtF+0XJkB,IsF/0XP,WAEC,MAAOzB,MAAK40C,etFg1XNjzC,WAAY,KACZC,aAAc,MsF10Xd8hC,GAAAnjC,UAAAglC,UAAP,SAAiB5b,GAEhB3pB,KAAKmuC,MAAQxkB,EAOP+Z,GAAAnjC,UAAAslC,YAAP,SAAmB9J,GAElB/7B,KAAKq4C,QAAUtc,EAQT2H,GAAAnjC,UAAA2kC,QAAP,WAEC,GAAIllC,KAAKs4C,cACRt4C,KAAKs4C,cAAcvE,oBAAoB/zC,MAMlC0jC,GAAAnjC,UAAAwmC,eAAP,WAEC,GAAI/mC,KAAKs4C,cACRt4C,KAAKs4C,cAAcrE,2BAA2Bj0C,MAMzC0jC,GAAAnjC,UAAA0mC,YAAP,SAAmB59B,GAElB,GAAIrJ,KAAKs4C,cACR,MAAOt4C,MAAKs4C,cAAc7C,wBAAwBz1C,KAAMqJ,EAEzD,OAAOA,GAAMxB,KAEf,OAAA67B,KAE4B5jC,GAAAJ,QAAnBgkC,OtFw0XHqE,8CAA8C,SAASnpC,EAAQkB,EAAOJ,GAC5E,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuFr/XtB,IAAO+1B,GAASx3B,EAAc,kCAE9B,IAAO+nB,GAAS/nB,EAAc,iCAE9B,IAAO0kC,GAAmB1kC,EAAY,0CACtC,IAAOizC,GAAUjzC,EAAc,iCAC/B,IAAOuzC,GAAUvzC,EAAc,qCAC/B,IAAOwrC,GAAWxrC,EAAc,sCAEhC,IAAO65C,GAAQ75C,EAAe,iCvF0/X9B,IuFn/XM6kC,GAAkB,SAAA/iC,GAASX,EAA3B0jC,EAAkB/iC,EAavB,SAbK+iC,KAeJ/iC,EAAAf,KAAAK,KAAMsjC,EAAoBoK,KATnB1tC,MAAA04C,YAAqB,EAkBfjV,EAAAgE,aAAd,SAA2B4K,GAE1BA,EAAYA,EAAU7K,aACtB,OAAO6K,IAAa,MAQP5O,GAAA2D,aAAd,SAA2Bzd,GAE1B,IACC,GAAIre,GAAiB8+B,EAAYj5B,SAASwY,EAC1C,IAAGre,EAAQ4nB,QAAQ,kBAAoB,GAAK5nB,EAAQ4nB,QAAQ,kBAAoB,EAC/E,MAAO,KAER,OAAO,OACN,MAAOr0B,GACR,MAAO,OAGR,MAAO,OAMD4kC,GAAAljC,UAAAwzC,oBAAP,SAA2BC,GAE1B,GAAGA,EAAmBzoC,OAAO3L,OAAQ,CACpCI,KAAKypB,WAA6BuqB,EAAmBzoC,OAAO,EAC5DvL,MAAKkzC,gBAAgBlzC,KAAKypB,WAC1BzpB,MAAK04C,YAAcC,EAAwBC,sBACrC,CACN54C,KAAK04C,YAAcC,EAAwB5sC,gBAOtC03B,GAAAljC,UAAA0zC,2BAAP,SAAkCD,GAEjCh0C,KAAK04C,YAAcC,EAAwB5sC,eAMrC03B,GAAAljC,UAAAqyC,iBAAP,WAEC,GAAIiG,EAEJ,QAAO74C,KAAK04C,aACX,IAAKC,GAAwBG,UAC5B,IACC94C,KAAK+4C,KAAON,EAASO,mBAAmBP,EAASQ,SAASj5C,KAAKq2C,iBAAkB,gBAAgB,EAEjGr2C,MAAKk5C,WAAaT,EAASU,mBAAmBn5C,KAAK+4C,KAAM,YAEzD/4C,MAAKo5C,iBAAmBX,EAASO,mBAAmBh5C,KAAK+4C,KAAM,aAE/D/4C,MAAK04C,YAAcC,EAAwBU,YAE1C,MAAM95C,GACP,MAAO4yC,GAAWuB,aAEnB,KAED,KAAKiF,GAAwBU,YAC5B,GAAIr5C,KAAKk5C,WAAW,CACnBl5C,KAAKu0C,gBAAgBv0C,KAAKk5C,WAAY,GAAIrH,GAAW7xC,KAAKk5C,YAC1Dl5C,MAAKy0C,qCACC,CACN,MAAOtC,GAAWuB,aAGnB,KAED,KAAKiF,GAAwBC,kBAC5B,GAAIU,EACJ,IAAIC,EACJ,IAAIjsC,EACJ,IAAIC,EACJ,IAAIE,EACJ,IAAIC,EACJ,IAAIjL,GAAazC,KAAKo5C,iBAAiBx5C,MACvC,KAAK,GAAIP,GAAW,EAAGA,EAAIoD,EAAKpD,IAAK,CACpCk6C,EAAUv5C,KAAKo5C,iBAAiB/5C,EAChCi6C,GAAU,GAAIljB,EAGd9oB,GAAImrC,EAASU,mBAAmBI,EAAS,IACzChsC,GAAIkrC,EAASU,mBAAmBI,EAAS,IACzC9rC,GAAQgrC,EAASU,mBAAmBI,EAAS,QAC7C7rC,GAAS+qC,EAASU,mBAAmBI,EAAS,SAC9C,IAAIjsC,GAAKC,GAAKE,GAASC,EACtB4rC,EAAQE,UAAY,GAAI7yB,GAAUwL,SAAS7kB,GAAGtN,KAAKypB,WAAWhc,MAAO0kB,SAAS5kB,GAAGvN,KAAKypB,WAAW/b,OAAQykB,SAAS1kB,GAAOzN,KAAKypB,WAAWhc,MAAO0kB,SAASzkB,GAAQ1N,KAAKypB,WAAW/b,OAGlLJ,GAAImrC,EAASU,mBAAmBI,EAAS,SACzChsC,GAAIkrC,EAASU,mBAAmBI,EAAS,SACzC9rC,GAAQgrC,EAASU,mBAAmBI,EAAS,aAC7C7rC,GAAS+qC,EAASU,mBAAmBI,EAAS,cAC9C,IAAIjsC,GAAKC,GAAKE,GAASC,EACtB4rC,EAAQG,UAAY,GAAI9yB,GAAUwL,SAAS7kB,GAAI6kB,SAAS5kB,GAAI4kB,SAAS1kB,GAAQ0kB,SAASzkB,GAEvF1N,MAAKkzC,gBAAgBoG,EAASb,EAASU,mBAAmBI,EAAS,SAGpEv5C,KAAK04C,YAAcC,EAAwB5sC,cAE3C,MAED,KAAK4sC,GAAwB5sC,eAC5B,MAAOomC,GAAWuB,aAGpB,MAAOvB,GAAWY,cAEpB,OAAAtP,IAlJiC0O,EAsJjC,IAAMwG,GAAuB,WAA7B,QAAMA,MACSA,EAAAG,UAAmB,CACnBH,GAAAU,YAAqB,CACrBV,GAAAC,kBAA2B,CAC3BD,GAAA5sC,eAAwB,CACvC,OAAA4sC,KAPA74C,GAAAJ,QAAS+jC,IvFg+XN/c,iCAAiC,iCAAiCwP,kCAAkC,kCAAkCyR,0CAA0C,0CAA0CiK,iCAAiC,iCAAiC+B,qCAAqC,qCAAqC/I,sCAAsC,sCAAsC8O,iCAAiC,mCAAmC1R,2CAA2C,SAASppC,EAAQkB,EAAOJ,GAC5jB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwFzoYtB,IAAO4G,GAASrI,EAAc,kCAE9B,IAAO0kC,GAAmB1kC,EAAY,0CACtC,IAAOuzC,GAAUvzC,EAAc,qCAE/B,IAAOwzC,GAASxzC,EAAc,kCAE9B,IAAM+kC,GAAe,SAAAjjC,GAASX,EAAxB4jC,EAAejjC,EAEpB,SAFKijC,KAIJjjC,EAAAf,KAAAK,KAAMsjC,EAAoBsK,MAGbjK,EAAA8D,aAAd,SAA2B4K,GAG1BA,EAAYA,EAAU7K,aACtB,OAAO6K,IAAa,OAASA,GAAa,OAASA,GAAa,MAInD1O,GAAAyD,aAAd,SAA2Bzd,GAE1B,KAAMA,YAAgByoB,IACrB,MAAO,MAER,IAAIG,GAA2B5oB,CAC/B,IAAIiuB,GAAoBjU,EAAgBgW,cAAcpH,EACtD,OAAOqF,GAAU,KAAO,MAGlBjU,GAAApjC,UAAAi1C,eAAP,SAAsBD,SAGdv1C,MAAKyzC,SACZzzC,MAAKyzC,UAAY,IAEjB/yC,GAAAH,UAAMi1C,eAAc71C,KAAAK,KAACu1C,GAGf5R,GAAApjC,UAAAqyC,iBAAP,WAEC,GAAI5yC,KAAK2pB,eAAgByoB,GAAW,CACnCpyC,KAAKyzC,UAAY,GAAIxsC,GAAUjH,KAAK2pB,KAAK+tB,WACzC13C,MAAKkzC,gBAAgBlzC,KAAKyzC,UAAWzzC,KAAKqnC,gBACpC,IAAIrnC,KAAK2pB,eAAgBxoB,aAAa,CAC5CnB,KAAKyzC,UAAY,GAAIxsC,GAAUjH,KAAK2pB,KACpC3pB,MAAKkzC,gBAAgBlzC,KAAKyzC,UAAWzzC,KAAKqnC,YAG3C,MAAO8K,GAAWuB,aAIJ/P,GAAAgW,cAAf,SAA6BpH,GAE5BA,EAAGtkC,SAAW,CAEdskC,GAAGtkC,SAAW,CACd,KAAKskC,EAAGC,oBAAsB,QAAW,MAAQ,CAChD,MAAO,MAGRD,EAAGtkC,SAAW,CACd,IAAIskC,EAAGG,aAAa,IAAM,OACzB,MAAO,KAERH,GAAGtkC,SAAW,CACd,IAAIskC,EAAGG,aAAa,IAAM,OACzB,MAAO,KAERH,GAAGtkC,SAAW,CAEd,OAAO,MAET,OAAA01B,IArE8BwO,EAuELryC,GAAAJ,QAAhBikC,IxFqnYN58B,kCAAkC,kCAAkC4gC,0CAA0C,0CAA0CgM,qCAAqC,qCAAqCC,kCAAkC,oCAAoCgG,gDAAgD,SAASh7C,EAAQkB,EAAOJ,GAMnX,GyFpsYMm6C,GAAgB,WAAtB,QAAMA,MAKSA,EAAAC,YAAqB,YAKrBD,GAAAE,aAAsB,aACrC,OAAAF,KAE0B/5C,GAAAJ,QAAjBm6C,OzFssYHG,oDAAoD,SAASp7C,EAAQkB,EAAOJ,GAClF,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0F7tYtB,IAAOygB,GAAqBliB,EAAW,oDACvC,IAAOq7C,GAAcr7C,EAAa,6CAElC,IAAMs7C,GAAoB,SAAAx5C,GAASX,EAA7Bm6C,EAAoBx5C,EAEzB,SAFKw5C,KAIJx5C,EAAAf,KAAAK,KAEAA,MAAKm6C,SAAS/rC,UAAS,GAAI0S,IAAwB9L,QAIpDzT,OAAAC,eAAW04C,EAAA35C,UAAA,Q1F4tYJwB,I0F5tYP,SAAgBC,GAEfhC,KAAKo6C,OAASp4C,G1F6tYRL,WAAY,KACZC,aAAc,M0F1tYrBL,QAAAC,eAAW04C,EAAA35C,UAAA,O1F8tYJwB,I0F9tYP,SAAeC,GAEdhC,KAAKq6C,MAAQr4C,G1F+tYPL,WAAY,KACZC,aAAc,M0F5tYrBL,QAAAC,eAAW04C,EAAA35C,UAAA,gB1FguYJwB,I0FhuYP,SAAwBC,GAEvBhC,KAAKs6C,cAAgBt4C,G1FiuYfL,WAAY,KACZC,aAAc,M0F9tYds4C,GAAA35C,UAAA+B,MAAP,WAEC,GAAIA,GAA6B,GAAI43C,EACrC53C,GAAM63C,SAAS/rC,SAASpO,KAAKm6C,SAC7B73C,GAAM83C,OAASp6C,KAAKo6C,MACpB93C,GAAM+3C,MAAQr6C,KAAKq6C,KACnB/3C,GAAMg4C,cAAgBt6C,KAAKs6C,aAC3Bh4C,GAAMi4C,mBACN,OAAOj4C,GAID43C,GAAA35C,UAAAi6C,cAAP,WAECx6C,KAAKy6C,gBAAkB,MAEzB,OAAAP,IA5CmCD,EA8CLn6C,GAAAJ,QAArBw6C,I1FguYNQ,oDAAoD,oDAAoDC,6CAA6C,+CAA+CC,2CAA2C,SAASh8C,EAAQkB,EAAOJ,SAEpQm7C,0DAA0D,SAASj8C,EAAQkB,EAAOJ,GACxF,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2FtxYtB,IAAO+M,GAAQxO,EAAe,gCAC9B,IAAOuN,GAAevN,EAAa,yCAEnC,IAAOq7C,GAAcr7C,EAAa,6CAElC,IAAMk8C,GAA0B,SAAAp6C,GAASX,EAAnC+6C,EAA0Bp6C,EAO/B,SAPKo6C,GAOOC,EAA4BrlC,GAPzC,GAAAmiB,GAAA73B,IASEU,GAAAf,KAAAK,KACAA,MAAK+6C,eAAiBA,CACtB/6C,MAAK0V,MAAQA,CAEb1V,MAAKg7C,mCAAqC,SAAClwC,GAA0B,MAAA+sB,GAAKojB,0BAA0BnwC,IAIrGvJ,OAAAC,eAAWs5C,EAAAv6C,UAAA,kB3FgxYJkB,I2FhxYP,WAEC,MAAOzB,MAAKk7C,gBAAgBC,gB3FixYtBx5C,WAAY,KACZC,aAAc,M2F9wYrBL,QAAAC,eAAWs5C,EAAAv6C,UAAA,Q3FkxYJkB,I2FlxYP,WAEC,MAAOzB,MAAKk7C,gBAAgBE,M3FoxYtBr5C,I2FhxYP,SAAgBC,GAEfhC,KAAKk7C,gBAAgBE,KAAOp5C,G3FixYtBL,WAAY,KACZC,aAAc,M2F9wYrBL,QAAAC,eAAWs5C,EAAAv6C,UAAA,O3FkxYJkB,I2FlxYP,WAEC,MAAOzB,MAAKk7C,gBAAgBG,K3FoxYtBt5C,I2FhxYP,SAAeC,GAEdhC,KAAKk7C,gBAAgBG,IAAMr5C,G3FixYrBL,WAAY,KACZC,aAAc,M2F9wYrBL,QAAAC,eAAWs5C,EAAAv6C,UAAA,gB3FkxYJkB,I2FlxYP,WAEC,MAAOzB,MAAKk7C,gBAAgBI,e3FoxYtBv5C,I2FhxYP,SAAwBC,GAEvBhC,KAAKk7C,gBAAgBI,cAAgBt5C,G3FixY/BL,WAAY,KACZC,aAAc,M2F/wYrBL,QAAAC,eAAWs5C,EAAAv6C,UAAA,S3FkxYJkB,I2FlxYP,WAEC,MAAOzB,MAAKu7C,Q3FmxYNx5C,I2FhxYP,SAAiBC,GAEhBhC,KAAKu7C,OAASv5C,CACdhC,MAAKu6C,qB3FixYC54C,WAAY,KACZC,aAAc,M2F/wYrBL,QAAAC,eAAWs5C,EAAAv6C,UAAA,kB3FkxYJwB,I2FlxYP,SAA0BC,GAEzB,GAAIhC,KAAKk7C,gBAAiB,CACzBl7C,KAAKk7C,gBAAgBvwC,oBAAoBwB,EAAgBG,eAAgBtM,KAAKg7C,oCAE/Eh7C,KAAKk7C,gBAAkBl5C,CAEvB,IAAIhC,KAAKk7C,gBAAiB,CACzBl7C,KAAKk7C,gBAAgB1wC,iBAAiB2B,EAAgBG,eAAgBtM,KAAKg7C,oCAE5Eh7C,KAAKu6C,qB3FkxYC54C,WAAY,KACZC,aAAc,M2FhxYbk5C,GAAAv6C,UAAA06C,0BAAR,SAAkCnwC,GAEjC9K,KAAKu6C,oBAICO,GAAAv6C,UAAAi6C,cAAP,WAECx6C,KAAKm6C,SAAS/rC,SAASpO,KAAKk7C,gBAAgBlmC,OAE5C,IAAIwmC,GAAYx7C,KAAKu7C,OAAOn8C,CAC5B,IAAIq8C,GAAYz7C,KAAKu7C,OAAOr7C,CAC5B,IAAIw7C,GAAY17C,KAAKu7C,OAAO5lC,CAC5B,IAAIgmC,IAAa37C,KAAKu7C,OAAOt7C,EAAI,GACjC,IAAI27C,GAAeJ,GAAM,EAAG,GAAK,CACjC,IAAIK,GAAeJ,GAAM,EAAG,GAAK,CACjC,IAAIt7C,GAAa,GAAIiN,GAASwuC,EAAOC,EAAO,EAAG,EAC/C,IAAIC,GAAmB97C,KAAKm6C,SAAS73C,OACrCw5C,GAAQx/B,QACR,IAAIvB,GAAa+gC,EAAQ/lC,gBAAgB5V,EACzCH,MAAKm6C,SAASv/B,UAAU,EAAGza,EAC3B,IAAIf,IAAY2b,EAAEzN,EAAEnN,EAAEmN,EAAIyN,EAAExN,EAAEpN,EAAEoN,EAAIwN,EAAEvN,EAAErN,EAAEqN,EAAIuN,EAAE1H,EAAElT,EAAEkT,IAAImoC,EAAGzgC,EAAEzN,EAAImuC,EAAG1gC,EAAExN,EAAImuC,EAAG3gC,EAAEvN,EAAImuC,EAAG5gC,EAAE1H,EACxFrT,MAAKm6C,SAASz/B,YAAY,EAAG,GAAItN,GAASouC,EAAGp8C,EAAGq8C,EAAGr8C,EAAGs8C,EAAGt8C,EAAGu8C,EAAGv8C,IAEjE,OAAA07C,IA1GyCb,EA4GLn6C,GAAAJ,QAA3Bo7C,I3FgxYN5uC,yCAAyC,yCAAyCoF,gCAAgC,gCAAgCqpC,6CAA6C,+CAA+CoB,+DAA+D,SAASn9C,EAAQkB,EAAOJ,GACxU,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD;QAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Fx4YtB,IAAO4S,GAAarU,EAAa,qCACjC,IAAOwO,GAAQxO,EAAe,gCAC9B,IAAOq7C,GAAcr7C,EAAa,6CAElC,IAAMo9C,GAA+B,SAAAt7C,GAASX,EAAxCi8C,EAA+Bt7C,EAQpC,SARKs7C,GAQO39B,EAAaG,EAAaF,EAAaG,GAElD/d,EAAAf,KAAAK,KACAA,MAAKi8C,MAAQ59B,CACbre,MAAKk8C,MAAQ19B,CACbxe,MAAKm8C,MAAQ79B,CACbte,MAAKo8C,MAAQ39B,EAGdld,OAAAC,eAAWw6C,EAAAz7C,UAAA,Q5Fk4YJkB,I4Fl4YP,WAEC,MAAOzB,MAAKi8C,O5Fm4YNl6C,I4Fh4YP,SAAgBC,GAEfhC,KAAKi8C,MAAQj6C,CACbhC,MAAKu6C,qB5Fi4YC54C,WAAY,KACZC,aAAc,M4F/3YrBL,QAAAC,eAAWw6C,EAAAz7C,UAAA,Q5Fk4YJkB,I4Fl4YP,WAEC,MAAOzB,MAAKk8C,O5Fm4YNn6C,I4Fh4YP,SAAgBC,GAEfhC,KAAKk8C,MAAQl6C,CACbhC,MAAKu6C,qB5Fi4YC54C,WAAY,KACZC,aAAc,M4F/3YrBL,QAAAC,eAAWw6C,EAAAz7C,UAAA,Q5Fk4YJkB,I4Fl4YP,WAEC,MAAOzB,MAAKm8C,O5Fm4YNp6C,I4Fh4YP,SAAgBC,GAEfhC,KAAKm8C,MAAQn6C,CACbhC,MAAKu6C,qB5Fi4YC54C,WAAY,KACZC,aAAc,M4F/3YrBL,QAAAC,eAAWw6C,EAAAz7C,UAAA,Q5Fk4YJkB,I4Fl4YP,WAEC,MAAOzB,MAAKo8C,O5Fm4YNr6C,I4Fh4YP,SAAgBC,GAEfhC,KAAKo8C,MAAQp6C,CACbhC,MAAKu6C,qB5Fi4YC54C,WAAY,KACZC,aAAc,M4F93Ydo6C,GAAAz7C,UAAA87C,UAAP,SAAiBC,EAAWC,EAAWC,GAEtC,GAAIroC,GAAa,GAAI/G,GAASkvC,GAAKC,EAAIC,EAAI,EAC3CroC,GAAInU,KAAKy8C,mBAAmB1mC,gBAAgB5B,EAE5CA,GAAE3G,EAAIgvC,CAEN,OAAOroC,GAID6nC,GAAAz7C,UAAA+B,MAAP,WAEC,GAAIA,GAAwC,GAAI05C,GAAgCh8C,KAAKi8C,MAAOj8C,KAAKk8C,MAAOl8C,KAAKm8C,MAAOn8C,KAAKo8C,MACzH95C,GAAM83C,OAASp6C,KAAKo6C,MACpB93C,GAAM+3C,MAAQr6C,KAAKq6C,KACnB/3C,GAAMg4C,cAAgBt6C,KAAKs6C,aAC3B,OAAOh4C,GAID05C,GAAAz7C,UAAAi6C,cAAP,WAEC,GAAIzmC,GAAmBd,EAAce,kBACrC,IAAIX,GAAW,GAAGrT,KAAKk8C,MAAQl8C,KAAKi8C,MACpC,IAAI7lC,GAAW,GAAGpW,KAAKo8C,MAAQp8C,KAAKm8C,MACpC,IAAIl8C,GAAW,GAAGD,KAAKq6C,MAAQr6C,KAAKo6C,OAEpCrmC,GAAI,GAAK,EAAEV,CACXU,GAAI,GAAK,EAAEqC,CACXrC,GAAI,IAAM9T,CACV8T,GAAI,MAAQ/T,KAAKk8C,MAAQl8C,KAAKi8C,OAAO5oC,CACrCU,GAAI,MAAQ/T,KAAKo8C,MAAQp8C,KAAKm8C,OAAO/lC,CACrCrC,GAAI,KAAO/T,KAAKo6C,OAAOn6C,CACvB8T,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAClF/T,MAAKm6C,SAASlmC,gBAAgBF,EAE9B/T,MAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAKi8C,KACnHj8C,MAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAKk8C,KACnHl8C,MAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAKm8C,KACnHn8C,MAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAKo8C,KACpHp8C,MAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,IAAM18C,KAAKo6C,MAClHp6C,MAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAKq6C,KAErHr6C,MAAKy6C,gBAAkB,MAEzB,OAAAuB,IA7G8C/B,EA+G9Cn6C,GAAyCJ,QAAhCs8C,I5F03YNjpC,qCAAqC,qCAAqCzB,gCAAgC,gCAAgCqpC,6CAA6C,+CAA+CgC,sDAAsD,SAAS/9C,EAAQkB,EAAOJ,GACvT,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6Fl/YtB,IAAO4S,GAAarU,EAAa,qCACjC,IAAOwO,GAAQxO,EAAe,gCAC9B,IAAOq7C,GAAcr7C,EAAa,6CAElC,IAAMg+C,GAAsB,SAAAl8C,GAASX,EAA/B68C,EAAsBl8C,EAO3B,SAPKk8C,GAOOC,GAAA,GAAAA,QAAA,GAA6B,CAA7BA,EAAA,IAEXn8C,EAAAf,KAAAK,KACAA,MAAK88C,kBAAoBD,EAG1Bt7C,OAAAC,eAAWo7C,EAAAr8C,UAAA,oB7F8+YJkB,I6F9+YP,WAEC,MAAOzB,MAAK88C,mB7F++YN/6C,I6F5+YP,SAA4BC,GAE3B,GAAIA,GAAShC,KAAK88C,kBAAmB,CACpC,OAED98C,KAAK88C,kBAAoB96C,CACzBhC,MAAKu6C,qB7F6+YC54C,WAAY,KACZC,aAAc,M6F1+Ydg7C,GAAAr8C,UAAA87C,UAAP,SAAiBC,EAAWC,EAAWC,GAEtC,GAAIroC,GAAa,GAAI/G,GAASkvC,EAAKt8C,KAAKgV,OAAOH,QAAQ,KAAM0nC,EAAKv8C,KAAKgV,OAAOH,QAAQ,IAAK2nC,EAAI,EAC/FroC,GAAInU,KAAKy8C,mBAAmB1mC,gBAAgB5B,EAG5CA,GAAE3G,EAAIgvC,CAEN,OAAOroC,GAIDyoC,GAAAr8C,UAAA+B,MAAP,WAEC,GAAIA,GAA+B,GAAIs6C,EACvCt6C,GAAM83C,OAASp6C,KAAKo6C,MACpB93C,GAAM+3C,MAAQr6C,KAAKq6C,KACnB/3C,GAAMg4C,cAAgBt6C,KAAKs6C,aAC3Bh4C,GAAMu6C,iBAAmB78C,KAAK88C,iBAC9B,OAAOx6C,GAIDs6C,GAAAr8C,UAAAi6C,cAAP,WAEC,GAAIzmC,GAAmBd,EAAce,kBACrChU,MAAK+8C,MAAQ/8C,KAAK88C,kBAAkB,EACpC98C,MAAKg9C,MAAQh9C,KAAK+8C,MAAM/8C,KAAKs6C,aAE7B,IAAI2C,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIp9C,KAAKq9C,cAAc/vC,GAAK,GAAKtN,KAAKq9C,cAAc9vC,GAAK,GAAKvN,KAAKq9C,cAAc5vC,OAASzN,KAAKs9C,WAAW7vC,OAASzN,KAAKq9C,cAAc3vC,QAAU1N,KAAKs9C,WAAW5vC,OAAQ,CAGvKuvC,GAAQj9C,KAAKg9C,KACbE,GAAQl9C,KAAKg9C,KACbG,IAAOn9C,KAAK+8C,KACZK,GAASp9C,KAAK+8C,KAEdhpC,GAAI,GAAK,GAAG/T,KAAK88C,kBAAkB98C,KAAKs6C,cACxCvmC,GAAI,GAAK,EAAE/T,KAAK88C,iBAChB/oC,GAAI,IAAM,GAAG/T,KAAKq6C,MAAQr6C,KAAKo6C,OAC/BrmC,GAAI,IAAM/T,KAAKo6C,QAAQp6C,KAAKo6C,OAASp6C,KAAKq6C,MAC1CtmC,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAM,CACtGA,GAAI,IAAM,MAEJ,CAEN,GAAIwpC,GAAgBv9C,KAAKg9C,OAAOh9C,KAAKs9C,WAAW7vC,MAAMzN,KAAKq9C,cAAc5vC,MACzE,IAAI+vC,GAAcx9C,KAAK+8C,OAAO/8C,KAAKs9C,WAAW5vC,OAAO1N,KAAKq9C,cAAc3vC,OACxE,IAAI+vC,GAAgBz9C,KAAKg9C,OAAOh9C,KAAKq9C,cAAc/vC,EAAE,EAAItN,KAAKs9C,WAAW7vC,OAAOzN,KAAKq9C,cAAc5vC,MAAQzN,KAAKg9C,KAChH,IAAIU,IAAiB19C,KAAK+8C,OAAO/8C,KAAKq9C,cAAc9vC,EAAE,EAAIvN,KAAKs9C,WAAW5vC,QAAQ1N,KAAKq9C,cAAc3vC,OAAS1N,KAAK+8C,KAEnHE,GAAOQ,EAASF,CAChBL,GAAQO,EAASF,CACjBJ,GAAMO,EAASF,CACfJ,GAASM,EAASF,CAElBzpC,GAAI,GAAK,EAAE,GAAGmpC,EAAQD,EACtBlpC,GAAI,IAAM,EAAE,GAAGopC,EAAMC,EACrBrpC,GAAI,IAAM,GAAG/T,KAAKq6C,MAAQr6C,KAAKo6C,OAE/BrmC,GAAI,KAAOmpC,EAAQD,IAAOC,EAAQD,EAClClpC,GAAI,KAAOqpC,EAASD,IAAMC,EAASD,EACnCppC,GAAI,IAAM/T,KAAKo6C,QAAQp6C,KAAKo7C,KAAOp7C,KAAKq7C,IAExCtnC,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAClFA,GAAI,IAAM,EAGX/T,KAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAMO,CAC9Gj9C,MAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAMQ,CAC9Gl9C,MAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAMS,CAC9Gn9C,MAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAMU,CAC/Gp9C,MAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,IAAM18C,KAAKo6C,MAClHp6C,MAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAKq6C,KAErHr6C,MAAKm6C,SAASlmC,gBAAgBF,EAE9B/T,MAAKy6C,gBAAkB,MAEzB,OAAAmC,IAhHqC3C,EAkHNn6C,GAAAJ,QAAvBk9C,I7F49YL7pC,qCAAqC,qCAAqCzB,gCAAgC,gCAAgCqpC,6CAA6C,+CAA+CD,qDAAqD,SAAS97C,EAAQkB,EAAOJ,GACtT,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8FvlZtB,IAAO4S,GAAarU,EAAa,qCACjC,IAAOwO,GAAQxO,EAAe,gCAC9B,IAAOi7C,GAAgBj7C,EAAa,+CACpC,IAAOq7C,GAAcr7C,EAAa,6CAElC,IAAMkiB,GAAqB,SAAApgB,GAASX,EAA9B+gB,EAAqBpgB,EAS1B,SATKogB,GASO68B,EAAyBC,GAAzB,GAAAD,QAAA,GAAuB,CAAvBA,EAAA,GAAyB,GAAAC,QAAA,GAAsC,CAAtCA,EAAA,aAEpCl9C,EAAAf,KAAAK,KAAM49C,EATC59C,MAAA69C,aAAsB,EACtB79C,MAAA89C,aAAsB,GACtB99C,MAAA+9C,cAAuB,EACvB/9C,MAAAg+C,cAAuB,GACvBh+C,MAAAi+C,qBAA+B,IAC/Bj+C,MAAAk+C,qBAA+B,KAKtCl+C,MAAK29C,YAAcA,EAMpBp8C,OAAAC,eAAWsf,EAAAvgB,UAAA,uB9FwlZJkB,I8FxlZP,WAEC,MAAOzB,MAAKi+C,sB9FylZNl8C,I8FtlZP,SAA+BC,GAE9B,GAAIhC,KAAKi+C,sBAAwBj8C,EAChC,MAEDhC,MAAKi+C,qBAAuBj8C,CAE5B,IAAIhC,KAAKi+C,qBACRj+C,KAAKu6C,qB9FqlZA54C,WAAY,KACZC,aAAc,M8FhlZrBL,QAAAC,eAAWsf,EAAAvgB,UAAA,uB9FslZJkB,I8FtlZP,WAEC,MAAOzB,MAAKk+C,sB9FulZNn8C,I8FplZP,SAA+BC,GAE9B,GAAIhC,KAAKk+C,sBAAwBl8C,EAChC,MAEDhC,MAAKk+C,qBAAuBl8C,CAE5BhC,MAAKu6C,qB9FmlZC54C,WAAY,KACZC,aAAc,M8F9kZrBL,QAAAC,eAAWsf,EAAAvgB,UAAA,e9FolZJkB,I8FplZP,WAEC,MAAOzB,MAAK69C,c9FqlZN97C,I8FllZP,SAAuBC,GAEtB,GAAIhC,KAAK69C,cAAgB77C,EACxB,MAEDhC,MAAK69C,aAAe77C,CAEpBhC,MAAKu6C,qB9FilZC54C,WAAY,KACZC,aAAc,M8F5kZrBL,QAAAC,eAAWsf,EAAAvgB,UAAA,e9FklZJkB,I8FllZP,WAEC,MAAOzB,MAAK89C,c9FmlZN/7C,I8FhlZP,SAAuBC,GAEtB,GAAIhC,KAAK89C,cAAgB97C,EACxB,MAEDhC,MAAK89C,aAAe97C,CAEpBhC,MAAKu6C,qB9F+kZC54C,WAAY,KACZC,aAAc,M8F1kZrBL,QAAAC,eAAWsf,EAAAvgB,UAAA,gB9FglZJkB,I8FhlZP,WAEC,MAAOzB,MAAK+9C,e9FilZNh8C,I8F9kZP,SAAwBC,GAEvB,GAAIhC,KAAK+9C,eAAiB/7C,EACzB,MAEDhC,MAAK+9C,cAAgB/7C,CAErBhC,MAAKg+C,cAAgB,EAAEv5C,KAAK05C,IAAIn+C,KAAK+9C,cAAct5C,KAAKoO,GAAG,IAE3D7S,MAAKu6C,qB9F4kZC54C,WAAY,KACZC,aAAc,M8FvkZrBL,QAAAC,eAAWsf,EAAAvgB,UAAA,gB9F6kZJkB,I8F7kZP,WAEC,MAAOzB,MAAKg+C,e9F8kZNj8C,I8F3kZP,SAAwBC,GAEvB,GAAIhC,KAAKg+C,eAAiBh8C,EACzB,MAEDhC,MAAKg+C,cAAgBh8C,CAErBhC,MAAKu6C,qB9F0kZC54C,WAAY,KACZC,aAAc,M8FtkZdkf,GAAAvgB,UAAA87C,UAAP,SAAiBC,EAAWC,EAAWC,GAEtC,GAAIroC,GAAa,GAAI/G,GAASkvC,GAAKC,EAAIC,EAAI,EAE3CroC,GAAE7G,GAAKkvC,CACProC,GAAE5G,GAAKivC,CAEProC,GAAInU,KAAKy8C,mBAAmB1mC,gBAAgB5B,EAG5CA,GAAE3G,EAAIgvC,CAEN,OAAOroC,GAID2M,GAAAvgB,UAAA+B,MAAP,WAEC,GAAIA,GAA8B,GAAIwe,GAAsB9gB,KAAK69C,aACjEv7C,GAAM83C,OAASp6C,KAAKo6C,MACpB93C,GAAM+3C,MAAQr6C,KAAKq6C,KACnB/3C,GAAMg4C,cAAgBt6C,KAAKs6C,aAC3Bh4C,GAAM87C,mBAAqBp+C,KAAKo+C,kBAChC,OAAO97C,GAIDwe,GAAAvgB,UAAAi6C,cAAP,WAEC,GAAIzmC,GAAmBd,EAAce,kBAErC,IAAIhU,KAAKk+C,qBAAsB,CAC9B,GAAIl+C,KAAKi+C,qBACRj+C,KAAKg+C,cAAgBh+C,KAAK89C,YAE3B99C,MAAK69C,aAAep5C,KAAK45C,KAAK,GAAIr+C,KAAKq9C,cAAc3vC,OAAO1N,KAAK89C,cAAc,IAAIr5C,KAAKoO,EACxF7S,MAAK+9C,cAAgBt5C,KAAK45C,KAAK,GAAIr+C,KAAKq9C,cAAc5vC,MAAMzN,KAAKg+C,eAAe,IAAIv5C,KAAKoO,OACnF,CACN7S,KAAK89C,aAAe,GAAI99C,KAAKq9C,cAAc3vC,OAAOjJ,KAAK05C,IAAIn+C,KAAK69C,aAAap5C,KAAKoO,GAAG,IAErF,IAAI7S,KAAKi+C,qBACRj+C,KAAKg+C,cAAgBh+C,KAAK89C,iBAE1B99C,MAAKg+C,cAAgB,GAAIh+C,KAAKq9C,cAAc5vC,MAAMhJ,KAAK05C,IAAIn+C,KAAK+9C,cAAct5C,KAAKoO,GAAG,KAGxF,GAAIyrC,IAAWt+C,KAAKu+C,UAAUv+C,KAAKg+C,aACnC,IAAIQ,IAAW,EAAIx+C,KAAKu+C,WAAWv+C,KAAKg+C,aACxC,IAAIS,IAAWz+C,KAAK0+C,UAAU1+C,KAAK89C,YACnC,IAAIa,IAAW,EAAI3+C,KAAK0+C,WAAW1+C,KAAK89C,YAExC,IAAIb,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,E9F8jZE,I8F3jZFK,MAAmBa,EAAUE,GAASx+C,KAAKq9C,cAAc/vC,EAAIgxC,EAAQt+C,KAAKq9C,cAAc5vC,MAC5F,IAAIiwC,IAAkBe,EAAUE,GAAS3+C,KAAKq9C,cAAc9vC,EAAIkxC,EAAQz+C,KAAKq9C,cAAc3vC,MAE3FuvC,GAAOQ,GAAUe,EAAUF,GAASt+C,KAAKs9C,WAAW7vC,KACpDyvC,GAAQO,CACRN,GAAMO,CACNN,GAASM,GAAUiB,EAAUF,GAASz+C,KAAKs9C,WAAW5vC,MAEtDqG,GAAI,GAAK,GAAGmpC,EAAQD,EACpBlpC,GAAI,GAAK,GAAGqpC,EAASD,EACrBppC,GAAI,IAAMmpC,EAAQD,IAAOC,EAAQD,EACjClpC,GAAI,IAAMqpC,EAASD,IAAMC,EAASD,EAClCppC,GAAI,KAAO/T,KAAKq6C,MAAQr6C,KAAKo6C,SAASp6C,KAAKq6C,MAAQr6C,KAAKo6C,OACxDrmC,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAM,CACpFA,GAAI,KAAO,EAAE/T,KAAKq6C,MAAMr6C,KAAKo6C,QAAQp6C,KAAKq6C,MAAQr6C,KAAKo6C,OAEvD,IAAIp6C,KAAKo+C,oBAAsBvE,EAAiBE,aAC/ChmC,EAAI,IAAMA,EAAI,EAEf/T,MAAKm6C,SAASlmC,gBAAgBF,EAE9B/T,MAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAKo6C,OAAO6C,CAClEj9C,MAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAKo6C,OAAO8C,CAClEl9C,MAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAKo6C,OAAO+C,CAClEn9C,MAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,IAAM18C,KAAKo6C,OAAOgD,CAEnEp9C,MAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAKq6C,MAAM4C,CACnEj9C,MAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAKq6C,MAAM6C,CACnEl9C,MAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAKq6C,MAAM8C,CACnEn9C,MAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAKq6C,MAAM+C,CAEnEp9C,MAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,GAAK18C,KAAK08C,iBAAiB,IAAM18C,KAAKo6C,MAClHp6C,MAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAK08C,iBAAiB,IAAM18C,KAAKq6C,KAErHr6C,MAAKy6C,gBAAkB,MAIzB,OAAA35B,IAhOoCm5B,EAkOLn6C,GAAAJ,QAAtBohB,I9FmjZN/N,qCAAqC,qCAAqCzB,gCAAgC,gCAAgCsoC,+CAA+C,+CAA+Ce,6CAA6C,+CAA+CA,8CAA8C,SAAS/7C,EAAQkB,EAAOJ,GAC7Y,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+F/xZtB,IAAO2S,GAAQpU,EAAe,gCAC9B,IAAO+nB,GAAS/nB,EAAc,iCAE9B,IAAO0L,GAAe1L,EAAa,yCACnC,IAAOuN,GAAevN,EAAa,yCACnC,IAAOqJ,GAAmBrJ,EAAY,6CAGtC,IAAMq7C,GAAc,SAAAv5C,GAASX,EAAvBk6C,EAAcv5C,EAkBnB,SAlBKu5C,GAkBO2D,GAAA,GAAAA,QAAA,GAAsC,CAAtCA,EAAA,aAEXl9C,EAAAf,KAAAK,KAlBMA,MAAAm6C,SAAoB,GAAInnC,EACxBhT,MAAAq9C,cAA0B,GAAI12B,EAC9B3mB,MAAAs9C,WAAuB,GAAI32B,EAC3B3mB,MAAAo6C,OAAgB,EAChBp6C,MAAAq6C,MAAe,GACfr6C,MAAAs6C,cAAuB,CAEvBt6C,MAAAy6C,gBAA0B,IAC1Bz6C,MAAA08C,mBAEA18C,MAAAu+C,UAAmB,EACnBv+C,MAAA0+C,UAAmB,EAGlB1+C,MAAA4+C,qBAA+B,IAMtC5+C,MAAK49C,iBAAmBA,EAMzBr8C,OAAAC,eAAWy4C,EAAA15C,UAAA,oB/FwxZJkB,I+FxxZP,WAEC,MAAOzB,MAAKo+C,oB/FyxZNr8C,I+FtxZP,SAA4BC,GAE3B,GAAIhC,KAAKo+C,oBAAsBp8C,EAC9B,MAEDhC,MAAKo+C,mBAAqBp8C,CAE1BhC,MAAKu6C,qB/FqxZC54C,WAAY,KACZC,aAAc,M+FnxZrBL,QAAAC,eAAWy4C,EAAA15C,UAAA,kB/FsxZJkB,I+FtxZP,WAEC,MAAOzB,MAAK08C,kB/FuxZN36C,I+FpxZP,SAA0Bo5C,GAEzBn7C,KAAK08C,iBAAmBvB,G/FqxZlBx5C,WAAY,KACZC,aAAc,M+FnxZrBL,QAAAC,eAAWy4C,EAAA15C,UAAA,U/FsxZJkB,I+FtxZP,WAEC,GAAIzB,KAAKy6C,gBAAiB,CACzBz6C,KAAKw6C,eACLx6C,MAAKy6C,gBAAkB,MAExB,MAAOz6C,MAAKm6C,U/FuxZNp4C,I+FpxZP,SAAkBC,GAEjBhC,KAAKm6C,SAAWn4C,CAChBhC,MAAKu6C,qB/FqxZC54C,WAAY,KACZC,aAAc,M+FnxZrBL,QAAAC,eAAWy4C,EAAA15C,UAAA,Q/FsxZJkB,I+FtxZP,WAEC,MAAOzB,MAAKo6C,Q/FuxZNr4C,I+FpxZP,SAAgBC,GAEf,GAAIA,GAAShC,KAAKo6C,OAAQ,CACzB,OAEDp6C,KAAKo6C,OAASp4C,CACdhC,MAAKu6C,qB/FqxZC54C,WAAY,KACZC,aAAc,M+FnxZrBL,QAAAC,eAAWy4C,EAAA15C,UAAA,W/FsxZJkB,I+FtxZP,WAEC,MAAOzB,MAAKu+C,W/FuxZNx8C,I+FpxZP,SAAmBC,GAElB,GAAIhC,KAAKu+C,WAAav8C,EACrB,MAEDhC,MAAKu+C,UAAYv8C,G/FoxZXL,WAAY,KACZC,aAAc,M+FlxZrBL,QAAAC,eAAWy4C,EAAA15C,UAAA,W/FqxZJkB,I+FrxZP,WAEC,MAAOzB,MAAK0+C,W/FsxZN38C,I+FnxZP,SAAmBC,GAElB,GAAIhC,KAAK0+C,WAAa18C,EACrB,MAEDhC,MAAK0+C,UAAY18C,G/FmxZXL,WAAY,KACZC,aAAc,M+FjxZrBL,QAAAC,eAAWy4C,EAAA15C,UAAA,O/FoxZJkB,I+FpxZP,WAEC,MAAOzB,MAAKq6C,O/FqxZNt4C,I+FlxZP,SAAeC,GAEd,GAAIA,GAAShC,KAAKq6C,MAAO,CACxB,OAEDr6C,KAAKq6C,MAAQr4C,CACbhC,MAAKu6C,qB/FmxZC54C,WAAY,KACZC,aAAc,M+FjxZdq4C,GAAA15C,UAAA2nB,QAAP,SAAe22B,GAEd,GAAI1qC,GAAanU,KAAKgV,OAAOe,gBAAgB8oC,EAC7C1qC,GAAE7G,EAAI6G,EAAE7G,EAAE6G,EAAEd,CACZc,GAAE5G,GAAK4G,EAAE5G,EAAE4G,EAAEd,CAGbc,GAAE3G,EAAIqxC,EAAQrxC,CAEd,OAAO2G,GAGR5S,QAAAC,eAAWy4C,EAAA15C,UAAA,sB/FgxZJkB,I+FhxZP,WAEC,GAAIzB,KAAK4+C,qBAAsB,CAC9B,IAAK5+C,KAAK8+C,cACT9+C,KAAK8+C,cAAgB,GAAI9rC,EAE1BhT,MAAK8+C,cAAc1wC,SAASpO,KAAKgV,OACjChV,MAAK8+C,cAAcxiC,QACnBtc,MAAK4+C,qBAAuB,MAE7B,MAAO5+C,MAAK8+C,e/FgxZNn9C,WAAY,KACZC,aAAc,M+F9wZdq4C,GAAA15C,UAAA87C,UAAP,SAAiBC,EAAWC,EAAWC,GAEtC,KAAM,IAAIv0C,GAGJgyC,GAAA15C,UAAA+B,MAAP,WAEC,KAAM,IAAI2F,GAGX1G,QAAAC,eAAWy4C,EAAA15C,UAAA,iB/F6wZJkB,I+F7wZP,WAEC,MAAOzB,MAAKs6C,e/F8wZNv4C,I+F3wZP,SAAyBC,GAExB,GAAIhC,KAAKs6C,eAAiBt4C,EACzB,MAEDhC,MAAKs6C,cAAgBt4C,CAErBhC,MAAKu6C,qB/F0wZC54C,WAAY,KACZC,aAAc,M+FxwZdq4C,GAAA15C,UAAAg6C,kBAAP,WAECv6C,KAAKy6C,gBAAkB,IACvBz6C,MAAK4+C,qBAAuB,IAC5B5+C,MAAK6K,cAAc,GAAIsB,GAAgBA,EAAgBG,eAAgBtM,OAGjEi6C,GAAA15C,UAAAi6C,cAAP,WAEC,KAAM,IAAIvyC,GAGJgyC,GAAA15C,UAAAw+C,oBAAP,SAA2BzxC,EAAUC,EAAUE,EAAcC,GAE5D1N,KAAKq9C,cAAc/vC,EAAIA,CACvBtN,MAAKq9C,cAAc9vC,EAAIA,CACvBvN,MAAKq9C,cAAc5vC,MAAQA,CAC3BzN,MAAKq9C,cAAc3vC,OAASA,CAC5B1N,MAAKu6C,oBAGCN,GAAA15C,UAAAy+C,iBAAP,SAAwB1xC,EAAUC,EAAUE,EAAcC,GAEzD1N,KAAKs9C,WAAWhwC,EAAIA,CACpBtN,MAAKs9C,WAAW/vC,EAAIA,CACpBvN,MAAKs9C,WAAW7vC,MAAQA,CACxBzN,MAAKs9C,WAAW5vC,OAASA,CACzB1N,MAAKu6C,oBAEP,OAAAN,IAzM6B3vC,EA2MLxK,GAAAJ,QAAfu6C,I/FqwZNlyC,6CAA6C,6CAA6CsC,yCAAyC,yCAAyC6B,yCAAyC,yCAAyC2K,gCAAgC,gCAAgC6P,iCAAiC,mCAAmCu4B,+BAA+B,SAASrgD,EAAQkB,EAAOJ,GgGx9Z5b,GAAMw/C,GAAQ,WAAd,QAAMA,MAKSA,EAAAC,EAAoB,EAKpBD,GAAAE,UAA4B,EAK5BF,GAAAG,MAAwB,QAKxBH,GAAAI,EAAoB,EAKpBJ,GAAAz8B,KAAuB,QAKvBy8B,GAAAK,UAA4B,GAK5BL,GAAAM,UAA4B,GAK5BN,GAAAO,UAA4B,CAK5BP,GAAA3yB,KAAuB,QAKvB2yB,GAAAQ,EAAoB,EAKpBR,GAAAS,UAA4B,EAK5BT,GAAAU,aAA+B,QAK/BV,GAAAW,WAA6B,QAK7BX,GAAAY,MAAwB,GAMxBZ,GAAAa,QAA0B,EAK1Bb,GAAAc,QAA0B,EAU1Bd,GAAAe,EAAoB,EAKpBf,GAAAgB,OAAyB,EAKzBhB,GAAAiB,KAAuB,EAKvBjB,GAAAkB,IAAsB,QAKtBlB,GAAAmB,EAAoB,EAKpBnB,GAAAoB,IAAsB,EAKtBpB,GAAAqB,MAAwB,EAKxBrB,GAAAsB,MAAwB,GAKxBtB,GAAAuB,OAAyB,EAKzBvB,GAAAwB,KAAuB,QAKvBxB,GAAAyB,EAAoB,EAKpBzB,GAAA0B,GAAqB,GAKrB1B,GAAA2B,IAAsB,GAKtB3B,GAAA4B,IAAsB,GAKtB5B,GAAA6B,IAAsB,GAKtB7B,GAAA8B,IAAsB,GAKtB9B,GAAA+B,IAAsB,GAKtB/B,GAAAgC,IAAsB,GAKtBhC,GAAAiC,GAAqB,GAKrBjC,GAAAkC,GAAqB,GAKrBlC,GAAAmC,GAAqB,GAKrBnC,GAAAoC,GAAqB,GAKrBpC,GAAAqC,GAAqB,GAKrBrC,GAAAsC,GAAqB,GAKrBtC,GAAAuC,GAAqB,GAKrBvC,GAAAwC,GAAqB,GAKrBxC,GAAAyC,aAA+B,QAK/BzC,GAAA0C,EAAoB,EAKpB1C,GAAA1yB,MAAwB,QAKxB0yB,GAAA2C,MAAwB,QAKxB3C,GAAA4C,EAAoB,EAKpB5C,GAAA6C,KAAuB,QAKvB7C,GAAA8C,KAAuB,EAKvB9C,GAAA+C,EAAoB,EAKpB/C,GAAAgD,KAAuB,QAKvBhD,GAAAiD,MAAwB,QAKxBjD,GAAAkD,OAAyB,EAKzBlD,GAAAmD,EAAoB,EAKpBnD,GAAAoD,EAAoB,EAKpBpD,GAAAqD,cAAuB,OAKvBrD,GAAAsD,cAAuB,OAKvBtD,GAAAuD,qBAA8B,QAK9BvD,GAAAwD,kBAA2B,OAK3BxD,GAAAyD,eAAwB,QAKxBzD,GAAA0D,mBAA4B,QAK5B1D,GAAA2D,mBAA4B,OAK5B3D,GAAA4D,kBAA2B,MAK3B5D,GAAA6D,YAAqB,KAKrB7D,GAAA8D,gBAAyB,MAKzB9D,GAAA+D,WAAoB,IAKpB/D,GAAAgE,YAAqB,KAKrBhE,GAAAiE,YAAqB,KAKrBjE,GAAAkE,YAAqB,KAKrBlE,GAAAmE,YAAqB,KAKrBnE,GAAAoE,YAAqB,KAKrBpE,GAAAqE,YAAqB,KAKrBrE,GAAAsE,YAAqB,KAKrBtE,GAAAuE,YAAqB,KAKrBvE,GAAAwE,YAAqB,KAKrBxE,GAAAyE,YAAqB,KAKrBzE,GAAA0E,WAAoB,IAKpB1E,GAAA2E,YAAqB,KAKrB3E,GAAA4E,YAAqB,KAKrB5E,GAAA6E,YAAqB,KAKrB7E,GAAA8E,YAAqB,KAKrB9E,GAAA+E,YAAqB,KAKrB/E,GAAAgF,YAAqB,KAKrBhF,GAAAiF,YAAqB,KAKrBjF,GAAAkF,YAAqB,KAKrBlF,GAAAmF,YAAqB,KAKrBnF,GAAAoF,YAAqB,KAKrBpF,GAAAqF,WAAoB,IAKpBrF,GAAAsF,YAAqB,KAKrBtF,GAAAuF,YAAqB,KAKrBvF,GAAAwF,YAAqB,KAKrBxF,GAAAyF,YAAqB,KAKrBzF,GAAA0F,YAAqB,KAKrB1F,GAAA2F,YAAqB,KAKrB3F,GAAA4F,WAAoB,IAKpB5F,GAAA6F,WAAoB,IAKpB7F,GAAA8F,WAAoB,IAKpB9F,GAAA+F,WAAoB,IAKpB/F,GAAAgG,WAAoB,IAKpBhG,GAAAiG,WAAoB,IAKpBjG,GAAAkG,aAAsB,MAKtBlG,GAAAmG,aAAsB,MAKtBnG,GAAAoG,aAAsB,MAKtBpG,GAAAqG,eAAwB,QAKxBrG,GAAAsG,mBAA4B,QAK5BtG,GAAAuG,mBAA4B,OAK5BvG,GAAAwG,kBAA2B,MAK3BxG,GAAAyG,aAAsB,MAKtBzG,GAAA0G,mBAA4B,QAK5B1G,GAAA2G,aAAsB,MAKtB3G,GAAA4G,iBAA0B,MAK1B5G,GAAA6G,eAAwB,MAKxB7G,GAAA8G,cAAuB,OAKvB9G,GAAA+G,aAAsB,MAKtB/G,GAAAgH,cAAuB,OAKvBhH,GAAAiH,oBAA6B,UAK7BjH,GAAAkH,aAAsB,MAKtBlH,GAAAmH,cAAuB,OAKvBnH,GAAAoH,mBAA4B,OAK5BpH,GAAAqH,mBAA4B,SAK5BrH,GAAAsH,eAAwB,QAKxBtH,GAAAuH,aAAsB,MAKtBvH,GAAAwH,eAAwB,QAKxBxH,GAAAyH,eAAwB,KAKxBzH,GAAA0H,aAAsB,MAKtB1H,GAAA2H,gBAAyB,IAKzB3H,GAAA4H,aAAsB,MAKtB5H,GAAA6H,EAAoB,EAKpB7H,GAAA8H,KAAuB,QAKvB9H,GAAA+H,KAAuB,EAKvB/H,GAAAgI,YAA8B,GAK9BhI,GAAAiI,KAAuB,QAKvBjI,GAAAkI,EAAoB,EAKpBlI,GAAAmI,aAA+B,QAK/BnI,GAAAoI,KAAuB,QAKvBpI,GAAAqI,MAAwB,GAKxBrI,GAAAsI,EAAoB,EAKpBtI,GAAAuI,KAAuB,QAKvBvI,GAAAwI,SAA2B,EAK3BxI,GAAAyI,SAA2B,EAK3BzI,GAAA0I,SAA2B,EAK3B1I,GAAA2I,SAA2B,EAK3B3I,GAAA4I,SAA2B,EAK3B5I,GAAA6I,SAA2B,EAK3B7I,GAAA8I,SAA2B,EAK3B9I,GAAA+I,SAA2B,EAK3B/I,GAAAgJ,SAA2B,EAK3BhJ,GAAAiJ,SAA2B,EAK3BjJ,GAAAkJ,OAAyB,EAKzBlJ,GAAAmJ,SAA2B,EAK3BnJ,GAAAoJ,SAA2B,EAK3BpJ,GAAAqJ,SAA2B,EAK3BrJ,GAAAsJ,SAA2B,EAK3BtJ,GAAAuJ,SAA2B,GAK3BvJ,GAAAwJ,SAA2B,GAK3BxJ,GAAAyJ,SAA2B,GAK3BzJ,GAAA0J,SAA2B,GAK3B1J,GAAA2J,SAA2B,GAK3B3J,GAAA4J,SAA2B,GAK3B5J,GAAA6J,WAA6B,GAK7B7J,GAAA8J,eAAiC,GAKjC9J,GAAA+J,cAAgC,GAKhC/J,GAAAgK,aAA+B,GAK/BhK,GAAAiK,gBAAkC,GAKlCjK,GAAAkK,gBAAkC,GAKlClK,GAAAmK,EAAoB,EAKpBnK,GAAAoK,EAAoB,EAKpBpK,GAAAqK,UAA4B,EAK5BrK,GAAAsK,QAA0B,EAK1BtK,GAAAuK,MAAwB,QAKxBvK,GAAAwK,OAAyB,GAKzBxK,GAAAyK,KAAuB,QAKvBzK,GAAA0K,SAA2B,QAK3B1K,GAAA2K,EAAoB,EAKpB3K,GAAA4K,MAAwB,GAKxB5K,GAAA6K,EAAoB,EAKpB7K,GAAA8K,OAAyB,QAKzB9K,GAAAzyB,IAAsB,QAKtByyB,GAAA+K,OAAyB,QAKzB/K,GAAAgL,MAAwB,EAKxBhL,GAAAiL,aAA+B,GAK/BjL,GAAAkL,EAAoB,EAKpBlL,GAAAmL,OAAyB,QAKzBnL,GAAAoL,UAA4B,GAK5BpL,GAAAqL,MAAwB,QAKxBrL,GAAAsL,MAAwB,EAKxBtL,GAAAuL,cAAgC,QAKhCvL,GAAAwL,aAA+B,QAK/BxL,GAAAyL,MAAwB,GAKxBzL,GAAA0L,MAAwB,EAKxB1L,GAAA2L,KAAuB,QAKvB3L,GAAA4L,SAA2B,QAK3B5L,GAAA6L,EAAoB,EAKpB7L,GAAA8L,IAAsB,CAKtB9L,GAAA+L,EAAoB,EAKpB/L,GAAAgM,GAAqB,EAKrBhM,GAAAiM,EAAoB,EAKpBjM,GAAAkM,IAAsB,QAKtBlM,GAAAmM,EAAoB,EAKpBnM,GAAAoM,EAAoB,EAKpBpM,GAAAqM,EAAoB,EAKpBrM,GAAAsM,OAAyB,QAKzBtM,GAAAuM,EAAoB,EAEnC,OAAAvM,KAEAp/C,GAAkBJ,QAATw/C,OhG4wZH/yB,0CAA0C,SAASvtB,EAAQkB,EAAOJ,GiGzwbxE,GAAO8R,GAAU5S,EAAc,mCAE/B,IAAM4pB,GAAgB,WAAtB,QAAMA,MAESA,EAAA2C,UAAd,SAAwB2Q,EAAkC/U,EAAgBmE,EAAcvC,GAEvF,GAAIuC,GAAS,GAAOvC,EAAa,CAChCmT,EAAQ7K,UAAUlK,EAAKzZ,EAAGyZ,EAAKxZ,EAAGwZ,EAAKtZ,MAAOsZ,EAAKrZ,YAC7C,CACN,GAAIwE,GAAgBV,EAAWW,mBAAmB+Y,EAElD,IAAIvC,EACHmT,EAAQpK,UAAY,QAAUxf,EAAK,GAAK,IAAMA,EAAK,GAAK,IAAMA,EAAK,GAAK,IAAMA,EAAK,GAAG,IAAM,QAE5F4pB,GAAQpK,UAAY,QAAUxf,EAAK,GAAK,IAAMA,EAAK,GAAK,IAAMA,EAAK,GAAK,KAEzE4pB,GAAQzS,SAAStC,EAAKzZ,EAAGyZ,EAAKxZ,EAAGwZ,EAAKtZ,MAAOsZ,EAAKrZ,SAItC8a,GAAAqC,YAAd,SAA0BiR,EAAkC4vB,EAAkB1kC,EAAsB2D,GAEnGmR,EAAQnJ,UAAU+4B,EAAM1kC,EAAW1Z,EAAG0Z,EAAWzZ,EAAGyZ,EAAWvZ,MAAOuZ,EAAWtZ,OAAQid,EAASrd,EAAGqd,EAASpd,EAAGod,EAASld,MAAOkd,EAASjd,QAG7H8a,GAAAyC,MAAd,SAAoB6Q,EAAkC1pB,EAAY4C,EAAewU,EAA+BsB,EAAqBC,EAAoBC,GAExJ8Q,EAAQ/M,MAER,IAAI/Z,GAAU,KACb8mB,EAAQhN,aAAa9Z,EAAO5V,EAAG4V,EAAO9U,EAAG8U,EAAOW,EAAGX,EAAO/U,EAAG+U,EAAOyK,GAAIzK,EAAO0K,GAEhF,IAAIqL,GAAY,KACf+Q,EAAQnJ,UAAUvgB,EAAQ2Y,EAASzd,EAAGyd,EAASxd,EAAGwd,EAAStd,MAAOsd,EAASrd,YAE3EouB,GAAQnJ,UAAUvgB,EAAQ,EAAG,EAE9B0pB,GAAQjN,UAEV,OAAArG,KAE0B1oB,GAAAJ,QAAjB8oB,IjGmwbN/V,mCAAmC,qCAAqCk5C,uCAAuC,SAAS/sD,EAAQkB,EAAOJ,GkGhzb1I,GAAOuI,GAAmBrJ,EAAY,6CAEtC,IAAMgtD,GAAa,WAQlB,QARKA,KAEE5rD,KAAAiO,SAAkB,CAClBjO,MAAAJ,OAAgB,CAChBI,MAAA6rD,MAAe,GAQfD,EAAArrD,UAAAurD,UAAP,SAAiB5rD,GAEhB,KAAM,iBAGA0rD,GAAArrD,UAAAoyC,SAAP,WAEC,KAAM,iBAGAiZ,GAAArrD,UAAAwrD,kBAAP,SAAyB7rD,GAExB,KAAM,iBAGA0rD,GAAArrD,UAAAyrD,iBAAP,WAEC,KAAM,iBAGAJ,GAAArrD,UAAA0rD,mBAAP,SAA0B/rD,GAEzB,KAAM,iBAGA0rD,GAAArrD,UAAAiyC,kBAAP,WAEC,KAAM,iBAGAoZ,GAAArrD,UAAA2rD,iBAAP,SAAwBhsD,GAEvB,KAAM,iBAGA0rD,GAAArrD,UAAAurB,gBAAP,WAEC,KAAM,iBAGA8/B,GAAArrD,UAAA4rD,WAAP,SAAkBjsD,GAEjB,KAAM,iBAGA0rD,GAAArrD,UAAA6rD,YAAP,SAAmB9+C,GAElB,KAAM,iBAGAs+C,GAAArrD,UAAA8rD,UAAP,SAAiBnsD,GAEhB,KAAM,iBAGA0rD,GAAArrD,UAAA+rD,cAAP,SAAqBh/C,GAEpB,KAAM,iBAGAs+C,GAAArrD,UAAA03C,kBAAP,WAEC,KAAM,IAAIhwC,GAAoB,uDAGxB2jD,GAAArrD,UAAA4Q,SAAP,WAEC,MAAO,iBAAmBnR,KAAK6rD,MAAQ,eAAiB7rD,KAAKiO,SAAW,WAAajO,KAAKJ,OAGpFgsD,GAAArrD,UAAAgsD,aAAP,SAAoBC,EAAO5rD,GAE1B,GAAIA,GAASuJ,WAAavJ,EAAQZ,KAAKJ,OAASI,KAAKiO,SACpDrN,EAAQZ,KAAKJ,OAASI,KAAKiO,QAC5B,IAAIrN,EAAQ4rD,EAAM5sD,OAAS4sD,EAAMv+C,SAChCrN,EAAQ4rD,EAAM5sD,OAAS4sD,EAAMv+C,QAC9B,IAAIw+C,GAAM7rD,CACV,IAAI5B,GAAI,IACR,OAAOA,GAAK4B,GAAS,EAAG,CACvBA,GAAS,CACT,IAAIZ,KAAK8rB,mBAAqB0gC,EAAM1gC,kBAAmB9sB,EAAI,MAE5D,MAAOA,GAAK4B,GAAS,EAAG,CACvBA,GACA,IAAIZ,KAAKgsD,oBAAsBQ,EAAMR,mBAAoBhtD,EAAI,MAE9D,GAAI0tD,EACJ1sD,MAAKiO,UAAay+C,EAAK9rD,CACvB4rD,GAAMv+C,UAAay+C,EAAK9rD,CACxB,OAAO5B,GAGD4sD,GAAArrD,UAAAosD,kBAAP,SAAyB1tD,GAExB,IAAK,GAAII,GAAW,EAAGA,EAAIJ,EAAEW,OAAQP,IAAK,CACzC,GAAI8U,GAAIlV,EAAEinC,OAAO7mC,IAIZusD,GAAArrD,UAAAqsD,cAAP,WAEC,GAAIC,GAAS7sD,KAAKiO,QAClBjO,MAAKiO,SAAW,CAChB,IAAI6+C,GAAe,CAEnB,SAASC,GAAYz/C,EAAG0/C,GAEvB,GAAIC,IAAsB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACrG,IAAIt8B,GAAY,EAChB,KAAK,GAAI1wB,GAAW,EAAGA,EAAI+sD,EAAQ/sD,IAAK,CACvC0wB,EAAKs8B,EAAK3/C,IAAMrN,GAAK,GAAM,IAAO0wB,EAEnC,MAAOA,GAGR,IAAK,GAAItxB,GAAI,EAAGA,EAAIW,KAAKJ,OAAQP,GAAKytD,EAAO,CAC5C,GAAI7tD,GAAW8tD,EAAY1tD,EAAG,GAAK,GACnC,KAAK,GAAI8E,GAAW,EAAGA,EAAI2oD,GAASztD,EAAI8E,EAAInE,KAAKJ,OAAQuE,IAAK,CAC7DlF,GAAK,IAAM8tD,EAAY/sD,KAAKgsD,mBAAoB,GAEjDrgB,QAAQrhB,IAAIrrB,GAEbe,KAAKiO,SAAW4+C,EAGVjB,GAAArrD,UAAA2sD,iBAAP,SAAwBtsD,GAEvB,GAAIA,GAASuJ,WAAavJ,EAAQZ,KAAKJ,OAASI,KAAKiO,SACpDrN,EAAQZ,KAAKJ,OAASI,KAAKiO,QAC5B,MAAMrN,EAAQ,GAAI,MAAO,EAEzB,OAAOgrD,GAAcuB,wBAAwBvsD,EAAOZ,KAAKgsD,iBAAkBhsD,MAG9D4rD,GAAAuB,wBAAd,SAAsCvsD,EAAOwsD,EAAqBC,GAEjE,GAAIruD,GAAI,EACR,IAAIsuD,GAAIC,EAAIC,EAAIC,EAAMC,EAAMC,EAAMC,CAClC,IAAIC,GAAYjC,EAAckC,SAC9B,OAAOltD,GAAS,EAAG,CAClB0sD,EAAKF,EAAoB/rB,MAAMgsB,EAC/BE,GAAKH,EAAoB/rB,MAAMgsB,EAC/BG,GAAKJ,EAAoB/rB,MAAMgsB,EAC/BI,GAAOH,GAAM,CACbI,IAASJ,EAAK,IAAM,EAAMC,GAAM,CAChCI,IAASJ,EAAK,KAAO,EAAMC,GAAM,CACjCI,GAAOJ,EAAK,EACZxuD,IAAK6uD,EAAU3nB,OAAOunB,GAAQI,EAAU3nB,OAAOwnB,GAAQG,EAAU3nB,OAAOynB,GAAQE,EAAU3nB,OAAO0nB,EACjGhtD,IAAS,EAGV,GAAIA,GAAS,EAAG,CACf0sD,EAAKF,EAAoB/rB,MAAMgsB,EAC/BE,GAAKH,EAAoB/rB,MAAMgsB,EAC/BI,GAAOH,GAAM,CACbI,IAASJ,EAAK,IAAM,EAAMC,GAAM,CAChCI,IAASJ,EAAK,KAAO,CACrBvuD,IAAK6uD,EAAU3nB,OAAOunB,GAAQI,EAAU3nB,OAAOwnB,GAAQG,EAAU3nB,OAAOynB,GAAQ,QAC1E,IAAI/sD,GAAS,EAAG,CACtB0sD,EAAKF,EAAoB/rB,MAAMgsB,EAC/BI,GAAOH,GAAM,CACbI,IAASJ,EAAK,IAAM,CACpBtuD,IAAK6uD,EAAU3nB,OAAOunB,GAAQI,EAAU3nB,OAAOwnB,GAAQ,KAExD,MAAO1uD,GA1KM4sD,GAAAkC,UAAY,kEA4K3B,OAAAlC,KAEA9rD,GAAuBJ,QAAdksD,IlGwwbN7jD,6CAA6C,+CAA+CgmD,yCAAyC,SAASnvD,EAAQkB,EAAOJ,GAChK,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmGn8btB,IAAOurD,GAAahtD,EAAa,sCAEjC,IAAMovD,GAAe,SAAAttD,GAASX,EAAxBiuD,EAAettD,EAWpB,SAXKstD,KAaJttD,EAAAf,KAAAK,KACAA,MAAKgjC,SACLhjC,MAAK6rD,MAAQ,QAGPmC,EAAAztD,UAAAurD,UAAP,SAAiB5rD,GAEhB,GAAI+tD,KAAc/tD,CAClBF,MAAKgjC,OAAQhjC,KAAKiO,YAAeggD,CACjC,IAAIjuD,KAAKiO,SAAWjO,KAAKJ,OAAQ,CAChCI,KAAKJ,OAASI,KAAKiO,UAId+/C,GAAAztD,UAAAoyC,SAAP,WAEC,GAAI3yC,KAAKiO,UAAYjO,KAAKJ,OAAQ,CACjC,KAAM,0CAA4CI,KAAKiO,SAAW,YAAcjO,KAAKJ,OAEtF,MAAOI,MAAKgjC,OAAQhjC,KAAKiO,YAGnB+/C,GAAAztD,UAAAwrD,kBAAP,SAAyB7rD,GAExB,GAAI+tD,KAAc/tD,CAClBF,MAAKgjC,OAAOhjC,KAAKiO,YAAcggD,EAAK,GACpC,IAAIjuD,KAAKiO,SAAWjO,KAAKJ,OAAQ,CAChCI,KAAKJ,OAASI,KAAKiO,UAId+/C,GAAAztD,UAAAyrD,iBAAP,WAEC,GAAIhsD,KAAKiO,UAAYjO,KAAKJ,OAAQ,CACjC,KAAM,0CAA4CI,KAAKiO,SAAW,YAAcjO,KAAKJ,OAEtF,MAAOI,MAAKgjC,OAAQhjC,KAAKiO,YAGnB+/C,GAAAztD,UAAA0rD,mBAAP,SAA0B/rD,GAEzB,GAAI+tD,KAAc/tD,CAClBF,MAAKgjC,OAAQhjC,KAAKiO,YAAeggD,EAAK,GACtCjuD,MAAKgjC,OAAQhjC,KAAKiO,YAAgBggD,GAAM,EAAK,GAC7C,IAAIjuD,KAAKiO,SAAWjO,KAAKJ,OAAQ,CAChCI,KAAKJ,OAASI,KAAKiO,UAId+/C,GAAAztD,UAAAiyC,kBAAP,WAEC,GAAIxyC,KAAKiO,SAAW,EAAIjO,KAAKJ,OAAQ,CACpC,KAAM,0CAA4CI,KAAKiO,SAAW,YAAcjO,KAAKJ,OAEtF,GAAIZ,GAAWgB,KAAKgjC,OAAQhjC,KAAKiO,UAAejO,KAAKgjC,OAAQhjC,KAAKiO,SAAW,IAAO,CACpFjO,MAAKiO,UAAY,CACjB,OAAOjP,GAGDgvD,GAAAztD,UAAA2rD,iBAAP,SAAwBhsD,GAEvB,GAAI+tD,KAAc/tD,CAClBF,MAAKgjC,OAAQhjC,KAAKiO,YAAeggD,EAAK,GACtCjuD,MAAKgjC,OAAQhjC,KAAKiO,YAAgBggD,IAAO,EAAK,GAC9CjuD,MAAKgjC,OAAQhjC,KAAKiO,YAAgBggD,IAAO,GAAM,GAC/CjuD,MAAKgjC,OAAQhjC,KAAKiO,YAAgBggD,IAAO,GAAM,GAC/C,IAAIjuD,KAAKiO,SAAWjO,KAAKJ,OAAQ,CAChCI,KAAKJ,OAASI,KAAKiO,UAId+/C,GAAAztD,UAAAurB,gBAAP,WAEC,GAAI9rB,KAAKiO,SAAW,EAAIjO,KAAKJ,OAAQ,CACpC,KAAM,0CAA4CI,KAAKiO,SAAW,YAAcjO,KAAKJ,OAEtF,GAAIZ,GAAWgB,KAAKgjC,OAAQhjC,KAAKiO,UAAejO,KAAKgjC,OAAOhjC,KAAKiO,SAAW,IAAM,EAAQjO,KAAKgjC,OAAOhjC,KAAKiO,SAAW,IAAM,GAASjO,KAAKgjC,OAAOhjC,KAAKiO,SAAW,IAAM,EACvKjO,MAAKiO,UAAY,CACjB,OAAOjP,KAAM,EAGPgvD,GAAAztD,UAAA4rD,WAAP,SAAkBjsD,GAIjBF,KAAKksD,iBAAiBlsD,KAAKosD,YAAY17C,OAAOxQ,KAGxC8tD,GAAAztD,UAAA6rD,YAAP,SAAmB9+C,GAIlB,GAAIA,GAAK,EAAG,CACX,MAAO,GnGw6bF,GmGr6bF4gD,GAAc,CAClB,IAAI5gD,EAAI,EAAG,CACVA,GAAKA,CACL4gD,GAAO,MACD,CACNA,EAAO,EnGy6bF,GmGt6bFC,GAAkB1pD,KAAK6lB,IAAIhd,GAAG7I,KAAK6lB,IAAI,EAC3C6jC,GAAW1pD,KAAK4sB,MAAM88B,EACtB7gD,GAAIA,EAAE7I,KAAK0a,IAAI,EAAG,GAAKgvC,EACvB,IAAIC,GAAW3pD,KAAK4sB,MAAM/jB,GAAK,OAC/B6gD,GAAWA,EAAW,GACtB,OAAUD,IAAQ,KAAS,EAAOC,GAAY,GAAOC,EAG/CJ,GAAAztD,UAAA8rD,UAAP,SAAiBnsD,GAEhB,MAAOF,MAAKssD,cAActsD,KAAK8rB,mBAGzBkiC,GAAAztD,UAAA+rD,cAAP,SAAqBh/C,GAEpB,GAAIA,GAAK,EAAG,CACX,MAAO,GAER,GAAI6gD,GAAoB7gD,IAAM,GAAO,GACrC,IAAI8gD,GAAoB9gD,EAAI,QAAa,OACzC,IAAIC,GAAI9I,KAAK0a,IAAI,EAAKgvC,EAAW,IAAQ,IAAIC,CAC7C,IAAI9gD,IAAM,IAAM,EAAG,CAClBC,GAAKA,EAEN,MAAOA,GAsBT,OAAAygD,IAnK8BpC,EAqKL9rD,GAAAJ,QAAhBsuD,InGg5bNrC,sCAAsC,wCAAwC/X,mCAAmC,SAASh1C,EAAQkB,EAAOJ,GAC5I,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoG5jctB,IAAOurD,GAAahtD,EAAa,sCAEjC,IAAMwzC,GAAS,SAAA1xC,GAASX,EAAlBqyC,EAAS1xC,EAMd,SANK0xC,GAMOic,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,EAEX3tD,EAAAf,KAAAK,KACAA,MAAK6rD,MAAQ,aACb7rD,MAAKquD,UAAY5pD,KAAK8wB,IAAK84B,EAAY,KAAS,IAAM,EACtDruD,MAAK03C,WAAa,GAAIv2C,aAAYnB,KAAKquD,UACvCruD,MAAKsuD,wBAA0B,GAAIntD,aAAY,IAGzCixC,EAAA7xC,UAAAguD,qBAAP,SAA4BxvD,GAE3BiB,KAAKwuD,YAAYzvD,EAAIiB,KAAKiO,UAGpBmkC,GAAA7xC,UAAAy3C,eAAP,SAAsByW,GAErBzuD,KAAKwuD,YAAYC,EAAQntD,WAEzBtB,MAAKJ,OAAS6uD,EAAQntD,UAEtB,IAAIotD,GAAwB,GAAI3oD,WAAU0oD,EAC1C,IAAIE,GAA0B,GAAI5oD,WAAU/F,KAAK03C,WAAY,EAAG13C,KAAKJ,OAErE+uD,GAAc5sD,IAAI2sD,EAElB1uD,MAAKiO,SAAW,EAIVmkC,GAAA7xC,UAAA03C,kBAAP,WAEC,MAASj4C,MAAW,OAAOA,KAAa,SAGlCoyC,GAAA7xC,UAAAiuD,YAAP,SAAmBzvD,GAElB,GAAIA,EAAIiB,KAAKquD,UAAW,CACvB,GAAIO,GAAuB7vD,EAAI,KAAS,GACxC,IAAI8vD,GAAiB,GAAI1tD,aAAYytD,EACrC,IAAIlsD,GAAO,GAAIrB,YAAWrB,KAAK03C,WAAY,EAAG13C,KAAKJ,OACnD,IAAIkvD,GAAU,GAAIztD,YAAWwtD,EAAgB,EAAG7uD,KAAKJ,OACrDkvD,GAAQ/sD,IAAIW,EACZ1C,MAAK03C,WAAamX,CAClB7uD,MAAKquD,UAAYO,GAIZxc,GAAA7xC,UAAAurD,UAAP,SAAiB5rD,GAEhBF,KAAKuuD,qBAAqB,EAE1B,IAAI7rD,GAAO,GAAIqD,WAAU/F,KAAK03C,WAC9Bh1C,GAAM1C,KAAKiO,cAAkB/N,CAC7B,IAAIF,KAAKiO,SAAWjO,KAAKJ,OAAQ,CAChCI,KAAKJ,OAASI,KAAKiO,UAIdmkC,GAAA7xC,UAAAoyC,SAAP,WAEC,GAAI3yC,KAAKiO,UAAYjO,KAAKJ,OACzB,KAAM,yCAA2CI,KAAKiO,SAAW,YAAcjO,KAAKJ,MAErF,IAAI8C,GAAO,GAAIqD,WAAU/F,KAAK03C,WAE9B,OAAOh1C,GAAM1C,KAAKiO,YAGZmkC,GAAA7xC,UAAAwuD,UAAP,SAAiB9X,EAAiBh0C,EAAmBrD,GAAnB,GAAAqD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAArD,QAAA,GAAiB,CAAjBA,EAAA,EAEpD,GAAIA,GAAU,KACbA,EAASq3C,EAAMr3C,MAEhBq3C,GAAMsX,qBAAqBtrD,EAASrD,EAEpC,IAAIovD,GAAqB,GAAIjpD,WAAUkxC,EAAMS,WAC7C,IAAIuX,GAA0B,GAAIlpD,WAAU/F,KAAK03C,WAEjDsX,GAASjtD,IAAIktD,EAAc1rD,SAASvD,KAAKiO,SAAUjO,KAAKiO,SAAWrO,GAASqD,EAE5EjD,MAAKiO,UAAYrO,CAEjB,IAAIA,EAASqD,EAASg0C,EAAMr3C,OAC3Bq3C,EAAMr3C,QAAYA,EAASqD,EAAWg0C,EAAMr3C,OAGvCwyC,GAAA7xC,UAAAwrD,kBAAP,SAAyB7rD,GAExBF,KAAKuuD,qBAAqB,EAE1B,IAAI7rD,GAAO,GAAIrB,YAAWrB,KAAK03C,WAC/Bh1C,GAAK1C,KAAKiO,cAAiB/N,EAAK,GAEhC,IAAIF,KAAKiO,SAAWjO,KAAKJ,OACxBI,KAAKJ,OAASI,KAAKiO,SAGdmkC,GAAA7xC,UAAAyrD,iBAAP,WAEC,GAAIhsD,KAAKiO,UAAYjO,KAAKJ,OACzB,KAAM,yCAA2CI,KAAKiO,SAAW,YAAcjO,KAAKJ,MAErF,IAAI8C,GAAO,GAAIrB,YAAWrB,KAAK03C,WAC/B,OAAOh1C,GAAK1C,KAAKiO,YAGXmkC,GAAA7xC,UAAA0rD,mBAAP,SAA0B/rD,GAEzBF,KAAKuuD,qBAAqB,EAE1B,KAAMvuD,KAAKiO,SAAW,IAAO,EAAG,CAC/B,GAAIvL,GAAO,GAAIiE,aAAY3G,KAAK03C,WAChCh1C,GAAM1C,KAAKiO,UAAY,KAAS/N,EAAK,UAC/B,CACN,GAAIwC,GAAO,GAAIiE,aAAY3G,KAAKsuD,wBAAyB,EAAG,EAC5D5rD,GAAK,KAAQxC,EAAK,KAClB,IAAIgvD,GAAQ,GAAI7tD,YAAWrB,KAAK03C,WAAY13C,KAAKiO,SAAU,EAC3D,IAAIkhD,GAAQ,GAAI9tD,YAAWrB,KAAKsuD,wBAAyB,EAAG,EAC5DY,GAAMntD,IAAIotD,GAGXnvD,KAAKiO,UAAY,CAEjB,IAAIjO,KAAKiO,SAAWjO,KAAKJ,OACxBI,KAAKJ,OAASI,KAAKiO,SAGdmkC,GAAA7xC,UAAAmyC,aAAP,SAAoBjwC,GAEnB,GAAIT,GAAe,EACnB,IAAIuzB,GAAav1B,KAAKiO,SAAWxL,CACjC,IAAIknB,GAAgB,GAAIylC,UAASpvD,KAAK03C,WAGtC,OAAO13C,KAAKiO,SAAWsnB,EAAK,CAE3B,GAAI5f,GAAWgU,EAAK0lC,SAASrvD,KAAKiO,WAElC,IAAI0H,EAAI,IAAM,CAEb,GAAIA,GAAK,EAAG,KACZ3T,IAASm/B,OAAOC,aAAazrB,OAEvB,IAAIA,EAAI,IAAM,CAEpB3T,GAASm/B,OAAOC,cAAezrB,EAAI,KAAS,EAAMgU,EAAK0lC,SAASrvD,KAAKiO,YAAc,SAE7E,IAAI0H,EAAI,IAAM,CAEpB,GAAI25C,GAAK3lC,EAAK0lC,SAASrvD,KAAKiO,WAC5BjM,IAASm/B,OAAOC,cAAezrB,EAAI,KAAS,IAAQ25C,EAAK,MAAS,EAAM3lC,EAAK0lC,SAASrvD,KAAKiO,YAAc,SAEnG,CAEN,GAAIqhD,GAAK3lC,EAAK0lC,SAASrvD,KAAKiO,WAC5B,IAAIshD,GAAK5lC,EAAK0lC,SAASrvD,KAAKiO,WAE5BjM,IAASm/B,OAAOC,cAAezrB,EAAI,KAAS,IAAQ25C,EAAK,MAAS,GAAQC,GAAM,EAAK,IAAS5lC,EAAK0lC,SAASrvD,KAAKiO,YAAc,MAMjI,MAAOjM,GAGDowC,GAAA7xC,UAAAivD,QAAP,WAEC,GAAI7lC,GAAgB,GAAIylC,UAASpvD,KAAK03C,WACtC,IAAI+X,GAAa9lC,EAAK+lC,SAAS1vD,KAAKiO,SAAU,KAE9CjO,MAAKiO,UAAY,CAEjB,OAAOwhD,GAGDrd,GAAA7xC,UAAAkyC,UAAP,WAEC,GAAI9oB,GAAgB,GAAIylC,UAASpvD,KAAK03C,WACtC,IAAIiY,GAAehmC,EAAKimC,SAAS5vD,KAAKiO,SAAU,KAEhDjO,MAAKiO,UAAY,CAEjB,OAAO0hD,GAGDvd,GAAA7xC,UAAAsvD,WAAP,WAEC,GAAIlmC,GAAgB,GAAIylC,UAASpvD,KAAK03C,WACtC,IAAIoY,GAAgBnmC,EAAKomC,WAAW/vD,KAAKiO,SAAU,KAEnDjO,MAAKiO,UAAY,CAEjB,OAAO6hD,GAGD1d,GAAA7xC,UAAAiyC,kBAAP,WAEC,GAAIxyC,KAAKiO,SAAWjO,KAAKJ,OAAS,EACjC,KAAM,0CAA4CI,KAAKiO,SAAW,YAAcjO,KAAKJ,MAEtF,KAAMI,KAAKiO,SAAW,IAAO,EAAG,CAC/B,GAAIvL,GAAO,GAAIiE,aAAY3G,KAAK03C,WAChC,IAAIsY,GAAYhwD,KAAKiO,UAAY,CACjCjO,MAAKiO,UAAY,CACjB,OAAOvL,GAAMstD,OACP,CACN,GAAIttD,GAAO,GAAIiE,aAAY3G,KAAKsuD,wBAAyB,EAAG,EAC5D,IAAIY,GAAQ,GAAI7tD,YAAWrB,KAAK03C,WAAY13C,KAAKiO,SAAU,EAC3D,IAAIkhD,GAAQ,GAAI9tD,YAAWrB,KAAKsuD,wBAAyB,EAAG,EAC5Da,GAAMptD,IAAImtD,EACVlvD,MAAKiO,UAAY,CACjB,OAAOvL,GAAK,IAIP0vC,GAAA7xC,UAAA2rD,iBAAP,SAAwBhsD,GAEvBF,KAAKuuD,qBAAqB,EAE1B,KAAMvuD,KAAKiO,SAAW,IAAO,EAAG,CAC/B,GAAIvL,GAAO,GAAIutD,aAAYjwD,KAAK03C,WAChCh1C,GAAM1C,KAAKiO,UAAY,KAAS/N,EAAK,eAC/B,CACN,GAAIwC,GAAO,GAAIutD,aAAYjwD,KAAKsuD,wBAAyB,EAAG,EAC5D5rD,GAAK,KAAQxC,EAAK,UAClB,IAAIgvD,GAAQ,GAAI7tD,YAAWrB,KAAK03C,WAAY13C,KAAKiO,SAAU,EAC3D,IAAIkhD,GAAQ,GAAI9tD,YAAWrB,KAAKsuD,wBAAyB,EAAG,EAC5DY,GAAMntD,IAAIotD,GAEXnvD,KAAKiO,UAAY,CAEjB,IAAIjO,KAAKiO,SAAWjO,KAAKJ,OACxBI,KAAKJ,OAASI,KAAKiO,SAGdmkC,GAAA7xC,UAAAurB,gBAAP,WAEC,GAAI9rB,KAAKiO,SAAWjO,KAAKJ,OAAS,EACjC,KAAM,0CAA4CI,KAAKiO,SAAW,YAAcjO,KAAKJ,MAEtF,KAAMI,KAAKiO,SAAW,IAAO,EAAG,CAC/B,GAAIvL,GAAO,GAAIutD,aAAYjwD,KAAK03C,WAChC,IAAIsY,GAAYhwD,KAAKiO,UAAY,CACjCjO,MAAKiO,UAAY,CACjB,OAAOvL,GAAMstD,OACP,CACN,GAAIttD,GAAO,GAAIutD,aAAYjwD,KAAKsuD,wBAAyB,EAAG,EAC5D,IAAIY,GAAQ,GAAI7tD,YAAWrB,KAAK03C,WAAY13C,KAAKiO,SAAU,EAC3D,IAAIkhD,GAAQ,GAAI9tD,YAAWrB,KAAKsuD,wBAAyB,EAAG,EAC5Da,GAAMptD,IAAImtD,EACVlvD,MAAKiO,UAAY,CACjB,OAAOvL,GAAK,IAIP0vC,GAAA7xC,UAAA4rD,WAAP,SAAkBjsD,GAEjBF,KAAKuuD,qBAAqB,EAE1B,KAAMvuD,KAAKiO,SAAW,IAAO,EAAG,CAC/B,GAAIvL,GAAO,GAAIwD,cAAalG,KAAK03C,WACjCh1C,GAAM1C,KAAKiO,UAAY,GAAM/N,MACvB,CACN,GAAIwC,GAAO,GAAIwD,cAAalG,KAAKsuD,wBAAyB,EAAG,EAC7D5rD,GAAK,GAAKxC,CACV,IAAIgvD,GAAQ,GAAI7tD,YAAWrB,KAAK03C,WAAY13C,KAAKiO,SAAU,EAC3D,IAAIkhD,GAAQ,GAAI9tD,YAAWrB,KAAKsuD,wBAAyB,EAAG,EAC5DY,GAAMntD,IAAIotD,GAEXnvD,KAAKiO,UAAY,CAEjB,IAAIjO,KAAKiO,SAAWjO,KAAKJ,OACxBI,KAAKJ,OAASI,KAAKiO,SAGdmkC,GAAA7xC,UAAA8rD,UAAP,WAEC,GAAIrsD,KAAKiO,SAAWjO,KAAKJ,OAAS,EACjC,KAAM,yCAA2CI,KAAKiO,SAAW,YAAcjO,KAAKJ,MAErF,KAAKI,KAAKiO,SAAW,IAAM,EAAG,CAC7B,GAAIvL,GAAO,GAAIwD,cAAalG,KAAK03C,WACjC,IAAIsY,GAAKhwD,KAAKiO,UAAY,CAC1BjO,MAAKiO,UAAY,CACjB,OAAOvL,GAAKstD,OACN,CACN,GAAIttD,GAAO,GAAIwD,cAAalG,KAAKsuD,wBAAyB,EAAG,EAC7D,IAAIY,GAAQ,GAAI7tD,YAAWrB,KAAK03C,WAAY13C,KAAKiO,SAAU,EAC3D,IAAIkhD,GAAQ,GAAI9tD,YAAWrB,KAAKsuD,wBAAyB,EAAG,EAC5Da,GAAMptD,IAAImtD,EACVlvD,MAAKiO,UAAY,CACjB,OAAOvL,GAAM,IAGhB,OAAA0vC,IA7SwBwZ,EA+SL9rD,GAAAJ,QAAV0yC,IpGk/bNuZ,sCAAsC,wCAAwCuE,6BAA6B,SAAStxD,EAAQkB,EAAOJ,GqGnyctI,GAAMywD,GAAG,WAAT,QAAMA,MAESA,EAAAC,eAAd,SAA6B7W,EAAqB9rC,EAAcC,GAE/D,IAAI6rC,EAAS,MACbA,GAAQ8W,MAAM5iD,MAAQA,EAAQ,IAC9B8rC,GAAQ8W,MAAM3iD,OAASA,EAAS,IAChC6rC,GAAQ,SAAW9rC,CACnB8rC,GAAQ,UAAY7rC,EAGPyiD,GAAAG,gBAAd,SAA8B/W,EAAqB9rC,GAElD,IAAI8rC,EAAS,MACbA,GAAQ8W,MAAM5iD,MAAQA,EAAQ,IAC9B8rC,GAAQ,SAAW9rC,EAGN0iD,GAAAI,iBAAd,SAA+BhX,EAAqB7rC,GAEnD,IAAI6rC,EAAS,MACbA,GAAQ8W,MAAM3iD,OAASA,EAAS,IAChC6rC,GAAQ,UAAY7rC,EAGPyiD,GAAAK,YAAd,SAA0BjX,EAAqBjsC,GAE9C,IAAIisC,EAAS,MACbA,GAAQ8W,MAAMpiD,SAAW,UACzBsrC,GAAQ8W,MAAMpT,KAAO3vC,EAAI,KAGZ6iD,GAAAM,YAAd,SAA0BlX,EAAqBhsC,GAE9C,IAAIgsC,EAAS,MACbA,GAAQ8W,MAAMpiD,SAAW,UACzBsrC,GAAQ8W,MAAMlT,IAAM5vC,EAAI,KAGX4iD,GAAAO,qBAAd,SAAmCnX,GAElC,IAAIA,EAAS,MAAO,MACpB,OAAOA,GAAQ8W,MAAMM,YAAc,UAGtBR,GAAAS,qBAAd,SAAmCrX,EAAqBsX,GAEvD,IAAItX,EAAS,MACb,IAAIsX,EAAS,CACZtX,EAAQ8W,MAAMM,WAAa,cACrB,CACNpX,EAAQ8W,MAAMM,WAAa,UAIfR,GAAAW,gBAAd,SAA8BvX,EAAqBwX,GAElD,GAAIxX,YAAmByX,mBAAmB,CACzC,GAAIl1B,GAA+Byd,EAASnwB,WAAW,KACvD0S,GAAQm1B,YAAcF,GAIVZ,GAAAe,mBAAd,SAAiC3X,EAAqBjsC,EAAUC,EAAU4jD,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,EAAA,MAEzE,IAAI5X,EAAS,MACb,IAAI4X,EAAU,CACb5X,EAAQ8W,MAAMpiD,SAAW,eACnB,CACNsrC,EAAQ8W,MAAMpiD,SAAW,WAG1BsrC,EAAQ8W,MAAMpT,KAAO3vC,EAAI,IACzBisC,GAAQ8W,MAAMlT,IAAM5vC,EAAI,KAE1B,OAAA4iD,KAEArwD,GAAaJ,QAAJywD,OrGgycH19C,oCAAoC,SAAS7T,EAAQkB,EAAOJ,GAIlE,GsG92cM8R,GAAU,WAAhB,QAAMA,MAESA,EAAAW,mBAAd,SAAiCi/C,GAEhC,GAAIhyD,IAAagyD,EAAe,cAAiB,EACjD,IAAIpyD,IAAaoyD,EAAe,YAAe,EAC/C,IAAIl7C,IAAak7C,EAAe,SAAa,CAC7C,IAAIlxD,GAAWkxD,EAAe,GAC9B,IAAIn7C,IAAoB7W,EAAGJ,EAAIkX,EAAIhW,EAEnC,OAAO+V,GAGMzE,GAAA6/C,cAAd,SAA4BjyD,EAAUJ,EAAUkX,EAAUhW,GAEzD,MAASd,IAAK,GAAOJ,GAAK,GAAOkX,GAAK,EAAKhW,EAG7BsR,GAAA8/C,eAAf,SAA8B37C,GAE7B,GAAI47C,GAAM57C,EAAExE,SAAS,GACrB,OAAOogD,GAAI3xD,QAAU,EAAG,IAAM2xD,EAAMA,EAGvB//C,GAAAggD,eAAd,SAA6Bt/C,GAE5B,MAAO,IAAMV,EAAW8/C,eAAep/C,EAAK,IAAMV,EAAW8/C,eAAep/C,EAAK,IAAMV,EAAW8/C,eAAep/C,EAAK,IAGzGV,GAAAigD,gBAAd,SAA8Bv/C,GAE7B,MAAO,IAAMV,EAAW8/C,eAAep/C,EAAK,IAAMV,EAAW8/C,eAAep/C,EAAK,IAAMV,EAAW8/C,eAAep/C,EAAK,IAAMV,EAAW8/C,eAAep/C,EAAK;CAE7J,OAAAV,KAEA1R,GAAoBJ,QAAX8R,OtGu2cHkgD,+BAA+B,SAAS9yD,EAAQkB,EAAOJ,GuG74c7D,GAAOmJ,GAA0BjK,EAAW,oDvGk5c5C,IuG74cM+yD,GAAK,WAAX,QAAMA,MAQSA,EAAAC,WAAd,WAECD,EAAM,WAGOA,GAAAE,sBAAd,SAAoCva,EAAYwa,GAAA,GAAAA,QAAA,GAAqB,CAArBA,EAAA,KAE/C,IAAKA,EACJH,EAAMI,QAAU,SAEhBJ,GAAMI,QAAUza,EAGJqa,GAAAK,SAAd,SAAuBC,EAAaC,EAAYC,GAE/CR,EAAMS,OAAO,8BAAgCH,EAAMC,EAAKC,EAExD,IAAIR,EAAMU,aAAc,CACvB,GAAIV,EAAMI,QAAS,CAClB,GAAIlzD,GAAWozD,EAAOC,EAAMC,CAE5B,IAAItzD,EAAEq0B,QAAQy+B,EAAMI,WAAa,EAChC,OAGF,KAAM,IAAIlpD,GAA2BopD,EAAO,IAAMC,EAAM,KAAOC,IAIlDR,GAAAS,OAAf,SAAsBH,EAAaC,EAAYC,GAAA,GAAAA,QAAA,GAAe,CAAfA,EAAA,GAE9C,GAAIR,EAAMW,cACT3mB,QAAQrhB,IAAI2nC,EAAO,IAAMC,EAAM,KAAOC,GAG1BR,GAAArnC,IAAd,WAAkB,GAAAioC,KvGi4cX,KuGj4cW,GAAAC,GAAA,EAAAA,EAAAzvB,UAAAnjC,OAAA4yD,IAAa,CAAbD,EAAAC,EAAA,GAAAzvB,UAAAyvB,GAEjB,GAAIb,EAAMc,WACT9mB,QAAQrhB,IAAIioC,GA5CAZ,GAAAU,aAAuB,IACvBV,GAAAc,WAAqB,IACrBd,GAAAW,cAAwB,IAEvBX,GAAAI,QAAiB,IA0CjC,OAAAJ,KAEA7xD,GAAeJ,QAANiyD,IvGw4cN/oD,oDAAoD,sDAAsD8pD,oCAAoC,SAAS9zD,EAAQkB,EAAOJ,GAIzK,GwG97cMizD,GAAU,WAAhB,QAAMA,MAESA,EAAAC,KAAeC,cAAc,QAAW,YACvD,OAAAF,KAEA7yD,GAAoBJ,QAAXizD,OxGi8cHG,+CAA+C,SAASl0D,EAAQkB,EAAOJ,SAEvEs2B,oCAAoC,SAASp3B,EAAQkB,EAAOJ,GyG38clE,GAAMi2B,GAAU,WAAhB,QAAMA,MAISA,EAAAuf,eAAd,SAA6B6d,GAE5B,GAAIA,GAAW,KACd,MAAO,KAER,OAAOp9B,GAAWG,iBAAiBi9B,EAAQtlD,MAAOslD,EAAQlqC,aAAe8M,EAAWG,iBAAiBi9B,EAAQrlD,OAAQqlD,EAAQlqC,YAGhH8M,GAAAq9B,wBAAd,SAAsCniC,GAErC,GAAIA,GAAS,KACZ,MAAO,KAER,OAAO8E,GAAWG,iBAAiBjF,EAAMpjB,QAAUkoB,EAAWG,iBAAiBjF,EAAMnjB,QAGxEioB,GAAAG,iBAAd,SAA+B71B,EAAU4oB,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,KAExC,MAAO5oB,IAAK,GAAKA,GAAK01B,EAAWs9B,YAAcpqC,GAAc8M,EAAWu9B,aAAajzD,IAGxE01B,GAAAu9B,aAAd,SAA2BlxD,GAE1B,MAAOA,IAASA,GAASA,IAAUA,EAAS,MAG/B2zB,GAAAw9B,gBAAd,SAA8BnxD,GAE7B,GAAI7B,GAAW,CAEf,OAAOA,EAAI6B,EACV7B,IAAM,CAEP,IAAIA,EAAIw1B,EAAWs9B,SAClB9yD,EAAIw1B,EAAWs9B,QAEhB,OAAO9yD,GAtCOw1B,GAAAs9B,SAAkB,IAwClC,OAAAt9B,KAEmB71B,GAAAJ,QAAVi2B,OzGi8cHy9B,yCAAyC,SAASx0D,EAAQkB,EAAOJ,G0G/+cvE,GAAOgpB,GAAa9pB,EAAsB,sCAE1C,IAAO4gB,GAAM5gB,EAA8B,8BAC3C,IAAO+nB,GAAS/nB,EAA0B,iCAE1C,IAAMy0D,GAAe,WAArB,QAAMA,MAiBYA,EAAAC,iBAAd,SAA+BlhD,EAAYmhD,EAA8BxC,GAAA,GAAAA,QAAA,GAAqB,CAArBA,EAAA,MACrE,GAAI19C,GAAWjB,EAAO3E,KACtB,IAAI2I,GAAWhE,EAAO1E,MACtB,IAAIrO,GAAW,CAEf,IAAIk3B,EAEJ88B,GAAgB/pC,MAAM7b,MAAQ4F,CAC9BggD,GAAgB/pC,MAAM5b,OAAS0I,CAG/B,OAAO/C,GAAK,GAAK+C,GAAK,EAAG,CAErBmgB,EAASg9B,EAAOl0D,GAAKg0D,EAAgBG,iBAAiBD,EAAOl0D,GAAIg0D,EAAgB/pC,MAAM7b,MAAO4lD,EAAgB/pC,MAAM5b,OAEpH,IAAIqjD,EACAx6B,EAAOlN,SAASgqC,EAAgB/pC,MAAO,EAG3C+pC,GAAgBI,QAAQr0D,EAAIi0D,EAAgB/pC,MAAM7b,MAAQ2E,EAAO3E,KACjE4lD,GAAgBI,QAAQxzD,EAAIozD,EAAgB/pC,MAAM5b,OAAS0E,EAAO1E,MAElE,IAAIsb,SAAU,CACVuN,EAAOhN,KAAKnX,EAAQihD,EAAgBI,aACjC,CACH,GAAIrhD,EAAO9R,YAAY6Q,WAAW+hB,QAAQ,kBAAoB,EAAG,C1G49c7D,G0G19cIwgC,GAA4CthD,CAChDshD,GAAYnoC,MACZgL,GAAOhL,MACPvrB,MAAK2zD,gBAAgBD,EAAYhqC,eAAgB6M,EAAO7M,eACxD6M,GAAOxK,QACP2nC,GAAY3nC,aACV,IAAG3Z,EAAO9R,YAAY6Q,WAAW+hB,QAAQ,cAAgB,EAAE,CAC7DlzB,KAAK2zD,gBAAgBvhD,EAAOsX,eAAgB6M,EAAO7M,oBAChD,CAEH1pB,KAAK2zD,gBAAgBvhD,EAAQmkB,EAAO7M,iBAI5CrW,IAAM,CACN+C,KAAM,CAENi9C,GAAgB/pC,MAAM7b,MAAQ4F,EAAI,EAAIA,EAAI,CAC1CggD,GAAgB/pC,MAAM5b,OAAS0I,EAAI,EAAIA,EAAI,CAE3C/W,MAIOg0D,GAAAG,iBAAf,SAAgCI,EAA4BC,EAAaC,GACrE,GAAIF,EAAc,CACd,GAAIA,EAAanmD,OAASomD,GAAQD,EAAalmD,QAAUomD,EACrD,MAAOF,EAEXP,GAAgBU,kBAAkBH,GAGtC,IAAKP,EAAgBW,SAASH,GAAO,CACjCR,EAAgBW,SAASH,KACzBR,GAAgBY,YAAYJ,MAGhC,IAAKR,EAAgBW,SAASH,GAAMC,GAAO,CACvCF,EAAeP,EAAgBW,SAASH,GAAMC,GAAQ,GAAIprC,GAAcmrC,EAAMC,EAAM,KACpFT,GAAgBY,YAAYJ,GAAMC,GAAQ,MACvC,CACHT,EAAgBY,YAAYJ,GAAMC,GAAQT,EAAgBY,YAAYJ,GAAMC,GAAQ,CACpFF,GAAeP,EAAgBW,SAASH,GAAMC,GAGlD,MAAOF,GAGGP,GAAAU,kBAAd,SAAgCH,GAC5B,GAAIM,GAAqBN,EAAanmD,KACtC,IAAI0mD,GAAsBP,EAAalmD,MAEvC,MAAM2lD,EAAgBY,YAAYC,GAAaC,IAAiB,EAAG,CAC/Dd,EAAgBW,SAASE,GAAaC,GAAclwD,SACpDovD,GAAgBW,SAASE,GAAaC,GAAgB,MAIhDd,GAAAM,gBAAd,SAA8BxgC,EAAkBihC,GAC5C,GAAIjmD,GAAgB,GAAIkmD,EACxB,IAAIC,GAA0B,GAAIC,GAAgBpmD,EAAKglB,EAAO1lB,MAAO2mD,EAAW3mD,MAAO,EACvF,IAAI+mD,GAA0B,GAAID,GAAgBpmD,EAAKglB,EAAOzlB,OAAQ0mD,EAAW1mD,OAAQ,EAEzF,IAAI+mD,KAEJ,IAAIr5C,GAAe,CACnB,IAAIs5C,GAAgB,CACpB,IAAIC,GAAsB,CAC1B,IAAIC,GAAqB,CACzB,IAAIC,GAA0B,CAC9B,IAAIC,GAAc,CAClB,IAAIC,GAAc,CAClB,IAAIC,GAAc,CAClB,IAAIC,GAAc,CAClB,IAAIxX,EACJ,IAAIR,EACJ,IAAI59C,GAAW,CACf,IAAI8E,GAAW,CACf,IAAItB,GAAe,CAEnB,KAAK,GAAI0K,GAAW,EAAGA,EAAI4lB,EAAOzlB,OAAQH,IAAK,CAC3ConD,EAAeL,EAAQ7xD,GACvB2Y,GAAQu5C,EAAexhC,EAAO1lB,KAC9BinD,GAAS,EAAMt5C,CACfw5C,GAAcN,EAAQ7mD,KACtBonD,GAAmBP,EAAQY,UAE3B,KAAK71D,EAAI,EAAGA,EAAIs1D,EAAct1D,IAAK,CAC/Bo+C,GAAU,GAAMp+C,GAAKq1D,CACrBzX,GAAOx4C,KAAK4sB,MAAMosB,EAASmX,EAC3BE,GAAO,CACPC,GAAO,CACPC,GAAO,CACPC,GAAO,CACP,KAAK,GAAI9wD,GAAW,EAAGA,EAAI0wD,IAAoB1wD,EAAG,CAC9CtB,GAAS0K,EAAI4lB,EAAO1lB,OAASwvC,EAAO94C,IAAO,CAC3C,IAAIgxD,GAAgBhiC,EAAOxJ,KAAK9mB,EAChC,IAAIuyD,GAAgBjiC,EAAOxJ,KAAK9mB,EAAQ,EACxC,IAAIwyD,GAAgBliC,EAAOxJ,KAAK9mB,EAAQ,EACxC,IAAIyyD,GAAgBniC,EAAOxJ,KAAK9mB,EAAQ,EAExC,IAAIb,GAAesyD,EAAQiB,QAAQl2D,EAAG8E,EACtC2wD,IAAQ9yD,EAAQmzD,CAChBJ,IAAQ/yD,EAAQozD,CAChBJ,IAAQhzD,EAAQqzD,CAChBJ,IAAQjzD,EAAQszD,EAGpBzyD,GAAS0K,EAAI6mD,EAAW3mD,MAAQpO,GAAK,CACrCo1D,GAAW5xD,GAASiyD,CACpBL,GAAW5xD,EAAQ,GAAKkyD,CACxBN,GAAW5xD,EAAQ,GAAKmyD,CACxBP,GAAW5xD,EAAQ,GAAKoyD,GAIhC,IAAK,GAAI3nD,GAAW,EAAGA,EAAI8mD,EAAW3mD,MAAOH,IAAK,CAC9CqnD,EAAeH,EAAQ/xD,GACvB2Y,GAAQu5C,EAAexhC,EAAOzlB,MAC9BgnD,GAAS,EAAMt5C,CACfw5C,GAAcJ,EAAQ/mD,KACtBonD,GAAmBL,EAAQU,UAE3B,KAAK71D,EAAI,EAAGA,EAAIs1D,EAAct1D,IAAK,CAC/Bo+C,GAAU,GAAMp+C,GAAKq1D,CAErBzX,GAAOx4C,KAAK4sB,MAAMosB,EAASmX,EAE3BE,GAAO,CACPC,GAAO,CACPC,GAAO,CACPC,GAAO,CACP,KAAK9wD,EAAI,EAAGA,EAAI0wD,IAAoB1wD,EAAG,CACnCtB,IAAUsB,EAAI84C,GAAQmX,EAAW3mD,MAAQH,GAAK,CAC9C,IAAI6nD,GAAgBV,EAAW5xD,EAC/B,IAAIuyD,GAAgBX,EAAW5xD,EAAQ,EACvC,IAAIwyD,GAAgBZ,EAAW5xD,EAAQ,EACvC,IAAIyyD,GAAgBb,EAAW5xD,EAAQ,EAEvC,IAAIb,GAAewyD,EAAQe,QAAQl2D,EAAG8E,EACtC2wD,IAAQ9yD,EAAQmzD,CAChBJ,IAAQ/yD,EAAQozD,CAChBJ,IAAQhzD,EAAQqzD,CAChBJ,IAAQjzD,EAAQszD,EAGpBzyD,GAASxD,EAAI+0D,EAAW3mD,MAAQH,GAAK,CACrC8mD,GAAWzqC,KAAK9mB,GAASiyD,CACzBV,GAAWzqC,KAAK9mB,EAAQ,GAAKkyD,CAC7BX,GAAWzqC,KAAK9mB,EAAQ,GAAKmyD,CAC7BZ,GAAWzqC,KAAK9mB,EAAQ,GAAKoyD,GAIrC,MAAOb,GArMIf,GAAAW,WACAX,GAAAY,cAEAZ,GAAAI,QAAiB,GAAIj0C,EACrB6zC,GAAA/pC,MAAkB,GAAI3C,EAmMzC,OAAA0sC,KACA,IAAMkB,GAAe,WAMjB,QANEA,GAMUj1D,EAAak2D,EAAkBC,EAAkBC,GAEzD,GAAIt6C,GAAeq6C,EAAYD,CAC/B,IAAId,GAAgB,EAAMt5C,CAE1B,IAAIA,EAAQ,EAAG,CAEXs6C,EAAU,CACVt6C,GAAQ,EAGZpb,KAAKyC,IAAMgzD,CACXz1D,MAAKyN,MAAQnO,EAAEmO,MAAQinD,CACvB10D,MAAKk1D,WAAazwD,KAAK6wB,KAAKt1B,KAAKyN,MAAQ,EAEzCzN,MAAK2pB,OAEL,KAAK,GAAItqB,GAAW,EAAGA,EAAIW,KAAKyC,IAAKpD,IAAK,CACtC,GAAIo+C,IAAiB,GAAMp+C,GAAKq1D,CAEhC,IAAIzX,GAAcx4C,KAAK4sB,MAAMosB,EAASz9C,KAAKyN,MAE3C,IAAIyjC,GAAe,CACnB,KAAK,GAAI/sC,GAAW,EAAGA,EAAInE,KAAKk1D,WAAY/wD,IAAK,CAC7C,GAAI4vB,GAAgBz0B,EAAEw0B,UAAUmpB,EAAO94C,EAAIs5C,EAAQriC,EAAOs6C,EAI1D11D,MAAK2pB,KAAKtqB,EAAIW,KAAKk1D,WAAa/wD,GAAK4vB,CACrCmd,IAASnd,EAIb,IAAK,GAAI5vB,GAAW,EAAGA,EAAInE,KAAKk1D,WAAY/wD,IAAK,CAC7CnE,KAAK2pB,KAAKtqB,EAAIW,KAAKk1D,WAAa/wD,IAAM+sC,IAK3CqjB,EAAAh0D,UAAAg1D,QAAP,SAAel7C,EAAe/M,GAC1B,MAAOtN,MAAK2pB,KAAKtP,EAASra,KAAKk1D,WAAa5nD,GAEpD,OAAAinD,KAEA,IAAMF,GAAS,WAAf,QAAMA,MACF9yD,OAAAC,eAAW6yD,EAAA9zD,UAAA,S1G47cPkB,I0G57cJ,WACI,MAAO,I1G87cPE,WAAY,KACZC,aAAc,M0G57cXyyD,GAAA9zD,UAAAuzB,UAAP,SAAiBxmB,EAAU8N,EAAcs6C,GACrC,GAAIC,GAAa,CACjB,IAAIC,GAAkB,EAAMF,CAE5B,KAAK,GAAIz2D,GAAW,EAAGA,EAAIy2D,EAASz2D,IAAK,CACrC,GAAIkB,IAAYmN,GAAKrO,EAAI,IAAO22D,GAAYx6C,CAC5C,IAAIpZ,GAAehC,KAAK61D,SAAS11D,EACjCw1D,IAAO3zD,EAGX,MAAO2zD,GAAMC,EAGVvB,GAAA9zD,UAAAs1D,SAAP,SAAgBvoD,GACZ,GAAI7I,KAAKgY,IAAInP,IAAMtN,KAAKyN,MAAO,MAAO,OACjC,OAAO,GAEpB,OAAA4mD,KACAv0D,GAAyBJ,QAAhB2zD,I1Gg8cN/zC,8BAA8B,8BAA8BoH,iCAAiC,iCAAiC4B,sCAAsC,wCAAwCwtC,+CAA+C,SAASl3D,EAAQkB,EAAOJ,G2GvtdtR,GAAOi1C,GAAQ/1C,EAAe,iCAE9B,IAAMm3D,GAAqB,WAY1B,QAZKA,GAYOC,EAAmBC,GAZhC,GAAAp+B,GAAA73B,IAISA,MAAAk2D,QAAkB,KAKlBl2D,MAAAm2D,WAAwB,GAAIl1D,MAKnCjB,MAAKo2D,UAAYzhB,CAEjB30C,MAAKq2D,YAAYL,EAAUC,EAE3Bj2D,MAAKs2D,mBAAqB,WACzB,GAAIz+B,EAAKq+B,QACRr+B,EAAK0+B,QAGPv2D,MAAKm2D,WAAWtyD,KAAK7D,KAAKw2D,KAUpBT,EAAAx1D,UAAA81D,YAAP,SAAmBL,EAAmBC,GAErCj2D,KAAKy2D,UAAYT,CACjBh2D,MAAK02D,iBAAmBT,EAMlBF,GAAAx1D,UAAA4sC,MAAP,WAECntC,KAAK22D,UAAY32D,KAAKo2D,WACtBp2D,MAAKk2D,QAAU,IAEf,IAAGrtB,OAAQ,CACV,GAAIA,OAAO+tB,sBAAuB,CACjC/tB,OAAO+tB,sBAAsB52D,KAAKs2D,wBAC5B,CACN,GAAIztB,OAAO,4BACVA,OAAO+tB,sBAAwB/tB,OAAO,gCAClC,IAAIA,OAAO,+BACfA,OAAO+tB,sBAAwB/tB,OAAO,mCAClC,IAAIA,OAAO,0BACfA,OAAO+tB,sBAAwB/tB,OAAO,4BAQnCktB,GAAAx1D,UAAAgH,KAAP,WAECvH,KAAKk2D,QAAU,MAShB30D,QAAAC,eAAWu0D,EAAAx1D,UAAA,U3GmsdJkB,I2GnsdP,WAEC,MAAOzB,MAAKk2D,S3GosdNv0D,WAAY,KACZC,aAAc,M2G5rdbm0D,GAAAx1D,UAAAg2D,MAAR,WAECv2D,KAAK2sC,aAAe3sC,KAAKo2D,WACzBp2D,MAAKw2D,IAAMx2D,KAAK2sC,aAAe3sC,KAAK22D,SACpC32D,MAAKm2D,WAAW,GAAKn2D,KAAKw2D,GAC1Bx2D,MAAKy2D,UAAUp1B,MAAMrhC,KAAK02D,iBAAkB12D,KAAKm2D,WAEjDttB,QAAO+tB,sBAAsB52D,KAAKs2D,mBAElCt2D,MAAK22D,UAAY32D,KAAK2sC,aAIxB,OAAAopB,KAE+Bj2D,GAAAJ,QAAtBq2D,I3GgsdNrf,iCAAiC,mCAAmCD,+BAA+B,SAAS73C,EAAQkB,EAAOJ,GAC9H,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4G5ydtB,IAAO2H,GAASpJ,EAAc,mCAC9B,IAAO0L,GAAe1L,EAAa,yCACnC,IAAO4N,GAAU5N,EAAc,oCAE/B,IAAM81C,GAAK,SAAAh0C,GAASX,EAAd20C,EAAKh0C,EAQV,SARKg0C,GAQOmiB,EAAcC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,EAEzBp2D,EAAAf,KAAAK,KAPOA,MAAA+2D,aAAsB,CACtB/2D,MAAAg3D,cAAuB,CAEvBh3D,MAAAi3D,SAAmB,KAM1Bj3D,MAAKk3D,OAASL,CACd72D,MAAK+2D,aAAeD,CAEpB,IAAIvuB,MAAMsuB,IAAUA,EAAQ,EAC3B,KAAM,IAAI7uD,GAAU,qCAGtBzG,OAAAC,eAAWkzC,EAAAn0C,UAAA,gB5GwydJkB,I4GxydP,WAEC,MAAOzB,MAAKg3D,e5GyydNr1D,WAAY,KACZC,aAAc,M4GvydrBL,QAAAC,eAAWkzC,EAAAn0C,UAAA,S5G0ydJkB,I4G1ydP,WAEC,MAAOzB,MAAKk3D,Q5G2ydNn1D,I4GxydP,SAAiBC,GAEhBhC,KAAKk3D,OAASl1D,CAEd,IAAIhC,KAAKi3D,SAAU,CAClBj3D,KAAKuH,MACLvH,MAAKmtC,U5GyydAxrC,WAAY,KACZC,aAAc,M4GtydrBL,QAAAC,eAAWkzC,EAAAn0C,UAAA,e5GyydJkB,I4GzydP,WAEC,MAAOzB,MAAK+2D,c5G0ydNh1D,I4GvydP,SAAuBC,GAEtBhC,KAAK+2D,aAAe/0D,G5GwyddL,WAAY,KACZC,aAAc,M4Gtydd8yC,GAAAn0C,UAAAguB,MAAP,WAEC,GAAIvuB,KAAKi3D,SACRj3D,KAAKuH,MAENvH,MAAKg3D,cAAgB,EAGtBz1D,QAAAC,eAAWkzC,EAAAn0C,UAAA,W5GsydJkB,I4GtydP,WAEC,MAAOzB,MAAKi3D,U5GuydNt1D,WAAY,KACZC,aAAc,M4Grydd8yC,GAAAn0C,UAAA4sC,MAAP,WAAA,GAAAtV,GAAA73B,IAECA,MAAKi3D,SAAW,IAChBE,eAAcn3D,KAAKo3D,KACnBp3D,MAAKo3D,KAAOC,YAAY,WAAM,MAAAx/B,GAAKy/B,QAAQt3D,KAAKk3D,QAG1CxiB,GAAAn0C,UAAAgH,KAAP,WAECvH,KAAKi3D,SAAW,KAChBE,eAAcn3D,KAAKo3D,MAGZ1iB,GAAAn0C,UAAA+2D,KAAR,WAECt3D,KAAKg3D,eAEL,IAAMh3D,KAAK+2D,aAAe,GAAO/2D,KAAKg3D,eAAiBh3D,KAAK+2D,aAAc,CAEzE/2D,KAAKuH,MACLvH,MAAK6K,cAAc,GAAI2B,GAAWA,EAAWC,OAC7CzM,MAAK6K,cAAc,GAAI2B,GAAWA,EAAWE,qBAEvC,CACN1M,KAAK6K,cAAc,GAAI2B,GAAWA,EAAWC,SAGhD,OAAAioC,IAzFoBpqC,EA2FpBxK,GAAeJ,QAANg1C,I5GmydNvsC,mCAAmC,mCAAmCkC,yCAAyC,yCAAyCkC,oCAAoC,sCAAsCmtC,kCAAkC,SAAS96C,EAAQkB,EAAOJ,G6Gl4d/R,GAAM+4C,GAAQ,WAAd,QAAMA,MAESA,EAAAO,mBAAd,SAAiCue,EAAWC,GAE3C,GAAIC,GAA4BzuC,SAAS0uC,wBAEzC,IAAGH,EAAM,CACR,GAAII,GAAaJ,EAAKK,WAAWh4D,MACjC,KAAI,GAAIP,GAAW,EAAGA,EAAIs4D,EAAKt4D,IAAK,CACnC,GAAIw4D,GAAaN,EAAKK,WAAWv4D,EACjC,IAAGw4D,GAAS,KAAM,CACjB,GAAGA,EAAMC,UAAYN,EAAK,CACzBC,EAASM,YAAYF,MAMzB,MAAOJ,GAASG,WAGHnf,GAAAuf,kBAAd,SAAgCnf,EAAgBof,EAAkBC,GAEjE,GAAIT,GAA4BzuC,SAAS0uC,wBAEzC,IAAG7e,EAAO,CACT,GAAI8e,GAAa9e,EAAMj5C,MACvB,KAAI,GAAIP,GAAW,EAAGA,EAAIs4D,EAAKt4D,IAAK,CACnC,GAAIw4D,GAAahf,EAAMx5C,EACvB,IAAGw4D,GAAS,KAAM,CACjB,GAAGA,EAAMM,WAAWC,aAAaH,GAAWj2D,OAASk2D,EAAY,CAChET,EAASM,YAAYF,MAMzB,MAAOJ,GAASG,WAGHnf,GAAAQ,SAAd,SAAuB3B,GACtB,GAAIvb,GAAmB,GAAIs8B,UAC3B,IAAId,GAAYx7B,EAAOu8B,gBAAgBhhB,EAAK,WAC5C,OAAOigB,GAGM9e,GAAA8f,aAAd,SAA2BhB,GAC1B,IAAIA,EAAM,MAAO,EACjB,IAAIjgB,IAAM,GAAKkhB,gBAAiBC,kBAAkBlB,EAClD,OAAOjgB,GAGMmB,GAAAU,mBAAd,SAAiCoe,EAAWmB,GAC3C,GAAIC,GAAQpB,EAAKY,UACjB,IAAGQ,GAASxuD,UAAW,CACtB,MAAO,GAER,GAAIyuD,GAAiBD,EAAMP,aAAaM,EACxC,KAAIE,EAAW,CAEd,MAAO,GAGR,MAAOA,GAAU52D,MAGJy2C,GAAAogB,oBAAd,SAAkCtB,EAAWmB,EAAiBI,GAC7D,GAAIF,GAAiB,GAAIG,KACzBH,GAAU/wD,KAAO6wD,CACjBE,GAAU52D,MAAQ82D,CAClBF,GAAYrB,EAAKY,WAAWa,aAAaJ,EACzCjtB,SAAQrhB,IAAI,6CAA+CsuC,EAAU/wD,KAAO,YAAc+wD,EAAU52D,OAGvFy2C,GAAAwgB,aAAd,SAA2B1B,EAAWmB,GACrC,GAAIC,GAAQpB,EAAKY,UACjB,IAAGQ,GAASxuD,UAAW,CACtB,MAAO,OAER,GAAIyuD,GAAiBD,EAAMP,aAAaM,EACxC,OAAOE,IAAa,KAEtB,OAAAngB,KACA34C,GAAkBJ,QAAT+4C,O7G43dH/B,kCAAkC,SAAS93C,EAAQkB,EAAOJ,GAMhE,Q8Gh9dSi1C,KAKR,MAAO9T,MAAKq4B,MAGbp5D,EAAkBJ,QAATi1C",
  "file": "awayjs-core.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nclass AttributesBuffer extends AssetBase\n{\n\tpublic static assetType:string = \"[assets AttributesBuffer]\";\n\t\n\tprivate _count:number = 0;\n\tprivate _stride:number = 0;\n\tprivate _newStride:number = 0;\n\n\tprivate _buffer:ArrayBuffer;\n\tprivate _bufferView:Uint8Array;\n\tprivate _contentDirty:boolean;\n\tprivate _lengthDirty:boolean;\n\tprivate _viewVOs:Array<ViewVO> = new Array<ViewVO>();\n\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesBuffer.assetType;\n\t}\n\n\tpublic get stride():number\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\treturn this._stride;\n\t}\n\n\tpublic set stride(value:number)\n\t{\n\t\tif (this._newStride == value)\n\t\t\treturn;\n\n\t\tthis._newStride = value;\n\n\t\tthis.resize();\n\t}\n\t\n\tpublic get count():number\n\t{\n\t\treturn this._count;\n\t}\n\t\n\tpublic set count(value:number)\n\t{\n\t\tif (this._count == value)\n\t\t\treturn;\n\t\t\n\t\tthis._count = value;\n\t\t\n\t\tthis.resize();\n\t}\n\n\n\tpublic get buffer():ArrayBuffer\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._buffer;\n\t}\n\n\n\tpublic get bufferView():Uint8Array\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._bufferView;\n\t}\n\n\tpublic set bufferView(value:Uint8Array)\n\t{\n\t\tthis._bufferView = value;\n\t\tthis._buffer = this._bufferView.buffer;\n\t}\n\n\tpublic get length()\n\t{\n\t\treturn this._count*this.stride;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tconstructor(stride:number = 0, count:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._stride = this._newStride = stride;\n\t\tthis._count = count;\n\n\t\tthis._buffer = new ArrayBuffer(this._stride*this._count);\n\t\tthis._bufferView = new Uint8Array(this._buffer, 0, this._buffer.byteLength);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tif (this._contentDirty)\n\t\t\treturn;\n\n\t\tsuper.invalidate();\n\n\t\tthis._contentDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic resize():void\n\t{\n\t\tif (this._lengthDirty)\n\t\t\treturn;\n\n\t\tthis.clear();\n\n\t\tthis._lengthDirty = true;\n\n\t\t//dispose buffer if stride is 0\n\t\tif (!this._newStride) {\n\t\t\tthis._buffer = null;\n\t\t\tthis._bufferView = null;\n\t\t}\n\t}\n\n\tpublic clone():AttributesBuffer\n\t{\n\t\tvar attributesBuffer:AttributesBuffer = new AttributesBuffer(this._stride, this._count);\n\t\tattributesBuffer.bufferView.set(this.bufferView);\n\n\t\tvar len:number = this._viewVOs.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._viewVOs[i].view._internalClone(attributesBuffer);\n\n\t\treturn attributesBuffer;\n\t}\n\n\tpublic getView(index:number):AttributesView\n\t{\n\t\tif (index < this._viewVOs.length)\n\t\t\treturn this._viewVOs[index].view;\n\n\t\treturn null;\n\t}\n\n\tpublic _setAttributes(viewIndex:number, arrayBufferView:ArrayBufferView, offset:number = 0)\n\t{\n\t\tvar array:Uint8Array = (arrayBufferView instanceof Uint8Array)? <Uint8Array> arrayBufferView : new Uint8Array(arrayBufferView.buffer);\n\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\t\tvar vCount:number = array.length/vLength;\n\n\t\t//make sure there is enough space in the buffer\n\t\tif (this.count < vCount + offset)\n\t\t\tthis.count = vCount + offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1) {\n\t\t\tthis._bufferView.set(array);\n\t\t} else {\n\t\t\tfor (var i:number = 0; i < vCount; i++)\n\t\t\t\tthis._bufferView.set(array.subarray(i*vLength, (i+1)*vLength), (i+offset)*this._stride + vOffset);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic _getLocalArrayBuffer(viewIndex:number):ArrayBuffer\n\t{\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1)\n\t\t\treturn this._buffer;\n\n\t\tvar localBuffer:ArrayBuffer = new ArrayBuffer(this._count*vLength);\n\t\tvar localBufferView:Uint8Array = new Uint8Array(localBuffer);\n\n\t\tfor (var i:number = 0; i < this._count; i++)\n\t\t\tlocalBufferView.set(this._bufferView.subarray(i*this._stride + vOffset, i*this._stride + vOffset + vLength), i*vLength);\n\n\t\treturn localBuffer;\n\t}\n\n\tpublic _addView(view:AttributesView)\n\t{\n\t\tvar viewVO:ViewVO = new ViewVO(view);\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.offset = len? this._viewVOs[len - 1].offset + this._viewVOs[len - 1].length : 0;\n\n\t\tthis._viewVOs.push(viewVO);\n\n\t\tif (this._newStride < viewVO.offset + viewVO.length) {\n\t\t\tthis._newStride = viewVO.offset + viewVO.length;\n\t\t\tthis.resize();\n\t\t}\n\n\t\tview._index = len;\n\t}\n\n\tpublic _removeView(view:AttributesView)\n\t{\n\t\tvar viewIndex:number = view._index;\n\t\tvar viewVO:ViewVO = this._viewVOs.splice(viewIndex, 1)[0];\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.dispose();\n\n\t\tfor (var i:number = viewIndex; i < len; i++) {\n\t\t\tviewVO = this._viewVOs[i];\n\t\t\tviewVO.offset = i? this._viewVOs[i - 1].offset + this._viewVOs[i - 1].length : 0;\n\t\t\tviewVO.view._index = i;\n\t\t}\n\n\t\tthis._newStride = viewVO.offset + viewVO.length;\n\n\t\tthis.resize();\n\t}\n\n\tpublic _getOffset(viewIndex:number):number\n\t{\n\t\treturn this._viewVOs[viewIndex].offset;\n\t}\n\n\tpublic _updateLength()\n\t{\n\t\tthis._lengthDirty = false;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tvar newLength:number = this._newStride*this._count;\n\n\t\tif (!this._buffer || this._buffer.byteLength != newLength) {\n\t\t\tvar newBuffer:ArrayBuffer = new ArrayBuffer(newLength);\n\t\t\tvar newView:Uint8Array = new Uint8Array(newBuffer, 0, newBuffer.byteLength);\n\t\t\tvar viewVO:ViewVO;\n\t\t\tvar vLength:number;\n\t\t\tvar vOffset:number;\n\t\t\tvar vOldOffset:number;\n\n\t\t\tif (this._stride != this._newStride) {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tviewVO = this._viewVOs[i];\n\t\t\t\t\tvLength = viewVO.length;\n\t\t\t\t\tvOffset = viewVO.offset;\n\t\t\t\t\tvOldOffset = viewVO.oldOffset;\n\t\t\t\t\tfor (j = 0; j < this._count; j++)\n\t\t\t\t\t\tif (vOldOffset != null)\n\t\t\t\t\t\t\tnewView.set(new Uint8Array(this._buffer, j*this._stride + vOldOffset, vLength), j*this._newStride + vOffset);\n\n\t\t\t\t\tviewVO.oldOffset = viewVO.offset;\n\t\t\t\t}\n\n\t\t\t\tthis._stride = this._newStride;\n\t\t\t} else {\n\t\t\t\tnewView.set(new Uint8Array(this._buffer, 0, Math.min(newLength, this._buffer.byteLength))); //TODO: bypass quantisation of bytearray on instantiation\n\t\t\t}\n\n\t\t\tthis._buffer = newBuffer;\n\t\t\tthis._bufferView = newView;\n\t\t}\n\t}\n}\n\nclass ViewVO\n{\n\tpublic view:AttributesView;\n\n\tpublic length;\n\n\tpublic offset;\n\n\tpublic oldOffset;\n\n\tconstructor(view:AttributesView)\n\t{\n\t\tthis.view = view;\n\t\tthis.length = view.size*view.dimensions;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.view = null;\n\t}\n\n\tpublic clone():ViewVO\n\t{\n\t\treturn new ViewVO(this.view);\n\t}\n}\n\nexport = AttributesBuffer;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass AttributesView extends AssetBase\n{\n\tpublic static assetType:string = \"[attributes AttributesView]\";\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesView.assetType;\n\t}\n\n\tpublic _cloneCache:AttributesView;\n\tpublic _attributesBuffer:AttributesBuffer;\n\tpublic _bufferDirty:boolean;\n\tprivate _size:number;\n\tprivate _dimensions:number;\n\n\tpublic _index:number;\n\tpublic _arrayClass:IArrayBufferViewClass;\n\n\tpublic _localArrayBuffer:ArrayBuffer;\n\n\tpublic normalized:boolean;\n\n\tpublic get buffer():AttributesBuffer\n\t{\n\t\treturn this._attributesBuffer;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._size = value;\n\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get dimensions():number\n\t{\n\t\treturn this._dimensions;\n\t}\n\n\tpublic set dimensions(value:number)\n\t{\n\t\tif (this._dimensions == value)\n\t\t\treturn;\n\n\t\tthis._dimensions = value;\n\n\t\t//reset view\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this._attributesBuffer.count;\n\t}\n\n\tpublic set count(value:number)\n\t{\n\t\tthis._attributesBuffer.count = value;\n\t}\n\n\tpublic get offset():number\n\t{\n\t\treturn this._attributesBuffer._getOffset(this._index);\n\t}\n\n\tpublic get length():number\n\t{\n\t\treturn this._attributesBuffer.count*this._dimensions;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, count?:number);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBuffer?:AttributesBuffer);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBufferCount:any = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._arrayClass = arrayClass;\n\t\tthis._size = arrayClass.BYTES_PER_ELEMENT;\n\t\tthis._dimensions = dimensions;\n\t\tthis._attributesBuffer = (attributesBufferCount instanceof AttributesBuffer)? <AttributesBuffer> attributesBufferCount : new AttributesBuffer(this._dimensions*this._size, attributesBufferCount);\n\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tthis._attributesBuffer._setAttributes(this._index, (values instanceof Array)? new (this._arrayClass)(values) : <ArrayBufferView> values, offset);\n\n\t\tthis._localArrayBuffer = null;\n\t}\n\n\tpublic get(count:number, offset:number = 0):ArrayBufferView\n\t{\n\t\tif (!this._localArrayBuffer)\n\t\t\tthis._localArrayBuffer = this._attributesBuffer._getLocalArrayBuffer(this._index);\n\n\t\tvar len:number = this._dimensions*this._size;\n\t\treturn new (this._arrayClass)(this._localArrayBuffer, offset*len, count*this._dimensions);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):AttributesView\n\t{\n\t\treturn (this._cloneCache = new AttributesView(this._arrayClass, this._dimensions, attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):AttributesView\n\t{\n\t\tif (attributesBuffer)\n\t\t\tthis._internalClone(attributesBuffer);\n\n\t\tif (!this._cloneCache)\n\t\t\tthis._attributesBuffer.clone();\n\n\t\tvar cloneCache:AttributesView = this._cloneCache;\n\t\tthis._cloneCache = null;\n\n\t\treturn cloneCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tif (!this._attributesBuffer)\n\t\t\treturn;\n\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer = null;\n\t\tthis._localArrayBuffer = null;\n\t}\n}\n\nexport = AttributesView;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Byte4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Byte4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Byte4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint8Array : Int8Array, 4, attributesBufferLength);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(typedArray:Uint8Array, offset?:number);\n\tpublic set(typedArray:Int8Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint8Array;\n\tpublic get(count:number, offset?:number):Int8Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte4Attributes\n\t{\n\t\treturn (this._cloneCache = new Byte4Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte4Attributes\n\t{\n\t\treturn <Byte4Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Byte4Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float1Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float1Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float1Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 1, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float1Attributes\n\t{\n\t\treturn (this._cloneCache = new Float1Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float1Attributes\n\t{\n\t\treturn <Float1Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float1Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 2, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float2Attributes\n\t{\n\t\treturn (this._cloneCache = new Float2Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float2Attributes\n\t{\n\t\treturn <Float2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float2Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 3, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\treturn (this._cloneCache = new Float3Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float3Attributes\n\t{\n\t\treturn <Float3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float3Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Float4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 4, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float4Attributes\n\t{\n\t\treturn (this._cloneCache = new Float4Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float4Attributes\n\t{\n\t\treturn <Float4Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Float4Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Short2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 2, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short2Attributes\n\t{\n\t\treturn (this._cloneCache = new Short2Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short2Attributes\n\t{\n\t\treturn <Short2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Short2Attributes;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport IArrayBufferViewClass\t= require(\"awayjs-core/lib/utils/IArrayBufferViewClass\");\n\nclass Short3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 3, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short3Attributes\n\t{\n\t\treturn (this._cloneCache = new Short3Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short3Attributes\n\t{\n\t\treturn <Short3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport = Short3Attributes;",
    "import IAudioChannel\t\t\t\t= require(\"awayjs-core/lib/managers/IAudioChannel\");\nimport AudioManager\t\t\t\t= require(\"awayjs-core/lib/managers/AudioManager\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\n// TODO: Audio should probably be an interface containing play/stop/seek functionality\nclass WaveAudio extends AssetBase\n{\n\tpublic static assetType:string = \"[asset WaveAudio]\";\n\n\tprivate _audioChannel:IAudioChannel;\n\tprivate _volume:number = 1;\n\tprivate _buffer:ArrayBuffer;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn WaveAudio.assetType;\n\t}\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tif (this._audioChannel)\n\t\t\tthis._audioChannel.volume = this._volume;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\tif (this._audioChannel)\n\t\t\treturn this._audioChannel.currentTime;\n\n\t\treturn 0;\n\t}\n\n\tpublic get duration():number\n\t{\n\t\tif (this._audioChannel)\n\t\t\treturn this._audioChannel.duration;\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(buffer:ArrayBuffer)\n\t{\n\t\tsuper();\n\n\t\tthis._buffer = buffer;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.stop();\n\t}\n\n\tpublic play(offset:number, loop:boolean = false)\n\t{\n\t\tthis._audioChannel = AudioManager.getChannel(this._buffer.byteLength);\n\n\t\tif (this._audioChannel) {\n\t\t\tthis._audioChannel.volume = this._volume;\n\t\t\tthis._audioChannel.play(this._buffer, offset, loop, this.id);\n\t\t}\n\t}\n\n\tpublic stop()\n\t{\n\t\tif (this._audioChannel)\n\t\t\tthis._audioChannel.stop();\n\n\t\tdelete this._audioChannel;\n\t\tthis._audioChannel = null;\n\t}\n\n\tpublic clone()\n\t{\n\t\tvar newInstance:WaveAudio = new WaveAudio(this._buffer);\n\n\t\tnewInstance.name = this.name;\n\n\t\treturn newInstance;\n\t}\n}\n\nexport = WaveAudio;",
    "import ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass AbstractMethodError extends ErrorBase\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\n\t}\n}\n\nexport = AbstractMethodError;",
    "import ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass ArgumentError extends ErrorBase\n{\n\t/**\n\t * Create a new ArgumentError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"ArgumentError\", id);\n\t}\n}\n\nexport = ArgumentError;",
    "import ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nclass DocumentError extends ErrorBase\n{\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\n\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\n\t{\n\t\tsuper(message, id);\n\t}\n}\n\nexport = DocumentError;",
    "class ErrorBase\n{\n\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\n\tprivate _name:string = '';  // Contains the name of the Error object.\n\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\n\t{\n\n\t\tthis._messsage = message;\n\t\tthis._name = name;\n\t\tthis._errorID = id;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get message():string\n\t{\n\t\treturn this._messsage;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set message(value:string)\n\t{\n\t\tthis._messsage = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get name():string\n\t{\n\n\t\treturn this._name;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set name(value:string)\n\t{\n\n\t\tthis._name = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get errorID():number\n\t{\n\n\t\treturn this._errorID;\n\n\t}\n\n}\n\nexport = ErrorBase;",
    "import ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass PartialImplementationError extends ErrorBase\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(dependency:string = '', id:number = 0)\n\t{\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\n\t}\n}\n\nexport = PartialImplementationError;",
    "import ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\n/**\n * RangeError is thrown when an index is accessed out of range of the number of\n * available indices on an Array.\n */\nclass RangeError extends ErrorBase\n{\n\t/**\n\t * Create a new RangeError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"RangeError\", id);\n\t}\n}\n\nexport = RangeError;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\n/**\n * @class away.events.AssetEvent\n */\nclass AssetEvent extends EventBase\n{\n\t/**\n\t * Dispatched when the content of an asset is invalidated\n\t */\n\tpublic static INVALIDATE:string = \"invalidate\";\n\n\t/**\n\t * Dispatched when an asset is diposed\n\t */\n\tpublic static DISPOSE:string = \"dispose\";\n\n\t/**\n\t * Dispatched when an asset is cleared\n\t */\n\tpublic static CLEAR:string = \"clear\";\n\n\t/**\n\t *\n\t */\n\tpublic static RENAME:string = 'rename';\n\n\t/**\n\t *\n\t */\n\tpublic static ENTER_FRAME:string = 'enterFrame';\n\n\t/**\n\t *\n\t */\n\tpublic static EXIT_FRAME:string = 'exitFrame';\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\n\n\t/**\n\t * Dispatched when the loading of an asset and all of its dependencies is complete.\n\t */\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\n\n\t/**\n\t *\n\t */\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\n\n\tprivate _asset:IAsset;\n\tprivate _prevName:string;\n\n\t/**\n\t *\n\t */\n\tconstructor(type:string, asset:IAsset, prevName:string = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._asset = asset;\n\t\tthis._prevName = prevName || this._asset.name;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get asset():IAsset\n\t{\n\t\treturn this._asset;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get prevName():string\n\t{\n\t\treturn this._prevName;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():AssetEvent\n\t{\n\t\treturn new AssetEvent(this.type, this._asset, this._prevName);\n\t}\n}\n\nexport = AssetEvent;",
    "class EventBase\n{\n\t/**\n\t * Type of event\n\t * @property type\n\t * @type String\n\t */\n\tpublic type:string = undefined;\n\n\t/**\n\t * Reference to target object\n\t * @property target\n\t * @type Object\n\t */\n\tpublic target:any = undefined;\n\n\tconstructor(type:string)\n\t{\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():EventBase\n\t{\n\t\treturn new EventBase(this.type);\n\t}\n}\n\nexport = EventBase;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\n/**\n * Base class for dispatching events\n*\n* @class away.events.EventDispatcher\n*\n*/\nclass EventDispatcher\n{\n\tprivate listenerObjects:Array<ListenerObject> = new Array<ListenerObject>();\n\tprivate target:any;\n\n\tconstructor(target:any = null)\n\t{\n\t\tthis.target = target || this;\n\t}\n\n\t/**\n\t * Add an event listener\n\t * @method addEventListener\n\t * @param {String} Name of event to add a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tvar l:ListenerObject = this.listenerObjects[type];\n\n\t\tif (l === undefined)\n\t\t\tl = this.listenerObjects[type] = new ListenerObject();\n\n\t\tl.addEventListener(listener);\n\t}\n\n\t/**\n\t * Remove an event listener\n\t * @method removeEventListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tvar l:ListenerObject = this.listenerObjects[type];\n\n\t\tif (l) {\n\t\t\tl.removeEventListener(listener);\n\n\t\t\tif (l.numListeners == 0)\n\t\t\t\tdelete this.listenerObjects[type];\n\t\t}\n\t}\n\n\t/**\n\t * Dispatch an event\n\t * @method dispatchEvent\n\t * @param {Event} Event to dispatch\n\t */\n\tpublic dispatchEvent(event:EventBase)\n\t{\n\t\tvar l:ListenerObject = this.listenerObjects[event.type];\n\n\t\tif (l) {\n\t\t\tevent.target = this.target;\n\t\t\tl.dispatchEvent(event);\n\t\t}\n\t}\n\n\t/**\n\t * check if an object has an event listener assigned to it\n\t * @method hasListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic hasEventListener(type:string, listener?:(event:EventBase) => void):boolean\n\t{\n\t\tif (this.listenerObjects[type] === undefined)\n\t\t\treturn false;\n\n\t\tif (listener != null)\n\t\t\treturn this.listenerObjects[type].getEventListenerIndex(listener) !== -1;\n\n\t\treturn this.listenerObjects[type].numListeners > 0;\n\t}\n}\n\nclass ListenerObject\n{\n\tpublic index:number = 0;\n\n\tpublic listeners:Array<(event:EventBase) => void> = new Array<(event:EventBase) => void>();\n\n\tpublic numListeners:number = 0;\n\n\tpublic addEventListener(listener:(event:EventBase) => void)\n\t{\n\t\t//check if listener already added\n\t\tif (this.getEventListenerIndex(listener) !== -1)\n\t\t\treturn;\n\n\t\tthis.listeners.push(listener);\n\t\tthis.numListeners++;\n\t}\n\n\tpublic removeEventListener(listener:(event:EventBase) => void)\n\t{\n\t\t//check if listener exists\n\t\tvar index:number = this.getEventListenerIndex(listener);\n\n\t\tif (index === -1)\n\t\t\treturn;\n\n\t\tthis.listeners.splice(index, 1);\n\t\tif (index <= this.index)\n\t\t\tthis.index--;\n\n\t\tthis.numListeners--;\n\t}\n\n\tpublic dispatchEvent(event:EventBase)\n\t{\n\t\tvar len:number = this.numListeners;\n\t\tfor (this.index = 0; this.index < len && this.index < this.numListeners; this.index++)\n\t\t\tthis.listeners[this.index](event);\n\t}\n\n\t/**\n\t * get Event Listener Index in array. Returns -1 if no listener is added\n\t * @method getEventListenerIndex\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic getEventListenerIndex(listener:(event:EventBase) => void):number\n\t{\n\t\tfor (var index:number = 0; index < this.numListeners; index++)\n\t\t\tif (listener == this.listeners[index])\n\t\t\t\treturn index;\n\n\t\treturn -1;\n\t}\n}\nexport = EventDispatcher;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass LoaderEvent extends EventBase\n{\n\t/**\n\t * Dispatched when the loading of a session and all of its dependencies is complete.\n\t */\n\tpublic static LOAD_COMPLETE:string = \"loadComplete\";\n\n\tprivate _url:string;\n\tprivate _content:IAsset;\n\tprivate _assets:IAsset[];\n\n\t/**\n\t * Create a new LoaderEvent object.\n\t *\n\t * @param type The event type.\n\t * @param url The url of the loaded resource.\n\t * @param assets The assets of the loaded resource.\n\t */\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._url = url;\n\t\tthis._content = content;\n\t\tthis._assets = assets;\n\t}\n\n\t/**\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\n\t */\n\tpublic get content():IAsset\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The url of the loaded resource.\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t * The error string on loadError.\n\t */\n\tpublic get assets():IAsset[]\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():LoaderEvent\n\t{\n\t\treturn new LoaderEvent(this.type, this._url, this._content, this._assets);\n\t}\n}\n\nexport = LoaderEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass ParserEvent extends EventBase\n{\n\tprivate _message:string;\n\n\t/**\n\t * Dispatched when parsing of an asset completed.\n\t */\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\n\n\t/**\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\n\t * incorrectly formatted.)\n\t */\n\tpublic static PARSE_ERROR:string = 'parseError';\n\n\n\t/**\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\n\t * This is an internal event that should rarely (if ever) be listened for by\n\t * external classes.\n\t */\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\n\n\n\tconstructor(type:string, message:string = '')\n\t{\n\t\tsuper(type);\n\n\t\tthis._message = message;\n\t}\n\n\n\t/**\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\n\t */\n\tpublic get message():string\n\t{\n\t\treturn this._message;\n\t}\n\n\n\tpublic clone():ParserEvent\n\t{\n\t\treturn new ParserEvent(this.type, this._message);\n\t}\n}\n\nexport = ParserEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionEvent extends EventBase\n{\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\n\n\tprivate _projection:IProjection;\n\n\tconstructor(type:string, projection:IProjection)\n\t{\n\t\tsuper(type);\n\t\tthis._projection = projection;\n\t}\n\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n}\n\nexport = ProjectionEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass TimerEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static TIMER:string = \"timer\";\n\n\t/**\n\t *\n\t */\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport = TimerEvent",
    "import URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass URLLoaderEvent extends EventBase\n{\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\n\n\tpublic static LOAD_ERROR:string = \"loadError\";\n\n\tpublic static LOAD_PROGRESS:string = \"loadProgress\";\n\n\tpublic static LOAD_START:string = \"loadStart\";\n\n\tpublic static LOAD_COMPLETE:string = \"loadComplete\";\n\n\tprivate _urlLoader:URLLoader;\n\n\tconstructor(type:string, urlLoader:URLLoader)\n\t{\n\t\tsuper(type);\n\n\t\tthis._urlLoader = urlLoader;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get urlLoader():URLLoader\n\t{\n\t\treturn this._urlLoader;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic clone():URLLoaderEvent\n\t{\n\t\treturn new URLLoaderEvent(this.type, this._urlLoader);\n\t}\n}\n\nexport = URLLoaderEvent;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Box object is an area defined by its position, as indicated by its\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\n * height and depth.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n * <code>height</code> <code>depth</code> properties of the Box class are\n * independent of each other; changing the value of one property has no effect\n * on the others. However, the <code>right</code>, <code>bottom</code> and\n * <code>back</code> properties are integrally related to those six\n * properties. For example, if you change the value of the <code>right</code>\n * property, the value of the <code>width</code> property changes; if you\n * change the <code>bottom</code> property, the value of the\n * <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Box objects:</p>\n *\n * <ul>\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\n * </ul>\n *\n * <p>You can use the <code>new Box()</code> constructor to create a\n * Box object.</p>\n *\n * <p><b>Note:</b> The Box class does not define a cubic Shape\n * display object.\n */\nclass Box\n{\n\tprivate _size:Vector3D;\n\tprivate _bottomRightBack:Vector3D;\n\tprivate _topLeftFront:Vector3D;\n\n\t/**\n\t * The height of the box, in pixels. Changing the <code>height</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the box, in pixels. Changing the <code>width</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic depth:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>x</code> property of a Box object has no\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>y</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>z</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>z</code> property is equal to the value of the\n\t * <code>front</code> property.</p>\n\t */\n\tpublic z:number\n\n\t/**\n\t * The sum of the <code>z</code> and <code>height</code> properties.\n\t */\n\tpublic get back():number\n\t{\n\t\treturn this.z + this.depth;\n\t}\n\n\tpublic set back(val:number)\n\t{\n\t\tthis.depth = val - this.z;\n\t}\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\tpublic set bottom(val:number)\n\t{\n\t\tthis.height = val - this.y;\n\t}\n\n\t/**\n\t * The location of the Box object's bottom-right corner, determined by the\n\t * values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRightBack():Vector3D\n\t{\n\t\tif (this._bottomRightBack == null)\n\t\t\tthis._bottomRightBack = new Vector3D();\n\n\t\tthis._bottomRightBack.x = this.x + this.width;\n\t\tthis._bottomRightBack.y = this.y + this.height;\n\t\tthis._bottomRightBack.z = this.z + this.depth;\n\n\t\treturn this._bottomRightBack;\n\t}\n\n\t/**\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>front</code> property of a Box object has no effect on the\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\n\t * properties. However it does affect the <code>depth</code> property,\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\n\t * <code>depth</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get front():number\n\t{\n\t\treturn this.z;\n\t}\n\n\tpublic set front(val:number)\n\t{\n\t\tthis.depth += this.z - val;\n\t\tthis.z = val;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\n\t * <code>left</code> property of a Box object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\tpublic set left(val:number)\n\t{\n\t\tthis.width += this.x - val;\n\t\tthis.x = val;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\tpublic set right(val:number)\n\t{\n\t\tthis.width = val - this.x;\n\t}\n\n\t/**\n\t * The size of the Box object, expressed as a Vector3D object with the\n\t * values of the <code>width</code>, <code>height</code> and\n\t * <code>depth</code> properties.\n\t */\n\tpublic get size():Vector3D\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Vector3D();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\t\tthis._size.z = this.depth;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>top</code> property of a Box object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\tpublic set top(val:number)\n\t{\n\t\tthis.height += (this.y - val);\n\t\tthis.y = val;\n\t}\n\n\t/**\n\t * The location of the Box object's top-left-front corner, determined by the\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\n\t */\n\tpublic get topLeftFront():Vector3D\n\t{\n\t\tif (this._topLeftFront == null)\n\t\t\tthis._topLeftFront = new Vector3D();\n\n\t\tthis._topLeftFront.x = this.x;\n\t\tthis._topLeftFront.y = this.y;\n\t\tthis._topLeftFront.z = this.z;\n\n\t\treturn this._topLeftFront;\n\t}\n\n\t/**\n\t * Creates a new Box object with the top-left-front corner specified by the\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\n\t * parameters. If you call this public without parameters, a box with\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param width  The width of the box, in pixels.\n\t * @param height The height of the box, in pixels.\n\t * @param depth The depth of the box, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = depth;\n\t}\n\n\t/**\n\t * Returns a new Box object with the same values for the <code>x</code>,\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\n\t * and <code>depth</code> properties as the original Box object.\n\t *\n\t * @return A new Box object with the same values for the <code>x</code>,\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\n\t *         <code>height</code> and <code>depth</code> properties as the\n\t *         original Box object.\n\t */\n\tpublic clone():Box\n\t{\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number, z:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object. This method is similar to the\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\n\t * object as a parameter.\n\t *\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\n\t *                 <i>z</i> coordinates.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\n\t}\n\n\t/**\n\t * Determines whether the Box object specified by the <code>box</code>\n\t * parameter is contained within this Box object. A Box object is said to\n\t * contain another if the second Box object falls entirely within the\n\t * boundaries of the first.\n\t *\n\t * @param box The Box object being checked.\n\t * @return A value of <code>true</code> if the Box object that you specify\n\t *         is contained by this Box object; otherwise <code>false</code>.\n\t */\n\tpublic containsBox(box:Box):boolean\n\t{\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\n\t}\n\n\t/**\n\t * Copies all of box data from the source Box object into the calling\n\t * Box object.\n\t *\n\t * @param sourceBox The Box object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceBox:Box)\n\t{\n\t\tthis.x = sourceBox.x;\n\t\tthis.y = sourceBox.y;\n\t\tthis.z = sourceBox.z;\n\t\tthis.width = sourceBox.width;\n\t\tthis.height = sourceBox.height;\n\t\tthis.depth = sourceBox.depth;\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Box object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties of an object against\n\t * the same properties of this Box object.\n\t *\n\t * @param toCompare The box to compare to this Box object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\n\t *         properties as this Box object; otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Box):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\n\t}\n\n\t/**\n\t * Increases the size of the Box object by the specified amounts, in\n\t * pixels. The center point of the Box object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, to\n\t * the top and the bottom by the <code>dy</code> value, and to\n\t * the front and the back by the <code>dz</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the box:\n\t * @param dy The value to be added to the top and the bottom of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           height and position of the box:\n\t * @param dz The value to be added to the front and the back of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           depth and position of the box:\n\t */\n\tpublic inflate(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.z -= dz/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t\tthis.depth += dz/2;\n\t}\n\n\t/**\n\t * Increases the size of the Box object. This method is similar to the\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\n\t *              increase the horizontal dimension of the Box object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Box object.\n\t *              The <code>z</code> property is used to increase the\n\t *              longitudinal dimension of the Box object.\n\t */\n\tpublic inflatePoint(delta:Vector3D)\n\t{\n\t\tthis.x -= delta.x/2;\n\t\tthis.y -= delta.y/2;\n\t\tthis.z -= delta.z/2;\n\t\tthis.width += delta.x/2;\n\t\tthis.height += delta.y/2;\n\t\tthis.depth += delta.z/2;\n\t}\n\n\t/**\n\t * If the Box object specified in the <code>toIntersect</code> parameter\n\t * intersects with this Box object, returns the area of intersection\n\t * as a Box object. If the boxes do not intersect, this method returns an\n\t * empty Box object with its properties set to 0.\n\t *\n\t * @param toIntersect The Box object to compare against to see if it\n\t *                    intersects with this Box object.\n\t * @return A Box object that equals the area of intersection. If the\n\t *         boxes do not intersect, this method returns an empty Box\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\n\t *         <code>depth</code> properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Box):Box\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Box = new Box();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\n\t\t\tif (this.z > toIntersect.z) {\n\t\t\t\ti.z = this.z;\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\n\n\t\t\t\tif (i.depth > this.depth)\n\t\t\t\t\ti.depth = this.depth;\n\t\t\t} else {\n\t\t\t\ti.z = toIntersect.z;\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\n\n\t\t\t\tif (i.depth > toIntersect.depth)\n\t\t\t\t\ti.depth = toIntersect.depth;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Box();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Box object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code>, and <code>depth</code> properties of the specified\n\t * Box object to see if it intersects with this Box object.\n\t *\n\t * @param toIntersect The Box object to compare against this Box object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Box object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Box):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar halfExtentsX:number = this.width/2;\n\t\tvar halfExtentsY:number = this.height/2;\n\t\tvar halfExtentsZ:number = this.depth/2;\n\n\t\tvar centerX:number = this.x + halfExtentsX;\n\t\tvar centerY:number = this.y + halfExtentsY;\n\t\tvar centerZ:number = this.z + halfExtentsZ;\n\n\t\tvar px:number = position.x - centerX;\n\t\tvar py:number = position.y - centerY;\n\t\tvar pz:number = position.z - centerZ;\n\n\t\tvar vx:number = direction.x;\n\t\tvar vy:number = direction.y;\n\t\tvar vz:number = direction.z;\n\n\t\tvar ix:number;\n\t\tvar iy:number;\n\t\tvar iz:number;\n\t\tvar rayEntryDistance:number;\n\n\t\t// ray-plane tests\n\t\tvar intersects:boolean;\n\t\tif (vx < 0) {\n\t\t\trayEntryDistance = ( halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vx > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = -1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy < 0) {\n\t\t\trayEntryDistance = ( halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = -1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz < 0) {\n\t\t\trayEntryDistance = ( halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = -1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn intersects? rayEntryDistance : -1;\n\t}\n\n\t/**\n\t * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\n\t *\n\t * @param point The point for which to find the closest point on the Box\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\n\t * @return\n\t */\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar p:number;\n\n\t\tif (target == null)\n\t\t\ttarget = new Vector3D();\n\n\t\tp = point.x;\n\t\tif (p < this.x)\n\t\t\tp = this.x;\n\t\tif (p > this.x + this.width)\n\t\t\tp = this.x + this.width;\n\t\ttarget.x = p;\n\n\t\tp = point.y;\n\t\tif (p < this.y + this.height)\n\t\t\tp = this.y + this.height;\n\t\tif (p > this.y)\n\t\t\tp = this.y;\n\t\ttarget.y = p;\n\n\t\tp = point.z;\n\t\tif (p < this.z)\n\t\t\tp = this.z;\n\t\tif (p > this.z + this.depth)\n\t\t\tp = this.z + this.depth;\n\t\ttarget.z = p;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Determines whether or not this Box object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Box object's width, height or\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object, as determined by its\n\t * top-left-front corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object using a Vector3D object as a\n\t * parameter. This method is similar to the <code>Box.offset()</code>\n\t * method, except that it takes a Vector3D object as a parameter.\n\t *\n\t * @param position A Vector3D object to use to offset this Box object.\n\t */\n\tpublic offsetPosition(position:Vector3D)\n\t{\n\t\tthis.x += position.x;\n\t\tthis.y += position.y;\n\t\tthis.z += position.z;\n\t}\n\n\t/**\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\n\t * width, height or depth is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\n\t * <code>depth</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.depth = 0;\n\t}\n\n\tpublic setBoundIdentity()\n\t{\n\t\tthis.x = Number.MAX_VALUE/2;\n\t\tthis.y = Number.MAX_VALUE/2;\n\t\tthis.z = Number.MAX_VALUE/2;\n\t\tthis.width = -Number.MAX_VALUE;\n\t\tthis.height = -Number.MAX_VALUE;\n\t\tthis.depth = -Number.MAX_VALUE;\n\t}\n\n\t/**\n\t * Sets the members of Box to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param widtha  The width of the box, in pixels.\n\t * @param heighta The height of the box, in pixels.\n\t * @param deptha  The depth of the box, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t\tthis.depth = deptha;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal, vertical and\n\t * longitudinal positions and the width, height and depth of the Box object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\n\t}\n\n\t/**\n\t * Adds two boxes together to create a new Box object, by filling\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\n\t *\n\t * @param toUnion A Box object to add to this Box object.\n\t * @return A new Box object that is the union of the two boxes.\n\t */\n\tpublic union(toUnion:Box, target:Box = null):Box\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Box();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\ttarget.x = this.x;\n\t\t\ttarget.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (target.width < this.width)\n\t\t\t\ttarget.width = this.width;\n\t\t} else {\n\t\t\ttarget.x = toUnion.x;\n\t\t\ttarget.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (target.width < toUnion.width)\n\t\t\t\ttarget.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\ttarget.y = this.y;\n\t\t\ttarget.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (target.height < this.height)\n\t\t\t\ttarget.height = this.height;\n\t\t} else {\n\t\t\ttarget.y = toUnion.y;\n\t\t\ttarget.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (target.height < toUnion.height)\n\t\t\t\ttarget.height = toUnion.height;\n\t\t}\n\n\t\tif (this.z < toUnion.z) {\n\t\t\ttarget.z = this.z;\n\t\t\ttarget.depth = toUnion.z - this.z + toUnion.depth;\n\n\t\t\tif (target.depth < this.depth)\n\t\t\t\ttarget.depth = this.depth;\n\t\t} else {\n\t\t\ttarget.z = toUnion.z;\n\t\t\ttarget.depth = this.z - toUnion.z + this.depth;\n\n\t\t\tif (target.depth < toUnion.depth)\n\t\t\t\ttarget.depth = toUnion.depth;\n\t\t}\n\n\t\treturn target;\n\t}\n}\n\nexport = Box;",
    "import ColorUtils\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\n/**\n * The ColorTransform class lets you adjust the color values in a display\n * object. The color adjustment or <i>color transformation</i> can be applied\n * to all four channels: red, green, blue, and alpha transparency.\n *\n * <p>When a ColorTransform object is applied to a display object, a new value\n * for each color channel is calculated like this:</p>\n *\n * <ul>\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\n * <code>redOffset</code></li>\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\n * <code>greenOffset</code></li>\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\n * <code>blueOffset</code></li>\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\n * <code>alphaOffset</code></li>\n * </ul>\n *\n * <p>If any of the color channel values is greater than 255 after the\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\n *\n * <p>You can use ColorTransform objects in the following ways:</p>\n *\n * <ul>\n *   <li>In the <code>colorTransform</code> parameter of the\n * <code>colorTransform()</code> method of the BitmapData class</li>\n *   <li>As the <code>colorTransform</code> property of a Transform object\n * (which can be used as the <code>transform</code> property of a display\n * object)</li>\n * </ul>\n *\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\n * a ColorTransform object before you can call the methods of the\n * ColorTransform object.</p>\n *\n * <p>Color transformations do not apply to the background color of a movie\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\n * that are attached to the movie clip.</p>\n */\nclass ColorTransform\n{\n\t/**\n\t * A decimal value that is multiplied with the alpha transparency channel\n\t * value.\n\t *\n\t * <p>If you set the alpha transparency value of a display object directly by\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\n\t * affects the value of the <code>alphaMultiplier</code> property of that\n\t * display object's <code>transform.colorTransform</code> property.</p>\n\t */\n\tpublic alphaMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the alpha transparency channel\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\n\t * value.\n\t */\n    public alphaOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the blue channel value.\n\t */\n    public blueMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the blue channel value after it\n\t * has been multiplied by the <code>blueMultiplier</code> value.\n\t */\n    public blueOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the green channel value.\n\t */\n    public greenMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the green channel value after\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\n\t */\n    public greenOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the red channel value.\n\t */\n    public redMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the red channel value after it\n\t * has been multiplied by the <code>redMultiplier</code> value.\n\t */\n    public redOffset:number;\n\n\t/**\n\t * The RGB color value for a ColorTransform object.\n\t *\n\t * <p>When you set this property, it changes the three color offset values\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\n\t * multiplier values(<code>redMultiplier</code>,\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\n\t * alpha transparency multiplier and offset values do not change.</p>\n\t *\n\t * <p>When you pass a value for this property, use the format\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\n\t * hexadecimal digits that specify the offset of each color component. The 0x\n\t * tells the ActionScript compiler that the number is a hexadecimal\n\t * value.</p>\n\t */\n\tpublic get color():number\n\t{\n\t\treturn((this.redOffset << 16) | ( this.greenOffset << 8) | this.blueOffset);\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\n\n\t\tthis.redOffset = argb[1];  //(value >> 16) & 0xFF;\n\t\tthis.greenOffset = argb[2];  //(value >> 8) & 0xFF;\n\t\tthis.blueOffset = argb[3];  //value & 0xFF;\n\n\t\tthis.redMultiplier = 0;\n\t\tthis.greenMultiplier = 0;\n\t\tthis.blueMultiplier = 0;\n\t}\n\n\t/**\n\t * Creates a ColorTransform object for a display object with the specified\n\t * color channel values and alpha values.\n\t *\n\t * @param redMultiplier   The value for the red multiplier, in the range from\n\t *                        0 to 1.\n\t * @param greenMultiplier The value for the green multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\n\t *                        the range from 0 to 1.\n\t * @param redOffset       The offset value for the red color channel, in the\n\t *                        range from -255 to 255.\n\t * @param greenOffset     The offset value for the green color channel, in\n\t *                        the range from -255 to 255.\n\t * @param blueOffset      The offset for the blue color channel value, in the\n\t *                        range from -255 to 255.\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\n\t *                        the range from -255 to 255.\n\t */\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\n\t{\n\t\tthis.redMultiplier = redMultiplier;\n\t\tthis.greenMultiplier = greenMultiplier;\n\t\tthis.blueMultiplier = blueMultiplier;\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\t\tthis.redOffset = redOffset;\n\t\tthis.greenOffset = greenOffset;\n\t\tthis.blueOffset = blueOffset;\n\t\tthis.alphaOffset = alphaOffset;\n\t}\n\n    public clear()\n    {\n        this.redMultiplier = 1;\n        this.greenMultiplier = 1;\n        this.blueMultiplier = 1;\n        this.alphaMultiplier = 1;\n        this.redOffset = 0;\n        this.greenOffset = 0;\n        this.blueOffset = 0;\n        this.alphaOffset = 0;\n    }\n\n    public clone():ColorTransform\n    {\n        return new ColorTransform(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n    }\n\n    public copyFrom(source:ColorTransform)\n    {\n        this.redMultiplier = source.redMultiplier;\n        this.greenMultiplier = source.greenMultiplier;\n        this.blueMultiplier = source.blueMultiplier;\n        this.alphaMultiplier = source.alphaMultiplier;\n        this.redOffset = source.redOffset;\n        this.greenOffset = source.greenOffset;\n        this.blueOffset = source.blueOffset;\n        this.alphaOffset = source.alphaOffset;\n    }\n\n    public copyTo(destination:ColorTransform)\n    {\n        destination.copyFrom(this);\n    }\n\n    public prepend(ct:ColorTransform)\n    {\n        this.redOffset += ct.redOffset * this.redMultiplier;\n        this.greenOffset += ct.greenOffset * this.greenMultiplier;\n        this.blueOffset += ct.blueOffset * this.blueMultiplier;\n        this.alphaOffset += ct.alphaOffset * this.alphaMultiplier;\n\n        this.redMultiplier *= ct.redMultiplier;\n        this.greenMultiplier *= ct.greenMultiplier;\n        this.blueMultiplier *= ct.blueMultiplier;\n        this.alphaMultiplier *= ct.alphaMultiplier;\n    }\n}\n\nexport = ColorTransform;",
    "/**\n* MathConsts provides some commonly used mathematical constants\n*/\nclass MathConsts\n{\n\t/**\n\t * The amount to multiply with when converting radians to degrees.\n\t */\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\n\n\t/**\n\t * The amount to multiply with when converting degrees to radians.\n\t */\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\n}\n\nexport = MathConsts;",
    "import Quaternion\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\n/**\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\n */\nclass Matrix3DUtils\n{\n\t/**\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\n\t */\n\tpublic static RAW_DATA_CONTAINER:Float32Array = new Float32Array(16);\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\n\t *\n\t * @param    quarternion    The quarterion object to convert.\n\t */\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\n\t{\n\t\tvar x:number = quarternion.x;\n\t\tvar y:number = quarternion.y;\n\t\tvar z:number = quarternion.z;\n\t\tvar w:number = quarternion.w;\n\n\t\tvar xx:number = x*x;\n\t\tvar xy:number = x*y;\n\t\tvar xz:number = x*z;\n\t\tvar xw:number = x*w;\n\n\t\tvar yy:number = y*y;\n\t\tvar yz:number = y*z;\n\t\tvar yw:number = y*w;\n\n\t\tvar zz:number = z*z;\n\t\tvar zw:number = z*w;\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\traw[0] = 1 - 2*(yy + zz);\n\t\traw[1] = 2*(xy + zw);\n\t\traw[2] = 2*(xz - yw);\n\t\traw[4] = 2*(xy - zw);\n\t\traw[5] = 1 - 2*(xx + zz);\n\t\traw[6] = 2*(yz + xw);\n\t\traw[8] = 2*(xz + yw);\n\t\traw[9] = 2*(yz - xw);\n\t\traw[10] = 1 - 2*(xx + yy);\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tif (m) {\n\t\t\tm.copyRawDataFrom(raw);\n\t\t\treturn m;\n\t\t} else\n\t\t\treturn new Matrix3D(raw);\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the forward vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The forward vector\n\t */\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\tif (v === null)\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\tm.copyColumnTo(2, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the up vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The up vector\n\t */\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\tif (v === null)\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\tm.copyColumnTo(1, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the right vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The right vector\n\t */\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(0, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\n\t */\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\n\t{\n\t\tvar r1:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar r2:Float32Array = m2.rawData;\n\t\tm1.copyRawDataTo(r1);\n\n\t\tfor (var i:number = 0; i < 16; ++i) {\n\t\t\tif (r1[i] != r2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D)\n\t{\n\t\tvar dirN:Vector3D;\n\t\tvar upN:Vector3D;\n\t\tvar lftN:Vector3D;\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tlftN = dir.crossProduct(up);\n\t\tlftN.normalize();\n\n\t\tupN = lftN.crossProduct(dir);\n\t\tupN.normalize();\n\t\tdirN = dir.clone();\n\t\tdirN.normalize();\n\n\t\traw[0] = lftN.x;\n\t\traw[1] = upN.x;\n\t\traw[2] = -dirN.x;\n\t\traw[3] = 0.0;\n\n\t\traw[4] = lftN.y;\n\t\traw[5] = upN.y;\n\t\traw[6] = -dirN.y;\n\t\traw[7] = 0.0;\n\n\t\traw[8] = lftN.z;\n\t\traw[9] = upN.z;\n\t\traw[10] = -dirN.z;\n\t\traw[11] = 0.0;\n\n\t\traw[12] = -lftN.dotProduct(pos);\n\t\traw[13] = -upN.dotProduct(pos);\n\t\traw[14] = dirN.dotProduct(pos);\n\t\traw[15] = 1.0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target === null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar ab2:number = -2*a*b;\n\t\tvar ac2:number = -2*a*c;\n\t\tvar bc2:number = -2*b*c;\n\t\t// reflection matrix\n\t\trawData[0] = 1 - 2*a*a;\n\t\trawData[4] = ab2;\n\t\trawData[8] = ac2;\n\t\trawData[12] = -2*a*d;\n\t\trawData[1] = ab2;\n\t\trawData[5] = 1 - 2*b*b;\n\t\trawData[9] = bc2;\n\t\trawData[13] = -2*b*d;\n\t\trawData[2] = ac2;\n\t\trawData[6] = bc2;\n\t\trawData[10] = 1 - 2*c*c;\n\t\trawData[14] = -2*c*d;\n\t\trawData[3] = 0;\n\t\trawData[7] = 0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar d:number = raw[12];\n\t\tvar h:number = raw[13];\n\t\tvar l:number = raw[14];\n\t\tvar p:number = raw[15];\n\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z + d;\n\t\tresult.y = e * x + f * y + g * z + h;\n\t\tresult.z = i * x + j * y + k * z + l;\n\t\tresult.w = m * x + n * y + o * z + p;\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z;\n\t\tresult.y = e * x + f * y + g * z;\n\t\tresult.z = i * x + j * y + k * z;\n\t\tresult.w = m * x + n * y + o * z;\n\t\treturn result;\n\t}\n\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif(!result)\n\t\t\tresult = new Vector3D();\n\n\t\ttransform.copyColumnTo(3, result);\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar outIndex:number = 0;\n\t\tvar length:number = vin.length;\n\t\tfor(var index:number = 0; index<length; index+=3) {\n\t\t\tvar x:number = vin[index];\n\t\t\tvar y:number = vin[index+1];\n\t\t\tvar z:number = vin[index+2];\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\n\t\t}\n\t}\n}\n\nexport = Matrix3DUtils;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Orientation3D\t\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Quaternion\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\nclass Matrix3D\n{\n\t/**\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\n\t *\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\n\t * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\n\t */\n\tpublic rawData:Float32Array = new Float32Array(16);\n\n\tprivate static tempMatrix:Matrix3D = new Matrix3D();\n\tprivate static tempRawData:Float32Array = Matrix3D.tempMatrix.rawData;\n\n\tprivate _position:Vector3D = new Vector3D();\n\tprivate _positionDirty:boolean = true;\n\n\tprivate _components:Array<Vector3D>;\n\n\t/**\n\t * Creates a Matrix3D object.\n\t */\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tif (v != null && v.length == 16) {\n\t\t\tthis.copyRawDataFrom(v);\n\t\t} else {\n\t\t\tthis.identity();\n\t\t}\n\t}\n\n\t/**\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\n\t */\n\tpublic append(lhs:Matrix3D)\n\t{\n\t\tvar lrd:Float32Array = lhs.rawData;\n\n\t\tvar m111:number = this.rawData[0];\n\t\tvar m112:number = this.rawData[1];\n\t\tvar m113:number = this.rawData[2];\n\t\tvar m114:number = this.rawData[3];\n\t\tvar m121:number = this.rawData[4];\n\t\tvar m122:number = this.rawData[5];\n\t\tvar m123:number = this.rawData[6];\n\t\tvar m124:number = this.rawData[7];\n\t\tvar m131:number = this.rawData[8];\n\t\tvar m132:number = this.rawData[9];\n\t\tvar m133:number = this.rawData[10];\n\t\tvar m134:number = this.rawData[11];\n\t\tvar m141:number = this.rawData[12];\n\t\tvar m142:number = this.rawData[13];\n\t\tvar m143:number = this.rawData[14];\n\t\tvar m144:number = this.rawData[15];\n\t\tvar m211:number = lrd[0];\n\t\tvar m212:number = lrd[1];\n\t\tvar m213:number = lrd[2];\n\t\tvar m214:number = lrd[3];\n\t\tvar m221:number = lrd[4];\n\t\tvar m222:number = lrd[5];\n\t\tvar m223:number = lrd[6];\n\t\tvar m224:number = lrd[7];\n\t\tvar m231:number = lrd[8];\n\t\tvar m232:number = lrd[9];\n\t\tvar m233:number = lrd[10];\n\t\tvar m234:number = lrd[11];\n\t\tvar m241:number = lrd[12];\n\t\tvar m242:number = lrd[13];\n\t\tvar m243:number = lrd[14];\n\t\tvar m244:number = lrd[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\n\t\tthis._positionDirty = true;\n\t}\n\n\t/**\n\t * Appends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null )\n\t{\n\t\tthis.append(Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees));\n\t}\n\n\t/**\n\t * Appends an incremental skew change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendSkew(xSkew:number, ySkew:number, zSkew:number)\n\t{\n\t\tif(xSkew == 0 && ySkew == 0 && zSkew == 0) return;\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\traw[0] = 1;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = xSkew;\n\t\traw[5] = 1;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = ySkew;\n\t\traw[9] = zSkew;\n\t\traw[10] = 1;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.append(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\n\t\t\treturn;\n\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = xScale;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = yScale;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = zScale;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.append(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic appendTranslation(x:number, y:number, z:number)\n\t{\n\t\tthis.rawData[12] += x;\n\t\tthis.rawData[13] += y;\n\t\tthis.rawData[14] += z;\n\n\t\tthis._positionDirty = true;\n\t}\n\n\t/**\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\n\t */\n\tpublic clone():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.rawData);\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\n\t */\n\tpublic copyFrom(source:Matrix3D)\n\t{\n\t\tvar sourceRaw:Float32Array = source.rawData;\n\t\tvar len:number = sourceRaw.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = sourceRaw[c];\n\t}\n\n\t/**\n\t * Copies this Matrix3D object into a destination Matrix3D object.\n\t */\n\tpublic copyTo(target:Matrix3D)\n\t{\n\t\tvar targetRaw:Float32Array = target.rawData;\n\t\tvar len:number = this.rawData.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\ttargetRaw[c] = this.rawData[c];\n\t}\n\n\tpublic copyRawDataFrom(vector:Float32Array, index:number = 0, transpose:boolean = false):void\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = vector.length - index;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = vector[c + index];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\tpublic copyRawDataTo(vector:Float32Array, index:number = 0, transpose:boolean = false)\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = this.rawData.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tvector[c + index ] = this.rawData[c];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\n\t */\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\n\t{\n\t\tvar q:Quaternion;\n\n\t\tif (this._components == null)\n\t\t\tthis._components = [null, new Vector3D(), new Vector3D(), new Vector3D()];\n\n\t\tvar colX:Vector3D = new Vector3D(this.rawData[0], this.rawData[1], this.rawData[2]);\n\t\tvar colY:Vector3D = new Vector3D(this.rawData[4], this.rawData[5], this.rawData[6]);\n\t\tvar colZ:Vector3D = new Vector3D(this.rawData[8], this.rawData[9], this.rawData[10]);\n\n\t\tvar scale:Vector3D = this._components[3];\n\t\tvar skew:Vector3D = this._components[2];\n\n\t\t//compute X scale factor and normalise colX\n\t\tscale.x = colX.length;\n\t\tcolX.scaleBy(1/scale.x);\n\n\t\t//compute XY shear factor and make colY orthogonal to colX\n\t\tskew.x = colX.dotProduct(colY);\n\t\tcolY = Vector3D.combine(colY, colX, 1, -skew.x);\n\n\t\t//compute Y scale factor and normalise colY\n\t\tscale.y = colY.length;\n\t\tcolY.scaleBy(1/scale.y);\n\t\tskew.x /= scale.y;\n\n\t\t//compute XZ and YZ shears and make colZ orthogonal to colX and colY\n\t\tskew.y = colX.dotProduct(colZ);\n\t\tcolZ = Vector3D.combine(colZ, colX, 1, -skew.y);\n\t\tskew.z = colY.dotProduct(colZ);\n\t\tcolZ = Vector3D.combine(colZ, colY, 1, -skew.z);\n\n\t\t//compute Z scale and normalise colZ\n\t\tscale.z = colZ.length;\n\t\tcolZ.scaleBy(1/scale.z);\n\t\tskew.y /= scale.z;\n\t\tskew.z /= scale.z;\n\n\t\t//at this point, the matrix (in cols) is orthonormal\n\t\t//check for a coordinate system flip. If the determinant is -1, negate the z scaling factor\n\t\tif (colX.dotProduct(colY.crossProduct(colZ)) < 0) {\n\t\t\tscale.z = -scale.z;\n\t\t\tcolZ.x = -colZ.x;\n\t\t\tcolZ.y = -colZ.y;\n\t\t\tcolZ.z = -colZ.z;\n\t\t}\n\n\t\tvar rot = this._components[1];\n\n\t\tswitch (orientationStyle) {\n\t\t\tcase Orientation3D.AXIS_ANGLE:\n\n\t\t\t\trot.w = Math.acos((colX.x + colY.y + colZ.z - 1)/2);\n\n\t\t\t\tvar len:number = Math.sqrt((colY.z - colZ.y)*(colY.z - colZ.y) + (colZ.x - colX.z)*(colZ.x - colX.z) + (colX.y - colY.x)*(colX.y - colY.x));\n\t\t\t\trot.x = (colY.z - colZ.y)/len;\n\t\t\t\trot.y = (colZ.x - colX.z)/len;\n\t\t\t\trot.z = (colX.y - colY.x)/len;\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.QUATERNION:\n\n\t\t\t\tvar tr = colX.x + colY.y + colZ.z;\n\n\t\t\t\tif (tr > 0) {\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\n\n\t\t\t\t\trot.x = (colY.z - colZ.y)/(4*rot.w);\n\t\t\t\t\trot.y = (colZ.x - colX.z)/(4*rot.w);\n\t\t\t\t\trot.z = (colX.y - colY.x)/(4*rot.w);\n\t\t\t\t} else if ((colX.x > colY.y) && (colX.x > colZ.z)) {\n\t\t\t\t\trot.x = Math.sqrt(1 + colX.x - colY.y - colZ.z)/2;\n\n\t\t\t\t\trot.w = (colY.z - colZ.y)/(4*rot.x);\n\t\t\t\t\trot.y = (colX.y + colY.x)/(4*rot.x);\n\t\t\t\t\trot.z = (colZ.x + colX.z)/(4*rot.x);\n\t\t\t\t} else if (colY.y > colZ.z) {\n\t\t\t\t\trot.y = Math.sqrt(1 + colY.y - colX.x - colZ.z)/2;\n\n\t\t\t\t\trot.x = (colX.y + colY.x)/(4*rot.y);\n\t\t\t\t\trot.w = (colZ.x - colX.z)/(4*rot.y);\n\t\t\t\t\trot.z = (colY.z + colZ.y)/(4*rot.y);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = Math.sqrt(1 + colZ.z - colX.x - colY.y)/2;\n\n\t\t\t\t\trot.x = (colZ.x + colX.z)/(4*rot.z);\n\t\t\t\t\trot.y = (colY.z + colZ.y)/(4*rot.z);\n\t\t\t\t\trot.w = (colX.y - colY.x)/(4*rot.z);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\n\t\t\t\trot.y = Math.asin(-colX.z);\n\n\t\t\t\t//var cos:number = Math.cos(rot.y);\n\n\t\t\t\tif (colX.z != 1 && colX.z != -1) {\n\t\t\t\t\trot.x = Math.atan2(colY.z, colZ.z);\n\t\t\t\t\trot.z = Math.atan2(colX.y, colX.x);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = 0;\n\t\t\t\t\trot.x = Math.atan2(colY.x, colY.y);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._components[0] = this.position;\n\n\t\treturn this._components;\n\t}\n\n\t/**\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\n\t * coordinate to another.\n\t */\n\tpublic deltaTransformVector(v:Vector3D, t:Vector3D = null):Vector3D\n\t{\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\tif (!t)\n\t\t\tt = new Vector3D();\n\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8];\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9];\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10];\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11];\n\n\t\treturn t;\n\t}\n\n\t/**\n\t * Converts the current matrix to an identity or unit matrix.\n\t */\n\tpublic identity()\n\t{\n\t\tthis.rawData[0] = 1;\n\t\tthis.rawData[1] = 0;\n\t\tthis.rawData[2] = 0;\n\t\tthis.rawData[3] = 0;\n\t\tthis.rawData[4] = 0;\n\t\tthis.rawData[5] = 1;\n\t\tthis.rawData[6] = 0;\n\t\tthis.rawData[7] = 0;\n\t\tthis.rawData[8] = 0;\n\t\tthis.rawData[9] = 0;\n\t\tthis.rawData[10] = 1;\n\t\tthis.rawData[11] = 0;\n\t\tthis.rawData[12] = 0;\n\t\tthis.rawData[13] = 0;\n\t\tthis.rawData[14] = 0;\n\t\tthis.rawData[15] = 1;\n\n\t\tthis._positionDirty = true;\n\t}\n\n\t/**\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\n\t */\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\n\t */\n\tpublic interpolateTo(toMat:Matrix3D, percent:number)\n\t{\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\n\t}\n\n\t/**\n\t * Inverts the current matrix.\n\t */\n\tpublic invert():boolean\n\t{\n\t\tvar d = this.determinant;\n\t\tvar invertable:boolean = Math.abs(d) > 0.00000000001;\n\n\t\tif (invertable) {\n\t\t\td = 1/d;\n\t\t\tvar m11:number = this.rawData[0];\n\t\t\tvar m12:number = this.rawData[1];\n\t\t\tvar m13:number = this.rawData[2];\n\t\t\tvar m14:number = this.rawData[3];\n\t\t\tvar m21:number = this.rawData[4];\n\t\t\tvar m22:number = this.rawData[5];\n\t\t\tvar m23:number = this.rawData[6];\n\t\t\tvar m24:number = this.rawData[7];\n\t\t\tvar m31:number = this.rawData[8];\n\t\t\tvar m32:number = this.rawData[9];\n\t\t\tvar m33:number = this.rawData[10];\n\t\t\tvar m34:number = this.rawData[11];\n\t\t\tvar m41:number = this.rawData[12];\n\t\t\tvar m42:number = this.rawData[13];\n\t\t\tvar m43:number = this.rawData[14];\n\t\t\tvar m44:number = this.rawData[15];\n\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\n\t\t}\n\n\t\tthis._positionDirty = true;\n\n\t\treturn invertable;\n\t}\n\n\t/* TODO implement pointAt\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\n\t {\n\t }\n\t */\n\n\t/**\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\n\t */\n\tpublic prepend(rhs:Matrix3D)\n\t{\n\t\tvar m111:number = rhs.rawData[0];\n\t\tvar m112:number = rhs.rawData[1];\n\t\tvar m113:number = rhs.rawData[2];\n\t\tvar m114:number = rhs.rawData[3];\n\t\tvar m121:number = rhs.rawData[4];\n\t\tvar m122:number = rhs.rawData[5];\n\t\tvar m123:number = rhs.rawData[6];\n\t\tvar m124:number = rhs.rawData[7];\n\t\tvar m131:number = rhs.rawData[8];\n\t\tvar m132:number = rhs.rawData[9];\n\t\tvar m133:number = rhs.rawData[10];\n\t\tvar m134:number = rhs.rawData[11];\n\t\tvar m141:number = rhs.rawData[12];\n\t\tvar m142:number = rhs.rawData[13];\n\t\tvar m143:number = rhs.rawData[14];\n\t\tvar m144:number = rhs.rawData[15];\n\n\t\tvar m211:number = this.rawData[0];\n\t\tvar m212:number = this.rawData[1];\n\t\tvar m213:number = this.rawData[2];\n\t\tvar m214:number = this.rawData[3];\n\t\tvar m221:number = this.rawData[4];\n\t\tvar m222:number = this.rawData[5];\n\t\tvar m223:number = this.rawData[6];\n\t\tvar m224:number = this.rawData[7];\n\t\tvar m231:number = this.rawData[8];\n\t\tvar m232:number = this.rawData[9];\n\t\tvar m233:number = this.rawData[10];\n\t\tvar m234:number = this.rawData[11];\n\t\tvar m241:number = this.rawData[12];\n\t\tvar m242:number = this.rawData[13];\n\t\tvar m243:number = this.rawData[14];\n\t\tvar m244:number = this.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\n\t\tthis._positionDirty = true;\n\t}\n\n\t/**\n\t * Prepends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\t/*\n\t\t if ( pivot != null )\n\t\t {\n\t\t var p:Vector3D = pivot;\n\t\t m.appendTranslation( p.x, p.y, p.z );\n\t\t }\n\t\t */\n\t\tthis.prepend(m);\n\t}\n\n\t/**\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic prependScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\n\t\t\treturn;\n\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = xScale;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = yScale;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = zScale;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.prepend(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic prependTranslation(x:number, y:number, z:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = 1;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = 1;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = 1;\n\t\traw[11] = 0;\n\n\t\traw[12] = x;\n\t\traw[13] = y;\n\t\traw[14] = z;\n\t\traw[15] = 1;\n\n\t\tthis.prepend(Matrix3D.tempMatrix);\n\t}\n\n\t// TODO orientationStyle\n\t/**\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\n\t */\n\tpublic recompose(components:Vector3D[]):boolean\n\t{\n\t\tvar pos:Vector3D = components[0] || this.position;\n\n\t\tthis.identity();\n\t\tvar scale:Vector3D = components[3];\n\t\tif(scale && (scale.x != 1 || scale.y != 1 || scale.z != 1))\n\t\t\tthis.appendScale(scale.x, scale.y, scale.z);\n\n\t\tvar skew:Vector3D = components[2];\n\t\tif(skew && (skew.x !=0 || skew.y != 0 || skew.z != 0))\n\t\t\tthis.appendSkew(skew.x, skew.y, skew.z);\n\n\t\tvar sin:number;\n\t\tvar cos:number;\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 0;\n\n\t\tvar rotation:Vector3D = components[1];\n\t\tif (rotation) {\n\t\t\tvar angle:number = -rotation.x;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = 1;\n\t\t\t\traw[1] = 0;\n\t\t\t\traw[2] = 0;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = 0;\n\t\t\t\traw[5] = cos;\n\t\t\t\traw[6] = -sin;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = 0;\n\t\t\t\traw[9] = sin;\n\t\t\t\traw[10] = cos;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t\tangle = -rotation.y;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = cos;\n\t\t\t\traw[1] = 0;\n\t\t\t\traw[2] = sin;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = 0;\n\t\t\t\traw[5] = 1;\n\t\t\t\traw[6] = 0;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = -sin;\n\t\t\t\traw[9] = 0;\n\t\t\t\traw[10] = cos;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t\tangle = -rotation.z;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = cos;\n\t\t\t\traw[1] = -sin;\n\t\t\t\traw[2] = 0;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = sin;\n\t\t\t\traw[5] = cos;\n\t\t\t\traw[6] = 0;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = 0;\n\t\t\t\traw[9] = 0;\n\t\t\t\traw[10] = 1;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t}\n\n\t\tthis.rawData[12] = pos.x;\n\t\tthis.rawData[13] = pos.y;\n\t\tthis.rawData[14] = pos.z;\n\n\t\tif (components[0])\n\t\t\tthis._positionDirty = true;\n\n\t\tthis.rawData[15] = 1;\n\n\t\treturn true;\n\t}\n\n\tpublic transformVector(v:Vector3D, t:Vector3D = null):Vector3D\n\t{\n\t\tif (v == null)\n\t\t\treturn t || new Vector3D();\n\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\tif (!t)\n\t\t\tt = new Vector3D();\n\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15];\n\n\t\treturn t;\n\t}\n\n\tpublic transformBox(b:Box, t:Box = null):Box\n\t{\n\t\tif (b == null)\n\t\t\treturn t || new Box();\n\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tmaxX = b.width + (minX = b.x);\n\t\tmaxY = b.height + (minY = b.y);\n\t\tmaxZ = b.depth + (minZ = b.z);\n\n\t\tif (!t)\n\t\t\tt = new Box();\n\n\t\t//TODO: take account of shear\n\t\tt.width = maxX*this.rawData[0] + maxY*this.rawData[4] + maxZ*this.rawData[8] + this.rawData[12] - (t.x = minX*this.rawData[0] + minY*this.rawData[4] + minZ*this.rawData[8] + this.rawData[12]);\n\t\tt.height = maxX*this.rawData[1] + maxY*this.rawData[5] + maxZ*this.rawData[9] + this.rawData[13] - (t.y = minX*this.rawData[1] + minY*this.rawData[5] + minZ*this.rawData[9] + this.rawData[13]);\n\t\tt.depth = maxX*this.rawData[2] + maxY*this.rawData[6] + maxZ*this.rawData[10] + this.rawData[14] - (t.z = minX*this.rawData[2] + minY*this.rawData[6] + minZ*this.rawData[10] + this.rawData[14]);\n\n\t\treturn t;\n\t}\n\n\t/**\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\n\t */\n\tpublic transformVectors(vin:number[], vout:number[])\n\t{\n\t\tvar i:number = 0;\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\n\n\t\twhile (i + 3 <= vin.length) {\n\t\t\tx = vin[i];\n\t\t\ty = vin[i + 1];\n\t\t\tz = vin[i + 2];\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\n\t */\n\tpublic transpose()\n\t{\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\tthis.copyRawDataTo(raw);\n\n\t\tthis.rawData[1] = raw[4];\n\t\tthis.rawData[2] = raw[8];\n\t\tthis.rawData[3] = raw[12];\n\t\tthis.rawData[4] = raw[1];\n\t\tthis.rawData[6] = raw[9];\n\t\tthis.rawData[7] = raw[13];\n\t\tthis.rawData[8] = raw[2];\n\t\tthis.rawData[9] = raw[6];\n\t\tthis.rawData[11] = raw[14];\n\t\tthis.rawData[12] = raw[3];\n\t\tthis.rawData[13] = raw[7];\n\t\tthis.rawData[14] = raw[11];\n\n\t\tthis._positionDirty = true;\n\t}\n\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\n\t{\n\n\t\t// internal class use by rotations which have been tested\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tvar rad = degrees*MathConsts.DEGREES_TO_RADIANS;\n\t\tvar c:number = Math.cos(rad);\n\t\tvar s:number = Math.sin(rad);\n\t\tvar t:number = 1 - c;\n\t\tvar tmp1:number, tmp2:number;\n\n\t\tm.rawData[0] = c + x*x*t;\n\t\tm.rawData[5] = c + y*y*t;\n\t\tm.rawData[10] = c + z*z*t;\n\n\t\ttmp1 = x*y*t;\n\t\ttmp2 = z*s;\n\t\tm.rawData[1] = tmp1 + tmp2;\n\t\tm.rawData[4] = tmp1 - tmp2;\n\t\ttmp1 = x*z*t;\n\t\ttmp2 = y*s;\n\t\tm.rawData[8] = tmp1 + tmp2;\n\t\tm.rawData[2] = tmp1 - tmp2;\n\t\ttmp1 = y*z*t;\n\t\ttmp2 = x*s;\n\t\tm.rawData[9] = tmp1 - tmp2;\n\t\tm.rawData[6] = tmp1 + tmp2;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * [read-only] A Number that determines whether a matrix is invertible.\n\t */\n\tpublic get determinant():number\n\t{\n\t\treturn ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\n\t}\n\n\t/**\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\n\t * transformation's frame of reference.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\tif (this._positionDirty) {\n\t\t\tthis._positionDirty = false;\n\t\t\tthis._position.x = this.rawData[12];\n\t\t\tthis._position.y = this.rawData[13];\n\t\t\tthis._position.z = this.rawData[14];\n\t\t}\n\n\t\treturn this._position;\n\t}\n\n\tpublic invalidatePosition()\n\t{\n\t\tthis._positionDirty = true;\n\t}\n\n\tpublic toFixed(decimalPlace:number):string\n\t{\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\n\t}\n}\n\nexport = Matrix3D;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ArgumentError\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\n/**\n * The Matrix class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n *\n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n *\n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n *\n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n *\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n *\n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n *\n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n *\n * <p>The Matrix class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n *\n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n *\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nclass Matrix\n{\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic d:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>x</i> axis.\n\t */\n\tpublic tx:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>y</i> axis.\n\t */\n\tpublic ty:number;\n\n\t/**\n\t * Creates a new Matrix object with the specified parameters. In matrix\n\t * notation, the properties are organized like this:\n\t *\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n\t * constructor, it creates an <i>identity matrix</i> with the following\n\t * values:</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @return A Matrix object.\n\t */\n\tpublic clone():Matrix\n\t{\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Concatenates a matrix with the current matrix, effectively combining the\n\t * geometric effects of the two. In mathematical terms, concatenating two\n\t * matrixes is the same as combining them using matrix multiplication.\n\t *\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n\t *\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\n\t * you want to concatenate two matrixes without altering either of the two\n\t * source matrixes, first copy the source matrix by using the\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\n\t *\n\t * @param matrix The matrix to be concatenated to the source matrix.\n\t */\n\tpublic concat(matrix:Matrix):void\n\t{\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\n\t * object.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t} else if (column == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (column == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix object into the Vector3D\n\t * object. The w element of the Vector3D object will not be changed.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\n\t\t} else if (column == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.c;\n\t\t\tvector3D.z = 0;\n\t\t} else if (column == 1) {\n\t\t\tvector3D.x = this.b;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = 0;\n\t\t} else {\n\t\t\tvector3D.x = this.tx;\n\t\t\tvector3D.y = this.ty;\n\t\t\tvector3D.z = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Point object into the\n\t * calling Matrix object.\n\t *\n\t * @param sourceMatrix The Matrix object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceMatrix:Matrix):void\n\t{\n\t\tthis.a = sourceMatrix.a;\n\t\tthis.b = sourceMatrix.b;\n\t\tthis.c = sourceMatrix.c;\n\t\tthis.d = sourceMatrix.d;\n\t\tthis.tx = sourceMatrix.tx;\n\t\tthis.ty = sourceMatrix.ty;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (row == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\n\t * The w element of the Vector3D object will not be changed.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.b;\n\t\t\tvector3D.z = this.tx;\n\t\t} else if (row == 1) {\n\t\t\tvector3D.x = this.c;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = this.ty;\n\t\t} else {\n\t\t\tvector3D.setTo(0, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Includes parameters for scaling, rotation, and translation. When applied\n\t * to a matrix it sets the matrix's values based on those parameters.\n\t *\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\n\t * matrix as you would if you applied the <code>identity()</code>,\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n\t * 100, 100)</code> has the same effect as the following:</p>\n\t *\n\t * @param scaleX   The factor by which to scale horizontally.\n\t * @param scaleY   The factor by which scale vertically.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The number of pixels to translate(move) to the right\n\t *                 along the <i>x</i> axis.\n\t * @param ty       The number of pixels to translate(move) down along the\n\t *                 <i>y</i> axis.\n\t */\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = scaleX;\n\t\tthis.d = scaleY;\n\t\tthis.b = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Creates the specific style of matrix expected by the\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n\t * methods of the Graphics class. Width and height are scaled to a\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\n\t * height.\n\t *\n\t * <p>For example, consider a gradient with the following\n\t * characteristics:</p>\n\t *\n\t * <ul>\n\t *   <li><code>GradientType.LINEAR</code></li>\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n\t * 255]</code></li>\n\t *   <li><code>SpreadMethod.PAD</code></li>\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n\t * </ul>\n\t *\n\t * <p>The following illustrations show gradients in which the matrix was\n\t * defined using the <code>createGradientBox()</code> method with different\n\t * parameter settings:</p>\n\t *\n\t * @param width    The width of the gradient box.\n\t * @param height   The height of the gradient box.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The distance, in pixels, to translate to the right along\n\t *                 the <i>x</i> axis. This value is offset by half of the\n\t *                 <code>width</code> parameter.\n\t * @param ty       The distance, in pixels, to translate down along the\n\t *                 <i>y</i> axis. This value is offset by half of the\n\t *                 <code>height</code> parameter.\n\t */\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = width/1638.4;\n\t\tthis.d = height/1638.4;\n\n\t\tif (rotation != 0.0) {\n\t\t\tvar cos = Math.cos(rotation);\n\t\t\tvar sin = Math.sin(rotation);\n\n\t\t\tthis.b = sin*this.d;\n\t\t\tthis.c = -sin*this.a;\n\t\t\tthis.a *= cos;\n\t\t\tthis.d *= cos;\n\t\t} else {\n\t\t\tthis.b = this.c = 0;\n\t\t}\n\n\t\tthis.tx = tx + width/2;\n\t\tthis.ty = ty + height/2;\n\t}\n\n\t/**\n\t * Given a point in the pretransform coordinate space, returns the\n\t * coordinates of that point after the transformation occurs. Unlike the\n\t * standard transformation applied using the <code>transformPoint()</code>\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\n\t * does not consider the translation parameters <code>tx</code> and\n\t * <code>ty</code>.\n\t *\n\t * @param point The point for which you want to get the result of the matrix\n\t *              transformation.\n\t * @return The point resulting from applying the matrix transformation.\n\t */\n\tpublic deltaTransformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\n\t}\n\n\t/**\n\t * Sets each matrix property to a value that causes a null transformation. An\n\t * object transformed by applying an identity matrix will be identical to the\n\t * original.\n\t *\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n\t * <code>ty</code>=0.</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t */\n\tpublic identity():void\n\t{\n\t\tthis.a = 1;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 1;\n\t\tthis.tx = 0;\n\t\tthis.ty = 0;\n\t}\n\n\t/**\n\t * Performs the opposite transformation of the original matrix. You can apply\n\t * an inverted matrix to an object to undo the transformation performed when\n\t * applying the original matrix.\n\t */\n\tpublic invert():void\n\t{\n\t\tvar norm = this.a*this.d - this.b*this.c;\n\n\t\tif (norm == 0) {\n\t\t\tthis.a = this.b = this.c = this.d = 0;\n\t\t\tthis.tx = -this.tx;\n\t\t\tthis.ty = -this.ty;\n\t\t} else {\n\t\t\tnorm = 1.0/norm;\n\t\t\tvar a1 = this.d*norm;\n\t\t\tthis.d = this.a*norm;\n\t\t\tthis.a = a1;\n\t\t\tthis.b *= -norm;\n\t\t\tthis.c *= -norm;\n\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\n\t\t\tthis.tx = tx1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @param matrix The matrix for which you want to get the result of the matrix\n\t *               transformation.\n\t * @return A Matrix object.\n\t */\n\tpublic multiply(matrix:Matrix):Matrix\n\t{\n\t\tvar result = new Matrix();\n\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Applies a rotation transformation to the Matrix object.\n\t *\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n\t * Matrix object. In matrix notation, this is the same as concatenating the\n\t * current matrix with the following:</p>\n\t *\n\t * @param angle The rotation angle in radians.\n\t */\n\tpublic rotate(angle:number):void\n\t{\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\n\t\tvar a1 = this.a*cos - this.b*sin;\n\t\tthis.b = this.a*sin + this.b*cos;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*cos - this.d*sin;\n\t\tthis.d = this.c*sin + this.d*cos;\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\n\t\tthis.ty = this.tx*sin + this.ty*cos;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n\t * <code>sy</code>.\n\t *\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\n\t * is the same as concatenating the current matrix with the following\n\t * matrix:</p>\n\t *\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\n\t */\n\tpublic scale(sx:number, sy:number):void\n\t{\n\t\tthis.a *= sx;\n\t\tthis.b *= sy;\n\n\t\tthis.c *= sx;\n\t\tthis.d *= sy;\n\n\t\tthis.tx *= sx;\n\t\tthis.ty *= sy;\n\t}\n\n\t/**\n\t * Sets the members of Matrix to the specified values.\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a text value listing the properties of the Matrix object.\n\t *\n\t * @return A string containing the values of the properties of the Matrix\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n\t}\n\n\t/**\n\t * Returns the result of applying the geometric transformation represented by\n\t * the Matrix object to the specified point.\n\t *\n\t * @param point The point for which you want to get the result of the Matrix\n\t *              transformation.\n\t * @return The point resulting from applying the Matrix transformation.\n\t */\n\tpublic transformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\n\t}\n\n\t/**\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n\t * by the <code>dx</code> and <code>dy</code> parameters.\n\t *\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\n\t *           pixels.\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\n\t */\n\tpublic translate(dx:number, dy:number):void\n\t{\n\t\tthis.tx += dx;\n\t\tthis.ty += dy;\n\t}\n}\n\nexport = Matrix;",
    "/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Orientation3D\n{\n\t/**\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\n\t * @type {string}\n\t */\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\n\n\t/**\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\n\t * @type {string}\n\t */\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\n\n\t/**\n\t * The quaternion orientation uses complex numbers.\n\t * @type {string}\n\t */\n\tpublic static QUATERNION:string = \"quaternion\";\n}\n\nexport = Orientation3D;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * <p>The PerspectiveProjection class provides an easy way to assign or modify\n * the perspective transformations of a display object and all of its\n * children. For more complex or custom perspective transformations, use the\n * Matrix3D class. While the PerspectiveProjection class provides basic\n * three-dimensional presentation properties, the Matrix3D class provides more\n * detailed control over the three-dimensional presentation of display objects.\n * </p>\n *\n * <p>Projection is a way of representing a three-dimensional object in a\n * two-dimensional space, like a cube projected onto a computer screen.\n * Perspective projection uses a viewing frustum (a rectangular pyramid) to\n * model and project a three-dimensional world and its objects on the screen.\n * The viewing frustum becomes increasingly wider as it moves further from the\n * origin of the viewpoint. The origin of the viewpoint could be a camera or\n * the eyes of an observer facing the screen. The projected perspective\n * produces the illusion of three dimensions with depth and distance, where\n * the objects closer to the screen appear larger than the objects farther\n * from the screen.</p>\n *\n * <p>A default PerspectiveProjection object is a framework defined for\n * perspective transformation of the root object, based on the field of view\n * and aspect ratio (dimensions) of the stage. The projection center, the\n * vanishing point, is set to the center of the stage, which means the\n * three-dimensional display objects disappear toward the center of the stage\n * as they move back in the z axis. The default viewpoint is at point (0,0)\n * looking down the positive z axis. The y-axis points down toward the bottom\n * of the screen. You can gain access to the root display object's perspective\n * projection settings and change the field of view and projection center\n * properties of the perspectiveProjection property through the root object's\n * <code>DisplayObject.transform</code> property.</p>\n *\n * <p>You can also set a different perspective projection setting for a\n * display object through the parent's perspective projection. First, create a\n * PerspectiveProjection object and set its <code>fieldOfView</code> and\n * <code>projectionCenter</code> properties. Next, assign the\n * PerspectiveProjection object to the parent display object using the\n * <code>DisplayObject.transform</code> property. The specified projection\n * matrix and transformation will then apply to all the display object's\n * three-dimensional children.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass PerspectiveProjection\n{\n\tprivate _matrix3D:Matrix3D;\n\n\t/**\n\t * Specifies an angle, as a degree between 0 and 180, for the field of\n\t * view in three dimensions. This value determines how strong the\n\t * perspective transformation and distortion apply to a\n\t * three-dimensional display object with a non-zero z-coordinate.\n\t *\n\t * <p>A degree close to 0 means that the screen's two-dimensional x-\n\t * and y-coordinates are roughly the same as the three-dimensional x-,\n\t * y-, and z-coordinates with little or no distortion. In other words,\n\t * for a small angle, a display object moving down the z axis appears\n\t * to stay near the same size and moves little.</p>\n\t *\n\t * <p>A value close to 180 degrees results in a fisheye projection effect:\n\t * positions with a z value smaller than 0 are magnified, while\n\t * positions with a z value larger than 0 are minimized. With a large\n\t * angle, a display object moving down the z axis appears to change\n\t * size quickly and moves a great distance. If the field of view is\n\t * set to 0 or 180, nothing is seen on the screen.</p>\n\t */\n\tpublic fieldOfView:number;\n\n\t/**\n\t * The distance between the eye or the viewpoint's origin (0,0,0) and\n\t * the display object located in the z axis. During the perspective\n\t * transformation, the <code>focalLength</code> is calculated\n\t * dynamically using the angle of the field of view and the stage's\n\t * aspect ratio (stage width divided by stage height).\n\t *\n\t * @see away.geom.PerspectiveProjection#fieldOfView\n\t */\n\tpublic focalLength:number;\n\n\t/**\n\t * A two-dimensional point representing the center of the projection,\n\t * the vanishing point for the display object.\n\t *\n\t * <p>The <code>projectionCenter</code> property is an offset to the\n\t * default registration point that is the upper left of the stage,\n\t * point (0,0). The default projection transformation center is in the\n\t * middle of the stage, which means the three-dimensional display\n\t * objects disappear toward the center of the stage as they move\n\t * backwards in the z axis.</p>\n\t */\n\tpublic projectionCenter:Point;\n\n\t/**\n\t * Creates an instance of a PerspectiveProjection object.\n\t */\n\tconstructor()\n\t{\n\n\t}\n\t/**\n\t * Returns the underlying Matrix3D object of the display object.\n\t *\n\t * <p>A display object, like the root object, can have a\n\t * PerspectiveProjection object without needing a Matrix3D property\n\t * defined for its transformations. In fact, use either a\n\t * PerspectiveProjection or a Matrix3D object to specify the\n\t * perspective transformation. If when using the PerspectiveProjection\n\t * object, a Matrix3D object was needed, the <code>toMatrix3D()</code>\n\t * method can retrieve the underlying Matrix3D object of the display\n\t * object. For example, the <code>toMatrix3D()</code> method can be\n\t * used with the <code>Utils3D.projectVectors()</code> method.</p>\n\t *\n\t * @see away.geom.Matrix3D\n\t */\n\tpublic toMatrix3D():Matrix3D\n\t{\n\t\treturn this._matrix3D;\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Plane3D\n{\n\t/**\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\n\t */\n\tpublic d:number;\n\n\tpublic _iAlignment:number;\n\n\t// indicates the alignment of the plane\n\tpublic static ALIGN_ANY:number = 0;\n\tpublic static ALIGN_XY_AXIS:number = 1;\n\tpublic static ALIGN_YZ_AXIS:number = 2;\n\tpublic static ALIGN_XZ_AXIS:number = 3;\n\n\t/**\n\t * Create a Plane3D with ABCD coefficients\n\t */\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\n\t\tif (a == 0 && b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (b == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (a == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\n\t * @param p0 Vector3D\n\t * @param p1 Vector3D\n\t * @param p2 Vector3D\n\t */\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D)\n\t{\n\t\tvar d1x:number = p1.x - p0.x;\n\t\tvar d1y:number = p1.y - p0.y;\n\t\tvar d1z:number = p1.z - p0.z;\n\n\t\tvar d2x:number = p2.x - p0.x;\n\t\tvar d2y:number = p2.y - p0.y;\n\t\tvar d2z:number = p2.z - p0.z;\n\n\t\tthis.a = d1y*d2z - d1z*d2y;\n\t\tthis.b = d1z*d2x - d1x*d2z;\n\t\tthis.c = d1x*d2y - d1y*d2x;\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\n\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\n\t * @param normal Vector3D\n\t * @param point  Vector3D\n\t */\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D)\n\t{\n\t\tthis.a = normal.x;\n\t\tthis.b = normal.y;\n\t\tthis.c = normal.z;\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Normalize this Plane3D\n\t * @return Plane3D This Plane3D.\n\t */\n\tpublic normalize():Plane3D\n\t{\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\n\t\tthis.a *= len;\n\t\tthis.b *= len;\n\t\tthis.c *= len;\n\t\tthis.d *= len;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the signed distance between this Plane3D and the point p.\n\t * @param p Vector3D\n\t * @returns Number\n\t */\n\tpublic distance(p:Vector3D):number\n\t{\n\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\n\n\t\t\treturn this.a*p.x - this.d;\n\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\n\t\t\treturn this.b*p.y - this.d;\n\t\t}\n\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\n\n\t\t\treturn this.c*p.z - this.d;\n\n\t\t} else {\n\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\n\t * @param p Vector3D\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\n\t */\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\n\t{\n\t\t// check NaN\n\t\tif (this.d != this.d)\n\t\t\treturn PlaneClassification.FRONT;\n\n\t\tvar len:number;\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\n\t\t\tlen = this.c*p.z - this.d; else\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\tif (len < -epsilon)\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\n\t\t\treturn PlaneClassification.FRONT; else\n\t\t\treturn PlaneClassification.INTERSECT;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\n\t}\n}\n\nexport = Plane3D;",
    "class PlaneClassification\n{\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\n\tpublic static BACK:number = 0;\n\tpublic static FRONT:number = 1;\n\n\tpublic static IN:number = 0;\n\tpublic static OUT:number = 1;\n\tpublic static INTERSECT:number = 2;\n\n}\n\nexport = PlaneClassification;",
    "/**\n * The Point object represents a location in a two-dimensional coordinate\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\n * represents the vertical axis.\n *\n * <p>The following code creates a point at(0,0):</p>\n *\n * <p>Methods and properties of the following classes use Point objects:</p>\n *\n * <ul>\n *   <li>BitmapData</li>\n *   <li>DisplayObject</li>\n *   <li>DisplayObjectContainer</li>\n *   <li>DisplacementMapFilter</li>\n *   <li>NativeWindow</li>\n *   <li>Matrix</li>\n *   <li>Rectangle</li>\n * </ul>\n *\n * <p>You can use the <code>new Point()</code> constructor to create a Point\n * object.</p>\n */\nclass Point\n{\n\t/**\n\t * The horizontal coordinate of the point. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The vertical coordinate of the point. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The length of the line segment from(0,0) to this point.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\n\t}\n\n\t/**\n\t * Creates a new point. If you pass no parameters to this method, a point is\n\t * created at(0,0).\n\t *\n\t * @param x The horizontal coordinate.\n\t * @param y The vertical coordinate.\n\t */\n\tconstructor(x:number = 0, y:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t/**\n\t * Adds the coordinates of another point to the coordinates of this point to\n\t * create a new point.\n\t *\n\t * @param v The point to be added.\n\t * @return The new point.\n\t */\n\tpublic add(v:Point):Point\n\t{\n\t\treturn new Point(this.x + v.x, this.y + v.y);\n\t}\n\n\t/**\n\t * Creates a copy of this Point object.\n\t *\n\t * @return The new Point object.\n\t */\n\tpublic clone():Point\n\t{\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\tpublic copyFrom(sourcePoint:Point)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether two points are equal. Two points are equal if they have\n\t * the same <i>x</i> and <i>y</i> values.\n\t *\n\t * @param toCompare The point to be compared.\n\t * @return A value of <code>true</code> if the object is equal to this Point\n\t *         object; <code>false</code> if it is not equal.\n\t */\n\tpublic equals(toCompare:Point):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\n\t}\n\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current point is\n\t *                 (0,5), and you normalize it to 1, the point returned is\n\t *                  at(0,1).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\treturn;\n\t\t}\n\t\tthrow \"Cannot divide by zero length.\";\n\t}\n\n\t/**\n\t * Offsets the Point object by the specified amount. The value of\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\n\t * value of <i>y</i> to create the new <i>y</i> value.\n\t *\n\t * @param dx The amount by which to offset the horizontal coordinate,\n\t *           <i>x</i>.\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\tpublic setTo(xa:number, ya:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t}\n\n\t/**\n\t * Subtracts the coordinates of another point from the coordinates of this\n\t * point to create a new point.\n\t *\n\t * @param v The point to be subtracted.\n\t * @return The new point.\n\t */\n\tpublic subtract(v:Point):Point\n\t{\n\t\treturn new Point(this.x - v.x, this.y - v.y);\n\t}\n\n\t/**\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\n\t *\n\t * @return The string representation of the coordinates.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\n\t}\n\n\t/**\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @return The distance between the first and second points.\n\t */\n\tpublic static distance(pt1:Point, pt2:Point):number\n\t{\n\t\tvar dx:number = pt2.x - pt1.x;\n\t\tvar dy:number = pt2.y - pt1.y;\n\n\t\treturn Math.sqrt(dx*dx + dy*dy);\n\t}\n\n\t/**\n\t * Determines a point between two specified points. The parameter\n\t * <code>f</code> determines where the new interpolated point is located\n\t * relative to the two end points specified by parameters <code>pt1</code>\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\n\t * point(parameter <code>pt2</code>).\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @param f   The level of interpolation between the two points. Indicates\n\t *            where the new point will be, along the line between\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\n\t *            <code>pt2</code> is returned.\n\t * @return The new, interpolated point.\n\t */\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\n\t{\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\n\t}\n\n\t/**\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\n\t *\n\t * @param len   The length coordinate of the polar pair.\n\t * @param angle The angle, in radians, of the polar pair.\n\t * @return The Cartesian point.\n\t */\n\tpublic static polar(len:number, angle:number):Point\n\t{\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\n\t}\n}\n\nexport = Point;\n",
    "class PoissonLookup\n{\n\tpublic static _distributions:Array<Array<number>>;\n\n\tpublic static initDistributions():void\n\t{\n\t\t// precalculated for best control\n\t\tthis._distributions = new Array<Array<number>>();\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\n\t}\n\n\tpublic static getDistribution(n:number /*int*/):Array<number>\n\t{\n\t\tif (!this._distributions)\n\t\t\tthis.initDistributions();\n\n\t\tif (n < 2 || n > 32)\n\t\t\treturn null;\n\n\t\treturn this._distributions[n - 1];\n\t}\n}\n\nexport = PoissonLookup;",
    "import Matrix3DUtils\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Orientation3D\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\nimport Matrix3D\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Quaternion\n{\n\t/**\n\t * The x value of the quaternion.\n\t */\n\tpublic x:number = 0;\n\n\t/**\n\t * The y value of the quaternion.\n\t */\n\tpublic y:number = 0;\n\n\t/**\n\t * The z value of the quaternion.\n\t */\n\tpublic z:number = 0;\n\n\t/**\n\t * The w value of the quaternion.\n\t */\n\tpublic w:number = 1;\n\n\t/**\n\t * Creates a new Quaternion object.\n\t * @param x The x value of the quaternion.\n\t * @param y The y value of the quaternion.\n\t * @param z The z value of the quaternion.\n\t * @param w The w value of the quaternion.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Returns the magnitude of the quaternion object.\n\t */\n\tpublic get magnitude():number\n\t{\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t}\n\n\t/**\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\n\t *\n\t * @param    qa    The first quaternion in the multiplication.\n\t * @param    qb    The second quaternion in the multiplication.\n\t */\n\tpublic multiply(qa:Quaternion, qb:Quaternion)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t}\n\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\n\t{\n\t\t//target ||= new Quaternion();\n\t\tif (target === null) {\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\n\t\tvar x2:number = vector.x;\n\t\tvar y2:number = vector.y;\n\t\tvar z2:number = vector.z;\n\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given rotation around a vector.\n\t *\n\t * @param    axis    The axis around which to rotate\n\t * @param    angle    The angle in radians of the rotation.\n\t */\n\tpublic fromAxisAngle(axis:Vector3D, angle:number)\n\t{\n\t\tvar sin_a:number = Math.sin(angle/2);\n\t\tvar cos_a:number = Math.cos(angle/2);\n\n\t\tthis.x = axis.x*sin_a;\n\t\tthis.y = axis.y*sin_a;\n\t\tthis.z = axis.z*sin_a;\n\t\tthis.w = cos_a;\n\n\t\tthis.normalize();\n\t}\n\n\t/**\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\n\n\t\t// shortest direction\n\t\tif (dot < 0) {\n\t\t\tdot = -dot;\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tif (dot < 0.95) {\n\t\t\t// interpolate angle linearly\n\t\t\tvar angle:number = Math.acos(dot);\n\t\t\tvar s:number = 1/Math.sin(angle);\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\n\t\t\tthis.w = w1*s1 + w2*s2;\n\t\t\tthis.x = x1*s1 + x2*s2;\n\t\t\tthis.y = y1*s1 + y2*s2;\n\t\t\tthis.z = z1*s1 + z2*s2;\n\t\t} else {\n\t\t\t// nearly identical angle, interpolate linearly\n\t\t\tthis.w = w1 + t*(w2 - w1);\n\t\t\tthis.x = x1 + t*(x2 - x1);\n\t\t\tthis.y = y1 + t*(y2 - y1);\n\t\t\tthis.z = z1 + t*(z2 - z1);\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\t\tthis.w *= len;\n\t\t\tthis.x *= len;\n\t\t\tthis.y *= len;\n\t\t\tthis.z *= len;\n\t\t}\n\t}\n\n\t/**\n\t * Linearly interpolates between two quaternions.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar len:number;\n\n\t\t// shortest direction\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tthis.w = w1 + t*(w2 - w1);\n\t\tthis.x = x1 + t*(x2 - x1);\n\t\tthis.y = y1 + t*(y2 - y1);\n\t\tthis.z = z1 + t*(z2 - z1);\n\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\tthis.w *= len;\n\t\tthis.x *= len;\n\t\tthis.y *= len;\n\t\tthis.z *= len;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given euler rotation.\n\t *\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\n\t * @param    az        The angle in radians of the rotation around the az axis.\n\t */\n\tpublic fromEulerAngles(ax:number, ay:number, az:number)\n\t{\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\n\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\n\t}\n\n\t/**\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\n\t * @return The Vector3D containing the Euler angles.\n\t */\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\n\t{\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Normalises the quaternion object.\n\t */\n\tpublic normalize(val:number = 1)\n\t{\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\n\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t\tthis.z *= mag;\n\t\tthis.w *= mag;\n\t}\n\n\t/**\n\t * Used to trace the values of a quaternion.\n\t *\n\t * @return A string representation of the quaternion object.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\n\t}\n\n\t/**\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\n\t * @return A Matrix3D object representing an equivalent rotation.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\trawData[0] = xx - yy - zz + ww;\n\t\trawData[4] = xy2 - zw2;\n\t\trawData[8] = xz2 + yw2;\n\t\trawData[12] = 0;\n\t\trawData[1] = xy2 + zw2;\n\t\trawData[5] = -xx + yy - zz + ww;\n\t\trawData[9] = yz2 - xw2;\n\t\trawData[13] = 0;\n\t\trawData[2] = xz2 - yw2;\n\t\trawData[6] = yz2 + xw2;\n\t\trawData[10] = -xx - yy + zz + ww;\n\t\trawData[14] = 0;\n\t\trawData[3] = 0.0;\n\t\trawData[7] = 0.0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\n\t\tif (!target)\n\t\t\treturn new Matrix3D(rawData);\n\t\telse\n\t\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\n\t */\n\tpublic fromMatrix(matrix:Matrix3D)\n\t{\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t}\n\n\t/**\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\n\t */\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false)\n\t{\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\ttarget[0] = xx - yy - zz + ww;\n\t\ttarget[1] = xy2 - zw2;\n\t\ttarget[2] = xz2 + yw2;\n\t\ttarget[4] = xy2 + zw2;\n\t\ttarget[5] = -xx + yy - zz + ww;\n\t\ttarget[6] = yz2 - xw2;\n\t\ttarget[8] = xz2 - yw2;\n\t\ttarget[9] = yz2 + xw2;\n\t\ttarget[10] = -xx - yy + zz + ww;\n\t\ttarget[3] = target[7] = target[11] = 0;\n\n\t\tif (!exclude4thRow) {\n\t\t\ttarget[12] = target[13] = target[14] = 0;\n\t\t\ttarget[15] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Clones the quaternion.\n\t * @return An exact duplicate of the current Quaternion.\n\t */\n\tpublic clone():Quaternion\n\t{\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Rotates a point.\n\t * @param vector The Vector3D object to be rotated.\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\n\t * @return A Vector3D object containing the rotated point.\n\t */\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\t// p*q'\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the data from a quaternion into this instance.\n\t * @param q The quaternion to copy from.\n\t */\n\tpublic copyFrom(q:Quaternion)\n\t{\n\t\tthis.x = q.x;\n\t\tthis.y = q.y;\n\t\tthis.z = q.z;\n\t\tthis.w = q.w;\n\t}\n}\n\nexport = Quaternion;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n * A Rectangle object is an area defined by its position, as indicated by its\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the Rectangle class are independent of\n * each other; changing the value of one property has no effect on the others.\n * However, the <code>right</code> and <code>bottom</code> properties are\n * integrally related to those four properties. For example, if you change the\n * value of the <code>right</code> property, the value of the\n * <code>width</code> property changes; if you change the <code>bottom</code>\n * property, the value of the <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Rectangle objects:</p>\n *\n * <ul>\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\n * <code>merge()</code>, <code>paletteMap()</code>,\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\n * BitmapData class</li>\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\n * DisplayObject class</li>\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\n * class</li>\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\n * method of the Sprite class</li>\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\n * method of the PrintJob class</li>\n * </ul>\n *\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\n * Rectangle object.</p>\n *\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\n * display object. To draw a rectangular Shape object onscreen, use the\n * <code>drawRect()</code> method of the Graphics class.</p>\n */\nclass Rectangle\n{\n\tprivate _size:Point;\n\tprivate _bottomRight:Point;\n\tprivate _topLeft:Point;\n\n\t/**\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>x</code> property of a Rectangle object has no\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>y</code> property of a Rectangle object has no\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's bottom-right corner, determined by\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRight():Point\n\t{\n\t\tif (this._bottomRight == null)\n\t\t\tthis._bottomRight = new Point();\n\n\t\tthis._bottomRight.x = this.x + this.width;\n\t\tthis._bottomRight.y = this.y + this.height;\n\n\t\treturn this._bottomRight;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>left</code> property of a Rectangle object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\t/**\n\t * The size of the Rectangle object, expressed as a Point object with the\n\t * values of the <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic get size():Point\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Point();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>top</code> property of a Rectangle object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's top-left corner, determined by the\n\t * <i>x</i> and <i>y</i> coordinates of the point.\n\t */\n\tpublic get topLeft():Point\n\t{\n\t\tif (this._topLeft == null)\n\t\t\tthis._topLeft = new Point();\n\n\t\tthis._topLeft.x = this.x;\n\t\tthis._topLeft.y = this.y;\n\n\t\treturn this._topLeft;\n\t}\n\n\t/**\n\t * Creates a new Rectangle object with the top-left corner specified by the\n\t * <code>x</code> and <code>y</code> parameters and with the specified\n\t * <code>width</code> and <code>height</code> parameters. If you call this\n\t * public without parameters, a rectangle with <code>x</code>,\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\n\t * to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param width  The width of the rectangle, in pixels.\n\t * @param height The height of the rectangle, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\t/**\n\t * Returns a new Rectangle object with the same values for the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties as the original Rectangle object.\n\t *\n\t * @return A new Rectangle object with the same values for the\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\n\t *         <code>height</code> properties as the original Rectangle object.\n\t */\n\tpublic clone():Rectangle\n\t{\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object. This method is similar to the\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\n\t * object as a parameter.\n\t *\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\n\t *              coordinates.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(point:Point):boolean\n\t{\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n\t}\n\n\t/**\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\n\t * parameter is contained within this Rectangle object. A Rectangle object is\n\t * said to contain another if the second Rectangle object falls entirely\n\t * within the boundaries of the first.\n\t *\n\t * @param rect The Rectangle object being checked.\n\t * @return A value of <code>true</code> if the Rectangle object that you\n\t *         specify is contained by this Rectangle object; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic containsRect(rect:Rectangle):boolean\n\t{\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\n\t}\n\n\t/**\n\t * Copies all of rectangle data from the source Rectangle object into the\n\t * calling Rectangle object.\n\t *\n\t * @param sourceRect The Rectangle object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceRect:Rectangle)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Rectangle object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of an object against the same properties of\n\t * this Rectangle object.\n\t *\n\t * @param toCompare The rectangle to compare to this Rectangle object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\n\t *         and <code>height</code> properties as this Rectangle object;\n\t *         otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Rectangle):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object by the specified amounts, in\n\t * pixels. The center point of the Rectangle object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, and to\n\t * the top and the bottom by the <code>dy</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Rectangle\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the rectangle:\n\t * @param dy The value to be added to the top and the bottom of the\n\t *           Rectangle. The following equation is used to calculate the new\n\t *           height and position of the rectangle:\n\t */\n\tpublic inflate(dx:number, dy:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object. This method is similar to the\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param point The <code>x</code> property of this Point object is used to\n\t *              increase the horizontal dimension of the Rectangle object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Rectangle object.\n\t */\n\tpublic inflatePoint(point:Point)\n\t{\n\t\tthis.x -= point.x/2;\n\t\tthis.y -= point.y/2;\n\t\tthis.width += point.x/2;\n\t\tthis.height += point.y/2;\n\t}\n\n\t/**\n\t * If the Rectangle object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object, returns the area of\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\n\t * this method returns an empty Rectangle object with its properties set to\n\t * 0.\n\t *\n\t * @param toIntersect The Rectangle object to compare against to see if it\n\t *                    intersects with this Rectangle object.\n\t * @return A Rectangle object that equals the area of intersection. If the\n\t *         rectangles do not intersect, this method returns an empty\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\n\t *         properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Rectangle):Rectangle\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Rectangle = new Rectangle();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Rectangle();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of the specified Rectangle object to see if\n\t * it intersects with this Rectangle object.\n\t *\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\n\t *                    object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Rectangle object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Rectangle):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\n\t}\n\n\t/**\n\t * Determines whether or not this Rectangle object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Rectangle object's width or\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object, as determined by its\n\t * top-left corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object using a Point object as a\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\n\t * method, except that it takes a Point object as a parameter.\n\t *\n\t * @param point A Point object to use to offset this Rectangle object.\n\t */\n\tpublic offsetPoint(point:Point)\n\t{\n\t\tthis.x += point.x;\n\t\tthis.y += point.y;\n\t}\n\n\t/**\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n\t * empty if its width or height is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t}\n\n\t/**\n\t * Sets the members of Rectangle to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param widtha  The width of the rectangle, in pixels.\n\t * @param heighta The height of the rectangle, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal and vertical\n\t * positions and the width and height of the Rectangle object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\n\t *         <code>width</code>, and <code>height</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n\t}\n\n\t/**\n\t * Adds two rectangles together to create a new Rectangle object, by filling\n\t * in the horizontal and vertical space between the two rectangles.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\n\t * <code>0</code> as the height or width value, such as: <code>var\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\n\t *\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\n\t * @return A new Rectangle object that is the union of the two rectangles.\n\t */\n\tpublic union(toUnion:Rectangle):Rectangle\n\t{\n\t\tvar u:Rectangle = new Rectangle();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport = Rectangle;",
    "import PlaneClassification\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Vector3D\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass Sphere\n{\n\t/**\n\t *\n\t */\n\tpublic x:number;\n\n\t/**\n\t *\n\t */\n\tpublic y:number;\n\n\t/**\n\t *\n\t */\n\tpublic z:number;\n\n\t/**\n\t *\n\t */\n\tpublic radius:number;\n\n\t/**\n\t * Create a Sphere with ABCD coefficients\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, radius:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.radius = radius;\n\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar px:number = position.x - this.x, py:number = position.y - this.y, pz:number = position.z - this.z;\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\n\t\tvar rayEntryDistance:number;\n\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\n\t\tvar c:number = px*px + py*py + pz*pz - this.radius*this.radius;\n\t\tvar det:number = b*b - 4*a*c;\n\n\t\tif (det >= 0) { // ray goes through sphere\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\n\t\t\tif (rayEntryDistance >= 0) {\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\n\t\t\t\ttargetNormal.normalize();\n\n\t\t\t\treturn rayEntryDistance;\n\t\t\t}\n\t\t}\n\n\t\t// ray misses sphere\n\t\treturn -1;\n\t}\n\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\tvar px:number = position.x - this.x;\n\t\tvar py:number = position.y - this.y;\n\t\tvar pz:number = position.z - this.z;\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\n\t\treturn distance <= this.radius;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\n\t}\n}\n\nexport = Sphere;",
    "/**\n * The Vector3D class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n *\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n *\n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nclass Vector3D\n{\n\t/**\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\n\t */\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\n\n\t/**\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\n\t */\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\n\n\t/**\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\n\t */\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\n\n\t/**\n\t * The first element of a Vector3D object, such as the x coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/*\n\t *The second element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The third element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic z:number;\n\n\t/**\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\n\t * and z properties) can hold data such as the angle of rotation. The\n\t * default value is 0.\n\t *\n\t * <p>Quaternion notation employs an angle as the fourth element in\n\t * its calculation of three-dimensional rotation. The w property can\n\t * be used to define the angle of rotation about the Vector3D object.\n\t * The combination of the rotation angle and the coordinates (x,y,z)\n\t * determines the display object's orientation.</p>\n\t *\n\t * <p>In addition, the w property can be used as a perspective warp\n\t * factor for a projected three-dimensional position or as a projection\n\t * transform value in representing a three-dimensional coordinate\n\t * projected into the two-dimensional space. For example, you can\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\n\t * property, that, when applied to a Vector3D object, produces a\n\t * transform value in the Vector3D object's fourth element (the w\n\t * property). Dividing the Vector3D object's other elements by the\n\t * transform value then produces a projected Vector3D object. You can\n\t * use the <code>Vector3D.project()</code> method to divide the first\n\t * three elements of a Vector3D object by its fourth element.</p>\n\t */\n\tpublic w:number;\n\n\t/**\n\t * The length, magnitude, of the current Vector3D object from the\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\n\t * property is ignored. A unit vector has a length or magnitude of\n\t * one.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.lengthSquared);\n\t}\n\n\t/**\n\t * The square of the length of the current Vector3D object, calculated\n\t * using the x, y, and z properties. The w property is ignored. Use the\n\t * <code>lengthSquared()</code> method whenever possible instead of the\n\t * slower <code>Math.sqrt()</code> method call of the\n\t * <code>Vector3D.length()</code> method.\n\t */\n\tpublic get lengthSquared():number\n\t{\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\n\t}\n\n\t/**\n\t * Creates an instance of a Vector3D object. If you do not specify a\n\t * parameter for the constructor, a Vector3D object is created with\n\t * the elements (0,0,0,0).\n\t *\n\t * @param x The first element, such as the x coordinate.\n\t * @param y The second element, such as the y coordinate.\n\t * @param z The third element, such as the z coordinate.\n\t * @param w An optional element for additional data such as the angle\n\t *          of rotation.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Adds the value of the x, y, and z elements of the current Vector3D\n\t * object to the values of the x, y, and z elements of another Vector3D\n\t * object. The <code>add()</code> method does not change the current\n\t * Vector3D object. Instead, it returns a new Vector3D object with\n\t * the new values.\n\t *\n\t * <p>The result of adding two vectors together is a resultant vector.\n\t * One way to visualize the result is by drawing a vector from the\n\t * origin or tail of the first vector to the end or head of the second\n\t * vector. The resultant vector is the distance between the origin\n\t * point of the first vector and the end point of the second vector.\n\t * </p>\n\t */\n\tpublic add(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\n\t}\n\n\t/**\n\t * Returns the angle in radians between two vectors. The returned angle\n\t * is the smallest radian the first Vector3D object rotates until it\n\t * aligns with the second Vector3D object.\n\t *\n\t * <p>The <code>angleBetween()</code> method is a static method. You\n\t * can use it directly as a method of the Vector3D class.</p>\n\t *\n\t * <p>To convert a degree to a radian, you can use the following\n\t * formula:</p>\n\t *\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\n\t *\n\t * @param a The first Vector3D object.\n\t * @param b The second Vector3D object.\n\t * @returns The angle between two Vector3D objects.\n\t */\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\n\t{\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is an exact copy of the current\n\t * Vector3D object.\n\t *\n\t * @returns A new Vector3D object that is a copy of the current\n\t * Vector3D object.\n\t */\n\tpublic clone():Vector3D\n\t{\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\n\t}\n\n\tpublic static combine(a:Vector3D, b:Vector3D, ascl:number, bscl:number):Vector3D\n\t{\n\t\treturn new Vector3D(a.x*ascl + b.x*bscl, a.y*ascl + b.y*bscl, a.z*ascl + b.z*bscl);\n\t}\n\n\t/**\n\t * Copies all of vector data from the source Vector3D object into the\n\t * calling Vector3D object.\n\t *\n\t * @param src The Vector3D object from which to copy the data.\n\t */\n\tpublic copyFrom(src:Vector3D):void\n\t{\n\t\tthis.x = src.x;\n\t\tthis.y = src.y;\n\t\tthis.z = src.z;\n\t\tthis.w = src.w;\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is perpendicular (at a right\n\t * angle) to the current Vector3D and another Vector3D object. If the\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\n\t * Vector3D objects are parallel to each other.\n\t *\n\t * <p>You can use the normalized cross product of two vertices of a\n\t * polygon surface with the normalized vector of the camera or eye\n\t * viewpoint to get a dot product. The value of the dot product can\n\t * identify whether a surface of a three-dimensional object is hidden\n\t * from the viewpoint.</p>\n\t *\n\t * @param a A second Vector3D object.\n\t * @returns A new Vector3D object that is perpendicular to the current\n\t *          Vector3D object and the Vector3D object specified as the\n\t *          parameter.\n\t */\n\tpublic crossProduct(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\n\t}\n\n\t/**\n\t * Decrements the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of\n\t * specified Vector3D object. Unlike the\n\t * <code>Vector3D.subtract()</code> method, the\n\t * <code>decrementBy()</code> method changes the current Vector3D\n\t * object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object containing the values to subtract from\n\t *          the current Vector3D object.\n\t */\n\tpublic decrementBy(a:Vector3D)\n\t{\n\t\tthis.x -= a.x;\n\t\tthis.y -= a.y;\n\t\tthis.z -= a.z;\n\t}\n\n\t/**\n\t * Returns the distance between two Vector3D objects. The\n\t * <code>distance()</code> method is a static method. You can use it\n\t * directly as a method of the Vector3D class to get the Euclidean\n\t * distance between two three-dimensional points.\n\t *\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\n\t * @returns The distance between two Vector3D objects.\n\t */\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\n\t{\n\t\tvar x:number = (pt1.x - pt2.x);\n\t\tvar y:number = (pt1.y - pt2.y);\n\t\tvar z:number = (pt1.z - pt2.z);\n\t\treturn Math.sqrt(x*x + y*y + z*z);\n\t}\n\n\t/**\n\t * If the current Vector3D object and the one specified as the\n\t * parameter are unit vertices, this method returns the cosine of the\n\t * angle between the two vertices. Unit vertices are vertices that\n\t * point to the same direction but their length is one. They remove the\n\t * length of the vector as a factor in the result. You can use the\n\t * <code>normalize()</code> method to convert a vector to a unit\n\t * vector.\n\t *\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\n\t * vertices. It is also used in backface culling or lighting\n\t * calculations. Backface culling is a procedure for determining which\n\t * surfaces are hidden from the viewpoint. You can use the normalized\n\t * vertices from the camera, or eye, viewpoint and the cross product of\n\t * the vertices of a polygon surface to get the dot product. If the dot\n\t * product is less than zero, then the surface is facing the camera or\n\t * the viewer. If the two unit vertices are perpendicular to each\n\t * other, they are orthogonal and the dot product is zero. If the two\n\t * vertices are parallel to each other, the dot product is one.</p>\n\t *\n\t * @param a The second Vector3D object.\n\t * @returns A scalar which is the dot product of the current Vector3D\n\t *          object and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#crossProduct()\n\t * @see away.geom.Vector3D#normalize()\n\t */\n\tpublic dotProduct(a:Vector3D):number\n\t{\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\n\t}\n\n\t/**\n\t * Determines whether two Vector3D objects are equal by comparing the\n\t * x, y, and z elements of the current Vector3D object with a\n\t * specified Vector3D object. If the values of these elements are the\n\t * same, the two Vector3D objects are equal. If the second optional\n\t * parameter is set to true, all four elements of the Vector3D objects,\n\t * including the w property, are compared.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is equal\n\t *          to the current Vector3D object; false if it is not equal.\n\t */\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\n\t}\n\n\t/**\n\t * Increments the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of a\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n\t * method, the <code>incrementBy()</code> method changes the current\n\t * Vector3D object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object to be added to the current Vector3D\n\t *          object.\n\t */\n\tpublic incrementBy(a:Vector3D)\n\t{\n\t\tthis.x += a.x;\n\t\tthis.y += a.y;\n\t\tthis.z += a.z;\n\t}\n\n\t/**\n\t * Compares the elements of the current Vector3D object with the\n\t * elements of a specified Vector3D object to determine whether they\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\n\t * value of all the elements of the two vertices are equal, or the\n\t * result of the comparison is within the tolerance range. The\n\t * difference between two elements must be less than the number\n\t * specified as the tolerance parameter. If the third optional\n\t * parameter is set to <code>true</code>, all four elements of the\n\t * Vector3D objects, including the <code>w</code> property, are\n\t * compared. Otherwise, only the x, y, and z elements are included in\n\t * the comparison.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param tolerance A number determining the tolerance factor. If the\n\t *                  difference between the values of the Vector3D\n\t *                  element specified in the toCompare parameter and\n\t *                  the current Vector3D element is less than the\n\t *                  tolerance number, the two values are considered\n\t *                  nearly equal.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is nearly\n\t *          equal to the current Vector3D object; false if it is not\n\t *          equal.\n\t *\n\t * @see away.geom.Vector3D#equals()\n\t */\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\n\t{\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n\t}\n\n\t/**\n\t * Sets the current Vector3D object to its inverse. The inverse object\n\t * is also considered the opposite of the original object. The value of\n\t * the x, y, and z properties of the current Vector3D object is changed\n\t * to -x, -y, and -z.\n\t */\n\tpublic negate():void\n\t{\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t\tthis.z = -this.z;\n\t}\n\n\t/**\n\t * Converts a Vector3D object to a unit vector by dividing the first\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\n\t * are vertices that have a direction but their length is one. They\n\t * simplify vector calculations by removing length as a factor.\n\t */\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current\n\t *                  Vector3D object is (0,3,4), and you normalize it to\n\t *                  1, the point returned is at(0,0.6,0.8).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\tthis.z *= invLength;\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\n\t * <code>z</code> properties of the current Vector3D object by the\n\t * value of its <code>w</code> property.\n\t *\n\t * <p>If the current Vector3D object is the result of multiplying a\n\t * Vector3D object by a projection Matrix3D object, the w property can\n\t * hold the transform value. The <code>project()</code> method then can\n\t * complete the projection by dividing the elements by the\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n\t * property to create a projection Matrix3D object.</p>\n\t */\n\tpublic project():void\n\t{\n\t\tthis.x /= this.w;\n\t\tthis.y /= this.w;\n\t\tthis.z /= this.w;\n\t}\n\n\t/**\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\n\t * number specified in the parameter. For example, if the vector is\n\t * scaled by ten, the result is a vector that is ten times longer. The\n\t * scalar can also change the direction of the vector. Multiplying the\n\t * vector by a negative number reverses its direction.\n\t *\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\n\n\t */\n\tpublic scaleBy(s:number):void\n\t{\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\t\tthis.z *= s;\n\t}\n\n\t/**\n\t * Sets the members of Vector3D to the specified values\n\t *\n\t * @param xa The first element, such as the x coordinate.\n\t * @param ya The second element, such as the y coordinate.\n\t * @param za The third element, such as the z coordinate.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number):void\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t}\n\n\t/**\n\t * Subtracts the value of the x, y, and z elements of the current\n\t * Vector3D object from the values of the x, y, and z elements of\n\t * another Vector3D object. The <code>subtract()</code> method does not\n\t * change the current Vector3D object. Instead, this method returns a\n\t * new Vector3D object with the new values.\n\t *\n\t * @param a The Vector3D object to be subtracted from the current\n\t *          Vector3D object.\n\t * @returns A new Vector3D object that is the difference between the\n\t *          current Vector3D and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#decrementBy()\n\t */\n\tpublic subtract(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n\t}\n\n\t/**\n\t * Returns a string representation of the current Vector3D object. The\n\t * string contains the values of the x, y, and z properties.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n\t}\n}\n\nexport = Vector3D;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport IImageCanvas\t\t\t\t= require(\"awayjs-core/lib/image/IImageCanvas\");\nimport CPUCanvas = require('awayjs-core/lib/image/CPUCanvas');\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[image BitmapImage2D]\";\n\n\tprivate _imageCanvas:IImageCanvas;\n\tprivate _context:CanvasRenderingContext2D;\n\tprivate _imageData:ImageData;\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImage2D.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null, powerOfTwo:boolean = true)\n\t{\n\t\tsuper(width, height, powerOfTwo);\n\n\t\tthis._transparent = transparent;\n\t\tif(document) {\n\t\t\tthis._imageCanvas = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\t}else {\n\t\t\tthis._imageCanvas = new CPUCanvas();\n\t\t}\n\t\tthis._imageCanvas.width = width;\n\t\tthis._imageCanvas.height = height;\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\n\n\t\tif (fillColor != null)\n\t\t\tthis.fillRect(this._rect, fillColor);\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImage2D\n\t{\n\t\tvar t:BitmapImage2D = new BitmapImage2D(this.width, this.height, this.transparent, null, this.powerOfTwo);\n\t\tt.draw(this);\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar data:Array<number> = this._imageData.data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\n\t\tvar destData:Array<number> = this._imageData.data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:HTMLElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._context = null;\n\t\tthis._imageCanvas = null;\n\t\tthis._imageData = null;\n\t\tthis._rect = null;\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (source instanceof BitmapImage2D && source.getCanvas()){\n\t\t\tsource = source.getCanvas();\n\t\t}\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageData.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\t\tthis._imageData.data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageData.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\tthis._imageData = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\treturn this._imageData;\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn <HTMLCanvasElement> this._imageCanvas;\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tif (this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tif(this._imageCanvas) {\n\t\t\tthis._imageCanvas.width = width;\n\t\t\tthis._imageCanvas.height = height;\n\t\t}\n\t\t\n\t\tsuper._setSize(width, height);\n\n\t\tif (this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n}\n\nexport = BitmapImage2D;",
    "class BitmapImageChannel\n{\n\tpublic static ALPHA:number /*uint*/ = 8;\n\tpublic static BLUE:number /*uint*/ = 4;\n\tpublic static GREEN:number /*uint*/ = 2;\n\tpublic static RED:number /*uint*/ = 1;\n}\n\nexport = BitmapImageChannel;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport BlendMode\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport BitmapImageUtils\t\t\t= require(\"awayjs-core/lib/utils/BitmapImageUtils\");\n\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapImageCube extends ImageCube\n{\n\tpublic static assetType:string = \"[image BitmapImageCube]\";\n\n\tpublic static posX:number = 0;\n\tpublic static negX:number = 1;\n\tpublic static posY:number = 2;\n\tpublic static negY:number = 3;\n\tpublic static posZ:number = 4;\n\tpublic static negZ:number = 5;\n\n\tprivate _imageCanvas:Array<HTMLCanvasElement> = new Array<HTMLCanvasElement>(6);\n\tprivate _context:Array<CanvasRenderingContext2D> = new Array<CanvasRenderingContext2D>(6);\n\tprivate _imageData:Array<ImageData> = new Array<ImageData>(6);\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImageCube.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(size:number, transparent:boolean = true, fillColor:number = null)\n\t{\n\t\tsuper(size);\n\n\t\tthis._transparent = transparent;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._imageCanvas[i] = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\t\t\tthis._context[i] = this._imageCanvas[i].getContext(\"2d\");\n\n\t\t\tif (fillColor != null)\n\t\t\t\tthis.fillRect(i, new Rectangle(0, 0, size, size), fillColor);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImageCube\n\t{\n\t\tvar t:BitmapImageCube = new BitmapImageCube(this._size, this.transparent);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tt.draw(i, this.getCanvas(i));\n\t\t}\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(side:number, rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar data:Array<number> = this._imageData[side].data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(side:number, sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar sourceData:Array<number> = sourceBitmap.getImageData().data;\n\t\tvar destData:Array<number> = this._imageData[side].data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this._size)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(side:number, source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i] = null;\n\t\t\tthis._imageCanvas[i] = null;\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(side:number, source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(side:number, rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(side:number, x:number, y:number):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(side:number, x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(side:number, rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\t\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\t\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\t\t\tthis._imageData[side].data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(side:number, x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(side:number, x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(side:number, rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0); // at coords 0,0\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData(side:number):ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\treturn this._imageData[side];\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas(side:number):HTMLCanvasElement\n\t{\n\t\treturn this._imageCanvas[side];\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number)\n\t{\n\t\tsuper._setSize(size);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tif (this._locked)\n\t\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0);\n\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\n\t\t\tif (this._locked)\n\t\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t\t}\n\t}\n}\n\nexport = BitmapImageCube;",
    "/**\n * A class that provides constant values for visual blend mode effects. These\n * constants are used in the following:\n * <ul>\n *   <li> The <code>blendMode</code> property of the\n * flash.display.DisplayObject class.</li>\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\n * method of the flash.display.BitmapData class</li>\n * </ul>\n */\nclass BlendMode\n{\n\t/**\n\t * Adds the values of the constituent colors of the display object to the\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\n\t * commonly used for animating a lightening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\n\t */\n\tpublic static ADD:string = \"add\";\n\n\t/**\n\t * Applies the alpha value of each pixel of the display object to the\n\t * background. This requires the <code>blendMode</code> property of the\n\t * parent display object be set to\n\t * <code>away.base.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ALPHA:string = \"alpha\";\n\n\t/**\n\t * Selects the darker of the constituent colors of the display object and the\n\t * colors of the background(the colors with the smaller values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static DARKEN:string = \"darken\";\n\n\t/**\n\t * Compares the constituent colors of the display object with the colors of\n\t * its background, and subtracts the darker of the values of the two\n\t * constituent colors from the lighter value. This setting is commonly used\n\t * for more vibrant colors.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\n\t */\n\tpublic static DIFFERENCE:string = \"difference\";\n\n\t/**\n\t * Erases the background based on the alpha value of the display object. This\n\t * process requires that the <code>blendMode</code> property of the parent\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ERASE:string = \"erase\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the display\n\t * object. If the display object is lighter than 50% gray, the display object\n\t * and background colors are screened, which results in a lighter color. If\n\t * the display object is darker than 50% gray, the colors are multiplied,\n\t * which results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static HARDLIGHT:string = \"hardlight\";\n\n\t/**\n\t * Inverts the background.\n\t */\n\tpublic static INVERT:string = \"invert\";\n\n\t/**\n\t * Forces the creation of a transparency group for the display object. This\n\t * means that the display object is precomposed in a temporary buffer before\n\t * it is processed further. The precomposition is done automatically if the\n\t * display object is precached by means of bitmap caching or if the display\n\t * object is a display object container that has at least one child object\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LAYER:string = \"layer\";\n\n\t/**\n\t * Selects the lighter of the constituent colors of the display object and\n\t * the colors of the background(the colors with the larger values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LIGHTEN:string = \"lighten\";\n\n\t/**\n\t * Multiplies the values of the display object constituent colors by the\n\t * constituent colors of the background color, and normalizes by dividing by\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\n\t * shadows and depth effects.\n\t *\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\n\t * display object and the corresponding color of the pixel in the background\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\n\t * shade than the color of the display object or the color of the\n\t * background.</p>\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * The display object appears in front of the background. Pixel values of the\n\t * display object override the pixel values of the background. Where the\n\t * display object is transparent, the background is visible.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the background.\n\t * If the background is lighter than 50% gray, the display object and\n\t * background colors are screened, which results in a lighter color. If the\n\t * background is darker than 50% gray, the colors are multiplied, which\n\t * results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static OVERLAY:string = \"overlay\";\n\n\t/**\n\t * Multiplies the complement(inverse) of the display object color by the\n\t * complement of the background color, resulting in a bleaching effect. This\n\t * setting is commonly used for highlights or to remove black areas of the\n\t * display object.\n\t */\n\tpublic static SCREEN:string = \"screen\";\n\n\t/**\n\t * Uses a shader to define the blend between objects.\n\t *\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\n\t * automatically sets the display object's <code>blendMode</code> property to\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\n\t * set to <code>BlendMode.SHADER</code> without first setting the\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\n\t * <code>blendShader</code> property is set(which sets the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\n\t * later the value of the <code>blendMode</code> property is changed, the\n\t * blend mode can be reset to use the blend shader simply by setting the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\n\t * <code>blendShader</code> property does not need to be set again except to\n\t * change the shader that's used to define the blend mode.</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static SHADER:string = \"shader\";\n\n\t/**\n\t * Subtracts the values of the constituent colors in the display object from\n\t * the values of the background color, applying a floor of 0. This setting is\n\t * commonly used for animating a darkening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\n\t */\n\tpublic static SUBTRACT:string = \"subtract\";\n}\n\nexport = BlendMode;",
    "import IImageCanvas                = require(\"awayjs-core/lib/image/IImageCanvas\");\nimport CPURenderingContext2D = require('awayjs-core/lib/image/CPURenderingContext2D');\nimport ImageData = require('awayjs-core/lib/image/ImageData');\n\nclass CPUCanvas implements IImageCanvas {\n    public width:number = 1;\n    public height:number = 1;\n\n    private imageData:ImageData;\n\n    getContext(contextId:string):CanvasRenderingContext2D {\n        return new CPURenderingContext2D(this);\n    }\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset() {\n        if (!this.imageData) {\n            this.imageData = new ImageData(this.width, this.height);\n        }else{\n            this.imageData.width = this.width;\n            this.imageData.height = this.height;\n\n            if(this.imageData.data) {\n                this.imageData.data.length = 0;\n                this.imageData.data = null;\n            }\n            this.imageData.data = new Uint8Array(this.width*this.height*4);\n        }\n\n        for (var i:number = 0; i < this.width * this.height * 4; i += 4) {\n            this.imageData.data[i] = 255;\n            this.imageData.data[i + 1] = 255;\n            this.imageData.data[i + 2] = 255;\n            this.imageData.data[i + 3] = 255;\n        }\n    }\n\n    public getImageData():ImageData {\n        if (this.imageData.width != this.width || this.imageData.height != this.height) {\n            this.reset();\n        }\n        return this.imageData;\n    }\n\n\n}\nexport = CPUCanvas;",
    "import ImageData = require('awayjs-core/lib/image/ImageData');\nimport CPUCanvas = require('awayjs-core/lib/image/CPUCanvas');\nimport BitmapImage2D = require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix = require(\"awayjs-core/lib/geom/Matrix\");\nimport Point = require(\"awayjs-core/lib/geom/Point\");\n\n//TODO: implement all methods\nclass CPURenderingContext2D implements CanvasRenderingContext2D {\n    public miterLimit:number;\n    public font:string;\n    public globalCompositeOperation:string;\n    public msFillRule:string;\n    public lineCap:string;\n    public msImageSmoothingEnabled:boolean;\n    public lineDashOffset:number;\n    public shadowColor:string;\n    public lineJoin:string;\n    public shadowOffsetX:number;\n    public lineWidth:number;\n    public canvas:HTMLCanvasElement;\n    public strokeStyle:any;\n    public globalAlpha:number;\n    public shadowOffsetY:number;\n    public fillStyle:any;\n    public shadowBlur:number;\n    public textAlign:string;\n    public textBaseline:string;\n\n    public cpuCanvas:CPUCanvas;\n\n    private matrix:Matrix;\n\n    constructor(cpuCanvas:CPUCanvas) {\n        this.cpuCanvas = cpuCanvas;\n    }\n\n    public restore():void {\n        this.matrix = null;\n    }\n\n    public setTransform(m11:number, m12:number, m21:number, m22:number, dx:number, dy:number):void {\n        this.matrix = new Matrix(m11, m12, m21, m22, dx, dy);\n    }\n\n    public save():void {\n    }\n\n    public arc(x:number, y:number, radius:number, startAngle:number, endAngle:number, anticlockwise:boolean):void {\n    }\n\n    public measureText(text:string):TextMetrics {\n        return undefined;\n    }\n\n    public isPointInPath(x:number, y:number, fillRule:string):boolean {\n        return undefined;\n    }\n\n    public quadraticCurveTo(cpx:number, cpy:number, x:number, y:number):void {\n    }\n\n    public putImageData(imagedata:ImageData, dx:number, dy:number, dirtyX:number, dirtyY:number, dirtyWidth:number, dirtyHeight:number):void {\n    }\n\n    public rotate(angle:number):void {\n    }\n\n    public fillText(text:string, x:number, y:number, maxWidth:number):void {\n    }\n\n    public translate(x:number, y:number):void {\n    }\n\n    public scale(x:number, y:number):void {\n    }\n\n    public createRadialGradient(x0:number, y0:number, r0:number, x1:number, y1:number, r1:number):CanvasGradient {\n        return undefined;\n    }\n\n    public lineTo(x:number, y:number):void {\n    }\n\n    public getLineDash():number[] {\n        return undefined;\n    }\n\n    public fill(fillRule:string):void {\n    }\n\n    public createImageData(imageDataOrSw:any, sh:number):ImageData {\n        return undefined;\n    }\n\n    public createPattern(image:HTMLElement, repetition:string):CanvasPattern {\n        return undefined;\n    }\n\n    public closePath():void {\n    }\n\n    public rect(x:number, y:number, w:number, h:number):void {\n    }\n\n    public clip(fillRule:string):void {\n    }\n\n    public clearRect(x:number, y:number, w:number, h:number):void {\n        var imageData:ImageData = this.cpuCanvas.getImageData();\n        for (var i:number = x; i < x + w; i++) {\n            for (var j:number = y; j < y + h; j++) {\n\n                var index:number = (i + j * imageData.width) * 4;\n                imageData.data[index] = 0;\n                imageData.data[index + 1] = 0;\n                imageData.data[index + 2] = 0;\n                imageData.data[index + 3] = 0;\n            }\n        }\n    }\n\n    public moveTo(x:number, y:number):void {\n    }\n\n    public getImageData(sx:number, sy:number, sw:number, sh:number):ImageData {\n        //var result:ImageData = new ImageData(sw, sh);\n        //var i:number = 0;\n        //\n        //for (i = 0; i < sw * sh * 4; i += 4) {\n        //    result.data[i] = 255;\n        //    result.data[i + 1] = 255;\n        //    result.data[i + 2] = 255;\n        //    result.data[i + 3] = 255;\n        //}\n        //\n        //var imageData:ImageData = this.cpuCanvas.getImageData();\n        //for (i = sx; i < sx + sw; i++) {\n        //    for (var j:number = sy; j < sy + sh; j++) {\n        //        this.copyPixel32(result, i - sx, i - sy, imageData, i, j);\n        //    }\n        //}\n        return this.cpuCanvas.getImageData();\n    }\n\n    private point:Point = new Point();\n    private point2:Point = new Point();\n\n    private applyPixel32(target:ImageData, x:number, y:number, color:number[]) {\n        //todo: blending support\n\n        x = Math.floor(x);\n        y = Math.floor(y);\n\n        if (x < 0 || x >= target.width || y >= target.height || y < 0) return;\n        var index:number = (x + y * target.width) * 4;\n        //var alpha:number = color[3] / 255;\n        target.data[index] += color[0];\n        target.data[index + 1] += color[1];\n        target.data[index + 2] += color[2];\n        target.data[index + 3] += color[3];\n\n        //target.data[index] = color[0];\n        //target.data[index + 1] = color[1];\n        //target.data[index + 2] = color[2];\n        //target.data[index + 3] = color[3];\n\n        target.data[index] = target.data[index] & 0xFF;\n        target.data[index + 1] = target.data[index + 1] & 0xFF;\n        target.data[index + 2] = target.data[index + 2] & 0xFF;\n        target.data[index + 3] = target.data[index + 3] & 0xFF;\n    }\n\n    private copyPixel32(target:ImageData, x:number, y:number, source:ImageData, fromX:number, fromY:number) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n        fromX = Math.floor(fromX);\n        fromY = Math.floor(fromY);\n\n        if (x < 0 || x >= target.width || y >= target.height || y < 0) return;\n        if (fromX < 0 || fromX >= source.width || fromY >= source.height || fromY < 0) return;\n        var index:number = (x + y * target.width) * 4;\n        var fromIndex:number = (fromX + fromY * source.width) * 4;\n        target.data[index] = source.data[fromIndex];\n        target.data[index + 1] = source.data[fromIndex + 1];\n        target.data[index + 2] = source.data[fromIndex + 2];\n        target.data[index + 3] = source.data[fromIndex + 3];\n    }\n\n    private parsedFillStyle:string;\n    private parsedA:number;\n    private parsedR:number;\n    private parsedG:number;\n    private parsedB:number;\n\n    public fillRect(x:number, y:number, w:number, h:number):void {\n        if (this.fillStyle) {\n            if (this.parsedFillStyle != this.fillStyle) {\n                var colorStrings:string[] = this.fillStyle.substring(5, this.fillStyle.lastIndexOf(\")\")).split(\",\");\n                this.parsedA = parseFloat(colorStrings[3]) * 255;\n                this.parsedR = parseInt(colorStrings[0]);\n                this.parsedG = parseInt(colorStrings[1]);\n                this.parsedB = parseInt(colorStrings[2]);\n                this.parsedFillStyle = this.fillStyle;\n            }\n\n            var imageData:ImageData = this.cpuCanvas.getImageData();\n            for (var i:number = x; i < x + w; i++) {\n                for (var j:number = y; j < y + h; j++) {\n\n                    var index:number = (i + j * imageData.width) * 4;\n                    imageData.data[index] = this.parsedR;\n                    imageData.data[index + 1] = this.parsedG;\n                    imageData.data[index + 2] = this.parsedB;\n                    imageData.data[index + 3] = this.parsedA;\n                }\n            }\n        }\n    }\n\n    public bezierCurveTo(cp1x:number, cp1y:number, cp2x:number, cp2y:number, x:number, y:number):void {\n    }\n\n    public drawImage(image:HTMLElement, offsetX:number, offsetY:number, width:number, height:number, canvasOffsetX:number, canvasOffsetY:number, canvasImageWidth:number, canvasImageHeight:number):void {\n        var b:any = image;\n        if (image.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\n            var bitmap:BitmapImage2D = <BitmapImage2D> b;\n            bitmap.lock();\n\n            this.drawBitmap(bitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n\n            bitmap.unlock();\n        } else if (image.constructor.toString().indexOf(\"HTMLImage\") > -1) {\n            var htmlImage:HTMLImageElement = <HTMLImageElement> image;\n            var htmlCanvas:HTMLCanvasElement = <HTMLCanvasElement> document.createElement(\"canvas\");\n            htmlCanvas.width = htmlImage.width;\n            htmlCanvas.height = htmlImage.height;\n            var htmlContext:CanvasRenderingContext2D = htmlCanvas.getContext(\"2d\");\n            htmlContext.drawImage(htmlImage, 0, 0);\n            var htmlImageData:ImageData = htmlContext.getImageData(0, 0, htmlImage.width, htmlImage.height);\n\n            var resultBitmap:BitmapImage2D = new BitmapImage2D(htmlImage.width, htmlImage.height, true, 0, false);\n            resultBitmap.getImageData().data = htmlImageData.data;\n            var passBitmap:any = resultBitmap;\n            this.drawImage(passBitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n        } else if (image.constructor.toString().indexOf(\"CPUCanvas\") > -1) {\n            //\n            var canvas:CPUCanvas = <CPUCanvas> b;\n            this.drawBitmap(canvas, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n            //\n            //if (!width || width == 0) {\n            //    width = canvas.width;\n            //    height = canvas.height;\n            //}\n            //\n            //var sourceData:ImageData = canvas.getImageData();\n            //var scaleX:number = width / sourceData.width;\n            //var scaleY:number = height / sourceData.height;\n            //\n            //var imageData:ImageData = this.cpuCanvas.getImageData();\n            //for (var i:number = offsetX; i < offsetX + width; i++) {\n            //    for (var j:number = offsetY; j < offsetY + height; j++) {\n            //        this.copyPixel32(imageData, i, j, sourceData, (i - offsetX) * scaleX, (j - offsetY) * scaleY);\n            //    }\n            //}\n        }\n    }\n\n    private drawBitmap(bitmap:any, offsetX:number, offsetY:number, width:number, height:number, canvasOffsetX:number, canvasOffsetY:number, canvasImageWidth:number, canvasImageHeight:number) {\n        if (!width || width == 0) {\n            width = bitmap.width;\n            height = bitmap.height;\n        }\n\n        if (!canvasOffsetX || canvasOffsetX == 0) {\n            canvasOffsetX = 0;\n            canvasOffsetY = 0;\n        }\n\n        if (!canvasImageWidth || canvasImageWidth == 0 || this.matrix) { //todo: if matrix? should we reset canvasImageWidth\n            canvasImageWidth = width;\n            canvasImageHeight = height;\n        }\n\n        //console.log(\"CPURenderingContext2D:drawBitmap(width: \" + width + \" height: \" + height + \" canvasImageWidth: \" + canvasImageWidth + \" canvasImageHeight: \" + canvasImageHeight);\n\n        var sourceData:ImageData = bitmap.getImageData();\n        var canvasImageData:ImageData = this.cpuCanvas.getImageData();\n\n        if (this.matrix || (canvasImageWidth != width || canvasImageHeight != height)) {\n            var matrix:Matrix = this.matrix;\n            if (!matrix) {\n                matrix = new Matrix();\n                matrix.scale(canvasImageWidth / width, canvasImageHeight / height);\n            }\n\n            var scaleX:number = Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b);\n            var scaleY:number = Math.sqrt(matrix.c * matrix.c + matrix.d * matrix.d);\n\n            canvasImageWidth = width * scaleX;\n            canvasImageHeight = height * scaleY;\n\n            matrix.tx += canvasOffsetX;\n            matrix.ty += canvasOffsetY;\n\n            canvasOffsetX = Math.floor(matrix.tx);\n            canvasOffsetY = Math.floor(matrix.ty);\n\n            matrix.invert();\n\n            if (scaleX >= 1 || scaleY >= 1) {\n                var p:Point = new Point();\n                for (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                    for (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                        p.x = i;\n                        p.y = j;\n                        p = matrix.transformPoint(p);\n\n                        var color:number[] = CPURenderingContext2D.sampleBilinear(p.x, p.y, sourceData);\n                        this.applyPixel32(canvasImageData, i, j, color);\n                    }\n                }\n            } else {\n                //decimate\n                var p1:Point = this.point;\n                var p2:Point = this.point2;\n                for (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                    for (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                        p1.x = i;\n                        p1.y = j;\n                        p1 = matrix.transformPoint(p1);\n\n                        p2.x = i + 1;\n                        p2.y = j + 1;\n                        p2 = matrix.transformPoint(p2);\n\n                        var color:number[] = CPURenderingContext2D.sampleBox(p1.x + offsetX, p1.y + offsetY, p2.x + offsetX, p2.y + offsetY, sourceData);\n                        this.applyPixel32(canvasImageData, i, j, color);\n                    }\n                }\n            }\n\n            matrix.invert();\n        } else {\n            for (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                for (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                    var color:number[] = CPURenderingContext2D.sample(i - canvasOffsetX + offsetX, j - canvasOffsetY + offsetY, sourceData);\n                    this.applyPixel32(canvasImageData, i, j, color);\n                }\n            }\n        }\n    }\n\n    public transform(m11:number, m12:number, m21:number, m22:number, dx:number, dy:number):void {\n    }\n\n    public stroke():void {\n    }\n\n    public strokeRect(x:number, y:number, w:number, h:number):void {\n    }\n\n    public setLineDash(segments:number[]):void {\n    }\n\n    public strokeText(text:string, x:number, y:number, maxWidth:number):void {\n    }\n\n    public beginPath():void {\n    }\n\n    public arcTo(x1:number, y1:number, x2:number, y2:number, radius:number):void {\n    }\n\n    public createLinearGradient(x0:number, y0:number, x1:number, y1:number):CanvasGradient {\n        return undefined;\n    }\n\n    private static sampleBilinear(u:number, v:number, texture:ImageData, texelSizeX:number = 1, texelSizeY:number = 1):number[] {\n        var color00:number[] = CPURenderingContext2D.sample(u, v, texture);\n        var color10:number[] = CPURenderingContext2D.sample(u + texelSizeX, v, texture);\n        var color01:number[] = CPURenderingContext2D.sample(u, v + texelSizeY, texture);\n        var color11:number[] = CPURenderingContext2D.sample(u + texelSizeX, v + texelSizeY, texture);\n\n        var a:number = u;\n        a = a - Math.floor(a);\n\n        var interColor0:number[] = CPURenderingContext2D.interpolateColor(color00, color10, a);\n        var interColor1:number[] = CPURenderingContext2D.interpolateColor(color01, color11, a);\n\n        var b:number = v;\n        b = b - Math.floor(b);\n        return CPURenderingContext2D.interpolateColor(interColor0, interColor1, b);\n    }\n\n    private static sample(u:number, v:number, imageData:ImageData):number[] {\n        u = Math.floor(u);\n        v = Math.floor(v);\n\n        var result:number[] = [0, 0, 0, 0];\n\n        if (u < 0 || u >= imageData.width || v < 0 || v >= imageData.height) {\n            return result;\n        }\n\n        var index:number = (u + v * imageData.width) * 4;\n        result[0] = imageData.data[index];\n        result[1] = imageData.data[index + 1];\n        result[2] = imageData.data[index + 2];\n        result[3] = imageData.data[index + 3];\n        return result;\n    }\n\n    private static sampleBox(x0:number, y0:number, x1:number, y1:number, texture:ImageData):number[] {\n        var area:number = 0;// -- total area accumulated in pixels\n        var result:number[] = [0, 0, 0, 0];\n        var x:number;\n        var y:number;\n        var xsize:number;\n        var ysize:number;\n\n        var fromY:number = Math.floor(y0);\n        var toY:number = Math.ceil(y1);\n\n        fromY = Math.max(Math.min(fromY, texture.height - 1), 0);\n        toY = Math.max(Math.min(toY, texture.height - 1), 0);\n\n        for (y = fromY; y < toY; y++) {\n            ysize = 1;\n\n            if (y < y0) {\n                ysize = ysize * (1.0 - (y0 - y))\n            }\n\n            if (y > y1) {\n                ysize = ysize * (1.0 - (y - y1))\n            }\n\n            var fromX:number = Math.floor(x0);\n            var toX:number = Math.ceil(x1);\n\n            fromX = Math.max(Math.min(fromX, texture.width - 1), 0);\n            toX = Math.max(Math.min(toX, texture.width - 1), 0);\n\n\n            for (x = fromX; x < toX; x++) {\n                xsize = ysize;\n\n                var color:number[] = CPURenderingContext2D.sample(x, y, texture);\n\n                if (x < x0) {\n                    xsize = xsize * (1.0 - (x0 - x))\n                }\n                if (x > x1) {\n                    xsize = xsize * (1.0 - (x - x1))\n                }\n                result[0] += color[0] * xsize;\n                result[1] += color[1] * xsize;\n                result[2] += color[2] * xsize;\n                result[3] += color[3] * xsize;\n                area = area + xsize\n            }\n        }\n\n        result[0] /= area;\n        result[1] /= area;\n        result[2] /= area;\n        result[3] /= area;\n\n        result[0] = result[0] & 0xFF;\n        result[1] = result[1] & 0xFF;\n        result[2] = result[2] & 0xFF;\n        result[3] = result[3] & 0xFF;\n        return result;\n    }\n\n    private static interpolateColor(source:number[], target:number[], a:number):number[] {\n        var result:number[] = [];\n        result[0] = source[0] + (target[0] - source[0]) * a;\n        result[1] = source[1] + (target[1] - source[1]) * a;\n        result[2] = source[2] + (target[2] - source[2]) * a;\n        result[3] = source[3] + (target[3] - source[3]) * a;\n        return result;\n    }\n\n}\nexport = CPURenderingContext2D;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nclass Image2D extends ImageBase\n{\n\tpublic static assetType:string = \"[image Image2D]\";\n\n\tpublic _rect:Rectangle;\n\n\tprivate _powerOfTwo:boolean = true;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Image2D.assetType;\n\t}\n\n\t/**\n\t * The height of the image in pixels.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._rect.height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._rect.height == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._rect.width, value);\n\t}\n\n\t/**\n\t * The rectangle that defines the size and location of the bitmap image. The\n\t * top and left of the rectangle are 0; the width and height are equal to the\n\t * width and height in pixels of the BitmapData object.\n\t */\n\tpublic get rect():Rectangle\n\t{\n\t\treturn this._rect;\n\t}\n\n\t/**\n\t * The width of the bitmap image in pixels.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._rect.width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._rect.width == value)\n\t\t\treturn;\n\n\t\tthis._setSize(value, this._rect.height);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(width:number, height:number, powerOfTwo:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._rect = new Rectangle(0, 0, width, height);\n\t\tthis._powerOfTwo = powerOfTwo;\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tif (this._rect.width != width || this._rect.height != height)\n\t\t\tthis.clear();\n\n\t\tthis._rect.width = width;\n\t\tthis._rect.height = height;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions()\n\t{\n\t\tif (this._powerOfTwo && (!ImageUtils.isDimensionValid(this._rect.width) || !ImageUtils.isDimensionValid(this._rect.height)))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n\n\t/**\n\t * Enable POT texture size validation\n\t * @returns {boolean}\n\t */\n\tpublic get powerOfTwo():boolean {\n\t\treturn this._powerOfTwo;\n\t}\n\n\tpublic set powerOfTwo(value:boolean) {\n\t\tif(this._powerOfTwo == value) return;\n\t\tthis._powerOfTwo = value;\n\t\tthis._testDimensions();\n\t}\n}\n\nexport = Image2D;",
    "import SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nclass ImageBase extends AssetBase\n{\n\tpublic _pFormat:string = \"bgra\";\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get format():string\n\t{\n\t\treturn this._pFormat;\n\t}\n}\n\nexport = ImageBase;",
    "import ImageBase\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerCube\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nclass ImageCube extends ImageBase\n{\n\tpublic static assetType:string = \"[image ImageCube]\";\n\n\tpublic _size:number;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn ImageCube.assetType;\n\t}\n\n\t/**\n\t * The size of the cube bitmap in pixels.\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._size);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(size:number)\n\t{\n\t\tsuper();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number)\n\t{\n\t\tif (this._size != size)\n\t\t\tthis.clear();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions()\n\t{\n\t\tif (!ImageUtils.isDimensionValid(this._size))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n}\n\nexport = ImageCube;",
    "class ImageData {\n    public width: number;\n    public data: any;\n    public height: number;\n\n    constructor(width:number, height:number) {\n        this.width = width;\n        this.height = height;\n        this.data = new Uint8Array(width*height*4);\n    }\n}\nexport = ImageData;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\n/**\n * The Sampler2D class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Sampler2D()</code> constructor.\n *\n * <p>The <code>Sampler2D()</code> constructor allows you to create a Sampler2D\n * object that contains a reference to a Image2D object. After you create a\n * Sampler2D object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Sampler2D object can share its Image2D reference among several Sampler2D\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Sampler2D objects that reference the same Image2D object,\n * multiple texture objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each texture\n * object instance.</p>\n\n */\nclass Sampler2D extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset Sampler2D]\";\n\n\tprivate _imageRect:Rectangle;\n\tprivate _frameRect:Rectangle;\n\tprivate _repeat:boolean;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Sampler2D.assetType;\n\t}\n\n\t/**\n\t * Controls whether or not the Sampler2D object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\t//var pixelSnapping:PixelSnapping;\n\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\n\t/**\n\t *\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get imageRect():Rectangle\n\t{\n\t\treturn this._imageRect;\n\t}\n\tpublic set imageRect(value:Rectangle)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\tpublic set frameRect(value:Rectangle)\n\t{\n\t\tif (this._frameRect == value)\n\t\t\treturn;\n\n\t\tthis._frameRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t * @param image2D\n\t * @param smoothing\n\t */\n\tconstructor(repeat:boolean = false, smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper(smooth, mipmap);\n\n\t\tthis._repeat = repeat;\n\n\t\tthis._updateRect();\n\t}\n\n\tprivate _updateRect()\n\t{\n\t}\n}\n\nexport = Sampler2D;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n *\n */\nclass SamplerBase extends AssetBase\n{\n\tprivate _smooth:boolean;\n\tprivate _mipmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._smooth = smooth;\n\t\tthis._mipmap = mipmap;\n\t}\n}\n\nexport = SamplerBase;",
    "import SamplerBase\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\n\n/**\n * The Bitmap class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Bitmap()</code> constructor.\n *\n * <p>The <code>Bitmap()</code> constructor allows you to create a Bitmap\n * object that contains a reference to a BitmapData object. After you create a\n * Bitmap object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Bitmap object can share its BitmapData reference among several Bitmap\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Bitmap objects that reference the same BitmapData object,\n * multiple texture objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each texture\n * object instance.</p>\n\n */\nclass SamplerCube extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset SamplerCube]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SamplerCube.assetType;\n\t}\n\n\t/**\n\t *\n\t * @param bitmapData\n\t * @param smoothing\n\t */\n\tconstructor(smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper(smooth, mipmap);\n\t}\n}\n\nexport = SamplerCube;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport BitmapImageChannel\t\t= require(\"awayjs-core/lib/image/BitmapImageChannel\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\n/**\n *\n */\nclass SpecularImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[asset SpecularImage2D]\";\n\n\tprivate _specularSource:BitmapImage2D;\n\tprivate _glossSource:BitmapImage2D;\n\tprivate _output:BitmapImage2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SpecularImage2D.assetType;\n\t}\n\n\tpublic get specularSource():BitmapImage2D\n\t{\n\t\treturn this._specularSource;\n\t}\n\n\tpublic set specularSource(value:BitmapImage2D)\n\t{\n\t\tif (this._specularSource == value)\n\t\t\treturn;\n\n\t\tthis._specularSource = value;\n\n\t\tthis.invalidate();\n\n\t\tthis._testSize();\n\t}\n\n\n\tpublic get glossSource():BitmapImage2D\n\t{\n\t\treturn this._glossSource;\n\t}\n\n\tpublic set glossSource(value:BitmapImage2D)\n\t{\n\t\tif (this._glossSource == value)\n\t\t\treturn;\n\n\t\tthis._glossSource = value;\n\n\t\tthis.invalidate();\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(specularSource:BitmapImage2D = null, glossSource:BitmapImage2D = null)\n\t{\n\t\tsuper(1, 1);\n\n\t\tthis._specularSource = specularSource;\n\t\tthis._glossSource = glossSource;\n\n\t\tthis._output = new BitmapImage2D(1, 1, false, 0xffffff);\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t * Returns a new SpecularImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new SpecularImage2D object that is identical to the original.\n\t */\n\tpublic clone():SpecularImage2D\n\t{\n\t\treturn new SpecularImage2D(this._specularSource, this._glossSource);\n\t}\n\n\t/**\n\t * Frees memory that is used to store the SpecularImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this SpecularImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>SpecularImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>SpecularImage2D.dispose()</code>, the SpecularImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the SpecularImage2D object. However,\n\t * <code>SpecularImage2D.dispose()</code> does not garbage collect the SpecularImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * SpecularImage2D object is released at the time the SpecularImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._rect = null;\n\n\t\tthis._output.dispose();\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tvar origin:Point = new Point();\n\n\t\tthis._output.fillRect(this._rect, 0xffffff);\n\n\t\tif (this._glossSource)\n\t\t\tthis._output.copyChannel(this._glossSource, this._rect, origin, BitmapImageChannel.GREEN, BitmapImageChannel.GREEN);\n\n\t\tif (this._specularSource)\n\t\t\tthis._output.copyChannel(this._specularSource, this._rect, origin, BitmapImageChannel.RED, BitmapImageChannel.RED);\n\n\t\treturn this._output.getImageData();\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn this._output.getCanvas();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tsuper._setSize(width, height);\n\n\t\tthis._output._setSize(width, height);\n\t}\n\n\tprivate _testSize()\n\t{\n\t\tvar w:number, h:number;\n\n\t\tif (this._specularSource) {\n\t\t\tw = this._specularSource.width;\n\t\t\th = this._specularSource.height;\n\t\t} else if (this._glossSource) {\n\t\t\tw = this._glossSource.width;\n\t\t\th = this._glossSource.height;\n\t\t} else {\n\t\t\tw = 1;\n\t\t\th = 1;\n\t\t}\n\n\t\tif (w != this._output.width && h != this._output.height) {\n\t\t\tthis._output.dispose();\n\t\t\tthis._output = new BitmapImage2D(w, h, false, 0xffffff);\n\t\t}\n\n\t\tthis._setSize(w, h);\n\t}\n}\n\nexport = SpecularImage2D;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\n/**\n *\n * @class away.pool.AbstractionBase\n */\nclass AbstractionBase extends EventDispatcher\n{\n\tprivate _onClearDelegate:(event:AssetEvent) => void;\n\tprivate _onInvalidateDelegate:(event:AssetEvent) => void;\n\n\tpublic _pool:IAbstractionPool;\n\n\tpublic _asset:IAsset;\n\n\tpublic _invalid:boolean = true;\n\n\tconstructor(asset:IAsset, pool:IAbstractionPool)\n\t{\n\t\tsuper();\n\n\t\tthis._asset = asset;\n\t\tthis._pool = pool;\n\n\t\tthis._onClearDelegate = (event:AssetEvent) => this.onClear(event);\n\t\tthis._onInvalidateDelegate = (event:AssetEvent) => this.onInvalidate(event);\n\n\t\tthis._asset.addEventListener(AssetEvent.CLEAR, this._onClearDelegate);\n\t\tthis._asset.addEventListener(AssetEvent.INVALIDATE, this._onInvalidateDelegate);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tthis._asset.removeEventListener(AssetEvent.CLEAR, this._onClearDelegate);\n\t\tthis._asset.removeEventListener(AssetEvent.INVALIDATE, this._onInvalidateDelegate);\n\n\t\tthis._pool.clearAbstraction(this._asset);\n\t\tthis._pool = null;\n\t\tthis._asset = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tthis._invalid = true;\n\t}\n}\n\nexport = AbstractionBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nclass AssetBase extends EventDispatcher implements IAsset\n{\n\tpublic static ID_COUNT:number = 0;\n\n\tprivate _originalName:string;\n\tprivate _namespace:string;\n\tprivate _name:string;\n\tprivate _id:number;\n\tprivate _full_path:Array<string>;\n\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\n\n\tconstructor(name:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._id = AssetBase.ID_COUNT++;\n\n\t\tif (name == null)\n\t\t\tname = 'null';\n\n\t\tthis._name = name;\n\t\tthis._originalName = name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * The original name used for this asset in the resource (e.g. file) in which\n\t * it was found. This may not be the same as <code>name</code>, which may\n\t * have changed due to of a name conflict.\n\t */\n\tpublic get originalName():string\n\t{\n\t\treturn this._originalName;\n\t}\n\n\t/**\n\t * A unique id for the asset, used to identify assets in an associative array\n\t */\n\tpublic get id():number\n\t{\n\t\treturn this._id;\n\t}\n\n\tpublic get name():string\n\t{\n\t\treturn this._name;\n\t}\n\n\tpublic set name(val:string)\n\t{\n\t\tvar prev:string;\n\n\t\tprev = this._name;\n\t\tthis._name = val;\n\n\t\tif (this._name == null)\n\t\t\tthis._name = 'null';\n\n\t\tthis.updateFullPath();\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.RENAME, this, prev));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.DISPOSE, this));\n\t}\n\n\tpublic clear()\n\t{\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.CLEAR, this));\n\t}\n\n\tpublic get assetNamespace():string\n\t{\n\t\treturn this._namespace;\n\t}\n\n\tpublic get assetFullPath():Array<string>\n\t{\n\t\treturn this._full_path;\n\t}\n\n\tpublic assetPathEquals(name:string, ns:string):boolean\n\t{\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\n\t}\n\n\n\tpublic isAsset(assetClass:IAssetClass):boolean\n\t{\n\t\treturn this.assetType == assetClass.assetType;\n\t}\n\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\n\t{\n\n\t\tthis._name = name? name : 'null';\n\t\tthis._namespace = ns? ns : AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (overrideOriginal)\n\t\t\tthis._originalName = this._name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\tprivate updateFullPath():void\n\t{\n\t\tthis._full_path = [ this._namespace, this._name ];\n\t}\n}\n\nexport = AssetBase;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetLibrary\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport Loader\t\t\t= require(\"awayjs-core/lib/library/Loader\");\nimport LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport ConflictStrategy\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategy\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport URLLoaderEvent\t\t\t= require(\"awayjs-core/lib/events/URLLoaderEvent\");\nimport LoaderEvent\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\n * Its purpose is to create a container for 3D data management, both before and after parsing.\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\n */\nclass AssetLibraryBundle extends EventDispatcher\n{\n\tpublic static _iInstances:Object = new Object();\n\n\tprivate _loaderSessions:Array<Loader>;\n\tprivate _strategy:ConflictStrategyBase;\n\tprivate _strategyPreference:string;\n\tprivate _assets:Array<IAsset>;\n\tprivate _assetDictionary:Object;\n\tprivate _assetDictDirty:boolean;\n\tprivate _loaderSessionsGarbage:Array<Loader> = new Array<Loader>();\n\tprivate _gcTimeoutIID:number;\n\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:LoaderEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\t/**\n\t * Creates a new <code>AssetLibraryBundle</code> object.\n\t *\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\n\t\tthis._assetDictionary = new Object();\n\t\tthis._loaderSessions = new Array<Loader>();\n\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\n\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:LoaderEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibrary as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\tif (!key)\n\t\t\tkey = 'default';\n\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\n\n\t\treturn AssetLibraryBundle._iInstances[key];\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParser(parserClass:Object)\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParsers(parserClasses:Object[])\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\n\t * is used which means that a numeric suffix is appended to one of the assets. The\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\n\t * be renamed.\n\t *\n\t * @see naming.ConflictStrategy\n\t * @see AssetLibrary.conflictPrecedence\n\t */\n\tpublic get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn this._strategy;\n\t}\n\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\n\t\tif (!val)\n\t\t\tthrow new ErrorBase('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\n\n\t\tthis._strategy = val.create();\n\n\t}\n\n\t/**\n\t * Defines which asset should have precedence when resolving a naming conflict between\n\t * two assets of which one has just been renamed by the user or by a parser. By default\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\n\t *\n\t * This property is ignored for conflict strategies that do not actually rename an\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\n\t *\n\t * @see away.library.ConflictPrecedence\n\t * @see away.library.ConflictStrategy\n\t */\n\tpublic get conflictPrecedence():string\n\t{\n\t\treturn this._strategyPreference;\n\t}\n\n\tpublic set conflictPrecedence(val:string)\n\t{\n\t\tthis._strategyPreference = val;\n\t}\n\n\t/**\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\n\t * namespace. A \"null\" filter value means no filter of that type is used.\n\t *\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\n\t * null to not filter on asset type.\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\n\t * included in the iteration or not. This needs to be a function that takes a single\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\n\t *\n\t * @see away.library.AssetType\n\t */\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis.getLoader().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads a resource from existing data in memory.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis.getLoader().loadData(data, '', context, ns, parser);\n\t}\n\n\tpublic getLoader():Loader\n\t{\n\t\tvar loader:Loader = new Loader();\n\n\t\tthis._loaderSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader;\n\t}\n\t\n\tpublic disposeLoader(loader:Loader)\n\t{\n\t\tvar index:number = this._loaderSessions.indexOf(loader);\n\t\tthis._loaderSessions.splice(index, 1);\n\n\t\t// Add loader to a garbage array - for a collection sweep and kill\n\t\tthis._loaderSessionsGarbage.push(loader);\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\treturn null;\n\n\t\treturn this._assetDictionary[ns][name];\n\n\t}\n\tpublic getAllAssets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\t/**\n\t * Adds an asset to the asset library, first making sure that it's name is unique\n\t * using the method defined by the <code>conflictStrategy</code> and\n\t * <code>conflictPrecedence</code> properties.\n\t */\n\tpublic addAsset(asset:IAsset)\n\t{\n\t\tvar ns:string;\n\t\tvar old:IAsset;\n\n\t\t// Bail if asset has already been added.\n\t\tif (this._assets.indexOf(asset) >= 0)\n\t\t\treturn;\n\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\n\t\tns = asset.assetNamespace || AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (old != null)\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\n\n\t\t//create unique-id (for now this is used in AwayBuilder only\n\t\t//asset.id = IDUtil.createUID();\n\n\t\t// Add it\n\t\tthis._assets.push(asset);\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\tthis._assetDictionary[ns] = new Object();\n\n\t\tthis._assetDictionary[ns][asset.name] = asset;\n\n\t\tasset.addEventListener(AssetEvent.RENAME, this._onAssetRenameDelegate);\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\t}\n\n\t/**\n\t * Removes an asset from the library, and optionally disposes that asset by calling\n\t * it's disposeAsset() method (which for most assets is implemented as a default\n\t * version of that type's dispose() method.\n\t *\n\t * @param asset The asset which should be removed from this library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tvar idx:number;\n\n\t\tthis.removeAssetFromDict(asset);\n\n\t\tasset.removeEventListener(AssetEvent.RENAME, this._onAssetRenameDelegate);\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\n\t\tidx = this._assets.indexOf(asset);\n\n\t\tif (idx >= 0)\n\t\t\tthis._assets.splice(idx, 1);\n\n\t\tif (dispose)\n\t\t\tasset.dispose();\n\t}\n\n\t/**\n\t * Removes an asset which is specified using name and namespace.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\tvar asset:IAsset = this.getAsset(name, ns);\n\n\t\tif (asset)\n\t\t\tthis.removeAsset(asset, dispose);\n\n\t\treturn asset;\n\t}\n\n\t/**\n\t * Removes all assets from the asset library, optionally disposing them as they\n\t * are removed.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAllAssets(dispose:boolean = true)\n\t{\n\t\tif (dispose) {\n\t\t\tvar asset:IAsset;\n\t\t\tvar len:number = this._assets.length;\n\t\t\tfor (var c:number = 0; c < len; c++) {\n\t\t\t\tasset = this._assets[c];\n\t\t\t\tasset.dispose();\n\t\t\t}\n\t\t}\n\n\t\tthis._assets.length = 0;\n\t\tthis.rehashAssetDict();\n\t}\n\n\t/**\n\t * Removes all assets belonging to a particular namespace (null for default)\n\t * from the asset library, and optionall disposes them by calling their\n\t * disposeAsset() method.\n\t *\n\t * @param ns The namespace from which all assets should be removed.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tvar idx:number = 0;\n\t\tvar asset:IAsset;\n\t\tvar old_assets:IAsset[];\n\n\t\t// Empty the assets vector after having stored a copy of it.\n\t\t// The copy will be filled with all assets which weren't removed.\n\t\told_assets = this._assets.concat();\n\t\tthis._assets.length = 0;\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tvar len:number = old_assets.length;\n\t\tfor (var d:number = 0; d < len; d++) {\n\t\t\tasset = old_assets[d];\n\n\t\t\t// Remove from dict if in the supplied namespace. If not,\n\t\t\t// transfer over to the new vector.\n\t\t\tif (asset.assetNamespace == ns) {\n\t\t\t\tif (dispose)\n\t\t\t\t\tasset.dispose();\n\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\n\t\t\t\t// test that is not needed since we know that the namespace\n\t\t\t\t// will be empty when loop finishes.\n\t\t\t\tthis.removeAssetFromDict(asset, false);\n\t\t\t} else {\n\t\t\t\tthis._assets[idx++] = asset;\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t for each (asset in old_assets) {\n\t\t // Remove from dict if in the supplied namespace. If not,\n\t\t // transfer over to the new vector.\n\t\t if (asset.assetNamespace == ns) {\n\t\t if (dispose)\n\t\t asset.dispose();\n\n\t\t // Remove asset from dictionary, but don't try to auto-remove\n\t\t // the namespace, which will trigger an unnecessarily expensive\n\t\t // test that is not needed since we know that the namespace\n\t\t // will be empty when loop finishes.\n\t\t removeAssetFromDict(asset, false);\n\t\t } else\n\t\t _assets[idx++] = asset;\n\n\t\t }\n\t\t */\n\n\t\t// Remove empty namespace\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\n\t\t\tdelete this._assetDictionary[ns];\n\t}\n\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true)\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\n\n\t\t\tif (autoRemoveEmptyNamespace) {\n\n\t\t\t\tvar key:string;\n\t\t\t\tvar empty:boolean = true;\n\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (empty)\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic stopAllLoaders()\n\t{\n\t\tvar len:number = this._loaderSessions.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis.killloaderSession(this._loaderSessions[i]);\n\n\t\tthis._loaderSessions = new Array<Loader>();\n\t}\n\n\tprivate rehashAssetDict()\n\t{\n\t\tvar asset:IAsset;\n\n\t\tthis._assetDictionary = {};\n\n\t\tvar len:number = this._assets.length;\n\t\tfor (var c:number = 0; c < len; c++) {\n\t\t\tasset = this._assets[c];\n\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\n\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\n\n\t\t}\n\n\t\tthis._assetDictDirty = false;\n\n\t}\n\n\t/**\n\t * Called when a an error occurs during loading.\n\t */\n\tprivate onLoadError(event:URLLoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing.\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Only add asset to library the first time.\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\n\t\t\tthis.addAsset(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\n\t}\n\n\tprivate onTextureSizeError(event:LoaderEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tvar loader:Loader = <Loader> event.target;\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis.disposeLoader(loader);\n\t}\n\n\tprivate loaderSessionGC():void\n\t{\n\t\tvar loader:Loader;\n\n\t\twhile (this._loaderSessionsGarbage.length > 0) {\n\t\t\tloader = this._loaderSessionsGarbage.pop();\n\t\t\tthis.killloaderSession(loader);\n\t\t}\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate killloaderSession(loader:Loader)\n\t{\n\t\tloader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t\tloader.stop();\n\t}\n\n\n\tprivate onAssetRename(event:AssetEvent)\n\t{\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\n\n\t\tif (old != null) {\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\n\t\t} else {\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\n\n\t\t\tif (dict == null)\n\t\t\t\treturn;\n\n\t\t\tdict[event.prevName] = null;\n\t\t\tdict[event.asset.name] = event.asset;\n\t\t}\n\t}\n\n\tprivate onAssetConflictResolved(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event.clone());\n\t}\n}\n\nexport = AssetLibraryBundle;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass AssetLibraryIterator\n{\n\n\tprivate  _assets:Array<IAsset>;\n\tprivate _filtered:Array<IAsset>;\n\n\tprivate _idx:number;\n\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tthis._assets = assets;\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\tpublic get currentAsset():IAsset\n\t{\n\t\t// Return current, or null if no current\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\n\t}\n\n\tpublic get numAssets():number\n\t{\n\t\treturn this._filtered.length;\n\t}\n\n\tpublic next():IAsset\n\t{\n\t\tvar next:IAsset = null;\n\n\t\tif (this._idx < this._filtered.length)\n\t\t\tnext = this._filtered[this._idx];\n\n\t\tthis._idx++;\n\n\t\treturn next;\n\t}\n\n\tpublic reset()\n\t{\n\t\tthis._idx = 0;\n\t}\n\n\tpublic setIndex(index:number)\n\t{\n\t\tthis._idx = index;\n\t}\n\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tif (assetTypeFilter || namespaceFilter) {\n\n\t\t\tvar idx:number;\n\t\t\tvar asset:IAsset;\n\n\n\t\t\tidx = 0;\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\n\n\t\t\tvar l:number = this._assets.length;\n\n\t\t\tfor (var c:number = 0; c < l; c++) {\n\n\t\t\t\tasset = <IAsset> this._assets[c];\n\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._filtered[idx++] = asset;\n\n\t\t\t}\n\n\t\t\t/*\n\t\t\t for each (asset in _assets) {\n\t\t\t // Skip this assets if filtering on type and this is wrong type\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\n\t\t\t if (filterFunc != null && !filterFunc(asset))\n\t\t\t continue;\n\n\t\t\t _filtered[idx++] = asset;\n\t\t\t }\n\t\t\t */\n\n\t\t} else {\n\t\t\tthis._filtered = this._assets;\n\t\t}\n\t}\n}\n\nexport = AssetLibraryIterator;",
    "import URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\nimport AssetLibraryBundle\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLibraryIterator\t\t= require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nimport Loader\t\t\t= require(\"awayjs-core/lib/library/Loader\");\nimport LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\n */\nclass AssetLibrary\n{\n\t/**\n\t * Creates a new <code>AssetLibrary</code> object.\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t//*/\n\t/**\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibraryBundle as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\treturn AssetLibraryBundle.getInstance(key);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParser(parserClass)\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Short-hand for conflictStrategy property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictStrategy\n\t */\n\tpublic static get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\n\t}\n\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\n\t}\n\n\t/**\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictPrecedence\n\t */\n\tpublic static get conflictPrecedence():string\n\t{\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\n\t}\n\n\tpublic static set conflictPrecedence(val:string)\n\t{\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\n\t}\n\n\t/**\n\t * Short-hand for createIterator() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.createIterator()\n\t */\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Short-hand for load() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.load()\n\t */\n\tpublic static load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tAssetLibrary.getBundle().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Short-hand for loadData() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.loadData()\n\t */\n\tpublic static loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tAssetLibrary.getBundle().loadData(data, context, ns, parser);\n\t}\n\n\tpublic static stopLoad()\n\t{\n\t\tAssetLibrary.getBundle().stopAllLoaders();\n\t}\n\n\tpublic static getLoader():Loader\n\t{\n\t\treturn AssetLibrary.getBundle().getLoader();\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAllAssets():Array<IAsset>\n\t{\n\t\treturn AssetLibrary.getBundle().getAllAssets();\n\t}\n\n\t/**\n\t * Short-hand for addEventListener() method on default asset library bundle.\n\t */\n\tpublic static addEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for removeEventListener() method on default asset library bundle.\n\t */\n\tpublic static removeEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for hasEventListener() method on default asset library bundle.\n\n\t public static hasEventListener(type:string):boolean\n\t {\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\n\t}\n\n\t public static willTrigger(type:string):boolean\n\t {\n\t\treturn getBundle().willTrigger(type);\n\t}\n\t */\n\n\t/**\n\t * Short-hand for addAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.addAsset()\n\t */\n\tpublic static addAsset(asset:IAsset)\n\t{\n\t\tAssetLibrary.getBundle().addAsset(asset);\n\t}\n\n\t/**\n\t * Short-hand for removeAsset() method on default asset library bundle.\n\t *\n\t * @param asset The asset which should be removed from the library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAsset()\n\t */\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAssetByName()\n\t */\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAllAssets()\n\t */\n\tpublic static removeAllAssets(dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\n\t */\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\n\t}\n}\n\nexport = AssetLibrary;",
    "/**\n * Enumaration class for precedence when resolving naming conflicts in the library.\n *\n * @see away.library.AssetLibrary.conflictPrecedence\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategy\n */\nclass ConflictPrecedence\n{\n\t/**\n\t * Signals that in a conflict, the previous owner of the conflicting name\n\t * should be favored (and keep it's name) and that the newly renamed asset\n\t * is reverted to a non-conflicting name.\n\t */\n\tpublic static FAVOR_OLD:string = 'favorOld';\n\n\t/**\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\n\t * it's newly defined name) and that the previous owner of that name gets\n\t * renamed to a non-conflicting name.\n\t */\n\tpublic static FAVOR_NEW:string = 'favorNew';\n}\n\nexport = ConflictPrecedence;",
    "import ConflictPrecedence\t\t= require(\"awayjs-core/lib/library/ConflictPrecedence\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\n/**\n * Abstract base class for naming conflict resolution classes. Extend this to create a\n * strategy class which the asset library can use to resolve asset naming conflicts, or\n * use one of the bundled concrete strategy classes:\n *\n * <ul>\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\n * </ul>\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.ConflictStrategy\n * @see away.library.IgnoreConflictStrategy\n * @see away.library.ErrorConflictStrategy\n * @see away.library.NumSuffixConflictStrategy\n */\nclass ConflictStrategyBase\n{\n\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\n\t * classes.\n\t */\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\n\t * would break any state caching that happens inside the strategy class.\n\t */\n\tpublic create():ConflictStrategyBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\n\t * the conflict resolution by applying the new names and dispatching the correct events.\n\t */\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar loser_prev_name:string;\n\t\tvar winner:IAsset;\n\t\tvar loser:IAsset;\n\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\n\n\t\tloser_prev_name = loser.name;\n\n\t\tassetsDictionary[winner.name] = winner;\n\t\tassetsDictionary[nonConflictingName] = loser;\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\n\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\n\t}\n}\n\nexport = ConflictStrategyBase;",
    "import ConflictStrategyBase\t\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport ErrorConflictStrategy\t\t= require(\"awayjs-core/lib/library/ErrorConflictStrategy\");\nimport IgnoreConflictStrategy\t\t= require(\"awayjs-core/lib/library/IgnoreConflictStrategy\");\nimport NumSuffixConflictStrategy\t= require(\"awayjs-core/lib/library/NumSuffixConflictStrategy\");\n\n/**\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\n * property on an AssetLibrary to define how that library resolves naming conflicts.\n *\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategyBase\n */\nclass ConflictStrategy\n{\n\t/**\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\n\t * a numeric suffix appended to the base name.\n\t */\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\n\n\t/**\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\n\t */\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\n\n\t/**\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\n\t * to have the library automatically rename assets to avoid such conflicts.\n\t */\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\n\n\tconstructor(include?:ConflictStrategyBase)\n\t{\n\t\t//TODO: find out why typescript d.ts files do not include this class\n\t}\n}\n\nexport = ConflictStrategy;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nclass ErrorConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new ErrorBase('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new ErrorConflictStrategy();\n\t}\n}\n\nexport = ErrorConflictStrategy;",
    "class IDUtil\n{\n\t/**\n\t *  @private\n\t *  Char codes for 0123456789ABCDEF\n\t */\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\n\n\t/**\n\t *  Generates a UID (unique identifier) based on ActionScript's\n\t *  pseudo-random number generator and the current time.\n\t *\n\t *  <p>The UID has the form\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\n\t *\n\t *  <p>This UID will not be truly globally unique; but it is the best\n\t *  we can do without player support for UID generation.</p>\n\t *\n\t *  @return The newly-generated UID.\n\t *\n\t *  @langversion 3.0\n\t *  @playerversion Flash 9\n\t *  @playerversion AIR 1.1\n\t *  @productversion Flex 3\n\t */\n\tpublic static createUID():string\n\t{\n\t\tvar uid = new Array(36);\n\t\tvar index:number = 0;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\t\tfor (j = 0; j < 4; j++)\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\t\t}\n\n\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\tvar time:number = new Date().getTime();\n\t\t// Note: time is the number of milliseconds since 1970,\n\t\t// which is currently more than one trillion.\n\t\t// We use the low 8 hex digits of this number in the UID.\n\t\t// Just in case the system clock has been reset to\n\t\t// Jan 1-4, 1970 (in which case this number could have only\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\n\t\t// before taking the low digits.\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = timeString.charCodeAt(i);\n\n\t\tfor (i = 0; i < 4; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\treturn String.fromCharCode.apply(null, uid);\n\t}\n\n\t/**\n\t * Returns the decimal representation of a hex digit.\n\t * @private\n\n\t private static getDigit(hex:string):number\n\t {\n\t\tswitch (hex) {\n\t\t\tcase \"A\":\n\t\t\tcase \"a\":\n\t\t\t\treturn 10;\n\t\t\tcase \"B\":\n\t\t\tcase \"b\":\n\t\t\t\treturn 11;\n\t\t\tcase \"C\":\n\t\t\tcase \"c\":\n\t\t\t\treturn 12;\n\t\t\tcase \"D\":\n\t\t\tcase \"d\":\n\t\t\t\treturn 13;\n\t\t\tcase \"E\":\n\t\t\tcase \"e\":\n\t\t\t\treturn 14;\n\t\t\tcase \"F\":\n\t\t\tcase \"f\":\n\t\t\t\treturn 15;\n\t\t\tdefault:\n\t\t\t\treturn new uint(hex);\n\t\t}\n\t}\n\t */\n\n}\n\nexport = IDUtil;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass IgnoreConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\t// Do nothing, ignore the fact that there is a conflict.\n\t\treturn;\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new IgnoreConflictStrategy();\n\t}\n}\n\nexport = IgnoreConflictStrategy;",
    "class LoaderContext\n{\n\tpublic static UNDEFINED:number = 0;\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\n\tpublic static MULTIPASS_MATERIALS:number = 2;\n\n\tprivate _includeDependencies:boolean;\n\tprivate _dependencyBaseUrl:string;\n\tprivate _embeddedDataByUrl:Object;\n\tprivate _remappedUrls:Object;\n\tprivate _materialMode:number;\n\n\tprivate _overrideAbsPath:boolean;\n\tprivate _overrideFullUrls:boolean;\n\n\t/**\n\t * LoaderContext provides configuration for the Loader load() and parse() operations.\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\n\t * embedded data.\n\t *\n\t * @see away.loading.Loader\n\t */\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\n\t{\n\t\tthis._includeDependencies = includeDependencies;\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\n\t\tthis._embeddedDataByUrl = {};\n\t\tthis._remappedUrls = {};\n\t\tthis._materialMode = LoaderContext.UNDEFINED;\n\t}\n\n\t/**\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\n\t * parseData() operations) should be automatically loaded. Defaults to true.\n\t */\n\tpublic get includeDependencies():boolean\n\t{\n\t\treturn this._includeDependencies;\n\t}\n\n\tpublic set includeDependencies(val:boolean)\n\t{\n\t\tthis._includeDependencies = val;\n\t}\n\n\t/**\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\n\t * Options:\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\n\t *\n\t */\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic set materialMode(materialMode:number)\n\t{\n\t\tthis._materialMode = materialMode;\n\t}\n\n\t/**\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\n\t * Absolute paths will not be affected by the value of this property.\n\t */\n\tpublic get dependencyBaseUrl():string\n\t{\n\t\treturn this._dependencyBaseUrl;\n\t}\n\n\tpublic set dependencyBaseUrl(val:string)\n\t{\n\t\tthis._dependencyBaseUrl = val;\n\t}\n\n\t/**\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideAbsolutePaths():boolean\n\t{\n\t\treturn this._overrideAbsPath;\n\t}\n\n\tpublic set overrideAbsolutePaths(val:boolean)\n\t{\n\t\tthis._overrideAbsPath = val;\n\t}\n\n\t/**\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideFullURLs():boolean\n\t{\n\t\treturn this._overrideFullUrls;\n\t}\n\n\tpublic set overrideFullURLs(val:boolean)\n\t{\n\t\tthis._overrideFullUrls = val;\n\t}\n\n\t/**\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\n\t * expected by the loaded file.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param newUrl The URL from which away.should load the resource instead.\n\t *\n\t * @see mapUrlToData()\n\t */\n\tpublic mapUrl(originalUrl:string, newUrl:string)\n\t{\n\t\tthis._remappedUrls[originalUrl] = newUrl;\n\t}\n\n\t/**\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\n\t */\n\tpublic mapUrlToData(originalUrl:string, data:any)\n\t{\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether embedded data has been mapped to a particular URL.\n\t */\n\tpublic _iHasDataForUrl(url:string):boolean\n\t{\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns embedded data for a particular URL.\n\t */\n\tpublic _iGetDataForUrl(url:string):any\n\t{\n\t\treturn this._embeddedDataByUrl[url];\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether a replacement URL has been mapped to a particular URL.\n\t */\n\tpublic _iHasMappingForUrl(url:string):boolean\n\t{\n\t\treturn this._remappedUrls.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns new (replacement) URL for a particular original URL.\n\t */\n\tpublic _iGetRemappedUrl(originalUrl:string):string\n\t{\n\t\treturn this._remappedUrls[originalUrl];\n\t}\n}\n\nexport = LoaderContext;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport Loader\t\t\t\t\t= require(\"awayjs-core/lib/library/Loader\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:AssetBase;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():AssetBase\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "import LoaderContext\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport LoaderInfo\t\t\t\t= require(\"awayjs-core/lib/library/LoaderInfo\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport URLLoaderEvent\t\t\t= require(\"awayjs-core/lib/events/URLLoaderEvent\");\nimport LoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport Image2DParser\t\t\t= require(\"awayjs-core/lib/parsers/Image2DParser\");\nimport ImageCubeParser\t\t\t= require(\"awayjs-core/lib/parsers/ImageCubeParser\");\nimport TextureAtlasParser\t\t= require(\"awayjs-core/lib/parsers/TextureAtlasParser\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport WaveAudioParser\t\t\t= require(\"awayjs-core/lib/parsers/WaveAudioParser\");\n\n\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n/**\n * Dispatched when an image asset dimensions are not a power of 2\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Loader can load any file format that away.supports (or for which a third-party parser\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\n * and for when the resource (or it's dependencies) have been loaded.\n *\n * The Loader will not make assets available in any other way than through the dispatched\n * events. To store assets and make them available at any point from any module in an application,\n * use the AssetLibrary to load and manage assets.\n *\n * @see away.library.AssetLibrary\n */\nclass Loader extends EventDispatcher\n{\n\tprivate _context:LoaderContext;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _uri:string;\n\tprivate _materialMode:number;\n\n\tprivate _errorHandlers:Array<(event:URLLoaderEvent) => boolean>;\n\tprivate _parseErrorHandlers:Array<(event:ParserEvent) => boolean>;\n\n\tprivate _stack:Array<ResourceDependency>;\n\tprivate _baseDependency:ResourceDependency;\n\tprivate _currentDependency:ResourceDependency;\n\tprivate _namespace:string;\n\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\n\tprivate _onLoadCompleteDelegate:(event:URLLoaderEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\n\t// Image parser only parser that is added by default, to save file size.\n\tprivate static _parsers:Array<any> = new Array<any>(Image2DParser, ImageCubeParser, TextureAtlasParser, WaveAudioParser);\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parser The parser class to enable.\n\t *\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parser)\n\t{\n\t\tif (Loader._parsers.indexOf(parser) < 0)\n\t\t\tLoader._parsers.push(parser);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * Loader can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parsers A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parsers:Array<Object>)\n\t{\n\t\tfor (var c:number = 0; c < parsers.length; c++)\n\t\t\tLoader.enableParser(parsers[ c ]);\n\t}\n\n\t/**\n\t * Returns the base dependency of the loader\n\t */\n\tpublic get baseDependency():ResourceDependency\n\t{\n\t\treturn this._baseDependency;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * Create a new ResourceLoadSession object.\n\t */\n\tconstructor(materialMode:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = materialMode;\n\n\t\tthis._stack = new Array<ResourceDependency>();\n\t\tthis._errorHandlers = new Array<(event:URLLoaderEvent) => boolean>();\n\t\tthis._parseErrorHandlers = new Array<(event:ParserEvent) => boolean>();\n\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t\tthis._onLoadCompleteDelegate = (event:URLLoaderEvent) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n\t */\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\n\t\tthis._context = context;\n\t\tthis._namespace = ns;\n\n\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\n\t\tthis.retrieveDependency(this._baseDependency);\n\t}\n\n\t/**\n\t * Loads a resource from already loaded data.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n\t */\n\tpublic loadData(data:any, id:string, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._uri = id;\n\t\tthis._context = context;\n\t\tthis._namespace = ns;\n\n\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\n\t\tthis.retrieveDependency(this._baseDependency);\n\t}\n\n\t/**\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\n\t * stack when complete and continues on the top set.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveNext(parser:ParserBase = null)\n\t{\n\t\tif (this._currentDependency.dependencies.length) {\n\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\n\n\t\t\tthis._stack.push(this._currentDependency);\n\t\t\tthis.retrieveDependency(next);\n\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\n\n\t\t\tthis._currentDependency.parser._iResumeParsing();\n\t\t\tthis._stack.pop();\n\n\t\t} else if (this._stack.length) {\n\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\n\n\t\t\tthis._currentDependency = this._stack.pop();\n\n\t\t\tif (prev._iSuccess)\n\t\t\t\tprev.resolve();\n\n\t\t\tthis.retrieveNext(parser);\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.LOAD_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a single dependency.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveDependency(dependency:ResourceDependency)\n\t{\n\t\tvar data:any;\n\n\t\tif (this._context && this._context.materialMode != 0)\n\t\t\tthis._materialMode = this._context.materialMode;\n\n\t\tthis._currentDependency = dependency;\n\n\t\tdependency._iLoader = new URLLoader();\n\n\t\tthis.addEventListeners(dependency._iLoader);\n\n\t\t// Get already loaded (or mapped) data if available\n\t\tdata = dependency.data;\n\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\n\n\t\tif (data) {\n\t\t\tif (data.constructor === Function)\n\t\t\t\tdata = new data();\n\n\t\t\tdependency._iSetData(data);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// No need to parse. The parent parser is expecting this\n\t\t\t\t// to be raw data so it can be passed directly.\n\t\t\t\tdependency.resolve();\n\n\t\t\t\t// Move on to next dependency\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\tthis.parseDependency(dependency);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// Resolve URL and start loading\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// Always use binary for raw data loading\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t} else {\n\n\t\t\t\tif (!dependency.parser)\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\n\n\t\t\t\tif (dependency.parser) {\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\n\t\t\t\t} else {\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\n\t\t\t\t\t// file type check will determine format after load, and if\n\t\t\t\t\t// binary, a text load will have broken the file data.\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdependency._iLoader.load(dependency.request);\n\t\t}\n\t}\n\n\tprivate joinUrl(base:string, end:string):string\n\t{\n\t\tif (end.charAt(0) == '/' || end.charAt(0) == '\\\\')\n\t\t\tend = end.substr(1);\n\n\t\tif (end.charAt(0) == '.')\n\t\t\tend = end.substr(2);\n\n\t\tif (base.length == 0)\n\t\t\treturn end;\n\n\t\tif (base.charAt(base.length - 1) == '/' || base.charAt(base.length - 1) == '\\\\')\n\t\t\tbase = base.substr(0, base.length - 1);\n\n\t\treturn base.concat('/', end);\n\n\t}\n\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\n\t{\n\t\tvar scheme_re:RegExp;\n\t\tvar base:string;\n\t\tvar url:string = dependency.request.url;\n\n\t\t// Has the user re-mapped this URL?\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\n\t\t\treturn this._context._iGetRemappedUrl(url);\n\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\n\t\t// We will not try to resolve this since the user can probably be\n\t\t// thrusted to know this URL better than our automatic resolver. :)\n\t\tif (url == this._uri)\n\t\t\treturn url;\n\n\n\t\t// Absolute URL? Check if starts with slash or a URL\n\t\t// scheme definition (e.g. ftp://, http://, file://)\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\n\n\t\tif (url.charAt(0) == '/') {\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\n\t\t\t\treturn url;\n\t\t} else if (scheme_re.test(url)) {\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\n\t\t\tif (this._context && this._context.overrideFullURLs) {\n\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\n\t\t\t}\n\t\t}\n\n\t\t// Since not absolute, just get rid of base file name to find it's\n\t\t// folder and then concatenate dynamic URL\n\t\tif (this._context && this._context.dependencyBaseUrl) {\n\t\t\tbase = this._context.dependencyBaseUrl;\n\t\t\treturn this.joinUrl(base, url);\n\t\t} else {\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\n\t\t\treturn this.joinUrl(base, url);\n\t\t}\n\t}\n\n\tprivate retrieveParserDependencies()\n\t{\n\t\tif (!this._currentDependency)\n\t\t\treturn;\n\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies;\n\t\tvar i:number, len:number = parserDependancies.length;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\n\n\t\t// Since more dependencies might be added eventually, empty this\n\t\t// list so that the same dependency isn't retrieved more than once.\n\t\tparserDependancies.length = 0;\n\n\t\tthis._stack.push(this._currentDependency);\n\n\t\tthis.retrieveNext();\n\t}\n\n\tprivate resolveParserDependencies()\n\t{\n\t\tthis._currentDependency._iSuccess = true;\n\n\t\t// Retrieve any last dependencies remaining on this parser, or\n\t\t// if none exists, just move on.\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\n\t\t\tthis.retrieveParserDependencies();\n\t\telse\n\t\t\tthis.retrieveNext();\n\t}\n\n\t/**\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadError(event:URLLoaderEvent)\n\t{\n\t\tvar handled:boolean;\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\t\tvar loader:URLLoader = event.urlLoader;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when Loader does have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = this._errorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\n\n\t\t\t\tthis._currentDependency.resolveFailure();\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\t// Either this was the base file (last left in the stack) or\n\t\t\t\t// default behavior was prevented by the handlers, and hence\n\t\t\t\t// there is nothing more to do than clean up and bail.\n\t\t\t\tthis.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Error event was not handled by listeners directly on Loader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error();\n\t\t}\n\t}\n\n\t/**\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\n\t * @param event\n\t */\n\tprivate onParseError(event:ParserEvent)\n\t{\n\t\tvar handled:boolean;\n\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\n\t\tvar loader:URLLoader = <URLLoader>event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when Loader does\n\t\t\t// have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = this._parseErrorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\t\t\tthis.retrieveNext();\n\t\t} else {\n\t\t\t// Error event was not handled by listeners directly on Loader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error(event.message);\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Add loaded asset to list of assets retrieved as part\n\t\t// of the current dependency. This list will be inspected\n\t\t// by the parent parser when dependency is resolved\n\t\tif (this._currentDependency)\n\t\t\tthis._currentDependency.assets.push(event.asset);\n\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\n\n\t\tif (!this._currentDependency.suppresAssetEvents)\n\t\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate onReadyForDependencies(event:ParserEvent)\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tif (this._context && !this._context.includeDependencies)\n\t\t\tparser._iResumeParsing();\n\t\telse\n\t\t\tthis.retrieveParserDependencies();\n\t}\n\n\t/**\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:URLLoaderEvent)\n\t{\n\t\tvar loader:URLLoader = event.urlLoader;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\t// Resolve this dependency\n\t\tthis._currentDependency._iSetData(loader.data);\n\n\t\tif (this._currentDependency.retrieveAsRawData) {\n\t\t\t// No need to parse this data, which should be returned as is\n\t\t\tthis.resolveParserDependencies();\n\t\t} else {\n\t\t\tthis.parseDependency(this._currentDependency);\n\t\t}\n\t}\n\n\t/**\n\t * Called when parsing is complete.\n\t */\n\tprivate onParseComplete(event:ParserEvent):void\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\n\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\t/**\n\t * Called when an image is too large or it's dimensions are not a power of 2\n\t * @param event\n\t */\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate addEventListeners(loader:URLLoader)\n\t{\n\t\tloader.addEventListener(URLLoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.addEventListener(URLLoaderEvent.LOAD_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tprivate removeEventListeners(loader:URLLoader)\n\t{\n\t\tloader.removeEventListener(URLLoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.removeEventListener(URLLoaderEvent.LOAD_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis.dispose();\n\t}\n\n\tprivate dispose()\n\t{\n\t\tthis._errorHandlers = null;\n\t\tthis._parseErrorHandlers = null;\n\t\tthis._context = null;\n\t\tthis._stack = null;\n\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\n\n\t\tthis._currentDependency = null;\n\n\t}\n\n\t/**\n\t * @private\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\n\t * add error event listeners to the Loader instance. This system is used instead of\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\n\t * that if hasEventListener() returns true, it's client code that's listening for the\n\t * event. Secondly, functions added as error handler through this custom method are\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\n\t * whether they in turn had any client code listening for the event.) If no handlers\n\t * return true, the Loader knows that the event wasn't handled and will throw an RTE.\n\t */\n\n\tpublic _iAddParseErrorHandler(handler)\n\t{\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\n\t\t\tthis._parseErrorHandlers.push(handler);\n\t}\n\n\tpublic _iAddErrorHandler(handler)\n\t{\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\n\t\t\tthis._errorHandlers.push(handler);\n\t}\n\n\n\t/**\n\t * Guesses the parser to be used based on the file contents.\n\t * @param data The data to be parsed.\n\t * @param uri The url or id of the object to be parsed.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromData(data:any):ParserBase\n\t{\n\t\tvar len:number = Loader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--)\n\t\t\tif (Loader._parsers[i].supportsData(data))\n\t\t\t\treturn new Loader._parsers[i]();\n\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Initiates parsing of the loaded dependency.\n\t *\n\t * @param The dependency to be parsed.\n\t */\n\tprivate parseDependency(dependency:ResourceDependency):void\n\t{\n\t\tvar parser:ParserBase = dependency.parser;\n\n\t\t// If no parser has been defined, try to find one by letting\n\t\t// all plugged in parsers inspect the actual data.\n\t\tif (!parser)\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\n\n\t\tif (parser) {\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t\tif (dependency.request && dependency.request.url)\n\t\t\t\tparser._iFileName = dependency.request.url;\n\n\t\t\tparser.materialMode = this._materialMode;\n\n\t\t\tparser.parseAsync(dependency.data);\n\n\t\t} else {\n\t\t\tvar handled:boolean;\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\";\n\t\t\tvar event:ParserEvent = new ParserEvent(ParserEvent.PARSE_ERROR, message);\n\t\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\t\tthis.dispatchEvent(event);\n\t\t\t\thandled = true;\n\t\t\t} else {\n\t\t\t\t// TODO: Consider not doing this even when Loader does\n\t\t\t\t// have it's own LOAD_ERROR listener\n\t\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tif (!handled)\n\t\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t\t}\n\n\t\t\tif (handled) {\n\t\t\t\tthis.retrieveNext();\n\t\t\t} else {\n\t\t\t\t// Error event was not handled by listeners directly on Loader or\n\t\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Guesses the parser to be used based on the file extension.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromSuffix(url:string):ParserBase\n\t{\n\t\t// Get rid of query string if any and extract extension\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\n\n\t\tvar len:number = Loader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\n\t\t\tvar parserClass:any = Loader._parsers[i];\n\t\t\tif (parserClass.supportsType(fileExtension))\n\t\t\t\treturn new parserClass();\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport = Loader;",
    "import ConflictStrategyBase\t\t= require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nclass NumSuffixConflictStrategy extends ConflictStrategyBase\n{\n\tprivate _separator:string;\n\tprivate _next_suffix:Object;\n\n\tconstructor(separator:string = '.')\n\t{\n\t\tsuper();\n\n\t\tthis._separator = separator;\n\t\tthis._next_suffix = {};\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar orig:string;\n\t\tvar new_name:string;\n\t\tvar base:string;\n\t\tvar suffix:number;\n\n\t\torig = changedAsset.name;\n\n\t\tif (orig.indexOf(this._separator) >= 0) {\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\n\t\t\t// use entire name as base\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\n\n\t\t\tif (isNaN(suffix)) {\n\t\t\t\tbase = orig;\n\t\t\t\tsuffix = 0;\n\t\t\t}\n\n\t\t} else {\n\t\t\tbase = orig;\n\t\t\tsuffix = 0;\n\t\t}\n\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\n\n\t\t\tsuffix = this._next_suffix[base];\n\n\t\t}\n\n\t\t// Find the first suffixed name that does\n\t\t// not collide with other names.\n\t\tdo {\n\n\t\t\tsuffix++;\n\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\n\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\n\n\t\tthis._next_suffix[ base ] = suffix;\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\n\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new NumSuffixConflictStrategy(this._separator);\n\t}\n}\n\nexport = NumSuffixConflictStrategy;",
    "\nclass AudioChannel\n{\n\tpublic static maxChannels:number = 16;\n\n\tpublic static _channels:Array<AudioChannel> = new Array<AudioChannel>();\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\n\tprivate static _audioCtx;\n\tprivate _audioCtx;\n\n\tprivate _gainNode;\n\n\tprivate _audio:HTMLAudioElement;\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._gainNode.gain.value;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tthis._gainNode.gain.value = value;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audioCtx = AudioChannel._audioCtx || (AudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode.connect(this._audioCtx.destination);\n\n\t\tthis._audio = new Audio();\n\t\tthis._audio.onended = (event) => this._onEnded(event);\n\t\tthis._audio[\"crossOrigin\"] = \"anonymous\";\n\n\t\tvar source = this._audioCtx.createMediaElementSource(this._audio);\n\t\tsource.connect(this._gainNode);\n\t}\n\t\n\tpublic play(url:string, offset:number = 0, loop:boolean = false)\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._audio.src = url;\n\t\tthis._audio.loop = loop;\n\t\tthis._audio.currentTime = offset;\n\t\tthis._audio.play();\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\n\tprivate _onEnded(event)\n\t{\n\t\tthis.stop();\n\t}\n}\n\nexport = AudioChannel;",
    "import StreamingAudioChannel\t= require(\"awayjs-core/lib/managers/StreamingAudioChannel\");\nimport WebAudioChannel\t\t\t= require(\"awayjs-core/lib/managers/WebAudioChannel\");\nimport IAudioChannel\t\t\t= require(\"awayjs-core/lib/managers/IAudioChannel\");\nimport IAudioChannelClass\t\t= require(\"awayjs-core/lib/managers/IAudioChannelClass\");\n\nclass AudioManager\n{\n\tpublic static getChannel(byteLength:number):IAudioChannel\n\t{\n\t\t//choose best audio channel by bytelength\n\t\tvar channelClass:IAudioChannelClass = (byteLength > 50000)? StreamingAudioChannel : WebAudioChannel;\n\n\t\tvar i:number = 0;\n\t\twhile(channelClass._channels[i] && channelClass._channels[i].isPlaying())\n\t\t\ti++;\n\n\t\tif (i == channelClass.maxChannels) {\n\t\t\t//pick the oldest channel to reuse, ignoring looping channels\n\t\t\tvar channel:IAudioChannel;\n\t\t\tvar len:number = channelClass._channels.length;\n\t\t\tfor (var j:number = 0; j < len; j++) {\n\t\t\t\tchannel = channelClass._channels[j];\n\t\t\t\tif (!channel.isLooping() && !channel.isDecoding()) {\n\t\t\t\t\tchannelClass._channels.push(channelClass._channels.splice(j, 1)[0]);\n\t\t\t\t\tchannel.stop();\n\t\t\t\t\treturn channel;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//do not return channel until one is freed up\n\t\t\treturn null;\n\t\t}\n\n\t\treturn channelClass._channels[i] || (channelClass._channels[i] = new channelClass());\n\t}\n\n\n}\n\nexport = AudioManager;",
    "import ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\n\nclass EventAudioChannel\n{\n\tpublic static maxChannels:number = 4;\n\n\tpublic static _channels:Array<EventAudioChannel> = new Array<EventAudioChannel>();\n\n\tpublic static _base64Cache:Object = new Object();\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _volume:number;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\t\n\tprivate _audio:HTMLAudioElement;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime - this._startTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._audio.volume = this._volume;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audio = new Audio();\n\t\tthis._audio.ontimeupdate = (event) => this._onTimeUpdate(event);\n\t}\n\t\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false, id:number = 0)\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._audio.src = EventAudioChannel._base64Cache[id] || (EventAudioChannel._base64Cache[id] = ParserUtils.arrayBufferToBase64(buffer, \"audio/mp3\"));\n\t\tthis._audio.loop = this._isLooping;\n\n\t\tthis._audio.currentTime = offset;\n\t\tthis._audio.play();\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\n\tprivate _onTimeUpdate(event)\n\t{\n\t\t//TODO: more accurate end detection\n\t\tif (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\n\t\t\tthis.stop();\n\t}\n}\n\nexport = EventAudioChannel;",
    "\nclass StreamingAudioChannel\n{\n\tpublic static maxChannels:number = 4;\n\n\tpublic static _channels:Array<StreamingAudioChannel> = new Array<StreamingAudioChannel>();\n\n\tprivate _sourceOpenDelegate:(event) => void;\n\tprivate _updateEndDelegate:(event) => void;\n\tprivate _sourceBuffer:SourceBuffer;\n\tprivate _sourceDirty:boolean;\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _isQueuing:boolean;\n\tprivate _isOpening:boolean;\n\tprivate _buffer:ArrayBuffer;\n\tprivate _offset:number;\n\tprivate _volume:number;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\t\n\tprivate _audio:HTMLAudioElement;\n\t\n\tprivate _mediaSource:MediaSource;\n\tprivate _urlString:string;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime - this._startTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._audio.volume = this._volume;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._sourceOpenDelegate = (event) => this._sourceOpen(event);\n\t\tthis._updateEndDelegate = (event) => this._updateEnd(event);\n\n\t\tthis._audio = new Audio();\n\t\tthis._audio.ontimeupdate = (event) => this._onTimeUpdate(event);\n\n\t\tthis._updateSource();\n\n\t}\n\t\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false)\n\t{\n\t\tthis._isPlaying = true;\n\n\t\tif (this._isLooping || this._isLooping != loop) {\n\t\t\tthis._isLooping = loop;\n\t\t\tthis._sourceDirty = true;\n\t\t}\n\n\t\tif (this._sourceDirty)\n\t\t\tthis._updateSource();\n\n\t\tthis._buffer = buffer;\n\t\tthis._offset = offset;\n\n\t\tif (!this._isQueuing && !this._isOpening)\n\t\t\tthis._queueBuffer();\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\t\n\tprivate _sourceOpen(event)\n\t{\n\t\tthis._isOpening = false;\n\n\t\t//TODO: find out how in the name of all that is holy how this can be executed more than once on a MediaSource object\n\t\tif (this._mediaSource.activeSourceBuffers.length) {\n\t\t\tconsole.log(\"ERR: double sourceopen event called\")\n\t\t\treturn;\n\t\t}\n\n\t\tthis._sourceBuffer = this._mediaSource.addSourceBuffer('audio/mpeg');\n\t\tthis._sourceBuffer.addEventListener(\"updateend\", this._updateEndDelegate);\n\n\t\tif (this._isPlaying)\n\t\t\tthis._queueBuffer();\n\t}\n\n\tprivate _queueBuffer()\n\t{\n\t\tthis._isQueuing = true;\n\n\t\tthis._startTime = this._sourceBuffer.timestampOffset;\n\t\tthis._sourceBuffer.appendBuffer(this._buffer);\n\t}\n\n\tprivate _updateEnd(event)\n\t{\n\t\tthis._isQueuing = false;\n\n\t\tif (this._isLooping)\n\t\t\tthis._mediaSource.endOfStream();\n\n\t\tthis._duration = this._sourceBuffer.timestampOffset - this._startTime;\n\n\t\tthis._audio.currentTime = this._startTime + this._offset;\n\t\tthis._audio.play();\n\t}\n\n\tprivate _onTimeUpdate(event)\n\t{\n\t\t//TODO: more accurate end detection\n\t\tif (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\n\t\t\tthis.stop();\n\t}\n\n\tprivate _updateSource()\n\t{\n\t\tif(this._mediaSource)\n\t\t\tthis._disposeSource();\n\n\t\tthis._isQueuing = false;\n\t\tthis._isOpening = true;\n\n\t\tthis._mediaSource = new MediaSource();\n\t\tthis._mediaSource.addEventListener(\"sourceopen\", this._sourceOpenDelegate);\n\t\tthis._urlString = URL.createObjectURL(this._mediaSource);\n\t\tthis._audio.src = this._urlString;\n\t\tthis._audio.loop = this._isLooping;\n\n\t\tthis._sourceDirty = false;\n\t}\n\n\tprivate _disposeSource()\n\t{\n\t\tif (!this._isOpening) {\n\t\t\tif (this._sourceBuffer.timestampOffset)\n\t\t\t\tthis._sourceBuffer.remove(0, this._sourceBuffer.timestampOffset);\n\n\t\t\tthis._sourceBuffer.removeEventListener(\"updateend\", this._updateEndDelegate);\n\t\t\tthis._mediaSource.removeSourceBuffer(this._sourceBuffer);\n\t\t\tdelete this._sourceBuffer;\n\t\t\tthis._sourceBuffer = null;\n\t\t}\n\n\t\tthis._mediaSource.removeEventListener(\"sourceopen\", this._sourceOpenDelegate);\n\t\tURL.revokeObjectURL(this._urlString);\n\t\tdelete this._mediaSource;\n\t\tthis._mediaSource = null;\n\t}\n}\n\nexport = StreamingAudioChannel;",
    "\nclass WebAudioChannel\n{\n\tpublic static maxChannels:number = 64;\n\n\tpublic static _channels:Array<WebAudioChannel> = new Array<WebAudioChannel>();\n\n\tpublic static _decodeCache:Object = new Object();\n\tpublic static _errorCache:Object = new Object();\n\n\tprivate static _audioCtx;\n\tprivate _audioCtx;\n\n\tprivate _gainNode;\n\tprivate _source;\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _isDecoding:boolean = false;\n\tprivate _currentTime:number;\n\tprivate _id:number;\n\tprivate _volume:number = 1;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\n\tprivate _onEndedDelegate : (event:any) => void;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audioCtx.currentTime - this._startTime;\n\t}\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._gainNode.gain.value = this._volume;\n\t}\n\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn this._isDecoding;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audioCtx = WebAudioChannel._audioCtx || (WebAudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode.gain.value = this._volume;\n\n\t\tthis._gainNode.connect(this._audioCtx.destination);\n\n\t\tthis._onEndedDelegate = (event) => this._onEnded(event);\n\t}\n\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false, id:number = 0)\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._currentTime = offset;\n\n\t\tthis._id = id;\n\n\t\tthis._isDecoding = true;\n\n\t\t//fast path for short sounds\n\t\tif (WebAudioChannel._decodeCache[id])\n\t\t\tthis._onDecodeComplete(WebAudioChannel._decodeCache[id]);\n\t\telse if (!WebAudioChannel._errorCache[id])\n\t\t\tthis._audioCtx.decodeAudioData(buffer, (buffer) => this._onDecodeComplete(buffer), (event) => this._onError(event));\n\t\telse\n\t\t\tthis.stop();\n\t}\n\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t\tthis._isDecoding = false;\n\n\t\tif (this._source)\n\t\t\tthis._disposeSource();\n\t}\n\n\tpublic _onDecodeComplete(buffer)\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isDecoding = false;\n\n\t\t//if (buffer.duration < 2) //cache all buffers?\n\t\tWebAudioChannel._decodeCache[this._id] = buffer;\n\n\t\tif (this._source)\n\t\t\tthis._disposeSource();\n\n\t\tthis._source = this._audioCtx.createBufferSource();\n\n\t\tthis._source.loop = this._isLooping;\n\t\tthis._source.connect(this._gainNode);\n\n\t\tthis._source.buffer = buffer;\n\t\tthis._duration = buffer.duration;\n\n\t\tthis._startTime = this._audioCtx.currentTime - this._currentTime;\n\t\tthis._source.onended = this._onEndedDelegate;\n\t\ttry {\n\t\t\tthis._source.start(this._audioCtx.currentTime, this._currentTime);\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error starting audio: \" + error);\n\t\t\tthis._disposeSource();\n\t\t}\n\t}\n\n\tpublic _onError(event)\n\t{\n\t\tconsole.log(\"Error with decoding audio data\");\n\t\tWebAudioChannel._errorCache[this._id] = true;\n\t\tthis.stop();\n\t}\n\n\tprivate _onEnded(event):void\n\t{\n\t\tthis.stop();\n\t}\n\n\tprivate _disposeSource()\n\t{\n\t\t//clean up\n\t\tthis._source.stop(this._audioCtx.currentTime);\n\t\tthis._source.onended = null;\n\t\tthis._source.disconnect();\n\t\tdelete this._source.buffer;\n\t\tdelete this._source;\n\t\tthis._source = null;\n\t}\n}\n\nexport = WebAudioChannel;",
    "class CrossDomainPolicy\n{\n\tpublic static ANONYMOUS:string = 'anonymous';\n\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\n}\n\nexport = CrossDomainPolicy;\n",
    "class URLLoaderDataFormat\n{\n\t/**\n\t * TEXT\n\t * @type {string}\n\t */\n\tpublic static TEXT:string = \"text\";\n\n\t/**\n\t * Variables / Value Pairs\n\t * @type {string}\n\t */\n\tpublic static VARIABLES:string = \"variables\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BLOB:string = \"blob\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BINARY:string = \"binary\";\n}\n\nexport = URLLoaderDataFormat;",
    "import URLLoaderDataFormat\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\nimport URLVariables\t\t\t\t\t= require(\"awayjs-core/lib/net/URLVariables\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport URLLoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/URLLoaderEvent\");\n\n/**\n * The URLLoader is used to load a single file, as part of a resource.\n *\n * While URLLoader can be used directly, e.g. to create a third-party asset\n * management system, it's recommended to use any of the classes Loader3D, Loader\n * and AssetLibrary instead in most cases.\n *\n * @see Loader\n * @see away.library.AssetLibrary\n */\nclass URLLoader extends EventDispatcher\n{\n\tprivate _XHR:XMLHttpRequest;\n\tprivate _status:number;\n\tprivate _bytesLoaded:number = 0;\n\tprivate _bytesTotal:number = 0;\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\n\tprivate _loadError:boolean = false;\n\n\tprivate _request:URLRequest;\n\tprivate _data:any;\n\n\tprivate _loadStartEvent:URLLoaderEvent;\n\tprivate _loadErrorEvent:URLLoaderEvent;\n\tprivate _loadCompleteEvent:URLLoaderEvent;\n\tprivate _progressEvent:URLLoaderEvent;\n\tprivate _statusEvent:URLLoaderEvent;\n\n\t/**\n\t * Creates a new URLLoader object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get url():string\n\t{\n\n\t\treturn this._request? this._request.url : '';\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\n\t/**\n\t *\n\t * URLLoaderDataFormat.BINARY\n\t * URLLoaderDataFormat.TEXT\n\t * URLLoaderDataFormat.VARIABLES\n\t *\n\t * @param format\n\t */\n\tpublic set dataFormat(format:string)\n\t{\n\t\tthis._dataFormat = format;\n\t}\n\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesLoaded():number\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesTotal():number\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * Load a resource from a file.\n\t *\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\n\t */\n\tpublic load(request:URLRequest):void\n\t{\n\t\tthis._request = request;\n\n\t\tthis.initXHR();\n\n\t\tif (request.method === URLRequestMethod.POST)\n\t\t\tthis.postRequest(request);\n\t\telse\n\t\t\tthis.getRequest(request);\n\t}\n\n\tpublic isSupported():boolean {\n\t\treturn window != null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic close():void\n\t{\n\t\tthis._XHR.abort();\n\n\t\tthis.disposeXHR();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tif (this._XHR)\n\t\t\tthis._XHR.abort();\n\n\t\tthis.disposeXHR();\n\t}\n\n\t/**\n\t *\n\t * @param xhr\n\t * @param responseType\n\t */\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\n\t{\n\t\tswitch (responseType) {\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\txhr.responseType = responseType;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\txhr.responseType = '';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate getRequest(request:URLRequest):void\n\t{\n\t\ttry {\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\t\t\tthis._XHR.send(); // No data to send\n\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate postRequest(request:URLRequest):void\n\t{\n\t\tthis._loadError = false;\n\n\t\tthis._XHR.open(request.method, request.url, request.async);\n\n\t\tif (request.data != null) {\n\t\t\tif (request.data instanceof URLVariables) {\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\n\n\t\t\t\ttry {\n\t\t\t\t\tthis._XHR.responseType = 'text';\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\n\t\t\t\tif (request.data)\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\n\t\t\t\telse\n\t\t\t\t\tthis._XHR.send(); // no data to send\n\t\t\t}\n\t\t} else {\n\t\t\tthis._XHR.send(); // No data to send\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * @param error {XMLHttpRequestException}\n\t */\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\n\t{\n\t\tswitch (error.code) {\n\n\t\t/******************************************************************************************************************************************************************************************************\n\t\t *\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\n\t\t *\n\t\t ******************************************************************************************************************************************************************************************************/\n\n\t\t\tcase 101:\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initXHR()\n\t{\n\t\tif (!this._XHR) {\n\t\t\tthis._XHR = new XMLHttpRequest();\n\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate disposeXHR()\n\t{\n\t\tif (this._XHR !== null) {\n\t\t\tthis._XHR.onloadstart = null;\n\t\t\tthis._XHR.onprogress = null;\n\t\t\tthis._XHR.onabort = null;\n\t\t\tthis._XHR.onerror = null;\n\t\t\tthis._XHR.onload = null;\n\t\t\tthis._XHR.ontimeout = null;\n\t\t\tthis._XHR.onloadend = null;\n\t\t\tthis._XHR = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decodeURLVariables(source:string):Object\n\t{\n\t\tvar result:Object = new Object();\n\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\n\t\treturn result;\n\t}\n\n\t// XMLHttpRequest - Event Handlers\n\n\t/**\n\t * When XHR state changes\n\t * @param event\n\t */\n\tprivate onReadyStateChange(event:Event)\n\t{\n\t\tif (this._XHR.readyState == 4) {\n\t\t\tthis._status = this._XHR.status;\n\t\t\tif (this._status == 404) {\n\t\t\t\tthis._loadError = true;\n\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent || (this._loadErrorEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_ERROR, this)));\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(this._statusEvent || (this._statusEvent = new URLLoaderEvent(URLLoaderEvent.HTTP_STATUS, this)));\n\t\t}\n\t}\n\n\t/**\n\t * When the request has completed, regardless of whether or not it was successful.\n\t * @param event\n\t */\n\tprivate onLoadEnd(event:ProgressEvent)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\t}\n\n\t/**\n\t * When the author specified timeout has passed before the request could complete.\n\t * @param event\n\t */\n\tprivate onTimeOut(event:Event)\n\t{\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\n\t}\n\n\t/**\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t * @param event\n\t */\n\tprivate onAbort(event:UIEvent)\n\t{\n\t\t// TODO: investigate whether this needs to be an IOError\n\t}\n\n\t/**\n\t * While loading and sending data.\n\t * @param event\n\t */\n\tprivate onProgress(event:ProgressEvent)\n\t{\n\t\tthis._bytesTotal = event.total;\n\t\tthis._bytesLoaded = event.loaded;\n\n\t\tthis.dispatchEvent(this._progressEvent || (this._progressEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_PROGRESS, this)));\n\t}\n\n\t/**\n\t * When the request starts.\n\t * @param event\n\t */\n\tprivate onLoadStart(event:ProgressEvent)\n\t{\n\t\tthis.dispatchEvent(this._loadStartEvent || (this._loadStartEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_START, this)));\n\t}\n\n\t/**\n\t * When the request has successfully completed.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\n\t\tswitch (this._dataFormat) {\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\tthis._data = this._XHR.response;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.dispatchEvent(this._loadCompleteEvent || (this._loadCompleteEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_COMPLETE, this)));\n\t}\n\n\t/**\n\t * When the request has failed. ( due to network issues ).\n\t * @param event\n\t */\n\tprivate onLoadError(event:Event)\n\t{\n\t\tthis._loadError = true;\n\n\t\tthis.dispatchEvent(this._loadErrorEvent || (this._loadErrorEvent  = new URLLoaderEvent(URLLoaderEvent.LOAD_ERROR, this)));\n\t}\n}\n\nexport = URLLoader;",
    "class URLRequestMethod\n{\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static POST:string = 'POST';\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static GET:string = 'GET';\n}\n\nexport = URLRequestMethod;",
    "import URLRequestMethod\t\t\t\t= require(\"awayjs-core/lib/net/URLRequestMethod\");\n\nclass URLRequest\n{\n\t/*\n\t * The MIME content type of the content in the the data property.\n\t * @type {string}\n\t */\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\n\n\t/**\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\n\t *\n\t */\n\tpublic data:any;\n\n\t/**\n\t *\n\t * away.net.URLRequestMethod.GET\n\t * away.net.URLRequestMethod.POST\n\t *\n\t * @type {string}\n\t */\n\tpublic method:string = URLRequestMethod.GET;\n\n\t/**\n\t * Use asynchronous XMLHttpRequest\n\t * @type {boolean}\n\t */\n\tpublic async:boolean = true;\n\n\t/**\n\t *\n\t */\n\tprivate _url:string;\n\n\t/**\n\n\t * @param url\n\t */\n\tconstructor(url:string = null)\n\t{\n\t\tthis._url = url;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set url(value:string)\n\t{\n\t\tthis._url = value;\n\t}\n\n\t/**\n\t * dispose\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.data = null;\n\t\tthis._url = null;\n\t}\n}\n\nexport = URLRequest;",
    "class URLVariables\n{\n\tprivate _variables:Object = new Object();\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tconstructor(source:string = null)\n\t{\n\t\tif (source !== null)\n\t\t\tthis.decode(source);\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decode(source:string):void\n\t{\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic toString():string\n\t{\n\t\treturn '';\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get variables():Object\n\t{\n\t\treturn this._variables;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get formData():FormData\n\t{\n\t\tvar fd:FormData = new FormData();\n\n\t\tfor (var s in this._variables)\n\t\t\tfd.append(s, this._variables[s]);\n\n\t\treturn fd;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic set variables(obj:Object)\n\t{\n\t\tthis._variables = obj;\n\t}\n}\n\nexport = URLVariables;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\n/**\n * Image2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nclass Image2DParser extends ParserBase\n{\n\tprivate _startedParsing:boolean;\n\tprivate _doneParsing:boolean;\n\tprivate _loadingImage:boolean;\n\tprivate _htmlImageElement:HTMLImageElement;\n\n\t/**\n\t * Creates a new Image2DParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\n\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\n\t\tif (data  instanceof HTMLImageElement)\n\t\t\treturn true;\n\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tba.position = 0;\n\n\t\tif (ba.readUnsignedShort() == 0xd8ff)\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\n\n\t\tba.position = 0;\n\t\tif (ba.readShort() == 0x424D)\n\t\t\treturn true; // BMP\n\n\t\tba.position = 1;\n\t\tif (ba.readUTFBytes(3) == 'PNG')\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'ATF')\n\t\t\treturn true;\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tvar asset:BitmapImage2D;\n\t\tvar sizeError:boolean = false;\n\n\t\tif (this._loadingImage) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else if (this._htmlImageElement) {\n\t\t\t//if (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t//}\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\n\t\t\tvar htmlImageElement:HTMLImageElement = <HTMLImageElement> this.data;\n\t\t\t//if (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\n\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement, false);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t//} else {\n\t\t\t//\tsizeError = true;\n\t\t\t//}\n\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\n\n\t\t\tvar ba:ByteArray = this.data;\n\t\t\tba.position = 0;\n\t\t\tthis._htmlImageElement = ParserUtils.byteArrayToImage(this.data);\n\n\t\t\tif (!this._htmlImageElement.complete) {\n\t\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\t\tthis._loadingImage = true;\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t\t//if (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t//} else {\n\t\t\t//\tsizeError = true;\n\t\t\t//\n\t\t\t//}\n\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\n\n\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\n\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\n\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\tthis._loadingImage = true;\n\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\n\t\t{\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\n\t\t}\n\n\t\tthis._pContent = asset;\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tpublic onLoadComplete(event)\n\t{\n\t\tthis._loadingImage = false;\n\t}\n}\n\nexport = Image2DParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport BitmapImageCube\t\t\t= require(\"awayjs-core/lib/image/BitmapImageCube\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\n\n/**\n * ImageCubeParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nclass ImageCubeParser extends ParserBase\n{\n\tprivate static posX:string = 'posX';\n\tprivate static negX:string = 'negX';\n\tprivate static posY:string = 'posY';\n\tprivate static negY:string = 'negY';\n\tprivate static posZ:string = 'posZ';\n\tprivate static negZ:string = 'negZ';\n\n\tprivate _imgDependencyDictionary:Object;\n\n\t/**\n\t * Creates a new ImageCubeParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"cube\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar obj = JSON.parse(data);\n\n\t\t\tif (obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\n\t\t\tvar asset:BitmapImageCube = new BitmapImageCube(this._getBitmapImage2D(ImageCubeParser.posX).width);\n\n\t\t\tasset.draw(BitmapImageCube.posX, this._getBitmapImage2D(ImageCubeParser.posX));\n\t\t\tasset.draw(BitmapImageCube.negX, this._getBitmapImage2D(ImageCubeParser.negX));\n\t\t\tasset.draw(BitmapImageCube.posY, this._getBitmapImage2D(ImageCubeParser.posY));\n\t\t\tasset.draw(BitmapImageCube.negY, this._getBitmapImage2D(ImageCubeParser.negY));\n\t\t\tasset.draw(BitmapImageCube.posZ, this._getBitmapImage2D(ImageCubeParser.posZ));\n\t\t\tasset.draw(BitmapImageCube.negZ, this._getBitmapImage2D(ImageCubeParser.negZ));\n\n\t\t\t//clear dictionary\n\t\t\tthis._imgDependencyDictionary = null;\n\n\t\t\tasset.name = this._iFileName;\n\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\ttry {\n\t\t\tvar json:any = JSON.parse(this.data);\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\n\t\t\tvar rec:any;\n\n\t\t\tif (data.length != 6)\n\t\t\t\tthis._pDieWithError('ImageCubeParser: Error - cube texture should have exactly 6 images');\n\n\t\t\tif (json) {\n\t\t\t\tthis._imgDependencyDictionary = new Object();\n\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\n\t\t\t\t\trec = data[c];\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\n\t\t\t\t}\n\n\t\t\t\tif (!this._validateCubeData()) {\n\n\t\t\t\t\tthis._pDieWithError(\"ImageCubeParser: JSON data error - cubes require id of:   \\n\" + ImageCubeParser.posX + ', ' + ImageCubeParser.negX + ',  \\n' + ImageCubeParser.posY + ', ' + ImageCubeParser.negY + ',  \\n' + ImageCubeParser.posZ + ', ' + ImageCubeParser.negZ);\n\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate _validateCubeData():boolean\n\t{\n\t\treturn  ( this._imgDependencyDictionary[ ImageCubeParser.posX ] != null && this._imgDependencyDictionary[ ImageCubeParser.negX ] != null && this._imgDependencyDictionary[ ImageCubeParser.posY ] != null && this._imgDependencyDictionary[ ImageCubeParser.negY ] != null && this._imgDependencyDictionary[ ImageCubeParser.posZ ] != null && this._imgDependencyDictionary[ ImageCubeParser.negZ ] != null );\n\t}\n\n\tprivate _getBitmapImage2D(name:string):BitmapImage2D\n\t{\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\n\n\t\tif (dependency)\n\t\t\treturn <BitmapImage2D> dependency.assets[0];\n\n\t\treturn null;\n\t}\n\n}\n\nexport = ImageCubeParser;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ParserEvent\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\nimport Timer\t\t\t\t\t= require(\"awayjs-core/lib/utils/Timer\");\nimport getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\n/**\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\n * supported by away.\n *\n * If used by <code>Loader</code> to automatically determine the parser type, two public static methods should\n * be implemented, with the following signatures:\n *\n * <code>public static supportsType(extension : string) : boolean</code>\n * Indicates whether or not a given file extension is supported by the parser.\n *\n * <code>public static supportsData(data : *) : boolean</code>\n * Tests whether a data block can be parsed by the parser.\n *\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\n * handle regardless of whether the object was loaded or not.\n *\n * @see Loader\n */\nclass ParserBase extends EventDispatcher\n{\n\tpublic _isParsing:boolean;\n\tpublic _iFileName:string;\n\tprivate _dataFormat:string;\n\tprivate _data:any;\n\tprivate _frameLimit:number;\n\tprivate _lastFrameTime:number;\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\n\tpublic _pContent:IAsset;\n\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// Needs to be implemented in all Parsers (\n\t//<code>public static supportsType(extension : string) : boolean</code>\n\t//* Indicates whether or not a given file extension is supported by the parser.\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate _dependencies:Array<ResourceDependency>;\n\tprivate _parsingPaused:boolean;\n\tprivate _parsingComplete:boolean;\n\tprivate _parsingFailure:boolean;\n\tprivate _timer:Timer;\n\tprivate _materialMode:number;\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\n\t */\n\tpublic static PARSING_DONE:boolean = true;\n\t/* Protected */\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\n\t */\n\tpublic static MORE_TO_PARSE:boolean = false;\n\t/* Protected */\n\n\n\tpublic get content():IAsset\n\t{\n\t\treturn this._pContent;\n\t}\n\n\t/**\n\t * Creates a new ParserBase object\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\n\t *\n\t * @see away.loading.parsers.ParserDataFormat\n\t */\n\tconstructor(format:string)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = 0;\n\t\tthis._dataFormat = format;\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\n\t}\n\n\t/**\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\n\t */\n\n\tpublic isBitmapImage2DValid(bitmapImage2D:BitmapImage2D):boolean\n\t{\n\t\tvar isValid:boolean = ImageUtils.isImage2DValid(bitmapImage2D);\n\n\t\tif (!isValid) {\n\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tpublic set parsingFailure(b:boolean)\n\t{\n\t\tthis._parsingFailure = b;\n\t}\n\n\tpublic get parsingFailure():boolean\n\t{\n\t\treturn this._parsingFailure;\n\t}\n\n\tpublic get parsingPaused():boolean\n\t{\n\t\treturn this._parsingPaused;\n\t}\n\n\tpublic get parsingComplete():boolean\n\t{\n\t\treturn this._parsingComplete;\n\t}\n\n\tpublic set materialMode(newMaterialMode:number)\n\t{\n\t\tthis._materialMode = newMaterialMode;\n\t}\n\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\n\t */\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\n\t * next frame.\n\t *\n\t * @param data The untyped data object in which the loaded data resides.\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\n\t * actual time spent on a frame can exceed this number since time-checks can\n\t * only be performed between logical sections of the parsing procedure.\n\t */\n\tpublic parseAsync(data:any, frameLimit:number = 30)\n\t{\n\t\tthis._data = data;\n\t\tthis._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\n\t * dependency should be a member of the dependencies property.\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\treturn asset.name;\n\t}\n\n\tpublic _iResumeParsing()\n\t{\n\t\tthis._parsingPaused = false;\n\n\t\tif (this._timer)\n\t\t\tthis._timer.start();\n\n\t\t//get started!\n\t\tif (!this._isParsing)\n\t\t\tthis._pOnInterval();\n\t}\n\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null)\n\t{\n\t\tvar type_event:string;\n\t\tvar type_name:string;\n\n\t\tif (name != null)\n\t\t\tasset.name = name;\n\n\t\t// If the asset has no name, give it\n\t\t// a per-type default name.\n\t\tif (!asset.name)\n\t\t\tasset.name = asset.assetType;\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\n\t}\n\n\t/**\n\t * Parse the next block of data.\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pDieWithError(message:string = 'Unknown parsing error')\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t\tthis._timer = null;\n\t\t}\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t}\n\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false, sub_id:number=0):ResourceDependency\n\t{\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents, sub_id);\n\t\tthis._dependencies.push(dependency);\n\n\t\treturn dependency;\n\t}\n\n\tpublic _pPauseAndRetrieveDependencies()\n\t{\n\t\tthis._pPauseParsing();\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\n\t}\n\n\tpublic _pPauseParsing()\n\t{\n\t\tif (this._timer)\n\t\t\tthis._timer.stop();\n\n\t\tthis._parsingPaused = true;\n\t}\n\n\t/**\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\n\t */\n\tpublic _pHasTime():boolean\n\t{\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\n\t}\n\n\t/**\n\t * Called when the parsing pause interval has passed and parsing can proceed.\n\t */\n\tpublic _pOnInterval(event:TimerEvent = null)\n\t{\n\t\tthis._lastFrameTime = getTimer();\n\t\tthis._isParsing = true;\n\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\n\t\t\tthis._pFinishParsing();\n\n\t\tthis._isParsing = false;\n\t}\n\n\t/**\n\t * Initializes the parsing of data.\n\t * @param frameLimit The maximum duration of a parsing session.\n\t */\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tthis._frameLimit = frameLimit;\n\t\tthis._timer = new Timer(this._frameLimit, 0);\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\tthis._timer.start();\n\n\t\t//get started!\n\t\tthis._pOnInterval();\n\t}\n\n\t/**\n\t * Finish parsing the data.\n\t */\n\tpublic _pFinishParsing()\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t}\n\n\t\tthis._timer = null;\n\t\tthis._parsingComplete = true;\n\t\tthis._isParsing = false;\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetTextData():string\n\t{\n\t\treturn ParserUtils.toString(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {ByteArray}\n\t * @private\n\t */\n\tpublic _pGetByteData():ByteArray\n\t{\n\t\treturn ParserUtils.toByteArray(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {any}\n\t * @private\n\t */\n\tpublic _pGetData():any\n\t{\n\t\treturn this._data;\n\t}\n\n}\n\nexport = ParserBase;",
    "/**\n * An enumeration providing values to describe the data format of parsed data.\n */\nclass ParserDataFormat\n{\n\t/**\n\t * Describes the format of a binary file.\n\t */\n\tpublic static BINARY:string = \"binary\";\n\n\t/**\n\t * Describes the format of a plain text file.\n\t */\n\tpublic static PLAIN_TEXT:string = \"plainText\";\n\n\t/**\n\t * Describes the format of an image file\n\t */\n\tpublic static IMAGE:string = \"image\";\n\n}\n\nexport = ParserDataFormat;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport WaveAudio\t\t\t\t= require(\"awayjs-core/lib/audio/WaveAudio\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass ParserUtils\n{\n\tpublic static arrayBufferToBase64(data:ArrayBuffer, mimeType:string)\n\t{\n\t\tvar byteStr:string = '';\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\n\t\tvar len:number = bytes.byteLength;\n\n\t\tfor (var i = 0; i < len; i++)\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\n\n\t\tvar base64Image:string = window.btoa(byteStr);\n\t\treturn 'data:' + mimeType + ';base64,' + base64Image;\n\t}\n\n\tpublic static arrayBufferToAudio(data:ArrayBuffer, fileType:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'audio/' + fileType);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an ArrayBuffer to a base64 string\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\tpublic static byteArrayToAudio(data:ByteArray, filetype:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'audio/' + filetype);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an Blob to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a Blob\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static blobToImage(data:Blob):HTMLImageElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an Blob to audio - returns an HTMLAudioElement\n\t *\n\t * @param audio data as a Blob\n\t *\n\t * @return HTMLAudioElement\n\t *\n\t */\n\tpublic static blobToAudio(data:Blob):HTMLAudioElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static imageToBitmapImage2D(img:HTMLImageElement, powerOfTwo:boolean = true):BitmapImage2D\n\t{\n\t\tvar bitmapData:BitmapImage2D = new BitmapImage2D(img.width, img.height, true, null, powerOfTwo);\n\t\tbitmapData.draw(img);\n\n\t\treturn bitmapData;\n\t}\n\n\t/**\n\t * Returns a object as ByteArray, if possible.\n\t *\n\t * @param data The object to return as ByteArray\n\t *\n\t * @return The ByteArray or null\n\t *\n\t */\n\tpublic static toByteArray(data:any):ByteArray\n\t{\n\t\tvar b:ByteArray = new ByteArray();\n\t\tb.setArrayBuffer(data);\n\t\treturn b;\n\t}\n\n\t/**\n\t * Returns a object as String, if possible.\n\t *\n\t * @param data The object to return as String\n\t * @param length The length of the returned String\n\t *\n\t * @return The String or null\n\t *\n\t */\n\tpublic static toString(data:any, length:number = 0):string\n\t{\n\n\t\tif (typeof data === 'string') {\n\t\t\tvar s:string = <string> data;\n\n\t\t\tif (s['substr'] != null)\n\t\t\t\treturn s.substr(0, s.length);\n\t\t}\n\n\t\tif (data instanceof ByteArray) {\n\t\t\tvar ba:ByteArray = <ByteArray> data;\n\t\t\tba.position = 0;\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\n\t\t}\n\n\t\treturn null;\n\n\t\t/*\n\t\t var ba:ByteArray;\n\n\t\t length ||= uint.MAX_VALUE;\n\n\t\t if (data is String)\n\t\t return String(data).substr(0, length);\n\n\t\t ba = toByteArray(data);\n\t\t if (ba) {\n\t\t ba.position = 0;\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\n\t\t }\n\n\t\t return null;\n\n\t\t */\n\n\t}\n}\n\nexport = ParserUtils;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoader\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\n/**\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\n * required by a parser, used by ResourceLoadSession.\n *\n */\nclass ResourceDependency\n{\n\tprivate _id:string;\n\tprivate _sub_id:number;\n\n\tprivate _request:URLRequest;\n\tprivate _assets:Array<IAsset>;\n\tprivate _parser:ParserBase;\n\tprivate _parentParser:ParserBase;\n\tprivate _data:any;\n\tprivate _retrieveAsRawData:boolean;\n\tprivate _suppressAssetEvents:boolean;\n\tprivate _dependencies:Array<ResourceDependency>;\n\n\tpublic _iLoader:URLLoader;\n\tpublic _iSuccess:boolean;\n\n\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false, sub_id:number=0)\n\t{\n\t\tthis._id = id;\n\t\tthis._sub_id = sub_id;\n\t\tthis._request = request;\n\t\tthis._data = data;\n\t\tthis._parser = parser;\n\t\tthis._parentParser = parentParser;\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\n\t\tthis._assets = new Array<IAsset>();\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get id():string\n\t{\n\t\treturn this._id;\n\t}\n\tpublic get sub_id():number\n\t{\n\t\treturn this._sub_id;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get request():URLRequest\n\t{\n\t\treturn this._request;\n\t}\n\n\t/**\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parser():ParserBase\n\t{\n\t\treturn this._parser;\n\t}\n\n\t/**\n\t * The parser which is dependent on this ResourceDependency object.\n\t */\n\tpublic get parentParser():ParserBase\n\t{\n\t\treturn this._parentParser;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get retrieveAsRawData():boolean\n\t{\n\t\treturn this._retrieveAsRawData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get suppresAssetEvents():boolean\n\t{\n\t\treturn this._suppressAssetEvents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * @private\n\t * Method to set data after having already created the dependency object, e.g. after load.\n\t */\n\tpublic _iSetData(data:any):void\n\t{\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t */\n\tpublic _iSetParser(parser:ParserBase):void\n\t{\n\t\tthis._parser = parser;\n\t}\n\n\t/**\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\n\t * to its intended parent. The dependency should be a member of the dependencies property.\n\t */\n\tpublic resolve():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependency(this);\n\t}\n\n\t/**\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\n\t */\n\tpublic resolveFailure():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\n\t}\n\n\t/**\n\t * Resolve the dependencies name\n\t */\n\tpublic resolveName(asset:IAsset):string\n\t{\n\t\tif (this._parentParser)\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\n\n\t\treturn asset.name;\n\t}\n}\n\nexport = ResourceDependency;",
    "import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport BitmapImage2D\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport XmlUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/XmlUtils\");\n\n/**\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nclass TextureAtlasParser extends ParserBase\n{\n\tprivate _doc:Node;\n\tprivate _imagePath:string;\n\tprivate _imageData:BitmapImage2D;\n\tprivate _subTextureNodes:NodeList;\n\tprivate _parseState:number = 0;\n\n\t/**\n\t * Creates a new TextureAtlasParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"xml\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar content:string = ParserUtils.toString(data);\n\t\t\tif(content.indexOf(\"TextureAtlas\") != -1 || content.indexOf(\"textureatlas\") != -1)\n\t\t\t\treturn true;\n\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif(resourceDependency.assets.length) {\n\t\t\tthis._imageData = <BitmapImage2D> resourceDependency.assets[0];\n\t\t\tthis._pFinalizeAsset(this._imageData);\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_SUBTEXTURES;\n\t\t} else {\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar nodes:NodeList;\n\n\t\tswitch(this._parseState) {\n\t\t\tcase TextureAtlasParserState.PARSE_XML:\n\t\t\t\ttry {\n\t\t\t\t\tthis._doc = XmlUtils.getChildrenWithTag(XmlUtils.strToXml(this._pGetTextData()), \"TextureAtlas\")[0];\n\n\t\t\t\t\tthis._imagePath = XmlUtils.readAttributeValue(this._doc, \"imagePath\");\n\n\t\t\t\t\tthis._subTextureNodes = XmlUtils.getChildrenWithTag(this._doc, \"SubTexture\");\n\n\t\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_IMAGE;\n\n\t\t\t\t} catch(Error) {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_IMAGE:\n\t\t\t\tif (this._imagePath){\n\t\t\t\t\tthis._pAddDependency(this._imagePath, new URLRequest(this._imagePath));\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t\t} else {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_SUBTEXTURES:\n\t\t\t\tvar sampler:Sampler2D;\n\t\t\t\tvar element:Node;\n\t\t\t\tvar x:string;\n\t\t\t\tvar y:string;\n\t\t\t\tvar width:string;\n\t\t\t\tvar height:string;\n\t\t\t\tvar len:number = this._subTextureNodes.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\telement = this._subTextureNodes[i];\n\t\t\t\t\tsampler = new Sampler2D();\n\n\t\t\t\t\t//setup subtexture rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"x\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"y\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"width\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"height\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tsampler.imageRect = new Rectangle(parseInt(x)/this._imageData.width, parseInt(y)/this._imageData.height, parseInt(width)/this._imageData.width, parseInt(height)/this._imageData.height);\n\n\t\t\t\t\t//setup frame rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"frameX\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"frameY\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"frameWidth\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"frameHeight\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tsampler.frameRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n\n\t\t\t\t\tthis._pFinalizeAsset(sampler, XmlUtils.readAttributeValue(element, \"name\"));\n\t\t\t\t}\n\n\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_COMPLETE:\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n}\n\nexport = TextureAtlasParser;\n\nclass TextureAtlasParserState {\n\tpublic static PARSE_XML:number = 0;\n\tpublic static PARSE_IMAGE:number = 1;\n\tpublic static PARSE_SUBTEXTURES:number = 2;\n\tpublic static PARSE_COMPLETE:number = 3;\n}",
    "import WaveAudio\t\t\t\t= require(\"awayjs-core/lib/audio/WaveAudio\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass WaveAudioParser extends ParserBase\n{\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"wav\" || extension == \"mp3\" || extension == \"ogg\";\n\n\t}\n\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tvar filetype : string = WaveAudioParser.parseFileType(ba);\n\t\treturn filetype? true : false;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//clear content\n\t\tdelete this._pContent;\n\t\tthis._pContent = null;\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this.data instanceof ByteArray) { // Parse a ByteArray\n\t\t\tthis._pContent = new WaveAudio(this.data.arraybytes);\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\t\t\tthis._pContent = new WaveAudio(this.data);\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate static parseFileType(ba:ByteArray):string\n\t{\n\t\tba.position = 0;\n\n\t\tba.position = 0;\n\t\tif ((ba.readUnsignedShort() & 0xFFE0) == 0xFFE0) {\n\t\t\treturn 'mp3'; // test for MP3 syncword\n\t\t}\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'RIFF')\n\t\t\treturn 'wav';\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'OggS')\n\t\t\treturn 'ogg';\n\n\t\tba.position = 0;\n\n\t\treturn null;\n\t}\n}\n\nexport = WaveAudioParser;",
    "/**\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\n *\n * @see away.projections.PerspectiveLens#coordinateSystem\n */\nclass CoordinateSystem\n{\n\t/**\n\t * Default option, projects to a left-handed coordinate system\n\t */\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\n\n\t/**\n\t * Projects to a right-handed coordinate system\n\t */\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\n}\n\nexport = CoordinateSystem;",
    "import PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass FreeMatrixProjection extends ProjectionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._pNear = value;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._pFar = value;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._pAspectRatio = value;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.pInvalidateMatrix();\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = FreeMatrixProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass ObliqueNearPlaneProjection extends ProjectionBase\n{\n\n\tprivate _baseProjection:IProjection;\n\tprivate _plane:Plane3D;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\n\t{\n\t\tsuper();\n\t\tthis.baseProjection = baseProjection;\n\t\tthis.plane = plane;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\t}\n\n\t//@override\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._baseProjection.frustumCorners;\n\t}\n\n\t//@override\n\tpublic get near():number\n\t{\n\t\treturn this._baseProjection.near;\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._baseProjection.near = value;\n\t}\n\n\t//@override\n\tpublic get far():number\n\t{\n\t\treturn this._baseProjection.far;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._baseProjection.far = value;\n\t}\n\n\t//@override\n\tpublic get iAspectRatio():number\n\t{\n\t\treturn this._baseProjection._iAspectRatio;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._baseProjection._iAspectRatio = value;\n\t}\n\n\tpublic get plane():Plane3D\n\t{\n\t\treturn this._plane;\n\t}\n\n\tpublic set plane(value:Plane3D)\n\t{\n\t\tthis._plane = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic set baseProjection(value:IProjection)\n\t{\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis._baseProjection = value;\n\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\n\n\t\tvar cx:number = this._plane.a;\n\t\tvar cy:number = this._plane.b;\n\t\tvar cz:number = this._plane.c;\n\t\tvar cw:number = -this._plane.d + .05;\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\n\t\tinverse.invert();\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\t\tthis._pMatrix.copyRowTo(3, p);\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n}\n\nexport = ObliqueNearPlaneProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicOffCenterProjection extends ProjectionBase\n{\n\n\tprivate _minX:number;\n\tprivate _maxX:number;\n\tprivate _minY:number;\n\tprivate _maxY:number;\n\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\n\t{\n\t\tsuper();\n\t\tthis._minX = minX;\n\t\tthis._maxX = maxX;\n\t\tthis._minY = minY;\n\t\tthis._maxY = maxY;\n\t}\n\n\tpublic get minX():number\n\t{\n\t\treturn this._minX;\n\t}\n\n\tpublic set minX(value:number)\n\t{\n\t\tthis._minX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxX():number\n\t{\n\t\treturn this._maxX;\n\t}\n\n\tpublic set maxX(value:number)\n\t{\n\t\tthis._maxX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get minY():number\n\t{\n\t\treturn this._minY;\n\t}\n\n\tpublic set minY(value:number)\n\t{\n\t\tthis._minY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxY():number\n\t{\n\t\treturn this._maxY;\n\t}\n\n\tpublic set maxY(value:number)\n\t{\n\t\tthis._maxY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar w:number = 1/(this._maxX - this._minX);\n\t\tvar h:number = 1/(this._maxY - this._minY);\n\t\tvar d:number = 1/(this._pFar - this._pNear);\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(this._maxX + this._minX)*w;\n\t\traw[13] = -(this._maxY + this._minY)*h;\n\t\traw[14] = -this._pNear*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport = OrthographicOffCenterProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass OrthographicProjection extends ProjectionBase\n{\n\n\tprivate _projectionHeight:number;\n\tprivate _xMax:number;\n\tprivate _yMax:number;\n\n\tconstructor(projectionHeight:number = 500)\n\t{\n\t\tsuper();\n\t\tthis._projectionHeight = projectionHeight;\n\t}\n\n\tpublic get projectionHeight():number\n\t{\n\t\treturn this._projectionHeight;\n\t}\n\n\tpublic set projectionHeight(value:number)\n\t{\n\t\tif (value == this._projectionHeight) {\n\t\t\treturn;\n\t\t}\n\t\tthis._projectionHeight = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.projectionHeight = this._projectionHeight;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tthis._yMax = this._projectionHeight*.5;\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\n\t\t\t// assume symmetric frustum\n\n\t\t\tleft = -this._xMax;\n\t\t\tright = this._xMax;\n\t\t\ttop = -this._yMax;\n\t\t\tbottom = this._yMax;\n\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\n\t\t\traw[5] = 2/this._projectionHeight;\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\n\t\t\traw[15] = 1;\n\n\t\t} else {\n\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\n\n\t\t\tleft = center - xWidth;\n\t\t\tright = center + xWidth;\n\t\t\ttop = middle - yHgt;\n\t\t\tbottom = middle + yHgt;\n\n\t\t\traw[0] = 2*1/(right - left);\n\t\t\traw[5] = -2*1/(top - bottom);\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\n\t\t\traw[12] = (right + left)/(right - left);\n\t\t\traw[13] = (bottom + top)/(bottom - top);\n\t\t\traw[14] = this._pNear/(this.near - this.far);\n\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\t\traw[15] = 1;\n\t\t}\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport= OrthographicProjection;",
    "import Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport CoordinateSystem\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\nimport ProjectionBase\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\n\nclass PerspectiveProjection extends ProjectionBase\n{\n\tprivate _fieldOfView:number = 60;\n\tprivate _focalLength:number = 1000;\n\tprivate _hFieldOfView:number = 60;\n\tprivate _hFocalLength:number = 1000;\n\tprivate _preserveAspectRatio:boolean = true;\n\tprivate _preserveFocalLength:boolean = false;\n\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper(coordinateSystem);\n\t\tthis.fieldOfView = fieldOfView;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveAspectRatio():boolean\n\t{\n\t\treturn this._preserveAspectRatio;\n\t}\n\n\tpublic set preserveAspectRatio(value:boolean)\n\t{\n\t\tif (this._preserveAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._preserveAspectRatio = value;\n\n\t\tif (this._preserveAspectRatio)\n\t\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveFocalLength():boolean\n\t{\n\t\treturn this._preserveFocalLength;\n\t}\n\n\tpublic set preserveFocalLength(value:boolean)\n\t{\n\t\tif (this._preserveFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._preserveFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get fieldOfView():number\n\t{\n\t\treturn this._fieldOfView;\n\t}\n\n\tpublic set fieldOfView(value:number)\n\t{\n\t\tif (this._fieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._fieldOfView = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get focalLength():number\n\t{\n\t\treturn this._focalLength;\n\t}\n\n\tpublic set focalLength(value:number)\n\t{\n\t\tif (this._focalLength == value)\n\t\t\treturn;\n\n\t\tthis._focalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFieldOfView():number\n\t{\n\t\treturn this._hFieldOfView;\n\t}\n\n\tpublic set hFieldOfView(value:number)\n\t{\n\t\tif (this._hFieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._hFieldOfView = value;\n\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFocalLength():number\n\t{\n\t\treturn this._hFocalLength;\n\t}\n\n\tpublic set hFocalLength(value:number)\n\t{\n\t\tif (this._hFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._hFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\n\t\tv.x *= sZ;\n\t\tv.y *= sZ;\n\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tif (this._preserveFocalLength) {\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\n\t\t} else {\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\n\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\t\t\telse\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\n\t\t}\n\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\t// assume scissored frustum\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\n\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\n\t\tright = center;\n\t\ttop = middle;\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\n\n\t\traw[0] = 2/(right - left);\n\t\traw[5] = 2/(bottom - top);\n\t\traw[8] = (right + left)/(right - left);\n\t\traw[9] = (bottom + top)/(bottom - top);\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\n\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\n\t\t\traw[5] = -raw[5];\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\n\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\n\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\n\n\t}\n}\n\nexport = PerspectiveProjection;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nclass ProjectionBase extends EventDispatcher implements IProjection\n{\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\tpublic _pViewPort:Rectangle = new Rectangle();\n\tpublic _pNear:number = 20;\n\tpublic _pFar:number = 3000;\n\tpublic _pAspectRatio:number = 1;\n\n\tpublic _pMatrixInvalid:boolean = true;\n\tpublic _pFrustumCorners:number[] = [];\n\tpublic _pCoordinateSystem:string;\n\tpublic _pOriginX:number = 0.5;\n\tpublic _pOriginY:number = 0.5;\n\n\tprivate _unprojection:Matrix3D;\n\tprivate _unprojectionInvalid:boolean = true;\n\n\tconstructor(coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper();\n\n\t\tthis.coordinateSystem = coordinateSystem;\n\t}\n\n\t/**\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\n\t */\n\tpublic get coordinateSystem():string\n\t{\n\t\treturn this._pCoordinateSystem;\n\t}\n\n\tpublic set coordinateSystem(value:string)\n\t{\n\t\tif (this._pCoordinateSystem == value)\n\t\t\treturn;\n\n\t\tthis._pCoordinateSystem = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._pFrustumCorners;\n\t}\n\n\tpublic set frustumCorners(frustumCorners:number[])\n\t{\n\t\tthis._pFrustumCorners = frustumCorners;\n\t}\n\n\tpublic get matrix():Matrix3D\n\t{\n\t\tif (this._pMatrixInvalid) {\n\t\t\tthis.pUpdateMatrix();\n\t\t\tthis._pMatrixInvalid = false;\n\t\t}\n\t\treturn this._pMatrix;\n\t}\n\n\tpublic set matrix(value:Matrix3D)\n\t{\n\t\tthis._pMatrix = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get near():number\n\t{\n\t\treturn this._pNear;\n\t}\n\n\tpublic set near(value:number)\n\t{\n\t\tif (value == this._pNear) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pNear = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get originX():number\n\t{\n\t\treturn this._pOriginX;\n\t}\n\n\tpublic set originX(value:number)\n\t{\n\t\tif (this._pOriginX == value)\n\t\t\treturn;\n\n\t\tthis._pOriginX = value;\n\t}\n\n\tpublic get originY():number\n\t{\n\t\treturn this._pOriginY;\n\t}\n\n\tpublic set originY(value:number)\n\t{\n\t\tif (this._pOriginY == value)\n\t\t\treturn;\n\n\t\tthis._pOriginY = value;\n\t}\n\n\tpublic get far():number\n\t{\n\t\treturn this._pFar;\n\t}\n\n\tpublic set far(value:number)\n\t{\n\t\tif (value == this._pFar) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pFar = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\n\t\tv.x = v.x/v.w;\n\t\tv.y = -v.y/v.w;\n\n\t\t//z is unaffected by transform\n\t\tv.z = point3d.z;\n\n\t\treturn v;\n\t}\n\n\tpublic get unprojectionMatrix():Matrix3D\n\t{\n\t\tif (this._unprojectionInvalid) {\n\t\t\tif (!this._unprojection)\n\t\t\t\tthis._unprojection = new Matrix3D();\n\n\t\t\tthis._unprojection.copyFrom(this.matrix);\n\t\t\tthis._unprojection.invert();\n\t\t\tthis._unprojectionInvalid = false;\n\t\t}\n\t\treturn this._unprojection;\n\t}\n\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():ProjectionBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iAspectRatio():number\n\t{\n\t\treturn this._pAspectRatio;\n\t}\n\n\tpublic set _iAspectRatio(value:number)\n\t{\n\t\tif (this._pAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._pAspectRatio = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic pInvalidateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = true;\n\t\tthis._unprojectionInvalid = true;\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\n\t}\n\n\tpublic pUpdateMatrix()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pScissorRect.x = x;\n\t\tthis._pScissorRect.y = y;\n\t\tthis._pScissorRect.width = width;\n\t\tthis._pScissorRect.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pViewPort.x = x;\n\t\tthis._pViewPort.y = y;\n\t\tthis._pViewPort.width = width;\n\t\tthis._pViewPort.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n}\n\nexport = ProjectionBase;",
    "class Keyboard\n{\n\t/**\n\t * Constant associated with the key code value for the A key (65).\n\t */\n\tpublic static A:number /*uint*/ = 65;\n\n\t/**\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\n\t */\n\tpublic static ALTERNATE:number /*uint*/ = 18;\n\n\t/**\n\t * Select the audio mode\n\t */\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\n\n\t/**\n\t * Constant associated with the key code value for the B key (66).\n\t */\n\tpublic static B:number /*uint*/ = 66;\n\n\t/**\n\t * Return to previous page in application\n\t */\n\tpublic static BACK:number /*uint*/ = 0x01000016;\n\n\t/**\n\t * Constant associated with the key code value for the ` key (192).\n\t */\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\n\n\t/**\n\t * Constant associated with the key code value for the \\ key (220).\n\t */\n\tpublic static BACKSLASH:number /*uint*/ = 220;\n\n\t/**\n\t * Constant associated with the key code value for the Backspace key (8).\n\t */\n\tpublic static BACKSPACE:number /*uint*/ = 8;\n\n\t/**\n\t * Blue function key button\n\t */\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\n\n\t/**\n\t * Constant associated with the key code value for the C key (67).\n\t */\n\tpublic static C:number /*uint*/ = 67;\n\n\t/**\n\t * Constant associated with the key code value for the Caps Lock key (20).\n\t */\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\n\n\t/**\n\t * Channel down\n\t */\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Channel up\n\t */\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Constant associated with the key code value for the , key (188).\n\t */\n\tpublic static COMMA:number /*uint*/ = 188;\n\n\t/**\n\t * Constant associated with the Mac command key (15). This constant is\n\t * currently only used for setting menu key equivalents.\n\t */\n\tpublic static COMMAND:number /*uint*/ = 15;\n\n\t/**\n\t * Constant associated with the key code value for the Control key (17).\n\t */\n\tpublic static CONTROL:number /*uint*/ = 17;\n\n\t/**\n\t * An array containing all the defined key name constants.\n\t */\n\tpublic static CharCodeStrings:Array<any>;\n\n\t/**\n\t * Constant associated with the key code value for the D key (68).\n\t */\n\tpublic static D:number /*uint*/ = 68;\n\n\t/**\n\t * Constant associated with the key code value for the Delete key (46).\n\t */\n\tpublic static DELETE:number /*uint*/ = 46;\n\n\t/**\n\t * Constant associated with the key code value for the Down Arrow key (40).\n\t */\n\tpublic static DOWN:number /*uint*/ = 40;\n\n\t/**\n\t * Engage DVR application mode\n\t */\n\tpublic static DVR:number /*uint*/ = 0x01000019;\n\n\t/**\n\t * Constant associated with the key code value for the E key (69).\n\t */\n\tpublic static E:number /*uint*/ = 69;\n\n\t/**\n\t * Constant associated with the key code value for the End key (35).\n\t */\n\tpublic static END:number /*uint*/ = 35;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key (13).\n\t */\n\tpublic static ENTER:number /*uint*/ = 13;\n\n\t/**\n\t * Constant associated with the key code value for the = key (187).\n\t */\n\tpublic static EQUAL:number /*uint*/ = 187;\n\n\t/**\n\t * Constant associated with the key code value for the Escape key (27).\n\t */\n\tpublic static ESCAPE:number /*uint*/ = 27;\n\n\t/**\n\t * Exits current application mode\n\t */\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\n\n\t/**\n\t * Constant associated with the key code value for the F key (70).\n\t */\n\tpublic static F:number /*uint*/ = 70;\n\n\t/**\n\t * Constant associated with the key code value for the F1 key (112).\n\t */\n\tpublic static F1:number /*uint*/ = 112;\n\n\t/**\n\t * Constant associated with the key code value for the F10 key (121).\n\t */\n\tpublic static F10:number /*uint*/ = 121;\n\n\t/**\n\t * Constant associated with the key code value for the F11 key (122).\n\t */\n\tpublic static F11:number /*uint*/ = 122;\n\n\t/**\n\t * Constant associated with the key code value for the F12 key (123).\n\t */\n\tpublic static F12:number /*uint*/ = 123;\n\n\t/**\n\t * Constant associated with the key code value for the F13 key (124).\n\t */\n\tpublic static F13:number /*uint*/ = 124;\n\n\t/**\n\t * Constant associated with the key code value for the F14 key (125).\n\t */\n\tpublic static F14:number /*uint*/ = 125;\n\n\t/**\n\t * Constant associated with the key code value for the F15 key (126).\n\t */\n\tpublic static F15:number /*uint*/ = 126;\n\n\t/**\n\t * Constant associated with the key code value for the F2 key (113).\n\t */\n\tpublic static F2:number /*uint*/ = 113;\n\n\t/**\n\t * Constant associated with the key code value for the F3 key (114).\n\t */\n\tpublic static F3:number /*uint*/ = 114;\n\n\t/**\n\t * Constant associated with the key code value for the F4 key (115).\n\t */\n\tpublic static F4:number /*uint*/ = 115;\n\n\t/**\n\t * Constant associated with the key code value for the F5 key (116).\n\t */\n\tpublic static F5:number /*uint*/ = 116;\n\n\t/**\n\t * Constant associated with the key code value for the F6 key (117).\n\t */\n\tpublic static F6:number /*uint*/ = 117;\n\n\t/**\n\t * Constant associated with the key code value for the F7 key (118).\n\t */\n\tpublic static F7:number /*uint*/ = 118;\n\n\t/**\n\t * Constant associated with the key code value for the F8 key (119).\n\t */\n\tpublic static F8:number /*uint*/ = 119;\n\n\t/**\n\t * Constant associated with the key code value for the F9 key (120).\n\t */\n\tpublic static F9:number /*uint*/ = 120;\n\n\t/**\n\t * Engage fast-forward transport mode\n\t */\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\n\n\t/**\n\t * Constant associated with the key code value for the G key (71).\n\t */\n\tpublic static G:number /*uint*/ = 71;\n\n\t/**\n\t * Green function key button\n\t */\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\n\n\t/**\n\t * Engage program guide\n\t */\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\n\n\t/**\n\t * Constant associated with the key code value for the H key (72).\n\t */\n\tpublic static H:number /*uint*/ = 72;\n\n\t/**\n\t * Engage help application or context-sensitive help\n\t */\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\n\n\t/**\n\t * Constant associated with the key code value for the Home key (36).\n\t */\n\tpublic static HOME:number /*uint*/ = 36;\n\n\t/**\n\t * Constant associated with the key code value for the I key (73).\n\t */\n\tpublic static I:number /*uint*/ = 73;\n\n\t/**\n\t * Info button\n\t */\n\tpublic static INFO:number /*uint*/ = 0x01000013;\n\n\t/**\n\t * Cycle input\n\t */\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\n\n\t/**\n\t * Constant associated with the key code value for the Insert key (45).\n\t */\n\tpublic static INSERT:number /*uint*/ = 45;\n\n\t/**\n\t * Constant associated with the key code value for the J key (74).\n\t */\n\tpublic static J:number /*uint*/ = 74;\n\n\t/**\n\t * Constant associated with the key code value for the K key (75).\n\t */\n\tpublic static K:number /*uint*/ = 75;\n\n\t/**\n\t * The Begin key\n\t */\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\n\n\t/**\n\t * The Break key\n\t */\n\tpublic static KEYNAME_BREAK:string = \"Break\";\n\n\t/**\n\t * The Clear Display key\n\t */\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\n\n\t/**\n\t * The Clear Line key\n\t */\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\n\n\t/**\n\t * The Delete key\n\t */\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\n\n\t/**\n\t * The Delete Character key\n\t */\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\n\n\t/**\n\t * The Delete Line key\n\t */\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\n\n\t/**\n\t * The down arrow\n\t */\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\n\n\t/**\n\t * The End key\n\t */\n\tpublic static KEYNAME_END:string = \"End\";\n\n\t/**\n\t * The Execute key\n\t */\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\n\n\t/**\n\t * The F1 key\n\t */\n\tpublic static KEYNAME_F1:string = \"F1\";\n\n\t/**\n\t * The F10 key\n\t */\n\tpublic static KEYNAME_F10:string = \"F10\";\n\n\t/**\n\t * The F11 key\n\t */\n\tpublic static KEYNAME_F11:string = \"F11\";\n\n\t/**\n\t * The F12 key\n\t */\n\tpublic static KEYNAME_F12:string = \"F12\";\n\n\t/**\n\t * The F13 key\n\t */\n\tpublic static KEYNAME_F13:string = \"F13\";\n\n\t/**\n\t * The F14 key\n\t */\n\tpublic static KEYNAME_F14:string = \"F14\";\n\n\t/**\n\t * The F15 key\n\t */\n\tpublic static KEYNAME_F15:string = \"F15\";\n\n\t/**\n\t * The F16 key\n\t */\n\tpublic static KEYNAME_F16:string = \"F16\";\n\n\t/**\n\t * The F17 key\n\t */\n\tpublic static KEYNAME_F17:string = \"F17\";\n\n\t/**\n\t * The F18 key\n\t */\n\tpublic static KEYNAME_F18:string = \"F18\";\n\n\t/**\n\t * The F19 key\n\t */\n\tpublic static KEYNAME_F19:string = \"F19\";\n\n\t/**\n\t * The F2 key\n\t */\n\tpublic static KEYNAME_F2:string = \"F2\";\n\n\t/**\n\t * The F20 key\n\t */\n\tpublic static KEYNAME_F20:string = \"F20\";\n\n\t/**\n\t * The F21 key\n\t */\n\tpublic static KEYNAME_F21:string = \"F21\";\n\n\t/**\n\t * The F22 key\n\t */\n\tpublic static KEYNAME_F22:string = \"F22\";\n\n\t/**\n\t * The F23 key\n\t */\n\tpublic static KEYNAME_F23:string = \"F23\";\n\n\t/**\n\t * The F24 key\n\t */\n\tpublic static KEYNAME_F24:string = \"F24\";\n\n\t/**\n\t * The F25 key\n\t */\n\tpublic static KEYNAME_F25:string = \"F25\";\n\n\t/**\n\t * The F26 key\n\t */\n\tpublic static KEYNAME_F26:string = \"F26\";\n\n\t/**\n\t * The F27 key\n\t */\n\tpublic static KEYNAME_F27:string = \"F27\";\n\n\t/**\n\t * The F28 key\n\t */\n\tpublic static KEYNAME_F28:string = \"F28\";\n\n\t/**\n\t * The F29 key\n\t */\n\tpublic static KEYNAME_F29:string = \"F29\";\n\n\t/**\n\t * The F3 key\n\t */\n\tpublic static KEYNAME_F3:string = \"F3\";\n\n\t/**\n\t * The F30 key\n\t */\n\tpublic static KEYNAME_F30:string = \"F30\";\n\n\t/**\n\t * The F31 key\n\t */\n\tpublic static KEYNAME_F31:string = \"F31\";\n\n\t/**\n\t * The F32 key\n\t */\n\tpublic static KEYNAME_F32:string = \"F32\";\n\n\t/**\n\t * The F33 key\n\t */\n\tpublic static KEYNAME_F33:string = \"F33\";\n\n\t/**\n\t * The F34 key\n\t */\n\tpublic static KEYNAME_F34:string = \"F34\";\n\n\t/**\n\t * The F35 key\n\t */\n\tpublic static KEYNAME_F35:string = \"F35\";\n\n\t/**\n\t * The F4 key\n\t */\n\tpublic static KEYNAME_F4:string = \"F4\";\n\n\t/**\n\t * The F5 key\n\t */\n\tpublic static KEYNAME_F5:string = \"F5\";\n\n\t/**\n\t * The F6 key\n\t */\n\tpublic static KEYNAME_F6:string = \"F6\";\n\n\t/**\n\t * The F7 key\n\t */\n\tpublic static KEYNAME_F7:string = \"F7\";\n\n\t/**\n\t * The F8 key\n\t */\n\tpublic static KEYNAME_F8:string = \"F8\";\n\n\t/**\n\t * The F9 key\n\t */\n\tpublic static KEYNAME_F9:string = \"F9\";\n\n\t/**\n\t * The Find key\n\t */\n\tpublic static KEYNAME_FIND:string = \"Find\";\n\n\t/**\n\t * The Help key\n\t */\n\tpublic static KEYNAME_HELP:string = \"Help\";\n\n\t/**\n\t * The Home key\n\t */\n\tpublic static KEYNAME_HOME:string = \"Home\";\n\n\t/**\n\t * The Insert key\n\t */\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\n\n\t/**\n\t * The Insert Character key\n\t */\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\n\n\t/**\n\t * The Insert Line key\n\t */\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\n\n\t/**\n\t * The left arrow\n\t */\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\n\n\t/**\n\t * The Menu key\n\t */\n\tpublic static KEYNAME_MENU:string = \"Menu\";\n\n\t/**\n\t * The Mode Switch key\n\t */\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\n\n\t/**\n\t * The Next key\n\t */\n\tpublic static KEYNAME_NEXT:string = \"Next\";\n\n\t/**\n\t * The Page Down key\n\t */\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\n\n\t/**\n\t * The Page Up key\n\t */\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\n\n\t/**\n\t * The Pause key\n\t */\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\n\n\t/**\n\t * The Previous key\n\t */\n\tpublic static KEYNAME_PREV:string = \"Prev\";\n\n\t/**\n\t * The PRINT key\n\t */\n\tpublic static KEYNAME_PRINT:string = \"Print\";\n\n\t/**\n\t * The PRINT Screen\n\t */\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\n\n\t/**\n\t * The Redo key\n\t */\n\tpublic static KEYNAME_REDO:string = \"Redo\";\n\n\t/**\n\t * The Reset key\n\t */\n\tpublic static KEYNAME_RESET:string = \"Reset\";\n\n\t/**\n\t * The right arrow\n\t */\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\n\n\t/**\n\t * The Scroll Lock key\n\t */\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\n\n\t/**\n\t * The Select key\n\t */\n\tpublic static KEYNAME_SELECT:string = \"Select\";\n\n\t/**\n\t * The Stop key\n\t */\n\tpublic static KEYNAME_STOP:string = \"Stop\";\n\n\t/**\n\t * The System Request key\n\t */\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\n\n\t/**\n\t * The System key\n\t */\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\n\n\t/**\n\t * The Undo key\n\t */\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\n\n\t/**\n\t * The up arrow\n\t */\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\n\n\t/**\n\t * The User key\n\t */\n\tpublic static KEYNAME_USER:string = \"User\";\n\n\t/**\n\t * Constant associated with the key code value for the L key (76).\n\t */\n\tpublic static L:number /*uint*/ = 76;\n\n\t/**\n\t * Watch last channel or show watched\n\t */\n\tpublic static LAST:number /*uint*/ = 0x01000011;\n\n\t/**\n\t * Constant associated with the key code value for the Left Arrow key (37).\n\t */\n\tpublic static LEFT:number /*uint*/ = 37;\n\n\t/**\n\t * Constant associated with the key code value for the [ key (219).\n\t */\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\n\n\t/**\n\t * Return to live [position in broadcast]\n\t */\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\n\n\t/**\n\t * Constant associated with the key code value for the M key (77).\n\t */\n\tpublic static M:number /*uint*/ = 77;\n\n\t/**\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\n\t */\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\n\n\t/**\n\t * Engage menu\n\t */\n\tpublic static MENU:number /*uint*/ = 0x01000012;\n\n\t/**\n\t * Constant associated with the key code value for the - key (189).\n\t */\n\tpublic static MINUS:number /*uint*/ = 189;\n\n\t/**\n\t * Constant associated with the key code value for the N key (78).\n\t */\n\tpublic static N:number /*uint*/ = 78;\n\n\t/**\n\t * Skip to next track or chapter\n\t */\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\n\n\t/**\n\t * Constant associated with the key code value for the 0 key (48).\n\t */\n\tpublic static NUMBER_0:number /*uint*/ = 48;\n\n\t/**\n\t * Constant associated with the key code value for the 1 key (49).\n\t */\n\tpublic static NUMBER_1:number /*uint*/ = 49;\n\n\t/**\n\t * Constant associated with the key code value for the 2 key (50).\n\t */\n\tpublic static NUMBER_2:number /*uint*/ = 50;\n\n\t/**\n\t * Constant associated with the key code value for the 3 key (51).\n\t */\n\tpublic static NUMBER_3:number /*uint*/ = 51;\n\n\t/**\n\t * Constant associated with the key code value for the 4 key (52).\n\t */\n\tpublic static NUMBER_4:number /*uint*/ = 52;\n\n\t/**\n\t * Constant associated with the key code value for the 5 key (53).\n\t */\n\tpublic static NUMBER_5:number /*uint*/ = 53;\n\n\t/**\n\t * Constant associated with the key code value for the 6 key (54).\n\t */\n\tpublic static NUMBER_6:number /*uint*/ = 54;\n\n\t/**\n\t * Constant associated with the key code value for the 7 key (55).\n\t */\n\tpublic static NUMBER_7:number /*uint*/ = 55;\n\n\t/**\n\t * Constant associated with the key code value for the 8 key (56).\n\t */\n\tpublic static NUMBER_8:number /*uint*/ = 56;\n\n\t/**\n\t * Constant associated with the key code value for the 9 key (57).\n\t */\n\tpublic static NUMBER_9:number /*uint*/ = 57;\n\n\t/**\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\n\t */\n\tpublic static NUMPAD:number /*uint*/ = 21;\n\n\t/**\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\n\t */\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\n\n\t/**\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\n\t */\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\n\n\t/**\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\n\t */\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\n\n\t/**\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\n\t */\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\n\n\t/**\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\n\t */\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\n\n\t/**\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\n\t */\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\n\n\t/**\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\n\t */\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\n\n\t/**\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\n\t */\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\n\n\t/**\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\n\t */\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\n\n\t/**\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\n\t */\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\n\n\t/**\n\t * Constant associated with the key code value for the addition key on the number pad (107).\n\t */\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\n\n\t/**\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\n\t */\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\n\n\t/**\n\t * Constant associated with the key code value for the division key on the number pad (111).\n\t */\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\n\t */\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\n\n\t/**\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\n\t */\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\n\n\t/**\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\n\t */\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\n\n\t/**\n\t * Constant associated with the key code value for the O key (79).\n\t */\n\tpublic static O:number /*uint*/ = 79;\n\n\t/**\n\t * Constant associated with the key code value for the P key (80).\n\t */\n\tpublic static P:number /*uint*/ = 80;\n\n\t/**\n\t * Constant associated with the key code value for the Page Down key (34).\n\t */\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\n\n\t/**\n\t * Constant associated with the key code value for the Page Up key (33).\n\t */\n\tpublic static PAGE_UP:number /*uint*/ = 33;\n\n\t/**\n\t * Engage pause transport mode\n\t */\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\n\n\t/**\n\t * Constant associated with the key code value for the . key (190).\n\t */\n\tpublic static PERIOD:number /*uint*/ = 190;\n\n\t/**\n\t * Engage play transport mode\n\t */\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\n\n\t/**\n\t * Skip to previous track or chapter\n\t */\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\n\n\t/**\n\t * Constant associated with the key code value for the Q key (81).\n\t */\n\tpublic static Q:number /*uint*/ = 81;\n\n\t/**\n\t * Constant associated with the key code value for the ' key (222).\n\t */\n\tpublic static QUOTE:number /*uint*/ = 222;\n\n\t/**\n\t * Constant associated with the key code value for the R key (82).\n\t */\n\tpublic static R:number /*uint*/ = 82;\n\n\t/**\n\t * Record item or engage record transport mode\n\t */\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\n\n\t/**\n\t * Red function key button\n\t */\n\tpublic static RED:number /*uint*/ = 0x01000000;\n\n\t/**\n\t * Engage rewind transport mode\n\t */\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\n\n\t/**\n\t * Constant associated with the key code value for the Right Arrow key (39).\n\t */\n\tpublic static RIGHT:number /*uint*/ = 39;\n\n\t/**\n\t * Constant associated with the key code value for the ] key (221).\n\t */\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\n\n\t/**\n\t * Constant associated with the key code value for the S key (83).\n\t */\n\tpublic static S:number /*uint*/ = 83;\n\n\t/**\n\t * Search button\n\t */\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\n\n\t/**\n\t * Constant associated with the key code value for the ; key (186).\n\t */\n\tpublic static SEMICOLON:number /*uint*/ = 186;\n\n\t/**\n\t * Engage setup application or menu\n\t */\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\n\n\t/**\n\t * Constant associated with the key code value for the Shift key (16).\n\t */\n\tpublic static SHIFT:number /*uint*/ = 16;\n\n\t/**\n\t * Quick skip backward (usually 7-10 seconds)\n\t */\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\n\n\t/**\n\t * Quick skip ahead (usually 30 seconds)\n\t */\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\n\n\t/**\n\t * Constant associated with the key code value for the / key (191).\n\t */\n\tpublic static SLASH:number /*uint*/ = 191;\n\n\t/**\n\t * Constant associated with the key code value for the Spacebar (32).\n\t */\n\tpublic static SPACE:number /*uint*/ = 32;\n\n\t/**\n\t * Engage stop transport mode\n\t */\n\tpublic static STOP:number /*uint*/ = 0x01000009;\n\n\t/**\n\t * Toggle subtitles\n\t */\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\n\n\t/**\n\t * Constant associated with the key code value for the T key (84).\n\t */\n\tpublic static T:number /*uint*/ = 84;\n\n\t/**\n\t * Constant associated with the key code value for the Tab key (9).\n\t */\n\tpublic static TAB:number /*uint*/ = 9;\n\n\t/**\n\t * Constant associated with the key code value for the U key (85).\n\t */\n\tpublic static U:number /*uint*/ = 85;\n\n\t/**\n\t * Constant associated with the key code value for the Up Arrow key (38).\n\t */\n\tpublic static UP:number /*uint*/ = 38;\n\n\t/**\n\t * Constant associated with the key code value for the V key (86).\n\t */\n\tpublic static V:number /*uint*/ = 86;\n\n\t/**\n\t * Engage video-on-demand\n\t */\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\n\n\t/**\n\t * Constant associated with the key code value for the W key (87).\n\t */\n\tpublic static W:number /*uint*/ = 87;\n\n\t/**\n\t * Constant associated with the key code value for the X key (88).\n\t */\n\tpublic static X:number /*uint*/ = 88;\n\n\t/**\n\t * Constant associated with the key code value for the Y key (89).\n\t */\n\tpublic static Y:number /*uint*/ = 89;\n\n\t/**\n\t * Yellow function key button\n\t */\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\n\n\t/**\n\t * Constant associated with the key code value for the Z key (90).\n\t */\n\tpublic static Z:number /*uint*/ = 90;\n\n}\n\nexport = Keyboard;",
    "import BlendMode\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ColorUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ColorUtils\");\n\nclass BitmapImageUtils\n{\n\tpublic static _fillRect(context:CanvasRenderingContext2D, rect:Rectangle, color:number, transparent:boolean)\n\t{\n\t\tif (color == 0x0 && transparent) {\n\t\t\tcontext.clearRect(rect.x, rect.y, rect.width, rect.height);\n\t\t} else {\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\t\tif (transparent)\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\n\t\t\telse\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\n\n\t\t\tcontext.fillRect(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\t}\n\n\tpublic static _copyPixels(context:CanvasRenderingContext2D, bmpd:HTMLElement, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tcontext.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t}\n\n\tpublic static _draw(context:CanvasRenderingContext2D, source:any, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean)\n\t{\n\t\tcontext.save();\n\n\t\tif (matrix != null)\n\t\t\tcontext.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\n\t\tif (clipRect != null)\n\t\t\tcontext.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\n\t\telse\n\t\t\tcontext.drawImage(source, 0, 0);\n\n\t\tcontext.restore();\n\t}\n}\n\nexport = BitmapImageUtils;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nclass ByteArrayBase\n{\n\tpublic position:number = 0;\n\tpublic length:number = 0;\n\tpublic _mode:string = \"\";\n\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\n\t}\n\n\tpublic compareEqual(other, count)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (count > other.length - other.position)\n\t\t\tcount = other.length - other.position;\n\t\tvar co0 = count;\n\t\tvar r = true;\n\t\twhile (r && count >= 4) {\n\t\t\tcount -= 4;\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\n\t\t}\n\t\twhile (r && count >= 1) {\n\t\t\tcount--;\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\n\t\t}\n\t\tvar c0;\n\t\tthis.position -= (c0 - count);\n\t\tother.position -= (c0 - count);\n\t\treturn r;\n\t}\n\n\tpublic writeBase64String(s:string)\n\t{\n\t\tfor (var i:number = 0; i < s.length; i++) {\n\t\t\tvar v = s.charAt(i);\n\t\t}\n\t}\n\n\tpublic dumpToConsole()\n\t{\n\t\tvar oldpos = this.position;\n\t\tthis.position = 0;\n\t\tvar nstep:number = 8;\n\n\t\tfunction asHexString(x, digits)\n\t\t{\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\n\t\t\tvar sh:string = \"\";\n\t\t\tfor (var d:number = 0; d < digits; d++) {\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\n\t\t\t}\n\t\t\treturn sh;\n\t\t}\n\n\t\tfor (var i = 0; i < this.length; i += nstep) {\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\n\t\t\t}\n\t\t\tconsole.log(s);\n\t\t}\n\t\tthis.position = oldpos;\n\t}\n\n\tpublic readBase64String(count:number)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (!(count > 0)) return \"\";\n\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\n\t}\n\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self)\n\t{ // return base64 string of the next count bytes\n\t\tvar r = \"\";\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\n\t\tvar base64Key = ByteArrayBase.Base64Key;\n\t\twhile (count >= 3) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\n\t\t\tenc4 = b2 & 63;\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\n\t\t\tcount -= 3;\n\t\t}\n\t\t// pad\n\t\tif (count == 2) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\n\t\t} else if (count == 1) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\n\t\t}\n\t\treturn r;\n\t}\n}\n\nexport = ByteArrayBase;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArrayBuffer extends ByteArrayBase\n{\n\n\t/*\n\t public maxlength:number = 0;\n\t public arraybytes; //ArrayBuffer\n\t public unalignedarraybytestemp; //ArrayBuffer\n\t */\n\n\tpublic _bytes:number[];\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._bytes = [];\n\t\tthis._mode = \"Array\";\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[this.position++] = bi & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tif (this.position + 2 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\n\t\tthis.position += 2;\n\t\treturn r;\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tif (this.position + 4 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\n\t\tthis.position += 4;\n\t\treturn r >>> 0;\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\t// this is crazy slow and silly, but as a fallback...\n\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\t// don't handle inf/nan yet\n\t\t// special case zero\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\t// remove the sign, after this we only deal with positive numbers\n\t\tvar sign:number = 0;\n\t\tif (x < 0) {\n\t\t\tx = -x;\n\t\t\tsign = 1;\n\t\t} else {\n\t\t\tsign = 0;\n\t\t}\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\n\t\texponent = Math.floor(exponent);\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\n\t\tvar mantissa = Math.floor(x) - 0x800000;\n\t\texponent = exponent + 127;\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\n\t\tif (x >>> 31 != 0) {\n\t\t\ty = -y;\n\t\t}\n\t\treturn y;\n\t}\n\n\t/*\n\t public ensureWriteableSpace( n:number )\n\t {\n\t this.ensureSpace( n + this.position );\n\t }\n\n\t private ensureSpace( n:number )\n\t {\n\t if ( n > this.maxlength ) {\n\t var newmaxlength:number = (n+255)&(~255);\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t newview.set(view);      // memcpy\n\t this.arraybytes = newarraybuffer;\n\t this.maxlength = newmaxlength;\n\t }\n\t }\n\t */\n}\n\nexport = ByteArrayBuffer;",
    "import ByteArrayBase\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nclass ByteArray extends ByteArrayBase\n{\n\tpublic maxlength:number;\n\tpublic arraybytes; //ArrayBuffer\n\tpublic unalignedarraybytestemp; //ArrayBuffer\n\n\tconstructor(maxlength:number = 4)\n\t{\n\t\tsuper();\n\t\tthis._mode = \"Typed array\";\n\t\tthis.maxlength = Math.max((maxlength + 255) & (~255), 4);\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\n\t}\n\n\tpublic ensureWriteableSpace(n:number)\n\t{\n\t\tthis.ensureSpace(n + this.position);\n\t}\n\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\n\t{\n\t\tthis.ensureSpace(aBuffer.byteLength);\n\n\t\tthis.length = aBuffer.byteLength;\n\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\n\n\t\tlocalInt8View.set(inInt8AView);\n\n\t\tthis.position = 0;\n\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\treturn ( this.length ) - ( this.position );\n\t}\n\n\tpublic ensureSpace(n:number)\n\t{\n\t\tif (n > this.maxlength) {\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t\t\tnewview.set(view);      // memcpy\n\t\t\tthis.arraybytes = newarraybuffer;\n\t\t\tthis.maxlength = newmaxlength;\n\t\t}\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\n\t\tvar view = new Int8Array(this.arraybytes);\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte()\n\t{\n\t\tif (this.position >= this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view = new Int8Array(this.arraybytes);\n\n\t\treturn view[ this.position++ ];\n\t}\n\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0)\n\t{\n\t\tif (length == null)\n\t\t\tlength = bytes.length;\n\n\t\tbytes.ensureWriteableSpace(offset + length);\n\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\n\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\n\n\t\tthis.position += length;\n\n\t\tif (length + offset > bytes.length)\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUnsignedByte()\n\t{\n\t\tif (this.position >= this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\treturn view[this.position++];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(2);\n\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview2.set(view3);\n\t\t}\n\n\t\tthis.position += 2;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUTFBytes(len:number):string\n\t{\n\t\tvar value:string = \"\";\n\t\tvar max:number = this.position + len;\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\n\t\t// utf8-encode\n\t\twhile (this.position < max) {\n\n\t\t\tvar c:number = data.getUint8(this.position++);\n\n\t\t\tif (c < 0x80) {\n\n\t\t\t\tif (c == 0) break;\n\t\t\t\tvalue += String.fromCharCode(c);\n\n\t\t\t} else if (c < 0xE0) {\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else if (c < 0xF0) {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvar c3 = data.getUint8(this.position++);\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic readInt():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar int:number = data.getInt32(this.position, true);\n\n\t\tthis.position += 4;\n\n\t\treturn int;\n\t}\n\n\tpublic readShort():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar short:number = data.getInt16(this.position, true);\n\n\t\tthis.position += 2;\n\n\t\treturn short;\n\t}\n\n\tpublic readDouble():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar double:number = data.getFloat64(this.position, true);\n\n\t\tthis.position += 8;\n\n\t\treturn double;\n\t}\n\n\tpublic readUnsignedShort()\n\t{\n\t\tif (this.position > this.length + 2)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 1;\n\t\t\tthis.position += 2;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 2;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffffffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUnsignedInt()\n\t{\n\t\tif (this.position > this.length + 4)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = b;\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = b;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readFloat()\n\t{\n\t\tif (this.position > this.length + 4)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tif ((this.position & 3) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tvar pa = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[pa];\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[ 0 ];\n\t\t}\n\t}\n}\n\nexport = ByteArray;",
    "class CSS\n{\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.width = width + \"px\";\n\t\telement.style.height = height + \"px\";\n\t\telement[\"width\"] = width;\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementWidth(element:HTMLElement, width:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.width = width + \"px\";\n\t\telement[\"width\"] = width;\n\t}\n\n\tpublic static setElementHeight(element:HTMLElement, height:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.height = height + \"px\";\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementX(element:HTMLElement, x:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.position = 'absolute';\n\t\telement.style.left = x + \"px\";\n\t}\n\n\tpublic static setElementY(element:HTMLElement, y:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.position = 'absolute';\n\t\telement.style.top = y + \"px\";\n\t}\n\n\tpublic static getElementVisibility(element:HTMLElement):boolean\n\t{\n\t\tif(!element) return false;\n\t\treturn element.style.visibility == 'visible';\n\t}\n\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean)\n\t{\n\t\tif(!element) return;\n\t\tif (visible) {\n\t\t\telement.style.visibility = 'visible';\n\t\t} else {\n\t\t\telement.style.visibility = 'hidden';\n\t\t}\n\t}\n\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number)\n\t{\n\t\tif (element instanceof HTMLCanvasElement) {\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\n\t\t\tcontext.globalAlpha = alpha;\n\t\t}\n\t}\n\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false)\n\t{\n\t\tif(!element) return;\n\t\tif (absolute) {\n\t\t\telement.style.position = \"absolute\";\n\t\t} else {\n\t\t\telement.style.position = \"relative\";\n\t\t}\n\n\t\telement.style.left = x + \"px\";\n\t\telement.style.top = y + \"px\";\n\t}\n}\n\nexport = CSS;",
    "/**\n *\n */\nclass ColorUtils\n{\n\tpublic static float32ColorToARGB(float32Color:number):number[]\n\t{\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24;\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\n\t\tvar b:number = float32Color & 0xff;\n\t\tvar result:number[] = [ a, r , g , b ];\n\n\t\treturn result;\n\t}\n\n\tpublic static ARGBtoFloat32(a:number, r:number, g:number, b:number):number\n\t{\n\t\treturn ((a << 24) | (r << 16) | (g << 8) | b);\n\t}\n\n\tprivate static componentToHex(c:number):string\n\t{\n\t\tvar hex = c.toString(16);\n\t\treturn hex.length == 1? \"0\" + hex : hex;\n\t}\n\n\tpublic static RGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n\n\tpublic static ARGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n}\n\nexport = ColorUtils;",
    "import PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\n\n/**\n *\n */\nclass Debug\n{\n\tpublic static THROW_ERRORS:boolean = true;\n\tpublic static ENABLE_LOG:boolean = true;\n\tpublic static LOG_PI_ERRORS:boolean = true;\n\n\tprivate static keyword:string = null;\n\n\tpublic static breakpoint():void\n\t{\n\t\tDebug['break']();\n\t}\n\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true)\n\t{\n\t\tif (!enable)\n\t\t\tDebug.keyword = null;\n\t\telse\n\t\t\tDebug.keyword = str;\n\t}\n\n\tpublic static throwPIR(clss:string, fnc:string, msg:string)\n\t{\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\n\n\t\tif (Debug.THROW_ERRORS) {\n\t\t\tif (Debug.keyword) {\n\t\t\t\tvar e:string = clss + fnc + msg;\n\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\n\t\t}\n\t}\n\n\tprivate static logPIR(clss:string, fnc:string, msg:string = '')\n\t{\n\t\tif (Debug.LOG_PI_ERRORS)\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\n\t}\n\n\tpublic static log(...args:any[])\n\t{\n\t\tif (Debug.ENABLE_LOG)\n\t\t\tconsole.log(args);\n\t}\n}\n\nexport = Debug;",
    "declare var SIMD:any;\n\n/**\n *\n */\nclass Extensions\n{\n\tpublic static SIMD:boolean = Boolean(typeof(SIMD) !== \"undefined\");\n}\n\nexport = Extensions;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nclass ImageUtils\n{\n\tprivate static MAX_SIZE:number = 2048;\n\n\tpublic static isImage2DValid(image2D:Image2D):boolean\n\t{\n\t\tif (image2D == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image2D.width, image2D.powerOfTwo) && ImageUtils.isDimensionValid(image2D.height, image2D.powerOfTwo);\n\t}\n\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\n\t{\n\t\tif (image == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image.width) && ImageUtils.isDimensionValid(image.height);\n\t}\n\n\tpublic static isDimensionValid(d:number, powerOfTwo:boolean = true):boolean\n\t{\n\t\treturn d >= 1 && d <= ImageUtils.MAX_SIZE && (!powerOfTwo || ImageUtils.isPowerOfTwo(d));\n\t}\n\n\tpublic static isPowerOfTwo(value:number):boolean\n\t{\n\t\treturn value? ((value & -value) == value) : false;\n\t}\n\n\tpublic static getBestPowerOf2(value:number):number\n\t{\n\t\tvar p:number = 1;\n\n\t\twhile (p < value)\n\t\t\tp <<= 1;\n\n\t\tif (p > ImageUtils.MAX_SIZE)\n\t\t\tp = ImageUtils.MAX_SIZE;\n\n\t\treturn p;\n\t}\n}\n\nexport = ImageUtils",
    "import BitmapImage2D            = require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport CPUCanvas            = require(\"awayjs-core/lib/image/CPUCanvas\");\nimport Matrix                    = require(\"awayjs-core/lib/geom/Matrix\");\nimport Rectangle                = require(\"awayjs-core/lib/geom/Rectangle\");\n\nclass MipmapGenerator {\n    private static _mipMaps = [];\n    private static _mipMapUses = [];\n\n    private static _matrix:Matrix = new Matrix();\n    private static _rect:Rectangle = new Rectangle();\n    private static _source:BitmapImage2D;\n\n    /**\n     * Uploads a BitmapImage2D with mip maps to a target Texture object.\n     * @param source The source to upload.\n     * @param target The target Texture to upload to.\n     * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\n     * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\n     */\n    public static _generateMipMaps(source:HTMLElement, output?:Array<BitmapImage2D>, alpha?:boolean);\n    public static _generateMipMaps(source:BitmapImage2D, output?:Array<BitmapImage2D>, alpha?:boolean);\n    public static _generateMipMaps(source:any, output?:Array<BitmapImage2D>, alpha:boolean = false) {\n        var w:number = source.width;\n        var h:number = source.height;\n        var i:number = 0;\n\n        var mipmap:BitmapImage2D;\n\n        MipmapGenerator._rect.width = w;\n        MipmapGenerator._rect.height = h;\n\n        //use (OR) to create non-square texture mipmaps\n        while (w >= 1 || h >= 1) {\n\n            mipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\n\n            if (alpha)\n                mipmap.fillRect(MipmapGenerator._rect, 0);\n\n\n            MipmapGenerator._matrix.a = MipmapGenerator._rect.width / source.width;\n            MipmapGenerator._matrix.d = MipmapGenerator._rect.height / source.height;\n            //todo: add support for NPOT textures\n            if (document) {\n                mipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\n            } else {\n                if (source.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\n                    //for BitmapImage2D\n                    var bitmapImage:BitmapImage2D = <BitmapImage2D> source;\n                    bitmapImage.lock();\n                    mipmap.lock();\n                    this.downsampleImage(bitmapImage.getImageData(), mipmap.getImageData());\n                    mipmap.unlock();\n                    bitmapImage.unlock();\n                }else if(source.constructor.toString().indexOf(\"CPUCanvas\") > -1){\n                    this.downsampleImage(source.getImageData(), mipmap.getImageData());\n                } else {\n                    //for imageData\n                    this.downsampleImage(source, mipmap.getImageData());\n                }\n            }\n\n            w >>= 1;\n            h >>= 1;\n\n            MipmapGenerator._rect.width = w > 1 ? w : 1;\n            MipmapGenerator._rect.height = h > 1 ? h : 1;\n\n            i++;\n        }\n    }\n\n    private static _getMipmapHolder(mipMapHolder:BitmapImage2D, newW:number, newH:number):BitmapImage2D {\n        if (mipMapHolder) {\n            if (mipMapHolder.width == newW && mipMapHolder.height == newH)\n                return mipMapHolder;\n\n            MipmapGenerator._freeMipMapHolder(mipMapHolder);\n        }\n\n        if (!MipmapGenerator._mipMaps[newW]) {\n            MipmapGenerator._mipMaps[newW] = [];\n            MipmapGenerator._mipMapUses[newW] = [];\n        }\n\n        if (!MipmapGenerator._mipMaps[newW][newH]) {\n            mipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapImage2D(newW, newH, true);\n            MipmapGenerator._mipMapUses[newW][newH] = 1;\n        } else {\n            MipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\n            mipMapHolder = MipmapGenerator._mipMaps[newW][newH];\n        }\n\n        return mipMapHolder;\n    }\n\n    public static _freeMipMapHolder(mipMapHolder:BitmapImage2D) {\n        var holderWidth:number = mipMapHolder.width;\n        var holderHeight:number = mipMapHolder.height;\n\n        if (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\n            MipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\n            MipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\n        }\n    }\n\n    public static downsampleImage(bitmap:ImageData, destBitmap:ImageData):ImageData {\n        var box:BoxFilter = new BoxFilter();\n        var xkernel:PolyphaseKernel = new PolyphaseKernel(box, bitmap.width, destBitmap.width, 4);\n        var ykernel:PolyphaseKernel = new PolyphaseKernel(box, bitmap.height, destBitmap.height, 4);\n\n        var tempBitmap:number[] = [];//destBitmap.width, bitmap.height\n\n        var scale:number = 0;\n        var iscale:number = 0;\n        var kernelLength:number = 0;\n        var kernelWidth:number = 0;\n        var kernelWindowSize:number = 0;\n        var sumR:number = 0;\n        var sumG:number = 0;\n        var sumB:number = 0;\n        var sumA:number = 0;\n        var center:number;\n        var left:number;\n        var i:number = 0;\n        var j:number = 0;\n        var index:number = 0;\n\n        for (var y:number = 0; y < bitmap.height; y++) {\n            kernelLength = xkernel.len;\n            scale = kernelLength / bitmap.width;\n            iscale = 1.0 / scale;\n            kernelWidth = xkernel.width;\n            kernelWindowSize = xkernel.windowSize;\n\n            for (i = 0; i < kernelLength; i++) {\n                center = (0.5 + i) * iscale;\n                left = Math.floor(center - kernelWidth);\n                sumR = 0;\n                sumG = 0;\n                sumB = 0;\n                sumA = 0;\n                for (var j:number = 0; j < kernelWindowSize; ++j) {\n                    index = (y * bitmap.width + (left + j) ) * 4;\n                    var colorR:number = bitmap.data[index];\n                    var colorG:number = bitmap.data[index + 1];\n                    var colorB:number = bitmap.data[index + 2];\n                    var colorA:number = bitmap.data[index + 3];\n\n                    var value:number = xkernel.valueAt(i, j);\n                    sumR += value * colorR;\n                    sumG += value * colorG;\n                    sumB += value * colorB;\n                    sumA += value * colorA;\n                }\n\n                index = (y * destBitmap.width + i) * 4;\n                tempBitmap[index] = sumR;\n                tempBitmap[index + 1] = sumG;\n                tempBitmap[index + 2] = sumB;\n                tempBitmap[index + 3] = sumA;\n            }\n        }\n\n        for (var x:number = 0; x < destBitmap.width; x++) {\n            kernelLength = ykernel.len;\n            scale = kernelLength / bitmap.height;\n            iscale = 1.0 / scale;\n            kernelWidth = ykernel.width;\n            kernelWindowSize = ykernel.windowSize;\n\n            for (i = 0; i < kernelLength; i++) {\n                center = (0.5 + i) * iscale;\n\n                left = Math.floor(center - kernelWidth);\n\n                sumR = 0;\n                sumG = 0;\n                sumB = 0;\n                sumA = 0;\n                for (j = 0; j < kernelWindowSize; ++j) {\n                    index = ((j + left) * destBitmap.width + x) * 4;\n                    var colorR:number = tempBitmap[index];\n                    var colorG:number = tempBitmap[index + 1];\n                    var colorB:number = tempBitmap[index + 2];\n                    var colorA:number = tempBitmap[index + 3];\n\n                    var value:number = ykernel.valueAt(i, j);\n                    sumR += value * colorR;\n                    sumG += value * colorG;\n                    sumB += value * colorB;\n                    sumA += value * colorA;\n                }\n\n                index = (i * destBitmap.width + x) * 4;\n                destBitmap.data[index] = sumR;\n                destBitmap.data[index + 1] = sumG;\n                destBitmap.data[index + 2] = sumB;\n                destBitmap.data[index + 3] = sumA;\n            }\n        }\n\n        return destBitmap;\n    }\n}\nclass PolyphaseKernel {\n    public len:number;\n    public width:number;\n    public windowSize:number;\n    public data:number[];\n\n    constructor(f:BoxFilter, srcLength:number, dstLength:number, samples:number) {\n\n        var scale:number = dstLength / srcLength;\n        var iscale:number = 1.0 / scale;\n\n        if (scale > 1) {\n            // Upsampling.\n            samples = 1;\n            scale = 1;\n        }\n\n        this.len = dstLength;\n        this.width = f.width * iscale;\n        this.windowSize = Math.ceil(this.width * 2);\n\n        this.data = [];\n\n        for (var i:number = 0; i < this.len; i++) {\n            var center:number = (0.5 + i) * iscale;\n\n            var left:number = Math.floor(center - this.width);\n\n            var total:number = 0.0;\n            for (var j:number = 0; j < this.windowSize; j++) {\n                var sample:number = f.sampleBox(left + j - center, scale, samples);\n\n                //printf(\"%f %X\\n\", sample, *(uint32 *)&sample);\n\n                this.data[i * this.windowSize + j] = sample;\n                total += sample;\n            }\n\n            // normalize weights.\n            for (var j:number = 0; j < this.windowSize; j++) {\n                this.data[i * this.windowSize + j] /= total;\n            }\n        }\n    }\n\n    public valueAt(column:number, x:number):number {\n        return this.data[column * this.windowSize + x];\n    }\n}\n\nclass BoxFilter {\n    public get width():number {\n        return 0.5;\n    }\n\n    public sampleBox(x:number, scale:number, samples:number):number {\n        var sum:number = 0;\n        var isamples:number = 1.0 / samples;\n\n        for (var s:number = 0; s < samples; s++) {\n            var p:number = (x + (s + 0.5) * isamples) * scale;\n            var value:number = this.evaluate(p);\n            sum += value;\n        }\n\n        return sum * isamples;\n    }\n\n    public evaluate(x:number):number {\n        if (Math.abs(x) <= this.width) return 1.0;\n        else return 0.0;\n    }\n}\nexport = MipmapGenerator;",
    "import getTimer\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nclass RequestAnimationFrame\n{\n\tprivate _callback:Function;\n\tprivate _callbackContext:Object;\n\tprivate _active:boolean = false;\n\tprivate _rafUpdateFunction:any;\n\tprivate _prevTime:number;\n\tprivate _dt:number;\n\tprivate _currentTime:number;\n\tprivate _argsArray:Array<any> = new Array();\n\tprivate _getTimer:Function;\n\n\tconstructor(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._getTimer = getTimer;\n\n\t\tthis.setCallback(callback, callbackContext);\n\n\t\tthis._rafUpdateFunction = () => {\n\t\t\tif (this._active)\n\t\t\t\tthis._tick();\n\t\t}\n\n\t\tthis._argsArray.push(this._dt);\n\t}\n\n\t// Public\n\n\t/**\n\t *\n\t * @param callback\n\t * @param callbackContext\n\t */\n\tpublic setCallback(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._callback = callback;\n\t\tthis._callbackContext = callbackContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic start()\n\t{\n\t\tthis._prevTime = this._getTimer();\n\t\tthis._active = true;\n\n\t\tif(window) {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\t\t\t} else {\n\t\t\t\tif (window['mozRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\n\t\t\t\telse if (window['webkitRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\n\t\t\t\telse if (window['oRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic stop()\n\t{\n\t\tthis._active = false;\n\t}\n\n\t// Get / Set\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic get active():boolean\n\t{\n\t\treturn this._active;\n\t}\n\n\t// Private\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _tick():void\n\t{\n\t\tthis._currentTime = this._getTimer();\n\t\tthis._dt = this._currentTime - this._prevTime;\n\t\tthis._argsArray[0] = this._dt;\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\n\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\n\t\tthis._prevTime = this._currentTime;\n\t}\n\n\n}\n\nexport = RequestAnimationFrame;",
    "import ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TimerEvent\t\t\t\t= require(\"awayjs-core/lib/events/TimerEvent\");\n\nclass Timer extends EventDispatcher\n{\n\tprivate _delay:number;\n\tprivate _repeatCount:number = 0;\n\tprivate _currentCount:number = 0;\n\tprivate _iid:number;\n\tprivate _running:boolean = false;\n\n\tconstructor(delay:number, repeatCount:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._delay = delay;\n\t\tthis._repeatCount = repeatCount;\n\n\t\tif (isNaN(delay) || delay < 0)\n\t\t\tthrow new ErrorBase(\"Delay is negative or not a number\");\n\t}\n\n\tpublic get currentCount():number\n\t{\n\t\treturn this._currentCount;\n\t}\n\n\tpublic get delay():number\n\t{\n\t\treturn this._delay;\n\t}\n\n\tpublic set delay(value:number)\n\t{\n\t\tthis._delay = value;\n\n\t\tif (this._running) {\n\t\t\tthis.stop();\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\tpublic get repeatCount():number\n\t{\n\t\treturn this._repeatCount;\n\t}\n\n\tpublic set repeatCount(value:number)\n\t{\n\t\tthis._repeatCount = value;\n\t}\n\n\tpublic reset():void\n\t{\n\t\tif (this._running)\n\t\t\tthis.stop();\n\n\t\tthis._currentCount = 0;\n\t}\n\n\tpublic get running():boolean\n\t{\n\t\treturn this._running;\n\t}\n\n\tpublic start():void\n\t{\n\t\tthis._running = true;\n\t\tclearInterval(this._iid);\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\n\t}\n\n\tpublic stop():void\n\t{\n\t\tthis._running = false;\n\t\tclearInterval(this._iid);\n\t}\n\n\tprivate tick():void\n\t{\n\t\tthis._currentCount++;\n\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\n\n\t\t\tthis.stop();\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t}\n\t}\n}\n\nexport = Timer;",
    "class XmlUtils {\n\n\tpublic static getChildrenWithTag(node:Node, tag:string):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(node) {\n\t\t\tvar num:number = node.childNodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = node.childNodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.nodeName == tag) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static filterListByParam(nodes:NodeList, paramName:string, paramValue):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(nodes) {\n\t\t\tvar num:number = nodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = nodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.attributes.getNamedItem(paramName).value == paramValue) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static strToXml(str:string):Node {\n\t\tvar parser:DOMParser = new DOMParser();\n\t\tvar node:Node = parser.parseFromString(str, \"text/xml\");\n\t\treturn node;\n\t}\n\n\tpublic static nodeToString(node:Node):string {\n\t\tif(!node) return \"\";\n\t\tvar str = (new XMLSerializer()).serializeToString(node);\n\t\treturn str;\n\t}\n\n\tpublic static readAttributeValue(node:Node, attrName:string):string {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn \"\";\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\tif(!attribute) {\n\t\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", attribute does not exist.\");\n\t\t\treturn \"\";\n\t\t}\n\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", value: \" + attribute.value);\n\t\treturn attribute.value;\n\t}\n\n\tpublic static writeAttributeValue(node:Node, attrName:string, attrValue:string) {\n\t\tvar attribute:Attr = new Attr();\n\t\tattribute.name = attrName;\n\t\tattribute.value = attrValue;\n\t\tattribute = node.attributes.setNamedItem(attribute);\n\t\tconsole.log(\"XmlUltils - writeAttributeValue() - name: \" + attribute.name + \", value: \" + attribute.value);\n\t}\n\n\tpublic static hasAttribute(node:Node, attrName:string):boolean {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\treturn attribute != null;\n\t}\n}\nexport = XmlUtils;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "/**\n *\n *\n * @returns {number}\n */\nfunction getTimer():number\n{\n\t// number milliseconds of 1970/01/01\n\t// this different to AS3 implementation which gets the number of milliseconds\n\t// since instance of Flash player was initialised\n\treturn Date.now();\n}\n\nexport = getTimer;"
  ],
  "sourceRoot": ""
}