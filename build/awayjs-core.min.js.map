{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-core.js",
    "../index.ts",
    "lib/lib/attributes/AttributesBuffer.ts",
    "lib/lib/attributes/AttributesView.ts",
    "lib/lib/attributes/Byte1Attributes.ts",
    "lib/lib/attributes/Byte2Attributes.ts",
    "lib/lib/attributes/Byte3Attributes.ts",
    "lib/lib/attributes/Byte4Attributes.ts",
    "lib/lib/attributes/Float1Attributes.ts",
    "lib/lib/attributes/Float2Attributes.ts",
    "lib/lib/attributes/Float3Attributes.ts",
    "lib/lib/attributes/Float4Attributes.ts",
    "lib/lib/attributes/Short2Attributes.ts",
    "lib/lib/attributes/Short3Attributes.ts",
    "lib/attributes.ts",
    "lib/lib/audio/WaveAudio.ts",
    "lib/audio.ts",
    "lib/lib/errors/AbstractMethodError.ts",
    "lib/lib/errors/ArgumentError.ts",
    "lib/lib/errors/DocumentError.ts",
    "lib/lib/errors/ErrorBase.ts",
    "lib/lib/errors/PartialImplementationError.ts",
    "lib/lib/errors/RangeError.ts",
    "lib/errors.ts",
    "lib/lib/events/AssetEvent.ts",
    "lib/lib/events/EventBase.ts",
    "lib/lib/events/EventDispatcher.ts",
    "lib/lib/events/LoaderEvent.ts",
    "lib/lib/events/ParserEvent.ts",
    "lib/lib/events/ProjectionEvent.ts",
    "lib/lib/events/TimerEvent.ts",
    "lib/lib/events/URLLoaderEvent.ts",
    "lib/events.ts",
    "lib/lib/geom/Box.ts",
    "lib/lib/geom/ColorTransform.ts",
    "lib/lib/geom/MathConsts.ts",
    "lib/lib/geom/Matrix3DUtils.ts",
    "lib/lib/geom/Matrix3D.ts",
    "lib/lib/geom/Matrix.ts",
    "lib/lib/geom/Orientation3D.ts",
    "lib/lib/geom/Plane3D.ts",
    "lib/lib/geom/PlaneClassification.ts",
    "lib/lib/geom/Point.ts",
    "lib/lib/geom/PoissonLookup.ts",
    "lib/lib/geom/Quaternion.ts",
    "lib/lib/geom/Rectangle.ts",
    "lib/lib/geom/Sphere.ts",
    "lib/lib/geom/Vector3D.ts",
    "lib/geom.ts",
    "lib/lib/image/BitmapImage2D.ts",
    "lib/lib/image/BitmapImageChannel.ts",
    "lib/lib/image/BitmapImageCube.ts",
    "lib/lib/image/BlendMode.ts",
    "lib/lib/image/CPUCanvas.ts",
    "lib/lib/image/CPURenderingContext2D.ts",
    "lib/lib/image/Image2D.ts",
    "lib/lib/image/ImageBase.ts",
    "lib/lib/image/ImageCube.ts",
    "lib/lib/image/ImageData.ts",
    "lib/lib/image/Sampler2D.ts",
    "lib/lib/image/SamplerBase.ts",
    "lib/lib/image/SamplerCube.ts",
    "lib/lib/image/SpecularImage2D.ts",
    "lib/image.ts",
    "lib/lib/library/AbstractionBase.ts",
    "lib/lib/library/AssetBase.ts",
    "lib/lib/library/AssetLibraryBundle.ts",
    "lib/lib/library/AssetLibraryIterator.ts",
    "lib/lib/library/AssetLibrary.ts",
    "lib/lib/library/ConflictPrecedence.ts",
    "lib/lib/library/ConflictStrategyBase.ts",
    "lib/lib/library/ConflictStrategy.ts",
    "lib/lib/library/ErrorConflictStrategy.ts",
    "lib/lib/library/IDUtil.ts",
    "lib/lib/library/IgnoreConflictStrategy.ts",
    "lib/lib/library/LoaderContext.ts",
    "lib/lib/library/LoaderInfo.ts",
    "lib/lib/library/Loader.ts",
    "lib/lib/library/NumSuffixConflictStrategy.ts",
    "lib/library.ts",
    "lib/lib/managers/AudioChannel.ts",
    "lib/lib/managers/AudioManager.ts",
    "lib/lib/managers/EventAudioChannel.ts",
    "lib/lib/managers/StreamingAudioChannel.ts",
    "lib/lib/managers/WebAudioChannel.ts",
    "lib/managers.ts",
    "lib/lib/net/CrossDomainPolicy.ts",
    "lib/lib/net/URLLoaderDataFormat.ts",
    "lib/lib/net/URLLoader.ts",
    "lib/lib/net/URLRequestMethod.ts",
    "lib/lib/net/URLRequest.ts",
    "lib/lib/net/URLVariables.ts",
    "lib/net.ts",
    "lib/lib/parsers/Image2DParser.ts",
    "lib/lib/parsers/ImageCubeParser.ts",
    "lib/lib/parsers/ParserBase.ts",
    "lib/lib/parsers/ParserDataFormat.ts",
    "lib/lib/parsers/ParserUtils.ts",
    "lib/lib/parsers/ResourceDependency.ts",
    "lib/lib/parsers/TextureAtlasParser.ts",
    "lib/lib/parsers/WaveAudioParser.ts",
    "lib/parsers.ts",
    "lib/lib/projections/CoordinateSystem.ts",
    "lib/lib/projections/FreeMatrixProjection.ts",
    "lib/lib/projections/ObliqueNearPlaneProjection.ts",
    "lib/lib/projections/OrthographicOffCenterProjection.ts",
    "lib/lib/projections/OrthographicProjection.ts",
    "lib/lib/projections/PerspectiveProjection.ts",
    "lib/lib/projections/ProjectionBase.ts",
    "lib/projections.ts",
    "lib/lib/ui/Keyboard.ts",
    "lib/ui.ts",
    "lib/lib/utils/BitmapImageUtils.ts",
    "lib/lib/utils/ByteArrayBase.ts",
    "lib/lib/utils/ByteArrayBuffer.ts",
    "lib/lib/utils/ByteArray.ts",
    "lib/lib/utils/CSS.ts",
    "lib/lib/utils/ColorUtils.ts",
    "lib/lib/utils/Debug.ts",
    "lib/lib/utils/Extensions.ts",
    "lib/lib/utils/ImageUtils.ts",
    "lib/lib/utils/MipmapGenerator.ts",
    "lib/lib/utils/RequestAnimationFrame.ts",
    "lib/lib/utils/Timer.ts",
    "lib/lib/utils/XmlUtils.ts",
    "lib/lib/utils/getTimer.ts",
    "lib/utils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    1,
    "module",
    "attributes",
    "audio",
    "errors",
    "events",
    "geom",
    "image",
    "library",
    "managers",
    "net",
    "parsers",
    "projections",
    "ui",
    "utils",
    "Loader",
    "enableParser",
    "Image2DParser",
    "ImageCubeParser",
    "TextureAtlasParser",
    "WaveAudioParser",
    "awayjs-core/lib/attributes",
    "awayjs-core/lib/audio",
    "awayjs-core/lib/errors",
    "awayjs-core/lib/events",
    "awayjs-core/lib/geom",
    "awayjs-core/lib/image",
    "awayjs-core/lib/library",
    "awayjs-core/lib/managers",
    "awayjs-core/lib/net",
    "awayjs-core/lib/parsers",
    "awayjs-core/lib/projections",
    "awayjs-core/lib/ui",
    "awayjs-core/lib/utils",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "Object",
    "create",
    "AssetBase_1",
    "AttributesBuffer",
    "_super",
    "stride",
    "count",
    "_count",
    "_stride",
    "_newStride",
    "_viewVOs",
    "Array",
    "_buffer",
    "ArrayBuffer",
    "_bufferView",
    "Uint8Array",
    "byteLength",
    "defineProperty",
    "get",
    "assetType",
    "enumerable",
    "configurable",
    "_lengthDirty",
    "_updateLength",
    "set",
    "value",
    "resize",
    "_contentDirty",
    "buffer",
    "invalidate",
    "clear",
    "clone",
    "attributesBuffer",
    "bufferView",
    "len",
    "view",
    "_internalClone",
    "getView",
    "index",
    "_setAttributes",
    "viewIndex",
    "arrayBufferView",
    "offset",
    "array",
    "viewVO",
    "vLength",
    "vOffset",
    "vCount",
    "subarray",
    "_getLocalArrayBuffer",
    "localBuffer",
    "localBufferView",
    "_addView",
    "ViewVO",
    "push",
    "_index",
    "_removeView",
    "splice",
    "dispose",
    "_getOffset",
    "j",
    "newLength",
    "newBuffer",
    "newView",
    "vOldOffset",
    "oldOffset",
    "Math",
    "min",
    "default",
    "size",
    "dimensions",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-core/lib/attributes/AttributesView",
    "AttributesBuffer_1",
    "AttributesView",
    "arrayClass",
    "attributesBufferCount",
    "unsigned",
    "_arrayClass",
    "_size",
    "BYTES_PER_ELEMENT",
    "_dimensions",
    "_attributesBuffer",
    "_unsigned",
    "values",
    "_localArrayBuffer",
    "_cloneCache",
    "cloneCache",
    "awayjs-core/lib/attributes/Byte1Attributes",
    "AttributesView_1",
    "Byte1Attributes",
    "attributesBufferLength",
    "Int8Array",
    "awayjs-core/lib/attributes/Byte2Attributes",
    "Byte2Attributes",
    "awayjs-core/lib/attributes/Byte3Attributes",
    "Byte3Attributes",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "Float1Attributes",
    "Float32Array",
    "awayjs-core/lib/attributes/Float2Attributes",
    "Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "Float3Attributes",
    "awayjs-core/lib/attributes/Float4Attributes",
    "Float4Attributes",
    "awayjs-core/lib/attributes/Short2Attributes",
    "Short2Attributes",
    "Uint16Array",
    "Int16Array",
    "awayjs-core/lib/attributes/Short3Attributes",
    "Short3Attributes",
    "Byte1Attributes_1",
    "Byte2Attributes_1",
    "Byte3Attributes_1",
    "Byte4Attributes_1",
    "Float1Attributes_1",
    "Float2Attributes_1",
    "Float3Attributes_1",
    "Float4Attributes_1",
    "Short2Attributes_1",
    "Short3Attributes_1",
    "awayjs-core/lib/audio/WaveAudio",
    "AudioManager_1",
    "WaveAudio",
    "_volume",
    "_audioChannel",
    "volume",
    "currentTime",
    "duration",
    "stop",
    "play",
    "loop",
    "getChannel",
    "id",
    "newInstance",
    "name",
    "awayjs-core/lib/managers/AudioManager",
    "WaveAudio_1",
    "awayjs-core/lib/errors/AbstractMethodError",
    "ErrorBase_1",
    "AbstractMethodError",
    "message",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-core/lib/errors/ArgumentError",
    "ArgumentError",
    "awayjs-core/lib/errors/DocumentError",
    "DocumentError",
    "DOCUMENT_DOES_NOT_EXIST",
    "ErrorBase",
    "_name",
    "_errorID",
    "_messsage",
    "awayjs-core/lib/errors/PartialImplementationError",
    "PartialImplementationError",
    "dependency",
    "awayjs-core/lib/errors/RangeError",
    "RangeError",
    "AbstractMethodError_1",
    "ArgumentError_1",
    "DocumentError_1",
    "PartialImplementationError_1",
    "RangeError_1",
    "awayjs-core/lib/events/AssetEvent",
    "EventBase_1",
    "AssetEvent",
    "type",
    "asset",
    "prevName",
    "_asset",
    "_prevName",
    "INVALIDATE",
    "DISPOSE",
    "CLEAR",
    "RENAME",
    "ENTER_FRAME",
    "EXIT_FRAME",
    "ASSET_CONFLICT_RESOLVED",
    "ASSET_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "awayjs-core/lib/events/EventBase",
    "EventBase",
    "undefined",
    "target",
    "awayjs-core/lib/events/EventDispatcher",
    "EventDispatcher",
    "listenerObjects",
    "addEventListener",
    "listener",
    "ListenerObject",
    "removeEventListener",
    "numListeners",
    "dispatchEvent",
    "event",
    "hasEventListener",
    "getEventListenerIndex",
    "listeners",
    "awayjs-core/lib/events/IEventDispatcher",
    "awayjs-core/lib/events/LoaderEvent",
    "LoaderEvent",
    "url",
    "content",
    "assets",
    "_url",
    "_content",
    "_assets",
    "LOAD_COMPLETE",
    "awayjs-core/lib/events/ParserEvent",
    "ParserEvent",
    "_message",
    "PARSE_COMPLETE",
    "PARSE_ERROR",
    "READY_FOR_DEPENDENCIES",
    "awayjs-core/lib/events/ProjectionEvent",
    "ProjectionEvent",
    "projection",
    "_projection",
    "MATRIX_CHANGED",
    "awayjs-core/lib/events/TimerEvent",
    "TimerEvent",
    "TIMER",
    "TIMER_COMPLETE",
    "awayjs-core/lib/events/URLLoaderEvent",
    "URLLoaderEvent",
    "urlLoader",
    "_urlLoader",
    "HTTP_STATUS",
    "LOAD_ERROR",
    "LOAD_PROGRESS",
    "LOAD_START",
    "AssetEvent_1",
    "EventDispatcher_1",
    "LoaderEvent_1",
    "ParserEvent_1",
    "ProjectionEvent_1",
    "TimerEvent_1",
    "URLLoaderEvent_1",
    "awayjs-core/lib/geom/Box",
    "Vector3D_1",
    "Box",
    "x",
    "y",
    "z",
    "width",
    "height",
    "depth",
    "val",
    "_bottomRightBack",
    "_topLeftFront",
    "contains",
    "containsPoint",
    "position",
    "containsBox",
    "box",
    "copyFrom",
    "sourceBox",
    "equals",
    "toCompare",
    "inflate",
    "dx",
    "dy",
    "dz",
    "inflatePoint",
    "delta",
    "intersection",
    "toIntersect",
    "intersects",
    "rayIntersection",
    "direction",
    "targetNormal",
    "halfExtentsX",
    "halfExtentsY",
    "halfExtentsZ",
    "centerX",
    "centerY",
    "centerZ",
    "px",
    "py",
    "pz",
    "vx",
    "vy",
    "vz",
    "ix",
    "iy",
    "iz",
    "rayEntryDistance",
    "closestPointToPoint",
    "point",
    "isEmpty",
    "offsetPosition",
    "setEmpty",
    "setBoundIdentity",
    "Number",
    "MAX_VALUE",
    "setTo",
    "xa",
    "ya",
    "za",
    "widtha",
    "heighta",
    "deptha",
    "toString",
    "union",
    "toUnion",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/geom/ColorTransform",
    "ColorUtils_1",
    "ColorTransform",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "argb",
    "float32ColorToARGB",
    "source",
    "copyTo",
    "destination",
    "prepend",
    "ct",
    "awayjs-core/lib/utils/ColorUtils",
    "awayjs-core/lib/geom/MathConsts",
    "MathConsts",
    "RADIANS_TO_DEGREES",
    "PI",
    "DEGREES_TO_RADIANS",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "Matrix3D_1",
    "Matrix3DUtils",
    "quaternion2matrix",
    "quarternion",
    "m",
    "w",
    "xx",
    "xy",
    "xz",
    "xw",
    "yy",
    "yz",
    "yw",
    "zz",
    "zw",
    "raw",
    "RAW_DATA_CONTAINER",
    "copyRawDataFrom",
    "getForward",
    "v",
    "copyColumnTo",
    "normalize",
    "getUp",
    "getRight",
    "compare",
    "m1",
    "m2",
    "r1",
    "r2",
    "rawData",
    "copyRawDataTo",
    "lookAt",
    "matrix",
    "pos",
    "dir",
    "up",
    "dirN",
    "upN",
    "lftN",
    "crossProduct",
    "dotProduct",
    "reflection",
    "plane",
    "c",
    "ab2",
    "ac2",
    "bc2",
    "transformVector",
    "vector",
    "result",
    "g",
    "k",
    "h",
    "deltaTransformVector",
    "getTranslation",
    "transform",
    "deltaTransformVectors",
    "vin",
    "vout",
    "outIndex",
    "CALCULATION_MATRIX",
    "awayjs-core/lib/geom/Matrix3D",
    "Box_1",
    "MathConsts_1",
    "Orientation3D_1",
    "Matrix3D",
    "_position",
    "_positionDirty",
    "identity",
    "append",
    "lhs",
    "lrd",
    "m111",
    "m112",
    "m113",
    "m114",
    "m121",
    "m122",
    "m123",
    "m124",
    "m131",
    "m132",
    "m133",
    "m134",
    "m141",
    "m142",
    "m143",
    "m144",
    "m211",
    "m212",
    "m213",
    "m214",
    "m221",
    "m222",
    "m223",
    "m224",
    "m231",
    "m232",
    "m233",
    "m234",
    "m241",
    "m242",
    "m243",
    "m244",
    "appendRotation",
    "degrees",
    "axis",
    "getAxisRotation",
    "appendSkew",
    "xSkew",
    "ySkew",
    "zSkew",
    "tempRawData",
    "tempMatrix",
    "appendScale",
    "xScale",
    "yScale",
    "zScale",
    "appendTranslation",
    "copyColumnFrom",
    "column",
    "vector3D",
    "sourceRaw",
    "targetRaw",
    "transpose",
    "copyRowFrom",
    "row",
    "copyRowTo",
    "decompose",
    "orientationStyle",
    "q",
    "_components",
    "colX",
    "colY",
    "colZ",
    "scale",
    "skew",
    "scaleBy",
    "combine",
    "rot",
    "AXIS_ANGLE",
    "acos",
    "sqrt",
    "QUATERNION",
    "tr",
    "EULER_ANGLES",
    "asin",
    "atan2",
    "interpolate",
    "thisMat",
    "toMat",
    "percent",
    "interpolateTo",
    "invert",
    "determinant",
    "invertable",
    "abs",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "m41",
    "m42",
    "m43",
    "m44",
    "rhs",
    "prependRotation",
    "prependScale",
    "prependTranslation",
    "recompose",
    "components",
    "sin",
    "cos",
    "rotation",
    "angle",
    "transformBox",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "transformVectors",
    "rad",
    "tmp1",
    "tmp2",
    "invalidatePosition",
    "toFixed",
    "decimalPlace",
    "magnitude",
    "pow",
    "round",
    "awayjs-core/lib/geom/Orientation3D",
    "awayjs-core/lib/geom/Matrix",
    "Point_1",
    "Matrix",
    "tx",
    "ty",
    "concat",
    "a1",
    "c1",
    "tx1",
    "sourceMatrix",
    "createBox",
    "scaleX",
    "scaleY",
    "createGradientBox",
    "deltaTransformPoint",
    "norm",
    "multiply",
    "rotate",
    "sx",
    "sy",
    "transformPoint",
    "translate",
    "awayjs-core/lib/geom/Point",
    "Orientation3D",
    "awayjs-core/lib/geom/Plane3D",
    "PlaneClassification_1",
    "Plane3D",
    "_iAlignment",
    "ALIGN_XY_AXIS",
    "ALIGN_YZ_AXIS",
    "ALIGN_XZ_AXIS",
    "ALIGN_ANY",
    "fromPoints",
    "p0",
    "p1",
    "p2",
    "d1x",
    "d1y",
    "d1z",
    "d2x",
    "d2y",
    "d2z",
    "fromNormalAndPoint",
    "normal",
    "distance",
    "classifyPoint",
    "epsilon",
    "FRONT",
    "BACK",
    "INTERSECT",
    "awayjs-core/lib/geom/PlaneClassification",
    "PlaneClassification",
    "IN",
    "OUT",
    "Point",
    "add",
    "sourcePoint",
    "thickness",
    "invLength",
    "subtract",
    "pt1",
    "pt2",
    "polar",
    "awayjs-core/lib/geom/PoissonLookup",
    "PoissonLookup",
    "initDistributions",
    "_distributions",
    "getDistribution",
    "awayjs-core/lib/geom/Quaternion",
    "Matrix3DUtils_1",
    "Quaternion",
    "qa",
    "qb",
    "w1",
    "x1",
    "y1",
    "z1",
    "w2",
    "x2",
    "y2",
    "z2",
    "multiplyVector",
    "fromAxisAngle",
    "sin_a",
    "cos_a",
    "slerp",
    "dot",
    "s1",
    "s2",
    "lerp",
    "fromEulerAngles",
    "ax",
    "ay",
    "az",
    "halfX",
    "halfY",
    "halfZ",
    "cosX",
    "sinX",
    "cosY",
    "sinY",
    "cosZ",
    "sinZ",
    "toEulerAngles",
    "mag",
    "toMatrix3D",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "ww",
    "fromMatrix",
    "toRawData",
    "exclude4thRow",
    "rotatePoint",
    "awayjs-core/lib/geom/Rectangle",
    "Rectangle",
    "_bottomRight",
    "_topLeft",
    "containsRect",
    "rect",
    "sourceRect",
    "offsetPoint",
    "awayjs-core/lib/geom/Sphere",
    "Sphere",
    "radius",
    "det",
    "sqrtDet",
    "Vector3D",
    "lengthSquared",
    "angleBetween",
    "ascl",
    "bscl",
    "src",
    "decrementBy",
    "allFour",
    "incrementBy",
    "nearEquals",
    "tolerance",
    "negate",
    "project",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "ColorTransform_1",
    "Matrix_1",
    "Plane3D_1",
    "PoissonLookup_1",
    "Quaternion_1",
    "Rectangle_1",
    "Sphere_1",
    "awayjs-core/lib/image/BitmapImage2D",
    "Image2D_1",
    "BitmapImageUtils_1",
    "CPUCanvas_1",
    "BitmapImage2D",
    "transparent",
    "fillColor",
    "powerOfTwo",
    "_locked",
    "_transparent",
    "document",
    "_imageCanvas",
    "createElement",
    "_context",
    "getContext",
    "fillRect",
    "_rect",
    "draw",
    "colorTransform",
    "_imageData",
    "getImageData",
    "data",
    "putImageData",
    "copyChannel",
    "sourceBitmap",
    "destPoint",
    "sourceChannel",
    "destChannel",
    "imageData",
    "sourceData",
    "destData",
    "sourceOffset",
    "log",
    "destOffset",
    "sourceIndex",
    "destIndex",
    "copyPixels",
    "destRect",
    "getCanvas",
    "_copyPixels",
    "blendMode",
    "clipRect",
    "smoothing",
    "_draw",
    "color",
    "_fillRect",
    "getPixel",
    "pixelData",
    "getPixel32",
    "lock",
    "setArray",
    "inputArray",
    "setPixel",
    "setPixel32",
    "setPixels",
    "inputByteArray",
    "readUnsignedInt",
    "unlock",
    "_setSize",
    "awayjs-core/lib/image/CPUCanvas",
    "awayjs-core/lib/image/Image2D",
    "awayjs-core/lib/utils/BitmapImageUtils",
    "awayjs-core/lib/image/BitmapImageChannel",
    "BitmapImageChannel",
    "ALPHA",
    "BLUE",
    "GREEN",
    "RED",
    "awayjs-core/lib/image/BitmapImageCube",
    "BitmapImage2D_1",
    "ImageCube_1",
    "BitmapImageCube",
    "side",
    "posX",
    "negX",
    "posY",
    "negY",
    "posZ",
    "negZ",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-core/lib/image/BlendMode",
    "BlendMode",
    "ADD",
    "DARKEN",
    "DIFFERENCE",
    "ERASE",
    "HARDLIGHT",
    "INVERT",
    "LAYER",
    "LIGHTEN",
    "MULTIPLY",
    "NORMAL",
    "OVERLAY",
    "SCREEN",
    "SHADER",
    "SUBTRACT",
    "CPURenderingContext2D_1",
    "ImageData_1",
    "CPUCanvas",
    "reset",
    "contextId",
    "args",
    "_i",
    "arguments",
    "awayjs-core/lib/image/CPURenderingContext2D",
    "awayjs-core/lib/image/ImageData",
    "CPURenderingContext2D",
    "cpuCanvas",
    "point2",
    "restore",
    "setTransform",
    "save",
    "arc",
    "startAngle",
    "endAngle",
    "anticlockwise",
    "measureText",
    "text",
    "isPointInPath",
    "fillRule",
    "quadraticCurveTo",
    "cpx",
    "cpy",
    "imagedata",
    "dirtyX",
    "dirtyY",
    "dirtyWidth",
    "dirtyHeight",
    "fillText",
    "maxWidth",
    "createRadialGradient",
    "x0",
    "y0",
    "r0",
    "lineTo",
    "getLineDash",
    "fill",
    "createImageData",
    "imageDataOrSw",
    "sh",
    "createPattern",
    "repetition",
    "closePath",
    "clip",
    "clearRect",
    "moveTo",
    "sw",
    "applyPixel32",
    "floor",
    "copyPixel32",
    "fromX",
    "fromY",
    "fromIndex",
    "fillStyle",
    "parsedFillStyle",
    "colorStrings",
    "substring",
    "lastIndexOf",
    "split",
    "parsedA",
    "parseFloat",
    "parsedR",
    "parseInt",
    "parsedG",
    "parsedB",
    "bezierCurveTo",
    "cp1x",
    "cp1y",
    "cp2x",
    "cp2y",
    "drawImage",
    "offsetX",
    "offsetY",
    "canvasOffsetX",
    "canvasOffsetY",
    "canvasImageWidth",
    "canvasImageHeight",
    "indexOf",
    "bitmap",
    "drawBitmap",
    "htmlImage",
    "htmlCanvas",
    "htmlContext",
    "htmlImageData",
    "resultBitmap",
    "passBitmap",
    "canvas",
    "canvasImageData",
    "sampleBilinear",
    "sampleBox",
    "sample",
    "stroke",
    "strokeRect",
    "setLineDash",
    "segments",
    "strokeText",
    "beginPath",
    "arcTo",
    "createLinearGradient",
    "texture",
    "texelSizeX",
    "texelSizeY",
    "color00",
    "color10",
    "color01",
    "color11",
    "interColor0",
    "interpolateColor",
    "interColor1",
    "area",
    "xsize",
    "ysize",
    "toY",
    "ceil",
    "max",
    "toX",
    "awayjs-core/lib/image/IImageCanvas",
    "ImageBase_1",
    "ImageUtils_1",
    "Image2D",
    "_powerOfTwo",
    "_testDimensions",
    "isDimensionValid",
    "awayjs-core/lib/image/ImageBase",
    "awayjs-core/lib/utils/ImageUtils",
    "ImageBase",
    "_pFormat",
    "ImageCube",
    "ImageData",
    "awayjs-core/lib/image/Sampler2D",
    "SamplerBase_1",
    "Sampler2D",
    "repeat",
    "smooth",
    "mipmap",
    "_repeat",
    "_updateRect",
    "_imageRect",
    "_frameRect",
    "awayjs-core/lib/image/SamplerBase",
    "SamplerBase",
    "_smooth",
    "_mipmap",
    "awayjs-core/lib/image/SamplerCube",
    "SamplerCube",
    "awayjs-core/lib/image/SpecularImage2D",
    "BitmapImageChannel_1",
    "SpecularImage2D",
    "specularSource",
    "glossSource",
    "_specularSource",
    "_glossSource",
    "_output",
    "_testSize",
    "origin",
    "BitmapImageCube_1",
    "BlendMode_1",
    "Sampler2D_1",
    "SamplerCube_1",
    "SpecularImage2D_1",
    "awayjs-core/lib/library/AbstractionBase",
    "AbstractionBase",
    "pool",
    "_this",
    "_invalid",
    "_pool",
    "_onClearDelegate",
    "onClear",
    "_onInvalidateDelegate",
    "onInvalidate",
    "clearAbstraction",
    "AssetBase",
    "_id",
    "ID_COUNT",
    "_originalName",
    "updateFullPath",
    "prev",
    "_namespace",
    "_full_path",
    "assetPathEquals",
    "ns",
    "isAsset",
    "assetClass",
    "resetAssetPath",
    "overrideOriginal",
    "DEFAULT_NAMESPACE",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "AssetLibraryIterator_1",
    "Loader_1",
    "ConflictPrecedence_1",
    "ConflictStrategy_1",
    "AssetLibraryBundle",
    "_loaderSessionsGarbage",
    "_assetDictionary",
    "_loaderSessions",
    "conflictStrategy",
    "IGNORE",
    "conflictPrecedence",
    "FAVOR_NEW",
    "_onAssetRenameDelegate",
    "onAssetRename",
    "_onAssetConflictResolvedDelegate",
    "onAssetConflictResolved",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "getInstance",
    "key",
    "_iInstances",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "_strategy",
    "_strategyPreference",
    "createIterator",
    "assetTypeFilter",
    "namespaceFilter",
    "filterFunc",
    "load",
    "req",
    "context",
    "parser",
    "getLoader",
    "loadData",
    "loader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "disposeLoader",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "getAsset",
    "_assetDictDirty",
    "rehashAssetDict",
    "getAllAssets",
    "addAsset",
    "old",
    "assetNamespace",
    "resolveConflict",
    "removeAsset",
    "idx",
    "removeAssetFromDict",
    "removeAssetByName",
    "removeAllAssets",
    "removeNamespaceAssets",
    "old_assets",
    "autoRemoveEmptyNamespace",
    "empty",
    "stopAllLoaders",
    "killloaderSession",
    "pop",
    "clearTimeout",
    "dict",
    "awayjs-core/lib/library/AssetLibraryIterator",
    "awayjs-core/lib/library/ConflictPrecedence",
    "awayjs-core/lib/library/ConflictStrategy",
    "awayjs-core/lib/library/Loader",
    "AssetLibraryIterator",
    "filter",
    "_idx",
    "_filtered",
    "next",
    "setIndex",
    "awayjs-core/lib/library/AssetLibrary",
    "AssetLibraryBundle_1",
    "AssetLibrary",
    "getBundle",
    "stopLoad",
    "ConflictPrecedence",
    "FAVOR_OLD",
    "awayjs-core/lib/library/ConflictStrategyBase",
    "ConflictStrategyBase",
    "changedAsset",
    "oldAsset",
    "assetsDictionary",
    "precedence",
    "_pUpdateNames",
    "nonConflictingName",
    "newAsset",
    "loser_prev_name",
    "winner",
    "loser",
    "ErrorConflictStrategy_1",
    "IgnoreConflictStrategy_1",
    "NumSuffixConflictStrategy_1",
    "ConflictStrategy",
    "include",
    "APPEND_NUM_SUFFIX",
    "THROW_ERROR",
    "awayjs-core/lib/library/ErrorConflictStrategy",
    "awayjs-core/lib/library/IgnoreConflictStrategy",
    "awayjs-core/lib/library/NumSuffixConflictStrategy",
    "ConflictStrategyBase_1",
    "ErrorConflictStrategy",
    "assetFullPath",
    "awayjs-core/lib/library/IAbstractionPool",
    "awayjs-core/lib/library/IAssetClass",
    "awayjs-core/lib/library/IAsset",
    "awayjs-core/lib/library/IDUtil",
    "IDUtil",
    "createUID",
    "uid",
    "ALPHA_CHAR_CODES",
    "random",
    "time",
    "Date",
    "getTime",
    "timeString",
    "toUpperCase",
    "substr",
    "charCodeAt",
    "String",
    "fromCharCode",
    "apply",
    "IgnoreConflictStrategy",
    "awayjs-core/lib/library/LoaderContext",
    "LoaderContext",
    "includeDependencies",
    "dependencyBaseUrl",
    "_includeDependencies",
    "_dependencyBaseUrl",
    "_embeddedDataByUrl",
    "_remappedUrls",
    "_materialMode",
    "UNDEFINED",
    "materialMode",
    "_overrideAbsPath",
    "_overrideFullUrls",
    "mapUrl",
    "originalUrl",
    "newUrl",
    "mapUrlToData",
    "_iHasDataForUrl",
    "_iGetDataForUrl",
    "_iHasMappingForUrl",
    "_iGetRemappedUrl",
    "SINGLEPASS_MATERIALS",
    "MULTIPASS_MATERIALS",
    "awayjs-core/lib/library/LoaderInfo",
    "LoaderInfo",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_contentType",
    "_loader",
    "URLLoader_1",
    "URLLoaderDataFormat_1",
    "ResourceDependency_1",
    "_stack",
    "_errorHandlers",
    "_parseErrorHandlers",
    "_onReadyForDependenciesDelegate",
    "onReadyForDependencies",
    "_onParseCompleteDelegate",
    "onParseComplete",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_parsers",
    "_baseDependency",
    "_loaderInfo",
    "_uri",
    "replace",
    "retrieveDependency",
    "retrieveNext",
    "_currentDependency",
    "dependencies",
    "parsingPaused",
    "_iResumeParsing",
    "_iSuccess",
    "resolve",
    "_iLoader",
    "addEventListeners",
    "request",
    "Function",
    "_iSetData",
    "retrieveAsRawData",
    "parseDependency",
    "resolveDependencyUrl",
    "dataFormat",
    "BINARY",
    "_iSetParser",
    "getParserFromSuffix",
    "joinUrl",
    "base",
    "end",
    "charAt",
    "scheme_re",
    "RegExp",
    "overrideAbsolutePaths",
    "test",
    "overrideFullURLs",
    "noscheme_url",
    "retrieveParserDependencies",
    "parserDependancies",
    "resolveParserDependencies",
    "handled",
    "isDependency",
    "removeEventListeners",
    "resolveFailure",
    "suppresAssetEvents",
    "resolveName",
    "handler",
    "getParserFromData",
    "supportsData",
    "_iFileName",
    "parseAsync",
    "fileExtension",
    "toLowerCase",
    "supportsType",
    "awayjs-core/lib/net/URLLoader",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/parsers/ResourceDependency",
    "NumSuffixConflictStrategy",
    "separator",
    "_separator",
    "_next_suffix",
    "orig",
    "new_name",
    "suffix",
    "isNaN",
    "AbstractionBase_1",
    "AssetLibrary_1",
    "IDUtil_1",
    "LoaderContext_1",
    "LoaderInfo_1",
    "awayjs-core/lib/managers/AudioChannel",
    "AudioChannel",
    "_isPlaying",
    "_isLooping",
    "_audioCtx",
    "window",
    "_gainNode",
    "createGain",
    "connect",
    "_audio",
    "Audio",
    "onended",
    "_onEnded",
    "createMediaElementSource",
    "gain",
    "isPlaying",
    "isLooping",
    "isDecoding",
    "pause",
    "maxChannels",
    "_channels",
    "StreamingAudioChannel_1",
    "WebAudioChannel_1",
    "AudioManager",
    "channelClass",
    "channel",
    "awayjs-core/lib/managers/StreamingAudioChannel",
    "awayjs-core/lib/managers/WebAudioChannel",
    "awayjs-core/lib/managers/EventAudioChannel",
    "ParserUtils_1",
    "EventAudioChannel",
    "_startTime",
    "ontimeupdate",
    "_onTimeUpdate",
    "_duration",
    "_base64Cache",
    "arrayBufferToBase64",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-core/lib/managers/IAudioChannelClass",
    "awayjs-core/lib/managers/IAudioChannel",
    "StreamingAudioChannel",
    "_sourceOpenDelegate",
    "_sourceOpen",
    "_updateEndDelegate",
    "_updateEnd",
    "_updateSource",
    "_sourceDirty",
    "_offset",
    "_isQueuing",
    "_isOpening",
    "_queueBuffer",
    "_mediaSource",
    "activeSourceBuffers",
    "console",
    "_sourceBuffer",
    "addSourceBuffer",
    "timestampOffset",
    "appendBuffer",
    "endOfStream",
    "_disposeSource",
    "MediaSource",
    "_urlString",
    "URL",
    "createObjectURL",
    "remove",
    "removeSourceBuffer",
    "revokeObjectURL",
    "WebAudioChannel",
    "_isDecoding",
    "_onEndedDelegate",
    "_currentTime",
    "_decodeCache",
    "_onDecodeComplete",
    "_errorCache",
    "decodeAudioData",
    "_onError",
    "_source",
    "createBufferSource",
    "start",
    "error",
    "disconnect",
    "awayjs-core/lib/net/CrossDomainPolicy",
    "CrossDomainPolicy",
    "ANONYMOUS",
    "USE_CREDENTIALS",
    "URLLoaderDataFormat",
    "TEXT",
    "VARIABLES",
    "BLOB",
    "ARRAY_BUFFER",
    "URLRequestMethod_1",
    "URLVariables_1",
    "URLLoader",
    "_dataFormat",
    "_loadError",
    "_request",
    "_data",
    "format",
    "initXHR",
    "method",
    "POST",
    "postRequest",
    "getRequest",
    "isSupported",
    "close",
    "_XHR",
    "abort",
    "disposeXHR",
    "setResponseType",
    "xhr",
    "responseType",
    "open",
    "async",
    "send",
    "handleXmlHttpRequestException",
    "urlVars",
    "formData",
    "XMLHttpRequest",
    "onloadstart",
    "onLoadStart",
    "onprogress",
    "onProgress",
    "onabort",
    "onAbort",
    "onerror",
    "onload",
    "ontimeout",
    "onTimeOut",
    "onloadend",
    "onLoadEnd",
    "onreadystatechange",
    "onReadyStateChange",
    "decodeURLVariables",
    "join",
    "tokens",
    "re",
    "exec",
    "decodeURIComponent",
    "readyState",
    "_status",
    "status",
    "_loadErrorEvent",
    "_statusEvent",
    "total",
    "loaded",
    "_progressEvent",
    "_loadStartEvent",
    "responseText",
    "response",
    "_loadCompleteEvent",
    "awayjs-core/lib/net/URLRequestMethod",
    "awayjs-core/lib/net/URLVariables",
    "URLRequestMethod",
    "GET",
    "awayjs-core/lib/net/URLRequest",
    "URLRequest",
    "URLVariables",
    "_variables",
    "decode",
    "obj",
    "fd",
    "FormData",
    "CrossDomainPolicy_1",
    "URLRequest_1",
    "awayjs-core/lib/parsers/Image2DParser",
    "ParserBase_1",
    "ByteArray_1",
    "extension",
    "HTMLImageElement",
    "ba",
    "readUnsignedShort",
    "readShort",
    "readUTFBytes",
    "readByte",
    "_pProceedParsing",
    "sizeError",
    "_loadingImage",
    "MORE_TO_PARSE",
    "_htmlImageElement",
    "imageToBitmapImage2D",
    "_pFinalizeAsset",
    "htmlImageElement",
    "byteArrayToImage",
    "complete",
    "arrayBufferToImage",
    "Blob",
    "blobToImage",
    "_pContent",
    "PARSING_DONE",
    "awayjs-core/lib/parsers/ParserBase",
    "awayjs-core/lib/utils/ByteArray",
    "awayjs-core/lib/parsers/ImageCubeParser",
    "JSON",
    "parse",
    "_iResolveDependency",
    "resourceDependency",
    "_iResolveDependencyFailure",
    "_imgDependencyDictionary",
    "_getBitmapImage2D",
    "json",
    "rec",
    "_pDieWithError",
    "_pAddDependency",
    "_validateCubeData",
    "_pPauseAndRetrieveDependencies",
    "Timer_1",
    "getTimer_1",
    "ParserBase",
    "_dependencies",
    "_pOnIntervalDelegate",
    "_pOnInterval",
    "isBitmapImage2DValid",
    "bitmapImage2D",
    "isValid",
    "isImage2DValid",
    "_parsingFailure",
    "_parsingPaused",
    "_parsingComplete",
    "newMaterialMode",
    "frameLimit",
    "_pStartParsing",
    "_iResolveDependencyName",
    "_timer",
    "_isParsing",
    "type_event",
    "type_name",
    "suppressErrorEvents",
    "sub_id",
    "_pPauseParsing",
    "_pHasTime",
    "_lastFrameTime",
    "_frameLimit",
    "_pFinishParsing",
    "_pGetTextData",
    "_pGetByteData",
    "toByteArray",
    "_pGetData",
    "awayjs-core/lib/utils/Timer",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-core/lib/parsers/ParserDataFormat",
    "ParserDataFormat",
    "PLAIN_TEXT",
    "IMAGE",
    "ParserUtils",
    "mimeType",
    "byteStr",
    "bytes",
    "base64Image",
    "btoa",
    "arrayBufferToAudio",
    "fileType",
    "str",
    "img",
    "Image",
    "arraybytes",
    "byteArrayToAudio",
    "filetype",
    "URLObj",
    "blobToAudio",
    "bitmapData",
    "setArrayBuffer",
    "getBytesAvailable",
    "ResourceDependency",
    "parentParser",
    "suppressAssetEvents",
    "_sub_id",
    "_parser",
    "_parentParser",
    "_retrieveAsRawData",
    "_suppressAssetEvents",
    "awayjs-core/lib/parsers/TextureAtlasParser",
    "XmlUtils_1",
    "_parseState",
    "TextureAtlasParserState",
    "PARSE_SUBTEXTURES",
    "nodes",
    "PARSE_XML",
    "_doc",
    "getChildrenWithTag",
    "strToXml",
    "_imagePath",
    "readAttributeValue",
    "_subTextureNodes",
    "PARSE_IMAGE",
    "sampler",
    "element",
    "imageRect",
    "frameRect",
    "awayjs-core/lib/utils/XmlUtils",
    "awayjs-core/lib/parsers/WaveAudioParser",
    "parseFileType",
    "Image2DParser_1",
    "ImageCubeParser_1",
    "ParserDataFormat_1",
    "TextureAtlasParser_1",
    "WaveAudioParser_1",
    "awayjs-core/lib/projections/CoordinateSystem",
    "CoordinateSystem",
    "LEFT_HANDED",
    "RIGHT_HANDED",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "PerspectiveProjection_1",
    "ProjectionBase_1",
    "FreeMatrixProjection",
    "_pMatrix",
    "_pNear",
    "_pFar",
    "_pAspectRatio",
    "pInvalidateMatrix",
    "pUpdateMatrix",
    "_pMatrixInvalid",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-core/lib/projections/ProjectionBase",
    "awayjs-core/lib/projections/IProjection",
    "awayjs-core/lib/projections/ObliqueNearPlaneProjection",
    "ObliqueNearPlaneProjection",
    "baseProjection",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_baseProjection",
    "frustumCorners",
    "near",
    "far",
    "_iAspectRatio",
    "_plane",
    "cx",
    "cy",
    "cz",
    "cw",
    "signX",
    "signY",
    "inverse",
    "awayjs-core/lib/projections/OrthographicOffCenterProjection",
    "OrthographicOffCenterProjection",
    "_minX",
    "_maxX",
    "_minY",
    "_maxY",
    "unproject",
    "nX",
    "nY",
    "sZ",
    "unprojectionMatrix",
    "_pFrustumCorners",
    "awayjs-core/lib/projections/OrthographicProjection",
    "OrthographicProjection",
    "projectionHeight",
    "_projectionHeight",
    "_yMax",
    "_xMax",
    "left",
    "right",
    "top",
    "bottom",
    "_pScissorRect",
    "_pViewPort",
    "xWidth",
    "yHgt",
    "center",
    "middle",
    "CoordinateSystem_1",
    "PerspectiveProjection",
    "fieldOfView",
    "coordinateSystem",
    "_fieldOfView",
    "_focalLength",
    "_hFieldOfView",
    "_hFocalLength",
    "_preserveAspectRatio",
    "_preserveFocalLength",
    "tan",
    "_pCoordinateSystem",
    "atan",
    "tanMinX",
    "_pOriginX",
    "tanMaxX",
    "tanMinY",
    "_pOriginY",
    "tanMaxY",
    "ProjectionBase",
    "_unprojectionInvalid",
    "point3d",
    "_unprojection",
    "_iUpdateScissorRect",
    "_iUpdateViewport",
    "FreeMatrixProjection_1",
    "ObliqueNearPlaneProjection_1",
    "OrthographicOffCenterProjection_1",
    "OrthographicProjection_1",
    "awayjs-core/lib/ui/Keyboard",
    "Keyboard",
    "A",
    "ALTERNATE",
    "AUDIO",
    "B",
    "BACKQUOTE",
    "BACKSLASH",
    "BACKSPACE",
    "C",
    "CAPS_LOCK",
    "CHANNEL_DOWN",
    "CHANNEL_UP",
    "COMMA",
    "COMMAND",
    "CONTROL",
    "D",
    "DELETE",
    "DOWN",
    "DVR",
    "E",
    "END",
    "ENTER",
    "EQUAL",
    "ESCAPE",
    "EXIT",
    "F",
    "F1",
    "F10",
    "F11",
    "F12",
    "F13",
    "F14",
    "F15",
    "F2",
    "F3",
    "F4",
    "F5",
    "F6",
    "F7",
    "F8",
    "F9",
    "FAST_FORWARD",
    "G",
    "GUIDE",
    "H",
    "HELP",
    "HOME",
    "I",
    "INFO",
    "INPUT",
    "INSERT",
    "J",
    "K",
    "KEYNAME_BEGIN",
    "KEYNAME_BREAK",
    "KEYNAME_CLEARDISPLAY",
    "KEYNAME_CLEARLINE",
    "KEYNAME_DELETE",
    "KEYNAME_DELETECHAR",
    "KEYNAME_DELETELINE",
    "KEYNAME_DOWNARROW",
    "KEYNAME_END",
    "KEYNAME_EXECUTE",
    "KEYNAME_F1",
    "KEYNAME_F10",
    "KEYNAME_F11",
    "KEYNAME_F12",
    "KEYNAME_F13",
    "KEYNAME_F14",
    "KEYNAME_F15",
    "KEYNAME_F16",
    "KEYNAME_F17",
    "KEYNAME_F18",
    "KEYNAME_F19",
    "KEYNAME_F2",
    "KEYNAME_F20",
    "KEYNAME_F21",
    "KEYNAME_F22",
    "KEYNAME_F23",
    "KEYNAME_F24",
    "KEYNAME_F25",
    "KEYNAME_F26",
    "KEYNAME_F27",
    "KEYNAME_F28",
    "KEYNAME_F29",
    "KEYNAME_F3",
    "KEYNAME_F30",
    "KEYNAME_F31",
    "KEYNAME_F32",
    "KEYNAME_F33",
    "KEYNAME_F34",
    "KEYNAME_F35",
    "KEYNAME_F4",
    "KEYNAME_F5",
    "KEYNAME_F6",
    "KEYNAME_F7",
    "KEYNAME_F8",
    "KEYNAME_F9",
    "KEYNAME_FIND",
    "KEYNAME_HELP",
    "KEYNAME_HOME",
    "KEYNAME_INSERT",
    "KEYNAME_INSERTCHAR",
    "KEYNAME_INSERTLINE",
    "KEYNAME_LEFTARROW",
    "KEYNAME_MENU",
    "KEYNAME_MODESWITCH",
    "KEYNAME_NEXT",
    "KEYNAME_PAGEDOWN",
    "KEYNAME_PAGEUP",
    "KEYNAME_PAUSE",
    "KEYNAME_PREV",
    "KEYNAME_PRINT",
    "KEYNAME_PRINTSCREEN",
    "KEYNAME_REDO",
    "KEYNAME_RESET",
    "KEYNAME_RIGHTARROW",
    "KEYNAME_SCROLLLOCK",
    "KEYNAME_SELECT",
    "KEYNAME_STOP",
    "KEYNAME_SYSREQ",
    "KEYNAME_SYSTEM",
    "KEYNAME_UNDO",
    "KEYNAME_UPARROW",
    "KEYNAME_USER",
    "L",
    "LAST",
    "LEFT",
    "LEFTBRACKET",
    "LIVE",
    "M",
    "MASTER_SHELL",
    "MENU",
    "MINUS",
    "N",
    "NEXT",
    "NUMBER_0",
    "NUMBER_1",
    "NUMBER_2",
    "NUMBER_3",
    "NUMBER_4",
    "NUMBER_5",
    "NUMBER_6",
    "NUMBER_7",
    "NUMBER_8",
    "NUMBER_9",
    "NUMPAD",
    "NUMPAD_0",
    "NUMPAD_1",
    "NUMPAD_2",
    "NUMPAD_3",
    "NUMPAD_4",
    "NUMPAD_5",
    "NUMPAD_6",
    "NUMPAD_7",
    "NUMPAD_8",
    "NUMPAD_9",
    "NUMPAD_ADD",
    "NUMPAD_DECIMAL",
    "NUMPAD_DIVIDE",
    "NUMPAD_ENTER",
    "NUMPAD_MULTIPLY",
    "NUMPAD_SUBTRACT",
    "O",
    "P",
    "PAGE_DOWN",
    "PAGE_UP",
    "PAUSE",
    "PERIOD",
    "PLAY",
    "PREVIOUS",
    "Q",
    "QUOTE",
    "R",
    "RECORD",
    "REWIND",
    "RIGHT",
    "RIGHTBRACKET",
    "S",
    "SEARCH",
    "SEMICOLON",
    "SETUP",
    "SHIFT",
    "SKIP_BACKWARD",
    "SKIP_FORWARD",
    "SLASH",
    "SPACE",
    "STOP",
    "SUBTITLE",
    "T",
    "TAB",
    "U",
    "UP",
    "V",
    "VOD",
    "W",
    "X",
    "Y",
    "YELLOW",
    "Z",
    "Keyboard_1",
    "BitmapImageUtils",
    "bmpd",
    "awayjs-core/lib/utils/ByteArrayBase",
    "ByteArrayBase",
    "_mode",
    "writeByte",
    "writeUnsignedByte",
    "readUnsignedByte",
    "writeUnsignedShort",
    "writeUnsignedInt",
    "writeFloat",
    "toFloatBits",
    "readFloat",
    "fromFloatBits",
    "compareEqual",
    "other",
    "co0",
    "c0",
    "writeBase64String",
    "dumpToConsole",
    "oldpos",
    "nstep",
    "asHexString",
    "digits",
    "lut",
    "readBase64String",
    "internalGetBase64String",
    "getUnsignedByteFunc",
    "self",
    "b0",
    "b1",
    "b2",
    "enc1",
    "enc2",
    "enc3",
    "enc4",
    "base64Key",
    "Base64Key",
    "awayjs-core/lib/utils/ByteArrayBuffer",
    "ByteArrayBase_1",
    "ByteArrayBuffer",
    "bi",
    "sign",
    "exponent",
    "mantissa",
    "ByteArray",
    "maxlength",
    "unalignedarraybytestemp",
    "ensureWriteableSpace",
    "ensureSpace",
    "aBuffer",
    "inInt8AView",
    "localInt8View",
    "newmaxlength",
    "newarraybuffer",
    "newview",
    "readBytes",
    "byteView",
    "localByteView",
    "view2",
    "view3",
    "DataView",
    "getUint8",
    "c2",
    "c3",
    "readInt",
    "int",
    "getInt32",
    "short",
    "getInt16",
    "readDouble",
    "double",
    "getFloat64",
    "pa",
    "Uint32Array",
    "awayjs-core/lib/utils/CSS",
    "CSS",
    "setElementSize",
    "style",
    "setElementWidth",
    "setElementHeight",
    "setElementX",
    "setElementY",
    "getElementVisibility",
    "visibility",
    "setElementVisibility",
    "visible",
    "setElementAlpha",
    "alpha",
    "HTMLCanvasElement",
    "globalAlpha",
    "setElementPosition",
    "absolute",
    "ColorUtils",
    "float32Color",
    "ARGBtoFloat32",
    "componentToHex",
    "hex",
    "RGBToHexString",
    "ARGBToHexString",
    "awayjs-core/lib/utils/Debug",
    "Debug",
    "breakpoint",
    "throwPIROnKeyWordOnly",
    "enable",
    "keyword",
    "throwPIR",
    "clss",
    "fnc",
    "msg",
    "logPIR",
    "THROW_ERRORS",
    "LOG_PI_ERRORS",
    "ENABLE_LOG",
    "awayjs-core/lib/utils/Extensions",
    "Extensions",
    "SIMD",
    "Boolean",
    "awayjs-core/lib/utils/IArrayBufferViewClass",
    "ImageUtils",
    "image2D",
    "isHTMLImageElementValid",
    "MAX_SIZE",
    "isPowerOfTwo",
    "getBestPowerOf2",
    "awayjs-core/lib/utils/MipmapGenerator",
    "MipmapGenerator",
    "_generateMipMaps",
    "output",
    "_getMipmapHolder",
    "_matrix",
    "bitmapImage",
    "downsampleImage",
    "mipMapHolder",
    "newW",
    "newH",
    "_freeMipMapHolder",
    "_mipMaps",
    "_mipMapUses",
    "holderWidth",
    "holderHeight",
    "destBitmap",
    "BoxFilter",
    "xkernel",
    "PolyphaseKernel",
    "ykernel",
    "tempBitmap",
    "iscale",
    "kernelLength",
    "kernelWidth",
    "kernelWindowSize",
    "sumR",
    "sumG",
    "sumB",
    "sumA",
    "windowSize",
    "colorR",
    "colorG",
    "colorB",
    "colorA",
    "valueAt",
    "srcLength",
    "dstLength",
    "samples",
    "sum",
    "isamples",
    "evaluate",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "RequestAnimationFrame",
    "callback",
    "callbackContext",
    "_active",
    "_argsArray",
    "_getTimer",
    "setCallback",
    "_rafUpdateFunction",
    "_tick",
    "_dt",
    "_callback",
    "_callbackContext",
    "_prevTime",
    "requestAnimationFrame",
    "Timer",
    "delay",
    "repeatCount",
    "_repeatCount",
    "_currentCount",
    "_running",
    "_delay",
    "clearInterval",
    "_iid",
    "setInterval",
    "tick",
    "XmlUtils",
    "node",
    "tag",
    "fragment",
    "createDocumentFragment",
    "num",
    "childNodes",
    "child",
    "nodeName",
    "appendChild",
    "filterListByParam",
    "paramName",
    "paramValue",
    "getNamedItem",
    "DOMParser",
    "parseFromString",
    "nodeToString",
    "XMLSerializer",
    "serializeToString",
    "attrName",
    "attrs",
    "attribute",
    "writeAttributeValue",
    "attrValue",
    "Attr",
    "setNamedItem",
    "hasAttribute",
    "getTimer",
    "now",
    "ByteArrayBuffer_1",
    "CSS_1",
    "Debug_1",
    "Extensions_1",
    "MipmapGenerator_1",
    "RequestAnimationFrame_1"
  ],
  "mappings": "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",
  "file": "awayjs-core.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\nvar attributes = require(\"awayjs-core/lib/attributes\");\nexports.attributes = attributes;\nvar audio = require(\"awayjs-core/lib/audio\");\nexports.audio = audio;\nvar errors = require(\"awayjs-core/lib/errors\");\nexports.errors = errors;\nvar events = require(\"awayjs-core/lib/events\");\nexports.events = events;\nvar geom = require(\"awayjs-core/lib/geom\");\nexports.geom = geom;\nvar image = require(\"awayjs-core/lib/image\");\nexports.image = image;\nvar library = require(\"awayjs-core/lib/library\");\nexports.library = library;\nvar managers = require(\"awayjs-core/lib/managers\");\nexports.managers = managers;\nvar net = require(\"awayjs-core/lib/net\");\nexports.net = net;\nvar parsers = require(\"awayjs-core/lib/parsers\");\nexports.parsers = parsers;\nvar projections = require(\"awayjs-core/lib/projections\");\nexports.projections = projections;\nvar ui = require(\"awayjs-core/lib/ui\");\nexports.ui = ui;\nvar utils = require(\"awayjs-core/lib/utils\");\nexports.utils = utils;\nlibrary.Loader.enableParser(parsers.Image2DParser);\nlibrary.Loader.enableParser(parsers.ImageCubeParser);\nlibrary.Loader.enableParser(parsers.TextureAtlasParser);\nlibrary.Loader.enableParser(parsers.WaveAudioParser);\n\n},{\"awayjs-core/lib/attributes\":\"awayjs-core/lib/attributes\",\"awayjs-core/lib/audio\":\"awayjs-core/lib/audio\",\"awayjs-core/lib/errors\":\"awayjs-core/lib/errors\",\"awayjs-core/lib/events\":\"awayjs-core/lib/events\",\"awayjs-core/lib/geom\":\"awayjs-core/lib/geom\",\"awayjs-core/lib/image\":\"awayjs-core/lib/image\",\"awayjs-core/lib/library\":\"awayjs-core/lib/library\",\"awayjs-core/lib/managers\":\"awayjs-core/lib/managers\",\"awayjs-core/lib/net\":\"awayjs-core/lib/net\",\"awayjs-core/lib/parsers\":\"awayjs-core/lib/parsers\",\"awayjs-core/lib/projections\":\"awayjs-core/lib/projections\",\"awayjs-core/lib/ui\":\"awayjs-core/lib/ui\",\"awayjs-core/lib/utils\":\"awayjs-core/lib/utils\"}],\"awayjs-core/lib/attributes/AttributesBuffer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar AttributesBuffer = (function (_super) {\n    __extends(AttributesBuffer, _super);\n    /**\n     *\n     */\n    function AttributesBuffer(stride, count) {\n        if (stride === void 0) { stride = 0; }\n        if (count === void 0) { count = 0; }\n        _super.call(this);\n        this._count = 0;\n        this._stride = 0;\n        this._newStride = 0;\n        this._viewVOs = new Array();\n        this._stride = this._newStride = stride;\n        this._count = count;\n        this._buffer = new ArrayBuffer(this._stride * this._count);\n        this._bufferView = new Uint8Array(this._buffer, 0, this._buffer.byteLength);\n    }\n    Object.defineProperty(AttributesBuffer.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return AttributesBuffer.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesBuffer.prototype, \"stride\", {\n        get: function () {\n            if (this._lengthDirty)\n                this._updateLength();\n            return this._stride;\n        },\n        set: function (value) {\n            if (this._newStride == value)\n                return;\n            this._newStride = value;\n            this.resize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesBuffer.prototype, \"count\", {\n        get: function () {\n            return this._count;\n        },\n        set: function (value) {\n            if (this._count == value)\n                return;\n            this._count = value;\n            this.resize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesBuffer.prototype, \"buffer\", {\n        get: function () {\n            if (this._lengthDirty)\n                this._updateLength();\n            this._contentDirty = false;\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesBuffer.prototype, \"bufferView\", {\n        get: function () {\n            if (this._lengthDirty)\n                this._updateLength();\n            this._contentDirty = false;\n            return this._bufferView;\n        },\n        set: function (value) {\n            this._bufferView = value;\n            this._buffer = this._bufferView.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesBuffer.prototype, \"length\", {\n        get: function () {\n            return this._count * this.stride;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    AttributesBuffer.prototype.invalidate = function () {\n        if (this._contentDirty)\n            return;\n        _super.prototype.invalidate.call(this);\n        this._contentDirty = true;\n    };\n    /**\n     *\n     * @private\n     */\n    AttributesBuffer.prototype.resize = function () {\n        if (this._lengthDirty)\n            return;\n        this.clear();\n        this._lengthDirty = true;\n        //dispose buffer if stride is 0\n        if (!this._newStride) {\n            this._buffer = null;\n            this._bufferView = null;\n        }\n    };\n    AttributesBuffer.prototype.clone = function () {\n        var attributesBuffer = new AttributesBuffer(this._stride, this._count);\n        attributesBuffer.bufferView.set(this.bufferView);\n        var len = this._viewVOs.length;\n        for (var i = 0; i < len; i++)\n            this._viewVOs[i].view._internalClone(attributesBuffer);\n        return attributesBuffer;\n    };\n    AttributesBuffer.prototype.getView = function (index) {\n        if (index < this._viewVOs.length)\n            return this._viewVOs[index].view;\n        return null;\n    };\n    AttributesBuffer.prototype._setAttributes = function (viewIndex, arrayBufferView, offset) {\n        if (offset === void 0) { offset = 0; }\n        var array = (arrayBufferView instanceof Uint8Array) ? arrayBufferView : new Uint8Array(arrayBufferView.buffer);\n        var viewVO = this._viewVOs[viewIndex];\n        var vLength = viewVO.length;\n        var vOffset = viewVO.offset;\n        var vCount = array.length / vLength;\n        //make sure there is enough space in the buffer\n        if (this.count < vCount + offset)\n            this.count = vCount + offset;\n        if (this._lengthDirty)\n            this._updateLength();\n        //fast path for separate buffers\n        if (this._viewVOs.length == 1) {\n            this._bufferView.set(array);\n        }\n        else {\n            for (var i = 0; i < vCount; i++)\n                this._bufferView.set(array.subarray(i * vLength, (i + 1) * vLength), (i + offset) * this._stride + vOffset);\n        }\n        this.invalidate();\n    };\n    AttributesBuffer.prototype._getLocalArrayBuffer = function (viewIndex) {\n        var viewVO = this._viewVOs[viewIndex];\n        var vLength = viewVO.length;\n        var vOffset = viewVO.offset;\n        if (this._lengthDirty)\n            this._updateLength();\n        //fast path for separate buffers\n        if (this._viewVOs.length == 1)\n            return this._buffer;\n        var localBuffer = new ArrayBuffer(this._count * vLength);\n        var localBufferView = new Uint8Array(localBuffer);\n        for (var i = 0; i < this._count; i++)\n            localBufferView.set(this._bufferView.subarray(i * this._stride + vOffset, i * this._stride + vOffset + vLength), i * vLength);\n        return localBuffer;\n    };\n    AttributesBuffer.prototype._addView = function (view) {\n        var viewVO = new ViewVO(view);\n        var len = this._viewVOs.length;\n        viewVO.offset = len ? this._viewVOs[len - 1].offset + this._viewVOs[len - 1].length : 0;\n        this._viewVOs.push(viewVO);\n        if (this._newStride < viewVO.offset + viewVO.length) {\n            this._newStride = viewVO.offset + viewVO.length;\n            this.resize();\n        }\n        view._index = len;\n    };\n    AttributesBuffer.prototype._removeView = function (view) {\n        var viewIndex = view._index;\n        var viewVO = this._viewVOs.splice(viewIndex, 1)[0];\n        var len = this._viewVOs.length;\n        viewVO.dispose();\n        for (var i = viewIndex; i < len; i++) {\n            viewVO = this._viewVOs[i];\n            viewVO.offset = i ? this._viewVOs[i - 1].offset + this._viewVOs[i - 1].length : 0;\n            viewVO.view._index = i;\n        }\n        this._newStride = viewVO.offset + viewVO.length;\n        this.resize();\n    };\n    AttributesBuffer.prototype._getOffset = function (viewIndex) {\n        return this._viewVOs[viewIndex].offset;\n    };\n    AttributesBuffer.prototype._updateLength = function () {\n        this._lengthDirty = false;\n        var i;\n        var j;\n        var len = this._viewVOs.length;\n        var newLength = this._newStride * this._count;\n        if (!this._buffer || this._buffer.byteLength != newLength) {\n            var newBuffer = new ArrayBuffer(newLength);\n            var newView = new Uint8Array(newBuffer, 0, newBuffer.byteLength);\n            var viewVO;\n            var vLength;\n            var vOffset;\n            var vOldOffset;\n            if (this._stride != this._newStride) {\n                for (i = 0; i < len; i++) {\n                    viewVO = this._viewVOs[i];\n                    vLength = viewVO.length;\n                    vOffset = viewVO.offset;\n                    vOldOffset = viewVO.oldOffset;\n                    for (j = 0; j < this._count; j++)\n                        if (vOldOffset != null)\n                            newView.set(new Uint8Array(this._buffer, j * this._stride + vOldOffset, vLength), j * this._newStride + vOffset);\n                    viewVO.oldOffset = viewVO.offset;\n                }\n                this._stride = this._newStride;\n            }\n            else {\n                newView.set(new Uint8Array(this._buffer, 0, Math.min(newLength, this._buffer.byteLength))); //TODO: bypass quantisation of bytearray on instantiation\n            }\n            this._buffer = newBuffer;\n            this._bufferView = newView;\n        }\n    };\n    AttributesBuffer.assetType = \"[assets AttributesBuffer]\";\n    return AttributesBuffer;\n}(AssetBase_1.default));\nvar ViewVO = (function () {\n    function ViewVO(view) {\n        this.view = view;\n        this.length = view.size * view.dimensions;\n    }\n    ViewVO.prototype.dispose = function () {\n        this.view = null;\n    };\n    ViewVO.prototype.clone = function () {\n        return new ViewVO(this.view);\n    };\n    return ViewVO;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AttributesBuffer;\n\n},{\"awayjs-core/lib/library/AssetBase\":\"awayjs-core/lib/library/AssetBase\"}],\"awayjs-core/lib/attributes/AttributesView\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar AttributesView = (function (_super) {\n    __extends(AttributesView, _super);\n    function AttributesView(arrayClass, dimensions, attributesBufferCount, unsigned) {\n        if (attributesBufferCount === void 0) { attributesBufferCount = 0; }\n        if (unsigned === void 0) { unsigned = false; }\n        _super.call(this);\n        this._arrayClass = arrayClass;\n        this._size = arrayClass.BYTES_PER_ELEMENT;\n        this._dimensions = dimensions;\n        this._attributesBuffer = (attributesBufferCount instanceof AttributesBuffer_1.default) ? attributesBufferCount : new AttributesBuffer_1.default(this._dimensions * this._size, attributesBufferCount);\n        this._attributesBuffer._addView(this);\n        this._unsigned = unsigned;\n    }\n    Object.defineProperty(AttributesView.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return AttributesView.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesView.prototype, \"buffer\", {\n        get: function () {\n            return this._attributesBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesView.prototype, \"size\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._size;\n        },\n        set: function (value) {\n            if (this._size == value)\n                return;\n            this._size = value;\n            this._attributesBuffer._removeView(this);\n            this._attributesBuffer._addView(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesView.prototype, \"dimensions\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._dimensions;\n        },\n        set: function (value) {\n            if (this._dimensions == value)\n                return;\n            this._dimensions = value;\n            //reset view\n            this._attributesBuffer._removeView(this);\n            this._attributesBuffer._addView(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesView.prototype, \"unsigned\", {\n        get: function () {\n            return this._unsigned;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesView.prototype, \"count\", {\n        get: function () {\n            return this._attributesBuffer.count;\n        },\n        set: function (value) {\n            this._attributesBuffer.count = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesView.prototype, \"offset\", {\n        get: function () {\n            return this._attributesBuffer._getOffset(this._index);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AttributesView.prototype, \"length\", {\n        get: function () {\n            return this._attributesBuffer.count * this._dimensions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AttributesView.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        this._attributesBuffer._setAttributes(this._index, (values instanceof Array) ? new (this._arrayClass)(values) : values, offset);\n        this._localArrayBuffer = null;\n    };\n    AttributesView.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (!this._localArrayBuffer)\n            this._localArrayBuffer = this._attributesBuffer._getLocalArrayBuffer(this._index);\n        var len = this._dimensions * this._size;\n        return new (this._arrayClass)(this._localArrayBuffer, offset * len, count * this._dimensions);\n    };\n    AttributesView.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new AttributesView(this._arrayClass, this._dimensions, attributesBuffer));\n    };\n    AttributesView.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        if (attributesBuffer)\n            this._internalClone(attributesBuffer);\n        if (!this._cloneCache)\n            this._attributesBuffer.clone();\n        var cloneCache = this._cloneCache;\n        this._cloneCache = null;\n        return cloneCache;\n    };\n    /**\n     * @inheritDoc\n     */\n    AttributesView.prototype.dispose = function () {\n        if (!this._attributesBuffer)\n            return;\n        this._attributesBuffer._removeView(this);\n        this._attributesBuffer = null;\n        this._localArrayBuffer = null;\n    };\n    AttributesView.assetType = \"[attributes AttributesView]\";\n    return AttributesView;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AttributesView;\n\n},{\"awayjs-core/lib/attributes/AttributesBuffer\":\"awayjs-core/lib/attributes/AttributesBuffer\",\"awayjs-core/lib/library/AssetBase\":\"awayjs-core/lib/library/AssetBase\"}],\"awayjs-core/lib/attributes/Byte1Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Byte1Attributes = (function (_super) {\n    __extends(Byte1Attributes, _super);\n    function Byte1Attributes(attributesBufferLength, unsigned) {\n        if (unsigned === void 0) { unsigned = true; }\n        _super.call(this, unsigned ? Uint8Array : Int8Array, 1, attributesBufferLength, unsigned);\n    }\n    Object.defineProperty(Byte1Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Byte1Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Byte1Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Byte1Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Byte1Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Byte1Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n    };\n    Byte1Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Byte1Attributes.assetType = \"[attributes Byte1Attributes]\";\n    return Byte1Attributes;\n}(AttributesView_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Byte1Attributes;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Byte2Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Byte2Attributes = (function (_super) {\n    __extends(Byte2Attributes, _super);\n    function Byte2Attributes(attributesBufferLength, unsigned) {\n        if (unsigned === void 0) { unsigned = true; }\n        _super.call(this, unsigned ? Uint8Array : Int8Array, 2, attributesBufferLength, unsigned);\n    }\n    Object.defineProperty(Byte2Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Byte2Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Byte2Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Byte2Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Byte2Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Byte2Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n    };\n    Byte2Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Byte2Attributes.assetType = \"[attributes Byte2Attributes]\";\n    return Byte2Attributes;\n}(AttributesView_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Byte2Attributes;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Byte3Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Byte3Attributes = (function (_super) {\n    __extends(Byte3Attributes, _super);\n    function Byte3Attributes(attributesBufferLength, unsigned) {\n        if (unsigned === void 0) { unsigned = true; }\n        _super.call(this, unsigned ? Uint8Array : Int8Array, 3, attributesBufferLength, unsigned);\n    }\n    Object.defineProperty(Byte3Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Byte3Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Byte3Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Byte3Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Byte3Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Byte3Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n    };\n    Byte3Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Byte3Attributes.assetType = \"[attributes Byte3Attributes]\";\n    return Byte3Attributes;\n}(AttributesView_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Byte3Attributes;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Byte4Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Byte4Attributes = (function (_super) {\n    __extends(Byte4Attributes, _super);\n    function Byte4Attributes(attributesBufferLength, unsigned) {\n        if (unsigned === void 0) { unsigned = true; }\n        _super.call(this, unsigned ? Uint8Array : Int8Array, 4, attributesBufferLength, unsigned);\n    }\n    Object.defineProperty(Byte4Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Byte4Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Byte4Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Byte4Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Byte4Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Byte4Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n    };\n    Byte4Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Byte4Attributes.assetType = \"[attributes Byte4Attributes]\";\n    return Byte4Attributes;\n}(AttributesView_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Byte4Attributes;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Float1Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float1Attributes = (function (_super) {\n    __extends(Float1Attributes, _super);\n    function Float1Attributes(attributesBufferLength) {\n        _super.call(this, Float32Array, 1, attributesBufferLength);\n    }\n    Object.defineProperty(Float1Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Float1Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Float1Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Float1Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Float1Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Float1Attributes(attributesBuffer));\n    };\n    Float1Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Float1Attributes.assetType = \"[attributes Float1Attributes]\";\n    return Float1Attributes;\n}(AttributesView_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Float1Attributes;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Float2Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float2Attributes = (function (_super) {\n    __extends(Float2Attributes, _super);\n    function Float2Attributes(attributesBufferLength) {\n        _super.call(this, Float32Array, 2, attributesBufferLength);\n    }\n    Object.defineProperty(Float2Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Float2Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Float2Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Float2Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Float2Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Float2Attributes(attributesBuffer));\n    };\n    Float2Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Float2Attributes.assetType = \"[attributes Float2Attributes]\";\n    return Float2Attributes;\n}(AttributesView_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Float2Attributes;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Float3Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float3Attributes = (function (_super) {\n    __extends(Float3Attributes, _super);\n    function Float3Attributes(attributesBufferLength) {\n        _super.call(this, Float32Array, 3, attributesBufferLength);\n    }\n    Object.defineProperty(Float3Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Float3Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Float3Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Float3Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Float3Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Float3Attributes(attributesBuffer));\n    };\n    Float3Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Float3Attributes.assetType = \"[attributes Float3Attributes]\";\n    return Float3Attributes;\n}(AttributesView_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Float3Attributes;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Float4Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float4Attributes = (function (_super) {\n    __extends(Float4Attributes, _super);\n    function Float4Attributes(attributesBufferLength) {\n        _super.call(this, Float32Array, 4, attributesBufferLength);\n    }\n    Object.defineProperty(Float4Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Float4Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Float4Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Float4Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Float4Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Float4Attributes(attributesBuffer));\n    };\n    Float4Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Float4Attributes.assetType = \"[attributes Float4Attributes]\";\n    return Float4Attributes;\n}(AttributesView_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Float4Attributes;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Short2Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Short2Attributes = (function (_super) {\n    __extends(Short2Attributes, _super);\n    function Short2Attributes(attributesBufferLength, unsigned) {\n        if (unsigned === void 0) { unsigned = true; }\n        _super.call(this, unsigned ? Uint16Array : Int16Array, 2, attributesBufferLength, unsigned);\n    }\n    Object.defineProperty(Short2Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Short2Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Short2Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Short2Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Short2Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Short2Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n    };\n    Short2Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Short2Attributes.assetType = \"[attributes Short2Attributes]\";\n    return Short2Attributes;\n}(AttributesView_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Short2Attributes;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes/Short3Attributes\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Short3Attributes = (function (_super) {\n    __extends(Short3Attributes, _super);\n    function Short3Attributes(attributesBufferLength, unsigned) {\n        if (unsigned === void 0) { unsigned = true; }\n        _super.call(this, unsigned ? Uint16Array : Int16Array, 3, attributesBufferLength, unsigned);\n    }\n    Object.defineProperty(Short3Attributes.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Short3Attributes.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Short3Attributes.prototype.set = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.set.call(this, values, offset);\n    };\n    Short3Attributes.prototype.get = function (count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.prototype.get.call(this, count, offset);\n    };\n    Short3Attributes.prototype._internalClone = function (attributesBuffer) {\n        return (this._cloneCache = new Short3Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n    };\n    Short3Attributes.prototype.clone = function (attributesBuffer) {\n        if (attributesBuffer === void 0) { attributesBuffer = null; }\n        return _super.prototype.clone.call(this, attributesBuffer);\n    };\n    Short3Attributes.assetType = \"[attributes Short3Attributes]\";\n    return Short3Attributes;\n}(AttributesView_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Short3Attributes;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\"}],\"awayjs-core/lib/attributes\":[function(require,module,exports){\n\"use strict\";\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nexports.AttributesView = AttributesView_1.default;\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nexports.AttributesBuffer = AttributesBuffer_1.default;\nvar Byte1Attributes_1 = require(\"awayjs-core/lib/attributes/Byte1Attributes\");\nexports.Byte1Attributes = Byte1Attributes_1.default;\nvar Byte2Attributes_1 = require(\"awayjs-core/lib/attributes/Byte2Attributes\");\nexports.Byte2Attributes = Byte2Attributes_1.default;\nvar Byte3Attributes_1 = require(\"awayjs-core/lib/attributes/Byte3Attributes\");\nexports.Byte3Attributes = Byte3Attributes_1.default;\nvar Byte4Attributes_1 = require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nexports.Byte4Attributes = Byte4Attributes_1.default;\nvar Float1Attributes_1 = require(\"awayjs-core/lib/attributes/Float1Attributes\");\nexports.Float1Attributes = Float1Attributes_1.default;\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\nexports.Float2Attributes = Float2Attributes_1.default;\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nexports.Float3Attributes = Float3Attributes_1.default;\nvar Float4Attributes_1 = require(\"awayjs-core/lib/attributes/Float4Attributes\");\nexports.Float4Attributes = Float4Attributes_1.default;\nvar Short2Attributes_1 = require(\"awayjs-core/lib/attributes/Short2Attributes\");\nexports.Short2Attributes = Short2Attributes_1.default;\nvar Short3Attributes_1 = require(\"awayjs-core/lib/attributes/Short3Attributes\");\nexports.Short3Attributes = Short3Attributes_1.default;\n\n},{\"awayjs-core/lib/attributes/AttributesBuffer\":\"awayjs-core/lib/attributes/AttributesBuffer\",\"awayjs-core/lib/attributes/AttributesView\":\"awayjs-core/lib/attributes/AttributesView\",\"awayjs-core/lib/attributes/Byte1Attributes\":\"awayjs-core/lib/attributes/Byte1Attributes\",\"awayjs-core/lib/attributes/Byte2Attributes\":\"awayjs-core/lib/attributes/Byte2Attributes\",\"awayjs-core/lib/attributes/Byte3Attributes\":\"awayjs-core/lib/attributes/Byte3Attributes\",\"awayjs-core/lib/attributes/Byte4Attributes\":\"awayjs-core/lib/attributes/Byte4Attributes\",\"awayjs-core/lib/attributes/Float1Attributes\":\"awayjs-core/lib/attributes/Float1Attributes\",\"awayjs-core/lib/attributes/Float2Attributes\":\"awayjs-core/lib/attributes/Float2Attributes\",\"awayjs-core/lib/attributes/Float3Attributes\":\"awayjs-core/lib/attributes/Float3Attributes\",\"awayjs-core/lib/attributes/Float4Attributes\":\"awayjs-core/lib/attributes/Float4Attributes\",\"awayjs-core/lib/attributes/Short2Attributes\":\"awayjs-core/lib/attributes/Short2Attributes\",\"awayjs-core/lib/attributes/Short3Attributes\":\"awayjs-core/lib/attributes/Short3Attributes\"}],\"awayjs-core/lib/audio/WaveAudio\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AudioManager_1 = require(\"awayjs-core/lib/managers/AudioManager\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n// TODO: Audio should probably be an interface containing play/stop/seek functionality\nvar WaveAudio = (function (_super) {\n    __extends(WaveAudio, _super);\n    /**\n     *\n     */\n    function WaveAudio(buffer) {\n        _super.call(this);\n        this._volume = 1;\n        this._buffer = buffer;\n    }\n    Object.defineProperty(WaveAudio.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return WaveAudio.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WaveAudio.prototype, \"volume\", {\n        get: function () {\n            return this._volume;\n        },\n        set: function (value) {\n            if (this._volume == value)\n                return;\n            this._volume = value;\n            if (this._audioChannel)\n                this._audioChannel.volume = this._volume;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WaveAudio.prototype, \"currentTime\", {\n        get: function () {\n            if (this._audioChannel)\n                return this._audioChannel.currentTime;\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WaveAudio.prototype, \"duration\", {\n        get: function () {\n            if (this._audioChannel)\n                return this._audioChannel.duration;\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WaveAudio.prototype.dispose = function () {\n        this.stop();\n    };\n    WaveAudio.prototype.play = function (offset, loop) {\n        if (loop === void 0) { loop = false; }\n        this._audioChannel = AudioManager_1.default.getChannel(this._buffer.byteLength);\n        if (this._audioChannel) {\n            this._audioChannel.volume = this._volume;\n            this._audioChannel.play(this._buffer, offset, loop, this.id);\n        }\n    };\n    WaveAudio.prototype.stop = function () {\n        if (this._audioChannel)\n            this._audioChannel.stop();\n        delete this._audioChannel;\n        this._audioChannel = null;\n    };\n    WaveAudio.prototype.clone = function () {\n        var newInstance = new WaveAudio(this._buffer);\n        newInstance.name = this.name;\n        return newInstance;\n    };\n    WaveAudio.assetType = \"[asset WaveAudio]\";\n    return WaveAudio;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = WaveAudio;\n\n},{\"awayjs-core/lib/library/AssetBase\":\"awayjs-core/lib/library/AssetBase\",\"awayjs-core/lib/managers/AudioManager\":\"awayjs-core/lib/managers/AudioManager\"}],\"awayjs-core/lib/audio\":[function(require,module,exports){\n\"use strict\";\nvar WaveAudio_1 = require(\"awayjs-core/lib/audio/WaveAudio\");\nexports.WaveAudio = WaveAudio_1.default;\n\n},{\"awayjs-core/lib/audio/WaveAudio\":\"awayjs-core/lib/audio/WaveAudio\"}],\"awayjs-core/lib/errors/AbstractMethodError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nvar AbstractMethodError = (function (_super) {\n    __extends(AbstractMethodError, _super);\n    /**\n     * Create a new AbstractMethodError.\n     * @param message An optional message to override the default error message.\n     * @param id The id of the error.\n     */\n    function AbstractMethodError(message, id) {\n        if (message === void 0) { message = null; }\n        if (id === void 0) { id = 0; }\n        _super.call(this, message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\n    }\n    return AbstractMethodError;\n}(ErrorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AbstractMethodError;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors/ArgumentError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nvar ArgumentError = (function (_super) {\n    __extends(ArgumentError, _super);\n    /**\n     * Create a new ArgumentError.\n     *\n     * @param message An optional message to override the default error message.\n     * @param id The id of the error.\n     */\n    function ArgumentError(message, id) {\n        if (message === void 0) { message = null; }\n        if (id === void 0) { id = 0; }\n        _super.call(this, message || \"ArgumentError\", id);\n    }\n    return ArgumentError;\n}(ErrorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ArgumentError;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors/DocumentError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar DocumentError = (function (_super) {\n    __extends(DocumentError, _super);\n    function DocumentError(message, id) {\n        if (message === void 0) { message = \"DocumentError\"; }\n        if (id === void 0) { id = 0; }\n        _super.call(this, message, id);\n    }\n    DocumentError.DOCUMENT_DOES_NOT_EXIST = \"documentDoesNotExist\";\n    return DocumentError;\n}(ErrorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DocumentError;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors/ErrorBase\":[function(require,module,exports){\n\"use strict\";\nvar ErrorBase = (function () {\n    function ErrorBase(message, id, _name) {\n        if (message === void 0) { message = ''; }\n        if (id === void 0) { id = 0; }\n        if (_name === void 0) { _name = ''; }\n        this._errorID = 0; //Contains the reference number associated with the specific error message.\n        this._messsage = ''; //Contains the message associated with the Error object.\n        this._name = ''; // Contains the name of the Error object.\n        this._messsage = message;\n        this._name = name;\n        this._errorID = id;\n    }\n    Object.defineProperty(ErrorBase.prototype, \"message\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return this._messsage;\n        },\n        /**\n         *\n         * @param value\n         */\n        set: function (value) {\n            this._messsage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ErrorBase.prototype, \"name\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return this._name;\n        },\n        /**\n         *\n         * @param value\n         */\n        set: function (value) {\n            this._name = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ErrorBase.prototype, \"errorID\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._errorID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ErrorBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ErrorBase;\n\n},{}],\"awayjs-core/lib/errors/PartialImplementationError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nvar PartialImplementationError = (function (_super) {\n    __extends(PartialImplementationError, _super);\n    /**\n     * Create a new AbstractMethodError.\n     * @param message An optional message to override the default error message.\n     * @param id The id of the error.\n     */\n    function PartialImplementationError(dependency, id) {\n        if (dependency === void 0) { dependency = ''; }\n        if (id === void 0) { id = 0; }\n        _super.call(this, \"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\n    }\n    return PartialImplementationError;\n}(ErrorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PartialImplementationError;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors/RangeError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\n/**\n * RangeError is thrown when an index is accessed out of range of the number of\n * available indices on an Array.\n */\nvar RangeError = (function (_super) {\n    __extends(RangeError, _super);\n    /**\n     * Create a new RangeError.\n     *\n     * @param message An optional message to override the default error message.\n     * @param id The id of the error.\n     */\n    function RangeError(message, id) {\n        if (message === void 0) { message = null; }\n        if (id === void 0) { id = 0; }\n        _super.call(this, message || \"RangeError\", id);\n    }\n    return RangeError;\n}(ErrorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RangeError;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\"}],\"awayjs-core/lib/errors\":[function(require,module,exports){\n\"use strict\";\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nexports.AbstractMethodError = AbstractMethodError_1.default;\nvar ArgumentError_1 = require(\"awayjs-core/lib/errors/ArgumentError\");\nexports.ArgumentError = ArgumentError_1.default;\nvar DocumentError_1 = require(\"awayjs-core/lib/errors/DocumentError\");\nexports.DocumentError = DocumentError_1.default;\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nexports.ErrorBase = ErrorBase_1.default;\nvar PartialImplementationError_1 = require(\"awayjs-core/lib/errors/PartialImplementationError\");\nexports.PartialImplementationError = PartialImplementationError_1.default;\nvar RangeError_1 = require(\"awayjs-core/lib/errors/RangeError\");\nexports.RangeError = RangeError_1.default;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"awayjs-core/lib/errors/ArgumentError\":\"awayjs-core/lib/errors/ArgumentError\",\"awayjs-core/lib/errors/DocumentError\":\"awayjs-core/lib/errors/DocumentError\",\"awayjs-core/lib/errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\",\"awayjs-core/lib/errors/PartialImplementationError\":\"awayjs-core/lib/errors/PartialImplementationError\",\"awayjs-core/lib/errors/RangeError\":\"awayjs-core/lib/errors/RangeError\"}],\"awayjs-core/lib/events/AssetEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * @class away.events.AssetEvent\n */\nvar AssetEvent = (function (_super) {\n    __extends(AssetEvent, _super);\n    /**\n     *\n     */\n    function AssetEvent(type, asset, prevName) {\n        if (prevName === void 0) { prevName = null; }\n        _super.call(this, type);\n        this._asset = asset;\n        this._prevName = prevName || this._asset.name;\n    }\n    Object.defineProperty(AssetEvent.prototype, \"asset\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._asset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetEvent.prototype, \"prevName\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._prevName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    AssetEvent.prototype.clone = function () {\n        return new AssetEvent(this.type, this._asset, this._prevName);\n    };\n    /**\n     * Dispatched when the content of an asset is invalidated\n     */\n    AssetEvent.INVALIDATE = \"invalidate\";\n    /**\n     * Dispatched when an asset is diposed\n     */\n    AssetEvent.DISPOSE = \"dispose\";\n    /**\n     * Dispatched when an asset is cleared\n     */\n    AssetEvent.CLEAR = \"clear\";\n    /**\n     *\n     */\n    AssetEvent.RENAME = 'rename';\n    /**\n     *\n     */\n    AssetEvent.ENTER_FRAME = 'enterFrame';\n    /**\n     *\n     */\n    AssetEvent.EXIT_FRAME = 'exitFrame';\n    /**\n     *\n     */\n    AssetEvent.ASSET_CONFLICT_RESOLVED = 'assetConflictResolved';\n    /**\n     * Dispatched when the loading of an asset and all of its dependencies is complete.\n     */\n    AssetEvent.ASSET_COMPLETE = \"assetComplete\";\n    /**\n     *\n     */\n    AssetEvent.TEXTURE_SIZE_ERROR = 'textureSizeError';\n    return AssetEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AssetEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/EventBase\":[function(require,module,exports){\n\"use strict\";\nvar EventBase = (function () {\n    function EventBase(type) {\n        /**\n         * Type of event\n         * @property type\n         * @type String\n         */\n        this.type = undefined;\n        /**\n         * Reference to target object\n         * @property target\n         * @type Object\n         */\n        this.target = undefined;\n        this.type = type;\n    }\n    /**\n     * Clones the current event.\n     * @return An exact duplicate of the current event.\n     */\n    EventBase.prototype.clone = function () {\n        return new EventBase(this.type);\n    };\n    return EventBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = EventBase;\n\n},{}],\"awayjs-core/lib/events/EventDispatcher\":[function(require,module,exports){\n\"use strict\";\n/**\n * Base class for dispatching events\n*\n* @class away.events.EventDispatcher\n*\n*/\nvar EventDispatcher = (function () {\n    function EventDispatcher(target) {\n        if (target === void 0) { target = null; }\n        this.listenerObjects = new Array();\n        this.target = target || this;\n    }\n    /**\n     * Add an event listener\n     * @method addEventListener\n     * @param {String} Name of event to add a listener for\n     * @param {Function} Callback function\n     */\n    EventDispatcher.prototype.addEventListener = function (type, listener) {\n        var l = this.listenerObjects[type];\n        if (l === undefined)\n            l = this.listenerObjects[type] = new ListenerObject();\n        l.addEventListener(listener);\n    };\n    /**\n     * Remove an event listener\n     * @method removeEventListener\n     * @param {String} Name of event to remove a listener for\n     * @param {Function} Callback function\n     */\n    EventDispatcher.prototype.removeEventListener = function (type, listener) {\n        var l = this.listenerObjects[type];\n        if (l) {\n            l.removeEventListener(listener);\n            if (l.numListeners == 0)\n                delete this.listenerObjects[type];\n        }\n    };\n    /**\n     * Dispatch an event\n     * @method dispatchEvent\n     * @param {Event} Event to dispatch\n     */\n    EventDispatcher.prototype.dispatchEvent = function (event) {\n        var l = this.listenerObjects[event.type];\n        if (l) {\n            event.target = this.target;\n            l.dispatchEvent(event);\n        }\n    };\n    /**\n     * check if an object has an event listener assigned to it\n     * @method hasListener\n     * @param {String} Name of event to remove a listener for\n     * @param {Function} Callback function\n     */\n    EventDispatcher.prototype.hasEventListener = function (type, listener) {\n        if (this.listenerObjects[type] === undefined)\n            return false;\n        if (listener != null)\n            return this.listenerObjects[type].getEventListenerIndex(listener) !== -1;\n        return this.listenerObjects[type].numListeners > 0;\n    };\n    return EventDispatcher;\n}());\nvar ListenerObject = (function () {\n    function ListenerObject() {\n        this.index = 0;\n        this.listeners = new Array();\n        this.numListeners = 0;\n    }\n    ListenerObject.prototype.addEventListener = function (listener) {\n        //check if listener already added\n        if (this.getEventListenerIndex(listener) !== -1)\n            return;\n        this.listeners.push(listener);\n        this.numListeners++;\n    };\n    ListenerObject.prototype.removeEventListener = function (listener) {\n        //check if listener exists\n        var index = this.getEventListenerIndex(listener);\n        if (index === -1)\n            return;\n        this.listeners.splice(index, 1);\n        if (index <= this.index)\n            this.index--;\n        this.numListeners--;\n    };\n    ListenerObject.prototype.dispatchEvent = function (event) {\n        var len = this.numListeners;\n        for (this.index = 0; this.index < len && this.index < this.numListeners; this.index++)\n            this.listeners[this.index](event);\n    };\n    /**\n     * get Event Listener Index in array. Returns -1 if no listener is added\n     * @method getEventListenerIndex\n     * @param {String} Name of event to remove a listener for\n     * @param {Function} Callback function\n     */\n    ListenerObject.prototype.getEventListenerIndex = function (listener) {\n        for (var index = 0; index < this.numListeners; index++)\n            if (listener == this.listeners[index])\n                return index;\n        return -1;\n    };\n    return ListenerObject;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = EventDispatcher;\n\n},{}],\"awayjs-core/lib/events/IEventDispatcher\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/events/LoaderEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar LoaderEvent = (function (_super) {\n    __extends(LoaderEvent, _super);\n    /**\n     * Create a new LoaderEvent object.\n     *\n     * @param type The event type.\n     * @param url The url of the loaded resource.\n     * @param assets The assets of the loaded resource.\n     */\n    function LoaderEvent(type, url, content, assets) {\n        if (url === void 0) { url = null; }\n        if (content === void 0) { content = null; }\n        if (assets === void 0) { assets = null; }\n        _super.call(this, type);\n        this._url = url;\n        this._content = content;\n        this._assets = assets;\n    }\n    Object.defineProperty(LoaderEvent.prototype, \"content\", {\n        /**\n         * The content returned if the resource has been loaded inside a <code>Loader</code> object.\n         */\n        get: function () {\n            return this._content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderEvent.prototype, \"url\", {\n        /**\n         * The url of the loaded resource.\n         */\n        get: function () {\n            return this._url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderEvent.prototype, \"assets\", {\n        /**\n         * The error string on loadError.\n         */\n        get: function () {\n            return this._assets;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the current event.\n     * @return An exact duplicate of the current event.\n     */\n    LoaderEvent.prototype.clone = function () {\n        return new LoaderEvent(this.type, this._url, this._content, this._assets);\n    };\n    /**\n     * Dispatched when the loading of a session and all of its dependencies is complete.\n     */\n    LoaderEvent.LOAD_COMPLETE = \"loadComplete\";\n    return LoaderEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LoaderEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/ParserEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar ParserEvent = (function (_super) {\n    __extends(ParserEvent, _super);\n    function ParserEvent(type, message) {\n        if (message === void 0) { message = ''; }\n        _super.call(this, type);\n        this._message = message;\n    }\n    Object.defineProperty(ParserEvent.prototype, \"message\", {\n        /**\n         * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\n         */\n        get: function () {\n            return this._message;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParserEvent.prototype.clone = function () {\n        return new ParserEvent(this.type, this._message);\n    };\n    /**\n     * Dispatched when parsing of an asset completed.\n     */\n    ParserEvent.PARSE_COMPLETE = 'parseComplete';\n    /**\n     * Dispatched when an error occurs while parsing the data (e.g. because it's\n     * incorrectly formatted.)\n     */\n    ParserEvent.PARSE_ERROR = 'parseError';\n    /**\n     * Dispatched when a parser is ready to have dependencies retrieved and resolved.\n     * This is an internal event that should rarely (if ever) be listened for by\n     * external classes.\n     */\n    ParserEvent.READY_FOR_DEPENDENCIES = 'readyForDependencies';\n    return ParserEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParserEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/ProjectionEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar ProjectionEvent = (function (_super) {\n    __extends(ProjectionEvent, _super);\n    function ProjectionEvent(type, projection) {\n        _super.call(this, type);\n        this._projection = projection;\n    }\n    Object.defineProperty(ProjectionEvent.prototype, \"projection\", {\n        get: function () {\n            return this._projection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProjectionEvent.MATRIX_CHANGED = \"matrixChanged\";\n    return ProjectionEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ProjectionEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/TimerEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar TimerEvent = (function (_super) {\n    __extends(TimerEvent, _super);\n    function TimerEvent(type) {\n        _super.call(this, type);\n    }\n    /**\n     *\n     */\n    TimerEvent.TIMER = \"timer\";\n    /**\n     *\n     */\n    TimerEvent.TIMER_COMPLETE = \"timerComplete\";\n    return TimerEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TimerEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events/URLLoaderEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar URLLoaderEvent = (function (_super) {\n    __extends(URLLoaderEvent, _super);\n    function URLLoaderEvent(type, urlLoader) {\n        _super.call(this, type);\n        this._urlLoader = urlLoader;\n    }\n    Object.defineProperty(URLLoaderEvent.prototype, \"urlLoader\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._urlLoader;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    URLLoaderEvent.prototype.clone = function () {\n        return new URLLoaderEvent(this.type, this._urlLoader);\n    };\n    URLLoaderEvent.HTTP_STATUS = \"httpStatus\";\n    URLLoaderEvent.LOAD_ERROR = \"loadError\";\n    URLLoaderEvent.LOAD_PROGRESS = \"loadProgress\";\n    URLLoaderEvent.LOAD_START = \"loadStart\";\n    URLLoaderEvent.LOAD_COMPLETE = \"loadComplete\";\n    return URLLoaderEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = URLLoaderEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":\"awayjs-core/lib/events/EventBase\"}],\"awayjs-core/lib/events\":[function(require,module,exports){\n\"use strict\";\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nexports.AssetEvent = AssetEvent_1.default;\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nexports.EventBase = EventBase_1.default;\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nexports.EventDispatcher = EventDispatcher_1.default;\nvar LoaderEvent_1 = require(\"awayjs-core/lib/events/LoaderEvent\");\nexports.LoaderEvent = LoaderEvent_1.default;\nvar ParserEvent_1 = require(\"awayjs-core/lib/events/ParserEvent\");\nexports.ParserEvent = ParserEvent_1.default;\nvar ProjectionEvent_1 = require(\"awayjs-core/lib/events/ProjectionEvent\");\nexports.ProjectionEvent = ProjectionEvent_1.default;\nvar TimerEvent_1 = require(\"awayjs-core/lib/events/TimerEvent\");\nexports.TimerEvent = TimerEvent_1.default;\nvar URLLoaderEvent_1 = require(\"awayjs-core/lib/events/URLLoaderEvent\");\nexports.URLLoaderEvent = URLLoaderEvent_1.default;\n\n},{\"awayjs-core/lib/events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"awayjs-core/lib/events/EventBase\":\"awayjs-core/lib/events/EventBase\",\"awayjs-core/lib/events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"awayjs-core/lib/events/LoaderEvent\":\"awayjs-core/lib/events/LoaderEvent\",\"awayjs-core/lib/events/ParserEvent\":\"awayjs-core/lib/events/ParserEvent\",\"awayjs-core/lib/events/ProjectionEvent\":\"awayjs-core/lib/events/ProjectionEvent\",\"awayjs-core/lib/events/TimerEvent\":\"awayjs-core/lib/events/TimerEvent\",\"awayjs-core/lib/events/URLLoaderEvent\":\"awayjs-core/lib/events/URLLoaderEvent\"}],\"awayjs-core/lib/geom/Box\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n * A Box object is an area defined by its position, as indicated by its\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\n * height and depth.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n * <code>height</code> <code>depth</code> properties of the Box class are\n * independent of each other; changing the value of one property has no effect\n * on the others. However, the <code>right</code>, <code>bottom</code> and\n * <code>back</code> properties are integrally related to those six\n * properties. For example, if you change the value of the <code>right</code>\n * property, the value of the <code>width</code> property changes; if you\n * change the <code>bottom</code> property, the value of the\n * <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Box objects:</p>\n *\n * <ul>\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\n * </ul>\n *\n * <p>You can use the <code>new Box()</code> constructor to create a\n * Box object.</p>\n *\n * <p><b>Note:</b> The Box class does not define a cubic Shape\n * display object.\n */\nvar Box = (function () {\n    /**\n     * Creates a new Box object with the top-left-front corner specified by the\n     * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\n     * specified <code>width</code>, <code>height</code> and <code>depth</code>\n     * parameters. If you call this public without parameters, a box with\n     * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n     * <code>height</code> and <code>depth</code> properties set to 0 is created.\n     *\n     * @param x      The <i>x</i> coordinate of the top-left-front corner of the\n     *               box.\n     * @param y      The <i>y</i> coordinate of the top-left-front corner of the\n     *               box.\n     * @param z      The <i>z</i> coordinate of the top-left-front corner of the\n     *               box.\n     * @param width  The width of the box, in pixels.\n     * @param height The height of the box, in pixels.\n     * @param depth The depth of the box, in pixels.\n     */\n    function Box(x, y, z, width, height, depth) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (width === void 0) { width = 0; }\n        if (height === void 0) { height = 0; }\n        if (depth === void 0) { depth = 0; }\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n    }\n    Object.defineProperty(Box.prototype, \"back\", {\n        /**\n         * The sum of the <code>z</code> and <code>height</code> properties.\n         */\n        get: function () {\n            return this.z + this.depth;\n        },\n        set: function (val) {\n            this.depth = val - this.z;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"bottom\", {\n        /**\n         * The sum of the <code>y</code> and <code>height</code> properties.\n         */\n        get: function () {\n            return this.y + this.height;\n        },\n        set: function (val) {\n            this.height = val - this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"bottomRightBack\", {\n        /**\n         * The location of the Box object's bottom-right corner, determined by the\n         * values of the <code>right</code> and <code>bottom</code> properties.\n         */\n        get: function () {\n            if (this._bottomRightBack == null)\n                this._bottomRightBack = new Vector3D_1.default();\n            this._bottomRightBack.x = this.x + this.width;\n            this._bottomRightBack.y = this.y + this.height;\n            this._bottomRightBack.z = this.z + this.depth;\n            return this._bottomRightBack;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"front\", {\n        /**\n         * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\n         * the <code>front</code> property of a Box object has no effect on the\n         * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\n         * properties. However it does affect the <code>depth</code> property,\n         * whereas changing the <code>z</code> value does <i>not</i> affect the\n         * <code>depth</code> property.\n         *\n         * <p>The value of the <code>left</code> property is equal to the value of\n         * the <code>x</code> property.</p>\n         */\n        get: function () {\n            return this.z;\n        },\n        set: function (val) {\n            this.depth += this.z - val;\n            this.z = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"left\", {\n        /**\n         * The <i>x</i> coordinate of the top-left corner of the box. Changing the\n         * <code>left</code> property of a Box object has no effect on the\n         * <code>y</code> and <code>height</code> properties. However it does affect\n         * the <code>width</code> property, whereas changing the <code>x</code> value\n         * does <i>not</i> affect the <code>width</code> property.\n         *\n         * <p>The value of the <code>left</code> property is equal to the value of\n         * the <code>x</code> property.</p>\n         */\n        get: function () {\n            return this.x;\n        },\n        set: function (val) {\n            this.width += this.x - val;\n            this.x = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"right\", {\n        /**\n         * The sum of the <code>x</code> and <code>width</code> properties.\n         */\n        get: function () {\n            return this.x + this.width;\n        },\n        set: function (val) {\n            this.width = val - this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"size\", {\n        /**\n         * The size of the Box object, expressed as a Vector3D object with the\n         * values of the <code>width</code>, <code>height</code> and\n         * <code>depth</code> properties.\n         */\n        get: function () {\n            if (this._size == null)\n                this._size = new Vector3D_1.default();\n            this._size.x = this.width;\n            this._size.y = this.height;\n            this._size.z = this.depth;\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"top\", {\n        /**\n         * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\n         * the <code>top</code> property of a Box object has no effect on the\n         * <code>x</code> and <code>width</code> properties. However it does affect\n         * the <code>height</code> property, whereas changing the <code>y</code>\n         * value does <i>not</i> affect the <code>height</code> property.\n         *\n         * <p>The value of the <code>top</code> property is equal to the value of the\n         * <code>y</code> property.</p>\n         */\n        get: function () {\n            return this.y;\n        },\n        set: function (val) {\n            this.height += (this.y - val);\n            this.y = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Box.prototype, \"topLeftFront\", {\n        /**\n         * The location of the Box object's top-left-front corner, determined by the\n         * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\n         */\n        get: function () {\n            if (this._topLeftFront == null)\n                this._topLeftFront = new Vector3D_1.default();\n            this._topLeftFront.x = this.x;\n            this._topLeftFront.y = this.y;\n            this._topLeftFront.z = this.z;\n            return this._topLeftFront;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a new Box object with the same values for the <code>x</code>,\n     * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\n     * and <code>depth</code> properties as the original Box object.\n     *\n     * @return A new Box object with the same values for the <code>x</code>,\n     *         <code>y</code>, <code>z</code>, <code>width</code>,\n     *         <code>height</code> and <code>depth</code> properties as the\n     *         original Box object.\n     */\n    Box.prototype.clone = function () {\n        return new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\n    };\n    /**\n     * Determines whether the specified position is contained within the cubic\n     * region defined by this Box object.\n     *\n     * @param x The <i>x</i> coordinate(horizontal component) of the position.\n     * @param y The <i>y</i> coordinate(vertical component) of the position.\n     * @param z The <i>z</i> coordinate(longitudinal component) of the position.\n     * @return A value of <code>true</code> if the Box object contains the\n     *         specified position; otherwise <code>false</code>.\n     */\n    Box.prototype.contains = function (x, y, z) {\n        return (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\n    };\n    /**\n     * Determines whether the specified position is contained within the cubic\n     * region defined by this Box object. This method is similar to the\n     * <code>Box.contains()</code> method, except that it takes a Vector3D\n     * object as a parameter.\n     *\n     * @param position The position, as represented by its <i>x</i>, <i>y</i> and\n     *                 <i>z</i> coordinates.\n     * @return A value of <code>true</code> if the Box object contains the\n     *         specified position; otherwise <code>false</code>.\n     */\n    Box.prototype.containsPoint = function (position) {\n        return (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\n    };\n    /**\n     * Determines whether the Box object specified by the <code>box</code>\n     * parameter is contained within this Box object. A Box object is said to\n     * contain another if the second Box object falls entirely within the\n     * boundaries of the first.\n     *\n     * @param box The Box object being checked.\n     * @return A value of <code>true</code> if the Box object that you specify\n     *         is contained by this Box object; otherwise <code>false</code>.\n     */\n    Box.prototype.containsBox = function (box) {\n        return (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth);\n    };\n    /**\n     * Copies all of box data from the source Box object into the calling\n     * Box object.\n     *\n     * @param sourceBox The Box object from which to copy the data.\n     */\n    Box.prototype.copyFrom = function (sourceBox) {\n        this.x = sourceBox.x;\n        this.y = sourceBox.y;\n        this.z = sourceBox.z;\n        this.width = sourceBox.width;\n        this.height = sourceBox.height;\n        this.depth = sourceBox.depth;\n    };\n    /**\n     * Determines whether the object specified in the <code>toCompare</code>\n     * parameter is equal to this Box object. This method compares the\n     * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n     * <code>height</code> and <code>depth</code> properties of an object against\n     * the same properties of this Box object.\n     *\n     * @param toCompare The box to compare to this Box object.\n     * @return A value of <code>true</code> if the object has exactly the same\n     *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\n     *         <code>width</code>, <code>height</code> and <code>depth</code>\n     *         properties as this Box object; otherwise <code>false</code>.\n     */\n    Box.prototype.equals = function (toCompare) {\n        return (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth);\n    };\n    /**\n     * Increases the size of the Box object by the specified amounts, in\n     * pixels. The center point of the Box object stays the same, and its\n     * size increases to the left and right by the <code>dx</code> value, to\n     * the top and the bottom by the <code>dy</code> value, and to\n     * the front and the back by the <code>dz</code> value.\n     *\n     * @param dx The value to be added to the left and the right of the Box\n     *           object. The following equation is used to calculate the new\n     *           width and position of the box:\n     * @param dy The value to be added to the top and the bottom of the Box\n     *           object. The following equation is used to calculate the new\n     *           height and position of the box:\n     * @param dz The value to be added to the front and the back of the Box\n     *           object. The following equation is used to calculate the new\n     *           depth and position of the box:\n     */\n    Box.prototype.inflate = function (dx, dy, dz) {\n        this.x -= dx / 2;\n        this.y -= dy / 2;\n        this.z -= dz / 2;\n        this.width += dx / 2;\n        this.height += dy / 2;\n        this.depth += dz / 2;\n    };\n    /**\n     * Increases the size of the Box object. This method is similar to the\n     * <code>Box.inflate()</code> method except it takes a Vector3D object as\n     * a parameter.\n     *\n     * <p>The following two code examples give the same result:</p>\n     *\n     * @param delta The <code>x</code> property of this Vector3D object is used to\n     *              increase the horizontal dimension of the Box object.\n     *              The <code>y</code> property is used to increase the vertical\n     *              dimension of the Box object.\n     *              The <code>z</code> property is used to increase the\n     *              longitudinal dimension of the Box object.\n     */\n    Box.prototype.inflatePoint = function (delta) {\n        this.x -= delta.x / 2;\n        this.y -= delta.y / 2;\n        this.z -= delta.z / 2;\n        this.width += delta.x / 2;\n        this.height += delta.y / 2;\n        this.depth += delta.z / 2;\n    };\n    /**\n     * If the Box object specified in the <code>toIntersect</code> parameter\n     * intersects with this Box object, returns the area of intersection\n     * as a Box object. If the boxes do not intersect, this method returns an\n     * empty Box object with its properties set to 0.\n     *\n     * @param toIntersect The Box object to compare against to see if it\n     *                    intersects with this Box object.\n     * @return A Box object that equals the area of intersection. If the\n     *         boxes do not intersect, this method returns an empty Box\n     *         object; that is, a box with its <code>x</code>, <code>y</code>,\n     *         <code>z</code>, <code>width</code>,  <code>height</code>, and\n     *         <code>depth</code> properties set to 0.\n     */\n    Box.prototype.intersection = function (toIntersect) {\n        if (this.intersects(toIntersect)) {\n            var i = new Box();\n            if (this.x > toIntersect.x) {\n                i.x = this.x;\n                i.width = toIntersect.x - this.x + toIntersect.width;\n                if (i.width > this.width)\n                    i.width = this.width;\n            }\n            else {\n                i.x = toIntersect.x;\n                i.width = this.x - toIntersect.x + this.width;\n                if (i.width > toIntersect.width)\n                    i.width = toIntersect.width;\n            }\n            if (this.y > toIntersect.y) {\n                i.y = this.y;\n                i.height = toIntersect.y - this.y + toIntersect.height;\n                if (i.height > this.height)\n                    i.height = this.height;\n            }\n            else {\n                i.y = toIntersect.y;\n                i.height = this.y - toIntersect.y + this.height;\n                if (i.height > toIntersect.height)\n                    i.height = toIntersect.height;\n            }\n            if (this.z > toIntersect.z) {\n                i.z = this.z;\n                i.depth = toIntersect.z - this.z + toIntersect.depth;\n                if (i.depth > this.depth)\n                    i.depth = this.depth;\n            }\n            else {\n                i.z = toIntersect.z;\n                i.depth = this.z - toIntersect.z + this.depth;\n                if (i.depth > toIntersect.depth)\n                    i.depth = toIntersect.depth;\n            }\n            return i;\n        }\n        return new Box();\n    };\n    /**\n     * Determines whether the object specified in the <code>toIntersect</code>\n     * parameter intersects with this Box object. This method checks the\n     * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n     * <code>height</code>, and <code>depth</code> properties of the specified\n     * Box object to see if it intersects with this Box object.\n     *\n     * @param toIntersect The Box object to compare against this Box object.\n     * @return A value of <code>true</code> if the specified object intersects\n     *         with this Box object; otherwise <code>false</code>.\n     */\n    Box.prototype.intersects = function (toIntersect) {\n        return (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\n    };\n    Box.prototype.rayIntersection = function (position, direction, targetNormal) {\n        if (this.containsPoint(position))\n            return 0;\n        var halfExtentsX = this.width / 2;\n        var halfExtentsY = this.height / 2;\n        var halfExtentsZ = this.depth / 2;\n        var centerX = this.x + halfExtentsX;\n        var centerY = this.y + halfExtentsY;\n        var centerZ = this.z + halfExtentsZ;\n        var px = position.x - centerX;\n        var py = position.y - centerY;\n        var pz = position.z - centerZ;\n        var vx = direction.x;\n        var vy = direction.y;\n        var vz = direction.z;\n        var ix;\n        var iy;\n        var iz;\n        var rayEntryDistance;\n        // ray-plane tests\n        var intersects;\n        if (vx < 0) {\n            rayEntryDistance = (halfExtentsX - px) / vx;\n            if (rayEntryDistance > 0) {\n                iy = py + rayEntryDistance * vy;\n                iz = pz + rayEntryDistance * vz;\n                if (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n                    targetNormal.x = 1;\n                    targetNormal.y = 0;\n                    targetNormal.z = 0;\n                    intersects = true;\n                }\n            }\n        }\n        if (!intersects && vx > 0) {\n            rayEntryDistance = (-halfExtentsX - px) / vx;\n            if (rayEntryDistance > 0) {\n                iy = py + rayEntryDistance * vy;\n                iz = pz + rayEntryDistance * vz;\n                if (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n                    targetNormal.x = -1;\n                    targetNormal.y = 0;\n                    targetNormal.z = 0;\n                    intersects = true;\n                }\n            }\n        }\n        if (!intersects && vy < 0) {\n            rayEntryDistance = (halfExtentsY - py) / vy;\n            if (rayEntryDistance > 0) {\n                ix = px + rayEntryDistance * vx;\n                iz = pz + rayEntryDistance * vz;\n                if (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n                    targetNormal.x = 0;\n                    targetNormal.y = 1;\n                    targetNormal.z = 0;\n                    intersects = true;\n                }\n            }\n        }\n        if (!intersects && vy > 0) {\n            rayEntryDistance = (-halfExtentsY - py) / vy;\n            if (rayEntryDistance > 0) {\n                ix = px + rayEntryDistance * vx;\n                iz = pz + rayEntryDistance * vz;\n                if (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n                    targetNormal.x = 0;\n                    targetNormal.y = -1;\n                    targetNormal.z = 0;\n                    intersects = true;\n                }\n            }\n        }\n        if (!intersects && vz < 0) {\n            rayEntryDistance = (halfExtentsZ - pz) / vz;\n            if (rayEntryDistance > 0) {\n                ix = px + rayEntryDistance * vx;\n                iy = py + rayEntryDistance * vy;\n                if (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n                    targetNormal.x = 0;\n                    targetNormal.y = 0;\n                    targetNormal.z = 1;\n                    intersects = true;\n                }\n            }\n        }\n        if (!intersects && vz > 0) {\n            rayEntryDistance = (-halfExtentsZ - pz) / vz;\n            if (rayEntryDistance > 0) {\n                ix = px + rayEntryDistance * vx;\n                iy = py + rayEntryDistance * vy;\n                if (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n                    targetNormal.x = 0;\n                    targetNormal.y = 0;\n                    targetNormal.z = -1;\n                    intersects = true;\n                }\n            }\n        }\n        return intersects ? rayEntryDistance : -1;\n    };\n    /**\n     * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\n     *\n     * @param point The point for which to find the closest point on the Box\n     * @param target An optional Vector3D to store the result to prevent creating a new object.\n     * @return\n     */\n    Box.prototype.closestPointToPoint = function (point, target) {\n        if (target === void 0) { target = null; }\n        var p;\n        if (target == null)\n            target = new Vector3D_1.default();\n        p = point.x;\n        if (p < this.x)\n            p = this.x;\n        if (p > this.x + this.width)\n            p = this.x + this.width;\n        target.x = p;\n        p = point.y;\n        if (p < this.y + this.height)\n            p = this.y + this.height;\n        if (p > this.y)\n            p = this.y;\n        target.y = p;\n        p = point.z;\n        if (p < this.z)\n            p = this.z;\n        if (p > this.z + this.depth)\n            p = this.z + this.depth;\n        target.z = p;\n        return target;\n    };\n    /**\n     * Determines whether or not this Box object is empty.\n     *\n     * @return A value of <code>true</code> if the Box object's width, height or\n     *         depth is less than or equal to 0; otherwise <code>false</code>.\n     */\n    Box.prototype.isEmpty = function () {\n        return (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\n    };\n    /**\n     * Adjusts the location of the Box object, as determined by its\n     * top-left-front corner, by the specified amounts.\n     *\n     * @param dx Moves the <i>x</i> value of the Box object by this amount.\n     * @param dy Moves the <i>y</i> value of the Box object by this amount.\n     * @param dz Moves the <i>z</i> value of the Box object by this amount.\n     */\n    Box.prototype.offset = function (dx, dy, dz) {\n        this.x += dx;\n        this.y += dy;\n        this.z += dz;\n    };\n    /**\n     * Adjusts the location of the Box object using a Vector3D object as a\n     * parameter. This method is similar to the <code>Box.offset()</code>\n     * method, except that it takes a Vector3D object as a parameter.\n     *\n     * @param position A Vector3D object to use to offset this Box object.\n     */\n    Box.prototype.offsetPosition = function (position) {\n        this.x += position.x;\n        this.y += position.y;\n        this.z += position.z;\n    };\n    /**\n     * Sets all of the Box object's properties to 0. A Box object is empty if its\n     * width, height or depth is less than or equal to 0.\n     *\n     * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n     * <code>z</code>, <code>width</code>, <code>height</code>, and\n     * <code>depth</code> properties to 0.</p>\n     *\n     */\n    Box.prototype.setEmpty = function () {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.width = 0;\n        this.height = 0;\n        this.depth = 0;\n    };\n    Box.prototype.setBoundIdentity = function () {\n        this.x = Number.MAX_VALUE / 2;\n        this.y = Number.MAX_VALUE / 2;\n        this.z = Number.MAX_VALUE / 2;\n        this.width = -Number.MAX_VALUE;\n        this.height = -Number.MAX_VALUE;\n        this.depth = -Number.MAX_VALUE;\n    };\n    /**\n     * Sets the members of Box to the specified values\n     *\n     * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\n     *                box.\n     * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\n     *                box.\n     * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\n     *                box.\n     * @param widtha  The width of the box, in pixels.\n     * @param heighta The height of the box, in pixels.\n     * @param deptha  The depth of the box, in pixels.\n     */\n    Box.prototype.setTo = function (xa, ya, za, widtha, heighta, deptha) {\n        this.x = xa;\n        this.y = ya;\n        this.z = za;\n        this.width = widtha;\n        this.height = heighta;\n        this.depth = deptha;\n    };\n    /**\n     * Builds and returns a string that lists the horizontal, vertical and\n     * longitudinal positions and the width, height and depth of the Box object.\n     *\n     * @return A string listing the value of each of the following properties of\n     *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\n     *         <code>width</code>, <code>height</code>, and <code>depth</code>.\n     */\n    Box.prototype.toString = function () {\n        return \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\n    };\n    /**\n     * Adds two boxes together to create a new Box object, by filling\n     * in the horizontal, vertical and longitudinal space between the two boxes.\n     *\n     * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\n     * <code>0</code> as the height, width or depth value, such as: <code>var\n     * box2:Box = new Box(300,300,300,50,50,0);</code></p>\n     *\n     * @param toUnion A Box object to add to this Box object.\n     * @return A new Box object that is the union of the two boxes.\n     */\n    Box.prototype.union = function (toUnion, target) {\n        if (target === void 0) { target = null; }\n        if (target == null)\n            target = new Box();\n        if (this.x < toUnion.x) {\n            target.x = this.x;\n            target.width = toUnion.x - this.x + toUnion.width;\n            if (target.width < this.width)\n                target.width = this.width;\n        }\n        else {\n            target.x = toUnion.x;\n            target.width = this.x - toUnion.x + this.width;\n            if (target.width < toUnion.width)\n                target.width = toUnion.width;\n        }\n        if (this.y < toUnion.y) {\n            target.y = this.y;\n            target.height = toUnion.y - this.y + toUnion.height;\n            if (target.height < this.height)\n                target.height = this.height;\n        }\n        else {\n            target.y = toUnion.y;\n            target.height = this.y - toUnion.y + this.height;\n            if (target.height < toUnion.height)\n                target.height = toUnion.height;\n        }\n        if (this.z < toUnion.z) {\n            target.z = this.z;\n            target.depth = toUnion.z - this.z + toUnion.depth;\n            if (target.depth < this.depth)\n                target.depth = this.depth;\n        }\n        else {\n            target.z = toUnion.z;\n            target.depth = this.z - toUnion.z + this.depth;\n            if (target.depth < toUnion.depth)\n                target.depth = toUnion.depth;\n        }\n        return target;\n    };\n    return Box;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Box;\n\n},{\"awayjs-core/lib/geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/geom/ColorTransform\":[function(require,module,exports){\n\"use strict\";\nvar ColorUtils_1 = require(\"awayjs-core/lib/utils/ColorUtils\");\n/**\n * The ColorTransform class lets you adjust the color values in a display\n * object. The color adjustment or <i>color transformation</i> can be applied\n * to all four channels: red, green, blue, and alpha transparency.\n *\n * <p>When a ColorTransform object is applied to a display object, a new value\n * for each color channel is calculated like this:</p>\n *\n * <ul>\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\n * <code>redOffset</code></li>\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\n * <code>greenOffset</code></li>\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\n * <code>blueOffset</code></li>\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\n * <code>alphaOffset</code></li>\n * </ul>\n *\n * <p>If any of the color channel values is greater than 255 after the\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\n *\n * <p>You can use ColorTransform objects in the following ways:</p>\n *\n * <ul>\n *   <li>In the <code>colorTransform</code> parameter of the\n * <code>colorTransform()</code> method of the BitmapData class</li>\n *   <li>As the <code>colorTransform</code> property of a Transform object\n * (which can be used as the <code>transform</code> property of a display\n * object)</li>\n * </ul>\n *\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\n * a ColorTransform object before you can call the methods of the\n * ColorTransform object.</p>\n *\n * <p>Color transformations do not apply to the background color of a movie\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\n * that are attached to the movie clip.</p>\n */\nvar ColorTransform = (function () {\n    /**\n     * Creates a ColorTransform object for a display object with the specified\n     * color channel values and alpha values.\n     *\n     * @param redMultiplier   The value for the red multiplier, in the range from\n     *                        0 to 1.\n     * @param greenMultiplier The value for the green multiplier, in the range\n     *                        from 0 to 1.\n     * @param blueMultiplier  The value for the blue multiplier, in the range\n     *                        from 0 to 1.\n     * @param alphaMultiplier The value for the alpha transparency multiplier, in\n     *                        the range from 0 to 1.\n     * @param redOffset       The offset value for the red color channel, in the\n     *                        range from -255 to 255.\n     * @param greenOffset     The offset value for the green color channel, in\n     *                        the range from -255 to 255.\n     * @param blueOffset      The offset for the blue color channel value, in the\n     *                        range from -255 to 255.\n     * @param alphaOffset     The offset for alpha transparency channel value, in\n     *                        the range from -255 to 255.\n     */\n    function ColorTransform(redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset) {\n        if (redMultiplier === void 0) { redMultiplier = 1; }\n        if (greenMultiplier === void 0) { greenMultiplier = 1; }\n        if (blueMultiplier === void 0) { blueMultiplier = 1; }\n        if (alphaMultiplier === void 0) { alphaMultiplier = 1; }\n        if (redOffset === void 0) { redOffset = 0; }\n        if (greenOffset === void 0) { greenOffset = 0; }\n        if (blueOffset === void 0) { blueOffset = 0; }\n        if (alphaOffset === void 0) { alphaOffset = 0; }\n        this.redMultiplier = redMultiplier;\n        this.greenMultiplier = greenMultiplier;\n        this.blueMultiplier = blueMultiplier;\n        this.alphaMultiplier = alphaMultiplier;\n        this.redOffset = redOffset;\n        this.greenOffset = greenOffset;\n        this.blueOffset = blueOffset;\n        this.alphaOffset = alphaOffset;\n    }\n    Object.defineProperty(ColorTransform.prototype, \"color\", {\n        /**\n         * The RGB color value for a ColorTransform object.\n         *\n         * <p>When you set this property, it changes the three color offset values\n         * (<code>redOffset</code>, <code>greenOffset</code>, and\n         * <code>blueOffset</code>) accordingly, and it sets the three color\n         * multiplier values(<code>redMultiplier</code>,\n         * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\n         * alpha transparency multiplier and offset values do not change.</p>\n         *\n         * <p>When you pass a value for this property, use the format\n         * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\n         * hexadecimal digits that specify the offset of each color component. The 0x\n         * tells the ActionScript compiler that the number is a hexadecimal\n         * value.</p>\n         */\n        get: function () {\n            return ((this.redOffset << 16) | (this.greenOffset << 8) | this.blueOffset);\n        },\n        set: function (value) {\n            var argb = ColorUtils_1.default.float32ColorToARGB(value);\n            this.redOffset = argb[1]; //(value >> 16) & 0xFF;\n            this.greenOffset = argb[2]; //(value >> 8) & 0xFF;\n            this.blueOffset = argb[3]; //value & 0xFF;\n            this.redMultiplier = 0;\n            this.greenMultiplier = 0;\n            this.blueMultiplier = 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ColorTransform.prototype.clear = function () {\n        this.redMultiplier = 1;\n        this.greenMultiplier = 1;\n        this.blueMultiplier = 1;\n        this.alphaMultiplier = 1;\n        this.redOffset = 0;\n        this.greenOffset = 0;\n        this.blueOffset = 0;\n        this.alphaOffset = 0;\n    };\n    ColorTransform.prototype.clone = function () {\n        return new ColorTransform(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n    };\n    ColorTransform.prototype.copyFrom = function (source) {\n        this.redMultiplier = source.redMultiplier;\n        this.greenMultiplier = source.greenMultiplier;\n        this.blueMultiplier = source.blueMultiplier;\n        this.alphaMultiplier = source.alphaMultiplier;\n        this.redOffset = source.redOffset;\n        this.greenOffset = source.greenOffset;\n        this.blueOffset = source.blueOffset;\n        this.alphaOffset = source.alphaOffset;\n    };\n    ColorTransform.prototype.copyTo = function (destination) {\n        destination.copyFrom(this);\n    };\n    ColorTransform.prototype.prepend = function (ct) {\n        this.redOffset += ct.redOffset * this.redMultiplier;\n        this.greenOffset += ct.greenOffset * this.greenMultiplier;\n        this.blueOffset += ct.blueOffset * this.blueMultiplier;\n        this.alphaOffset += ct.alphaOffset * this.alphaMultiplier;\n        this.redMultiplier *= ct.redMultiplier;\n        this.greenMultiplier *= ct.greenMultiplier;\n        this.blueMultiplier *= ct.blueMultiplier;\n        this.alphaMultiplier *= ct.alphaMultiplier;\n    };\n    return ColorTransform;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ColorTransform;\n\n},{\"awayjs-core/lib/utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\"}],\"awayjs-core/lib/geom/MathConsts\":[function(require,module,exports){\n\"use strict\";\n/**\n* MathConsts provides some commonly used mathematical constants\n*/\nvar MathConsts = (function () {\n    function MathConsts() {\n    }\n    /**\n     * The amount to multiply with when converting radians to degrees.\n     */\n    MathConsts.RADIANS_TO_DEGREES = 180 / Math.PI;\n    /**\n     * The amount to multiply with when converting degrees to radians.\n     */\n    MathConsts.DEGREES_TO_RADIANS = Math.PI / 180;\n    return MathConsts;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = MathConsts;\n\n},{}],\"awayjs-core/lib/geom/Matrix3DUtils\":[function(require,module,exports){\n\"use strict\";\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\n */\nvar Matrix3DUtils = (function () {\n    function Matrix3DUtils() {\n    }\n    /**\n     * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\n     *\n     * @param    quarternion    The quarterion object to convert.\n     */\n    Matrix3DUtils.quaternion2matrix = function (quarternion, m) {\n        if (m === void 0) { m = null; }\n        var x = quarternion.x;\n        var y = quarternion.y;\n        var z = quarternion.z;\n        var w = quarternion.w;\n        var xx = x * x;\n        var xy = x * y;\n        var xz = x * z;\n        var xw = x * w;\n        var yy = y * y;\n        var yz = y * z;\n        var yw = y * w;\n        var zz = z * z;\n        var zw = z * w;\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\n        raw[0] = 1 - 2 * (yy + zz);\n        raw[1] = 2 * (xy + zw);\n        raw[2] = 2 * (xz - yw);\n        raw[4] = 2 * (xy - zw);\n        raw[5] = 1 - 2 * (xx + zz);\n        raw[6] = 2 * (yz + xw);\n        raw[8] = 2 * (xz + yw);\n        raw[9] = 2 * (yz - xw);\n        raw[10] = 1 - 2 * (xx + yy);\n        raw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\n        raw[15] = 1;\n        if (m) {\n            m.copyRawDataFrom(raw);\n            return m;\n        }\n        else\n            return new Matrix3D_1.default(raw);\n    };\n    /**\n     * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\n     * @param    m        The Matrix3D object to use to get the forward vector\n     * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n     * @return            The forward vector\n     */\n    Matrix3DUtils.getForward = function (m, v) {\n        if (v === void 0) { v = null; }\n        if (v === null)\n            v = new Vector3D_1.default(0.0, 0.0, 0.0);\n        m.copyColumnTo(2, v);\n        v.normalize();\n        return v;\n    };\n    /**\n     * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\n     * @param    m        The Matrix3D object to use to get the up vector\n     * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n     * @return            The up vector\n     */\n    Matrix3DUtils.getUp = function (m, v) {\n        if (v === void 0) { v = null; }\n        if (v === null)\n            v = new Vector3D_1.default(0.0, 0.0, 0.0);\n        m.copyColumnTo(1, v);\n        v.normalize();\n        return v;\n    };\n    /**\n     * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\n     * @param    m        The Matrix3D object to use to get the right vector\n     * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n     * @return            The right vector\n     */\n    Matrix3DUtils.getRight = function (m, v) {\n        if (v === void 0) { v = null; }\n        //v ||= new Vector3D(0.0, 0.0, 0.0);\n        if (v === null) {\n            v = new Vector3D_1.default(0.0, 0.0, 0.0);\n        }\n        m.copyColumnTo(0, v);\n        v.normalize();\n        return v;\n    };\n    /**\n     * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\n     */\n    Matrix3DUtils.compare = function (m1, m2) {\n        var r1 = Matrix3DUtils.RAW_DATA_CONTAINER;\n        var r2 = m2.rawData;\n        m1.copyRawDataTo(r1);\n        for (var i = 0; i < 16; ++i) {\n            if (r1[i] != r2[i])\n                return false;\n        }\n        return true;\n    };\n    Matrix3DUtils.lookAt = function (matrix, pos, dir, up) {\n        var dirN;\n        var upN;\n        var lftN;\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\n        lftN = dir.crossProduct(up);\n        lftN.normalize();\n        upN = lftN.crossProduct(dir);\n        upN.normalize();\n        dirN = dir.clone();\n        dirN.normalize();\n        raw[0] = lftN.x;\n        raw[1] = upN.x;\n        raw[2] = -dirN.x;\n        raw[3] = 0.0;\n        raw[4] = lftN.y;\n        raw[5] = upN.y;\n        raw[6] = -dirN.y;\n        raw[7] = 0.0;\n        raw[8] = lftN.z;\n        raw[9] = upN.z;\n        raw[10] = -dirN.z;\n        raw[11] = 0.0;\n        raw[12] = -lftN.dotProduct(pos);\n        raw[13] = -upN.dotProduct(pos);\n        raw[14] = dirN.dotProduct(pos);\n        raw[15] = 1.0;\n        matrix.copyRawDataFrom(raw);\n    };\n    Matrix3DUtils.reflection = function (plane, target) {\n        if (target === void 0) { target = null; }\n        if (target === null)\n            target = new Matrix3D_1.default();\n        var a = plane.a, b = plane.b, c = plane.c, d = plane.d;\n        var rawData = Matrix3DUtils.RAW_DATA_CONTAINER;\n        var ab2 = -2 * a * b;\n        var ac2 = -2 * a * c;\n        var bc2 = -2 * b * c;\n        // reflection matrix\n        rawData[0] = 1 - 2 * a * a;\n        rawData[4] = ab2;\n        rawData[8] = ac2;\n        rawData[12] = -2 * a * d;\n        rawData[1] = ab2;\n        rawData[5] = 1 - 2 * b * b;\n        rawData[9] = bc2;\n        rawData[13] = -2 * b * d;\n        rawData[2] = ac2;\n        rawData[6] = bc2;\n        rawData[10] = 1 - 2 * c * c;\n        rawData[14] = -2 * c * d;\n        rawData[3] = 0;\n        rawData[7] = 0;\n        rawData[11] = 0;\n        rawData[15] = 1;\n        target.copyRawDataFrom(rawData);\n        return target;\n    };\n    Matrix3DUtils.transformVector = function (matrix, vector, result) {\n        if (result === void 0) { result = null; }\n        if (!result)\n            result = new Vector3D_1.default();\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\n        matrix.copyRawDataTo(raw);\n        var a = raw[0];\n        var e = raw[1];\n        var i = raw[2];\n        var m = raw[3];\n        var b = raw[4];\n        var f = raw[5];\n        var j = raw[6];\n        var n = raw[7];\n        var c = raw[8];\n        var g = raw[9];\n        var k = raw[10];\n        var o = raw[11];\n        var d = raw[12];\n        var h = raw[13];\n        var l = raw[14];\n        var p = raw[15];\n        var x = vector.x;\n        var y = vector.y;\n        var z = vector.z;\n        result.x = a * x + b * y + c * z + d;\n        result.y = e * x + f * y + g * z + h;\n        result.z = i * x + j * y + k * z + l;\n        result.w = m * x + n * y + o * z + p;\n        return result;\n    };\n    Matrix3DUtils.deltaTransformVector = function (matrix, vector, result) {\n        if (result === void 0) { result = null; }\n        if (!result)\n            result = new Vector3D_1.default();\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\n        matrix.copyRawDataTo(raw);\n        var a = raw[0];\n        var e = raw[1];\n        var i = raw[2];\n        var m = raw[3];\n        var b = raw[4];\n        var f = raw[5];\n        var j = raw[6];\n        var n = raw[7];\n        var c = raw[8];\n        var g = raw[9];\n        var k = raw[10];\n        var o = raw[11];\n        var x = vector.x;\n        var y = vector.y;\n        var z = vector.z;\n        result.x = a * x + b * y + c * z;\n        result.y = e * x + f * y + g * z;\n        result.z = i * x + j * y + k * z;\n        result.w = m * x + n * y + o * z;\n        return result;\n    };\n    Matrix3DUtils.getTranslation = function (transform, result) {\n        if (result === void 0) { result = null; }\n        if (!result)\n            result = new Vector3D_1.default();\n        transform.copyColumnTo(3, result);\n        return result;\n    };\n    Matrix3DUtils.deltaTransformVectors = function (matrix, vin, vout) {\n        var raw = Matrix3DUtils.RAW_DATA_CONTAINER;\n        matrix.copyRawDataTo(raw);\n        var a = raw[0];\n        var e = raw[1];\n        var i = raw[2];\n        var m = raw[3];\n        var b = raw[4];\n        var f = raw[5];\n        var j = raw[6];\n        var n = raw[7];\n        var c = raw[8];\n        var g = raw[9];\n        var k = raw[10];\n        var o = raw[11];\n        var outIndex = 0;\n        var length = vin.length;\n        for (var index = 0; index < length; index += 3) {\n            var x = vin[index];\n            var y = vin[index + 1];\n            var z = vin[index + 2];\n            vout[outIndex++] = a * x + b * y + c * z;\n            vout[outIndex++] = e * x + f * y + g * z;\n            vout[outIndex++] = i * x + j * y + k * z;\n        }\n    };\n    /**\n     * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\n     */\n    Matrix3DUtils.RAW_DATA_CONTAINER = new Float32Array(16);\n    //public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n    Matrix3DUtils.CALCULATION_MATRIX = new Matrix3D_1.default();\n    return Matrix3DUtils;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Matrix3DUtils;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":\"awayjs-core/lib/geom/Matrix3D\",\"awayjs-core/lib/geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/geom/Matrix3D\":[function(require,module,exports){\n\"use strict\";\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Orientation3D_1 = require(\"awayjs-core/lib/geom/Orientation3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ArgumentError_1 = require(\"awayjs-core/lib/errors/ArgumentError\");\nvar Matrix3D = (function () {\n    /**\n     * Creates a Matrix3D object.\n     */\n    function Matrix3D(v) {\n        if (v === void 0) { v = null; }\n        /**\n         * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\n         *\n         * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\n         * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\n         */\n        this.rawData = new Float32Array(16);\n        this._position = new Vector3D_1.default();\n        this._positionDirty = true;\n        if (v != null && v.length == 16) {\n            this.copyRawDataFrom(v);\n        }\n        else {\n            this.identity();\n        }\n    }\n    /**\n     * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\n     */\n    Matrix3D.prototype.append = function (lhs) {\n        var lrd = lhs.rawData;\n        var m111 = this.rawData[0];\n        var m112 = this.rawData[1];\n        var m113 = this.rawData[2];\n        var m114 = this.rawData[3];\n        var m121 = this.rawData[4];\n        var m122 = this.rawData[5];\n        var m123 = this.rawData[6];\n        var m124 = this.rawData[7];\n        var m131 = this.rawData[8];\n        var m132 = this.rawData[9];\n        var m133 = this.rawData[10];\n        var m134 = this.rawData[11];\n        var m141 = this.rawData[12];\n        var m142 = this.rawData[13];\n        var m143 = this.rawData[14];\n        var m144 = this.rawData[15];\n        var m211 = lrd[0];\n        var m212 = lrd[1];\n        var m213 = lrd[2];\n        var m214 = lrd[3];\n        var m221 = lrd[4];\n        var m222 = lrd[5];\n        var m223 = lrd[6];\n        var m224 = lrd[7];\n        var m231 = lrd[8];\n        var m232 = lrd[9];\n        var m233 = lrd[10];\n        var m234 = lrd[11];\n        var m241 = lrd[12];\n        var m242 = lrd[13];\n        var m243 = lrd[14];\n        var m244 = lrd[15];\n        this.rawData[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;\n        this.rawData[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;\n        this.rawData[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;\n        this.rawData[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;\n        this.rawData[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;\n        this.rawData[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;\n        this.rawData[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;\n        this.rawData[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;\n        this.rawData[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;\n        this.rawData[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;\n        this.rawData[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;\n        this.rawData[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;\n        this.rawData[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;\n        this.rawData[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;\n        this.rawData[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;\n        this.rawData[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;\n        this._positionDirty = true;\n    };\n    /**\n     * Appends an incremental rotation to a Matrix3D object.\n     */\n    Matrix3D.prototype.appendRotation = function (degrees, axis) {\n        this.append(Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees));\n    };\n    /**\n     * Appends an incremental skew change along the x, y, and z axes to a Matrix3D object.\n     */\n    Matrix3D.prototype.appendSkew = function (xSkew, ySkew, zSkew) {\n        if (xSkew == 0 && ySkew == 0 && zSkew == 0)\n            return;\n        var raw = Matrix3D.tempRawData;\n        raw[0] = 1;\n        raw[1] = 0;\n        raw[2] = 0;\n        raw[3] = 0;\n        raw[4] = xSkew;\n        raw[5] = 1;\n        raw[6] = 0;\n        raw[7] = 0;\n        raw[8] = ySkew;\n        raw[9] = zSkew;\n        raw[10] = 1;\n        raw[11] = 0;\n        raw[12] = 0;\n        raw[13] = 0;\n        raw[14] = 0;\n        raw[15] = 1;\n        this.append(Matrix3D.tempMatrix);\n    };\n    /**\n     * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n     */\n    Matrix3D.prototype.appendScale = function (xScale, yScale, zScale) {\n        if (xScale == 1 && yScale == 1 && zScale == 1)\n            return;\n        var raw = Matrix3D.tempRawData;\n        raw[0] = xScale;\n        raw[1] = 0;\n        raw[2] = 0;\n        raw[3] = 0;\n        raw[4] = 0;\n        raw[5] = yScale;\n        raw[6] = 0;\n        raw[7] = 0;\n        raw[8] = 0;\n        raw[9] = 0;\n        raw[10] = zScale;\n        raw[11] = 0;\n        raw[12] = 0;\n        raw[13] = 0;\n        raw[14] = 0;\n        raw[15] = 1;\n        this.append(Matrix3D.tempMatrix);\n    };\n    /**\n     * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n     */\n    Matrix3D.prototype.appendTranslation = function (x, y, z) {\n        this.rawData[12] += x;\n        this.rawData[13] += y;\n        this.rawData[14] += z;\n        this._positionDirty = true;\n    };\n    /**\n     * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\n     */\n    Matrix3D.prototype.clone = function () {\n        return new Matrix3D(this.rawData);\n    };\n    /**\n     * Copies a Vector3D object into specific column of the calling Matrix3D object.\n     */\n    Matrix3D.prototype.copyColumnFrom = function (column, vector3D) {\n        switch (column) {\n            case 0:\n                this.rawData[0] = vector3D.x;\n                this.rawData[1] = vector3D.y;\n                this.rawData[2] = vector3D.z;\n                this.rawData[3] = vector3D.w;\n                break;\n            case 1:\n                this.rawData[4] = vector3D.x;\n                this.rawData[5] = vector3D.y;\n                this.rawData[6] = vector3D.z;\n                this.rawData[7] = vector3D.w;\n                break;\n            case 2:\n                this.rawData[8] = vector3D.x;\n                this.rawData[9] = vector3D.y;\n                this.rawData[10] = vector3D.z;\n                this.rawData[11] = vector3D.w;\n                break;\n            case 3:\n                this.rawData[12] = vector3D.x;\n                this.rawData[13] = vector3D.y;\n                this.rawData[14] = vector3D.z;\n                this.rawData[15] = vector3D.w;\n                break;\n            default:\n                throw new ArgumentError_1.default(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n        }\n    };\n    /**\n     * Copies specific column of the calling Matrix3D object into the Vector3D object.\n     */\n    Matrix3D.prototype.copyColumnTo = function (column, vector3D) {\n        switch (column) {\n            case 0:\n                vector3D.x = this.rawData[0];\n                vector3D.y = this.rawData[1];\n                vector3D.z = this.rawData[2];\n                vector3D.w = this.rawData[3];\n                break;\n            case 1:\n                vector3D.x = this.rawData[4];\n                vector3D.y = this.rawData[5];\n                vector3D.z = this.rawData[6];\n                vector3D.w = this.rawData[7];\n                break;\n            case 2:\n                vector3D.x = this.rawData[8];\n                vector3D.y = this.rawData[9];\n                vector3D.z = this.rawData[10];\n                vector3D.w = this.rawData[11];\n                break;\n            case 3:\n                vector3D.x = this.rawData[12];\n                vector3D.y = this.rawData[13];\n                vector3D.z = this.rawData[14];\n                vector3D.w = this.rawData[15];\n                break;\n            default:\n                throw new ArgumentError_1.default(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n        }\n    };\n    /**\n     * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\n     */\n    Matrix3D.prototype.copyFrom = function (source) {\n        var sourceRaw = source.rawData;\n        var len = sourceRaw.length;\n        for (var c = 0; c < len; c++)\n            this.rawData[c] = sourceRaw[c];\n    };\n    /**\n     * Copies this Matrix3D object into a destination Matrix3D object.\n     */\n    Matrix3D.prototype.copyTo = function (target) {\n        var targetRaw = target.rawData;\n        var len = this.rawData.length;\n        for (var c = 0; c < len; c++)\n            targetRaw[c] = this.rawData[c];\n    };\n    Matrix3D.prototype.copyRawDataFrom = function (vector, index, transpose) {\n        if (index === void 0) { index = 0; }\n        if (transpose === void 0) { transpose = false; }\n        if (transpose)\n            this.transpose();\n        var len = vector.length - index;\n        for (var c = 0; c < len; c++)\n            this.rawData[c] = vector[c + index];\n        if (transpose)\n            this.transpose();\n    };\n    Matrix3D.prototype.copyRawDataTo = function (vector, index, transpose) {\n        if (index === void 0) { index = 0; }\n        if (transpose === void 0) { transpose = false; }\n        if (transpose)\n            this.transpose();\n        var len = this.rawData.length;\n        for (var c = 0; c < len; c++)\n            vector[c + index] = this.rawData[c];\n        if (transpose)\n            this.transpose();\n    };\n    /**\n     * Copies a Vector3D object into specific row of the calling Matrix3D object.\n     */\n    Matrix3D.prototype.copyRowFrom = function (row, vector3D) {\n        switch (row) {\n            case 0:\n                this.rawData[0] = vector3D.x;\n                this.rawData[4] = vector3D.y;\n                this.rawData[8] = vector3D.z;\n                this.rawData[12] = vector3D.w;\n                break;\n            case 1:\n                this.rawData[1] = vector3D.x;\n                this.rawData[5] = vector3D.y;\n                this.rawData[9] = vector3D.z;\n                this.rawData[13] = vector3D.w;\n                break;\n            case 2:\n                this.rawData[2] = vector3D.x;\n                this.rawData[6] = vector3D.y;\n                this.rawData[10] = vector3D.z;\n                this.rawData[14] = vector3D.w;\n                break;\n            case 3:\n                this.rawData[3] = vector3D.x;\n                this.rawData[7] = vector3D.y;\n                this.rawData[11] = vector3D.z;\n                this.rawData[15] = vector3D.w;\n                break;\n            default:\n                throw new ArgumentError_1.default(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n        }\n    };\n    /**\n     * Copies specific row of the calling Matrix3D object into the Vector3D object.\n     */\n    Matrix3D.prototype.copyRowTo = function (row, vector3D) {\n        switch (row) {\n            case 0:\n                vector3D.x = this.rawData[0];\n                vector3D.y = this.rawData[4];\n                vector3D.z = this.rawData[8];\n                vector3D.w = this.rawData[12];\n                break;\n            case 1:\n                vector3D.x = this.rawData[1];\n                vector3D.y = this.rawData[5];\n                vector3D.z = this.rawData[9];\n                vector3D.w = this.rawData[13];\n                break;\n            case 2:\n                vector3D.x = this.rawData[2];\n                vector3D.y = this.rawData[6];\n                vector3D.z = this.rawData[10];\n                vector3D.w = this.rawData[14];\n                break;\n            case 3:\n                vector3D.x = this.rawData[3];\n                vector3D.y = this.rawData[7];\n                vector3D.z = this.rawData[11];\n                vector3D.w = this.rawData[15];\n                break;\n            default:\n                throw new ArgumentError_1.default(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n        }\n    };\n    /**\n     * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\n     */\n    Matrix3D.prototype.decompose = function (orientationStyle) {\n        if (orientationStyle === void 0) { orientationStyle = \"eulerAngles\"; }\n        var q;\n        if (this._components == null)\n            this._components = [null, new Vector3D_1.default(), new Vector3D_1.default(), new Vector3D_1.default()];\n        var colX = new Vector3D_1.default(this.rawData[0], this.rawData[1], this.rawData[2]);\n        var colY = new Vector3D_1.default(this.rawData[4], this.rawData[5], this.rawData[6]);\n        var colZ = new Vector3D_1.default(this.rawData[8], this.rawData[9], this.rawData[10]);\n        var scale = this._components[3];\n        var skew = this._components[2];\n        //compute X scale factor and normalise colX\n        scale.x = colX.length;\n        colX.scaleBy(1 / scale.x);\n        //compute XY shear factor and make colY orthogonal to colX\n        skew.x = colX.dotProduct(colY);\n        colY = Vector3D_1.default.combine(colY, colX, 1, -skew.x);\n        //compute Y scale factor and normalise colY\n        scale.y = colY.length;\n        colY.scaleBy(1 / scale.y);\n        skew.x /= scale.y;\n        //compute XZ and YZ shears and make colZ orthogonal to colX and colY\n        skew.y = colX.dotProduct(colZ);\n        colZ = Vector3D_1.default.combine(colZ, colX, 1, -skew.y);\n        skew.z = colY.dotProduct(colZ);\n        colZ = Vector3D_1.default.combine(colZ, colY, 1, -skew.z);\n        //compute Z scale and normalise colZ\n        scale.z = colZ.length;\n        colZ.scaleBy(1 / scale.z);\n        skew.y /= scale.z;\n        skew.z /= scale.z;\n        //at this point, the matrix (in cols) is orthonormal\n        //check for a coordinate system flip. If the determinant is -1, negate the z scaling factor\n        if (colX.dotProduct(colY.crossProduct(colZ)) < 0) {\n            scale.z = -scale.z;\n            colZ.x = -colZ.x;\n            colZ.y = -colZ.y;\n            colZ.z = -colZ.z;\n        }\n        var rot = this._components[1];\n        switch (orientationStyle) {\n            case Orientation3D_1.default.AXIS_ANGLE:\n                rot.w = Math.acos((colX.x + colY.y + colZ.z - 1) / 2);\n                var len = Math.sqrt((colY.z - colZ.y) * (colY.z - colZ.y) + (colZ.x - colX.z) * (colZ.x - colX.z) + (colX.y - colY.x) * (colX.y - colY.x));\n                rot.x = (colY.z - colZ.y) / len;\n                rot.y = (colZ.x - colX.z) / len;\n                rot.z = (colX.y - colY.x) / len;\n                break;\n            case Orientation3D_1.default.QUATERNION:\n                var tr = colX.x + colY.y + colZ.z;\n                if (tr > 0) {\n                    rot.w = Math.sqrt(1 + tr) / 2;\n                    rot.x = (colY.z - colZ.y) / (4 * rot.w);\n                    rot.y = (colZ.x - colX.z) / (4 * rot.w);\n                    rot.z = (colX.y - colY.x) / (4 * rot.w);\n                }\n                else if ((colX.x > colY.y) && (colX.x > colZ.z)) {\n                    rot.x = Math.sqrt(1 + colX.x - colY.y - colZ.z) / 2;\n                    rot.w = (colY.z - colZ.y) / (4 * rot.x);\n                    rot.y = (colX.y + colY.x) / (4 * rot.x);\n                    rot.z = (colZ.x + colX.z) / (4 * rot.x);\n                }\n                else if (colY.y > colZ.z) {\n                    rot.y = Math.sqrt(1 + colY.y - colX.x - colZ.z) / 2;\n                    rot.x = (colX.y + colY.x) / (4 * rot.y);\n                    rot.w = (colZ.x - colX.z) / (4 * rot.y);\n                    rot.z = (colY.z + colZ.y) / (4 * rot.y);\n                }\n                else {\n                    rot.z = Math.sqrt(1 + colZ.z - colX.x - colY.y) / 2;\n                    rot.x = (colZ.x + colX.z) / (4 * rot.z);\n                    rot.y = (colY.z + colZ.y) / (4 * rot.z);\n                    rot.w = (colX.y - colY.x) / (4 * rot.z);\n                }\n                break;\n            case Orientation3D_1.default.EULER_ANGLES:\n                rot.y = Math.asin(-colX.z);\n                //var cos:number = Math.cos(rot.y);\n                if (colX.z != 1 && colX.z != -1) {\n                    rot.x = Math.atan2(colY.z, colZ.z);\n                    rot.z = Math.atan2(colX.y, colX.x);\n                }\n                else {\n                    rot.z = 0;\n                    rot.x = Math.atan2(colY.x, colY.y);\n                }\n                break;\n        }\n        this._components[0] = this.position;\n        return this._components;\n    };\n    /**\n     * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\n     * coordinate to another.\n     */\n    Matrix3D.prototype.deltaTransformVector = function (v, t) {\n        if (t === void 0) { t = null; }\n        var x = v.x;\n        var y = v.y;\n        var z = v.z;\n        if (!t)\n            t = new Vector3D_1.default();\n        t.x = x * this.rawData[0] + y * this.rawData[4] + z * this.rawData[8];\n        t.y = x * this.rawData[1] + y * this.rawData[5] + z * this.rawData[9];\n        t.z = x * this.rawData[2] + y * this.rawData[6] + z * this.rawData[10];\n        t.w = x * this.rawData[3] + y * this.rawData[7] + z * this.rawData[11];\n        return t;\n    };\n    /**\n     * Converts the current matrix to an identity or unit matrix.\n     */\n    Matrix3D.prototype.identity = function () {\n        this.rawData[0] = 1;\n        this.rawData[1] = 0;\n        this.rawData[2] = 0;\n        this.rawData[3] = 0;\n        this.rawData[4] = 0;\n        this.rawData[5] = 1;\n        this.rawData[6] = 0;\n        this.rawData[7] = 0;\n        this.rawData[8] = 0;\n        this.rawData[9] = 0;\n        this.rawData[10] = 1;\n        this.rawData[11] = 0;\n        this.rawData[12] = 0;\n        this.rawData[13] = 0;\n        this.rawData[14] = 0;\n        this.rawData[15] = 1;\n        this._positionDirty = true;\n    };\n    /**\n     * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\n     */\n    Matrix3D.interpolate = function (thisMat, toMat, percent) {\n        var m = new Matrix3D();\n        for (var i = 0; i < 16; ++i)\n            m.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i]) * percent;\n        return m;\n    };\n    /**\n     * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\n     */\n    Matrix3D.prototype.interpolateTo = function (toMat, percent) {\n        for (var i = 0; i < 16; ++i)\n            this.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i]) * percent;\n    };\n    /**\n     * Inverts the current matrix.\n     */\n    Matrix3D.prototype.invert = function () {\n        var d = this.determinant;\n        var invertable = Math.abs(d) > 0.00000000001;\n        if (invertable) {\n            d = 1 / d;\n            var m11 = this.rawData[0];\n            var m12 = this.rawData[1];\n            var m13 = this.rawData[2];\n            var m14 = this.rawData[3];\n            var m21 = this.rawData[4];\n            var m22 = this.rawData[5];\n            var m23 = this.rawData[6];\n            var m24 = this.rawData[7];\n            var m31 = this.rawData[8];\n            var m32 = this.rawData[9];\n            var m33 = this.rawData[10];\n            var m34 = this.rawData[11];\n            var m41 = this.rawData[12];\n            var m42 = this.rawData[13];\n            var m43 = this.rawData[14];\n            var m44 = this.rawData[15];\n            this.rawData[0] = d * (m22 * (m33 * m44 - m43 * m34) - m32 * (m23 * m44 - m43 * m24) + m42 * (m23 * m34 - m33 * m24));\n            this.rawData[1] = -d * (m12 * (m33 * m44 - m43 * m34) - m32 * (m13 * m44 - m43 * m14) + m42 * (m13 * m34 - m33 * m14));\n            this.rawData[2] = d * (m12 * (m23 * m44 - m43 * m24) - m22 * (m13 * m44 - m43 * m14) + m42 * (m13 * m24 - m23 * m14));\n            this.rawData[3] = -d * (m12 * (m23 * m34 - m33 * m24) - m22 * (m13 * m34 - m33 * m14) + m32 * (m13 * m24 - m23 * m14));\n            this.rawData[4] = -d * (m21 * (m33 * m44 - m43 * m34) - m31 * (m23 * m44 - m43 * m24) + m41 * (m23 * m34 - m33 * m24));\n            this.rawData[5] = d * (m11 * (m33 * m44 - m43 * m34) - m31 * (m13 * m44 - m43 * m14) + m41 * (m13 * m34 - m33 * m14));\n            this.rawData[6] = -d * (m11 * (m23 * m44 - m43 * m24) - m21 * (m13 * m44 - m43 * m14) + m41 * (m13 * m24 - m23 * m14));\n            this.rawData[7] = d * (m11 * (m23 * m34 - m33 * m24) - m21 * (m13 * m34 - m33 * m14) + m31 * (m13 * m24 - m23 * m14));\n            this.rawData[8] = d * (m21 * (m32 * m44 - m42 * m34) - m31 * (m22 * m44 - m42 * m24) + m41 * (m22 * m34 - m32 * m24));\n            this.rawData[9] = -d * (m11 * (m32 * m44 - m42 * m34) - m31 * (m12 * m44 - m42 * m14) + m41 * (m12 * m34 - m32 * m14));\n            this.rawData[10] = d * (m11 * (m22 * m44 - m42 * m24) - m21 * (m12 * m44 - m42 * m14) + m41 * (m12 * m24 - m22 * m14));\n            this.rawData[11] = -d * (m11 * (m22 * m34 - m32 * m24) - m21 * (m12 * m34 - m32 * m14) + m31 * (m12 * m24 - m22 * m14));\n            this.rawData[12] = -d * (m21 * (m32 * m43 - m42 * m33) - m31 * (m22 * m43 - m42 * m23) + m41 * (m22 * m33 - m32 * m23));\n            this.rawData[13] = d * (m11 * (m32 * m43 - m42 * m33) - m31 * (m12 * m43 - m42 * m13) + m41 * (m12 * m33 - m32 * m13));\n            this.rawData[14] = -d * (m11 * (m22 * m43 - m42 * m23) - m21 * (m12 * m43 - m42 * m13) + m41 * (m12 * m23 - m22 * m13));\n            this.rawData[15] = d * (m11 * (m22 * m33 - m32 * m23) - m21 * (m12 * m33 - m32 * m13) + m31 * (m12 * m23 - m22 * m13));\n        }\n        this._positionDirty = true;\n        return invertable;\n    };\n    /* TODO implement pointAt\n     public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\n     {\n     }\n     */\n    /**\n     * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\n     */\n    Matrix3D.prototype.prepend = function (rhs) {\n        var m111 = rhs.rawData[0];\n        var m112 = rhs.rawData[1];\n        var m113 = rhs.rawData[2];\n        var m114 = rhs.rawData[3];\n        var m121 = rhs.rawData[4];\n        var m122 = rhs.rawData[5];\n        var m123 = rhs.rawData[6];\n        var m124 = rhs.rawData[7];\n        var m131 = rhs.rawData[8];\n        var m132 = rhs.rawData[9];\n        var m133 = rhs.rawData[10];\n        var m134 = rhs.rawData[11];\n        var m141 = rhs.rawData[12];\n        var m142 = rhs.rawData[13];\n        var m143 = rhs.rawData[14];\n        var m144 = rhs.rawData[15];\n        var m211 = this.rawData[0];\n        var m212 = this.rawData[1];\n        var m213 = this.rawData[2];\n        var m214 = this.rawData[3];\n        var m221 = this.rawData[4];\n        var m222 = this.rawData[5];\n        var m223 = this.rawData[6];\n        var m224 = this.rawData[7];\n        var m231 = this.rawData[8];\n        var m232 = this.rawData[9];\n        var m233 = this.rawData[10];\n        var m234 = this.rawData[11];\n        var m241 = this.rawData[12];\n        var m242 = this.rawData[13];\n        var m243 = this.rawData[14];\n        var m244 = this.rawData[15];\n        this.rawData[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;\n        this.rawData[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;\n        this.rawData[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;\n        this.rawData[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;\n        this.rawData[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;\n        this.rawData[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;\n        this.rawData[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;\n        this.rawData[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;\n        this.rawData[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;\n        this.rawData[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;\n        this.rawData[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;\n        this.rawData[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;\n        this.rawData[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;\n        this.rawData[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;\n        this.rawData[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;\n        this.rawData[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;\n        this._positionDirty = true;\n    };\n    /**\n     * Prepends an incremental rotation to a Matrix3D object.\n     */\n    Matrix3D.prototype.prependRotation = function (degrees, axis) {\n        var m = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n        /*\n         if ( pivot != null )\n         {\n         var p:Vector3D = pivot;\n         m.appendTranslation( p.x, p.y, p.z );\n         }\n         */\n        this.prepend(m);\n    };\n    /**\n     * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n     */\n    Matrix3D.prototype.prependScale = function (xScale, yScale, zScale) {\n        if (xScale == 1 && yScale == 1 && zScale == 1)\n            return;\n        var raw = Matrix3D.tempRawData;\n        raw[0] = xScale;\n        raw[1] = 0;\n        raw[2] = 0;\n        raw[3] = 0;\n        raw[4] = 0;\n        raw[5] = yScale;\n        raw[6] = 0;\n        raw[7] = 0;\n        raw[8] = 0;\n        raw[9] = 0;\n        raw[10] = zScale;\n        raw[11] = 0;\n        raw[12] = 0;\n        raw[13] = 0;\n        raw[14] = 0;\n        raw[15] = 1;\n        this.prepend(Matrix3D.tempMatrix);\n    };\n    /**\n     * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n     */\n    Matrix3D.prototype.prependTranslation = function (x, y, z) {\n        var raw = Matrix3D.tempRawData;\n        raw[0] = 1;\n        raw[1] = 0;\n        raw[2] = 0;\n        raw[3] = 0;\n        raw[4] = 0;\n        raw[5] = 1;\n        raw[6] = 0;\n        raw[7] = 0;\n        raw[8] = 0;\n        raw[9] = 0;\n        raw[10] = 1;\n        raw[11] = 0;\n        raw[12] = x;\n        raw[13] = y;\n        raw[14] = z;\n        raw[15] = 1;\n        this.prepend(Matrix3D.tempMatrix);\n    };\n    // TODO orientationStyle\n    /**\n     * Sets the transformation matrix's translation, rotation, and scale settings.\n     */\n    Matrix3D.prototype.recompose = function (components) {\n        var pos = components[0] || this.position;\n        this.identity();\n        var scale = components[3];\n        if (scale && (scale.x != 1 || scale.y != 1 || scale.z != 1))\n            this.appendScale(scale.x, scale.y, scale.z);\n        var skew = components[2];\n        if (skew && (skew.x != 0 || skew.y != 0 || skew.z != 0))\n            this.appendSkew(skew.x, skew.y, skew.z);\n        var sin;\n        var cos;\n        var raw = Matrix3D.tempRawData;\n        raw[12] = 0;\n        raw[13] = 0;\n        raw[14] = 0;\n        raw[15] = 0;\n        var rotation = components[1];\n        if (rotation) {\n            var angle = -rotation.x;\n            if (angle != 0) {\n                sin = Math.sin(angle);\n                cos = Math.cos(angle);\n                raw[0] = 1;\n                raw[1] = 0;\n                raw[2] = 0;\n                raw[3] = 0;\n                raw[4] = 0;\n                raw[5] = cos;\n                raw[6] = -sin;\n                raw[7] = 0;\n                raw[8] = 0;\n                raw[9] = sin;\n                raw[10] = cos;\n                raw[11] = 0;\n                this.append(Matrix3D.tempMatrix);\n            }\n            angle = -rotation.y;\n            if (angle != 0) {\n                sin = Math.sin(angle);\n                cos = Math.cos(angle);\n                raw[0] = cos;\n                raw[1] = 0;\n                raw[2] = sin;\n                raw[3] = 0;\n                raw[4] = 0;\n                raw[5] = 1;\n                raw[6] = 0;\n                raw[7] = 0;\n                raw[8] = -sin;\n                raw[9] = 0;\n                raw[10] = cos;\n                raw[11] = 0;\n                this.append(Matrix3D.tempMatrix);\n            }\n            angle = -rotation.z;\n            if (angle != 0) {\n                sin = Math.sin(angle);\n                cos = Math.cos(angle);\n                raw[0] = cos;\n                raw[1] = -sin;\n                raw[2] = 0;\n                raw[3] = 0;\n                raw[4] = sin;\n                raw[5] = cos;\n                raw[6] = 0;\n                raw[7] = 0;\n                raw[8] = 0;\n                raw[9] = 0;\n                raw[10] = 1;\n                raw[11] = 0;\n                this.append(Matrix3D.tempMatrix);\n            }\n        }\n        this.rawData[12] = pos.x;\n        this.rawData[13] = pos.y;\n        this.rawData[14] = pos.z;\n        if (components[0])\n            this._positionDirty = true;\n        this.rawData[15] = 1;\n        return true;\n    };\n    Matrix3D.prototype.transformVector = function (v, t) {\n        if (t === void 0) { t = null; }\n        if (v == null)\n            return t || new Vector3D_1.default();\n        var x = v.x;\n        var y = v.y;\n        var z = v.z;\n        if (!t)\n            t = new Vector3D_1.default();\n        t.x = x * this.rawData[0] + y * this.rawData[4] + z * this.rawData[8] + this.rawData[12];\n        t.y = x * this.rawData[1] + y * this.rawData[5] + z * this.rawData[9] + this.rawData[13];\n        t.z = x * this.rawData[2] + y * this.rawData[6] + z * this.rawData[10] + this.rawData[14];\n        t.w = x * this.rawData[3] + y * this.rawData[7] + z * this.rawData[11] + this.rawData[15];\n        return t;\n    };\n    Matrix3D.prototype.transformBox = function (b, t) {\n        if (t === void 0) { t = null; }\n        if (b == null)\n            return t || new Box_1.default();\n        var minX, minY, minZ;\n        var maxX, maxY, maxZ;\n        maxX = b.width + (minX = b.x);\n        maxY = b.height + (minY = b.y);\n        maxZ = b.depth + (minZ = b.z);\n        if (!t)\n            t = new Box_1.default();\n        //TODO: take account of shear\n        t.width = maxX * this.rawData[0] + maxY * this.rawData[4] + maxZ * this.rawData[8] + this.rawData[12] - (t.x = minX * this.rawData[0] + minY * this.rawData[4] + minZ * this.rawData[8] + this.rawData[12]);\n        t.height = maxX * this.rawData[1] + maxY * this.rawData[5] + maxZ * this.rawData[9] + this.rawData[13] - (t.y = minX * this.rawData[1] + minY * this.rawData[5] + minZ * this.rawData[9] + this.rawData[13]);\n        t.depth = maxX * this.rawData[2] + maxY * this.rawData[6] + maxZ * this.rawData[10] + this.rawData[14] - (t.z = minX * this.rawData[2] + minY * this.rawData[6] + minZ * this.rawData[10] + this.rawData[14]);\n        return t;\n    };\n    /**\n     * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\n     */\n    Matrix3D.prototype.transformVectors = function (vin, vout) {\n        var i = 0;\n        var x = 0, y = 0, z = 0;\n        while (i + 3 <= vin.length) {\n            x = vin[i];\n            y = vin[i + 1];\n            z = vin[i + 2];\n            vout[i] = x * this.rawData[0] + y * this.rawData[4] + z * this.rawData[8] + this.rawData[12];\n            vout[i + 1] = x * this.rawData[1] + y * this.rawData[5] + z * this.rawData[9] + this.rawData[13];\n            vout[i + 2] = x * this.rawData[2] + y * this.rawData[6] + z * this.rawData[10] + this.rawData[14];\n            i += 3;\n        }\n    };\n    /**\n     * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\n     */\n    Matrix3D.prototype.transpose = function () {\n        var raw = Matrix3D.tempRawData;\n        this.copyRawDataTo(raw);\n        this.rawData[1] = raw[4];\n        this.rawData[2] = raw[8];\n        this.rawData[3] = raw[12];\n        this.rawData[4] = raw[1];\n        this.rawData[6] = raw[9];\n        this.rawData[7] = raw[13];\n        this.rawData[8] = raw[2];\n        this.rawData[9] = raw[6];\n        this.rawData[11] = raw[14];\n        this.rawData[12] = raw[3];\n        this.rawData[13] = raw[7];\n        this.rawData[14] = raw[11];\n        this._positionDirty = true;\n    };\n    Matrix3D.getAxisRotation = function (x, y, z, degrees) {\n        // internal class use by rotations which have been tested\n        var m = new Matrix3D();\n        var rad = degrees * MathConsts_1.default.DEGREES_TO_RADIANS;\n        var c = Math.cos(rad);\n        var s = Math.sin(rad);\n        var t = 1 - c;\n        var tmp1, tmp2;\n        m.rawData[0] = c + x * x * t;\n        m.rawData[5] = c + y * y * t;\n        m.rawData[10] = c + z * z * t;\n        tmp1 = x * y * t;\n        tmp2 = z * s;\n        m.rawData[1] = tmp1 + tmp2;\n        m.rawData[4] = tmp1 - tmp2;\n        tmp1 = x * z * t;\n        tmp2 = y * s;\n        m.rawData[8] = tmp1 + tmp2;\n        m.rawData[2] = tmp1 - tmp2;\n        tmp1 = y * z * t;\n        tmp2 = x * s;\n        m.rawData[9] = tmp1 - tmp2;\n        m.rawData[6] = tmp1 + tmp2;\n        return m;\n    };\n    Object.defineProperty(Matrix3D.prototype, \"determinant\", {\n        /**\n         * [read-only] A Number that determines whether a matrix is invertible.\n         */\n        get: function () {\n            return ((this.rawData[0] * this.rawData[5] - this.rawData[4] * this.rawData[1]) * (this.rawData[10] * this.rawData[15] - this.rawData[14] * this.rawData[11]) - (this.rawData[0] * this.rawData[9] - this.rawData[8] * this.rawData[1]) * (this.rawData[6] * this.rawData[15] - this.rawData[14] * this.rawData[7]) + (this.rawData[0] * this.rawData[13] - this.rawData[12] * this.rawData[1]) * (this.rawData[6] * this.rawData[11] - this.rawData[10] * this.rawData[7]) + (this.rawData[4] * this.rawData[9] - this.rawData[8] * this.rawData[5]) * (this.rawData[2] * this.rawData[15] - this.rawData[14] * this.rawData[3]) - (this.rawData[4] * this.rawData[13] - this.rawData[12] * this.rawData[5]) * (this.rawData[2] * this.rawData[11] - this.rawData[10] * this.rawData[3]) + (this.rawData[8] * this.rawData[13] - this.rawData[12] * this.rawData[9]) * (this.rawData[2] * this.rawData[7] - this.rawData[6] * this.rawData[3]));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix3D.prototype, \"position\", {\n        /**\n         * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\n         * transformation's frame of reference.\n         */\n        get: function () {\n            if (this._positionDirty) {\n                this._positionDirty = false;\n                this._position.x = this.rawData[12];\n                this._position.y = this.rawData[13];\n                this._position.z = this.rawData[14];\n            }\n            return this._position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Matrix3D.prototype.invalidatePosition = function () {\n        this._positionDirty = true;\n    };\n    Matrix3D.prototype.toFixed = function (decimalPlace) {\n        var magnitude = Math.pow(10, decimalPlace);\n        return \"matrix3d(\" + Math.round(this.rawData[0] * magnitude) / magnitude + \",\" + Math.round(this.rawData[1] * magnitude) / magnitude + \",\" + Math.round(this.rawData[2] * magnitude) / magnitude + \",\" + Math.round(this.rawData[3] * magnitude) / magnitude + \",\" + Math.round(this.rawData[4] * magnitude) / magnitude + \",\" + Math.round(this.rawData[5] * magnitude) / magnitude + \",\" + Math.round(this.rawData[6] * magnitude) / magnitude + \",\" + Math.round(this.rawData[7] * magnitude) / magnitude + \",\" + Math.round(this.rawData[8] * magnitude) / magnitude + \",\" + Math.round(this.rawData[9] * magnitude) / magnitude + \",\" + Math.round(this.rawData[10] * magnitude) / magnitude + \",\" + Math.round(this.rawData[11] * magnitude) / magnitude + \",\" + Math.round(this.rawData[12] * magnitude) / magnitude + \",\" + Math.round(this.rawData[13] * magnitude) / magnitude + \",\" + Math.round(this.rawData[14] * magnitude) / magnitude + \",\" + Math.round(this.rawData[15] * magnitude) / magnitude + \")\";\n    };\n    Matrix3D.prototype.toString = function () {\n        return \"matrix3d(\" + Math.round(this.rawData[0] * 1000) / 1000 + \",\" + Math.round(this.rawData[1] * 1000) / 1000 + \",\" + Math.round(this.rawData[2] * 1000) / 1000 + \",\" + Math.round(this.rawData[3] * 1000) / 1000 + \",\" + Math.round(this.rawData[4] * 1000) / 1000 + \",\" + Math.round(this.rawData[5] * 1000) / 1000 + \",\" + Math.round(this.rawData[6] * 1000) / 1000 + \",\" + Math.round(this.rawData[7] * 1000) / 1000 + \",\" + Math.round(this.rawData[8] * 1000) / 1000 + \",\" + Math.round(this.rawData[9] * 1000) / 1000 + \",\" + Math.round(this.rawData[10] * 1000) / 1000 + \",\" + Math.round(this.rawData[11] * 1000) / 1000 + \",\" + Math.round(this.rawData[12] * 1000) / 1000 + \",\" + Math.round(this.rawData[13] * 1000) / 1000 + \",\" + Math.round(this.rawData[14] * 1000) / 1000 + \",\" + Math.round(this.rawData[15] * 1000) / 1000 + \")\";\n    };\n    Matrix3D.tempMatrix = new Matrix3D();\n    Matrix3D.tempRawData = Matrix3D.tempMatrix.rawData;\n    return Matrix3D;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Matrix3D;\n\n},{\"awayjs-core/lib/errors/ArgumentError\":\"awayjs-core/lib/errors/ArgumentError\",\"awayjs-core/lib/geom/Box\":\"awayjs-core/lib/geom/Box\",\"awayjs-core/lib/geom/MathConsts\":\"awayjs-core/lib/geom/MathConsts\",\"awayjs-core/lib/geom/Orientation3D\":\"awayjs-core/lib/geom/Orientation3D\",\"awayjs-core/lib/geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/geom/Matrix\":[function(require,module,exports){\n\"use strict\";\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar ArgumentError_1 = require(\"awayjs-core/lib/errors/ArgumentError\");\n/**\n * The Matrix class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n *\n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n *\n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n *\n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n *\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n *\n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n *\n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n *\n * <p>The Matrix class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n *\n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n *\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nvar Matrix = (function () {\n    /**\n     * Creates a new Matrix object with the specified parameters. In matrix\n     * notation, the properties are organized like this:\n     *\n     * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n     * constructor, it creates an <i>identity matrix</i> with the following\n     * values:</p>\n     *\n     * <p>In matrix notation, the identity matrix looks like this:</p>\n     *\n     * @param a  The value that affects the positioning of pixels along the\n     *           <i>x</i> axis when scaling or rotating an image.\n     * @param b  The value that affects the positioning of pixels along the\n     *           <i>y</i> axis when rotating or skewing an image.\n     * @param c  The value that affects the positioning of pixels along the\n     *           <i>x</i> axis when rotating or skewing an image.\n     * @param d  The value that affects the positioning of pixels along the\n     *           <i>y</i> axis when scaling or rotating an image..\n     * @param tx The distance by which to translate each point along the <i>x</i>\n     *           axis.\n     * @param ty The distance by which to translate each point along the <i>y</i>\n     *           axis.\n     */\n    function Matrix(a, b, c, d, tx, ty) {\n        if (a === void 0) { a = 1; }\n        if (b === void 0) { b = 0; }\n        if (c === void 0) { c = 0; }\n        if (d === void 0) { d = 1; }\n        if (tx === void 0) { tx = 0; }\n        if (ty === void 0) { ty = 0; }\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n    }\n    /**\n     * Returns a new Matrix object that is a clone of this matrix, with an exact\n     * copy of the contained object.\n     *\n     * @return A Matrix object.\n     */\n    Matrix.prototype.clone = function () {\n        return new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n    };\n    /**\n     * Concatenates a matrix with the current matrix, effectively combining the\n     * geometric effects of the two. In mathematical terms, concatenating two\n     * matrixes is the same as combining them using matrix multiplication.\n     *\n     * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n     * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n     * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n     * transforms <code>m1</code> into a matrix that scales an object by a factor\n     * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n     *\n     * <p>This method replaces the source matrix with the concatenated matrix. If\n     * you want to concatenate two matrixes without altering either of the two\n     * source matrixes, first copy the source matrix by using the\n     * <code>clone()</code> method, as shown in the Class Examples section.</p>\n     *\n     * @param matrix The matrix to be concatenated to the source matrix.\n     */\n    Matrix.prototype.concat = function (matrix) {\n        var a1 = this.a * matrix.a + this.b * matrix.c;\n        this.b = this.a * matrix.b + this.b * matrix.d;\n        this.a = a1;\n        var c1 = this.c * matrix.a + this.d * matrix.c;\n        this.d = this.c * matrix.b + this.d * matrix.d;\n        this.c = c1;\n        var tx1 = this.tx * matrix.a + this.ty * matrix.c + matrix.tx;\n        this.ty = this.tx * matrix.b + this.ty * matrix.d + matrix.ty;\n        this.tx = tx1;\n    };\n    /**\n     * Copies a Vector3D object into specific column of the calling Matrix3D\n     * object.\n     *\n     * @param column   The column from which to copy the data from.\n     * @param vector3D The Vector3D object from which to copy the data.\n     */\n    Matrix.prototype.copyColumnFrom = function (column, vector3D) {\n        if (column > 2) {\n            throw \"Column \" + column + \" out of bounds (2)\";\n        }\n        else if (column == 0) {\n            this.a = vector3D.x;\n            this.c = vector3D.y;\n        }\n        else if (column == 1) {\n            this.b = vector3D.x;\n            this.d = vector3D.y;\n        }\n        else {\n            this.tx = vector3D.x;\n            this.ty = vector3D.y;\n        }\n    };\n    /**\n     * Copies specific column of the calling Matrix object into the Vector3D\n     * object. The w element of the Vector3D object will not be changed.\n     *\n     * @param column   The column from which to copy the data from.\n     * @param vector3D The Vector3D object from which to copy the data.\n     */\n    Matrix.prototype.copyColumnTo = function (column, vector3D) {\n        if (column > 2) {\n            throw new ArgumentError_1.default(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\n        }\n        else if (column == 0) {\n            vector3D.x = this.a;\n            vector3D.y = this.c;\n            vector3D.z = 0;\n        }\n        else if (column == 1) {\n            vector3D.x = this.b;\n            vector3D.y = this.d;\n            vector3D.z = 0;\n        }\n        else {\n            vector3D.x = this.tx;\n            vector3D.y = this.ty;\n            vector3D.z = 1;\n        }\n    };\n    /**\n     * Copies all of the matrix data from the source Point object into the\n     * calling Matrix object.\n     *\n     * @param sourceMatrix The Matrix object from which to copy the data.\n     */\n    Matrix.prototype.copyFrom = function (sourceMatrix) {\n        this.a = sourceMatrix.a;\n        this.b = sourceMatrix.b;\n        this.c = sourceMatrix.c;\n        this.d = sourceMatrix.d;\n        this.tx = sourceMatrix.tx;\n        this.ty = sourceMatrix.ty;\n    };\n    /**\n     * Copies a Vector3D object into specific row of the calling Matrix object.\n     *\n     * @param row      The row from which to copy the data from.\n     * @param vector3D The Vector3D object from which to copy the data.\n     */\n    Matrix.prototype.copyRowFrom = function (row, vector3D) {\n        if (row > 2) {\n            throw new ArgumentError_1.default(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n        }\n        else if (row == 0) {\n            this.a = vector3D.x;\n            this.c = vector3D.y;\n        }\n        else if (row == 1) {\n            this.b = vector3D.x;\n            this.d = vector3D.y;\n        }\n        else {\n            this.tx = vector3D.x;\n            this.ty = vector3D.y;\n        }\n    };\n    /**\n     * Copies specific row of the calling Matrix object into the Vector3D object.\n     * The w element of the Vector3D object will not be changed.\n     *\n     * @param row      The row from which to copy the data from.\n     * @param vector3D The Vector3D object from which to copy the data.\n     */\n    Matrix.prototype.copyRowTo = function (row, vector3D) {\n        if (row > 2) {\n            throw new ArgumentError_1.default(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n        }\n        else if (row == 0) {\n            vector3D.x = this.a;\n            vector3D.y = this.b;\n            vector3D.z = this.tx;\n        }\n        else if (row == 1) {\n            vector3D.x = this.c;\n            vector3D.y = this.d;\n            vector3D.z = this.ty;\n        }\n        else {\n            vector3D.setTo(0, 0, 1);\n        }\n    };\n    /**\n     * Includes parameters for scaling, rotation, and translation. When applied\n     * to a matrix it sets the matrix's values based on those parameters.\n     *\n     * <p>Using the <code>createBox()</code> method lets you obtain the same\n     * matrix as you would if you applied the <code>identity()</code>,\n     * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n     * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n     * 100, 100)</code> has the same effect as the following:</p>\n     *\n     * @param scaleX   The factor by which to scale horizontally.\n     * @param scaleY   The factor by which scale vertically.\n     * @param rotation The amount to rotate, in radians.\n     * @param tx       The number of pixels to translate(move) to the right\n     *                 along the <i>x</i> axis.\n     * @param ty       The number of pixels to translate(move) down along the\n     *                 <i>y</i> axis.\n     */\n    Matrix.prototype.createBox = function (scaleX, scaleY, rotation, tx, ty) {\n        if (rotation === void 0) { rotation = 0; }\n        if (tx === void 0) { tx = 0; }\n        if (ty === void 0) { ty = 0; }\n        this.a = scaleX;\n        this.d = scaleY;\n        this.b = rotation;\n        this.tx = tx;\n        this.ty = ty;\n    };\n    /**\n     * Creates the specific style of matrix expected by the\n     * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n     * methods of the Graphics class. Width and height are scaled to a\n     * <code>scaleX</code>/<code>scaleY</code> pair and the\n     * <code>tx</code>/<code>ty</code> values are offset by half the width and\n     * height.\n     *\n     * <p>For example, consider a gradient with the following\n     * characteristics:</p>\n     *\n     * <ul>\n     *   <li><code>GradientType.LINEAR</code></li>\n     *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n     * 255]</code></li>\n     *   <li><code>SpreadMethod.PAD</code></li>\n     *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n     * </ul>\n     *\n     * <p>The following illustrations show gradients in which the matrix was\n     * defined using the <code>createGradientBox()</code> method with different\n     * parameter settings:</p>\n     *\n     * @param width    The width of the gradient box.\n     * @param height   The height of the gradient box.\n     * @param rotation The amount to rotate, in radians.\n     * @param tx       The distance, in pixels, to translate to the right along\n     *                 the <i>x</i> axis. This value is offset by half of the\n     *                 <code>width</code> parameter.\n     * @param ty       The distance, in pixels, to translate down along the\n     *                 <i>y</i> axis. This value is offset by half of the\n     *                 <code>height</code> parameter.\n     */\n    Matrix.prototype.createGradientBox = function (width, height, rotation, tx, ty) {\n        if (rotation === void 0) { rotation = 0; }\n        if (tx === void 0) { tx = 0; }\n        if (ty === void 0) { ty = 0; }\n        this.a = width / 1638.4;\n        this.d = height / 1638.4;\n        if (rotation != 0.0) {\n            var cos = Math.cos(rotation);\n            var sin = Math.sin(rotation);\n            this.b = sin * this.d;\n            this.c = -sin * this.a;\n            this.a *= cos;\n            this.d *= cos;\n        }\n        else {\n            this.b = this.c = 0;\n        }\n        this.tx = tx + width / 2;\n        this.ty = ty + height / 2;\n    };\n    /**\n     * Given a point in the pretransform coordinate space, returns the\n     * coordinates of that point after the transformation occurs. Unlike the\n     * standard transformation applied using the <code>transformPoint()</code>\n     * method, the <code>deltaTransformPoint()</code> method's transformation\n     * does not consider the translation parameters <code>tx</code> and\n     * <code>ty</code>.\n     *\n     * @param point The point for which you want to get the result of the matrix\n     *              transformation.\n     * @return The point resulting from applying the matrix transformation.\n     */\n    Matrix.prototype.deltaTransformPoint = function (point) {\n        return new Point_1.default(point.x * this.a + point.y * this.c, point.x * this.b + point.y * this.d);\n    };\n    /**\n     * Sets each matrix property to a value that causes a null transformation. An\n     * object transformed by applying an identity matrix will be identical to the\n     * original.\n     *\n     * <p>After calling the <code>identity()</code> method, the resulting matrix\n     * has the following properties: <code>a</code>=1, <code>b</code>=0,\n     * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n     * <code>ty</code>=0.</p>\n     *\n     * <p>In matrix notation, the identity matrix looks like this:</p>\n     *\n     */\n    Matrix.prototype.identity = function () {\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.tx = 0;\n        this.ty = 0;\n    };\n    /**\n     * Performs the opposite transformation of the original matrix. You can apply\n     * an inverted matrix to an object to undo the transformation performed when\n     * applying the original matrix.\n     */\n    Matrix.prototype.invert = function () {\n        var norm = this.a * this.d - this.b * this.c;\n        if (norm == 0) {\n            this.a = this.b = this.c = this.d = 0;\n            this.tx = -this.tx;\n            this.ty = -this.ty;\n        }\n        else {\n            norm = 1.0 / norm;\n            var a1 = this.d * norm;\n            this.d = this.a * norm;\n            this.a = a1;\n            this.b *= -norm;\n            this.c *= -norm;\n            var tx1 = -this.a * this.tx - this.c * this.ty;\n            this.ty = -this.b * this.tx - this.d * this.ty;\n            this.tx = tx1;\n        }\n    };\n    /**\n     * Returns a new Matrix object that is a clone of this matrix, with an exact\n     * copy of the contained object.\n     *\n     * @param matrix The matrix for which you want to get the result of the matrix\n     *               transformation.\n     * @return A Matrix object.\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var result = new Matrix();\n        result.a = this.a * matrix.a + this.b * matrix.c;\n        result.b = this.a * matrix.b + this.b * matrix.d;\n        result.c = this.c * matrix.a + this.d * matrix.c;\n        result.d = this.c * matrix.b + this.d * matrix.d;\n        result.tx = this.tx * matrix.a + this.ty * matrix.c + matrix.tx;\n        result.ty = this.tx * matrix.b + this.ty * matrix.d + matrix.ty;\n        return result;\n    };\n    /**\n     * Applies a rotation transformation to the Matrix object.\n     *\n     * <p>The <code>rotate()</code> method alters the <code>a</code>,\n     * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n     * Matrix object. In matrix notation, this is the same as concatenating the\n     * current matrix with the following:</p>\n     *\n     * @param angle The rotation angle in radians.\n     */\n    Matrix.prototype.rotate = function (angle) {\n        var cos = Math.cos(angle);\n        var sin = Math.sin(angle);\n        var a1 = this.a * cos - this.b * sin;\n        this.b = this.a * sin + this.b * cos;\n        this.a = a1;\n        var c1 = this.c * cos - this.d * sin;\n        this.d = this.c * sin + this.d * cos;\n        this.c = c1;\n        var tx1 = this.tx * cos - this.ty * sin;\n        this.ty = this.tx * sin + this.ty * cos;\n        this.tx = tx1;\n    };\n    /**\n     * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n     * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n     * <code>sy</code>.\n     *\n     * <p>The <code>scale()</code> method alters the <code>a</code> and\n     * <code>d</code> properties of the Matrix object. In matrix notation, this\n     * is the same as concatenating the current matrix with the following\n     * matrix:</p>\n     *\n     * @param sx A multiplier used to scale the object along the <i>x</i> axis.\n     * @param sy A multiplier used to scale the object along the <i>y</i> axis.\n     */\n    Matrix.prototype.scale = function (sx, sy) {\n        this.a *= sx;\n        this.b *= sy;\n        this.c *= sx;\n        this.d *= sy;\n        this.tx *= sx;\n        this.ty *= sy;\n    };\n    /**\n     * Sets the members of Matrix to the specified values.\n     *\n     * @param a  The value that affects the positioning of pixels along the\n     *           <i>x</i> axis when scaling or rotating an image.\n     * @param b  The value that affects the positioning of pixels along the\n     *           <i>y</i> axis when rotating or skewing an image.\n     * @param c  The value that affects the positioning of pixels along the\n     *           <i>x</i> axis when rotating or skewing an image.\n     * @param d  The value that affects the positioning of pixels along the\n     *           <i>y</i> axis when scaling or rotating an image..\n     * @param tx The distance by which to translate each point along the <i>x</i>\n     *           axis.\n     * @param ty The distance by which to translate each point along the <i>y</i>\n     *           axis.\n     */\n    Matrix.prototype.setTo = function (a, b, c, d, tx, ty) {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n    };\n    /**\n     * Returns a text value listing the properties of the Matrix object.\n     *\n     * @return A string containing the values of the properties of the Matrix\n     *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n     *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n     */\n    Matrix.prototype.toString = function () {\n        return \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n    };\n    /**\n     * Returns the result of applying the geometric transformation represented by\n     * the Matrix object to the specified point.\n     *\n     * @param point The point for which you want to get the result of the Matrix\n     *              transformation.\n     * @return The point resulting from applying the Matrix transformation.\n     */\n    Matrix.prototype.transformPoint = function (point) {\n        return new Point_1.default(point.x * this.a + point.y * this.c + this.tx, point.x * this.b + point.y * this.d + this.ty);\n    };\n    /**\n     * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n     * by the <code>dx</code> and <code>dy</code> parameters.\n     *\n     * @param dx The amount of movement along the <i>x</i> axis to the right, in\n     *           pixels.\n     * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\n     */\n    Matrix.prototype.translate = function (dx, dy) {\n        this.tx += dx;\n        this.ty += dy;\n    };\n    return Matrix;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Matrix;\n\n},{\"awayjs-core/lib/errors/ArgumentError\":\"awayjs-core/lib/errors/ArgumentError\",\"awayjs-core/lib/geom/Point\":\"awayjs-core/lib/geom/Point\"}],\"awayjs-core/lib/geom/Orientation3D\":[function(require,module,exports){\n\"use strict\";\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nvar Orientation3D = (function () {\n    function Orientation3D() {\n    }\n    /**\n     * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\n     * @type {string}\n     */\n    Orientation3D.AXIS_ANGLE = \"axisAngle\";\n    /**\n     * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\n     * @type {string}\n     */\n    Orientation3D.EULER_ANGLES = \"eulerAngles\";\n    /**\n     * The quaternion orientation uses complex numbers.\n     * @type {string}\n     */\n    Orientation3D.QUATERNION = \"quaternion\";\n    return Orientation3D;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Orientation3D;\n\n},{}],\"awayjs-core/lib/geom/Plane3D\":[function(require,module,exports){\n\"use strict\";\nvar PlaneClassification_1 = require(\"awayjs-core/lib/geom/PlaneClassification\");\nvar Plane3D = (function () {\n    /**\n     * Create a Plane3D with ABCD coefficients\n     */\n    function Plane3D(a, b, c, d) {\n        if (a === void 0) { a = 0; }\n        if (b === void 0) { b = 0; }\n        if (c === void 0) { c = 0; }\n        if (d === void 0) { d = 0; }\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        if (a == 0 && b == 0) {\n            this._iAlignment = Plane3D.ALIGN_XY_AXIS;\n        }\n        else if (b == 0 && c == 0) {\n            this._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n        }\n        else if (a == 0 && c == 0) {\n            this._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n        }\n        else {\n            this._iAlignment = Plane3D.ALIGN_ANY;\n        }\n    }\n    /**\n     * Fills this Plane3D with the coefficients from 3 points in 3d space.\n     * @param p0 Vector3D\n     * @param p1 Vector3D\n     * @param p2 Vector3D\n     */\n    Plane3D.prototype.fromPoints = function (p0, p1, p2) {\n        var d1x = p1.x - p0.x;\n        var d1y = p1.y - p0.y;\n        var d1z = p1.z - p0.z;\n        var d2x = p2.x - p0.x;\n        var d2y = p2.y - p0.y;\n        var d2z = p2.z - p0.z;\n        this.a = d1y * d2z - d1z * d2y;\n        this.b = d1z * d2x - d1x * d2z;\n        this.c = d1x * d2y - d1y * d2x;\n        this.d = this.a * p0.x + this.b * p0.y + this.c * p0.z;\n        // not using epsilon, since a plane is infinite and a small incorrection can grow very large\n        if (this.a == 0 && this.b == 0) {\n            this._iAlignment = Plane3D.ALIGN_XY_AXIS;\n        }\n        else if (this.b == 0 && this.c == 0) {\n            this._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n        }\n        else if (this.a == 0 && this.c == 0) {\n            this._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n        }\n        else {\n            this._iAlignment = Plane3D.ALIGN_ANY;\n        }\n    };\n    /**\n     * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\n     * @param normal Vector3D\n     * @param point  Vector3D\n     */\n    Plane3D.prototype.fromNormalAndPoint = function (normal, point) {\n        this.a = normal.x;\n        this.b = normal.y;\n        this.c = normal.z;\n        this.d = this.a * point.x + this.b * point.y + this.c * point.z;\n        if (this.a == 0 && this.b == 0) {\n            this._iAlignment = Plane3D.ALIGN_XY_AXIS;\n        }\n        else if (this.b == 0 && this.c == 0) {\n            this._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n        }\n        else if (this.a == 0 && this.c == 0) {\n            this._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n        }\n        else {\n            this._iAlignment = Plane3D.ALIGN_ANY;\n        }\n    };\n    /**\n     * Normalize this Plane3D\n     * @return Plane3D This Plane3D.\n     */\n    Plane3D.prototype.normalize = function () {\n        var len = 1 / Math.sqrt(this.a * this.a + this.b * this.b + this.c * this.c);\n        this.a *= len;\n        this.b *= len;\n        this.c *= len;\n        this.d *= len;\n        return this;\n    };\n    /**\n     * Returns the signed distance between this Plane3D and the point p.\n     * @param p Vector3D\n     * @returns Number\n     */\n    Plane3D.prototype.distance = function (p) {\n        if (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\n            return this.a * p.x - this.d;\n        }\n        else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\n            return this.b * p.y - this.d;\n        }\n        else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\n            return this.c * p.z - this.d;\n        }\n        else {\n            return this.a * p.x + this.b * p.y + this.c * p.z - this.d;\n        }\n    };\n    /**\n     * Classify a point against this Plane3D. (in front, back or intersecting)\n     * @param p Vector3D\n     * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\n     */\n    Plane3D.prototype.classifyPoint = function (p, epsilon) {\n        if (epsilon === void 0) { epsilon = 0.01; }\n        // check NaN\n        if (this.d != this.d)\n            return PlaneClassification_1.default.FRONT;\n        var len;\n        if (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\n            len = this.a * p.x - this.d;\n        else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\n            len = this.b * p.y - this.d;\n        else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\n            len = this.c * p.z - this.d;\n        else\n            len = this.a * p.x + this.b * p.y + this.c * p.z - this.d;\n        if (len < -epsilon)\n            return PlaneClassification_1.default.BACK;\n        else if (len > epsilon)\n            return PlaneClassification_1.default.FRONT;\n        else\n            return PlaneClassification_1.default.INTERSECT;\n    };\n    Plane3D.prototype.toString = function () {\n        return \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\n    };\n    // indicates the alignment of the plane\n    Plane3D.ALIGN_ANY = 0;\n    Plane3D.ALIGN_XY_AXIS = 1;\n    Plane3D.ALIGN_YZ_AXIS = 2;\n    Plane3D.ALIGN_XZ_AXIS = 3;\n    return Plane3D;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Plane3D;\n\n},{\"awayjs-core/lib/geom/PlaneClassification\":\"awayjs-core/lib/geom/PlaneClassification\"}],\"awayjs-core/lib/geom/PlaneClassification\":[function(require,module,exports){\n\"use strict\";\nvar PlaneClassification = (function () {\n    function PlaneClassification() {\n    }\n    // \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\n    PlaneClassification.BACK = 0;\n    PlaneClassification.FRONT = 1;\n    PlaneClassification.IN = 0;\n    PlaneClassification.OUT = 1;\n    PlaneClassification.INTERSECT = 2;\n    return PlaneClassification;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PlaneClassification;\n\n},{}],\"awayjs-core/lib/geom/Point\":[function(require,module,exports){\n\"use strict\";\n/**\n * The Point object represents a location in a two-dimensional coordinate\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\n * represents the vertical axis.\n *\n * <p>The following code creates a point at(0,0):</p>\n *\n * <p>Methods and properties of the following classes use Point objects:</p>\n *\n * <ul>\n *   <li>BitmapData</li>\n *   <li>DisplayObject</li>\n *   <li>DisplayObjectContainer</li>\n *   <li>DisplacementMapFilter</li>\n *   <li>NativeWindow</li>\n *   <li>Matrix</li>\n *   <li>Rectangle</li>\n * </ul>\n *\n * <p>You can use the <code>new Point()</code> constructor to create a Point\n * object.</p>\n */\nvar Point = (function () {\n    /**\n     * Creates a new point. If you pass no parameters to this method, a point is\n     * created at(0,0).\n     *\n     * @param x The horizontal coordinate.\n     * @param y The vertical coordinate.\n     */\n    function Point(x, y) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        this.x = x;\n        this.y = y;\n    }\n    Object.defineProperty(Point.prototype, \"length\", {\n        /**\n         * The length of the line segment from(0,0) to this point.\n         */\n        get: function () {\n            return Math.sqrt(this.x * this.x + this.y * this.y);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds the coordinates of another point to the coordinates of this point to\n     * create a new point.\n     *\n     * @param v The point to be added.\n     * @return The new point.\n     */\n    Point.prototype.add = function (v) {\n        return new Point(this.x + v.x, this.y + v.y);\n    };\n    /**\n     * Creates a copy of this Point object.\n     *\n     * @return The new Point object.\n     */\n    Point.prototype.clone = function () {\n        return new Point(this.x, this.y);\n    };\n    Point.prototype.copyFrom = function (sourcePoint) {\n    };\n    /**\n     * Determines whether two points are equal. Two points are equal if they have\n     * the same <i>x</i> and <i>y</i> values.\n     *\n     * @param toCompare The point to be compared.\n     * @return A value of <code>true</code> if the object is equal to this Point\n     *         object; <code>false</code> if it is not equal.\n     */\n    Point.prototype.equals = function (toCompare) {\n        return (this.x == toCompare.x && this.y == toCompare.y);\n    };\n    /**\n     * Scales the line segment between(0,0) and the current point to a set\n     * length.\n     *\n     * @param thickness The scaling value. For example, if the current point is\n     *                 (0,5), and you normalize it to 1, the point returned is\n     *                  at(0,1).\n     */\n    Point.prototype.normalize = function (thickness) {\n        if (thickness === void 0) { thickness = 1; }\n        if (this.length != 0) {\n            var invLength = thickness / this.length;\n            this.x *= invLength;\n            this.y *= invLength;\n            return;\n        }\n        throw \"Cannot divide by zero length.\";\n    };\n    /**\n     * Offsets the Point object by the specified amount. The value of\n     * <code>dx</code> is added to the original value of <i>x</i> to create the\n     * new <i>x</i> value. The value of <code>dy</code> is added to the original\n     * value of <i>y</i> to create the new <i>y</i> value.\n     *\n     * @param dx The amount by which to offset the horizontal coordinate,\n     *           <i>x</i>.\n     * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\n     */\n    Point.prototype.offset = function (dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    };\n    Point.prototype.setTo = function (xa, ya) {\n        this.x = xa;\n        this.y = ya;\n    };\n    /**\n     * Subtracts the coordinates of another point from the coordinates of this\n     * point to create a new point.\n     *\n     * @param v The point to be subtracted.\n     * @return The new point.\n     */\n    Point.prototype.subtract = function (v) {\n        return new Point(this.x - v.x, this.y - v.y);\n    };\n    /**\n     * Returns a string that contains the values of the <i>x</i> and <i>y</i>\n     * coordinates. The string has the form <code>\"(x=<i>x</i>,\n     * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\n     * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\n     *\n     * @return The string representation of the coordinates.\n     */\n    Point.prototype.toString = function () {\n        return \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\n    };\n    /**\n     * Returns the distance between <code>pt1</code> and <code>pt2</code>.\n     *\n     * @param pt1 The first point.\n     * @param pt2 The second point.\n     * @return The distance between the first and second points.\n     */\n    Point.distance = function (pt1, pt2) {\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    };\n    /**\n     * Determines a point between two specified points. The parameter\n     * <code>f</code> determines where the new interpolated point is located\n     * relative to the two end points specified by parameters <code>pt1</code>\n     * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\n     * is to <code>1.0</code>, the closer the interpolated point is to the first\n     * point(parameter <code>pt1</code>). The closer the value of the parameter\n     * <code>f</code> is to 0, the closer the interpolated point is to the second\n     * point(parameter <code>pt2</code>).\n     *\n     * @param pt1 The first point.\n     * @param pt2 The second point.\n     * @param f   The level of interpolation between the two points. Indicates\n     *            where the new point will be, along the line between\n     *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\n     *            <code>pt1</code> is returned; if <code>f</code>=0,\n     *            <code>pt2</code> is returned.\n     * @return The new, interpolated point.\n     */\n    Point.interpolate = function (pt1, pt2, f) {\n        return new Point(pt2.x + (pt1.x - pt2.x) * f, pt2.y + (pt1.y - pt2.y) * f);\n    };\n    /**\n     * Converts a pair of polar coordinates to a Cartesian point coordinate.\n     *\n     * @param len   The length coordinate of the polar pair.\n     * @param angle The angle, in radians, of the polar pair.\n     * @return The Cartesian point.\n     */\n    Point.polar = function (len, angle) {\n        return new Point(len * Math.cos(angle), len * Math.sin(angle));\n    };\n    return Point;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Point;\n\n},{}],\"awayjs-core/lib/geom/PoissonLookup\":[function(require,module,exports){\n\"use strict\";\nvar PoissonLookup = (function () {\n    function PoissonLookup() {\n    }\n    PoissonLookup.initDistributions = function () {\n        // precalculated for best control\n        this._distributions = new Array();\n        this._distributions[0] = new Array(0.3082841, 0.4320919);\n        this._distributions[1] = new Array(0.3082841, 0.4320919, -0.2274942, -0.6640266);\n        this._distributions[2] = new Array(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\n        this._distributions[3] = new Array(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\n        this._distributions[4] = new Array(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\n        this._distributions[5] = new Array(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\n        this._distributions[6] = new Array(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\n        this._distributions[7] = new Array(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\n        this._distributions[8] = new Array(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\n        this._distributions[9] = new Array(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\n        this._distributions[10] = new Array(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\n        this._distributions[11] = new Array(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\n        this._distributions[12] = new Array(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\n        this._distributions[13] = new Array(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\n        this._distributions[14] = new Array(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\n        this._distributions[15] = new Array(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\n        this._distributions[16] = new Array(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\n        this._distributions[17] = new Array(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\n        this._distributions[18] = new Array(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\n        this._distributions[19] = new Array(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\n        this._distributions[20] = new Array(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\n        this._distributions[21] = new Array(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\n        this._distributions[22] = new Array(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\n        this._distributions[23] = new Array(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\n        this._distributions[24] = new Array(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\n        this._distributions[25] = new Array(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\n        this._distributions[26] = new Array(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\n        this._distributions[27] = new Array(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\n        this._distributions[28] = new Array(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\n        this._distributions[29] = new Array(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\n        this._distributions[30] = new Array(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\n        this._distributions[31] = new Array(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\n    };\n    PoissonLookup.getDistribution = function (n /*int*/) {\n        if (!this._distributions)\n            this.initDistributions();\n        if (n < 2 || n > 32)\n            return null;\n        return this._distributions[n - 1];\n    };\n    return PoissonLookup;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PoissonLookup;\n\n},{}],\"awayjs-core/lib/geom/Quaternion\":[function(require,module,exports){\n\"use strict\";\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Orientation3D_1 = require(\"awayjs-core/lib/geom/Orientation3D\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nvar Quaternion = (function () {\n    /**\n     * Creates a new Quaternion object.\n     * @param x The x value of the quaternion.\n     * @param y The y value of the quaternion.\n     * @param z The z value of the quaternion.\n     * @param w The w value of the quaternion.\n     */\n    function Quaternion(x, y, z, w) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (w === void 0) { w = 1; }\n        /**\n         * The x value of the quaternion.\n         */\n        this.x = 0;\n        /**\n         * The y value of the quaternion.\n         */\n        this.y = 0;\n        /**\n         * The z value of the quaternion.\n         */\n        this.z = 0;\n        /**\n         * The w value of the quaternion.\n         */\n        this.w = 1;\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n    Object.defineProperty(Quaternion.prototype, \"magnitude\", {\n        /**\n         * Returns the magnitude of the quaternion object.\n         */\n        get: function () {\n            return Math.sqrt(this.w * this.w + this.x * this.x + this.y * this.y + this.z * this.z);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Fills the quaternion object with the result from a multiplication of two quaternion objects.\n     *\n     * @param    qa    The first quaternion in the multiplication.\n     * @param    qb    The second quaternion in the multiplication.\n     */\n    Quaternion.prototype.multiply = function (qa, qb) {\n        var w1 = qa.w, x1 = qa.x, y1 = qa.y, z1 = qa.z;\n        var w2 = qb.w, x2 = qb.x, y2 = qb.y, z2 = qb.z;\n        this.w = w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2;\n        this.x = w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2;\n        this.y = w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2;\n        this.z = w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2;\n    };\n    Quaternion.prototype.multiplyVector = function (vector, target) {\n        if (target === void 0) { target = null; }\n        //target ||= new Quaternion();\n        if (target === null) {\n            target = new Quaternion();\n        }\n        var x2 = vector.x;\n        var y2 = vector.y;\n        var z2 = vector.z;\n        target.w = -this.x * x2 - this.y * y2 - this.z * z2;\n        target.x = this.w * x2 + this.y * z2 - this.z * y2;\n        target.y = this.w * y2 - this.x * z2 + this.z * x2;\n        target.z = this.w * z2 + this.x * y2 - this.y * x2;\n        return target;\n    };\n    /**\n     * Fills the quaternion object with values representing the given rotation around a vector.\n     *\n     * @param    axis    The axis around which to rotate\n     * @param    angle    The angle in radians of the rotation.\n     */\n    Quaternion.prototype.fromAxisAngle = function (axis, angle) {\n        var sin_a = Math.sin(angle / 2);\n        var cos_a = Math.cos(angle / 2);\n        this.x = axis.x * sin_a;\n        this.y = axis.y * sin_a;\n        this.z = axis.z * sin_a;\n        this.w = cos_a;\n        this.normalize();\n    };\n    /**\n     * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\n     * @param qa The first quaternion to interpolate.\n     * @param qb The second quaternion to interpolate.\n     * @param t The interpolation weight, a value between 0 and 1.\n     */\n    Quaternion.prototype.slerp = function (qa, qb, t) {\n        var w1 = qa.w, x1 = qa.x, y1 = qa.y, z1 = qa.z;\n        var w2 = qb.w, x2 = qb.x, y2 = qb.y, z2 = qb.z;\n        var dot = w1 * w2 + x1 * x2 + y1 * y2 + z1 * z2;\n        // shortest direction\n        if (dot < 0) {\n            dot = -dot;\n            w2 = -w2;\n            x2 = -x2;\n            y2 = -y2;\n            z2 = -z2;\n        }\n        if (dot < 0.95) {\n            // interpolate angle linearly\n            var angle = Math.acos(dot);\n            var s = 1 / Math.sin(angle);\n            var s1 = Math.sin(angle * (1 - t)) * s;\n            var s2 = Math.sin(angle * t) * s;\n            this.w = w1 * s1 + w2 * s2;\n            this.x = x1 * s1 + x2 * s2;\n            this.y = y1 * s1 + y2 * s2;\n            this.z = z1 * s1 + z2 * s2;\n        }\n        else {\n            // nearly identical angle, interpolate linearly\n            this.w = w1 + t * (w2 - w1);\n            this.x = x1 + t * (x2 - x1);\n            this.y = y1 + t * (y2 - y1);\n            this.z = z1 + t * (z2 - z1);\n            var len = 1.0 / Math.sqrt(this.w * this.w + this.x * this.x + this.y * this.y + this.z * this.z);\n            this.w *= len;\n            this.x *= len;\n            this.y *= len;\n            this.z *= len;\n        }\n    };\n    /**\n     * Linearly interpolates between two quaternions.\n     * @param qa The first quaternion to interpolate.\n     * @param qb The second quaternion to interpolate.\n     * @param t The interpolation weight, a value between 0 and 1.\n     */\n    Quaternion.prototype.lerp = function (qa, qb, t) {\n        var w1 = qa.w, x1 = qa.x, y1 = qa.y, z1 = qa.z;\n        var w2 = qb.w, x2 = qb.x, y2 = qb.y, z2 = qb.z;\n        var len;\n        // shortest direction\n        if (w1 * w2 + x1 * x2 + y1 * y2 + z1 * z2 < 0) {\n            w2 = -w2;\n            x2 = -x2;\n            y2 = -y2;\n            z2 = -z2;\n        }\n        this.w = w1 + t * (w2 - w1);\n        this.x = x1 + t * (x2 - x1);\n        this.y = y1 + t * (y2 - y1);\n        this.z = z1 + t * (z2 - z1);\n        len = 1.0 / Math.sqrt(this.w * this.w + this.x * this.x + this.y * this.y + this.z * this.z);\n        this.w *= len;\n        this.x *= len;\n        this.y *= len;\n        this.z *= len;\n    };\n    /**\n     * Fills the quaternion object with values representing the given euler rotation.\n     *\n     * @param    ax        The angle in radians of the rotation around the ax axis.\n     * @param    ay        The angle in radians of the rotation around the ay axis.\n     * @param    az        The angle in radians of the rotation around the az axis.\n     */\n    Quaternion.prototype.fromEulerAngles = function (ax, ay, az) {\n        var halfX = ax * .5, halfY = ay * .5, halfZ = az * .5;\n        var cosX = Math.cos(halfX), sinX = Math.sin(halfX);\n        var cosY = Math.cos(halfY), sinY = Math.sin(halfY);\n        var cosZ = Math.cos(halfZ), sinZ = Math.sin(halfZ);\n        this.w = cosX * cosY * cosZ + sinX * sinY * sinZ;\n        this.x = sinX * cosY * cosZ - cosX * sinY * sinZ;\n        this.y = cosX * sinY * cosZ + sinX * cosY * sinZ;\n        this.z = cosX * cosY * sinZ - sinX * sinY * cosZ;\n    };\n    /**\n     * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\n     * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\n     * @return The Vector3D containing the Euler angles.\n     */\n    Quaternion.prototype.toEulerAngles = function (target) {\n        if (target === void 0) { target = null; }\n        //target ||= new Vector3D();\n        if (target === null) {\n            target = new Vector3D_1.default();\n        }\n        target.x = Math.atan2(2 * (this.w * this.x + this.y * this.z), 1 - 2 * (this.x * this.x + this.y * this.y));\n        target.y = Math.asin(2 * (this.w * this.y - this.z * this.x));\n        target.z = Math.atan2(2 * (this.w * this.z + this.x * this.y), 1 - 2 * (this.y * this.y + this.z * this.z));\n        return target;\n    };\n    /**\n     * Normalises the quaternion object.\n     */\n    Quaternion.prototype.normalize = function (val) {\n        if (val === void 0) { val = 1; }\n        var mag = val / Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        this.x *= mag;\n        this.y *= mag;\n        this.z *= mag;\n        this.w *= mag;\n    };\n    /**\n     * Used to trace the values of a quaternion.\n     *\n     * @return A string representation of the quaternion object.\n     */\n    Quaternion.prototype.toString = function () {\n        return \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\n    };\n    /**\n     * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\n     * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\n     * @return A Matrix3D object representing an equivalent rotation.\n     */\n    Quaternion.prototype.toMatrix3D = function (target) {\n        if (target === void 0) { target = null; }\n        var rawData = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n        var xy2 = 2.0 * this.x * this.y, xz2 = 2.0 * this.x * this.z, xw2 = 2.0 * this.x * this.w;\n        var yz2 = 2.0 * this.y * this.z, yw2 = 2.0 * this.y * this.w, zw2 = 2.0 * this.z * this.w;\n        var xx = this.x * this.x, yy = this.y * this.y, zz = this.z * this.z, ww = this.w * this.w;\n        rawData[0] = xx - yy - zz + ww;\n        rawData[4] = xy2 - zw2;\n        rawData[8] = xz2 + yw2;\n        rawData[12] = 0;\n        rawData[1] = xy2 + zw2;\n        rawData[5] = -xx + yy - zz + ww;\n        rawData[9] = yz2 - xw2;\n        rawData[13] = 0;\n        rawData[2] = xz2 - yw2;\n        rawData[6] = yz2 + xw2;\n        rawData[10] = -xx - yy + zz + ww;\n        rawData[14] = 0;\n        rawData[3] = 0.0;\n        rawData[7] = 0.0;\n        rawData[11] = 0;\n        rawData[15] = 1;\n        if (!target)\n            return new Matrix3D_1.default(rawData);\n        else\n            target.copyRawDataFrom(rawData);\n        return target;\n    };\n    /**\n     * Extracts a quaternion rotation matrix out of a given Matrix3D object.\n     * @param matrix The Matrix3D out of which the rotation will be extracted.\n     */\n    Quaternion.prototype.fromMatrix = function (matrix) {\n        var v = matrix.decompose(Orientation3D_1.default.QUATERNION)[1];\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n        this.w = v.w;\n    };\n    /**\n     * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\n     * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\n     * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\n     */\n    Quaternion.prototype.toRawData = function (target, exclude4thRow) {\n        if (exclude4thRow === void 0) { exclude4thRow = false; }\n        var xy2 = 2.0 * this.x * this.y, xz2 = 2.0 * this.x * this.z, xw2 = 2.0 * this.x * this.w;\n        var yz2 = 2.0 * this.y * this.z, yw2 = 2.0 * this.y * this.w, zw2 = 2.0 * this.z * this.w;\n        var xx = this.x * this.x, yy = this.y * this.y, zz = this.z * this.z, ww = this.w * this.w;\n        target[0] = xx - yy - zz + ww;\n        target[1] = xy2 - zw2;\n        target[2] = xz2 + yw2;\n        target[4] = xy2 + zw2;\n        target[5] = -xx + yy - zz + ww;\n        target[6] = yz2 - xw2;\n        target[8] = xz2 - yw2;\n        target[9] = yz2 + xw2;\n        target[10] = -xx - yy + zz + ww;\n        target[3] = target[7] = target[11] = 0;\n        if (!exclude4thRow) {\n            target[12] = target[13] = target[14] = 0;\n            target[15] = 1;\n        }\n    };\n    /**\n     * Clones the quaternion.\n     * @return An exact duplicate of the current Quaternion.\n     */\n    Quaternion.prototype.clone = function () {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    };\n    /**\n     * Rotates a point.\n     * @param vector The Vector3D object to be rotated.\n     * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\n     * @return A Vector3D object containing the rotated point.\n     */\n    Quaternion.prototype.rotatePoint = function (vector, target) {\n        if (target === void 0) { target = null; }\n        var x1, y1, z1, w1;\n        var x2 = vector.x, y2 = vector.y, z2 = vector.z;\n        //target ||= new Vector3D();\n        if (target === null) {\n            target = new Vector3D_1.default();\n        }\n        // p*q'\n        w1 = -this.x * x2 - this.y * y2 - this.z * z2;\n        x1 = this.w * x2 + this.y * z2 - this.z * y2;\n        y1 = this.w * y2 - this.x * z2 + this.z * x2;\n        z1 = this.w * z2 + this.x * y2 - this.y * x2;\n        target.x = -w1 * this.x + x1 * this.w - y1 * this.z + z1 * this.y;\n        target.y = -w1 * this.y + x1 * this.z + y1 * this.w - z1 * this.x;\n        target.z = -w1 * this.z - x1 * this.y + y1 * this.x + z1 * this.w;\n        return target;\n    };\n    /**\n     * Copies the data from a quaternion into this instance.\n     * @param q The quaternion to copy from.\n     */\n    Quaternion.prototype.copyFrom = function (q) {\n        this.x = q.x;\n        this.y = q.y;\n        this.z = q.z;\n        this.w = q.w;\n    };\n    return Quaternion;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Quaternion;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":\"awayjs-core/lib/geom/Matrix3D\",\"awayjs-core/lib/geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"awayjs-core/lib/geom/Orientation3D\":\"awayjs-core/lib/geom/Orientation3D\",\"awayjs-core/lib/geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/geom/Rectangle\":[function(require,module,exports){\n\"use strict\";\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\n/**\n * A Rectangle object is an area defined by its position, as indicated by its\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the Rectangle class are independent of\n * each other; changing the value of one property has no effect on the others.\n * However, the <code>right</code> and <code>bottom</code> properties are\n * integrally related to those four properties. For example, if you change the\n * value of the <code>right</code> property, the value of the\n * <code>width</code> property changes; if you change the <code>bottom</code>\n * property, the value of the <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Rectangle objects:</p>\n *\n * <ul>\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\n * <code>merge()</code>, <code>paletteMap()</code>,\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\n * BitmapData class</li>\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\n * DisplayObject class</li>\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\n * class</li>\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\n * method of the Sprite class</li>\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\n * method of the PrintJob class</li>\n * </ul>\n *\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\n * Rectangle object.</p>\n *\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\n * display object. To draw a rectangular Shape object onscreen, use the\n * <code>drawRect()</code> method of the Graphics class.</p>\n */\nvar Rectangle = (function () {\n    /**\n     * Creates a new Rectangle object with the top-left corner specified by the\n     * <code>x</code> and <code>y</code> parameters and with the specified\n     * <code>width</code> and <code>height</code> parameters. If you call this\n     * public without parameters, a rectangle with <code>x</code>,\n     * <code>y</code>, <code>width</code>, and <code>height</code> properties set\n     * to 0 is created.\n     *\n     * @param x      The <i>x</i> coordinate of the top-left corner of the\n     *               rectangle.\n     * @param y      The <i>y</i> coordinate of the top-left corner of the\n     *               rectangle.\n     * @param width  The width of the rectangle, in pixels.\n     * @param height The height of the rectangle, in pixels.\n     */\n    function Rectangle(x, y, width, height) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (width === void 0) { width = 0; }\n        if (height === void 0) { height = 0; }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rectangle.prototype, \"bottom\", {\n        /**\n         * The sum of the <code>y</code> and <code>height</code> properties.\n         */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"bottomRight\", {\n        /**\n         * The location of the Rectangle object's bottom-right corner, determined by\n         * the values of the <code>right</code> and <code>bottom</code> properties.\n         */\n        get: function () {\n            if (this._bottomRight == null)\n                this._bottomRight = new Point_1.default();\n            this._bottomRight.x = this.x + this.width;\n            this._bottomRight.y = this.y + this.height;\n            return this._bottomRight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"left\", {\n        /**\n         * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n         * the <code>left</code> property of a Rectangle object has no effect on the\n         * <code>y</code> and <code>height</code> properties. However it does affect\n         * the <code>width</code> property, whereas changing the <code>x</code> value\n         * does <i>not</i> affect the <code>width</code> property.\n         *\n         * <p>The value of the <code>left</code> property is equal to the value of\n         * the <code>x</code> property.</p>\n         */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"right\", {\n        /**\n         * The sum of the <code>x</code> and <code>width</code> properties.\n         */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * The size of the Rectangle object, expressed as a Point object with the\n         * values of the <code>width</code> and <code>height</code> properties.\n         */\n        get: function () {\n            if (this._size == null)\n                this._size = new Point_1.default();\n            this._size.x = this.width;\n            this._size.y = this.height;\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"top\", {\n        /**\n         * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n         * the <code>top</code> property of a Rectangle object has no effect on the\n         * <code>x</code> and <code>width</code> properties. However it does affect\n         * the <code>height</code> property, whereas changing the <code>y</code>\n         * value does <i>not</i> affect the <code>height</code> property.\n         *\n         * <p>The value of the <code>top</code> property is equal to the value of the\n         * <code>y</code> property.</p>\n         */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * The location of the Rectangle object's top-left corner, determined by the\n         * <i>x</i> and <i>y</i> coordinates of the point.\n         */\n        get: function () {\n            if (this._topLeft == null)\n                this._topLeft = new Point_1.default();\n            this._topLeft.x = this.x;\n            this._topLeft.y = this.y;\n            return this._topLeft;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a new Rectangle object with the same values for the\n     * <code>x</code>, <code>y</code>, <code>width</code>, and\n     * <code>height</code> properties as the original Rectangle object.\n     *\n     * @return A new Rectangle object with the same values for the\n     *         <code>x</code>, <code>y</code>, <code>width</code>, and\n     *         <code>height</code> properties as the original Rectangle object.\n     */\n    Rectangle.prototype.clone = function () {\n        return new Rectangle(this.x, this.y, this.width, this.height);\n    };\n    /**\n     * Determines whether the specified point is contained within the rectangular\n     * region defined by this Rectangle object.\n     *\n     * @param x The <i>x</i> coordinate(horizontal position) of the point.\n     * @param y The <i>y</i> coordinate(vertical position) of the point.\n     * @return A value of <code>true</code> if the Rectangle object contains the\n     *         specified point; otherwise <code>false</code>.\n     */\n    Rectangle.prototype.contains = function (x, y) {\n        return (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\n    };\n    /**\n     * Determines whether the specified point is contained within the rectangular\n     * region defined by this Rectangle object. This method is similar to the\n     * <code>Rectangle.contains()</code> method, except that it takes a Point\n     * object as a parameter.\n     *\n     * @param point The point, as represented by its <i>x</i> and <i>y</i>\n     *              coordinates.\n     * @return A value of <code>true</code> if the Rectangle object contains the\n     *         specified point; otherwise <code>false</code>.\n     */\n    Rectangle.prototype.containsPoint = function (point) {\n        return (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n    };\n    /**\n     * Determines whether the Rectangle object specified by the <code>rect</code>\n     * parameter is contained within this Rectangle object. A Rectangle object is\n     * said to contain another if the second Rectangle object falls entirely\n     * within the boundaries of the first.\n     *\n     * @param rect The Rectangle object being checked.\n     * @return A value of <code>true</code> if the Rectangle object that you\n     *         specify is contained by this Rectangle object; otherwise\n     *         <code>false</code>.\n     */\n    Rectangle.prototype.containsRect = function (rect) {\n        return (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height);\n    };\n    /**\n     * Copies all of rectangle data from the source Rectangle object into the\n     * calling Rectangle object.\n     *\n     * @param sourceRect The Rectangle object from which to copy the data.\n     */\n    Rectangle.prototype.copyFrom = function (sourceRect) {\n    };\n    /**\n     * Determines whether the object specified in the <code>toCompare</code>\n     * parameter is equal to this Rectangle object. This method compares the\n     * <code>x</code>, <code>y</code>, <code>width</code>, and\n     * <code>height</code> properties of an object against the same properties of\n     * this Rectangle object.\n     *\n     * @param toCompare The rectangle to compare to this Rectangle object.\n     * @return A value of <code>true</code> if the object has exactly the same\n     *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\n     *         and <code>height</code> properties as this Rectangle object;\n     *         otherwise <code>false</code>.\n     */\n    Rectangle.prototype.equals = function (toCompare) {\n        return (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height);\n    };\n    /**\n     * Increases the size of the Rectangle object by the specified amounts, in\n     * pixels. The center point of the Rectangle object stays the same, and its\n     * size increases to the left and right by the <code>dx</code> value, and to\n     * the top and the bottom by the <code>dy</code> value.\n     *\n     * @param dx The value to be added to the left and the right of the Rectangle\n     *           object. The following equation is used to calculate the new\n     *           width and position of the rectangle:\n     * @param dy The value to be added to the top and the bottom of the\n     *           Rectangle. The following equation is used to calculate the new\n     *           height and position of the rectangle:\n     */\n    Rectangle.prototype.inflate = function (dx, dy) {\n        this.x -= dx / 2;\n        this.y -= dy / 2;\n        this.width += dx / 2;\n        this.height += dy / 2;\n    };\n    /**\n     * Increases the size of the Rectangle object. This method is similar to the\n     * <code>Rectangle.inflate()</code> method except it takes a Point object as\n     * a parameter.\n     *\n     * <p>The following two code examples give the same result:</p>\n     *\n     * @param point The <code>x</code> property of this Point object is used to\n     *              increase the horizontal dimension of the Rectangle object.\n     *              The <code>y</code> property is used to increase the vertical\n     *              dimension of the Rectangle object.\n     */\n    Rectangle.prototype.inflatePoint = function (point) {\n        this.x -= point.x / 2;\n        this.y -= point.y / 2;\n        this.width += point.x / 2;\n        this.height += point.y / 2;\n    };\n    /**\n     * If the Rectangle object specified in the <code>toIntersect</code>\n     * parameter intersects with this Rectangle object, returns the area of\n     * intersection as a Rectangle object. If the rectangles do not intersect,\n     * this method returns an empty Rectangle object with its properties set to\n     * 0.\n     *\n     * @param toIntersect The Rectangle object to compare against to see if it\n     *                    intersects with this Rectangle object.\n     * @return A Rectangle object that equals the area of intersection. If the\n     *         rectangles do not intersect, this method returns an empty\n     *         Rectangle object; that is, a rectangle with its <code>x</code>,\n     *         <code>y</code>, <code>width</code>, and <code>height</code>\n     *         properties set to 0.\n     */\n    Rectangle.prototype.intersection = function (toIntersect) {\n        if (this.intersects(toIntersect)) {\n            var i = new Rectangle();\n            if (this.x > toIntersect.x) {\n                i.x = this.x;\n                i.width = toIntersect.x - this.x + toIntersect.width;\n                if (i.width > this.width)\n                    i.width = this.width;\n            }\n            else {\n                i.x = toIntersect.x;\n                i.width = this.x - toIntersect.x + this.width;\n                if (i.width > toIntersect.width)\n                    i.width = toIntersect.width;\n            }\n            if (this.y > toIntersect.y) {\n                i.y = this.y;\n                i.height = toIntersect.y - this.y + toIntersect.height;\n                if (i.height > this.height)\n                    i.height = this.height;\n            }\n            else {\n                i.y = toIntersect.y;\n                i.height = this.y - toIntersect.y + this.height;\n                if (i.height > toIntersect.height)\n                    i.height = toIntersect.height;\n            }\n            return i;\n        }\n        return new Rectangle();\n    };\n    /**\n     * Determines whether the object specified in the <code>toIntersect</code>\n     * parameter intersects with this Rectangle object. This method checks the\n     * <code>x</code>, <code>y</code>, <code>width</code>, and\n     * <code>height</code> properties of the specified Rectangle object to see if\n     * it intersects with this Rectangle object.\n     *\n     * @param toIntersect The Rectangle object to compare against this Rectangle\n     *                    object.\n     * @return A value of <code>true</code> if the specified object intersects\n     *         with this Rectangle object; otherwise <code>false</code>.\n     */\n    Rectangle.prototype.intersects = function (toIntersect) {\n        return (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\n    };\n    /**\n     * Determines whether or not this Rectangle object is empty.\n     *\n     * @return A value of <code>true</code> if the Rectangle object's width or\n     *         height is less than or equal to 0; otherwise <code>false</code>.\n     */\n    Rectangle.prototype.isEmpty = function () {\n        return (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n    };\n    /**\n     * Adjusts the location of the Rectangle object, as determined by its\n     * top-left corner, by the specified amounts.\n     *\n     * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\n     * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\n     */\n    Rectangle.prototype.offset = function (dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    };\n    /**\n     * Adjusts the location of the Rectangle object using a Point object as a\n     * parameter. This method is similar to the <code>Rectangle.offset()</code>\n     * method, except that it takes a Point object as a parameter.\n     *\n     * @param point A Point object to use to offset this Rectangle object.\n     */\n    Rectangle.prototype.offsetPoint = function (point) {\n        this.x += point.x;\n        this.y += point.y;\n    };\n    /**\n     * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n     * empty if its width or height is less than or equal to 0.\n     *\n     * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n     * <code>width</code>, and <code>height</code> properties to 0.</p>\n     *\n     */\n    Rectangle.prototype.setEmpty = function () {\n        this.x = 0;\n        this.y = 0;\n        this.width = 0;\n        this.height = 0;\n    };\n    /**\n     * Sets the members of Rectangle to the specified values\n     *\n     * @param xa      The <i>x</i> coordinate of the top-left corner of the\n     *                rectangle.\n     * @param ya      The <i>y</i> coordinate of the top-left corner of the\n     *                rectangle.\n     * @param widtha  The width of the rectangle, in pixels.\n     * @param heighta The height of the rectangle, in pixels.\n     */\n    Rectangle.prototype.setTo = function (xa, ya, widtha, heighta) {\n        this.x = xa;\n        this.y = ya;\n        this.width = widtha;\n        this.height = heighta;\n    };\n    /**\n     * Builds and returns a string that lists the horizontal and vertical\n     * positions and the width and height of the Rectangle object.\n     *\n     * @return A string listing the value of each of the following properties of\n     *         the Rectangle object: <code>x</code>, <code>y</code>,\n     *         <code>width</code>, and <code>height</code>.\n     */\n    Rectangle.prototype.toString = function () {\n        return \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n    };\n    /**\n     * Adds two rectangles together to create a new Rectangle object, by filling\n     * in the horizontal and vertical space between the two rectangles.\n     *\n     * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\n     * <code>0</code> as the height or width value, such as: <code>var\n     * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\n     *\n     * @param toUnion A Rectangle object to add to this Rectangle object.\n     * @return A new Rectangle object that is the union of the two rectangles.\n     */\n    Rectangle.prototype.union = function (toUnion) {\n        var u = new Rectangle();\n        if (this.x < toUnion.x) {\n            u.x = this.x;\n            u.width = toUnion.x - this.x + toUnion.width;\n            if (u.width < this.width)\n                u.width = this.width;\n        }\n        else {\n            u.x = toUnion.x;\n            u.width = this.x - toUnion.x + this.width;\n            if (u.width < toUnion.width)\n                u.width = toUnion.width;\n        }\n        if (this.y < toUnion.y) {\n            u.y = this.y;\n            u.height = toUnion.y - this.y + toUnion.height;\n            if (u.height < this.height)\n                u.height = this.height;\n        }\n        else {\n            u.y = toUnion.y;\n            u.height = this.y - toUnion.y + this.height;\n            if (u.height < toUnion.height)\n                u.height = toUnion.height;\n        }\n        return u;\n    };\n    return Rectangle;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Rectangle;\n\n},{\"awayjs-core/lib/geom/Point\":\"awayjs-core/lib/geom/Point\"}],\"awayjs-core/lib/geom/Sphere\":[function(require,module,exports){\n\"use strict\";\nvar Sphere = (function () {\n    /**\n     * Create a Sphere with ABCD coefficients\n     */\n    function Sphere(x, y, z, radius) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (radius === void 0) { radius = 0; }\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.radius = radius;\n    }\n    Sphere.prototype.rayIntersection = function (position, direction, targetNormal) {\n        if (this.containsPoint(position))\n            return 0;\n        var px = position.x - this.x, py = position.y - this.y, pz = position.z - this.z;\n        var vx = direction.x, vy = direction.y, vz = direction.z;\n        var rayEntryDistance;\n        var a = vx * vx + vy * vy + vz * vz;\n        var b = 2 * (px * vx + py * vy + pz * vz);\n        var c = px * px + py * py + pz * pz - this.radius * this.radius;\n        var det = b * b - 4 * a * c;\n        if (det >= 0) {\n            var sqrtDet = Math.sqrt(det);\n            rayEntryDistance = (-b - sqrtDet) / (2 * a);\n            if (rayEntryDistance >= 0) {\n                targetNormal.x = px + rayEntryDistance * vx;\n                targetNormal.y = py + rayEntryDistance * vy;\n                targetNormal.z = pz + rayEntryDistance * vz;\n                targetNormal.normalize();\n                return rayEntryDistance;\n            }\n        }\n        // ray misses sphere\n        return -1;\n    };\n    Sphere.prototype.containsPoint = function (position) {\n        var px = position.x - this.x;\n        var py = position.y - this.y;\n        var pz = position.z - this.z;\n        var distance = Math.sqrt(px * px + py * py + pz * pz);\n        return distance <= this.radius;\n    };\n    Sphere.prototype.toString = function () {\n        return \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\n    };\n    return Sphere;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Sphere;\n\n},{}],\"awayjs-core/lib/geom/Vector3D\":[function(require,module,exports){\n\"use strict\";\n/**\n * The Vector3D class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n *\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n *\n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nvar Vector3D = (function () {\n    /**\n     * Creates an instance of a Vector3D object. If you do not specify a\n     * parameter for the constructor, a Vector3D object is created with\n     * the elements (0,0,0,0).\n     *\n     * @param x The first element, such as the x coordinate.\n     * @param y The second element, such as the y coordinate.\n     * @param z The third element, such as the z coordinate.\n     * @param w An optional element for additional data such as the angle\n     *          of rotation.\n     */\n    function Vector3D(x, y, z, w) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (w === void 0) { w = 0; }\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n    Object.defineProperty(Vector3D.prototype, \"length\", {\n        /**\n         * The length, magnitude, of the current Vector3D object from the\n         * origin (0,0,0) to the object's x, y, and z coordinates. The w\n         * property is ignored. A unit vector has a length or magnitude of\n         * one.\n         */\n        get: function () {\n            return Math.sqrt(this.lengthSquared);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Vector3D.prototype, \"lengthSquared\", {\n        /**\n         * The square of the length of the current Vector3D object, calculated\n         * using the x, y, and z properties. The w property is ignored. Use the\n         * <code>lengthSquared()</code> method whenever possible instead of the\n         * slower <code>Math.sqrt()</code> method call of the\n         * <code>Vector3D.length()</code> method.\n         */\n        get: function () {\n            return this.x * this.x + this.y * this.y + this.z * this.z;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds the value of the x, y, and z elements of the current Vector3D\n     * object to the values of the x, y, and z elements of another Vector3D\n     * object. The <code>add()</code> method does not change the current\n     * Vector3D object. Instead, it returns a new Vector3D object with\n     * the new values.\n     *\n     * <p>The result of adding two vectors together is a resultant vector.\n     * One way to visualize the result is by drawing a vector from the\n     * origin or tail of the first vector to the end or head of the second\n     * vector. The resultant vector is the distance between the origin\n     * point of the first vector and the end point of the second vector.\n     * </p>\n     */\n    Vector3D.prototype.add = function (a) {\n        return new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w);\n    };\n    /**\n     * Returns the angle in radians between two vectors. The returned angle\n     * is the smallest radian the first Vector3D object rotates until it\n     * aligns with the second Vector3D object.\n     *\n     * <p>The <code>angleBetween()</code> method is a static method. You\n     * can use it directly as a method of the Vector3D class.</p>\n     *\n     * <p>To convert a degree to a radian, you can use the following\n     * formula:</p>\n     *\n     * <p><code>radian = Math.PI/180 * degree</code></p>\n     *\n     * @param a The first Vector3D object.\n     * @param b The second Vector3D object.\n     * @returns The angle between two Vector3D objects.\n     */\n    Vector3D.angleBetween = function (a, b) {\n        return Math.acos(a.dotProduct(b) / (a.length * b.length));\n    };\n    /**\n     * Returns a new Vector3D object that is an exact copy of the current\n     * Vector3D object.\n     *\n     * @returns A new Vector3D object that is a copy of the current\n     * Vector3D object.\n     */\n    Vector3D.prototype.clone = function () {\n        return new Vector3D(this.x, this.y, this.z, this.w);\n    };\n    Vector3D.combine = function (a, b, ascl, bscl) {\n        return new Vector3D(a.x * ascl + b.x * bscl, a.y * ascl + b.y * bscl, a.z * ascl + b.z * bscl);\n    };\n    /**\n     * Copies all of vector data from the source Vector3D object into the\n     * calling Vector3D object.\n     *\n     * @param src The Vector3D object from which to copy the data.\n     */\n    Vector3D.prototype.copyFrom = function (src) {\n        this.x = src.x;\n        this.y = src.y;\n        this.z = src.z;\n        this.w = src.w;\n    };\n    /**\n     * Returns a new Vector3D object that is perpendicular (at a right\n     * angle) to the current Vector3D and another Vector3D object. If the\n     * returned Vector3D object's coordinates are (0,0,0), then the two\n     * Vector3D objects are parallel to each other.\n     *\n     * <p>You can use the normalized cross product of two vertices of a\n     * polygon surface with the normalized vector of the camera or eye\n     * viewpoint to get a dot product. The value of the dot product can\n     * identify whether a surface of a three-dimensional object is hidden\n     * from the viewpoint.</p>\n     *\n     * @param a A second Vector3D object.\n     * @returns A new Vector3D object that is perpendicular to the current\n     *          Vector3D object and the Vector3D object specified as the\n     *          parameter.\n     */\n    Vector3D.prototype.crossProduct = function (a) {\n        return new Vector3D(this.y * a.z - this.z * a.y, this.z * a.x - this.x * a.z, this.x * a.y - this.y * a.x, 1);\n    };\n    /**\n     * Decrements the value of the x, y, and z elements of the current\n     * Vector3D object by the values of the x, y, and z elements of\n     * specified Vector3D object. Unlike the\n     * <code>Vector3D.subtract()</code> method, the\n     * <code>decrementBy()</code> method changes the current Vector3D\n     * object and does not return a new Vector3D object.\n     *\n     * @param a The Vector3D object containing the values to subtract from\n     *          the current Vector3D object.\n     */\n    Vector3D.prototype.decrementBy = function (a) {\n        this.x -= a.x;\n        this.y -= a.y;\n        this.z -= a.z;\n    };\n    /**\n     * Returns the distance between two Vector3D objects. The\n     * <code>distance()</code> method is a static method. You can use it\n     * directly as a method of the Vector3D class to get the Euclidean\n     * distance between two three-dimensional points.\n     *\n     * @param pt1 A Vector3D object as the first three-dimensional point.\n     * @param pt2 A Vector3D object as the second three-dimensional point.\n     * @returns The distance between two Vector3D objects.\n     */\n    Vector3D.distance = function (pt1, pt2) {\n        var x = (pt1.x - pt2.x);\n        var y = (pt1.y - pt2.y);\n        var z = (pt1.z - pt2.z);\n        return Math.sqrt(x * x + y * y + z * z);\n    };\n    /**\n     * If the current Vector3D object and the one specified as the\n     * parameter are unit vertices, this method returns the cosine of the\n     * angle between the two vertices. Unit vertices are vertices that\n     * point to the same direction but their length is one. They remove the\n     * length of the vector as a factor in the result. You can use the\n     * <code>normalize()</code> method to convert a vector to a unit\n     * vector.\n     *\n     * <p>The <code>dotProduct()</code> method finds the angle between two\n     * vertices. It is also used in backface culling or lighting\n     * calculations. Backface culling is a procedure for determining which\n     * surfaces are hidden from the viewpoint. You can use the normalized\n     * vertices from the camera, or eye, viewpoint and the cross product of\n     * the vertices of a polygon surface to get the dot product. If the dot\n     * product is less than zero, then the surface is facing the camera or\n     * the viewer. If the two unit vertices are perpendicular to each\n     * other, they are orthogonal and the dot product is zero. If the two\n     * vertices are parallel to each other, the dot product is one.</p>\n     *\n     * @param a The second Vector3D object.\n     * @returns A scalar which is the dot product of the current Vector3D\n     *          object and the specified Vector3D object.\n     *\n     * @see away.geom.Vector3D#crossProduct()\n     * @see away.geom.Vector3D#normalize()\n     */\n    Vector3D.prototype.dotProduct = function (a) {\n        return this.x * a.x + this.y * a.y + this.z * a.z;\n    };\n    /**\n     * Determines whether two Vector3D objects are equal by comparing the\n     * x, y, and z elements of the current Vector3D object with a\n     * specified Vector3D object. If the values of these elements are the\n     * same, the two Vector3D objects are equal. If the second optional\n     * parameter is set to true, all four elements of the Vector3D objects,\n     * including the w property, are compared.\n     */\n    /**\n     *\n     * @param toCompare The Vector3D object to be compared with the current\n     *                  Vector3D object.\n     * @param allFour   An optional parameter that specifies whether the w\n     *                  property of the Vector3D objects is used in the\n     *                  comparison.\n     * @returns A value of true if the specified Vector3D object is equal\n     *          to the current Vector3D object; false if it is not equal.\n     */\n    Vector3D.prototype.equals = function (toCompare, allFour) {\n        if (allFour === void 0) { allFour = false; }\n        return (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w));\n    };\n    /**\n     * Increments the value of the x, y, and z elements of the current\n     * Vector3D object by the values of the x, y, and z elements of a\n     * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n     * method, the <code>incrementBy()</code> method changes the current\n     * Vector3D object and does not return a new Vector3D object.\n     *\n     * @param a The Vector3D object to be added to the current Vector3D\n     *          object.\n     */\n    Vector3D.prototype.incrementBy = function (a) {\n        this.x += a.x;\n        this.y += a.y;\n        this.z += a.z;\n    };\n    /**\n     * Compares the elements of the current Vector3D object with the\n     * elements of a specified Vector3D object to determine whether they\n     * are nearly equal. The two Vector3D objects are nearly equal if the\n     * value of all the elements of the two vertices are equal, or the\n     * result of the comparison is within the tolerance range. The\n     * difference between two elements must be less than the number\n     * specified as the tolerance parameter. If the third optional\n     * parameter is set to <code>true</code>, all four elements of the\n     * Vector3D objects, including the <code>w</code> property, are\n     * compared. Otherwise, only the x, y, and z elements are included in\n     * the comparison.\n     */\n    /**\n     *\n     * @param toCompare The Vector3D object to be compared with the current\n     *                  Vector3D object.\n     * @param tolerance A number determining the tolerance factor. If the\n     *                  difference between the values of the Vector3D\n     *                  element specified in the toCompare parameter and\n     *                  the current Vector3D element is less than the\n     *                  tolerance number, the two values are considered\n     *                  nearly equal.\n     * @param allFour   An optional parameter that specifies whether the w\n     *                  property of the Vector3D objects is used in the\n     *                  comparison.\n     * @returns A value of true if the specified Vector3D object is nearly\n     *          equal to the current Vector3D object; false if it is not\n     *          equal.\n     *\n     * @see away.geom.Vector3D#equals()\n     */\n    Vector3D.prototype.nearEquals = function (toCompare, tolerance, allFour) {\n        if (allFour === void 0) { allFour = true; }\n        return ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n    };\n    /**\n     * Sets the current Vector3D object to its inverse. The inverse object\n     * is also considered the opposite of the original object. The value of\n     * the x, y, and z properties of the current Vector3D object is changed\n     * to -x, -y, and -z.\n     */\n    Vector3D.prototype.negate = function () {\n        this.x = -this.x;\n        this.y = -this.y;\n        this.z = -this.z;\n    };\n    /**\n     * Converts a Vector3D object to a unit vector by dividing the first\n     * three elements (x, y, z) by the length of the vector. Unit vertices\n     * are vertices that have a direction but their length is one. They\n     * simplify vector calculations by removing length as a factor.\n     */\n    /**\n     * Scales the line segment between(0,0) and the current point to a set\n     * length.\n     *\n     * @param thickness The scaling value. For example, if the current\n     *                  Vector3D object is (0,3,4), and you normalize it to\n     *                  1, the point returned is at(0,0.6,0.8).\n     */\n    Vector3D.prototype.normalize = function (thickness) {\n        if (thickness === void 0) { thickness = 1; }\n        if (this.length != 0) {\n            var invLength = thickness / this.length;\n            this.x *= invLength;\n            this.y *= invLength;\n            this.z *= invLength;\n            return;\n        }\n    };\n    /**\n     * Divides the value of the <code>x</code>, <code>y</code>, and\n     * <code>z</code> properties of the current Vector3D object by the\n     * value of its <code>w</code> property.\n     *\n     * <p>If the current Vector3D object is the result of multiplying a\n     * Vector3D object by a projection Matrix3D object, the w property can\n     * hold the transform value. The <code>project()</code> method then can\n     * complete the projection by dividing the elements by the\n     * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n     * property to create a projection Matrix3D object.</p>\n     */\n    Vector3D.prototype.project = function () {\n        this.x /= this.w;\n        this.y /= this.w;\n        this.z /= this.w;\n    };\n    /**\n     * Scales the current Vector3D object by a scalar, a magnitude. The\n     * Vector3D object's x, y, and z elements are multiplied by the scalar\n     * number specified in the parameter. For example, if the vector is\n     * scaled by ten, the result is a vector that is ten times longer. The\n     * scalar can also change the direction of the vector. Multiplying the\n     * vector by a negative number reverses its direction.\n     *\n     * @param s A multiplier (scalar) used to scale a Vector3D object.\n\n     */\n    Vector3D.prototype.scaleBy = function (s) {\n        this.x *= s;\n        this.y *= s;\n        this.z *= s;\n    };\n    /**\n     * Sets the members of Vector3D to the specified values\n     *\n     * @param xa The first element, such as the x coordinate.\n     * @param ya The second element, such as the y coordinate.\n     * @param za The third element, such as the z coordinate.\n     */\n    Vector3D.prototype.setTo = function (xa, ya, za) {\n        this.x = xa;\n        this.y = ya;\n        this.z = za;\n    };\n    /**\n     * Subtracts the value of the x, y, and z elements of the current\n     * Vector3D object from the values of the x, y, and z elements of\n     * another Vector3D object. The <code>subtract()</code> method does not\n     * change the current Vector3D object. Instead, this method returns a\n     * new Vector3D object with the new values.\n     *\n     * @param a The Vector3D object to be subtracted from the current\n     *          Vector3D object.\n     * @returns A new Vector3D object that is the difference between the\n     *          current Vector3D and the specified Vector3D object.\n     *\n     * @see away.geom.Vector3D#decrementBy()\n     */\n    Vector3D.prototype.subtract = function (a) {\n        return new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n    };\n    /**\n     * Returns a string representation of the current Vector3D object. The\n     * string contains the values of the x, y, and z properties.\n     */\n    Vector3D.prototype.toString = function () {\n        return \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n    };\n    /**\n     * The x axis defined as a Vector3D object with coordinates (1,0,0).\n     */\n    Vector3D.X_AXIS = new Vector3D(1, 0, 0);\n    /**\n     * The y axis defined as a Vector3D object with coordinates (0,1,0).\n     */\n    Vector3D.Y_AXIS = new Vector3D(0, 1, 0);\n    /**\n     * The z axis defined as a Vector3D object with coordinates (0,0,1).\n     */\n    Vector3D.Z_AXIS = new Vector3D(0, 0, 1);\n    return Vector3D;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Vector3D;\n\n},{}],\"awayjs-core/lib/geom\":[function(require,module,exports){\n\"use strict\";\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\nexports.Box = Box_1.default;\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nexports.ColorTransform = ColorTransform_1.default;\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nexports.MathConsts = MathConsts_1.default;\nvar Matrix_1 = require(\"awayjs-core/lib/geom/Matrix\");\nexports.Matrix = Matrix_1.default;\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nexports.Matrix3D = Matrix3D_1.default;\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nexports.Matrix3DUtils = Matrix3DUtils_1.default;\nvar Orientation3D_1 = require(\"awayjs-core/lib/geom/Orientation3D\");\nexports.Orientation3D = Orientation3D_1.default;\nvar Plane3D_1 = require(\"awayjs-core/lib/geom/Plane3D\");\nexports.Plane3D = Plane3D_1.default;\nvar PlaneClassification_1 = require(\"awayjs-core/lib/geom/PlaneClassification\");\nexports.PlaneClassification = PlaneClassification_1.default;\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nexports.Point = Point_1.default;\nvar PoissonLookup_1 = require(\"awayjs-core/lib/geom/PoissonLookup\");\nexports.PoissonLookup = PoissonLookup_1.default;\nvar Quaternion_1 = require(\"awayjs-core/lib/geom/Quaternion\");\nexports.Quaternion = Quaternion_1.default;\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nexports.Rectangle = Rectangle_1.default;\nvar Sphere_1 = require(\"awayjs-core/lib/geom/Sphere\");\nexports.Sphere = Sphere_1.default;\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nexports.Vector3D = Vector3D_1.default;\n\n},{\"awayjs-core/lib/geom/Box\":\"awayjs-core/lib/geom/Box\",\"awayjs-core/lib/geom/ColorTransform\":\"awayjs-core/lib/geom/ColorTransform\",\"awayjs-core/lib/geom/MathConsts\":\"awayjs-core/lib/geom/MathConsts\",\"awayjs-core/lib/geom/Matrix\":\"awayjs-core/lib/geom/Matrix\",\"awayjs-core/lib/geom/Matrix3D\":\"awayjs-core/lib/geom/Matrix3D\",\"awayjs-core/lib/geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"awayjs-core/lib/geom/Orientation3D\":\"awayjs-core/lib/geom/Orientation3D\",\"awayjs-core/lib/geom/Plane3D\":\"awayjs-core/lib/geom/Plane3D\",\"awayjs-core/lib/geom/PlaneClassification\":\"awayjs-core/lib/geom/PlaneClassification\",\"awayjs-core/lib/geom/Point\":\"awayjs-core/lib/geom/Point\",\"awayjs-core/lib/geom/PoissonLookup\":\"awayjs-core/lib/geom/PoissonLookup\",\"awayjs-core/lib/geom/Quaternion\":\"awayjs-core/lib/geom/Quaternion\",\"awayjs-core/lib/geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"awayjs-core/lib/geom/Sphere\":\"awayjs-core/lib/geom/Sphere\",\"awayjs-core/lib/geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\"}],\"awayjs-core/lib/image/BitmapImage2D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar ColorUtils_1 = require(\"awayjs-core/lib/utils/ColorUtils\");\nvar BitmapImageUtils_1 = require(\"awayjs-core/lib/utils/BitmapImageUtils\");\nvar CPUCanvas_1 = require(\"awayjs-core/lib/image/CPUCanvas\");\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nvar BitmapImage2D = (function (_super) {\n    __extends(BitmapImage2D, _super);\n    /**\n     * Creates a BitmapImage2D object with a specified width and height. If you\n     * specify a value for the <code>fillColor</code> parameter, every pixel in\n     * the bitmap is set to that color.\n     *\n     * <p>By default, the bitmap is created as transparent, unless you pass\n     * the value <code>false</code> for the transparent parameter. After you\n     * create an opaque bitmap, you cannot change it to a transparent bitmap.\n     * Every pixel in an opaque bitmap uses only 24 bits of color channel\n     * information. If you define the bitmap as transparent, every pixel uses 32\n     * bits of color channel information, including an alpha transparency\n     * channel.</p>\n     *\n     * @param width       The width of the bitmap image in pixels.\n     * @param height      The height of the bitmap image in pixels.\n     * @param transparent Specifies whether the bitmap image supports per-pixel\n     *                    transparency. The default value is <code>true</code>\n     *                    (transparent). To create a fully transparent bitmap,\n     *                    set the value of the <code>transparent</code>\n     *                    parameter to <code>true</code> and the value of the\n     *                    <code>fillColor</code> parameter to 0x00000000(or to\n     *                    0). Setting the <code>transparent</code> property to\n     *                    <code>false</code> can result in minor improvements\n     *                    in rendering performance.\n     * @param fillColor   A 32-bit ARGB color value that you use to fill the\n     *                    bitmap image area. The default value is\n     *                    0xFFFFFFFF(solid white).\n     */\n    function BitmapImage2D(width, height, transparent, fillColor, powerOfTwo) {\n        if (transparent === void 0) { transparent = true; }\n        if (fillColor === void 0) { fillColor = null; }\n        if (powerOfTwo === void 0) { powerOfTwo = true; }\n        _super.call(this, width, height, powerOfTwo);\n        this._locked = false;\n        this._transparent = transparent;\n        if (document) {\n            this._imageCanvas = document.createElement(\"canvas\");\n        }\n        else {\n            this._imageCanvas = new CPUCanvas_1.default();\n        }\n        this._imageCanvas.width = width;\n        this._imageCanvas.height = height;\n        this._context = this._imageCanvas.getContext(\"2d\");\n        if (fillColor != null)\n            this.fillRect(this._rect, fillColor);\n    }\n    Object.defineProperty(BitmapImage2D.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return BitmapImage2D.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BitmapImage2D.prototype, \"transparent\", {\n        /**\n         * Defines whether the bitmap image supports per-pixel transparency. You can\n         * set this value only when you construct a BitmapImage2D object by passing in\n         * <code>true</code> for the <code>transparent</code> parameter of the\n         * constructor. Then, after you create a BitmapImage2D object, you can check\n         * whether it supports per-pixel transparency by determining if the value of\n         * the <code>transparent</code> property is <code>true</code>.\n         */\n        get: function () {\n            return this._transparent;\n        },\n        set: function (value) {\n            this._transparent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a new BitmapImage2D object that is a clone of the original instance\n     * with an exact copy of the contained bitmap.\n     *\n     * @return A new BitmapImage2D object that is identical to the original.\n     */\n    BitmapImage2D.prototype.clone = function () {\n        var t = new BitmapImage2D(this.width, this.height, this.transparent, null, this.powerOfTwo);\n        t.draw(this);\n        return t;\n    };\n    /**\n     * Adjusts the color values in a specified area of a bitmap image by using a\n     * <code>ColorTransform</code> object. If the rectangle matches the\n     * boundaries of the bitmap image, this method transforms the color values of\n     * the entire image.\n     *\n     * @param rect           A Rectangle object that defines the area of the\n     *                       image in which the ColorTransform object is applied.\n     * @param colorTransform A ColorTransform object that describes the color\n     *                       transformation values to apply.\n     */\n    BitmapImage2D.prototype.colorTransform = function (rect, colorTransform) {\n        if (!this._locked)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        var data = this._imageData.data;\n        var i /*uint*/, j /*uint*/, index;\n        for (i = 0; i < rect.width; ++i) {\n            for (j = 0; j < rect.height; ++j) {\n                index = (i + rect.x + (j + rect.y) * this.width) * 4;\n                data[index] = data[index] * colorTransform.redMultiplier + colorTransform.redOffset;\n                data[index + 1] = data[index + 1] * colorTransform.greenMultiplier + colorTransform.greenOffset;\n                data[index + 2] = data[index + 2] * colorTransform.blueMultiplier + colorTransform.blueOffset;\n                data[index + 3] = data[index + 3] * colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n            }\n        }\n        if (!this._locked) {\n            this._context.putImageData(this._imageData, 0, 0);\n            this._imageData = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Transfers data from one channel of another BitmapImage2D object or the\n     * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n     * All of the data in the other channels in the destination BitmapImage2D object\n     * are preserved.\n     *\n     * <p>The source channel value and destination channel value can be one of\n     * following values: </p>\n     *\n     * <ul>\n     *   <li><code>BitmapImage2DChannel.RED</code></li>\n     *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n     *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n     *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n     * </ul>\n     *\n     * @param sourceBitmapImage2D The input bitmap image to use. The source image\n     *                         can be a different BitmapImage2D object or it can\n     *                         refer to the current BitmapImage2D object.\n     * @param sourceRect       The source Rectangle object. To copy only channel\n     *                         data from a smaller area within the bitmap,\n     *                         specify a source rectangle that is smaller than\n     *                         the overall size of the BitmapImage2D object.\n     * @param destPoint        The destination Point object that represents the\n     *                         upper-left corner of the rectangular area where\n     *                         the new channel data is placed. To copy only\n     *                         channel data from one area to a different area in\n     *                         the destination image, specify a point other than\n     *                        (0,0).\n     * @param sourceChannel    The source channel. Use a value from the\n     *                         BitmapImage2DChannel class\n     *                        (<code>BitmapImage2DChannel.RED</code>,\n     *                         <code>BitmapImage2DChannel.BLUE</code>,\n     *                         <code>BitmapImage2DChannel.GREEN</code>,\n     *                         <code>BitmapImage2DChannel.ALPHA</code>).\n     * @param destChannel      The destination channel. Use a value from the\n     *                         BitmapImage2DChannel class\n     *                        (<code>BitmapImage2DChannel.RED</code>,\n     *                         <code>BitmapImage2DChannel.BLUE</code>,\n     *                         <code>BitmapImage2DChannel.GREEN</code>,\n     *                         <code>BitmapImage2DChannel.ALPHA</code>).\n     * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n     */\n    BitmapImage2D.prototype.copyChannel = function (sourceBitmap, sourceRect, destPoint, sourceChannel, destChannel) {\n        var imageData = sourceBitmap.getImageData();\n        if (!this._locked)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        var sourceData = sourceBitmap.getImageData().data;\n        var destData = this._imageData.data;\n        var sourceOffset = Math.round(Math.log(sourceChannel) / Math.log(2));\n        var destOffset = Math.round(Math.log(destChannel) / Math.log(2));\n        var i /*uint*/, j /*uint*/, sourceIndex /*uint*/, destIndex;\n        for (i = 0; i < sourceRect.width; ++i) {\n            for (j = 0; j < sourceRect.height; ++j) {\n                sourceIndex = (i + sourceRect.x + (j + sourceRect.y) * sourceBitmap.width) * 4;\n                destIndex = (i + destPoint.x + (j + destPoint.y) * this.width) * 4;\n                destData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n            }\n        }\n        if (!this._locked) {\n            this._context.putImageData(this._imageData, 0, 0);\n            this._imageData = null;\n        }\n        this.invalidate();\n    };\n    BitmapImage2D.prototype.copyPixels = function (source, sourceRect, destRect) {\n        if (source instanceof BitmapImage2D)\n            source = source.getCanvas();\n        if (this._locked) {\n            // If canvas is locked:\n            //\n            //      1) copy image data back to canvas\n            //      2) draw object\n            //      3) read _imageData back out\n            this._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n            BitmapImageUtils_1.default._copyPixels(this._context, source, sourceRect, destRect);\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        }\n        else {\n            BitmapImageUtils_1.default._copyPixels(this._context, source, sourceRect, destRect);\n        }\n        this.invalidate();\n    };\n    /**\n     * Frees memory that is used to store the BitmapImage2D object.\n     *\n     * <p>When the <code>dispose()</code> method is called on an image, the width\n     * and height of the image are set to 0. All subsequent calls to methods or\n     * properties of this BitmapImage2D instance fail, and an exception is thrown.\n     * </p>\n     *\n     * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n     * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n     * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n     * object is no longer usable and an exception may be thrown if\n     * you call functions on the BitmapImage2D object. However,\n     * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n     * object(approximately 128 bytes); the memory occupied by the actual\n     * BitmapImage2D object is released at the time the BitmapImage2D object is\n     * collected by the garbage collector.</p>\n     *\n     */\n    BitmapImage2D.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._context = null;\n        this._imageCanvas = null;\n        this._imageData = null;\n        this._rect = null;\n        this._transparent = null;\n        this._locked = null;\n    };\n    BitmapImage2D.prototype.draw = function (source, matrix, colorTransform, blendMode, clipRect, smoothing) {\n        if (source instanceof BitmapImage2D && source.getCanvas()) {\n            source = source.getCanvas();\n        }\n        if (this._locked) {\n            // If canvas is locked:\n            //\n            //      1) copy image data back to canvas\n            //      2) draw object\n            //      3) read _imageData back out\n            this._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n            BitmapImageUtils_1.default._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        }\n        else {\n            BitmapImageUtils_1.default._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n        }\n        this.invalidate();\n    };\n    /**\n     * Fills a rectangular area of pixels with a specified ARGB color.\n     *\n     * @param rect  The rectangular area to fill.\n     * @param color The ARGB color value that fills the area. ARGB colors are\n     *              often specified in hexadecimal format; for example,\n     *              0xFF336699.\n     * @throws TypeError The rect is null.\n     */\n    BitmapImage2D.prototype.fillRect = function (rect, color) {\n        if (this._locked) {\n            // If canvas is locked:\n            //\n            //      1) copy image data back to canvas\n            //      2) apply fill\n            //      3) read _imageData back out\n            if (this._imageData)\n                this._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n            BitmapImageUtils_1.default._fillRect(this._context, rect, color, this._transparent);\n            if (this._imageData)\n                this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        }\n        else {\n            BitmapImageUtils_1.default._fillRect(this._context, rect, color, this._transparent);\n        }\n        this.invalidate();\n    };\n    /**\n     * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n     * object at a specific point(<i>x</i>, <i>y</i>). The\n     * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n     * alpha information is returned.\n     *\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n     * values. A premultiplied image pixel has the red, green, and blue color\n     * channel values already multiplied by the alpha data. For example, if the\n     * alpha value is 0, the values for the RGB channels are also 0, independent\n     * of their unmultiplied values. This loss of data can cause some problems\n     * when you perform operations. All BitmapImage2D methods take and return\n     * unmultiplied values. The internal pixel representation is converted from\n     * premultiplied to unmultiplied before it is returned as a value. During a\n     * set operation, the pixel value is premultiplied before the raw image pixel\n     * is set.</p>\n     *\n     * @param x The <i>x</i> position of the pixel.\n     * @param y The <i>y</i> position of the pixel.\n     * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n     *         <i>y</i>) coordinates are outside the bounds of the image, the\n     *         method returns 0.\n     */\n    BitmapImage2D.prototype.getPixel = function (x, y) {\n        var r;\n        var g;\n        var b;\n        var a;\n        if (!this._locked) {\n            var pixelData = this._context.getImageData(x, y, 1, 1);\n            r = pixelData.data[0];\n            g = pixelData.data[1];\n            b = pixelData.data[2];\n            a = pixelData.data[3];\n        }\n        else {\n            var index = (x + y * this._imageData.width) * 4;\n            r = this._imageData.data[index + 0];\n            g = this._imageData.data[index + 1];\n            b = this._imageData.data[index + 2];\n            a = this._imageData.data[index + 3];\n        }\n        //returns black if fully transparent\n        if (!a)\n            return 0x0;\n        return (r << 16) | (g << 8) | b;\n    };\n    /**\n     * Returns an ARGB color value that contains alpha channel data and RGB data.\n     * This method is similar to the <code>getPixel()</code> method, which\n     * returns an RGB color without alpha channel data.\n     *\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n     * values. A premultiplied image pixel has the red, green, and blue color\n     * channel values already multiplied by the alpha data. For example, if the\n     * alpha value is 0, the values for the RGB channels are also 0, independent\n     * of their unmultiplied values. This loss of data can cause some problems\n     * when you perform operations. All BitmapImage2D methods take and return\n     * unmultiplied values. The internal pixel representation is converted from\n     * premultiplied to unmultiplied before it is returned as a value. During a\n     * set operation, the pixel value is premultiplied before the raw image pixel\n     * is set.</p>\n     *\n     * @param x The <i>x</i> position of the pixel.\n     * @param y The <i>y</i> position of the pixel.\n     * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n     *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n     *         returned.\n     */\n    BitmapImage2D.prototype.getPixel32 = function (x, y) {\n        var r;\n        var g;\n        var b;\n        var a;\n        if (!this._locked) {\n            var pixelData = this._context.getImageData(x, y, 1, 1);\n            r = pixelData.data[0];\n            g = pixelData.data[1];\n            b = pixelData.data[2];\n            a = pixelData.data[3];\n        }\n        else {\n            var index = (x + y * this._imageData.width) * 4;\n            r = this._imageData.data[index + 0];\n            g = this._imageData.data[index + 1];\n            b = this._imageData.data[index + 2];\n            a = this._imageData.data[index + 3];\n        }\n        return (a << 24) | (r << 16) | (g << 8) | b;\n    };\n    /**\n     * Locks an image so that any objects that reference the BitmapImage2D object,\n     * such as Bitmap objects, are not updated when this BitmapImage2D object\n     * changes. To improve performance, use this method along with the\n     * <code>unlock()</code> method before and after numerous calls to the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method.\n     *\n     */\n    BitmapImage2D.prototype.lock = function () {\n        if (this._locked)\n            return;\n        this._locked = true;\n        this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n    };\n    /**\n     * Converts an Array into a rectangular region of pixel data. For each pixel,\n     * an Array element is read and written into the BitmapImage2D pixel. The data\n     * in the Array is expected to be 32-bit ARGB pixel values.\n     *\n     * @param rect        Specifies the rectangular region of the BitmapImage2D\n     *                    object.\n     * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n     *                    values to be used in the rectangular region.\n     * @throws RangeError The vector array is not large enough to read all the\n     *                    pixel data.\n     */\n    BitmapImage2D.prototype.setArray = function (rect, inputArray) {\n        if (!this._locked)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        var i /*uint*/, j /*uint*/, index /*uint*/, argb;\n        for (i = 0; i < rect.width; ++i) {\n            for (j = 0; j < rect.height; ++j) {\n                argb = ColorUtils_1.default.float32ColorToARGB(inputArray[i + j * rect.width]);\n                index = (i + rect.x + (j + rect.y) * this._imageData.width) * 4;\n                this._imageData.data[index + 0] = argb[1];\n                this._imageData.data[index + 1] = argb[2];\n                this._imageData.data[index + 2] = argb[3];\n                this._imageData.data[index + 3] = argb[0];\n            }\n        }\n        if (!this._locked) {\n            this._context.putImageData(this._imageData, 0, 0);\n            this._imageData = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n     * value of the image pixel is preserved during this operation. The value of\n     * the RGB color parameter is treated as an unmultiplied color value.\n     *\n     * <p><b>Note:</b> To increase performance, when you use the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n     * call the <code>lock()</code> method before you call the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n     * the <code>unlock()</code> method when you have made all pixel changes.\n     * This process prevents objects that reference this BitmapImage2D instance from\n     * updating until you finish making the pixel changes.</p>\n     *\n     * @param x     The <i>x</i> position of the pixel whose value changes.\n     * @param y     The <i>y</i> position of the pixel whose value changes.\n     * @param color The resulting RGB color for the pixel.\n     */\n    BitmapImage2D.prototype.setPixel = function (x, y, color) {\n        var argb = ColorUtils_1.default.float32ColorToARGB(color);\n        if (!this._locked)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        var index = (x + y * this._imageData.width) * 4;\n        this._imageData.data[index + 0] = argb[1];\n        this._imageData.data[index + 1] = argb[2];\n        this._imageData.data[index + 2] = argb[3];\n        this._imageData.data[index + 3] = 255;\n        if (!this._locked) {\n            this._context.putImageData(this._imageData, 0, 0);\n            this._imageData = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Sets the color and alpha transparency values of a single pixel of a\n     * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n     * method; the main difference is that the <code>setPixel32()</code> method\n     * takes an ARGB color value that contains alpha channel information.\n     *\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n     * values. A premultiplied image pixel has the red, green, and blue color\n     * channel values already multiplied by the alpha data. For example, if the\n     * alpha value is 0, the values for the RGB channels are also 0, independent\n     * of their unmultiplied values. This loss of data can cause some problems\n     * when you perform operations. All BitmapImage2D methods take and return\n     * unmultiplied values. The internal pixel representation is converted from\n     * premultiplied to unmultiplied before it is returned as a value. During a\n     * set operation, the pixel value is premultiplied before the raw image pixel\n     * is set.</p>\n     *\n     * <p><b>Note:</b> To increase performance, when you use the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n     * call the <code>lock()</code> method before you call the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n     * the <code>unlock()</code> method when you have made all pixel changes.\n     * This process prevents objects that reference this BitmapImage2D instance from\n     * updating until you finish making the pixel changes.</p>\n     *\n     * @param x     The <i>x</i> position of the pixel whose value changes.\n     * @param y     The <i>y</i> position of the pixel whose value changes.\n     * @param color The resulting ARGB color for the pixel. If the bitmap is\n     *              opaque(not transparent), the alpha transparency portion of\n     *              this color value is ignored.\n     */\n    BitmapImage2D.prototype.setPixel32 = function (x, y, color) {\n        var argb = ColorUtils_1.default.float32ColorToARGB(color);\n        if (!this._locked)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        var index = (x + y * this._imageData.width) * 4;\n        this._imageData.data[index + 0] = argb[1];\n        this._imageData.data[index + 1] = argb[2];\n        this._imageData.data[index + 2] = argb[3];\n        this._imageData.data[index + 3] = argb[0];\n        if (!this._locked) {\n            this._context.putImageData(this._imageData, 0, 0);\n            this._imageData = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Converts a byte array into a rectangular region of pixel data. For each\n     * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n     * the return value is written into the pixel. If the byte array ends before\n     * the full rectangle is written, the function returns. The data in the byte\n     * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n     * on the byte array before or after the pixels are read.\n     *\n     * @param rect           Specifies the rectangular region of the BitmapImage2D\n     *                       object.\n     * @param inputByteArray A ByteArray object that consists of 32-bit\n     *                       unmultiplied pixel values to be used in the\n     *                       rectangular region.\n     * @throws EOFError  The <code>inputByteArray</code> object does not include\n     *                   enough data to fill the area of the <code>rect</code>\n     *                   rectangle. The method fills as many pixels as possible\n     *                   before throwing the exception.\n     * @throws TypeError The rect or inputByteArray are null.\n     */\n    BitmapImage2D.prototype.setPixels = function (rect, inputByteArray) {\n        if (!this._locked)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        inputByteArray.position = 0;\n        var i /*uint*/, j /*uint*/, index;\n        for (i = 0; i < rect.width; ++i) {\n            for (j = 0; j < rect.height; ++j) {\n                index = (i + rect.x + (j + rect.y) * this._imageData.width) * 4;\n                this._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\n                this._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\n                this._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\n                this._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\n            }\n        }\n        if (!this._locked) {\n            this._context.putImageData(this._imageData, 0, 0);\n            this._imageData = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Unlocks an image so that any objects that reference the BitmapImage2D object,\n     * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n     * To improve performance, use this method along with the <code>lock()</code>\n     * method before and after numerous calls to the <code>setPixel()</code> or\n     * <code>setPixel32()</code> method.\n     *\n     * @param changeRect The area of the BitmapImage2D object that has changed. If\n     *                   you do not specify a value for this parameter, the\n     *                   entire area of the BitmapImage2D object is considered\n     *                   changed.\n     */\n    BitmapImage2D.prototype.unlock = function () {\n        if (!this._locked)\n            return;\n        this._locked = false;\n        this._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n        this._imageData = null;\n    };\n    /**\n     *\n     * @returns {ImageData}\n     */\n    BitmapImage2D.prototype.getImageData = function () {\n        if (!this._locked)\n            return this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n        return this._imageData;\n    };\n    /**\n     *\n     * @returns {HTMLCanvasElement}\n     */\n    BitmapImage2D.prototype.getCanvas = function () {\n        return this._imageCanvas;\n    };\n    /**\n     *\n     * @param width\n     * @param height\n     * @private\n     */\n    BitmapImage2D.prototype._setSize = function (width, height) {\n        if (this._locked)\n            this._context.putImageData(this._imageData, 0, 0);\n        if (this._imageCanvas) {\n            this._imageCanvas.width = width;\n            this._imageCanvas.height = height;\n        }\n        _super.prototype._setSize.call(this, width, height);\n        if (this._locked)\n            this._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n    };\n    BitmapImage2D.assetType = \"[image BitmapImage2D]\";\n    return BitmapImage2D;\n}(Image2D_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BitmapImage2D;\n\n},{\"awayjs-core/lib/image/CPUCanvas\":\"awayjs-core/lib/image/CPUCanvas\",\"awayjs-core/lib/image/Image2D\":\"awayjs-core/lib/image/Image2D\",\"awayjs-core/lib/utils/BitmapImageUtils\":\"awayjs-core/lib/utils/BitmapImageUtils\",\"awayjs-core/lib/utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\"}],\"awayjs-core/lib/image/BitmapImageChannel\":[function(require,module,exports){\n\"use strict\";\nvar BitmapImageChannel = (function () {\n    function BitmapImageChannel() {\n    }\n    BitmapImageChannel.ALPHA = 8;\n    BitmapImageChannel.BLUE = 4;\n    BitmapImageChannel.GREEN = 2;\n    BitmapImageChannel.RED = 1;\n    return BitmapImageChannel;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BitmapImageChannel;\n\n},{}],\"awayjs-core/lib/image/BitmapImageCube\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nvar ImageCube_1 = require(\"awayjs-core/lib/image/ImageCube\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar ColorUtils_1 = require(\"awayjs-core/lib/utils/ColorUtils\");\nvar BitmapImageUtils_1 = require(\"awayjs-core/lib/utils/BitmapImageUtils\");\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nvar BitmapImageCube = (function (_super) {\n    __extends(BitmapImageCube, _super);\n    /**\n     * Creates a BitmapImage2D object with a specified width and height. If you\n     * specify a value for the <code>fillColor</code> parameter, every pixel in\n     * the bitmap is set to that color.\n     *\n     * <p>By default, the bitmap is created as transparent, unless you pass\n     * the value <code>false</code> for the transparent parameter. After you\n     * create an opaque bitmap, you cannot change it to a transparent bitmap.\n     * Every pixel in an opaque bitmap uses only 24 bits of color channel\n     * information. If you define the bitmap as transparent, every pixel uses 32\n     * bits of color channel information, including an alpha transparency\n     * channel.</p>\n     *\n     * @param width       The width of the bitmap image in pixels.\n     * @param height      The height of the bitmap image in pixels.\n     * @param transparent Specifies whether the bitmap image supports per-pixel\n     *                    transparency. The default value is <code>true</code>\n     *                    (transparent). To create a fully transparent bitmap,\n     *                    set the value of the <code>transparent</code>\n     *                    parameter to <code>true</code> and the value of the\n     *                    <code>fillColor</code> parameter to 0x00000000(or to\n     *                    0). Setting the <code>transparent</code> property to\n     *                    <code>false</code> can result in minor improvements\n     *                    in rendering performance.\n     * @param fillColor   A 32-bit ARGB color value that you use to fill the\n     *                    bitmap image area. The default value is\n     *                    0xFFFFFFFF(solid white).\n     */\n    function BitmapImageCube(size, transparent, fillColor) {\n        if (transparent === void 0) { transparent = true; }\n        if (fillColor === void 0) { fillColor = null; }\n        _super.call(this, size);\n        this._imageCanvas = new Array(6);\n        this._context = new Array(6);\n        this._imageData = new Array(6);\n        this._locked = false;\n        this._transparent = transparent;\n        for (var i = 0; i < 6; i++) {\n            this._imageCanvas[i] = document.createElement(\"canvas\");\n            this._imageCanvas[i].width = size;\n            this._imageCanvas[i].height = size;\n            this._context[i] = this._imageCanvas[i].getContext(\"2d\");\n            if (fillColor != null)\n                this.fillRect(i, new Rectangle_1.default(0, 0, size, size), fillColor);\n        }\n    }\n    Object.defineProperty(BitmapImageCube.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return BitmapImageCube.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BitmapImageCube.prototype, \"transparent\", {\n        /**\n         * Defines whether the bitmap image supports per-pixel transparency. You can\n         * set this value only when you construct a BitmapImage2D object by passing in\n         * <code>true</code> for the <code>transparent</code> parameter of the\n         * constructor. Then, after you create a BitmapImage2D object, you can check\n         * whether it supports per-pixel transparency by determining if the value of\n         * the <code>transparent</code> property is <code>true</code>.\n         */\n        get: function () {\n            return this._transparent;\n        },\n        set: function (value) {\n            this._transparent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a new BitmapImage2D object that is a clone of the original instance\n     * with an exact copy of the contained bitmap.\n     *\n     * @return A new BitmapImage2D object that is identical to the original.\n     */\n    BitmapImageCube.prototype.clone = function () {\n        var t = new BitmapImageCube(this._size, this.transparent);\n        for (var i = 0; i < 6; i++) {\n            t.draw(i, this.getCanvas(i));\n        }\n        return t;\n    };\n    /**\n     * Adjusts the color values in a specified area of a bitmap image by using a\n     * <code>ColorTransform</code> object. If the rectangle matches the\n     * boundaries of the bitmap image, this method transforms the color values of\n     * the entire image.\n     *\n     * @param rect           A Rectangle object that defines the area of the\n     *                       image in which the ColorTransform object is applied.\n     * @param colorTransform A ColorTransform object that describes the color\n     *                       transformation values to apply.\n     */\n    BitmapImageCube.prototype.colorTransform = function (side, rect, colorTransform) {\n        if (!this._locked)\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        var data = this._imageData[side].data;\n        var i /*uint*/, j /*uint*/, index;\n        for (i = 0; i < rect.width; ++i) {\n            for (j = 0; j < rect.height; ++j) {\n                index = (i + rect.x + (j + rect.y) * this._size) * 4;\n                data[index] = data[index] * colorTransform.redMultiplier + colorTransform.redOffset;\n                data[index + 1] = data[index + 1] * colorTransform.greenMultiplier + colorTransform.greenOffset;\n                data[index + 2] = data[index + 2] * colorTransform.blueMultiplier + colorTransform.blueOffset;\n                data[index + 3] = data[index + 3] * colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n            }\n        }\n        if (!this._locked) {\n            this._context[side].putImageData(this._imageData[side], 0, 0);\n            this._imageData[side] = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Transfers data from one channel of another BitmapImage2D object or the\n     * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n     * All of the data in the other channels in the destination BitmapImage2D object\n     * are preserved.\n     *\n     * <p>The source channel value and destination channel value can be one of\n     * following values: </p>\n     *\n     * <ul>\n     *   <li><code>BitmapImage2DChannel.RED</code></li>\n     *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n     *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n     *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n     * </ul>\n     *\n     * @param sourceBitmapImage2D The input bitmap image to use. The source image\n     *                         can be a different BitmapImage2D object or it can\n     *                         refer to the current BitmapImage2D object.\n     * @param sourceRect       The source Rectangle object. To copy only channel\n     *                         data from a smaller area within the bitmap,\n     *                         specify a source rectangle that is smaller than\n     *                         the overall size of the BitmapImage2D object.\n     * @param destPoint        The destination Point object that represents the\n     *                         upper-left corner of the rectangular area where\n     *                         the new channel data is placed. To copy only\n     *                         channel data from one area to a different area in\n     *                         the destination image, specify a point other than\n     *                        (0,0).\n     * @param sourceChannel    The source channel. Use a value from the\n     *                         BitmapImage2DChannel class\n     *                        (<code>BitmapImage2DChannel.RED</code>,\n     *                         <code>BitmapImage2DChannel.BLUE</code>,\n     *                         <code>BitmapImage2DChannel.GREEN</code>,\n     *                         <code>BitmapImage2DChannel.ALPHA</code>).\n     * @param destChannel      The destination channel. Use a value from the\n     *                         BitmapImage2DChannel class\n     *                        (<code>BitmapImage2DChannel.RED</code>,\n     *                         <code>BitmapImage2DChannel.BLUE</code>,\n     *                         <code>BitmapImage2DChannel.GREEN</code>,\n     *                         <code>BitmapImage2DChannel.ALPHA</code>).\n     * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n     */\n    BitmapImageCube.prototype.copyChannel = function (side, sourceBitmap, sourceRect, destPoint, sourceChannel, destChannel) {\n        var imageData = sourceBitmap.getImageData();\n        if (!this._locked)\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        var sourceData = sourceBitmap.getImageData().data;\n        var destData = this._imageData[side].data;\n        var sourceOffset = Math.round(Math.log(sourceChannel) / Math.log(2));\n        var destOffset = Math.round(Math.log(destChannel) / Math.log(2));\n        var i /*uint*/, j /*uint*/, sourceIndex /*uint*/, destIndex;\n        for (i = 0; i < sourceRect.width; ++i) {\n            for (j = 0; j < sourceRect.height; ++j) {\n                sourceIndex = (i + sourceRect.x + (j + sourceRect.y) * sourceBitmap.width) * 4;\n                destIndex = (i + destPoint.x + (j + destPoint.y) * this._size) * 4;\n                destData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n            }\n        }\n        if (!this._locked) {\n            this._context[side].putImageData(this._imageData[side], 0, 0);\n            this._imageData[side] = null;\n        }\n        this.invalidate();\n    };\n    BitmapImageCube.prototype.copyPixels = function (side, source, sourceRect, destRect) {\n        if (source instanceof BitmapImage2D_1.default)\n            source = source.getCanvas();\n        if (this._locked) {\n            // If canvas is locked:\n            //\n            //      1) copy image data back to canvas\n            //      2) draw object\n            //      3) read _imageData back out\n            this._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n            BitmapImageUtils_1.default._copyPixels(this._context[side], source, sourceRect, destRect);\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        }\n        else {\n            BitmapImageUtils_1.default._copyPixels(this._context[side], source, sourceRect, destRect);\n        }\n        this.invalidate();\n    };\n    /**\n     * Frees memory that is used to store the BitmapImage2D object.\n     *\n     * <p>When the <code>dispose()</code> method is called on an image, the width\n     * and height of the image are set to 0. All subsequent calls to methods or\n     * properties of this BitmapImage2D instance fail, and an exception is thrown.\n     * </p>\n     *\n     * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n     * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n     * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n     * object is no longer usable and an exception may be thrown if\n     * you call functions on the BitmapImage2D object. However,\n     * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n     * object(approximately 128 bytes); the memory occupied by the actual\n     * BitmapImage2D object is released at the time the BitmapImage2D object is\n     * collected by the garbage collector.</p>\n     *\n     */\n    BitmapImageCube.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        for (var i = 0; i < 6; i++) {\n            this._context[i] = null;\n            this._imageCanvas[i] = null;\n            this._imageData[i] = null;\n        }\n        this._transparent = null;\n        this._locked = null;\n    };\n    BitmapImageCube.prototype.draw = function (side, source, matrix, colorTransform, blendMode, clipRect, smoothing) {\n        if (source instanceof BitmapImage2D_1.default)\n            source = source.getCanvas();\n        if (this._locked) {\n            // If canvas is locked:\n            //\n            //      1) copy image data back to canvas\n            //      2) draw object\n            //      3) read _imageData back out\n            this._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n            BitmapImageUtils_1.default._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        }\n        else {\n            BitmapImageUtils_1.default._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n        }\n        this.invalidate();\n    };\n    /**\n     * Fills a rectangular area of pixels with a specified ARGB color.\n     *\n     * @param rect  The rectangular area to fill.\n     * @param color The ARGB color value that fills the area. ARGB colors are\n     *              often specified in hexadecimal format; for example,\n     *              0xFF336699.\n     * @throws TypeError The rect is null.\n     */\n    BitmapImageCube.prototype.fillRect = function (side, rect, color) {\n        if (this._locked) {\n            // If canvas is locked:\n            //\n            //      1) copy image data back to canvas\n            //      2) apply fill\n            //      3) read _imageData back out\n            if (this._imageData[side])\n                this._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n            BitmapImageUtils_1.default._fillRect(this._context[side], rect, color, this._transparent);\n            if (this._imageData[side])\n                this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        }\n        else {\n            BitmapImageUtils_1.default._fillRect(this._context[side], rect, color, this._transparent);\n        }\n        this.invalidate();\n    };\n    /**\n     * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n     * object at a specific point(<i>x</i>, <i>y</i>). The\n     * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n     * alpha information is returned.\n     *\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n     * values. A premultiplied image pixel has the red, green, and blue color\n     * channel values already multiplied by the alpha data. For example, if the\n     * alpha value is 0, the values for the RGB channels are also 0, independent\n     * of their unmultiplied values. This loss of data can cause some problems\n     * when you perform operations. All BitmapImage2D methods take and return\n     * unmultiplied values. The internal pixel representation is converted from\n     * premultiplied to unmultiplied before it is returned as a value. During a\n     * set operation, the pixel value is premultiplied before the raw image pixel\n     * is set.</p>\n     *\n     * @param x The <i>x</i> position of the pixel.\n     * @param y The <i>y</i> position of the pixel.\n     * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n     *         <i>y</i>) coordinates are outside the bounds of the image, the\n     *         method returns 0.\n     */\n    BitmapImageCube.prototype.getPixel = function (side, x, y) {\n        var r;\n        var g;\n        var b;\n        var a;\n        if (!this._locked) {\n            var pixelData = this._context[side].getImageData(x, y, 1, 1);\n            r = pixelData.data[0];\n            g = pixelData.data[1];\n            b = pixelData.data[2];\n            a = pixelData.data[3];\n        }\n        else {\n            var index = (x + y * this._size) * 4;\n            r = this._imageData[side].data[index + 0];\n            g = this._imageData[side].data[index + 1];\n            b = this._imageData[side].data[index + 2];\n            a = this._imageData[side].data[index + 3];\n        }\n        //returns black if fully transparent\n        if (!a)\n            return 0x0;\n        return (r << 16) | (g << 8) | b;\n    };\n    /**\n     * Returns an ARGB color value that contains alpha channel data and RGB data.\n     * This method is similar to the <code>getPixel()</code> method, which\n     * returns an RGB color without alpha channel data.\n     *\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n     * values. A premultiplied image pixel has the red, green, and blue color\n     * channel values already multiplied by the alpha data. For example, if the\n     * alpha value is 0, the values for the RGB channels are also 0, independent\n     * of their unmultiplied values. This loss of data can cause some problems\n     * when you perform operations. All BitmapImage2D methods take and return\n     * unmultiplied values. The internal pixel representation is converted from\n     * premultiplied to unmultiplied before it is returned as a value. During a\n     * set operation, the pixel value is premultiplied before the raw image pixel\n     * is set.</p>\n     *\n     * @param x The <i>x</i> position of the pixel.\n     * @param y The <i>y</i> position of the pixel.\n     * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n     *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n     *         returned.\n     */\n    BitmapImageCube.prototype.getPixel32 = function (side, x, y) {\n        var r;\n        var g;\n        var b;\n        var a;\n        if (!this._locked) {\n            var pixelData = this._context[side].getImageData(x, y, 1, 1);\n            r = pixelData.data[0];\n            g = pixelData.data[1];\n            b = pixelData.data[2];\n            a = pixelData.data[3];\n        }\n        else {\n            var index = (x + y * this._size) * 4;\n            r = this._imageData[side].data[index + 0];\n            g = this._imageData[side].data[index + 1];\n            b = this._imageData[side].data[index + 2];\n            a = this._imageData[side].data[index + 3];\n        }\n        return (a << 24) | (r << 16) | (g << 8) | b;\n    };\n    /**\n     * Locks an image so that any objects that reference the BitmapImage2D object,\n     * such as Bitmap objects, are not updated when this BitmapImage2D object\n     * changes. To improve performance, use this method along with the\n     * <code>unlock()</code> method before and after numerous calls to the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method.\n     *\n     */\n    BitmapImageCube.prototype.lock = function () {\n        if (this._locked)\n            return;\n        this._locked = true;\n        for (var i = 0; i < 6; i++)\n            this._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n    };\n    /**\n     * Converts an Array into a rectangular region of pixel data. For each pixel,\n     * an Array element is read and written into the BitmapImage2D pixel. The data\n     * in the Array is expected to be 32-bit ARGB pixel values.\n     *\n     * @param rect        Specifies the rectangular region of the BitmapImage2D\n     *                    object.\n     * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n     *                    values to be used in the rectangular region.\n     * @throws RangeError The vector array is not large enough to read all the\n     *                    pixel data.\n     */\n    BitmapImageCube.prototype.setArray = function (side, rect, inputArray) {\n        if (!this._locked)\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        var i /*uint*/, j /*uint*/, index /*uint*/, argb;\n        for (i = 0; i < rect.width; ++i) {\n            for (j = 0; j < rect.height; ++j) {\n                argb = ColorUtils_1.default.float32ColorToARGB(inputArray[i + j * rect.width]);\n                index = (i + rect.x + (j + rect.y) * this._size) * 4;\n                this._imageData[side].data[index + 0] = argb[1];\n                this._imageData[side].data[index + 1] = argb[2];\n                this._imageData[side].data[index + 2] = argb[3];\n                this._imageData[side].data[index + 3] = argb[0];\n            }\n        }\n        if (!this._locked) {\n            this._context[side].putImageData(this._imageData[side], 0, 0);\n            this._imageData[side] = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n     * value of the image pixel is preserved during this operation. The value of\n     * the RGB color parameter is treated as an unmultiplied color value.\n     *\n     * <p><b>Note:</b> To increase performance, when you use the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n     * call the <code>lock()</code> method before you call the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n     * the <code>unlock()</code> method when you have made all pixel changes.\n     * This process prevents objects that reference this BitmapImage2D instance from\n     * updating until you finish making the pixel changes.</p>\n     *\n     * @param x     The <i>x</i> position of the pixel whose value changes.\n     * @param y     The <i>y</i> position of the pixel whose value changes.\n     * @param color The resulting RGB color for the pixel.\n     */\n    BitmapImageCube.prototype.setPixel = function (side, x, y, color) {\n        var argb = ColorUtils_1.default.float32ColorToARGB(color);\n        if (!this._locked)\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        var index = (x + y * this._size) * 4;\n        this._imageData[side].data[index + 0] = argb[1];\n        this._imageData[side].data[index + 1] = argb[2];\n        this._imageData[side].data[index + 2] = argb[3];\n        this._imageData[side].data[index + 3] = 255;\n        if (!this._locked) {\n            this._context[side].putImageData(this._imageData[side], 0, 0);\n            this._imageData = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Sets the color and alpha transparency values of a single pixel of a\n     * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n     * method; the main difference is that the <code>setPixel32()</code> method\n     * takes an ARGB color value that contains alpha channel information.\n     *\n     * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n     * values. A premultiplied image pixel has the red, green, and blue color\n     * channel values already multiplied by the alpha data. For example, if the\n     * alpha value is 0, the values for the RGB channels are also 0, independent\n     * of their unmultiplied values. This loss of data can cause some problems\n     * when you perform operations. All BitmapImage2D methods take and return\n     * unmultiplied values. The internal pixel representation is converted from\n     * premultiplied to unmultiplied before it is returned as a value. During a\n     * set operation, the pixel value is premultiplied before the raw image pixel\n     * is set.</p>\n     *\n     * <p><b>Note:</b> To increase performance, when you use the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n     * call the <code>lock()</code> method before you call the\n     * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n     * the <code>unlock()</code> method when you have made all pixel changes.\n     * This process prevents objects that reference this BitmapImage2D instance from\n     * updating until you finish making the pixel changes.</p>\n     *\n     * @param x     The <i>x</i> position of the pixel whose value changes.\n     * @param y     The <i>y</i> position of the pixel whose value changes.\n     * @param color The resulting ARGB color for the pixel. If the bitmap is\n     *              opaque(not transparent), the alpha transparency portion of\n     *              this color value is ignored.\n     */\n    BitmapImageCube.prototype.setPixel32 = function (side, x, y, color) {\n        var argb = ColorUtils_1.default.float32ColorToARGB(color);\n        if (!this._locked)\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        var index = (x + y * this._size) * 4;\n        this._imageData[side].data[index + 0] = argb[1];\n        this._imageData[side].data[index + 1] = argb[2];\n        this._imageData[side].data[index + 2] = argb[3];\n        this._imageData[side].data[index + 3] = argb[0];\n        if (!this._locked) {\n            this._context[side].putImageData(this._imageData[side], 0, 0);\n            this._imageData[side] = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Converts a byte array into a rectangular region of pixel data. For each\n     * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n     * the return value is written into the pixel. If the byte array ends before\n     * the full rectangle is written, the function returns. The data in the byte\n     * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n     * on the byte array before or after the pixels are read.\n     *\n     * @param rect           Specifies the rectangular region of the BitmapImage2D\n     *                       object.\n     * @param inputByteArray A ByteArray object that consists of 32-bit\n     *                       unmultiplied pixel values to be used in the\n     *                       rectangular region.\n     * @throws EOFError  The <code>inputByteArray</code> object does not include\n     *                   enough data to fill the area of the <code>rect</code>\n     *                   rectangle. The method fills as many pixels as possible\n     *                   before throwing the exception.\n     * @throws TypeError The rect or inputByteArray are null.\n     */\n    BitmapImageCube.prototype.setPixels = function (side, rect, inputByteArray) {\n        if (!this._locked)\n            this._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n        inputByteArray.position = 0;\n        var i /*uint*/, j /*uint*/, index;\n        for (i = 0; i < rect.width; ++i) {\n            for (j = 0; j < rect.height; ++j) {\n                index = (i + rect.x + (j + rect.y) * this._size) * 4;\n                this._imageData[side].data[index + 0] = inputByteArray.readUnsignedInt();\n                this._imageData[side].data[index + 1] = inputByteArray.readUnsignedInt();\n                this._imageData[side].data[index + 2] = inputByteArray.readUnsignedInt();\n                this._imageData[side].data[index + 3] = inputByteArray.readUnsignedInt();\n            }\n        }\n        if (!this._locked) {\n            this._context[side].putImageData(this._imageData[side], 0, 0);\n            this._imageData[side] = null;\n        }\n        this.invalidate();\n    };\n    /**\n     * Unlocks an image so that any objects that reference the BitmapImage2D object,\n     * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n     * To improve performance, use this method along with the <code>lock()</code>\n     * method before and after numerous calls to the <code>setPixel()</code> or\n     * <code>setPixel32()</code> method.\n     *\n     * @param changeRect The area of the BitmapImage2D object that has changed. If\n     *                   you do not specify a value for this parameter, the\n     *                   entire area of the BitmapImage2D object is considered\n     *                   changed.\n     */\n    BitmapImageCube.prototype.unlock = function () {\n        if (!this._locked)\n            return;\n        this._locked = false;\n        for (var i = 0; i < 6; i++) {\n            this._context[i].putImageData(this._imageData[i], 0, 0); // at coords 0,0\n            this._imageData[i] = null;\n        }\n    };\n    /**\n     *\n     * @returns {ImageData}\n     */\n    BitmapImageCube.prototype.getImageData = function (side) {\n        if (!this._locked)\n            return this._context[side].getImageData(0, 0, this._size, this._size);\n        return this._imageData[side];\n    };\n    /**\n     *\n     * @returns {HTMLCanvasElement}\n     */\n    BitmapImageCube.prototype.getCanvas = function (side) {\n        return this._imageCanvas[side];\n    };\n    /**\n     *\n     * @param width\n     * @param height\n     * @private\n     */\n    BitmapImageCube.prototype._setSize = function (size) {\n        _super.prototype._setSize.call(this, size);\n        for (var i = 0; i < 6; i++) {\n            if (this._locked)\n                this._context[i].putImageData(this._imageData[i], 0, 0);\n            this._imageCanvas[i].width = size;\n            this._imageCanvas[i].height = size;\n            if (this._locked)\n                this._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n        }\n    };\n    BitmapImageCube.assetType = \"[image BitmapImageCube]\";\n    BitmapImageCube.posX = 0;\n    BitmapImageCube.negX = 1;\n    BitmapImageCube.posY = 2;\n    BitmapImageCube.negY = 3;\n    BitmapImageCube.posZ = 4;\n    BitmapImageCube.negZ = 5;\n    return BitmapImageCube;\n}(ImageCube_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BitmapImageCube;\n\n},{\"awayjs-core/lib/geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"awayjs-core/lib/image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\",\"awayjs-core/lib/image/ImageCube\":\"awayjs-core/lib/image/ImageCube\",\"awayjs-core/lib/utils/BitmapImageUtils\":\"awayjs-core/lib/utils/BitmapImageUtils\",\"awayjs-core/lib/utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\"}],\"awayjs-core/lib/image/BlendMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * A class that provides constant values for visual blend mode effects. These\n * constants are used in the following:\n * <ul>\n *   <li> The <code>blendMode</code> property of the\n * flash.display.DisplayObject class.</li>\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\n * method of the flash.display.BitmapData class</li>\n * </ul>\n */\nvar BlendMode = (function () {\n    function BlendMode() {\n    }\n    /**\n     * Adds the values of the constituent colors of the display object to the\n     * colors of its background, applying a ceiling of 0xFF. This setting is\n     * commonly used for animating a lightening dissolve between two objects.\n     *\n     * <p>For example, if the display object has a pixel with an RGB value of\n     * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\n     * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\n     * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\n     */\n    BlendMode.ADD = \"add\";\n    /**\n     * Applies the alpha value of each pixel of the display object to the\n     * background. This requires the <code>blendMode</code> property of the\n     * parent display object be set to\n     * <code>away.base.BlendMode.LAYER</code>.\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.ALPHA = \"alpha\";\n    /**\n     * Selects the darker of the constituent colors of the display object and the\n     * colors of the background(the colors with the smaller values). This\n     * setting is commonly used for superimposing type.\n     *\n     * <p>For example, if the display object has a pixel with an RGB value of\n     * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n     * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\n     * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.DARKEN = \"darken\";\n    /**\n     * Compares the constituent colors of the display object with the colors of\n     * its background, and subtracts the darker of the values of the two\n     * constituent colors from the lighter value. This setting is commonly used\n     * for more vibrant colors.\n     *\n     * <p>For example, if the display object has a pixel with an RGB value of\n     * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n     * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\n     * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\n     */\n    BlendMode.DIFFERENCE = \"difference\";\n    /**\n     * Erases the background based on the alpha value of the display object. This\n     * process requires that the <code>blendMode</code> property of the parent\n     * display object be set to <code>flash.display.BlendMode.LAYER</code>.\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.ERASE = \"erase\";\n    /**\n     * Adjusts the color of each pixel based on the darkness of the display\n     * object. If the display object is lighter than 50% gray, the display object\n     * and background colors are screened, which results in a lighter color. If\n     * the display object is darker than 50% gray, the colors are multiplied,\n     * which results in a darker color. This setting is commonly used for shading\n     * effects.\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.HARDLIGHT = \"hardlight\";\n    /**\n     * Inverts the background.\n     */\n    BlendMode.INVERT = \"invert\";\n    /**\n     * Forces the creation of a transparency group for the display object. This\n     * means that the display object is precomposed in a temporary buffer before\n     * it is processed further. The precomposition is done automatically if the\n     * display object is precached by means of bitmap caching or if the display\n     * object is a display object container that has at least one child object\n     * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.LAYER = \"layer\";\n    /**\n     * Selects the lighter of the constituent colors of the display object and\n     * the colors of the background(the colors with the larger values). This\n     * setting is commonly used for superimposing type.\n     *\n     * <p>For example, if the display object has a pixel with an RGB value of\n     * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n     * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\n     * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.LIGHTEN = \"lighten\";\n    /**\n     * Multiplies the values of the display object constituent colors by the\n     * constituent colors of the background color, and normalizes by dividing by\n     * 0xFF, resulting in darker colors. This setting is commonly used for\n     * shadows and depth effects.\n     *\n     * <p>For example, if a constituent color(such as red) of one pixel in the\n     * display object and the corresponding color of the pixel in the background\n     * both have the value 0x88, the multiplied result is 0x4840. Dividing by\n     * 0xFF yields a value of 0x48 for that constituent color, which is a darker\n     * shade than the color of the display object or the color of the\n     * background.</p>\n     */\n    BlendMode.MULTIPLY = \"multiply\";\n    /**\n     * The display object appears in front of the background. Pixel values of the\n     * display object override the pixel values of the background. Where the\n     * display object is transparent, the background is visible.\n     */\n    BlendMode.NORMAL = \"normal\";\n    /**\n     * Adjusts the color of each pixel based on the darkness of the background.\n     * If the background is lighter than 50% gray, the display object and\n     * background colors are screened, which results in a lighter color. If the\n     * background is darker than 50% gray, the colors are multiplied, which\n     * results in a darker color. This setting is commonly used for shading\n     * effects.\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.OVERLAY = \"overlay\";\n    /**\n     * Multiplies the complement(inverse) of the display object color by the\n     * complement of the background color, resulting in a bleaching effect. This\n     * setting is commonly used for highlights or to remove black areas of the\n     * display object.\n     */\n    BlendMode.SCREEN = \"screen\";\n    /**\n     * Uses a shader to define the blend between objects.\n     *\n     * <p>Setting the <code>blendShader</code> property to a Shader instance\n     * automatically sets the display object's <code>blendMode</code> property to\n     * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\n     * set to <code>BlendMode.SHADER</code> without first setting the\n     * <code>blendShader</code> property, the <code>blendMode</code> property is\n     * set to <code>BlendMode.NORMAL</code> instead. If the\n     * <code>blendShader</code> property is set(which sets the\n     * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\n     * later the value of the <code>blendMode</code> property is changed, the\n     * blend mode can be reset to use the blend shader simply by setting the\n     * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\n     * <code>blendShader</code> property does not need to be set again except to\n     * change the shader that's used to define the blend mode.</p>\n     *\n     * <p>Not supported under GPU rendering.</p>\n     */\n    BlendMode.SHADER = \"shader\";\n    /**\n     * Subtracts the values of the constituent colors in the display object from\n     * the values of the background color, applying a floor of 0. This setting is\n     * commonly used for animating a darkening dissolve between two objects.\n     *\n     * <p>For example, if the display object has a pixel with an RGB value of\n     * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\n     * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\n     * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\n     */\n    BlendMode.SUBTRACT = \"subtract\";\n    return BlendMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BlendMode;\n\n},{}],\"awayjs-core/lib/image/CPUCanvas\":[function(require,module,exports){\n\"use strict\";\nvar CPURenderingContext2D_1 = require(\"awayjs-core/lib/image/CPURenderingContext2D\");\nvar ImageData_1 = require(\"awayjs-core/lib/image/ImageData\");\nvar CPUCanvas = (function () {\n    function CPUCanvas() {\n        this.width = 1;\n        this.height = 1;\n        this.reset();\n    }\n    CPUCanvas.prototype.getContext = function (contextId) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return new CPURenderingContext2D_1.default(this);\n    };\n    CPUCanvas.prototype.reset = function () {\n        if (!this.imageData) {\n            this.imageData = new ImageData_1.default(this.width, this.height);\n        }\n        else {\n            this.imageData.width = this.width;\n            this.imageData.height = this.height;\n            if (this.imageData.data) {\n                this.imageData.data.length = 0;\n                this.imageData.data = null;\n            }\n            this.imageData.data = new Uint8Array(this.width * this.height * 4);\n        }\n        for (var i = 0; i < this.width * this.height * 4; i += 4) {\n            this.imageData.data[i] = 255;\n            this.imageData.data[i + 1] = 255;\n            this.imageData.data[i + 2] = 255;\n            this.imageData.data[i + 3] = 255;\n        }\n    };\n    CPUCanvas.prototype.getImageData = function () {\n        if (this.imageData.width != this.width || this.imageData.height != this.height) {\n            this.reset();\n        }\n        return this.imageData;\n    };\n    return CPUCanvas;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CPUCanvas;\n\n},{\"awayjs-core/lib/image/CPURenderingContext2D\":\"awayjs-core/lib/image/CPURenderingContext2D\",\"awayjs-core/lib/image/ImageData\":\"awayjs-core/lib/image/ImageData\"}],\"awayjs-core/lib/image/CPURenderingContext2D\":[function(require,module,exports){\n\"use strict\";\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nvar Matrix_1 = require(\"awayjs-core/lib/geom/Matrix\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\n//TODO: implement all methods\nvar CPURenderingContext2D = (function () {\n    function CPURenderingContext2D(cpuCanvas) {\n        this.point = new Point_1.default();\n        this.point2 = new Point_1.default();\n        this.cpuCanvas = cpuCanvas;\n    }\n    CPURenderingContext2D.prototype.restore = function () {\n        this.matrix = null;\n    };\n    CPURenderingContext2D.prototype.setTransform = function (m11, m12, m21, m22, dx, dy) {\n        this.matrix = new Matrix_1.default(m11, m12, m21, m22, dx, dy);\n    };\n    CPURenderingContext2D.prototype.save = function () {\n    };\n    CPURenderingContext2D.prototype.arc = function (x, y, radius, startAngle, endAngle, anticlockwise) {\n    };\n    CPURenderingContext2D.prototype.measureText = function (text) {\n        return undefined;\n    };\n    CPURenderingContext2D.prototype.isPointInPath = function (x, y, fillRule) {\n        return undefined;\n    };\n    CPURenderingContext2D.prototype.quadraticCurveTo = function (cpx, cpy, x, y) {\n    };\n    CPURenderingContext2D.prototype.putImageData = function (imagedata, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n    };\n    CPURenderingContext2D.prototype.rotate = function (angle) {\n    };\n    CPURenderingContext2D.prototype.fillText = function (text, x, y, maxWidth) {\n    };\n    CPURenderingContext2D.prototype.translate = function (x, y) {\n    };\n    CPURenderingContext2D.prototype.scale = function (x, y) {\n    };\n    CPURenderingContext2D.prototype.createRadialGradient = function (x0, y0, r0, x1, y1, r1) {\n        return undefined;\n    };\n    CPURenderingContext2D.prototype.lineTo = function (x, y) {\n    };\n    CPURenderingContext2D.prototype.getLineDash = function () {\n        return undefined;\n    };\n    CPURenderingContext2D.prototype.fill = function (fillRule) {\n    };\n    CPURenderingContext2D.prototype.createImageData = function (imageDataOrSw, sh) {\n        return undefined;\n    };\n    CPURenderingContext2D.prototype.createPattern = function (image, repetition) {\n        return undefined;\n    };\n    CPURenderingContext2D.prototype.closePath = function () {\n    };\n    CPURenderingContext2D.prototype.rect = function (x, y, w, h) {\n    };\n    CPURenderingContext2D.prototype.clip = function (fillRule) {\n    };\n    CPURenderingContext2D.prototype.clearRect = function (x, y, w, h) {\n        var imageData = this.cpuCanvas.getImageData();\n        for (var i = x; i < x + w; i++) {\n            for (var j = y; j < y + h; j++) {\n                var index = (i + j * imageData.width) * 4;\n                imageData.data[index] = 0;\n                imageData.data[index + 1] = 0;\n                imageData.data[index + 2] = 0;\n                imageData.data[index + 3] = 0;\n            }\n        }\n    };\n    CPURenderingContext2D.prototype.moveTo = function (x, y) {\n    };\n    CPURenderingContext2D.prototype.getImageData = function (sx, sy, sw, sh) {\n        //var result:ImageData = new ImageData(sw, sh);\n        //var i:number = 0;\n        //\n        //for (i = 0; i < sw * sh * 4; i += 4) {\n        //    result.data[i] = 255;\n        //    result.data[i + 1] = 255;\n        //    result.data[i + 2] = 255;\n        //    result.data[i + 3] = 255;\n        //}\n        //\n        //var imageData:ImageData = this.cpuCanvas.getImageData();\n        //for (i = sx; i < sx + sw; i++) {\n        //    for (var j:number = sy; j < sy + sh; j++) {\n        //        this.copyPixel32(result, i - sx, i - sy, imageData, i, j);\n        //    }\n        //}\n        return this.cpuCanvas.getImageData();\n    };\n    CPURenderingContext2D.prototype.applyPixel32 = function (target, x, y, color) {\n        //todo: blending support\n        x = Math.floor(x);\n        y = Math.floor(y);\n        if (x < 0 || x >= target.width || y >= target.height || y < 0)\n            return;\n        var index = (x + y * target.width) * 4;\n        //var alpha:number = color[3] / 255;\n        target.data[index] += color[0];\n        target.data[index + 1] += color[1];\n        target.data[index + 2] += color[2];\n        target.data[index + 3] += color[3];\n        //target.data[index] = color[0];\n        //target.data[index + 1] = color[1];\n        //target.data[index + 2] = color[2];\n        //target.data[index + 3] = color[3];\n        target.data[index] = target.data[index] & 0xFF;\n        target.data[index + 1] = target.data[index + 1] & 0xFF;\n        target.data[index + 2] = target.data[index + 2] & 0xFF;\n        target.data[index + 3] = target.data[index + 3] & 0xFF;\n    };\n    CPURenderingContext2D.prototype.copyPixel32 = function (target, x, y, source, fromX, fromY) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n        fromX = Math.floor(fromX);\n        fromY = Math.floor(fromY);\n        if (x < 0 || x >= target.width || y >= target.height || y < 0)\n            return;\n        if (fromX < 0 || fromX >= source.width || fromY >= source.height || fromY < 0)\n            return;\n        var index = (x + y * target.width) * 4;\n        var fromIndex = (fromX + fromY * source.width) * 4;\n        target.data[index] = source.data[fromIndex];\n        target.data[index + 1] = source.data[fromIndex + 1];\n        target.data[index + 2] = source.data[fromIndex + 2];\n        target.data[index + 3] = source.data[fromIndex + 3];\n    };\n    CPURenderingContext2D.prototype.fillRect = function (x, y, w, h) {\n        if (this.fillStyle) {\n            if (this.parsedFillStyle != this.fillStyle) {\n                var colorStrings = this.fillStyle.substring(5, this.fillStyle.lastIndexOf(\")\")).split(\",\");\n                this.parsedA = parseFloat(colorStrings[3]) * 255;\n                this.parsedR = parseInt(colorStrings[0]);\n                this.parsedG = parseInt(colorStrings[1]);\n                this.parsedB = parseInt(colorStrings[2]);\n                this.parsedFillStyle = this.fillStyle;\n            }\n            var imageData = this.cpuCanvas.getImageData();\n            for (var i = x; i < x + w; i++) {\n                for (var j = y; j < y + h; j++) {\n                    var index = (i + j * imageData.width) * 4;\n                    imageData.data[index] = this.parsedR;\n                    imageData.data[index + 1] = this.parsedG;\n                    imageData.data[index + 2] = this.parsedB;\n                    imageData.data[index + 3] = this.parsedA;\n                }\n            }\n        }\n    };\n    CPURenderingContext2D.prototype.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    };\n    CPURenderingContext2D.prototype.drawImage = function (image, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight) {\n        var b = image;\n        if (image.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\n            var bitmap = b;\n            bitmap.lock();\n            this.drawBitmap(bitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n            bitmap.unlock();\n        }\n        else if (image.constructor.toString().indexOf(\"HTMLImage\") > -1) {\n            var htmlImage = image;\n            var htmlCanvas = document.createElement(\"canvas\");\n            htmlCanvas.width = htmlImage.width;\n            htmlCanvas.height = htmlImage.height;\n            var htmlContext = htmlCanvas.getContext(\"2d\");\n            htmlContext.drawImage(htmlImage, 0, 0);\n            var htmlImageData = htmlContext.getImageData(0, 0, htmlImage.width, htmlImage.height);\n            var resultBitmap = new BitmapImage2D_1.default(htmlImage.width, htmlImage.height, true, 0, false);\n            resultBitmap.getImageData().data = htmlImageData.data;\n            var passBitmap = resultBitmap;\n            this.drawImage(passBitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n        }\n        else if (image.constructor.toString().indexOf(\"CPUCanvas\") > -1) {\n            //\n            var canvas = b;\n            this.drawBitmap(canvas, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n        }\n    };\n    CPURenderingContext2D.prototype.drawBitmap = function (bitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight) {\n        if (!width || width == 0) {\n            width = bitmap.width;\n            height = bitmap.height;\n        }\n        if (!canvasOffsetX || canvasOffsetX == 0) {\n            canvasOffsetX = 0;\n            canvasOffsetY = 0;\n        }\n        if (!canvasImageWidth || canvasImageWidth == 0 || this.matrix) {\n            canvasImageWidth = width;\n            canvasImageHeight = height;\n        }\n        //console.log(\"CPURenderingContext2D:drawBitmap(width: \" + width + \" height: \" + height + \" canvasImageWidth: \" + canvasImageWidth + \" canvasImageHeight: \" + canvasImageHeight);\n        var sourceData = bitmap.getImageData();\n        var canvasImageData = this.cpuCanvas.getImageData();\n        if (this.matrix || (canvasImageWidth != width || canvasImageHeight != height)) {\n            var matrix = this.matrix;\n            if (!matrix) {\n                matrix = new Matrix_1.default();\n                matrix.scale(canvasImageWidth / width, canvasImageHeight / height);\n            }\n            var scaleX = Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b);\n            var scaleY = Math.sqrt(matrix.c * matrix.c + matrix.d * matrix.d);\n            canvasImageWidth = width * scaleX;\n            canvasImageHeight = height * scaleY;\n            matrix.tx += canvasOffsetX;\n            matrix.ty += canvasOffsetY;\n            canvasOffsetX = Math.floor(matrix.tx);\n            canvasOffsetY = Math.floor(matrix.ty);\n            matrix.invert();\n            if (scaleX >= 1 || scaleY >= 1) {\n                var p = new Point_1.default();\n                for (var i = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                    for (var j = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                        p.x = i;\n                        p.y = j;\n                        p = matrix.transformPoint(p);\n                        var color = CPURenderingContext2D.sampleBilinear(p.x, p.y, sourceData);\n                        this.applyPixel32(canvasImageData, i, j, color);\n                    }\n                }\n            }\n            else {\n                //decimate\n                var p1 = this.point;\n                var p2 = this.point2;\n                for (var i = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                    for (var j = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                        p1.x = i;\n                        p1.y = j;\n                        p1 = matrix.transformPoint(p1);\n                        p2.x = i + 1;\n                        p2.y = j + 1;\n                        p2 = matrix.transformPoint(p2);\n                        var color = CPURenderingContext2D.sampleBox(p1.x + offsetX, p1.y + offsetY, p2.x + offsetX, p2.y + offsetY, sourceData);\n                        this.applyPixel32(canvasImageData, i, j, color);\n                    }\n                }\n            }\n            matrix.invert();\n        }\n        else {\n            for (var i = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                for (var j = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                    var color = CPURenderingContext2D.sample(i - canvasOffsetX + offsetX, j - canvasOffsetY + offsetY, sourceData);\n                    this.applyPixel32(canvasImageData, i, j, color);\n                }\n            }\n        }\n    };\n    CPURenderingContext2D.prototype.transform = function (m11, m12, m21, m22, dx, dy) {\n    };\n    CPURenderingContext2D.prototype.stroke = function () {\n    };\n    CPURenderingContext2D.prototype.strokeRect = function (x, y, w, h) {\n    };\n    CPURenderingContext2D.prototype.setLineDash = function (segments) {\n    };\n    CPURenderingContext2D.prototype.strokeText = function (text, x, y, maxWidth) {\n    };\n    CPURenderingContext2D.prototype.beginPath = function () {\n    };\n    CPURenderingContext2D.prototype.arcTo = function (x1, y1, x2, y2, radius) {\n    };\n    CPURenderingContext2D.prototype.createLinearGradient = function (x0, y0, x1, y1) {\n        return undefined;\n    };\n    CPURenderingContext2D.sampleBilinear = function (u, v, texture, texelSizeX, texelSizeY) {\n        if (texelSizeX === void 0) { texelSizeX = 1; }\n        if (texelSizeY === void 0) { texelSizeY = 1; }\n        var color00 = CPURenderingContext2D.sample(u, v, texture);\n        var color10 = CPURenderingContext2D.sample(u + texelSizeX, v, texture);\n        var color01 = CPURenderingContext2D.sample(u, v + texelSizeY, texture);\n        var color11 = CPURenderingContext2D.sample(u + texelSizeX, v + texelSizeY, texture);\n        var a = u;\n        a = a - Math.floor(a);\n        var interColor0 = CPURenderingContext2D.interpolateColor(color00, color10, a);\n        var interColor1 = CPURenderingContext2D.interpolateColor(color01, color11, a);\n        var b = v;\n        b = b - Math.floor(b);\n        return CPURenderingContext2D.interpolateColor(interColor0, interColor1, b);\n    };\n    CPURenderingContext2D.sample = function (u, v, imageData) {\n        u = Math.floor(u);\n        v = Math.floor(v);\n        var result = [0, 0, 0, 0];\n        if (u < 0 || u >= imageData.width || v < 0 || v >= imageData.height) {\n            return result;\n        }\n        var index = (u + v * imageData.width) * 4;\n        result[0] = imageData.data[index];\n        result[1] = imageData.data[index + 1];\n        result[2] = imageData.data[index + 2];\n        result[3] = imageData.data[index + 3];\n        return result;\n    };\n    CPURenderingContext2D.sampleBox = function (x0, y0, x1, y1, texture) {\n        var area = 0; // -- total area accumulated in pixels\n        var result = [0, 0, 0, 0];\n        var x;\n        var y;\n        var xsize;\n        var ysize;\n        var fromY = Math.floor(y0);\n        var toY = Math.ceil(y1);\n        fromY = Math.max(Math.min(fromY, texture.height - 1), 0);\n        toY = Math.max(Math.min(toY, texture.height - 1), 0);\n        for (y = fromY; y < toY; y++) {\n            ysize = 1;\n            if (y < y0) {\n                ysize = ysize * (1.0 - (y0 - y));\n            }\n            if (y > y1) {\n                ysize = ysize * (1.0 - (y - y1));\n            }\n            var fromX = Math.floor(x0);\n            var toX = Math.ceil(x1);\n            fromX = Math.max(Math.min(fromX, texture.width - 1), 0);\n            toX = Math.max(Math.min(toX, texture.width - 1), 0);\n            for (x = fromX; x < toX; x++) {\n                xsize = ysize;\n                var color = CPURenderingContext2D.sample(x, y, texture);\n                if (x < x0) {\n                    xsize = xsize * (1.0 - (x0 - x));\n                }\n                if (x > x1) {\n                    xsize = xsize * (1.0 - (x - x1));\n                }\n                result[0] += color[0] * xsize;\n                result[1] += color[1] * xsize;\n                result[2] += color[2] * xsize;\n                result[3] += color[3] * xsize;\n                area = area + xsize;\n            }\n        }\n        result[0] /= area;\n        result[1] /= area;\n        result[2] /= area;\n        result[3] /= area;\n        result[0] = result[0] & 0xFF;\n        result[1] = result[1] & 0xFF;\n        result[2] = result[2] & 0xFF;\n        result[3] = result[3] & 0xFF;\n        return result;\n    };\n    CPURenderingContext2D.interpolateColor = function (source, target, a) {\n        var result = [];\n        result[0] = source[0] + (target[0] - source[0]) * a;\n        result[1] = source[1] + (target[1] - source[1]) * a;\n        result[2] = source[2] + (target[2] - source[2]) * a;\n        result[3] = source[3] + (target[3] - source[3]) * a;\n        return result;\n    };\n    return CPURenderingContext2D;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CPURenderingContext2D;\n\n},{\"awayjs-core/lib/geom/Matrix\":\"awayjs-core/lib/geom/Matrix\",\"awayjs-core/lib/geom/Point\":\"awayjs-core/lib/geom/Point\",\"awayjs-core/lib/image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\"}],\"awayjs-core/lib/image/IImageCanvas\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/image/Image2D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ImageBase_1 = require(\"awayjs-core/lib/image/ImageBase\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar ImageUtils_1 = require(\"awayjs-core/lib/utils/ImageUtils\");\nvar Image2D = (function (_super) {\n    __extends(Image2D, _super);\n    /**\n     *\n     */\n    function Image2D(width, height, powerOfTwo) {\n        if (powerOfTwo === void 0) { powerOfTwo = true; }\n        _super.call(this);\n        this._powerOfTwo = true;\n        this._rect = new Rectangle_1.default(0, 0, width, height);\n        this._powerOfTwo = powerOfTwo;\n        this._testDimensions();\n    }\n    Object.defineProperty(Image2D.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Image2D.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Image2D.prototype, \"height\", {\n        /**\n         * The height of the image in pixels.\n         */\n        get: function () {\n            return this._rect.height;\n        },\n        set: function (value) {\n            if (this._rect.height == value)\n                return;\n            this._setSize(this._rect.width, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Image2D.prototype, \"rect\", {\n        /**\n         * The rectangle that defines the size and location of the bitmap image. The\n         * top and left of the rectangle are 0; the width and height are equal to the\n         * width and height in pixels of the BitmapData object.\n         */\n        get: function () {\n            return this._rect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Image2D.prototype, \"width\", {\n        /**\n         * The width of the bitmap image in pixels.\n         */\n        get: function () {\n            return this._rect.width;\n        },\n        set: function (value) {\n            if (this._rect.width == value)\n                return;\n            this._setSize(value, this._rect.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * @param width\n     * @param height\n     * @private\n     */\n    Image2D.prototype._setSize = function (width, height) {\n        if (this._rect.width != width || this._rect.height != height)\n            this.clear();\n        this._rect.width = width;\n        this._rect.height = height;\n        this._testDimensions();\n    };\n    /**\n     *\n     * @private\n     */\n    Image2D.prototype._testDimensions = function () {\n        if (this._powerOfTwo && (!ImageUtils_1.default.isDimensionValid(this._rect.width) || !ImageUtils_1.default.isDimensionValid(this._rect.height)))\n            throw new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n    };\n    Object.defineProperty(Image2D.prototype, \"powerOfTwo\", {\n        /**\n         * Enable POT texture size validation\n         * @returns {boolean}\n         */\n        get: function () {\n            return this._powerOfTwo;\n        },\n        set: function (value) {\n            if (this._powerOfTwo == value)\n                return;\n            this._powerOfTwo = value;\n            this._testDimensions();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Image2D.assetType = \"[image Image2D]\";\n    return Image2D;\n}(ImageBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Image2D;\n\n},{\"awayjs-core/lib/geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"awayjs-core/lib/image/ImageBase\":\"awayjs-core/lib/image/ImageBase\",\"awayjs-core/lib/utils/ImageUtils\":\"awayjs-core/lib/utils/ImageUtils\"}],\"awayjs-core/lib/image/ImageBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar ImageBase = (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     *\n     */\n    function ImageBase() {\n        _super.call(this);\n        this._pFormat = \"bgra\";\n    }\n    Object.defineProperty(ImageBase.prototype, \"format\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return this._pFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ImageBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ImageBase;\n\n},{\"awayjs-core/lib/library/AssetBase\":\"awayjs-core/lib/library/AssetBase\"}],\"awayjs-core/lib/image/ImageCube\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ImageBase_1 = require(\"awayjs-core/lib/image/ImageBase\");\nvar ImageUtils_1 = require(\"awayjs-core/lib/utils/ImageUtils\");\nvar ImageCube = (function (_super) {\n    __extends(ImageCube, _super);\n    /**\n     *\n     */\n    function ImageCube(size) {\n        _super.call(this);\n        this._size = size;\n        this._testDimensions();\n    }\n    Object.defineProperty(ImageCube.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return ImageCube.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageCube.prototype, \"size\", {\n        /**\n         * The size of the cube bitmap in pixels.\n         */\n        get: function () {\n            return this._size;\n        },\n        set: function (value) {\n            if (this._size == value)\n                return;\n            this._setSize(this._size);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * @param width\n     * @param height\n     * @private\n     */\n    ImageCube.prototype._setSize = function (size) {\n        if (this._size != size)\n            this.clear();\n        this._size = size;\n        this._testDimensions();\n    };\n    /**\n     *\n     * @private\n     */\n    ImageCube.prototype._testDimensions = function () {\n        if (!ImageUtils_1.default.isDimensionValid(this._size))\n            throw new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n    };\n    ImageCube.assetType = \"[image ImageCube]\";\n    return ImageCube;\n}(ImageBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ImageCube;\n\n},{\"awayjs-core/lib/image/ImageBase\":\"awayjs-core/lib/image/ImageBase\",\"awayjs-core/lib/utils/ImageUtils\":\"awayjs-core/lib/utils/ImageUtils\"}],\"awayjs-core/lib/image/ImageData\":[function(require,module,exports){\n\"use strict\";\nvar ImageData = (function () {\n    function ImageData(width, height) {\n        this.width = width;\n        this.height = height;\n        this.data = new Uint8Array(width * height * 4);\n    }\n    return ImageData;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ImageData;\n\n},{}],\"awayjs-core/lib/image/Sampler2D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SamplerBase_1 = require(\"awayjs-core/lib/image/SamplerBase\");\n/**\n * The Sampler2D class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Sampler2D()</code> constructor.\n *\n * <p>The <code>Sampler2D()</code> constructor allows you to create a Sampler2D\n * object that contains a reference to a Image2D object. After you create a\n * Sampler2D object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Sampler2D object can share its Image2D reference among several Sampler2D\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Sampler2D objects that reference the same Image2D object,\n * multiple texture objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each texture\n * object instance.</p>\n\n */\nvar Sampler2D = (function (_super) {\n    __extends(Sampler2D, _super);\n    /**\n     *\n     * @param image2D\n     * @param smoothing\n     */\n    function Sampler2D(repeat, smooth, mipmap) {\n        if (repeat === void 0) { repeat = false; }\n        if (smooth === void 0) { smooth = false; }\n        if (mipmap === void 0) { mipmap = false; }\n        _super.call(this, smooth, mipmap);\n        this._repeat = repeat;\n        this._updateRect();\n    }\n    Object.defineProperty(Sampler2D.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Sampler2D.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sampler2D.prototype, \"repeat\", {\n        /**\n         * Controls whether or not the Sampler2D object is snapped to the nearest pixel.\n         * This value is ignored in the native and HTML5 targets.\n         * The PixelSnapping class includes possible values:\n         * <ul>\n         *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n         *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n         * the nearest pixel, independent of transformation.</li>\n         *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n         * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n         * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n         * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n         * When targeting Flash Player, this value allows the image to be drawn as fast\n         * as possible using the internal vector renderer.</li>\n         * </ul>\n         */\n        //var pixelSnapping:PixelSnapping;\n        /**\n         * Controls whether or not the bitmap is smoothed when scaled. If\n         * <code>true</code>, the bitmap is smoothed when scaled. If\n         * <code>false</code>, the bitmap is not smoothed when scaled.\n         */\n        /**\n         *\n         */\n        get: function () {\n            return this._repeat;\n        },\n        set: function (value) {\n            if (this._repeat == value)\n                return;\n            this._repeat = value;\n            //TODO: update dependencies\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sampler2D.prototype, \"imageRect\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._imageRect;\n        },\n        set: function (value) {\n            if (this._imageRect == value)\n                return;\n            this._imageRect = value;\n            this._updateRect();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sampler2D.prototype, \"frameRect\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._frameRect;\n        },\n        set: function (value) {\n            if (this._frameRect == value)\n                return;\n            this._frameRect = value;\n            this._updateRect();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Sampler2D.prototype._updateRect = function () {\n    };\n    Sampler2D.assetType = \"[asset Sampler2D]\";\n    return Sampler2D;\n}(SamplerBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Sampler2D;\n\n},{\"awayjs-core/lib/image/SamplerBase\":\"awayjs-core/lib/image/SamplerBase\"}],\"awayjs-core/lib/image/SamplerBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n *\n */\nvar SamplerBase = (function (_super) {\n    __extends(SamplerBase, _super);\n    /**\n     *\n     */\n    function SamplerBase(smooth, mipmap) {\n        if (smooth === void 0) { smooth = false; }\n        if (mipmap === void 0) { mipmap = false; }\n        _super.call(this);\n        this._smooth = smooth;\n        this._mipmap = mipmap;\n    }\n    Object.defineProperty(SamplerBase.prototype, \"smooth\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._smooth;\n        },\n        set: function (value) {\n            if (this._smooth == value)\n                return;\n            this._smooth = value;\n            //TODO: update dependencies\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SamplerBase.prototype, \"mipmap\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._mipmap;\n        },\n        set: function (value) {\n            if (this._mipmap == value)\n                return;\n            this._mipmap = value;\n            //TODO: update dependencies\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SamplerBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SamplerBase;\n\n},{\"awayjs-core/lib/library/AssetBase\":\"awayjs-core/lib/library/AssetBase\"}],\"awayjs-core/lib/image/SamplerCube\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SamplerBase_1 = require(\"awayjs-core/lib/image/SamplerBase\");\n/**\n * The Bitmap class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Bitmap()</code> constructor.\n *\n * <p>The <code>Bitmap()</code> constructor allows you to create a Bitmap\n * object that contains a reference to a BitmapData object. After you create a\n * Bitmap object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Bitmap object can share its BitmapData reference among several Bitmap\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Bitmap objects that reference the same BitmapData object,\n * multiple texture objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each texture\n * object instance.</p>\n\n */\nvar SamplerCube = (function (_super) {\n    __extends(SamplerCube, _super);\n    /**\n     *\n     * @param bitmapData\n     * @param smoothing\n     */\n    function SamplerCube(smooth, mipmap) {\n        if (smooth === void 0) { smooth = false; }\n        if (mipmap === void 0) { mipmap = false; }\n        _super.call(this, smooth, mipmap);\n    }\n    Object.defineProperty(SamplerCube.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return SamplerCube.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SamplerCube.assetType = \"[asset SamplerCube]\";\n    return SamplerCube;\n}(SamplerBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SamplerCube;\n\n},{\"awayjs-core/lib/image/SamplerBase\":\"awayjs-core/lib/image/SamplerBase\"}],\"awayjs-core/lib/image/SpecularImage2D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nvar BitmapImageChannel_1 = require(\"awayjs-core/lib/image/BitmapImageChannel\");\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\n/**\n *\n */\nvar SpecularImage2D = (function (_super) {\n    __extends(SpecularImage2D, _super);\n    /**\n     *\n     */\n    function SpecularImage2D(specularSource, glossSource) {\n        if (specularSource === void 0) { specularSource = null; }\n        if (glossSource === void 0) { glossSource = null; }\n        _super.call(this, 1, 1);\n        this._specularSource = specularSource;\n        this._glossSource = glossSource;\n        this._output = new BitmapImage2D_1.default(1, 1, false, 0xffffff);\n        this._testSize();\n    }\n    Object.defineProperty(SpecularImage2D.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return SpecularImage2D.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpecularImage2D.prototype, \"specularSource\", {\n        get: function () {\n            return this._specularSource;\n        },\n        set: function (value) {\n            if (this._specularSource == value)\n                return;\n            this._specularSource = value;\n            this.invalidate();\n            this._testSize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpecularImage2D.prototype, \"glossSource\", {\n        get: function () {\n            return this._glossSource;\n        },\n        set: function (value) {\n            if (this._glossSource == value)\n                return;\n            this._glossSource = value;\n            this.invalidate();\n            this._testSize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a new SpecularImage2D object that is a clone of the original instance\n     * with an exact copy of the contained bitmap.\n     *\n     * @return A new SpecularImage2D object that is identical to the original.\n     */\n    SpecularImage2D.prototype.clone = function () {\n        return new SpecularImage2D(this._specularSource, this._glossSource);\n    };\n    /**\n     * Frees memory that is used to store the SpecularImage2D object.\n     *\n     * <p>When the <code>dispose()</code> method is called on an image, the width\n     * and height of the image are set to 0. All subsequent calls to methods or\n     * properties of this SpecularImage2D instance fail, and an exception is thrown.\n     * </p>\n     *\n     * <p><code>SpecularImage2D.dispose()</code> releases the memory occupied by the\n     * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n     * memory). After using <code>SpecularImage2D.dispose()</code>, the SpecularImage2D\n     * object is no longer usable and an exception may be thrown if\n     * you call functions on the SpecularImage2D object. However,\n     * <code>SpecularImage2D.dispose()</code> does not garbage collect the SpecularImage2D\n     * object(approximately 128 bytes); the memory occupied by the actual\n     * SpecularImage2D object is released at the time the SpecularImage2D object is\n     * collected by the garbage collector.</p>\n     *\n     */\n    SpecularImage2D.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._rect = null;\n        this._output.dispose();\n    };\n    /**\n     *\n     * @returns {ImageData}\n     */\n    SpecularImage2D.prototype.getImageData = function () {\n        var origin = new Point_1.default();\n        this._output.fillRect(this._rect, 0xffffff);\n        if (this._glossSource)\n            this._output.copyChannel(this._glossSource, this._rect, origin, BitmapImageChannel_1.default.GREEN, BitmapImageChannel_1.default.GREEN);\n        if (this._specularSource)\n            this._output.copyChannel(this._specularSource, this._rect, origin, BitmapImageChannel_1.default.RED, BitmapImageChannel_1.default.RED);\n        return this._output.getImageData();\n    };\n    /**\n     *\n     * @returns {HTMLCanvasElement}\n     */\n    SpecularImage2D.prototype.getCanvas = function () {\n        return this._output.getCanvas();\n    };\n    /**\n     *\n     * @param width\n     * @param height\n     * @private\n     */\n    SpecularImage2D.prototype._setSize = function (width, height) {\n        _super.prototype._setSize.call(this, width, height);\n        this._output._setSize(width, height);\n    };\n    SpecularImage2D.prototype._testSize = function () {\n        var w, h;\n        if (this._specularSource) {\n            w = this._specularSource.width;\n            h = this._specularSource.height;\n        }\n        else if (this._glossSource) {\n            w = this._glossSource.width;\n            h = this._glossSource.height;\n        }\n        else {\n            w = 1;\n            h = 1;\n        }\n        if (w != this._output.width && h != this._output.height) {\n            this._output.dispose();\n            this._output = new BitmapImage2D_1.default(w, h, false, 0xffffff);\n        }\n        this._setSize(w, h);\n    };\n    SpecularImage2D.assetType = \"[asset SpecularImage2D]\";\n    return SpecularImage2D;\n}(Image2D_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SpecularImage2D;\n\n},{\"awayjs-core/lib/geom/Point\":\"awayjs-core/lib/geom/Point\",\"awayjs-core/lib/image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\",\"awayjs-core/lib/image/BitmapImageChannel\":\"awayjs-core/lib/image/BitmapImageChannel\",\"awayjs-core/lib/image/Image2D\":\"awayjs-core/lib/image/Image2D\"}],\"awayjs-core/lib/image\":[function(require,module,exports){\n\"use strict\";\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nexports.BitmapImage2D = BitmapImage2D_1.default;\nvar BitmapImageChannel_1 = require(\"awayjs-core/lib/image/BitmapImageChannel\");\nexports.BitmapImageChannel = BitmapImageChannel_1.default;\nvar BitmapImageCube_1 = require(\"awayjs-core/lib/image/BitmapImageCube\");\nexports.BitmapImageCube = BitmapImageCube_1.default;\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nexports.BlendMode = BlendMode_1.default;\nvar CPUCanvas_1 = require(\"awayjs-core/lib/image/CPUCanvas\");\nexports.CPUCanvas = CPUCanvas_1.default;\nvar CPURenderingContext2D_1 = require(\"awayjs-core/lib/image/CPURenderingContext2D\");\nexports.CPURenderingContext2D = CPURenderingContext2D_1.default;\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nexports.Image2D = Image2D_1.default;\nvar ImageBase_1 = require(\"awayjs-core/lib/image/ImageBase\");\nexports.ImageBase = ImageBase_1.default;\nvar ImageCube_1 = require(\"awayjs-core/lib/image/ImageCube\");\nexports.ImageCube = ImageCube_1.default;\nvar ImageData_1 = require(\"awayjs-core/lib/image/ImageData\");\nexports.ImageData = ImageData_1.default;\nvar Sampler2D_1 = require(\"awayjs-core/lib/image/Sampler2D\");\nexports.Sampler2D = Sampler2D_1.default;\nvar SamplerBase_1 = require(\"awayjs-core/lib/image/SamplerBase\");\nexports.SamplerBase = SamplerBase_1.default;\nvar SamplerCube_1 = require(\"awayjs-core/lib/image/SamplerCube\");\nexports.SamplerCube = SamplerCube_1.default;\nvar SpecularImage2D_1 = require(\"awayjs-core/lib/image/SpecularImage2D\");\nexports.SpecularImage2D = SpecularImage2D_1.default;\n\n},{\"awayjs-core/lib/image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\",\"awayjs-core/lib/image/BitmapImageChannel\":\"awayjs-core/lib/image/BitmapImageChannel\",\"awayjs-core/lib/image/BitmapImageCube\":\"awayjs-core/lib/image/BitmapImageCube\",\"awayjs-core/lib/image/BlendMode\":\"awayjs-core/lib/image/BlendMode\",\"awayjs-core/lib/image/CPUCanvas\":\"awayjs-core/lib/image/CPUCanvas\",\"awayjs-core/lib/image/CPURenderingContext2D\":\"awayjs-core/lib/image/CPURenderingContext2D\",\"awayjs-core/lib/image/Image2D\":\"awayjs-core/lib/image/Image2D\",\"awayjs-core/lib/image/ImageBase\":\"awayjs-core/lib/image/ImageBase\",\"awayjs-core/lib/image/ImageCube\":\"awayjs-core/lib/image/ImageCube\",\"awayjs-core/lib/image/ImageData\":\"awayjs-core/lib/image/ImageData\",\"awayjs-core/lib/image/Sampler2D\":\"awayjs-core/lib/image/Sampler2D\",\"awayjs-core/lib/image/SamplerBase\":\"awayjs-core/lib/image/SamplerBase\",\"awayjs-core/lib/image/SamplerCube\":\"awayjs-core/lib/image/SamplerCube\",\"awayjs-core/lib/image/SpecularImage2D\":\"awayjs-core/lib/image/SpecularImage2D\"}],\"awayjs-core/lib/library/AbstractionBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\n/**\n *\n * @class away.pool.AbstractionBase\n */\nvar AbstractionBase = (function (_super) {\n    __extends(AbstractionBase, _super);\n    function AbstractionBase(asset, pool) {\n        var _this = this;\n        _super.call(this);\n        this._invalid = true;\n        this._asset = asset;\n        this._pool = pool;\n        this._onClearDelegate = function (event) { return _this.onClear(event); };\n        this._onInvalidateDelegate = function (event) { return _this.onInvalidate(event); };\n        this._asset.addEventListener(AssetEvent_1.default.CLEAR, this._onClearDelegate);\n        this._asset.addEventListener(AssetEvent_1.default.INVALIDATE, this._onInvalidateDelegate);\n    }\n    /**\n     *\n     */\n    AbstractionBase.prototype.onClear = function (event) {\n        this._asset.removeEventListener(AssetEvent_1.default.CLEAR, this._onClearDelegate);\n        this._asset.removeEventListener(AssetEvent_1.default.INVALIDATE, this._onInvalidateDelegate);\n        this._pool.clearAbstraction(this._asset);\n        this._pool = null;\n        this._asset = null;\n    };\n    /**\n     *\n     */\n    AbstractionBase.prototype.onInvalidate = function (event) {\n        this._invalid = true;\n    };\n    return AbstractionBase;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AbstractionBase;\n\n},{\"awayjs-core/lib/events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"awayjs-core/lib/events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\"}],\"awayjs-core/lib/library/AssetBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar AssetBase = (function (_super) {\n    __extends(AssetBase, _super);\n    function AssetBase(name) {\n        if (name === void 0) { name = null; }\n        _super.call(this);\n        this._id = AssetBase.ID_COUNT++;\n        if (name == null)\n            name = 'null';\n        this._name = name;\n        this._originalName = name;\n        this.updateFullPath();\n    }\n    Object.defineProperty(AssetBase.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            throw new AbstractMethodError_1.default();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetBase.prototype, \"originalName\", {\n        /**\n         * The original name used for this asset in the resource (e.g. file) in which\n         * it was found. This may not be the same as <code>name</code>, which may\n         * have changed due to of a name conflict.\n         */\n        get: function () {\n            return this._originalName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetBase.prototype, \"id\", {\n        /**\n         * A unique id for the asset, used to identify assets in an associative array\n         */\n        get: function () {\n            return this._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetBase.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        set: function (val) {\n            var prev;\n            prev = this._name;\n            this._name = val;\n            if (this._name == null)\n                this._name = 'null';\n            this.updateFullPath();\n            this.dispatchEvent(new AssetEvent_1.default(AssetEvent_1.default.RENAME, this, prev));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    AssetBase.prototype.invalidate = function () {\n        this.dispatchEvent(new AssetEvent_1.default(AssetEvent_1.default.INVALIDATE, this));\n    };\n    /**\n     * @inheritDoc\n     */\n    AssetBase.prototype.dispose = function () {\n        this.dispatchEvent(new AssetEvent_1.default(AssetEvent_1.default.DISPOSE, this));\n    };\n    AssetBase.prototype.clear = function () {\n        this.dispatchEvent(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this));\n    };\n    Object.defineProperty(AssetBase.prototype, \"assetNamespace\", {\n        get: function () {\n            return this._namespace;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetBase.prototype, \"assetFullPath\", {\n        get: function () {\n            return this._full_path;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AssetBase.prototype.assetPathEquals = function (name, ns) {\n        return (this._name == name && (!ns || this._namespace == ns));\n    };\n    AssetBase.prototype.isAsset = function (assetClass) {\n        return this.assetType == assetClass.assetType;\n    };\n    AssetBase.prototype.resetAssetPath = function (name, ns, overrideOriginal) {\n        if (ns === void 0) { ns = null; }\n        if (overrideOriginal === void 0) { overrideOriginal = true; }\n        this._name = name ? name : 'null';\n        this._namespace = ns ? ns : AssetBase.DEFAULT_NAMESPACE;\n        if (overrideOriginal)\n            this._originalName = this._name;\n        this.updateFullPath();\n    };\n    AssetBase.prototype.updateFullPath = function () {\n        this._full_path = [this._namespace, this._name];\n    };\n    AssetBase.ID_COUNT = 0;\n    AssetBase.DEFAULT_NAMESPACE = 'default';\n    return AssetBase;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AssetBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"awayjs-core/lib/events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"awayjs-core/lib/events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\"}],\"awayjs-core/lib/library/AssetLibraryBundle\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetLibraryIterator_1 = require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nvar Loader_1 = require(\"awayjs-core/lib/library/Loader\");\nvar ConflictPrecedence_1 = require(\"awayjs-core/lib/library/ConflictPrecedence\");\nvar ConflictStrategy_1 = require(\"awayjs-core/lib/library/ConflictStrategy\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar URLLoaderEvent_1 = require(\"awayjs-core/lib/events/URLLoaderEvent\");\nvar LoaderEvent_1 = require(\"awayjs-core/lib/events/LoaderEvent\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar ParserEvent_1 = require(\"awayjs-core/lib/events/ParserEvent\");\n/**\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\n * Its purpose is to create a container for 3D data management, both before and after parsing.\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\n */\nvar AssetLibraryBundle = (function (_super) {\n    __extends(AssetLibraryBundle, _super);\n    /**\n     * Creates a new <code>AssetLibraryBundle</code> object.\n     *\n     * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\n     */\n    function AssetLibraryBundle() {\n        var _this = this;\n        _super.call(this);\n        this._loaderSessionsGarbage = new Array();\n        this._assets = new Array(); //new Vector.<IAsset>;\n        this._assetDictionary = new Object();\n        this._loaderSessions = new Array();\n        this.conflictStrategy = ConflictStrategy_1.default.IGNORE.create();\n        this.conflictPrecedence = ConflictPrecedence_1.default.FAVOR_NEW;\n        this._onAssetRenameDelegate = function (event) { return _this.onAssetRename(event); };\n        this._onAssetConflictResolvedDelegate = function (event) { return _this.onAssetConflictResolved(event); };\n        this._onResourceCompleteDelegate = function (event) { return _this.onResourceComplete(event); };\n        this._onTextureSizeErrorDelegate = function (event) { return _this.onTextureSizeError(event); };\n        this._onAssetCompleteDelegate = function (event) { return _this.onAssetComplete(event); };\n        this._onLoadErrorDelegate = function (event) { return _this.onLoadError(event); };\n        this._onParseErrorDelegate = function (event) { return _this.onParseError(event); };\n    }\n    /**\n     * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\n     * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\n     * pass a string key to this method to define which bundle should be returned. This is\n     * referred to as using the AssetLibrary as a multiton.\n     *\n     * @param key Defines which multiton instance should be returned.\n     * @return An instance of the asset library\n     */\n    AssetLibraryBundle.getInstance = function (key) {\n        if (key === void 0) { key = 'default'; }\n        if (!key)\n            key = 'default';\n        if (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\n            AssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\n        return AssetLibraryBundle._iInstances[key];\n    };\n    /**\n     *\n     */\n    AssetLibraryBundle.prototype.enableParser = function (parserClass) {\n        Loader_1.default.enableParser(parserClass);\n    };\n    /**\n     *\n     */\n    AssetLibraryBundle.prototype.enableParsers = function (parserClasses) {\n        Loader_1.default.enableParsers(parserClasses);\n    };\n    Object.defineProperty(AssetLibraryBundle.prototype, \"conflictStrategy\", {\n        /**\n         * Defines which strategy should be used for resolving naming conflicts, when two library\n         * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\n         * is used which means that a numeric suffix is appended to one of the assets. The\n         * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\n         * be renamed.\n         *\n         * @see naming.ConflictStrategy\n         * @see AssetLibrary.conflictPrecedence\n         */\n        get: function () {\n            return this._strategy;\n        },\n        set: function (val) {\n            if (!val)\n                throw new ErrorBase_1.default('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\n            this._strategy = val.create();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetLibraryBundle.prototype, \"conflictPrecedence\", {\n        /**\n         * Defines which asset should have precedence when resolving a naming conflict between\n         * two assets of which one has just been renamed by the user or by a parser. By default\n         * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\n         * asset will keep it's new name while the older asset gets renamed to not conflict.\n         *\n         * This property is ignored for conflict strategies that do not actually rename an\n         * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\n         *\n         * @see away.library.ConflictPrecedence\n         * @see away.library.ConflictStrategy\n         */\n        get: function () {\n            return this._strategyPreference;\n        },\n        set: function (val) {\n            this._strategyPreference = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Create an AssetLibraryIterator instance that can be used to iterate over the assets\n     * in this asset library instance. The iterator can filter assets on asset type and/or\n     * namespace. A \"null\" filter value means no filter of that type is used.\n     *\n     * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\n     * null to not filter on asset type.\n     * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\n     * @param filterFunc Callback function to use when deciding whether an asset should be\n     * included in the iteration or not. This needs to be a function that takes a single\n     * parameter of type IAsset and returns a boolean where true means it should be included.\n     *\n     * @see away.library.AssetType\n     */\n    AssetLibraryBundle.prototype.createIterator = function (assetTypeFilter, namespaceFilter, filterFunc) {\n        if (assetTypeFilter === void 0) { assetTypeFilter = null; }\n        if (namespaceFilter === void 0) { namespaceFilter = null; }\n        if (filterFunc === void 0) { filterFunc = null; }\n        return new AssetLibraryIterator_1.default(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\n    };\n    /**\n     * Loads a file and (optionally) all of its dependencies.\n     *\n     * @param req The URLRequest object containing the URL of the file to be loaded.\n     * @param context An optional context object providing additional parameters for loading\n     * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n     * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n     * @return A handle to the retrieved resource.\n     */\n    AssetLibraryBundle.prototype.load = function (req, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        this.getLoader().load(req, context, ns, parser);\n    };\n    /**\n     * Loads a resource from existing data in memory.\n     *\n     * @param data The data object containing all resource information.\n     * @param context An optional context object providing additional parameters for loading\n     * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n     * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n     * @return A handle to the retrieved resource.\n     */\n    AssetLibraryBundle.prototype.loadData = function (data, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        this.getLoader().loadData(data, '', context, ns, parser);\n    };\n    AssetLibraryBundle.prototype.getLoader = function () {\n        var loader = new Loader_1.default();\n        this._loaderSessions.push(loader);\n        loader.addEventListener(LoaderEvent_1.default.LOAD_COMPLETE, this._onResourceCompleteDelegate);\n        loader.addEventListener(AssetEvent_1.default.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n        loader.addEventListener(AssetEvent_1.default.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n        // Error are handled separately (see documentation for addErrorHandler)\n        loader._iAddErrorHandler(this._onLoadErrorDelegate);\n        loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n        return loader;\n    };\n    AssetLibraryBundle.prototype.disposeLoader = function (loader) {\n        var _this = this;\n        var index = this._loaderSessions.indexOf(loader);\n        this._loaderSessions.splice(index, 1);\n        // Add loader to a garbage array - for a collection sweep and kill\n        this._loaderSessionsGarbage.push(loader);\n        this._gcTimeoutIID = setTimeout(function () { _this.loaderSessionGC(); }, 100);\n    };\n    /**\n     *\n     */\n    AssetLibraryBundle.prototype.getAsset = function (name, ns) {\n        if (ns === void 0) { ns = null; }\n        if (this._assetDictDirty)\n            this.rehashAssetDict();\n        if (ns == null)\n            ns = AssetBase_1.default.DEFAULT_NAMESPACE;\n        if (!this._assetDictionary.hasOwnProperty(ns))\n            return null;\n        return this._assetDictionary[ns][name];\n    };\n    AssetLibraryBundle.prototype.getAllAssets = function () {\n        return this._assets;\n    };\n    /**\n     * Adds an asset to the asset library, first making sure that it's name is unique\n     * using the method defined by the <code>conflictStrategy</code> and\n     * <code>conflictPrecedence</code> properties.\n     */\n    AssetLibraryBundle.prototype.addAsset = function (asset) {\n        var ns;\n        var old;\n        // Bail if asset has already been added.\n        if (this._assets.indexOf(asset) >= 0)\n            return;\n        old = this.getAsset(asset.name, asset.assetNamespace);\n        ns = asset.assetNamespace || AssetBase_1.default.DEFAULT_NAMESPACE;\n        if (old != null)\n            this._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\n        //create unique-id (for now this is used in AwayBuilder only\n        //asset.id = IDUtil.createUID();\n        // Add it\n        this._assets.push(asset);\n        if (!this._assetDictionary.hasOwnProperty(ns))\n            this._assetDictionary[ns] = new Object();\n        this._assetDictionary[ns][asset.name] = asset;\n        asset.addEventListener(AssetEvent_1.default.RENAME, this._onAssetRenameDelegate);\n        asset.addEventListener(AssetEvent_1.default.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n    };\n    /**\n     * Removes an asset from the library, and optionally disposes that asset by calling\n     * it's disposeAsset() method (which for most assets is implemented as a default\n     * version of that type's dispose() method.\n     *\n     * @param asset The asset which should be removed from this library.\n     * @param dispose Defines whether the assets should also be disposed.\n     */\n    AssetLibraryBundle.prototype.removeAsset = function (asset, dispose) {\n        if (dispose === void 0) { dispose = true; }\n        var idx;\n        this.removeAssetFromDict(asset);\n        asset.removeEventListener(AssetEvent_1.default.RENAME, this._onAssetRenameDelegate);\n        asset.removeEventListener(AssetEvent_1.default.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n        idx = this._assets.indexOf(asset);\n        if (idx >= 0)\n            this._assets.splice(idx, 1);\n        if (dispose)\n            asset.dispose();\n    };\n    /**\n     * Removes an asset which is specified using name and namespace.\n     *\n     * @param name The name of the asset to be removed.\n     * @param ns The namespace to which the desired asset belongs.\n     * @param dispose Defines whether the assets should also be disposed.\n     *\n     * @see away.library.AssetLibrary.removeAsset()\n     */\n    AssetLibraryBundle.prototype.removeAssetByName = function (name, ns, dispose) {\n        if (ns === void 0) { ns = null; }\n        if (dispose === void 0) { dispose = true; }\n        var asset = this.getAsset(name, ns);\n        if (asset)\n            this.removeAsset(asset, dispose);\n        return asset;\n    };\n    /**\n     * Removes all assets from the asset library, optionally disposing them as they\n     * are removed.\n     *\n     * @param dispose Defines whether the assets should also be disposed.\n     */\n    AssetLibraryBundle.prototype.removeAllAssets = function (dispose) {\n        if (dispose === void 0) { dispose = true; }\n        if (dispose) {\n            var asset;\n            var len = this._assets.length;\n            for (var c = 0; c < len; c++) {\n                asset = this._assets[c];\n                asset.dispose();\n            }\n        }\n        this._assets.length = 0;\n        this.rehashAssetDict();\n    };\n    /**\n     * Removes all assets belonging to a particular namespace (null for default)\n     * from the asset library, and optionall disposes them by calling their\n     * disposeAsset() method.\n     *\n     * @param ns The namespace from which all assets should be removed.\n     * @param dispose Defines whether the assets should also be disposed.\n     *\n     * @see away.library.AssetLibrary.removeAsset()\n     */\n    AssetLibraryBundle.prototype.removeNamespaceAssets = function (ns, dispose) {\n        if (ns === void 0) { ns = null; }\n        if (dispose === void 0) { dispose = true; }\n        var idx = 0;\n        var asset;\n        var old_assets;\n        // Empty the assets vector after having stored a copy of it.\n        // The copy will be filled with all assets which weren't removed.\n        old_assets = this._assets.concat();\n        this._assets.length = 0;\n        if (ns == null)\n            ns = AssetBase_1.default.DEFAULT_NAMESPACE;\n        var len = old_assets.length;\n        for (var d = 0; d < len; d++) {\n            asset = old_assets[d];\n            // Remove from dict if in the supplied namespace. If not,\n            // transfer over to the new vector.\n            if (asset.assetNamespace == ns) {\n                if (dispose)\n                    asset.dispose();\n                // Remove asset from dictionary, but don't try to auto-remove\n                // the namespace, which will trigger an unnecessarily expensive\n                // test that is not needed since we know that the namespace\n                // will be empty when loop finishes.\n                this.removeAssetFromDict(asset, false);\n            }\n            else {\n                this._assets[idx++] = asset;\n            }\n        }\n        /*\n         for each (asset in old_assets) {\n         // Remove from dict if in the supplied namespace. If not,\n         // transfer over to the new vector.\n         if (asset.assetNamespace == ns) {\n         if (dispose)\n         asset.dispose();\n\n         // Remove asset from dictionary, but don't try to auto-remove\n         // the namespace, which will trigger an unnecessarily expensive\n         // test that is not needed since we know that the namespace\n         // will be empty when loop finishes.\n         removeAssetFromDict(asset, false);\n         } else\n         _assets[idx++] = asset;\n\n         }\n         */\n        // Remove empty namespace\n        if (this._assetDictionary.hasOwnProperty(ns))\n            delete this._assetDictionary[ns];\n    };\n    AssetLibraryBundle.prototype.removeAssetFromDict = function (asset, autoRemoveEmptyNamespace) {\n        if (autoRemoveEmptyNamespace === void 0) { autoRemoveEmptyNamespace = true; }\n        if (this._assetDictDirty)\n            this.rehashAssetDict();\n        if (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\n            if (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\n                delete this._assetDictionary[asset.assetNamespace][asset.name];\n            if (autoRemoveEmptyNamespace) {\n                var key;\n                var empty = true;\n                for (key in this._assetDictionary[asset.assetNamespace]) {\n                    empty = false;\n                    break;\n                }\n                if (empty)\n                    delete this._assetDictionary[asset.assetNamespace];\n            }\n        }\n    };\n    AssetLibraryBundle.prototype.stopAllLoaders = function () {\n        var len = this._loaderSessions.length;\n        for (var i = 0; i < len; i++)\n            this.killloaderSession(this._loaderSessions[i]);\n        this._loaderSessions = new Array();\n    };\n    AssetLibraryBundle.prototype.rehashAssetDict = function () {\n        var asset;\n        this._assetDictionary = {};\n        var len = this._assets.length;\n        for (var c = 0; c < len; c++) {\n            asset = this._assets[c];\n            if (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\n                this._assetDictionary[asset.assetNamespace] = {};\n            this._assetDictionary[asset.assetNamespace][asset.name] = asset;\n        }\n        this._assetDictDirty = false;\n    };\n    /**\n     * Called when a an error occurs during loading.\n     */\n    AssetLibraryBundle.prototype.onLoadError = function (event) {\n        if (this.hasEventListener(URLLoaderEvent_1.default.LOAD_ERROR)) {\n            this.dispatchEvent(event);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Called when a an error occurs during parsing.\n     */\n    AssetLibraryBundle.prototype.onParseError = function (event) {\n        if (this.hasEventListener(ParserEvent_1.default.PARSE_ERROR)) {\n            this.dispatchEvent(event);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    AssetLibraryBundle.prototype.onAssetComplete = function (event) {\n        // Only add asset to library the first time.\n        if (event.type == AssetEvent_1.default.ASSET_COMPLETE)\n            this.addAsset(event.asset);\n        this.dispatchEvent(event);\n    };\n    AssetLibraryBundle.prototype.onTextureSizeError = function (event) {\n        this.dispatchEvent(event);\n    };\n    /**\n     * Called when the resource and all of its dependencies was retrieved.\n     */\n    AssetLibraryBundle.prototype.onResourceComplete = function (event) {\n        var loader = event.target;\n        this.dispatchEvent(event);\n        this.disposeLoader(loader);\n    };\n    AssetLibraryBundle.prototype.loaderSessionGC = function () {\n        var loader;\n        while (this._loaderSessionsGarbage.length > 0) {\n            loader = this._loaderSessionsGarbage.pop();\n            this.killloaderSession(loader);\n        }\n        clearTimeout(this._gcTimeoutIID);\n        this._gcTimeoutIID = null;\n    };\n    AssetLibraryBundle.prototype.killloaderSession = function (loader) {\n        loader.removeEventListener(LoaderEvent_1.default.LOAD_COMPLETE, this._onResourceCompleteDelegate);\n        loader.removeEventListener(AssetEvent_1.default.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n        loader.removeEventListener(AssetEvent_1.default.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n        loader.stop();\n    };\n    AssetLibraryBundle.prototype.onAssetRename = function (event) {\n        var asset = event.target; // TODO: was ev.currentTarget - watch this var\n        var old = this.getAsset(asset.assetNamespace, asset.name);\n        if (old != null) {\n            this._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\n        }\n        else {\n            var dict = this._assetDictionary[event.asset.assetNamespace];\n            if (dict == null)\n                return;\n            dict[event.prevName] = null;\n            dict[event.asset.name] = event.asset;\n        }\n    };\n    AssetLibraryBundle.prototype.onAssetConflictResolved = function (event) {\n        this.dispatchEvent(event.clone());\n    };\n    AssetLibraryBundle._iInstances = new Object();\n    return AssetLibraryBundle;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AssetLibraryBundle;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\",\"awayjs-core/lib/events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"awayjs-core/lib/events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"awayjs-core/lib/events/LoaderEvent\":\"awayjs-core/lib/events/LoaderEvent\",\"awayjs-core/lib/events/ParserEvent\":\"awayjs-core/lib/events/ParserEvent\",\"awayjs-core/lib/events/URLLoaderEvent\":\"awayjs-core/lib/events/URLLoaderEvent\",\"awayjs-core/lib/library/AssetBase\":\"awayjs-core/lib/library/AssetBase\",\"awayjs-core/lib/library/AssetLibraryIterator\":\"awayjs-core/lib/library/AssetLibraryIterator\",\"awayjs-core/lib/library/ConflictPrecedence\":\"awayjs-core/lib/library/ConflictPrecedence\",\"awayjs-core/lib/library/ConflictStrategy\":\"awayjs-core/lib/library/ConflictStrategy\",\"awayjs-core/lib/library/Loader\":\"awayjs-core/lib/library/Loader\"}],\"awayjs-core/lib/library/AssetLibraryIterator\":[function(require,module,exports){\n\"use strict\";\nvar AssetLibraryIterator = (function () {\n    function AssetLibraryIterator(assets, assetTypeFilter, namespaceFilter, filterFunc) {\n        this._assets = assets;\n        this.filter(assetTypeFilter, namespaceFilter, filterFunc);\n    }\n    Object.defineProperty(AssetLibraryIterator.prototype, \"currentAsset\", {\n        get: function () {\n            // Return current, or null if no current\n            return (this._idx < this._filtered.length) ? this._filtered[this._idx] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetLibraryIterator.prototype, \"numAssets\", {\n        get: function () {\n            return this._filtered.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AssetLibraryIterator.prototype.next = function () {\n        var next = null;\n        if (this._idx < this._filtered.length)\n            next = this._filtered[this._idx];\n        this._idx++;\n        return next;\n    };\n    AssetLibraryIterator.prototype.reset = function () {\n        this._idx = 0;\n    };\n    AssetLibraryIterator.prototype.setIndex = function (index) {\n        this._idx = index;\n    };\n    AssetLibraryIterator.prototype.filter = function (assetTypeFilter, namespaceFilter, filterFunc) {\n        if (assetTypeFilter || namespaceFilter) {\n            var idx;\n            var asset;\n            idx = 0;\n            this._filtered = new Array(); //new Vector.<IAsset>;\n            var l = this._assets.length;\n            for (var c = 0; c < l; c++) {\n                asset = this._assets[c];\n                // Skip this assets if filtering on type and this is wrong type\n                if (assetTypeFilter && asset.assetType != assetTypeFilter)\n                    continue;\n                // Skip this asset if filtering on namespace and this is wrong namespace\n                if (namespaceFilter && asset.assetNamespace != namespaceFilter)\n                    continue;\n                // Skip this asset if a filter func has been provided and it returns false\n                if (filterFunc != null && !filterFunc(asset))\n                    continue;\n                this._filtered[idx++] = asset;\n            }\n        }\n        else {\n            this._filtered = this._assets;\n        }\n    };\n    return AssetLibraryIterator;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AssetLibraryIterator;\n\n},{}],\"awayjs-core/lib/library/AssetLibrary\":[function(require,module,exports){\n\"use strict\";\nvar AssetLibraryBundle_1 = require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nvar Loader_1 = require(\"awayjs-core/lib/library/Loader\");\n/**\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\n */\nvar AssetLibrary = (function () {\n    /**\n     * Creates a new <code>AssetLibrary</code> object.\n     *\n     */\n    function AssetLibrary() {\n    }\n    //*/\n    /**\n     * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\n     * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\n     * pass a string key to this method to define which bundle should be returned. This is\n     * referred to as using the AssetLibraryBundle as a multiton.\n     *\n     * @param key Defines which multiton instance should be returned.\n     * @return An instance of the asset library\n     */\n    AssetLibrary.getBundle = function (key) {\n        if (key === void 0) { key = 'default'; }\n        return AssetLibraryBundle_1.default.getInstance(key);\n    };\n    /**\n     *\n     */\n    AssetLibrary.enableParser = function (parserClass) {\n        Loader_1.default.enableParser(parserClass);\n    };\n    /**\n     *\n     */\n    AssetLibrary.enableParsers = function (parserClasses) {\n        Loader_1.default.enableParsers(parserClasses);\n    };\n    Object.defineProperty(AssetLibrary, \"conflictStrategy\", {\n        /**\n         * Short-hand for conflictStrategy property on default asset library bundle.\n         *\n         * @see AssetLibraryBundle.conflictStrategy\n         */\n        get: function () {\n            return AssetLibrary.getBundle().conflictStrategy;\n        },\n        set: function (val) {\n            AssetLibrary.getBundle().conflictStrategy = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AssetLibrary, \"conflictPrecedence\", {\n        /**\n         * Short-hand for conflictPrecedence property on default asset library bundle.\n         *\n         * @see AssetLibraryBundle.conflictPrecedence\n         */\n        get: function () {\n            return AssetLibrary.getBundle().conflictPrecedence;\n        },\n        set: function (val) {\n            AssetLibrary.getBundle().conflictPrecedence = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Short-hand for createIterator() method on default asset library bundle.\n     *\n     * @see AssetLibraryBundle.createIterator()\n     */\n    AssetLibrary.createIterator = function (assetTypeFilter, namespaceFilter, filterFunc) {\n        if (assetTypeFilter === void 0) { assetTypeFilter = null; }\n        if (namespaceFilter === void 0) { namespaceFilter = null; }\n        if (filterFunc === void 0) { filterFunc = null; }\n        return AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\n    };\n    /**\n     * Short-hand for load() method on default asset library bundle.\n     *\n     * @see AssetLibraryBundle.load()\n     */\n    AssetLibrary.load = function (req, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        AssetLibrary.getBundle().load(req, context, ns, parser);\n    };\n    /**\n     * Short-hand for loadData() method on default asset library bundle.\n     *\n     * @see AssetLibraryBundle.loadData()\n     */\n    AssetLibrary.loadData = function (data, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        AssetLibrary.getBundle().loadData(data, context, ns, parser);\n    };\n    AssetLibrary.stopLoad = function () {\n        AssetLibrary.getBundle().stopAllLoaders();\n    };\n    AssetLibrary.getLoader = function () {\n        return AssetLibrary.getBundle().getLoader();\n    };\n    /**\n     * Short-hand for getAsset() method on default asset library bundle.\n     *\n     * @see AssetLibraryBundle.getAsset()\n     */\n    AssetLibrary.getAsset = function (name, ns) {\n        if (ns === void 0) { ns = null; }\n        return AssetLibrary.getBundle().getAsset(name, ns);\n    };\n    /**\n     * Short-hand for getAsset() method on default asset library bundle.\n     *\n     * @see AssetLibraryBundle.getAsset()\n     */\n    AssetLibrary.getAllAssets = function () {\n        return AssetLibrary.getBundle().getAllAssets();\n    };\n    /**\n     * Short-hand for addEventListener() method on default asset library bundle.\n     */\n    AssetLibrary.addEventListener = function (type, listener) {\n        AssetLibrary.getBundle().addEventListener(type, listener);\n    };\n    /**\n     * Short-hand for removeEventListener() method on default asset library bundle.\n     */\n    AssetLibrary.removeEventListener = function (type, listener) {\n        AssetLibrary.getBundle().removeEventListener(type, listener);\n    };\n    /**\n     * Short-hand for hasEventListener() method on default asset library bundle.\n\n     public static hasEventListener(type:string):boolean\n     {\n        return AssetLibrary.getBundle().hasEventListener(type);\n    }\n\n     public static willTrigger(type:string):boolean\n     {\n        return getBundle().willTrigger(type);\n    }\n     */\n    /**\n     * Short-hand for addAsset() method on default asset library bundle.\n     *\n     * @see AssetLibraryBundle.addAsset()\n     */\n    AssetLibrary.addAsset = function (asset) {\n        AssetLibrary.getBundle().addAsset(asset);\n    };\n    /**\n     * Short-hand for removeAsset() method on default asset library bundle.\n     *\n     * @param asset The asset which should be removed from the library.\n     * @param dispose Defines whether the assets should also be disposed.\n     *\n     * @see AssetLibraryBundle.removeAsset()\n     */\n    AssetLibrary.removeAsset = function (asset, dispose) {\n        if (dispose === void 0) { dispose = true; }\n        AssetLibrary.getBundle().removeAsset(asset, dispose);\n    };\n    /**\n     * Short-hand for removeAssetByName() method on default asset library bundle.\n     *\n     * @param name The name of the asset to be removed.\n     * @param ns The namespace to which the desired asset belongs.\n     * @param dispose Defines whether the assets should also be disposed.\n     *\n     * @see AssetLibraryBundle.removeAssetByName()\n     */\n    AssetLibrary.removeAssetByName = function (name, ns, dispose) {\n        if (ns === void 0) { ns = null; }\n        if (dispose === void 0) { dispose = true; }\n        return AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\n    };\n    /**\n     * Short-hand for removeAllAssets() method on default asset library bundle.\n     *\n     * @param dispose Defines whether the assets should also be disposed.\n     *\n     * @see AssetLibraryBundle.removeAllAssets()\n     */\n    AssetLibrary.removeAllAssets = function (dispose) {\n        if (dispose === void 0) { dispose = true; }\n        AssetLibrary.getBundle().removeAllAssets(dispose);\n    };\n    /**\n     * Short-hand for removeNamespaceAssets() method on default asset library bundle.\n     *\n     * @see AssetLibraryBundle.removeNamespaceAssets()\n     */\n    AssetLibrary.removeNamespaceAssets = function (ns, dispose) {\n        if (ns === void 0) { ns = null; }\n        if (dispose === void 0) { dispose = true; }\n        AssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\n    };\n    return AssetLibrary;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AssetLibrary;\n\n},{\"awayjs-core/lib/library/AssetLibraryBundle\":\"awayjs-core/lib/library/AssetLibraryBundle\",\"awayjs-core/lib/library/Loader\":\"awayjs-core/lib/library/Loader\"}],\"awayjs-core/lib/library/ConflictPrecedence\":[function(require,module,exports){\n\"use strict\";\n/**\n * Enumaration class for precedence when resolving naming conflicts in the library.\n *\n * @see away.library.AssetLibrary.conflictPrecedence\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategy\n */\nvar ConflictPrecedence = (function () {\n    function ConflictPrecedence() {\n    }\n    /**\n     * Signals that in a conflict, the previous owner of the conflicting name\n     * should be favored (and keep it's name) and that the newly renamed asset\n     * is reverted to a non-conflicting name.\n     */\n    ConflictPrecedence.FAVOR_OLD = 'favorOld';\n    /**\n     * Signales that in a conflict, the newly renamed asset is favored (and keeps\n     * it's newly defined name) and that the previous owner of that name gets\n     * renamed to a non-conflicting name.\n     */\n    ConflictPrecedence.FAVOR_NEW = 'favorNew';\n    return ConflictPrecedence;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ConflictPrecedence;\n\n},{}],\"awayjs-core/lib/library/ConflictStrategyBase\":[function(require,module,exports){\n\"use strict\";\nvar ConflictPrecedence_1 = require(\"awayjs-core/lib/library/ConflictPrecedence\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\n/**\n * Abstract base class for naming conflict resolution classes. Extend this to create a\n * strategy class which the asset library can use to resolve asset naming conflicts, or\n * use one of the bundled concrete strategy classes:\n *\n * <ul>\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\n * </ul>\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.ConflictStrategy\n * @see away.library.IgnoreConflictStrategy\n * @see away.library.ErrorConflictStrategy\n * @see away.library.NumSuffixConflictStrategy\n */\nvar ConflictStrategyBase = (function () {\n    function ConflictStrategyBase() {\n    }\n    /**\n     * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\n     * classes.\n     */\n    ConflictStrategyBase.prototype.resolveConflict = function (changedAsset, oldAsset, assetsDictionary, precedence) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Create instance of this conflict strategy. Used internally by the AssetLibrary to\n     * make sure the same strategy instance is not used in all AssetLibrary instances, which\n     * would break any state caching that happens inside the strategy class.\n     */\n    ConflictStrategyBase.prototype.create = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Provided as a convenience method for all conflict strategy classes, as a way to finalize\n     * the conflict resolution by applying the new names and dispatching the correct events.\n     */\n    ConflictStrategyBase.prototype._pUpdateNames = function (ns, nonConflictingName, oldAsset, newAsset, assetsDictionary, precedence) {\n        var loser_prev_name;\n        var winner;\n        var loser;\n        winner = (precedence === ConflictPrecedence_1.default.FAVOR_NEW) ? newAsset : oldAsset;\n        loser = (precedence === ConflictPrecedence_1.default.FAVOR_NEW) ? oldAsset : newAsset;\n        loser_prev_name = loser.name;\n        assetsDictionary[winner.name] = winner;\n        assetsDictionary[nonConflictingName] = loser;\n        loser.resetAssetPath(nonConflictingName, ns, false);\n        loser.dispatchEvent(new AssetEvent_1.default(AssetEvent_1.default.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\n    };\n    return ConflictStrategyBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ConflictStrategyBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"awayjs-core/lib/events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"awayjs-core/lib/library/ConflictPrecedence\":\"awayjs-core/lib/library/ConflictPrecedence\"}],\"awayjs-core/lib/library/ConflictStrategy\":[function(require,module,exports){\n\"use strict\";\nvar ErrorConflictStrategy_1 = require(\"awayjs-core/lib/library/ErrorConflictStrategy\");\nvar IgnoreConflictStrategy_1 = require(\"awayjs-core/lib/library/IgnoreConflictStrategy\");\nvar NumSuffixConflictStrategy_1 = require(\"awayjs-core/lib/library/NumSuffixConflictStrategy\");\n/**\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\n * property on an AssetLibrary to define how that library resolves naming conflicts.\n *\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategyBase\n */\nvar ConflictStrategy = (function () {\n    function ConflictStrategy(include) {\n        //TODO: find out why typescript d.ts files do not include this class\n    }\n    /**\n     * Specifies that in case of a naming conflict, one of the assets will be renamed and\n     * a numeric suffix appended to the base name.\n     */\n    ConflictStrategy.APPEND_NUM_SUFFIX = new NumSuffixConflictStrategy_1.default();\n    /**\n     * Specifies that naming conflicts should be ignored. This is not recommended in most\n     * cases, unless it can be 100% guaranteed that the application does not cause naming\n     * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\n     */\n    ConflictStrategy.IGNORE = new IgnoreConflictStrategy_1.default();\n    /**\n     * Specifies that an error should be thrown if a naming conflict is discovered. Use this\n     * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\n     * to have the library automatically rename assets to avoid such conflicts.\n     */\n    ConflictStrategy.THROW_ERROR = new ErrorConflictStrategy_1.default();\n    return ConflictStrategy;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ConflictStrategy;\n\n},{\"awayjs-core/lib/library/ErrorConflictStrategy\":\"awayjs-core/lib/library/ErrorConflictStrategy\",\"awayjs-core/lib/library/IgnoreConflictStrategy\":\"awayjs-core/lib/library/IgnoreConflictStrategy\",\"awayjs-core/lib/library/NumSuffixConflictStrategy\":\"awayjs-core/lib/library/NumSuffixConflictStrategy\"}],\"awayjs-core/lib/library/ErrorConflictStrategy\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ConflictStrategyBase_1 = require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar ErrorConflictStrategy = (function (_super) {\n    __extends(ErrorConflictStrategy, _super);\n    function ErrorConflictStrategy() {\n        _super.call(this);\n    }\n    ErrorConflictStrategy.prototype.resolveConflict = function (changedAsset, oldAsset, assetsDictionary, precedence) {\n        throw new ErrorBase_1.default('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\n    };\n    ErrorConflictStrategy.prototype.create = function () {\n        return new ErrorConflictStrategy();\n    };\n    return ErrorConflictStrategy;\n}(ConflictStrategyBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ErrorConflictStrategy;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\",\"awayjs-core/lib/library/ConflictStrategyBase\":\"awayjs-core/lib/library/ConflictStrategyBase\"}],\"awayjs-core/lib/library/IAbstractionPool\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/library/IAssetClass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/library/IAsset\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/library/IDUtil\":[function(require,module,exports){\n\"use strict\";\nvar IDUtil = (function () {\n    function IDUtil() {\n    }\n    /**\n     *  Generates a UID (unique identifier) based on ActionScript's\n     *  pseudo-random number generator and the current time.\n     *\n     *  <p>The UID has the form\n     *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\n     *  where X is a hexadecimal digit (0-9, A-F).</p>\n     *\n     *  <p>This UID will not be truly globally unique; but it is the best\n     *  we can do without player support for UID generation.</p>\n     *\n     *  @return The newly-generated UID.\n     *\n     *  @langversion 3.0\n     *  @playerversion Flash 9\n     *  @playerversion AIR 1.1\n     *  @productversion Flex 3\n     */\n    IDUtil.createUID = function () {\n        var uid = new Array(36);\n        var index = 0;\n        var i;\n        var j;\n        for (i = 0; i < 8; i++)\n            uid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random() * 16)];\n        for (i = 0; i < 3; i++) {\n            uid[index++] = 45; // charCode for \"-\"\n            for (j = 0; j < 4; j++)\n                uid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random() * 16)];\n        }\n        uid[index++] = 45; // charCode for \"-\"\n        var time = new Date().getTime();\n        // Note: time is the number of milliseconds since 1970,\n        // which is currently more than one trillion.\n        // We use the low 8 hex digits of this number in the UID.\n        // Just in case the system clock has been reset to\n        // Jan 1-4, 1970 (in which case this number could have only\n        // 1-7 hex digits), we pad on the left with 7 zeros\n        // before taking the low digits.\n        var timeString = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\n        for (i = 0; i < 8; i++)\n            uid[index++] = timeString.charCodeAt(i);\n        for (i = 0; i < 4; i++)\n            uid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random() * 16)];\n        return String.fromCharCode.apply(null, uid);\n    };\n    /**\n     *  @private\n     *  Char codes for 0123456789ABCDEF\n     */\n    IDUtil.ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\n    return IDUtil;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = IDUtil;\n\n},{}],\"awayjs-core/lib/library/IgnoreConflictStrategy\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ConflictStrategyBase_1 = require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nvar IgnoreConflictStrategy = (function (_super) {\n    __extends(IgnoreConflictStrategy, _super);\n    function IgnoreConflictStrategy() {\n        _super.call(this);\n    }\n    IgnoreConflictStrategy.prototype.resolveConflict = function (changedAsset, oldAsset, assetsDictionary, precedence) {\n        // Do nothing, ignore the fact that there is a conflict.\n        return;\n    };\n    IgnoreConflictStrategy.prototype.create = function () {\n        return new IgnoreConflictStrategy();\n    };\n    return IgnoreConflictStrategy;\n}(ConflictStrategyBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = IgnoreConflictStrategy;\n\n},{\"awayjs-core/lib/library/ConflictStrategyBase\":\"awayjs-core/lib/library/ConflictStrategyBase\"}],\"awayjs-core/lib/library/LoaderContext\":[function(require,module,exports){\n\"use strict\";\nvar LoaderContext = (function () {\n    /**\n     * LoaderContext provides configuration for the Loader load() and parse() operations.\n     * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\n     * embedded data.\n     *\n     * @see away.loading.Loader\n     */\n    function LoaderContext(includeDependencies, dependencyBaseUrl) {\n        if (includeDependencies === void 0) { includeDependencies = true; }\n        if (dependencyBaseUrl === void 0) { dependencyBaseUrl = null; }\n        this._includeDependencies = includeDependencies;\n        this._dependencyBaseUrl = dependencyBaseUrl || '';\n        this._embeddedDataByUrl = {};\n        this._remappedUrls = {};\n        this._materialMode = LoaderContext.UNDEFINED;\n    }\n    Object.defineProperty(LoaderContext.prototype, \"includeDependencies\", {\n        /**\n         * Defines whether dependencies (all files except the one at the URL given to the load() or\n         * parseData() operations) should be automatically loaded. Defaults to true.\n         */\n        get: function () {\n            return this._includeDependencies;\n        },\n        set: function (val) {\n            this._includeDependencies = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderContext.prototype, \"materialMode\", {\n        /**\n         * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\n         * Options:\n         * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\n         * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\n         * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\n         *\n         */\n        get: function () {\n            return this._materialMode;\n        },\n        set: function (materialMode) {\n            this._materialMode = materialMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderContext.prototype, \"dependencyBaseUrl\", {\n        /**\n         * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\n         * Absolute paths will not be affected by the value of this property.\n         */\n        get: function () {\n            return this._dependencyBaseUrl;\n        },\n        set: function (val) {\n            this._dependencyBaseUrl = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderContext.prototype, \"overrideAbsolutePaths\", {\n        /**\n         * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\n         * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\n         * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n         */\n        get: function () {\n            return this._overrideAbsPath;\n        },\n        set: function (val) {\n            this._overrideAbsPath = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderContext.prototype, \"overrideFullURLs\", {\n        /**\n         * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\n         * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\n         * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n         */\n        get: function () {\n            return this._overrideFullUrls;\n        },\n        set: function (val) {\n            this._overrideFullUrls = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Map a URL to another URL, so that files that are referred to by the original URL will instead\n     * be loaded from the new URL. Use this when your file structure does not match the one that is\n     * expected by the loaded file.\n     *\n     * @param originalUrl The original URL which is referenced in the loaded resource.\n     * @param newUrl The URL from which away.should load the resource instead.\n     *\n     * @see mapUrlToData()\n     */\n    LoaderContext.prototype.mapUrl = function (originalUrl, newUrl) {\n        this._remappedUrls[originalUrl] = newUrl;\n    };\n    /**\n     * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\n     * which it's referenced, the dependency data will be retrieved straight from the memory instead.\n     *\n     * @param originalUrl The original URL which is referenced in the loaded resource.\n     * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\n     */\n    LoaderContext.prototype.mapUrlToData = function (originalUrl, data) {\n        this._embeddedDataByUrl[originalUrl] = data;\n    };\n    /**\n     * @private\n     * Defines whether embedded data has been mapped to a particular URL.\n     */\n    LoaderContext.prototype._iHasDataForUrl = function (url) {\n        return this._embeddedDataByUrl.hasOwnProperty(url);\n    };\n    /**\n     * @private\n     * Returns embedded data for a particular URL.\n     */\n    LoaderContext.prototype._iGetDataForUrl = function (url) {\n        return this._embeddedDataByUrl[url];\n    };\n    /**\n     * @private\n     * Defines whether a replacement URL has been mapped to a particular URL.\n     */\n    LoaderContext.prototype._iHasMappingForUrl = function (url) {\n        return this._remappedUrls.hasOwnProperty(url);\n    };\n    /**\n     * @private\n     * Returns new (replacement) URL for a particular original URL.\n     */\n    LoaderContext.prototype._iGetRemappedUrl = function (originalUrl) {\n        return this._remappedUrls[originalUrl];\n    };\n    LoaderContext.UNDEFINED = 0;\n    LoaderContext.SINGLEPASS_MATERIALS = 1;\n    LoaderContext.MULTIPASS_MATERIALS = 2;\n    return LoaderContext;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LoaderContext;\n\n},{}],\"awayjs-core/lib/library/LoaderInfo\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n *\n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nvar LoaderInfo = (function (_super) {\n    __extends(LoaderInfo, _super);\n    function LoaderInfo() {\n        _super.apply(this, arguments);\n    }\n    Object.defineProperty(LoaderInfo.prototype, \"bytes\", {\n        /**\n         * The bytes associated with a LoaderInfo object.\n         *\n         * @throws SecurityError If the object accessing this API is prevented from\n         *                       accessing the loaded object due to security\n         *                       restrictions. This situation can occur, for\n         *                       instance, when a Loader object attempts to access\n         *                       the <code>contentLoaderInfo.content</code> property\n         *                       and it is not granted security permission to access\n         *                       the loaded content.\n         *\n         *                       <p>For more information related to security, see the\n         *                       Flash Player Developer Center Topic: <a\n         *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n         *                       scope=\"external\">Security</a>.</p>\n         */\n        get: function () {\n            return this._bytes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderInfo.prototype, \"bytesLoaded\", {\n        /**\n         * The number of bytes that are loaded for the media. When this number equals\n         * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n         */\n        get: function () {\n            return this._bytesLoaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderInfo.prototype, \"bytesTotal\", {\n        /**\n         * The number of compressed bytes in the entire media file.\n         *\n         * <p>Before the first <code>progress</code> event is dispatched by this\n         * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n         * is 0. After the first <code>progress</code> event from the Loader object,\n         * <code>bytesTotal</code> reflects the actual number of bytes to be\n         * downloaded.</p>\n         */\n        get: function () {\n            return this._bytesTotal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderInfo.prototype, \"content\", {\n        /**\n         * The loaded object associated with this LoaderInfo object.\n         *\n         * @throws SecurityError If the object accessing this API is prevented from\n         *                       accessing the loaded object due to security\n         *                       restrictions. This situation can occur, for\n         *                       instance, when a Loader object attempts to access\n         *                       the <code>contentLoaderInfo.content</code> property\n         *                       and it is not granted security permission to access\n         *                       the loaded content.\n         *\n         *                       <p>For more information related to security, see the\n         *                       Flash Player Developer Center Topic: <a\n         *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n         *                       scope=\"external\">Security</a>.</p>\n         */\n        get: function () {\n            return this._content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderInfo.prototype, \"contentType\", {\n        /**\n         * The MIME type of the loaded file. The value is <code>null</code> if not\n         * enough of the file has loaded in order to determine the type. The\n         * following list gives the possible values:\n         * <ul>\n         *   <li><code>\"application/x-shockwave-flash\"</code></li>\n         *   <li><code>\"image/jpeg\"</code></li>\n         *   <li><code>\"image/gif\"</code></li>\n         *   <li><code>\"image/png\"</code></li>\n         * </ul>\n         */\n        get: function () {\n            return this._contentType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderInfo.prototype, \"loader\", {\n        /**\n         * The Loader object associated with this LoaderInfo object. If this\n         * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n         * of the main class of the SWF file, no Loader object is associated.\n         *\n         * @throws SecurityError If the object accessing this API is prevented from\n         *                       accessing the Loader object because of security\n         *                       restrictions. This can occur, for instance, when a\n         *                       loaded SWF file attempts to access its\n         *                       <code>loaderInfo.loader</code> property and it is\n         *                       not granted security permission to access the\n         *                       loading SWF file.\n         *\n         *                       <p>For more information related to security, see the\n         *                       Flash Player Developer Center Topic: <a\n         *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n         *                       scope=\"external\">Security</a>.</p>\n         */\n        get: function () {\n            return this._loader;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoaderInfo.prototype, \"url\", {\n        /**\n         * The URL of the media being loaded.\n         *\n         * <p>Before the first <code>progress</code> event is dispatched by this\n         * LoaderInfo object's corresponding Loader object, the value of the\n         * <code>url</code> property might reflect only the initial URL specified in\n         * the call to the <code>load()</code> method of the Loader object. After the\n         * first <code>progress</code> event, the <code>url</code> property reflects\n         * the media's final URL, after any redirects and relative URLs are\n         * resolved.</p>\n         *\n         * <p>In some cases, the value of the <code>url</code> property is truncated;\n         * see the <code>isURLInaccessible</code> property for details.</p>\n         */\n        get: function () {\n            return this._url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LoaderInfo;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LoaderInfo;\n\n},{\"awayjs-core/lib/events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\"}],\"awayjs-core/lib/library/Loader\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar URLLoader_1 = require(\"awayjs-core/lib/net/URLLoader\");\nvar URLLoaderDataFormat_1 = require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar URLLoaderEvent_1 = require(\"awayjs-core/lib/events/URLLoaderEvent\");\nvar LoaderEvent_1 = require(\"awayjs-core/lib/events/LoaderEvent\");\nvar ParserEvent_1 = require(\"awayjs-core/lib/events/ParserEvent\");\nvar ResourceDependency_1 = require(\"awayjs-core/lib/parsers/ResourceDependency\");\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n/**\n * Dispatched when an image asset dimensions are not a power of 2\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\n/**\n * Loader can load any file format that away.supports (or for which a third-party parser\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\n * and for when the resource (or it's dependencies) have been loaded.\n *\n * The Loader will not make assets available in any other way than through the dispatched\n * events. To store assets and make them available at any point from any module in an application,\n * use the AssetLibrary to load and manage assets.\n *\n * @see away.library.AssetLibrary\n */\nvar Loader = (function (_super) {\n    __extends(Loader, _super);\n    /**\n     * Create a new ResourceLoadSession object.\n     */\n    function Loader(materialMode) {\n        var _this = this;\n        if (materialMode === void 0) { materialMode = 0; }\n        _super.call(this);\n        this._materialMode = materialMode;\n        this._stack = new Array();\n        this._errorHandlers = new Array();\n        this._parseErrorHandlers = new Array();\n        this._onReadyForDependenciesDelegate = function (event) { return _this.onReadyForDependencies(event); };\n        this._onParseCompleteDelegate = function (event) { return _this.onParseComplete(event); };\n        this._onParseErrorDelegate = function (event) { return _this.onParseError(event); };\n        this._onLoadCompleteDelegate = function (event) { return _this.onLoadComplete(event); };\n        this._onLoadErrorDelegate = function (event) { return _this.onLoadError(event); };\n        this._onTextureSizeErrorDelegate = function (event) { return _this.onTextureSizeError(event); };\n        this._onAssetCompleteDelegate = function (event) { return _this.onAssetComplete(event); };\n    }\n    /**\n     * Enables a specific parser.\n     * When no specific parser is set for a loading/parsing opperation,\n     * loader3d can autoselect the correct parser to use.\n     * A parser must have been enabled, to be considered when autoselecting the parser.\n     *\n     * @param parser The parser class to enable.\n     *\n     * @see away.parsers.Parsers\n     */\n    Loader.enableParser = function (parser) {\n        if (Loader._parsers.indexOf(parser) < 0)\n            Loader._parsers.push(parser);\n    };\n    /**\n     * Enables a list of parsers.\n     * When no specific parser is set for a loading/parsing opperation,\n     * Loader can autoselect the correct parser to use.\n     * A parser must have been enabled, to be considered when autoselecting the parser.\n     *\n     * @param parsers A Vector of parser classes to enable.\n     * @see away.parsers.Parsers\n     */\n    Loader.enableParsers = function (parsers) {\n        for (var c = 0; c < parsers.length; c++)\n            Loader.enableParser(parsers[c]);\n    };\n    Object.defineProperty(Loader.prototype, \"baseDependency\", {\n        /**\n         * Returns the base dependency of the loader\n         */\n        get: function () {\n            return this._baseDependency;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Loader.prototype, \"loaderInfo\", {\n        /**\n         * Returns a LoaderInfo object corresponding to the object being loaded.\n         * LoaderInfo objects are shared between the Loader object and the loaded\n         * content object. The LoaderInfo object supplies loading progress\n         * information and statistics about the loaded file.\n         *\n         * <p>Events related to the load are dispatched by the LoaderInfo object\n         * referenced by the <code>contentLoaderInfo</code> property of the Loader\n         * object. The <code>contentLoaderInfo</code> property is set to a valid\n         * LoaderInfo object, even before the content is loaded, so that you can add\n         * event listeners to the object prior to the load.</p>\n         *\n         * <p>To detect uncaught errors that happen in a loaded SWF, use the\n         * <code>Loader.uncaughtErrorEvents</code> property, not the\n         * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n         */\n        get: function () {\n            return this._loaderInfo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Loads a file and (optionally) all of its dependencies.\n     *\n     * @param req The URLRequest object containing the URL of the file to be loaded.\n     * @param context An optional context object providing additional parameters for loading\n     * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n     * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n     */\n    Loader.prototype.load = function (req, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        this._uri = req.url = req.url.replace(/\\\\/g, \"/\");\n        this._context = context;\n        this._namespace = ns;\n        this._baseDependency = new ResourceDependency_1.default('', req, null, parser, null);\n        this.retrieveDependency(this._baseDependency);\n    };\n    /**\n     * Loads a resource from already loaded data.\n     *\n     * @param data The data object containing all resource information.\n     * @param context An optional context object providing additional parameters for loading\n     * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n     * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n     */\n    Loader.prototype.loadData = function (data, id, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        this._uri = id;\n        this._context = context;\n        this._namespace = ns;\n        this._baseDependency = new ResourceDependency_1.default(id, null, data, parser, null);\n        this.retrieveDependency(this._baseDependency);\n    };\n    /**\n     * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\n     * stack when complete and continues on the top set.\n     * @param parser The parser that will translate the data into a usable resource.\n     */\n    Loader.prototype.retrieveNext = function (parser) {\n        if (parser === void 0) { parser = null; }\n        if (this._currentDependency.dependencies.length) {\n            var next = this._currentDependency.dependencies.pop();\n            this._stack.push(this._currentDependency);\n            this.retrieveDependency(next);\n        }\n        else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\n            this._currentDependency.parser._iResumeParsing();\n            this._stack.pop();\n        }\n        else if (this._stack.length) {\n            var prev = this._currentDependency;\n            this._currentDependency = this._stack.pop();\n            if (prev._iSuccess)\n                prev.resolve();\n            this.retrieveNext(parser);\n        }\n        else {\n            this.dispatchEvent(new LoaderEvent_1.default(LoaderEvent_1.default.LOAD_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\n        }\n    };\n    /**\n     * Retrieves a single dependency.\n     * @param parser The parser that will translate the data into a usable resource.\n     */\n    Loader.prototype.retrieveDependency = function (dependency) {\n        var data;\n        if (this._context && this._context.materialMode != 0)\n            this._materialMode = this._context.materialMode;\n        this._currentDependency = dependency;\n        dependency._iLoader = new URLLoader_1.default();\n        this.addEventListeners(dependency._iLoader);\n        // Get already loaded (or mapped) data if available\n        data = dependency.data;\n        if (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\n            data = this._context._iGetDataForUrl(dependency.request.url);\n        if (data) {\n            if (data.constructor === Function)\n                data = new data();\n            dependency._iSetData(data);\n            if (dependency.retrieveAsRawData) {\n                // No need to parse. The parent parser is expecting this\n                // to be raw data so it can be passed directly.\n                dependency.resolve();\n                // Move on to next dependency\n                this.retrieveNext();\n            }\n            else {\n                this.parseDependency(dependency);\n            }\n        }\n        else {\n            // Resolve URL and start loading\n            dependency.request.url = this.resolveDependencyUrl(dependency);\n            if (dependency.retrieveAsRawData) {\n                // Always use binary for raw data loading\n                dependency._iLoader.dataFormat = URLLoaderDataFormat_1.default.BINARY;\n            }\n            else {\n                if (!dependency.parser)\n                    dependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\n                if (dependency.parser) {\n                    dependency._iLoader.dataFormat = dependency.parser.dataFormat;\n                }\n                else {\n                    // Always use BINARY for unknown file formats. The thorough\n                    // file type check will determine format after load, and if\n                    // binary, a text load will have broken the file data.\n                    dependency._iLoader.dataFormat = URLLoaderDataFormat_1.default.BINARY;\n                }\n            }\n            dependency._iLoader.load(dependency.request);\n        }\n    };\n    Loader.prototype.joinUrl = function (base, end) {\n        if (end.charAt(0) == '/' || end.charAt(0) == '\\\\')\n            end = end.substr(1);\n        if (end.charAt(0) == '.')\n            end = end.substr(2);\n        if (base.length == 0)\n            return end;\n        if (base.charAt(base.length - 1) == '/' || base.charAt(base.length - 1) == '\\\\')\n            base = base.substr(0, base.length - 1);\n        return base.concat('/', end);\n    };\n    Loader.prototype.resolveDependencyUrl = function (dependency) {\n        var scheme_re;\n        var base;\n        var url = dependency.request.url;\n        // Has the user re-mapped this URL?\n        if (this._context && this._context._iHasMappingForUrl(url))\n            return this._context._iGetRemappedUrl(url);\n        // This is the \"base\" dependency, i.e. the actual requested asset.\n        // We will not try to resolve this since the user can probably be\n        // thrusted to know this URL better than our automatic resolver. :)\n        if (url == this._uri)\n            return url;\n        // Absolute URL? Check if starts with slash or a URL\n        // scheme definition (e.g. ftp://, http://, file://)\n        scheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\n        if (url.charAt(0) == '/') {\n            if (this._context && this._context.overrideAbsolutePaths)\n                return this.joinUrl(this._context.dependencyBaseUrl, url);\n            else\n                return url;\n        }\n        else if (scheme_re.test(url)) {\n            // If overriding full URLs, get rid of scheme (e.g. \"http://\")\n            // and replace with the dependencyBaseUrl defined by user.\n            if (this._context && this._context.overrideFullURLs) {\n                var noscheme_url = url.replace(scheme_re, ''); //url['replace'](scheme_re);\n                return this.joinUrl(this._context.dependencyBaseUrl, noscheme_url);\n            }\n        }\n        // Since not absolute, just get rid of base file name to find it's\n        // folder and then concatenate dynamic URL\n        if (this._context && this._context.dependencyBaseUrl) {\n            base = this._context.dependencyBaseUrl;\n            return this.joinUrl(base, url);\n        }\n        else {\n            base = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\n            return this.joinUrl(base, url);\n        }\n    };\n    Loader.prototype.retrieveParserDependencies = function () {\n        if (!this._currentDependency)\n            return;\n        var parserDependancies = this._currentDependency.parser.dependencies;\n        var i, len = parserDependancies.length;\n        for (i = 0; i < len; i++)\n            this._currentDependency.dependencies[i] = parserDependancies[i];\n        // Since more dependencies might be added eventually, empty this\n        // list so that the same dependency isn't retrieved more than once.\n        parserDependancies.length = 0;\n        this._stack.push(this._currentDependency);\n        this.retrieveNext();\n    };\n    Loader.prototype.resolveParserDependencies = function () {\n        this._currentDependency._iSuccess = true;\n        // Retrieve any last dependencies remaining on this parser, or\n        // if none exists, just move on.\n        if (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))\n            this.retrieveParserDependencies();\n        else\n            this.retrieveNext();\n    };\n    /**\n     * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\n     * @param event\n     */\n    Loader.prototype.onLoadError = function (event) {\n        var handled;\n        var isDependency = (this._currentDependency != this._baseDependency);\n        var loader = event.urlLoader;\n        this.removeEventListeners(loader);\n        if (this.hasEventListener(URLLoaderEvent_1.default.LOAD_ERROR)) {\n            this.dispatchEvent(event);\n            handled = true;\n        }\n        else {\n            // TODO: Consider not doing this even when Loader does have it's own LOAD_ERROR listener\n            var i, len = this._errorHandlers.length;\n            for (i = 0; i < len; i++)\n                if (!handled)\n                    handled = this._errorHandlers[i](event);\n        }\n        if (handled) {\n            //if (isDependency && ! event.isDefaultPrevented()) {\n            if (isDependency) {\n                this._currentDependency.resolveFailure();\n                this.retrieveNext();\n            }\n            else {\n                // Either this was the base file (last left in the stack) or\n                // default behavior was prevented by the handlers, and hence\n                // there is nothing more to do than clean up and bail.\n                this.dispose();\n                return;\n            }\n        }\n        else {\n            // Error event was not handled by listeners directly on Loader or\n            // on any of the subscribed loaders (in the list of error handlers.)\n            throw new Error();\n        }\n    };\n    /**\n     * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\n     * @param event\n     */\n    Loader.prototype.onParseError = function (event) {\n        var handled;\n        var isDependency = (this._currentDependency != this._baseDependency);\n        var loader = event.target;\n        this.removeEventListeners(loader);\n        if (this.hasEventListener(ParserEvent_1.default.PARSE_ERROR)) {\n            this.dispatchEvent(event);\n            handled = true;\n        }\n        else {\n            // TODO: Consider not doing this even when Loader does\n            // have it's own LOAD_ERROR listener\n            var i, len = this._parseErrorHandlers.length;\n            for (i = 0; i < len; i++)\n                if (!handled)\n                    handled = this._parseErrorHandlers[i](event);\n        }\n        if (handled) {\n            this.retrieveNext();\n        }\n        else {\n            // Error event was not handled by listeners directly on Loader or\n            // on any of the subscribed loaders (in the list of error handlers.)\n            throw new Error(event.message);\n        }\n    };\n    Loader.prototype.onAssetComplete = function (event) {\n        // Add loaded asset to list of assets retrieved as part\n        // of the current dependency. This list will be inspected\n        // by the parent parser when dependency is resolved\n        if (this._currentDependency)\n            this._currentDependency.assets.push(event.asset);\n        event.asset.resetAssetPath(event.asset.name, this._namespace);\n        if (!this._currentDependency.suppresAssetEvents)\n            this.dispatchEvent(event);\n    };\n    Loader.prototype.onReadyForDependencies = function (event) {\n        var parser = event.target;\n        if (this._context && !this._context.includeDependencies)\n            parser._iResumeParsing();\n        else\n            this.retrieveParserDependencies();\n    };\n    /**\n     * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\n     * @param event\n     */\n    Loader.prototype.onLoadComplete = function (event) {\n        var loader = event.urlLoader;\n        this.removeEventListeners(loader);\n        // Resolve this dependency\n        this._currentDependency._iSetData(loader.data);\n        if (this._currentDependency.retrieveAsRawData) {\n            // No need to parse this data, which should be returned as is\n            this.resolveParserDependencies();\n        }\n        else {\n            this.parseDependency(this._currentDependency);\n        }\n    };\n    /**\n     * Called when parsing is complete.\n     */\n    Loader.prototype.onParseComplete = function (event) {\n        var parser = event.target;\n        this.resolveParserDependencies(); //resolve in front of removing listeners to allow any remaining asset events to propagate\n        parser.removeEventListener(ParserEvent_1.default.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n        parser.removeEventListener(ParserEvent_1.default.PARSE_COMPLETE, this._onParseCompleteDelegate);\n        parser.removeEventListener(ParserEvent_1.default.PARSE_ERROR, this._onParseErrorDelegate);\n        parser.removeEventListener(AssetEvent_1.default.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n        parser.removeEventListener(AssetEvent_1.default.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n    };\n    /**\n     * Called when an image is too large or it's dimensions are not a power of 2\n     * @param event\n     */\n    Loader.prototype.onTextureSizeError = function (event) {\n        event.asset.name = this._currentDependency.resolveName(event.asset);\n        this.dispatchEvent(event);\n    };\n    Loader.prototype.addEventListeners = function (loader) {\n        loader.addEventListener(URLLoaderEvent_1.default.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n        loader.addEventListener(URLLoaderEvent_1.default.LOAD_ERROR, this._onLoadErrorDelegate);\n    };\n    Loader.prototype.removeEventListeners = function (loader) {\n        loader.removeEventListener(URLLoaderEvent_1.default.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n        loader.removeEventListener(URLLoaderEvent_1.default.LOAD_ERROR, this._onLoadErrorDelegate);\n    };\n    Loader.prototype.stop = function () {\n        this.dispose();\n    };\n    Loader.prototype.dispose = function () {\n        this._errorHandlers = null;\n        this._parseErrorHandlers = null;\n        this._context = null;\n        this._stack = null;\n        if (this._currentDependency && this._currentDependency._iLoader)\n            this.removeEventListeners(this._currentDependency._iLoader);\n        this._currentDependency = null;\n    };\n    /**\n     * @private\n     * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\n     * add error event listeners to the Loader instance. This system is used instead of\n     * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\n     * that if hasEventListener() returns true, it's client code that's listening for the\n     * event. Secondly, functions added as error handler through this custom method are\n     * expected to return a boolean value indicating whether the event was handled (i.e.\n     * whether they in turn had any client code listening for the event.) If no handlers\n     * return true, the Loader knows that the event wasn't handled and will throw an RTE.\n     */\n    Loader.prototype._iAddParseErrorHandler = function (handler) {\n        if (this._parseErrorHandlers.indexOf(handler) < 0)\n            this._parseErrorHandlers.push(handler);\n    };\n    Loader.prototype._iAddErrorHandler = function (handler) {\n        if (this._errorHandlers.indexOf(handler) < 0)\n            this._errorHandlers.push(handler);\n    };\n    /**\n     * Guesses the parser to be used based on the file contents.\n     * @param data The data to be parsed.\n     * @param uri The url or id of the object to be parsed.\n     * @return An instance of the guessed parser.\n     */\n    Loader.prototype.getParserFromData = function (data) {\n        var len = Loader._parsers.length;\n        // go in reverse order to allow application override of default parser added in away.proper\n        for (var i = len - 1; i >= 0; i--)\n            if (Loader._parsers[i].supportsData(data))\n                return new Loader._parsers[i]();\n        return null;\n    };\n    /**\n     * Initiates parsing of the loaded dependency.\n     *\n     * @param The dependency to be parsed.\n     */\n    Loader.prototype.parseDependency = function (dependency) {\n        var parser = dependency.parser;\n        // If no parser has been defined, try to find one by letting\n        // all plugged in parsers inspect the actual data.\n        if (!parser)\n            dependency._iSetParser(parser = this.getParserFromData(dependency.data));\n        if (parser) {\n            parser.addEventListener(ParserEvent_1.default.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n            parser.addEventListener(ParserEvent_1.default.PARSE_COMPLETE, this._onParseCompleteDelegate);\n            parser.addEventListener(ParserEvent_1.default.PARSE_ERROR, this._onParseErrorDelegate);\n            parser.addEventListener(AssetEvent_1.default.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n            parser.addEventListener(AssetEvent_1.default.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n            if (dependency.request && dependency.request.url)\n                parser._iFileName = dependency.request.url;\n            parser.materialMode = this._materialMode;\n            parser.parseAsync(dependency.data);\n        }\n        else {\n            var handled;\n            var message = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\";\n            var event = new ParserEvent_1.default(ParserEvent_1.default.PARSE_ERROR, message);\n            if (this.hasEventListener(ParserEvent_1.default.PARSE_ERROR)) {\n                this.dispatchEvent(event);\n                handled = true;\n            }\n            else {\n                // TODO: Consider not doing this even when Loader does\n                // have it's own LOAD_ERROR listener\n                var i, len = this._parseErrorHandlers.length;\n                for (i = 0; i < len; i++)\n                    if (!handled)\n                        handled = this._parseErrorHandlers[i](event);\n            }\n            if (handled) {\n                this.retrieveNext();\n            }\n            else {\n                // Error event was not handled by listeners directly on Loader or\n                // on any of the subscribed loaders (in the list of error handlers.)\n                throw new Error(message);\n            }\n        }\n    };\n    /**\n     * Guesses the parser to be used based on the file extension.\n     * @return An instance of the guessed parser.\n     */\n    Loader.prototype.getParserFromSuffix = function (url) {\n        // Get rid of query string if any and extract extension\n        var base = (url.indexOf('?') > 0) ? url.split('?')[0] : url;\n        var fileExtension = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\n        var len = Loader._parsers.length;\n        // go in reverse order to allow application override of default parser added in away.proper\n        for (var i = len - 1; i >= 0; i--) {\n            var parserClass = Loader._parsers[i];\n            if (parserClass.supportsType(fileExtension))\n                return new parserClass();\n        }\n        return null;\n    };\n    // Image parser only parser that is added by default, to save file size.\n    Loader._parsers = new Array();\n    return Loader;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Loader;\n\n},{\"awayjs-core/lib/events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"awayjs-core/lib/events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"awayjs-core/lib/events/LoaderEvent\":\"awayjs-core/lib/events/LoaderEvent\",\"awayjs-core/lib/events/ParserEvent\":\"awayjs-core/lib/events/ParserEvent\",\"awayjs-core/lib/events/URLLoaderEvent\":\"awayjs-core/lib/events/URLLoaderEvent\",\"awayjs-core/lib/net/URLLoader\":\"awayjs-core/lib/net/URLLoader\",\"awayjs-core/lib/net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"awayjs-core/lib/parsers/ResourceDependency\":\"awayjs-core/lib/parsers/ResourceDependency\"}],\"awayjs-core/lib/library/NumSuffixConflictStrategy\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ConflictStrategyBase_1 = require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nvar NumSuffixConflictStrategy = (function (_super) {\n    __extends(NumSuffixConflictStrategy, _super);\n    function NumSuffixConflictStrategy(separator) {\n        if (separator === void 0) { separator = '.'; }\n        _super.call(this);\n        this._separator = separator;\n        this._next_suffix = {};\n    }\n    NumSuffixConflictStrategy.prototype.resolveConflict = function (changedAsset, oldAsset, assetsDictionary, precedence) {\n        var orig;\n        var new_name;\n        var base;\n        var suffix;\n        orig = changedAsset.name;\n        if (orig.indexOf(this._separator) >= 0) {\n            // Name has an ocurrence of the separator, so get base name and suffix,\n            // unless suffix is non-numerical, in which case revert to zero and\n            // use entire name as base\n            base = orig.substring(0, orig.lastIndexOf(this._separator));\n            suffix = parseInt(orig.substring(base.length - 1));\n            if (isNaN(suffix)) {\n                base = orig;\n                suffix = 0;\n            }\n        }\n        else {\n            base = orig;\n            suffix = 0;\n        }\n        if (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\n            suffix = this._next_suffix[base];\n        }\n        // Find the first suffixed name that does\n        // not collide with other names.\n        do {\n            suffix++;\n            new_name = base.concat(this._separator, suffix.toString());\n        } while (assetsDictionary.hasOwnProperty(new_name));\n        this._next_suffix[base] = suffix;\n        this._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\n    };\n    NumSuffixConflictStrategy.prototype.create = function () {\n        return new NumSuffixConflictStrategy(this._separator);\n    };\n    return NumSuffixConflictStrategy;\n}(ConflictStrategyBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = NumSuffixConflictStrategy;\n\n},{\"awayjs-core/lib/library/ConflictStrategyBase\":\"awayjs-core/lib/library/ConflictStrategyBase\"}],\"awayjs-core/lib/library\":[function(require,module,exports){\n\"use strict\";\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nexports.AbstractionBase = AbstractionBase_1.default;\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nexports.AssetBase = AssetBase_1.default;\nvar AssetLibrary_1 = require(\"awayjs-core/lib/library/AssetLibrary\");\nexports.AssetLibrary = AssetLibrary_1.default;\nvar AssetLibraryBundle_1 = require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nexports.AssetLibraryBundle = AssetLibraryBundle_1.default;\nvar AssetLibraryIterator_1 = require(\"awayjs-core/lib/library/AssetLibraryIterator\");\nexports.AssetLibraryIterator = AssetLibraryIterator_1.default;\nvar ConflictPrecedence_1 = require(\"awayjs-core/lib/library/ConflictPrecedence\");\nexports.ConflictPrecedence = ConflictPrecedence_1.default;\nvar ConflictStrategy_1 = require(\"awayjs-core/lib/library/ConflictStrategy\");\nexports.ConflictStrategy = ConflictStrategy_1.default;\nvar ConflictStrategyBase_1 = require(\"awayjs-core/lib/library/ConflictStrategyBase\");\nexports.ConflictStrategyBase = ConflictStrategyBase_1.default;\nvar ErrorConflictStrategy_1 = require(\"awayjs-core/lib/library/ErrorConflictStrategy\");\nexports.ErrorConflictStrategy = ErrorConflictStrategy_1.default;\nvar IDUtil_1 = require(\"awayjs-core/lib/library/IDUtil\");\nexports.IDUtil = IDUtil_1.default;\nvar IgnoreConflictStrategy_1 = require(\"awayjs-core/lib/library/IgnoreConflictStrategy\");\nexports.IgnoreConflictStrategy = IgnoreConflictStrategy_1.default;\nvar Loader_1 = require(\"awayjs-core/lib/library/Loader\");\nexports.Loader = Loader_1.default;\nvar LoaderContext_1 = require(\"awayjs-core/lib/library/LoaderContext\");\nexports.LoaderContext = LoaderContext_1.default;\nvar LoaderInfo_1 = require(\"awayjs-core/lib/library/LoaderInfo\");\nexports.LoaderInfo = LoaderInfo_1.default;\nvar NumSuffixConflictStrategy_1 = require(\"awayjs-core/lib/library/NumSuffixConflictStrategy\");\nexports.NumSuffixConflictStrategy = NumSuffixConflictStrategy_1.default;\n\n},{\"awayjs-core/lib/library/AbstractionBase\":\"awayjs-core/lib/library/AbstractionBase\",\"awayjs-core/lib/library/AssetBase\":\"awayjs-core/lib/library/AssetBase\",\"awayjs-core/lib/library/AssetLibrary\":\"awayjs-core/lib/library/AssetLibrary\",\"awayjs-core/lib/library/AssetLibraryBundle\":\"awayjs-core/lib/library/AssetLibraryBundle\",\"awayjs-core/lib/library/AssetLibraryIterator\":\"awayjs-core/lib/library/AssetLibraryIterator\",\"awayjs-core/lib/library/ConflictPrecedence\":\"awayjs-core/lib/library/ConflictPrecedence\",\"awayjs-core/lib/library/ConflictStrategy\":\"awayjs-core/lib/library/ConflictStrategy\",\"awayjs-core/lib/library/ConflictStrategyBase\":\"awayjs-core/lib/library/ConflictStrategyBase\",\"awayjs-core/lib/library/ErrorConflictStrategy\":\"awayjs-core/lib/library/ErrorConflictStrategy\",\"awayjs-core/lib/library/IDUtil\":\"awayjs-core/lib/library/IDUtil\",\"awayjs-core/lib/library/IgnoreConflictStrategy\":\"awayjs-core/lib/library/IgnoreConflictStrategy\",\"awayjs-core/lib/library/Loader\":\"awayjs-core/lib/library/Loader\",\"awayjs-core/lib/library/LoaderContext\":\"awayjs-core/lib/library/LoaderContext\",\"awayjs-core/lib/library/LoaderInfo\":\"awayjs-core/lib/library/LoaderInfo\",\"awayjs-core/lib/library/NumSuffixConflictStrategy\":\"awayjs-core/lib/library/NumSuffixConflictStrategy\"}],\"awayjs-core/lib/managers/AudioChannel\":[function(require,module,exports){\n\"use strict\";\nvar AudioChannel = (function () {\n    function AudioChannel() {\n        var _this = this;\n        this._isPlaying = false;\n        this._isLooping = false;\n        this._audioCtx = AudioChannel._audioCtx || (AudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n        this._gainNode = this._audioCtx.createGain();\n        this._gainNode = this._audioCtx.createGain();\n        this._gainNode.connect(this._audioCtx.destination);\n        this._audio = new Audio();\n        this._audio.onended = function (event) { return _this._onEnded(event); };\n        this._audio[\"crossOrigin\"] = \"anonymous\";\n        var source = this._audioCtx.createMediaElementSource(this._audio);\n        source.connect(this._gainNode);\n    }\n    Object.defineProperty(AudioChannel.prototype, \"currentTime\", {\n        get: function () {\n            return this._audio.currentTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AudioChannel.prototype, \"volume\", {\n        get: function () {\n            return this._gainNode.gain.value;\n        },\n        set: function (value) {\n            this._gainNode.gain.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AudioChannel.prototype.isPlaying = function () {\n        return this._isPlaying;\n    };\n    AudioChannel.prototype.isLooping = function () {\n        return this._isLooping;\n    };\n    AudioChannel.prototype.isDecoding = function () {\n        return false;\n    };\n    AudioChannel.prototype.play = function (url, offset, loop) {\n        if (offset === void 0) { offset = 0; }\n        if (loop === void 0) { loop = false; }\n        this._isPlaying = true;\n        this._isLooping = loop;\n        this._audio.src = url;\n        this._audio.loop = loop;\n        this._audio.currentTime = offset;\n        this._audio.play();\n    };\n    AudioChannel.prototype.stop = function () {\n        this._audio.pause();\n        this._isPlaying = false;\n        this._isLooping = false;\n    };\n    AudioChannel.prototype._onEnded = function (event) {\n        this.stop();\n    };\n    AudioChannel.maxChannels = 16;\n    AudioChannel._channels = new Array();\n    return AudioChannel;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AudioChannel;\n\n},{}],\"awayjs-core/lib/managers/AudioManager\":[function(require,module,exports){\n\"use strict\";\nvar StreamingAudioChannel_1 = require(\"awayjs-core/lib/managers/StreamingAudioChannel\");\nvar WebAudioChannel_1 = require(\"awayjs-core/lib/managers/WebAudioChannel\");\nvar AudioManager = (function () {\n    function AudioManager() {\n    }\n    AudioManager.getChannel = function (byteLength) {\n        //choose best audio channel by bytelength\n        var channelClass = (byteLength > 50000) ? StreamingAudioChannel_1.default : WebAudioChannel_1.default;\n        var i = 0;\n        while (channelClass._channels[i] && channelClass._channels[i].isPlaying())\n            i++;\n        if (i == channelClass.maxChannels) {\n            //pick the oldest channel to reuse, ignoring looping channels\n            var channel;\n            var len = channelClass._channels.length;\n            for (var j = 0; j < len; j++) {\n                channel = channelClass._channels[j];\n                if (!channel.isLooping() && !channel.isDecoding()) {\n                    channelClass._channels.push(channelClass._channels.splice(j, 1)[0]);\n                    channel.stop();\n                    return channel;\n                }\n            }\n            //do not return channel until one is freed up\n            return null;\n        }\n        return channelClass._channels[i] || (channelClass._channels[i] = new channelClass());\n    };\n    return AudioManager;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AudioManager;\n\n},{\"awayjs-core/lib/managers/StreamingAudioChannel\":\"awayjs-core/lib/managers/StreamingAudioChannel\",\"awayjs-core/lib/managers/WebAudioChannel\":\"awayjs-core/lib/managers/WebAudioChannel\"}],\"awayjs-core/lib/managers/EventAudioChannel\":[function(require,module,exports){\n\"use strict\";\nvar ParserUtils_1 = require(\"awayjs-core/lib/parsers/ParserUtils\");\nvar EventAudioChannel = (function () {\n    function EventAudioChannel() {\n        var _this = this;\n        this._isPlaying = false;\n        this._isLooping = false;\n        this._startTime = 0;\n        this._audio = new Audio();\n        this._audio.ontimeupdate = function (event) { return _this._onTimeUpdate(event); };\n    }\n    Object.defineProperty(EventAudioChannel.prototype, \"duration\", {\n        get: function () {\n            return this._duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EventAudioChannel.prototype, \"currentTime\", {\n        get: function () {\n            return this._audio.currentTime - this._startTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EventAudioChannel.prototype, \"volume\", {\n        get: function () {\n            return this._volume;\n        },\n        set: function (value) {\n            if (this._volume == value)\n                return;\n            this._volume = value;\n            this._audio.volume = this._volume;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventAudioChannel.prototype.isPlaying = function () {\n        return this._isPlaying;\n    };\n    EventAudioChannel.prototype.isLooping = function () {\n        return this._isLooping;\n    };\n    EventAudioChannel.prototype.isDecoding = function () {\n        return false;\n    };\n    EventAudioChannel.prototype.play = function (buffer, offset, loop, id) {\n        if (offset === void 0) { offset = 0; }\n        if (loop === void 0) { loop = false; }\n        if (id === void 0) { id = 0; }\n        this._isPlaying = true;\n        this._isLooping = loop;\n        this._audio.src = EventAudioChannel._base64Cache[id] || (EventAudioChannel._base64Cache[id] = ParserUtils_1.default.arrayBufferToBase64(buffer, \"audio/mp3\"));\n        this._audio.loop = this._isLooping;\n        this._audio.currentTime = offset;\n        this._audio.play();\n    };\n    EventAudioChannel.prototype.stop = function () {\n        this._audio.pause();\n        this._isPlaying = false;\n        this._isLooping = false;\n    };\n    EventAudioChannel.prototype._onTimeUpdate = function (event) {\n        //TODO: more accurate end detection\n        if (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\n            this.stop();\n    };\n    EventAudioChannel.maxChannels = 4;\n    EventAudioChannel._channels = new Array();\n    EventAudioChannel._base64Cache = new Object();\n    return EventAudioChannel;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = EventAudioChannel;\n\n},{\"awayjs-core/lib/parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\"}],\"awayjs-core/lib/managers/IAudioChannelClass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/managers/IAudioChannel\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/managers/StreamingAudioChannel\":[function(require,module,exports){\n\"use strict\";\nvar StreamingAudioChannel = (function () {\n    function StreamingAudioChannel() {\n        var _this = this;\n        this._isPlaying = false;\n        this._isLooping = false;\n        this._startTime = 0;\n        this._sourceOpenDelegate = function (event) { return _this._sourceOpen(event); };\n        this._updateEndDelegate = function (event) { return _this._updateEnd(event); };\n        this._audio = new Audio();\n        this._audio.ontimeupdate = function (event) { return _this._onTimeUpdate(event); };\n        this._updateSource();\n    }\n    Object.defineProperty(StreamingAudioChannel.prototype, \"duration\", {\n        get: function () {\n            return this._duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StreamingAudioChannel.prototype, \"currentTime\", {\n        get: function () {\n            return this._audio.currentTime - this._startTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StreamingAudioChannel.prototype, \"volume\", {\n        get: function () {\n            return this._volume;\n        },\n        set: function (value) {\n            if (this._volume == value)\n                return;\n            this._volume = value;\n            this._audio.volume = this._volume;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StreamingAudioChannel.prototype.isPlaying = function () {\n        return this._isPlaying;\n    };\n    StreamingAudioChannel.prototype.isLooping = function () {\n        return this._isLooping;\n    };\n    StreamingAudioChannel.prototype.isDecoding = function () {\n        return false;\n    };\n    StreamingAudioChannel.prototype.play = function (buffer, offset, loop) {\n        if (offset === void 0) { offset = 0; }\n        if (loop === void 0) { loop = false; }\n        this._isPlaying = true;\n        if (this._isLooping || this._isLooping != loop) {\n            this._isLooping = loop;\n            this._sourceDirty = true;\n        }\n        if (this._sourceDirty)\n            this._updateSource();\n        this._buffer = buffer;\n        this._offset = offset;\n        if (!this._isQueuing && !this._isOpening)\n            this._queueBuffer();\n    };\n    StreamingAudioChannel.prototype.stop = function () {\n        this._audio.pause();\n        this._isPlaying = false;\n        this._isLooping = false;\n    };\n    StreamingAudioChannel.prototype._sourceOpen = function (event) {\n        this._isOpening = false;\n        //TODO: find out how in the name of all that is holy how this can be executed more than once on a MediaSource object\n        if (this._mediaSource.activeSourceBuffers.length) {\n            console.log(\"ERR: double sourceopen event called\");\n            return;\n        }\n        this._sourceBuffer = this._mediaSource.addSourceBuffer('audio/mpeg');\n        this._sourceBuffer.addEventListener(\"updateend\", this._updateEndDelegate);\n        if (this._isPlaying)\n            this._queueBuffer();\n    };\n    StreamingAudioChannel.prototype._queueBuffer = function () {\n        this._isQueuing = true;\n        this._startTime = this._sourceBuffer.timestampOffset;\n        this._sourceBuffer.appendBuffer(this._buffer);\n    };\n    StreamingAudioChannel.prototype._updateEnd = function (event) {\n        this._isQueuing = false;\n        if (this._isLooping)\n            this._mediaSource.endOfStream();\n        this._duration = this._sourceBuffer.timestampOffset - this._startTime;\n        this._audio.currentTime = this._startTime + this._offset;\n        this._audio.play();\n    };\n    StreamingAudioChannel.prototype._onTimeUpdate = function (event) {\n        //TODO: more accurate end detection\n        if (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\n            this.stop();\n    };\n    StreamingAudioChannel.prototype._updateSource = function () {\n        if (this._mediaSource)\n            this._disposeSource();\n        this._isQueuing = false;\n        this._isOpening = true;\n        this._mediaSource = new MediaSource();\n        this._mediaSource.addEventListener(\"sourceopen\", this._sourceOpenDelegate);\n        this._urlString = URL.createObjectURL(this._mediaSource);\n        this._audio.src = this._urlString;\n        this._audio.loop = this._isLooping;\n        this._sourceDirty = false;\n    };\n    StreamingAudioChannel.prototype._disposeSource = function () {\n        if (!this._isOpening) {\n            if (this._sourceBuffer.timestampOffset)\n                this._sourceBuffer.remove(0, this._sourceBuffer.timestampOffset);\n            this._sourceBuffer.removeEventListener(\"updateend\", this._updateEndDelegate);\n            this._mediaSource.removeSourceBuffer(this._sourceBuffer);\n            delete this._sourceBuffer;\n            this._sourceBuffer = null;\n        }\n        this._mediaSource.removeEventListener(\"sourceopen\", this._sourceOpenDelegate);\n        URL.revokeObjectURL(this._urlString);\n        delete this._mediaSource;\n        this._mediaSource = null;\n    };\n    StreamingAudioChannel.maxChannels = 4;\n    StreamingAudioChannel._channels = new Array();\n    return StreamingAudioChannel;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StreamingAudioChannel;\n\n},{}],\"awayjs-core/lib/managers/WebAudioChannel\":[function(require,module,exports){\n\"use strict\";\nvar WebAudioChannel = (function () {\n    function WebAudioChannel() {\n        var _this = this;\n        this._isPlaying = false;\n        this._isLooping = false;\n        this._isDecoding = false;\n        this._volume = 1;\n        this._startTime = 0;\n        this._audioCtx = WebAudioChannel._audioCtx || (WebAudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n        this._gainNode = this._audioCtx.createGain();\n        this._gainNode.gain.value = this._volume;\n        this._gainNode.connect(this._audioCtx.destination);\n        this._onEndedDelegate = function (event) { return _this._onEnded(event); };\n    }\n    Object.defineProperty(WebAudioChannel.prototype, \"duration\", {\n        get: function () {\n            return this._duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebAudioChannel.prototype, \"currentTime\", {\n        get: function () {\n            return this._audioCtx.currentTime - this._startTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebAudioChannel.prototype, \"volume\", {\n        get: function () {\n            return this._volume;\n        },\n        set: function (value) {\n            if (this._volume == value)\n                return;\n            this._volume = value;\n            this._gainNode.gain.value = this._volume;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebAudioChannel.prototype.isPlaying = function () {\n        return this._isPlaying;\n    };\n    WebAudioChannel.prototype.isLooping = function () {\n        return this._isLooping;\n    };\n    WebAudioChannel.prototype.isDecoding = function () {\n        return this._isDecoding;\n    };\n    WebAudioChannel.prototype.play = function (buffer, offset, loop, id) {\n        var _this = this;\n        if (offset === void 0) { offset = 0; }\n        if (loop === void 0) { loop = false; }\n        if (id === void 0) { id = 0; }\n        this._isPlaying = true;\n        this._isLooping = loop;\n        this._currentTime = offset;\n        this._id = id;\n        this._isDecoding = true;\n        //fast path for short sounds\n        if (WebAudioChannel._decodeCache[id])\n            this._onDecodeComplete(WebAudioChannel._decodeCache[id]);\n        else if (!WebAudioChannel._errorCache[id])\n            this._audioCtx.decodeAudioData(buffer, function (buffer) { return _this._onDecodeComplete(buffer); }, function (event) { return _this._onError(event); });\n        else\n            this.stop();\n    };\n    WebAudioChannel.prototype.stop = function () {\n        if (!this._isPlaying)\n            return;\n        this._isPlaying = false;\n        this._isLooping = false;\n        this._isDecoding = false;\n        if (this._source)\n            this._disposeSource();\n    };\n    WebAudioChannel.prototype._onDecodeComplete = function (buffer) {\n        if (!this._isPlaying)\n            return;\n        this._isDecoding = false;\n        //if (buffer.duration < 2) //cache all buffers?\n        WebAudioChannel._decodeCache[this._id] = buffer;\n        if (this._source)\n            this._disposeSource();\n        this._source = this._audioCtx.createBufferSource();\n        this._source.loop = this._isLooping;\n        this._source.connect(this._gainNode);\n        this._source.buffer = buffer;\n        this._duration = buffer.duration;\n        this._startTime = this._audioCtx.currentTime - this._currentTime;\n        this._source.onended = this._onEndedDelegate;\n        try {\n            this._source.start(this._audioCtx.currentTime, this._currentTime);\n        }\n        catch (error) {\n            console.log(\"Error starting audio: \" + error);\n            this._disposeSource();\n        }\n    };\n    WebAudioChannel.prototype._onError = function (event) {\n        console.log(\"Error with decoding audio data\");\n        WebAudioChannel._errorCache[this._id] = true;\n        this.stop();\n    };\n    WebAudioChannel.prototype._onEnded = function (event) {\n        this.stop();\n    };\n    WebAudioChannel.prototype._disposeSource = function () {\n        //clean up\n        this._source.stop(this._audioCtx.currentTime);\n        this._source.onended = null;\n        this._source.disconnect();\n        delete this._source.buffer;\n        delete this._source;\n        this._source = null;\n    };\n    WebAudioChannel.maxChannels = 64;\n    WebAudioChannel._channels = new Array();\n    WebAudioChannel._decodeCache = new Object();\n    WebAudioChannel._errorCache = new Object();\n    return WebAudioChannel;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = WebAudioChannel;\n\n},{}],\"awayjs-core/lib/managers\":[function(require,module,exports){\n\"use strict\";\nvar AudioManager_1 = require(\"awayjs-core/lib/managers/AudioManager\");\nexports.AudioManager = AudioManager_1.default;\nvar StreamingAudioChannel_1 = require(\"awayjs-core/lib/managers/StreamingAudioChannel\");\nexports.StreamingAudioChannel = StreamingAudioChannel_1.default;\nvar WebAudioChannel_1 = require(\"awayjs-core/lib/managers/WebAudioChannel\");\nexports.WebAudioChannel = WebAudioChannel_1.default;\n\n},{\"awayjs-core/lib/managers/AudioManager\":\"awayjs-core/lib/managers/AudioManager\",\"awayjs-core/lib/managers/StreamingAudioChannel\":\"awayjs-core/lib/managers/StreamingAudioChannel\",\"awayjs-core/lib/managers/WebAudioChannel\":\"awayjs-core/lib/managers/WebAudioChannel\"}],\"awayjs-core/lib/net/CrossDomainPolicy\":[function(require,module,exports){\n\"use strict\";\nvar CrossDomainPolicy = (function () {\n    function CrossDomainPolicy() {\n    }\n    CrossDomainPolicy.ANONYMOUS = 'anonymous';\n    CrossDomainPolicy.USE_CREDENTIALS = 'use-credentials';\n    return CrossDomainPolicy;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CrossDomainPolicy;\n\n},{}],\"awayjs-core/lib/net/URLLoaderDataFormat\":[function(require,module,exports){\n\"use strict\";\nvar URLLoaderDataFormat = (function () {\n    function URLLoaderDataFormat() {\n    }\n    /**\n     * TEXT\n     * @type {string}\n     */\n    URLLoaderDataFormat.TEXT = \"text\";\n    /**\n     * Variables / Value Pairs\n     * @type {string}\n     */\n    URLLoaderDataFormat.VARIABLES = \"variables\";\n    /**\n     *\n     * @type {string}\n     */\n    URLLoaderDataFormat.BLOB = \"blob\";\n    /**\n     *\n     * @type {string}\n     */\n    URLLoaderDataFormat.ARRAY_BUFFER = \"arraybuffer\";\n    /**\n     *\n     * @type {string}\n     */\n    URLLoaderDataFormat.BINARY = \"binary\";\n    return URLLoaderDataFormat;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = URLLoaderDataFormat;\n\n},{}],\"awayjs-core/lib/net/URLLoader\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar URLLoaderDataFormat_1 = require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nvar URLRequestMethod_1 = require(\"awayjs-core/lib/net/URLRequestMethod\");\nvar URLVariables_1 = require(\"awayjs-core/lib/net/URLVariables\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar URLLoaderEvent_1 = require(\"awayjs-core/lib/events/URLLoaderEvent\");\n/**\n * The URLLoader is used to load a single file, as part of a resource.\n *\n * While URLLoader can be used directly, e.g. to create a third-party asset\n * management system, it's recommended to use any of the classes Loader3D, Loader\n * and AssetLibrary instead in most cases.\n *\n * @see Loader\n * @see away.library.AssetLibrary\n */\nvar URLLoader = (function (_super) {\n    __extends(URLLoader, _super);\n    /**\n     * Creates a new URLLoader object.\n     */\n    function URLLoader() {\n        _super.call(this);\n        this._bytesLoaded = 0;\n        this._bytesTotal = 0;\n        this._dataFormat = URLLoaderDataFormat_1.default.TEXT;\n        this._loadError = false;\n    }\n    Object.defineProperty(URLLoader.prototype, \"url\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._request ? this._request.url : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URLLoader.prototype, \"data\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URLLoader.prototype, \"dataFormat\", {\n        get: function () {\n            return this._dataFormat;\n        },\n        /**\n         *\n         * URLLoaderDataFormat.BINARY\n         * URLLoaderDataFormat.TEXT\n         * URLLoaderDataFormat.VARIABLES\n         *\n         * @param format\n         */\n        set: function (format) {\n            this._dataFormat = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URLLoader.prototype, \"bytesLoaded\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._bytesLoaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URLLoader.prototype, \"bytesTotal\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._bytesTotal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Load a resource from a file.\n     *\n     * @param request The URLRequest object containing the URL of the object to be loaded.\n     */\n    URLLoader.prototype.load = function (request) {\n        this._request = request;\n        this.initXHR();\n        if (request.method === URLRequestMethod_1.default.POST)\n            this.postRequest(request);\n        else\n            this.getRequest(request);\n    };\n    URLLoader.prototype.isSupported = function () {\n        return window != null;\n    };\n    /**\n     *\n     */\n    URLLoader.prototype.close = function () {\n        this._XHR.abort();\n        this.disposeXHR();\n    };\n    /**\n     *\n     */\n    URLLoader.prototype.dispose = function () {\n        if (this._XHR)\n            this._XHR.abort();\n        this.disposeXHR();\n    };\n    /**\n     *\n     * @param xhr\n     * @param responseType\n     */\n    URLLoader.prototype.setResponseType = function (xhr, responseType) {\n        switch (responseType) {\n            case URLLoaderDataFormat_1.default.ARRAY_BUFFER:\n            case URLLoaderDataFormat_1.default.BLOB:\n            case URLLoaderDataFormat_1.default.TEXT:\n                xhr.responseType = responseType;\n                break;\n            case URLLoaderDataFormat_1.default.VARIABLES:\n                xhr.responseType = URLLoaderDataFormat_1.default.TEXT;\n                break;\n            case URLLoaderDataFormat_1.default.BINARY:\n                xhr.responseType = '';\n                break;\n            default:\n        }\n    };\n    /**\n     *\n     * @param request {URLRequest}\n     */\n    URLLoader.prototype.getRequest = function (request) {\n        try {\n            this._XHR.open(request.method, request.url, request.async);\n            this.setResponseType(this._XHR, this._dataFormat);\n            this._XHR.send(); // No data to send\n        }\n        catch (e /* <XMLHttpRequestException> */) {\n            this.handleXmlHttpRequestException(e);\n        }\n    };\n    /**\n     *\n     * @param request {URLRequest}\n     */\n    URLLoader.prototype.postRequest = function (request) {\n        this._loadError = false;\n        this._XHR.open(request.method, request.url, request.async);\n        if (request.data != null) {\n            if (request.data instanceof URLVariables_1.default) {\n                var urlVars = request.data;\n                try {\n                    this._XHR.responseType = 'text';\n                    this._XHR.send(urlVars.formData);\n                }\n                catch (e /* <XMLHttpRequestException> */) {\n                    this.handleXmlHttpRequestException(e);\n                }\n            }\n            else {\n                this.setResponseType(this._XHR, this._dataFormat);\n                if (request.data)\n                    this._XHR.send(request.data); // TODO: Test\n                else\n                    this._XHR.send(); // no data to send\n            }\n        }\n        else {\n            this._XHR.send(); // No data to send\n        }\n    };\n    /**\n     *\n     * @param error {XMLHttpRequestException}\n     */\n    URLLoader.prototype.handleXmlHttpRequestException = function (error /* <XMLHttpRequestException> */) {\n        switch (error.code) {\n            /******************************************************************************************************************************************************************************************************\n             *\n             *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\n             *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\n             *\n             ******************************************************************************************************************************************************************************************************/\n            case 101:\n                // Note: onLoadError event throws IO_ERROR event - this case is already Covered\n                break;\n        }\n    };\n    /**\n     *\n     */\n    URLLoader.prototype.initXHR = function () {\n        var _this = this;\n        if (!this._XHR) {\n            this._XHR = new XMLHttpRequest();\n            this._XHR.onloadstart = function (event) { return _this.onLoadStart(event); }; // loadstart\t        - When the request starts.\n            this._XHR.onprogress = function (event) { return _this.onProgress(event); }; // progress\t            - While loading and sending data.\n            this._XHR.onabort = function (event) { return _this.onAbort(event); }; // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n            this._XHR.onerror = function (event) { return _this.onLoadError(event); }; // error\t            - When the request has failed.\n            this._XHR.onload = function (event) { return _this.onLoadComplete(event); }; // load\t                - When the request has successfully completed.\n            this._XHR.ontimeout = function (event) { return _this.onTimeOut(event); }; // timeout\t            - When the author specified timeout has passed before the request could complete.\n            this._XHR.onloadend = function (event) { return _this.onLoadEnd(event); }; // loadend\t            - When the request has completed, regardless of whether or not it was successful.\n            this._XHR.onreadystatechange = function (event) { return _this.onReadyStateChange(event); }; // onreadystatechange   - When XHR state changes\n        }\n    };\n    /**\n     *\n     */\n    URLLoader.prototype.disposeXHR = function () {\n        if (this._XHR !== null) {\n            this._XHR.onloadstart = null;\n            this._XHR.onprogress = null;\n            this._XHR.onabort = null;\n            this._XHR.onerror = null;\n            this._XHR.onload = null;\n            this._XHR.ontimeout = null;\n            this._XHR.onloadend = null;\n            this._XHR = null;\n        }\n    };\n    /**\n     *\n     * @param source\n     */\n    URLLoader.prototype.decodeURLVariables = function (source) {\n        var result = new Object();\n        source = source.split(\"+\").join(\" \");\n        var tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n        while (tokens = re.exec(source))\n            result[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n        return result;\n    };\n    // XMLHttpRequest - Event Handlers\n    /**\n     * When XHR state changes\n     * @param event\n     */\n    URLLoader.prototype.onReadyStateChange = function (event) {\n        if (this._XHR.readyState == 4) {\n            this._status = this._XHR.status;\n            if (this._status == 404) {\n                this._loadError = true;\n                this.dispatchEvent(this._loadErrorEvent || (this._loadErrorEvent = new URLLoaderEvent_1.default(URLLoaderEvent_1.default.LOAD_ERROR, this)));\n            }\n            this.dispatchEvent(this._statusEvent || (this._statusEvent = new URLLoaderEvent_1.default(URLLoaderEvent_1.default.HTTP_STATUS, this)));\n        }\n    };\n    /**\n     * When the request has completed, regardless of whether or not it was successful.\n     * @param event\n     */\n    URLLoader.prototype.onLoadEnd = function (event) {\n        if (this._loadError === true)\n            return;\n    };\n    /**\n     * When the author specified timeout has passed before the request could complete.\n     * @param event\n     */\n    URLLoader.prototype.onTimeOut = function (event) {\n        //TODO: Timeout not currently implemented ( also not part of AS3 API )\n    };\n    /**\n     * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n     * @param event\n     */\n    URLLoader.prototype.onAbort = function (event) {\n        // TODO: investigate whether this needs to be an IOError\n    };\n    /**\n     * While loading and sending data.\n     * @param event\n     */\n    URLLoader.prototype.onProgress = function (event) {\n        this._bytesTotal = event.total;\n        this._bytesLoaded = event.loaded;\n        this.dispatchEvent(this._progressEvent || (this._progressEvent = new URLLoaderEvent_1.default(URLLoaderEvent_1.default.LOAD_PROGRESS, this)));\n    };\n    /**\n     * When the request starts.\n     * @param event\n     */\n    URLLoader.prototype.onLoadStart = function (event) {\n        this.dispatchEvent(this._loadStartEvent || (this._loadStartEvent = new URLLoaderEvent_1.default(URLLoaderEvent_1.default.LOAD_START, this)));\n    };\n    /**\n     * When the request has successfully completed.\n     * @param event\n     */\n    URLLoader.prototype.onLoadComplete = function (event) {\n        if (this._loadError === true)\n            return;\n        switch (this._dataFormat) {\n            case URLLoaderDataFormat_1.default.TEXT:\n                this._data = this._XHR.responseText;\n                break;\n            case URLLoaderDataFormat_1.default.VARIABLES:\n                this._data = this.decodeURLVariables(this._XHR.responseText);\n                break;\n            case URLLoaderDataFormat_1.default.BLOB:\n            case URLLoaderDataFormat_1.default.ARRAY_BUFFER:\n            case URLLoaderDataFormat_1.default.BINARY:\n                this._data = this._XHR.response;\n                break;\n            default:\n                this._data = this._XHR.responseText;\n                break;\n        }\n        this.dispatchEvent(this._loadCompleteEvent || (this._loadCompleteEvent = new URLLoaderEvent_1.default(URLLoaderEvent_1.default.LOAD_COMPLETE, this)));\n    };\n    /**\n     * When the request has failed. ( due to network issues ).\n     * @param event\n     */\n    URLLoader.prototype.onLoadError = function (event) {\n        this._loadError = true;\n        this.dispatchEvent(this._loadErrorEvent || (this._loadErrorEvent = new URLLoaderEvent_1.default(URLLoaderEvent_1.default.LOAD_ERROR, this)));\n    };\n    return URLLoader;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = URLLoader;\n\n},{\"awayjs-core/lib/events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"awayjs-core/lib/events/URLLoaderEvent\":\"awayjs-core/lib/events/URLLoaderEvent\",\"awayjs-core/lib/net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"awayjs-core/lib/net/URLRequestMethod\":\"awayjs-core/lib/net/URLRequestMethod\",\"awayjs-core/lib/net/URLVariables\":\"awayjs-core/lib/net/URLVariables\"}],\"awayjs-core/lib/net/URLRequestMethod\":[function(require,module,exports){\n\"use strict\";\nvar URLRequestMethod = (function () {\n    function URLRequestMethod() {\n    }\n    /**\n     *\n     * @type {string}\n     */\n    URLRequestMethod.POST = 'POST';\n    /**\n     *\n     * @type {string}\n     */\n    URLRequestMethod.GET = 'GET';\n    return URLRequestMethod;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = URLRequestMethod;\n\n},{}],\"awayjs-core/lib/net/URLRequest\":[function(require,module,exports){\n\"use strict\";\nvar URLRequestMethod_1 = require(\"awayjs-core/lib/net/URLRequestMethod\");\nvar URLRequest = (function () {\n    /**\n\n     * @param url\n     */\n    function URLRequest(url) {\n        if (url === void 0) { url = null; }\n        /**\n         *\n         * away.net.URLRequestMethod.GET\n         * away.net.URLRequestMethod.POST\n         *\n         * @type {string}\n         */\n        this.method = URLRequestMethod_1.default.GET;\n        /**\n         * Use asynchronous XMLHttpRequest\n         * @type {boolean}\n         */\n        this.async = true;\n        this._url = url;\n    }\n    Object.defineProperty(URLRequest.prototype, \"url\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return this._url;\n        },\n        /**\n         *\n         * @param value\n         */\n        set: function (value) {\n            this._url = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * dispose\n     */\n    URLRequest.prototype.dispose = function () {\n        this.data = null;\n        this._url = null;\n    };\n    return URLRequest;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = URLRequest;\n\n},{\"awayjs-core/lib/net/URLRequestMethod\":\"awayjs-core/lib/net/URLRequestMethod\"}],\"awayjs-core/lib/net/URLVariables\":[function(require,module,exports){\n\"use strict\";\nvar URLVariables = (function () {\n    /**\n     *\n     * @param source\n     */\n    function URLVariables(source) {\n        if (source === void 0) { source = null; }\n        this._variables = new Object();\n        if (source !== null)\n            this.decode(source);\n    }\n    /**\n     *\n     * @param source\n     */\n    URLVariables.prototype.decode = function (source) {\n        source = source.split(\"+\").join(\" \");\n        var tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n        while (tokens = re.exec(source))\n            this._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n    };\n    /**\n     *\n     * @returns {string}\n     */\n    URLVariables.prototype.toString = function () {\n        return '';\n    };\n    Object.defineProperty(URLVariables.prototype, \"variables\", {\n        /**\n         *\n         * @returns {Object}\n         */\n        get: function () {\n            return this._variables;\n        },\n        /**\n         *\n         * @returns {Object}\n         */\n        set: function (obj) {\n            this._variables = obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URLVariables.prototype, \"formData\", {\n        /**\n         *\n         * @returns {Object}\n         */\n        get: function () {\n            var fd = new FormData();\n            for (var s in this._variables)\n                fd.append(s, this._variables[s]);\n            return fd;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return URLVariables;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = URLVariables;\n\n},{}],\"awayjs-core/lib/net\":[function(require,module,exports){\n\"use strict\";\nvar CrossDomainPolicy_1 = require(\"awayjs-core/lib/net/CrossDomainPolicy\");\nexports.CrossDomainPolicy = CrossDomainPolicy_1.default;\nvar URLLoader_1 = require(\"awayjs-core/lib/net/URLLoader\");\nexports.URLLoader = URLLoader_1.default;\nvar URLLoaderDataFormat_1 = require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nexports.URLLoaderDataFormat = URLLoaderDataFormat_1.default;\nvar URLRequest_1 = require(\"awayjs-core/lib/net/URLRequest\");\nexports.URLRequest = URLRequest_1.default;\nvar URLRequestMethod_1 = require(\"awayjs-core/lib/net/URLRequestMethod\");\nexports.URLRequestMethod = URLRequestMethod_1.default;\nvar URLVariables_1 = require(\"awayjs-core/lib/net/URLVariables\");\nexports.URLVariables = URLVariables_1.default;\n\n},{\"awayjs-core/lib/net/CrossDomainPolicy\":\"awayjs-core/lib/net/CrossDomainPolicy\",\"awayjs-core/lib/net/URLLoader\":\"awayjs-core/lib/net/URLLoader\",\"awayjs-core/lib/net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"awayjs-core/lib/net/URLRequest\":\"awayjs-core/lib/net/URLRequest\",\"awayjs-core/lib/net/URLRequestMethod\":\"awayjs-core/lib/net/URLRequestMethod\",\"awayjs-core/lib/net/URLVariables\":\"awayjs-core/lib/net/URLVariables\"}],\"awayjs-core/lib/parsers/Image2DParser\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar URLLoaderDataFormat_1 = require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nvar ParserBase_1 = require(\"awayjs-core/lib/parsers/ParserBase\");\nvar ParserUtils_1 = require(\"awayjs-core/lib/parsers/ParserUtils\");\nvar ByteArray_1 = require(\"awayjs-core/lib/utils/ByteArray\");\n/**\n * Image2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nvar Image2DParser = (function (_super) {\n    __extends(Image2DParser, _super);\n    /**\n     * Creates a new Image2DParser object.\n     * @param uri The url or id of the data or file to be parsed.\n     * @param extra The holder for extra contextual data that the parser might need.\n     */\n    function Image2DParser() {\n        _super.call(this, URLLoaderDataFormat_1.default.BLOB);\n    }\n    /**\n     * Indicates whether or not a given file extension is supported by the parser.\n     * @param extension The file extension of a potential file to be parsed.\n     * @return Whether or not the given file type is supported.\n     */\n    Image2DParser.supportsType = function (extension) {\n        extension = extension.toLowerCase();\n        return extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\"; //|| extension == \"bmp\";//|| extension == \"atf\";\n    };\n    /**\n     * Tests whether a data block can be parsed by the parser.\n     * @param data The data block to potentially be parsed.\n     * @return Whether or not the given data is supported.\n     */\n    Image2DParser.supportsData = function (data) {\n        if (data instanceof HTMLImageElement)\n            return true;\n        if (!(data instanceof ByteArray_1.default))\n            return false;\n        var ba = data;\n        ba.position = 0;\n        if (ba.readUnsignedShort() == 0xd8ff)\n            return true; // JPEG, maybe check for \"JFIF\" as well?\n        ba.position = 0;\n        if (ba.readShort() == 0x424D)\n            return true; // BMP\n        ba.position = 1;\n        if (ba.readUTFBytes(3) == 'PNG')\n            return true;\n        ba.position = 0;\n        if (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\n            return true;\n        ba.position = 0;\n        if (ba.readUTFBytes(3) == 'ATF')\n            return true;\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Image2DParser.prototype._pProceedParsing = function () {\n        var _this = this;\n        var asset;\n        var sizeError = false;\n        if (this._loadingImage) {\n            return ParserBase_1.default.MORE_TO_PARSE;\n        }\n        else if (this._htmlImageElement) {\n            //if (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n            asset = ParserUtils_1.default.imageToBitmapImage2D(this._htmlImageElement, false);\n            this._pFinalizeAsset(asset, this._iFileName);\n        }\n        else if (this.data instanceof HTMLImageElement) {\n            var htmlImageElement = this.data;\n            //if (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\n            asset = ParserUtils_1.default.imageToBitmapImage2D(htmlImageElement, false);\n            this._pFinalizeAsset(asset, this._iFileName);\n        }\n        else if (this.data instanceof ByteArray_1.default) {\n            var ba = this.data;\n            ba.position = 0;\n            this._htmlImageElement = ParserUtils_1.default.byteArrayToImage(this.data);\n            if (!this._htmlImageElement.complete) {\n                this._htmlImageElement.onload = function (event) { return _this.onLoadComplete(event); };\n                this._loadingImage = true;\n                return ParserBase_1.default.MORE_TO_PARSE;\n            }\n            //if (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n            asset = ParserUtils_1.default.imageToBitmapImage2D(this._htmlImageElement, false);\n            this._pFinalizeAsset(asset, this._iFileName);\n        }\n        else if (this.data instanceof ArrayBuffer) {\n            this._htmlImageElement = ParserUtils_1.default.arrayBufferToImage(this.data);\n            asset = ParserUtils_1.default.imageToBitmapImage2D(this._htmlImageElement, false);\n            this._pFinalizeAsset(asset, this._iFileName);\n        }\n        else if (this.data instanceof Blob) {\n            this._htmlImageElement = ParserUtils_1.default.blobToImage(this.data);\n            this._htmlImageElement.onload = function (event) { return _this.onLoadComplete(event); };\n            this._loadingImage = true;\n            return ParserBase_1.default.MORE_TO_PARSE;\n        }\n        if (sizeError == true) {\n        }\n        this._pContent = asset;\n        return ParserBase_1.default.PARSING_DONE;\n    };\n    Image2DParser.prototype.onLoadComplete = function (event) {\n        this._loadingImage = false;\n    };\n    return Image2DParser;\n}(ParserBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Image2DParser;\n\n},{\"awayjs-core/lib/net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"awayjs-core/lib/parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\",\"awayjs-core/lib/parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\",\"awayjs-core/lib/utils/ByteArray\":\"awayjs-core/lib/utils/ByteArray\"}],\"awayjs-core/lib/parsers/ImageCubeParser\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BitmapImageCube_1 = require(\"awayjs-core/lib/image/BitmapImageCube\");\nvar URLLoaderDataFormat_1 = require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nvar URLRequest_1 = require(\"awayjs-core/lib/net/URLRequest\");\nvar ParserBase_1 = require(\"awayjs-core/lib/parsers/ParserBase\");\n/**\n * ImageCubeParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nvar ImageCubeParser = (function (_super) {\n    __extends(ImageCubeParser, _super);\n    /**\n     * Creates a new ImageCubeParser object.\n     * @param uri The url or id of the data or file to be parsed.\n     * @param extra The holder for extra contextual data that the parser might need.\n     */\n    function ImageCubeParser() {\n        _super.call(this, URLLoaderDataFormat_1.default.TEXT);\n    }\n    /**\n     * Indicates whether or not a given file extension is supported by the parser.\n     * @param extension The file extension of a potential file to be parsed.\n     * @return Whether or not the given file type is supported.\n     */\n    ImageCubeParser.supportsType = function (extension) {\n        extension = extension.toLowerCase();\n        return extension == \"cube\";\n    };\n    /**\n     * Tests whether a data block can be parsed by the parser.\n     * @param data The data block to potentially be parsed.\n     * @return Whether or not the given data is supported.\n     */\n    ImageCubeParser.supportsData = function (data) {\n        try {\n            var obj = JSON.parse(data);\n            if (obj)\n                return true;\n            return false;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageCubeParser.prototype._iResolveDependency = function (resourceDependency) {\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageCubeParser.prototype._iResolveDependencyFailure = function (resourceDependency) {\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageCubeParser.prototype._pProceedParsing = function () {\n        if (this._imgDependencyDictionary != null) {\n            var asset = new BitmapImageCube_1.default(this._getBitmapImage2D(ImageCubeParser.posX).width);\n            asset.draw(BitmapImageCube_1.default.posX, this._getBitmapImage2D(ImageCubeParser.posX));\n            asset.draw(BitmapImageCube_1.default.negX, this._getBitmapImage2D(ImageCubeParser.negX));\n            asset.draw(BitmapImageCube_1.default.posY, this._getBitmapImage2D(ImageCubeParser.posY));\n            asset.draw(BitmapImageCube_1.default.negY, this._getBitmapImage2D(ImageCubeParser.negY));\n            asset.draw(BitmapImageCube_1.default.posZ, this._getBitmapImage2D(ImageCubeParser.posZ));\n            asset.draw(BitmapImageCube_1.default.negZ, this._getBitmapImage2D(ImageCubeParser.negZ));\n            //clear dictionary\n            this._imgDependencyDictionary = null;\n            asset.name = this._iFileName;\n            this._pFinalizeAsset(asset, this._iFileName);\n            return ParserBase_1.default.PARSING_DONE;\n        }\n        try {\n            var json = JSON.parse(this.data);\n            var data = json.data;\n            var rec;\n            if (data.length != 6)\n                this._pDieWithError('ImageCubeParser: Error - cube texture should have exactly 6 images');\n            if (json) {\n                this._imgDependencyDictionary = new Object();\n                for (var c = 0; c < data.length; c++) {\n                    rec = data[c];\n                    this._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest_1.default(rec.image.toString()));\n                }\n                if (!this._validateCubeData()) {\n                    this._pDieWithError(\"ImageCubeParser: JSON data error - cubes require id of:   \\n\" + ImageCubeParser.posX + ', ' + ImageCubeParser.negX + ',  \\n' + ImageCubeParser.posY + ', ' + ImageCubeParser.negY + ',  \\n' + ImageCubeParser.posZ + ', ' + ImageCubeParser.negZ);\n                    return ParserBase_1.default.PARSING_DONE;\n                }\n                this._pPauseAndRetrieveDependencies();\n                return ParserBase_1.default.MORE_TO_PARSE;\n            }\n        }\n        catch (e) {\n            this._pDieWithError('CubeTexturePaser Error parsing JSON');\n        }\n        return ParserBase_1.default.PARSING_DONE;\n    };\n    ImageCubeParser.prototype._validateCubeData = function () {\n        return (this._imgDependencyDictionary[ImageCubeParser.posX] != null && this._imgDependencyDictionary[ImageCubeParser.negX] != null && this._imgDependencyDictionary[ImageCubeParser.posY] != null && this._imgDependencyDictionary[ImageCubeParser.negY] != null && this._imgDependencyDictionary[ImageCubeParser.posZ] != null && this._imgDependencyDictionary[ImageCubeParser.negZ] != null);\n    };\n    ImageCubeParser.prototype._getBitmapImage2D = function (name) {\n        var dependency = this._imgDependencyDictionary[name];\n        if (dependency)\n            return dependency.assets[0];\n        return null;\n    };\n    ImageCubeParser.posX = 'posX';\n    ImageCubeParser.negX = 'negX';\n    ImageCubeParser.posY = 'posY';\n    ImageCubeParser.negY = 'negY';\n    ImageCubeParser.posZ = 'posZ';\n    ImageCubeParser.negZ = 'negZ';\n    return ImageCubeParser;\n}(ParserBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ImageCubeParser;\n\n},{\"awayjs-core/lib/image/BitmapImageCube\":\"awayjs-core/lib/image/BitmapImageCube\",\"awayjs-core/lib/net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"awayjs-core/lib/net/URLRequest\":\"awayjs-core/lib/net/URLRequest\",\"awayjs-core/lib/parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\"}],\"awayjs-core/lib/parsers/ParserBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar ParserEvent_1 = require(\"awayjs-core/lib/events/ParserEvent\");\nvar TimerEvent_1 = require(\"awayjs-core/lib/events/TimerEvent\");\nvar ParserUtils_1 = require(\"awayjs-core/lib/parsers/ParserUtils\");\nvar ResourceDependency_1 = require(\"awayjs-core/lib/parsers/ResourceDependency\");\nvar ImageUtils_1 = require(\"awayjs-core/lib/utils/ImageUtils\");\nvar Timer_1 = require(\"awayjs-core/lib/utils/Timer\");\nvar getTimer_1 = require(\"awayjs-core/lib/utils/getTimer\");\n/**\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\n * supported by away.\n *\n * If used by <code>Loader</code> to automatically determine the parser type, two public static methods should\n * be implemented, with the following signatures:\n *\n * <code>public static supportsType(extension : string) : boolean</code>\n * Indicates whether or not a given file extension is supported by the parser.\n *\n * <code>public static supportsData(data : *) : boolean</code>\n * Tests whether a data block can be parsed by the parser.\n *\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\n * handle regardless of whether the object was loaded or not.\n *\n * @see Loader\n */\nvar ParserBase = (function (_super) {\n    __extends(ParserBase, _super);\n    /**\n     * Creates a new ParserBase object\n     * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\n     *\n     * @see away.loading.parsers.ParserDataFormat\n     */\n    function ParserBase(format) {\n        var _this = this;\n        _super.call(this);\n        this._materialMode = 0;\n        this._dataFormat = format;\n        this._dependencies = new Array();\n        this._pOnIntervalDelegate = function (event) { return _this._pOnInterval(event); };\n    }\n    //----------------------------------------------------------------------------------------------------------------------------------------------------------------\n    // TODO: add error checking for the following ( could cause a problem if this function is not implemented )\n    //----------------------------------------------------------------------------------------------------------------------------------------------------------------\n    // Needs to be implemented in all Parsers (\n    //<code>public static supportsType(extension : string) : boolean</code>\n    //* Indicates whether or not a given file extension is supported by the parser.\n    //----------------------------------------------------------------------------------------------------------------------------------------------------------------\n    ParserBase.supportsType = function (extension) {\n        throw new AbstractMethodError_1.default();\n    };\n    Object.defineProperty(ParserBase.prototype, \"content\", {\n        /* Protected */\n        get: function () {\n            return this._pContent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Validates a bitmapData loaded before assigning to a default BitmapMaterial\n     */\n    ParserBase.prototype.isBitmapImage2DValid = function (bitmapImage2D) {\n        var isValid = ImageUtils_1.default.isImage2DValid(bitmapImage2D);\n        if (!isValid) {\n            console.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\n        }\n        return isValid;\n    };\n    Object.defineProperty(ParserBase.prototype, \"parsingFailure\", {\n        get: function () {\n            return this._parsingFailure;\n        },\n        set: function (b) {\n            this._parsingFailure = b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserBase.prototype, \"parsingPaused\", {\n        get: function () {\n            return this._parsingPaused;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserBase.prototype, \"parsingComplete\", {\n        get: function () {\n            return this._parsingComplete;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserBase.prototype, \"materialMode\", {\n        get: function () {\n            return this._materialMode;\n        },\n        set: function (newMaterialMode) {\n            this._materialMode = newMaterialMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserBase.prototype, \"data\", {\n        get: function () {\n            return this._data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserBase.prototype, \"dataFormat\", {\n        /**\n         * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\n         */\n        get: function () {\n            return this._dataFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\n     * the parser will periodically stop parsing so that the AVM may proceed to the\n     * next frame.\n     *\n     * @param data The untyped data object in which the loaded data resides.\n     * @param frameLimit number of milliseconds of parsing allowed per frame. The\n     * actual time spent on a frame can exceed this number since time-checks can\n     * only be performed between logical sections of the parsing procedure.\n     */\n    ParserBase.prototype.parseAsync = function (data, frameLimit) {\n        if (frameLimit === void 0) { frameLimit = 30; }\n        this._data = data;\n        this._pStartParsing(frameLimit);\n    };\n    Object.defineProperty(ParserBase.prototype, \"dependencies\", {\n        /**\n         * A list of dependencies that need to be loaded and resolved for the object being parsed.\n         */\n        get: function () {\n            return this._dependencies;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\n     * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\n     * dependency should be a member of the dependencies property.\n     *\n     * @param resourceDependency The dependency to be resolved.\n     */\n    ParserBase.prototype._iResolveDependency = function (resourceDependency) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Resolve a dependency loading failure. Used by parser to eventually provide a default map\n     *\n     * @param resourceDependency The dependency to be resolved.\n     */\n    ParserBase.prototype._iResolveDependencyFailure = function (resourceDependency) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Resolve a dependency name\n     *\n     * @param resourceDependency The dependency to be resolved.\n     */\n    ParserBase.prototype._iResolveDependencyName = function (resourceDependency, asset) {\n        return asset.name;\n    };\n    ParserBase.prototype._iResumeParsing = function () {\n        this._parsingPaused = false;\n        if (this._timer)\n            this._timer.start();\n        //get started!\n        if (!this._isParsing)\n            this._pOnInterval();\n    };\n    ParserBase.prototype._pFinalizeAsset = function (asset, name) {\n        if (name === void 0) { name = null; }\n        var type_event;\n        var type_name;\n        if (name != null)\n            asset.name = name;\n        // If the asset has no name, give it\n        // a per-type default name.\n        if (!asset.name)\n            asset.name = asset.assetType;\n        this.dispatchEvent(new AssetEvent_1.default(AssetEvent_1.default.ASSET_COMPLETE, asset));\n    };\n    /**\n     * Parse the next block of data.\n     * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\n     * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\n     */\n    ParserBase.prototype._pProceedParsing = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    ParserBase.prototype._pDieWithError = function (message) {\n        if (message === void 0) { message = 'Unknown parsing error'; }\n        if (this._timer) {\n            this._timer.removeEventListener(TimerEvent_1.default.TIMER, this._pOnIntervalDelegate);\n            this._timer.stop();\n            this._timer = null;\n        }\n        this.dispatchEvent(new ParserEvent_1.default(ParserEvent_1.default.PARSE_ERROR, message));\n    };\n    ParserBase.prototype._pAddDependency = function (id, req, retrieveAsRawData, data, suppressErrorEvents, sub_id) {\n        if (retrieveAsRawData === void 0) { retrieveAsRawData = false; }\n        if (data === void 0) { data = null; }\n        if (suppressErrorEvents === void 0) { suppressErrorEvents = false; }\n        if (sub_id === void 0) { sub_id = 0; }\n        var dependency = new ResourceDependency_1.default(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents, sub_id);\n        this._dependencies.push(dependency);\n        return dependency;\n    };\n    ParserBase.prototype._pPauseAndRetrieveDependencies = function () {\n        this._pPauseParsing();\n        this.dispatchEvent(new ParserEvent_1.default(ParserEvent_1.default.READY_FOR_DEPENDENCIES));\n    };\n    ParserBase.prototype._pPauseParsing = function () {\n        if (this._timer)\n            this._timer.stop();\n        this._parsingPaused = true;\n    };\n    /**\n     * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\n     * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\n     */\n    ParserBase.prototype._pHasTime = function () {\n        return ((getTimer_1.default() - this._lastFrameTime) < this._frameLimit);\n    };\n    /**\n     * Called when the parsing pause interval has passed and parsing can proceed.\n     */\n    ParserBase.prototype._pOnInterval = function (event) {\n        if (event === void 0) { event = null; }\n        this._lastFrameTime = getTimer_1.default();\n        this._isParsing = true;\n        if (this._pProceedParsing() && !this._parsingFailure)\n            this._pFinishParsing();\n        this._isParsing = false;\n    };\n    /**\n     * Initializes the parsing of data.\n     * @param frameLimit The maximum duration of a parsing session.\n     */\n    ParserBase.prototype._pStartParsing = function (frameLimit) {\n        this._frameLimit = frameLimit;\n        this._timer = new Timer_1.default(this._frameLimit, 0);\n        this._timer.addEventListener(TimerEvent_1.default.TIMER, this._pOnIntervalDelegate);\n        this._timer.start();\n        //get started!\n        this._pOnInterval();\n    };\n    /**\n     * Finish parsing the data.\n     */\n    ParserBase.prototype._pFinishParsing = function () {\n        if (this._timer) {\n            this._timer.removeEventListener(TimerEvent_1.default.TIMER, this._pOnIntervalDelegate);\n            this._timer.stop();\n        }\n        this._timer = null;\n        this._parsingComplete = true;\n        this._isParsing = false;\n        this.dispatchEvent(new ParserEvent_1.default(ParserEvent_1.default.PARSE_COMPLETE));\n    };\n    /**\n     *\n     * @returns {string}\n     * @private\n     */\n    ParserBase.prototype._pGetTextData = function () {\n        return ParserUtils_1.default.toString(this._data);\n    };\n    /**\n     *\n     * @returns {ByteArray}\n     * @private\n     */\n    ParserBase.prototype._pGetByteData = function () {\n        return ParserUtils_1.default.toByteArray(this._data);\n    };\n    /**\n     *\n     * @returns {any}\n     * @private\n     */\n    ParserBase.prototype._pGetData = function () {\n        return this._data;\n    };\n    /**\n     * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\n     */\n    ParserBase.PARSING_DONE = true;\n    /* Protected */\n    /**\n     * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\n     */\n    ParserBase.MORE_TO_PARSE = false;\n    return ParserBase;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParserBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"awayjs-core/lib/events/AssetEvent\":\"awayjs-core/lib/events/AssetEvent\",\"awayjs-core/lib/events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"awayjs-core/lib/events/ParserEvent\":\"awayjs-core/lib/events/ParserEvent\",\"awayjs-core/lib/events/TimerEvent\":\"awayjs-core/lib/events/TimerEvent\",\"awayjs-core/lib/parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\",\"awayjs-core/lib/parsers/ResourceDependency\":\"awayjs-core/lib/parsers/ResourceDependency\",\"awayjs-core/lib/utils/ImageUtils\":\"awayjs-core/lib/utils/ImageUtils\",\"awayjs-core/lib/utils/Timer\":\"awayjs-core/lib/utils/Timer\",\"awayjs-core/lib/utils/getTimer\":\"awayjs-core/lib/utils/getTimer\"}],\"awayjs-core/lib/parsers/ParserDataFormat\":[function(require,module,exports){\n\"use strict\";\n/**\n * An enumeration providing values to describe the data format of parsed data.\n */\nvar ParserDataFormat = (function () {\n    function ParserDataFormat() {\n    }\n    /**\n     * Describes the format of a binary file.\n     */\n    ParserDataFormat.BINARY = \"binary\";\n    /**\n     * Describes the format of a plain text file.\n     */\n    ParserDataFormat.PLAIN_TEXT = \"plainText\";\n    /**\n     * Describes the format of an image file\n     */\n    ParserDataFormat.IMAGE = \"image\";\n    return ParserDataFormat;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParserDataFormat;\n\n},{}],\"awayjs-core/lib/parsers/ParserUtils\":[function(require,module,exports){\n\"use strict\";\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nvar ByteArray_1 = require(\"awayjs-core/lib/utils/ByteArray\");\nvar ParserUtils = (function () {\n    function ParserUtils() {\n    }\n    ParserUtils.arrayBufferToBase64 = function (data, mimeType) {\n        var byteStr = '';\n        var bytes = new Uint8Array(data);\n        var len = bytes.byteLength;\n        for (var i = 0; i < len; i++)\n            byteStr += String.fromCharCode(bytes[i]);\n        var base64Image = window.btoa(byteStr);\n        return 'data:' + mimeType + ';base64,' + base64Image;\n    };\n    ParserUtils.arrayBufferToAudio = function (data, fileType) {\n        var str = ParserUtils.arrayBufferToBase64(data, 'audio/' + fileType);\n        var audio = new Audio();\n        audio.src = str;\n        return audio;\n    };\n    /**\n     * Converts an ArrayBuffer to a base64 string\n     *\n     * @param image data as a ByteArray\n     *\n     * @return HTMLImageElement\n     *\n     */\n    ParserUtils.arrayBufferToImage = function (data) {\n        var str = ParserUtils.arrayBufferToBase64(data, 'image/png');\n        var img = new Image();\n        img.src = str;\n        return img;\n    };\n    /**\n     * Converts an ByteArray to an Image - returns an HTMLImageElement\n     *\n     * @param image data as a ByteArray\n     *\n     * @return HTMLImageElement\n     *\n     */\n    ParserUtils.byteArrayToImage = function (data) {\n        var str = ParserUtils.arrayBufferToBase64(data.arraybytes, 'image/png');\n        var img = new Image();\n        img.src = str;\n        return img;\n    };\n    ParserUtils.byteArrayToAudio = function (data, filetype) {\n        var str = ParserUtils.arrayBufferToBase64(data.arraybytes, 'audio/' + filetype);\n        var audio = new Audio();\n        audio.src = str;\n        return audio;\n    };\n    /**\n     * Converts an Blob to an Image - returns an HTMLImageElement\n     *\n     * @param image data as a Blob\n     *\n     * @return HTMLImageElement\n     *\n     */\n    ParserUtils.blobToImage = function (data) {\n        var URLObj = window['URL'] || window['webkitURL'];\n        var src = URLObj.createObjectURL(data);\n        var img = new Image();\n        img.src = src;\n        return img;\n    };\n    /**\n     * Converts an Blob to audio - returns an HTMLAudioElement\n     *\n     * @param audio data as a Blob\n     *\n     * @return HTMLAudioElement\n     *\n     */\n    ParserUtils.blobToAudio = function (data) {\n        var URLObj = window['URL'] || window['webkitURL'];\n        var src = URLObj.createObjectURL(data);\n        var img = new Audio();\n        img.src = src;\n        return img;\n    };\n    /**\n     *\n     */\n    ParserUtils.imageToBitmapImage2D = function (img, powerOfTwo) {\n        if (powerOfTwo === void 0) { powerOfTwo = true; }\n        var bitmapData = new BitmapImage2D_1.default(img.width, img.height, true, null, powerOfTwo);\n        bitmapData.draw(img);\n        return bitmapData;\n    };\n    /**\n     * Returns a object as ByteArray, if possible.\n     *\n     * @param data The object to return as ByteArray\n     *\n     * @return The ByteArray or null\n     *\n     */\n    ParserUtils.toByteArray = function (data) {\n        var b = new ByteArray_1.default();\n        b.setArrayBuffer(data);\n        return b;\n    };\n    /**\n     * Returns a object as String, if possible.\n     *\n     * @param data The object to return as String\n     * @param length The length of the returned String\n     *\n     * @return The String or null\n     *\n     */\n    ParserUtils.toString = function (data, length) {\n        if (length === void 0) { length = 0; }\n        if (typeof data === 'string') {\n            var s = data;\n            if (s['substr'] != null)\n                return s.substr(0, s.length);\n        }\n        if (data instanceof ByteArray_1.default) {\n            var ba = data;\n            ba.position = 0;\n            return ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\n        }\n        return null;\n        /*\n         var ba:ByteArray;\n\n         length ||= uint.MAX_VALUE;\n\n         if (data is String)\n         return String(data).substr(0, length);\n\n         ba = toByteArray(data);\n         if (ba) {\n         ba.position = 0;\n         return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\n         }\n\n         return null;\n\n         */\n    };\n    return ParserUtils;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParserUtils;\n\n},{\"awayjs-core/lib/image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\",\"awayjs-core/lib/utils/ByteArray\":\"awayjs-core/lib/utils/ByteArray\"}],\"awayjs-core/lib/parsers/ResourceDependency\":[function(require,module,exports){\n\"use strict\";\n/**\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\n * required by a parser, used by ResourceLoadSession.\n *\n */\nvar ResourceDependency = (function () {\n    function ResourceDependency(id, request, data, parser, parentParser, retrieveAsRawData, suppressAssetEvents, sub_id) {\n        if (retrieveAsRawData === void 0) { retrieveAsRawData = false; }\n        if (suppressAssetEvents === void 0) { suppressAssetEvents = false; }\n        if (sub_id === void 0) { sub_id = 0; }\n        this._id = id;\n        this._sub_id = sub_id;\n        this._request = request;\n        this._data = data;\n        this._parser = parser;\n        this._parentParser = parentParser;\n        this._retrieveAsRawData = retrieveAsRawData;\n        this._suppressAssetEvents = suppressAssetEvents;\n        this._assets = new Array();\n        this._dependencies = new Array();\n    }\n    Object.defineProperty(ResourceDependency.prototype, \"id\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"sub_id\", {\n        get: function () {\n            return this._sub_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"request\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._request;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"data\", {\n        /**\n         * The data containing the dependency to be parsed, if the resource was already loaded.\n         */\n        get: function () {\n            return this._data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"parser\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._parser;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"parentParser\", {\n        /**\n         * The parser which is dependent on this ResourceDependency object.\n         */\n        get: function () {\n            return this._parentParser;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"retrieveAsRawData\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._retrieveAsRawData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"suppresAssetEvents\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._suppressAssetEvents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"assets\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._assets;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceDependency.prototype, \"dependencies\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._dependencies;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * Method to set data after having already created the dependency object, e.g. after load.\n     */\n    ResourceDependency.prototype._iSetData = function (data) {\n        this._data = data;\n    };\n    /**\n     * @private\n     *\n     */\n    ResourceDependency.prototype._iSetParser = function (parser) {\n        this._parser = parser;\n    };\n    /**\n     * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\n     * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\n     * to its intended parent. The dependency should be a member of the dependencies property.\n     */\n    ResourceDependency.prototype.resolve = function () {\n        if (this._parentParser)\n            this._parentParser._iResolveDependency(this);\n    };\n    /**\n     * Resolve a dependency failure. For example, map loading failure from a 3d file\n     */\n    ResourceDependency.prototype.resolveFailure = function () {\n        if (this._parentParser)\n            this._parentParser._iResolveDependencyFailure(this);\n    };\n    /**\n     * Resolve the dependencies name\n     */\n    ResourceDependency.prototype.resolveName = function (asset) {\n        if (this._parentParser)\n            return this._parentParser._iResolveDependencyName(this, asset);\n        return asset.name;\n    };\n    return ResourceDependency;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ResourceDependency;\n\n},{}],\"awayjs-core/lib/parsers/TextureAtlasParser\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Sampler2D_1 = require(\"awayjs-core/lib/image/Sampler2D\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar URLLoaderDataFormat_1 = require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nvar URLRequest_1 = require(\"awayjs-core/lib/net/URLRequest\");\nvar ParserBase_1 = require(\"awayjs-core/lib/parsers/ParserBase\");\nvar ParserUtils_1 = require(\"awayjs-core/lib/parsers/ParserUtils\");\nvar XmlUtils_1 = require(\"awayjs-core/lib/utils/XmlUtils\");\n/**\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nvar TextureAtlasParser = (function (_super) {\n    __extends(TextureAtlasParser, _super);\n    /**\n     * Creates a new TextureAtlasParser object.\n     * @param uri The url or id of the data or file to be parsed.\n     * @param extra The holder for extra contextual data that the parser might need.\n     */\n    function TextureAtlasParser() {\n        _super.call(this, URLLoaderDataFormat_1.default.TEXT);\n        this._parseState = 0;\n    }\n    /**\n     * Indicates whether or not a given file extension is supported by the parser.\n     * @param extension The file extension of a potential file to be parsed.\n     * @return Whether or not the given file type is supported.\n     */\n    TextureAtlasParser.supportsType = function (extension) {\n        extension = extension.toLowerCase();\n        return extension == \"xml\";\n    };\n    /**\n     * Tests whether a data block can be parsed by the parser.\n     * @param data The data block to potentially be parsed.\n     * @return Whether or not the given data is supported.\n     */\n    TextureAtlasParser.supportsData = function (data) {\n        try {\n            var content = ParserUtils_1.default.toString(data);\n            if (content.indexOf(\"TextureAtlas\") != -1 || content.indexOf(\"textureatlas\") != -1)\n                return true;\n            return false;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TextureAtlasParser.prototype._iResolveDependency = function (resourceDependency) {\n        if (resourceDependency.assets.length) {\n            this._imageData = resourceDependency.assets[0];\n            this._pFinalizeAsset(this._imageData);\n            this._parseState = TextureAtlasParserState.PARSE_SUBTEXTURES;\n        }\n        else {\n            this._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TextureAtlasParser.prototype._iResolveDependencyFailure = function (resourceDependency) {\n        this._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n    };\n    /**\n     * @inheritDoc\n     */\n    TextureAtlasParser.prototype._pProceedParsing = function () {\n        var nodes;\n        switch (this._parseState) {\n            case TextureAtlasParserState.PARSE_XML:\n                try {\n                    this._doc = XmlUtils_1.default.getChildrenWithTag(XmlUtils_1.default.strToXml(this._pGetTextData()), \"TextureAtlas\")[0];\n                    this._imagePath = XmlUtils_1.default.readAttributeValue(this._doc, \"imagePath\");\n                    this._subTextureNodes = XmlUtils_1.default.getChildrenWithTag(this._doc, \"SubTexture\");\n                    this._parseState = TextureAtlasParserState.PARSE_IMAGE;\n                }\n                catch (Error) {\n                    return ParserBase_1.default.PARSING_DONE;\n                }\n                break;\n            case TextureAtlasParserState.PARSE_IMAGE:\n                if (this._imagePath) {\n                    this._pAddDependency(this._imagePath, new URLRequest_1.default(this._imagePath));\n                    this._pPauseAndRetrieveDependencies();\n                }\n                else {\n                    return ParserBase_1.default.PARSING_DONE;\n                }\n                break;\n            case TextureAtlasParserState.PARSE_SUBTEXTURES:\n                var sampler;\n                var element;\n                var x;\n                var y;\n                var width;\n                var height;\n                var len = this._subTextureNodes.length;\n                for (var i = 0; i < len; i++) {\n                    element = this._subTextureNodes[i];\n                    sampler = new Sampler2D_1.default();\n                    //setup subtexture rect\n                    x = XmlUtils_1.default.readAttributeValue(element, \"x\");\n                    y = XmlUtils_1.default.readAttributeValue(element, \"y\");\n                    width = XmlUtils_1.default.readAttributeValue(element, \"width\");\n                    height = XmlUtils_1.default.readAttributeValue(element, \"height\");\n                    if (x || y || width || height)\n                        sampler.imageRect = new Rectangle_1.default(parseInt(x) / this._imageData.width, parseInt(y) / this._imageData.height, parseInt(width) / this._imageData.width, parseInt(height) / this._imageData.height);\n                    //setup frame rect\n                    x = XmlUtils_1.default.readAttributeValue(element, \"frameX\");\n                    y = XmlUtils_1.default.readAttributeValue(element, \"frameY\");\n                    width = XmlUtils_1.default.readAttributeValue(element, \"frameWidth\");\n                    height = XmlUtils_1.default.readAttributeValue(element, \"frameHeight\");\n                    if (x || y || width || height)\n                        sampler.frameRect = new Rectangle_1.default(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n                    this._pFinalizeAsset(sampler, XmlUtils_1.default.readAttributeValue(element, \"name\"));\n                }\n                this._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n                break;\n            case TextureAtlasParserState.PARSE_COMPLETE:\n                return ParserBase_1.default.PARSING_DONE;\n        }\n        return ParserBase_1.default.MORE_TO_PARSE;\n    };\n    return TextureAtlasParser;\n}(ParserBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextureAtlasParser;\nvar TextureAtlasParserState = (function () {\n    function TextureAtlasParserState() {\n    }\n    TextureAtlasParserState.PARSE_XML = 0;\n    TextureAtlasParserState.PARSE_IMAGE = 1;\n    TextureAtlasParserState.PARSE_SUBTEXTURES = 2;\n    TextureAtlasParserState.PARSE_COMPLETE = 3;\n    return TextureAtlasParserState;\n}());\n\n},{\"awayjs-core/lib/geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"awayjs-core/lib/image/Sampler2D\":\"awayjs-core/lib/image/Sampler2D\",\"awayjs-core/lib/net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"awayjs-core/lib/net/URLRequest\":\"awayjs-core/lib/net/URLRequest\",\"awayjs-core/lib/parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\",\"awayjs-core/lib/parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\",\"awayjs-core/lib/utils/XmlUtils\":\"awayjs-core/lib/utils/XmlUtils\"}],\"awayjs-core/lib/parsers/WaveAudioParser\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar WaveAudio_1 = require(\"awayjs-core/lib/audio/WaveAudio\");\nvar URLLoaderDataFormat_1 = require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nvar ParserBase_1 = require(\"awayjs-core/lib/parsers/ParserBase\");\nvar ByteArray_1 = require(\"awayjs-core/lib/utils/ByteArray\");\nvar WaveAudioParser = (function (_super) {\n    __extends(WaveAudioParser, _super);\n    function WaveAudioParser() {\n        _super.call(this, URLLoaderDataFormat_1.default.BLOB);\n    }\n    WaveAudioParser.supportsType = function (extension) {\n        extension = extension.toLowerCase();\n        return extension == \"wav\" || extension == \"mp3\" || extension == \"ogg\";\n    };\n    WaveAudioParser.supportsData = function (data) {\n        if (!(data instanceof ByteArray_1.default))\n            return false;\n        var ba = data;\n        var filetype = WaveAudioParser.parseFileType(ba);\n        return filetype ? true : false;\n    };\n    WaveAudioParser.prototype._pStartParsing = function (frameLimit) {\n        //clear content\n        delete this._pContent;\n        this._pContent = null;\n        _super.prototype._pStartParsing.call(this, frameLimit);\n    };\n    WaveAudioParser.prototype._pProceedParsing = function () {\n        if (this.data instanceof ByteArray_1.default) {\n            this._pContent = new WaveAudio_1.default(this.data.arraybytes);\n            this._pFinalizeAsset(this._pContent, this._iFileName);\n        }\n        else if (this.data instanceof ArrayBuffer) {\n            this._pContent = new WaveAudio_1.default(this.data);\n            this._pFinalizeAsset(this._pContent, this._iFileName);\n        }\n        return ParserBase_1.default.PARSING_DONE;\n    };\n    WaveAudioParser.parseFileType = function (ba) {\n        ba.position = 0;\n        ba.position = 0;\n        if ((ba.readUnsignedShort() & 0xFFE0) == 0xFFE0) {\n            return 'mp3'; // test for MP3 syncword\n        }\n        ba.position = 0;\n        if (ba.readUTFBytes(4) == 'RIFF')\n            return 'wav';\n        ba.position = 0;\n        if (ba.readUTFBytes(4) == 'OggS')\n            return 'ogg';\n        ba.position = 0;\n        return null;\n    };\n    return WaveAudioParser;\n}(ParserBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = WaveAudioParser;\n\n},{\"awayjs-core/lib/audio/WaveAudio\":\"awayjs-core/lib/audio/WaveAudio\",\"awayjs-core/lib/net/URLLoaderDataFormat\":\"awayjs-core/lib/net/URLLoaderDataFormat\",\"awayjs-core/lib/parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\",\"awayjs-core/lib/utils/ByteArray\":\"awayjs-core/lib/utils/ByteArray\"}],\"awayjs-core/lib/parsers\":[function(require,module,exports){\n\"use strict\";\nvar Image2DParser_1 = require(\"awayjs-core/lib/parsers/Image2DParser\");\nexports.Image2DParser = Image2DParser_1.default;\nvar ImageCubeParser_1 = require(\"awayjs-core/lib/parsers/ImageCubeParser\");\nexports.ImageCubeParser = ImageCubeParser_1.default;\nvar ParserBase_1 = require(\"awayjs-core/lib/parsers/ParserBase\");\nexports.ParserBase = ParserBase_1.default;\nvar ParserDataFormat_1 = require(\"awayjs-core/lib/parsers/ParserDataFormat\");\nexports.ParserDataFormat = ParserDataFormat_1.default;\nvar ParserUtils_1 = require(\"awayjs-core/lib/parsers/ParserUtils\");\nexports.ParserUtils = ParserUtils_1.default;\nvar ResourceDependency_1 = require(\"awayjs-core/lib/parsers/ResourceDependency\");\nexports.ResourceDependency = ResourceDependency_1.default;\nvar TextureAtlasParser_1 = require(\"awayjs-core/lib/parsers/TextureAtlasParser\");\nexports.TextureAtlasParser = TextureAtlasParser_1.default;\nvar WaveAudioParser_1 = require(\"awayjs-core/lib/parsers/WaveAudioParser\");\nexports.WaveAudioParser = WaveAudioParser_1.default;\n\n},{\"awayjs-core/lib/parsers/Image2DParser\":\"awayjs-core/lib/parsers/Image2DParser\",\"awayjs-core/lib/parsers/ImageCubeParser\":\"awayjs-core/lib/parsers/ImageCubeParser\",\"awayjs-core/lib/parsers/ParserBase\":\"awayjs-core/lib/parsers/ParserBase\",\"awayjs-core/lib/parsers/ParserDataFormat\":\"awayjs-core/lib/parsers/ParserDataFormat\",\"awayjs-core/lib/parsers/ParserUtils\":\"awayjs-core/lib/parsers/ParserUtils\",\"awayjs-core/lib/parsers/ResourceDependency\":\"awayjs-core/lib/parsers/ResourceDependency\",\"awayjs-core/lib/parsers/TextureAtlasParser\":\"awayjs-core/lib/parsers/TextureAtlasParser\",\"awayjs-core/lib/parsers/WaveAudioParser\":\"awayjs-core/lib/parsers/WaveAudioParser\"}],\"awayjs-core/lib/projections/CoordinateSystem\":[function(require,module,exports){\n\"use strict\";\n/**\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\n *\n * @see away.projections.PerspectiveLens#coordinateSystem\n */\nvar CoordinateSystem = (function () {\n    function CoordinateSystem() {\n    }\n    /**\n     * Default option, projects to a left-handed coordinate system\n     */\n    CoordinateSystem.LEFT_HANDED = \"leftHanded\";\n    /**\n     * Projects to a right-handed coordinate system\n     */\n    CoordinateSystem.RIGHT_HANDED = \"rightHanded\";\n    return CoordinateSystem;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CoordinateSystem;\n\n},{}],\"awayjs-core/lib/projections/FreeMatrixProjection\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PerspectiveProjection_1 = require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nvar ProjectionBase_1 = require(\"awayjs-core/lib/projections/ProjectionBase\");\nvar FreeMatrixProjection = (function (_super) {\n    __extends(FreeMatrixProjection, _super);\n    function FreeMatrixProjection() {\n        _super.call(this);\n        this._pMatrix.copyFrom(new PerspectiveProjection_1.default().matrix);\n    }\n    Object.defineProperty(FreeMatrixProjection.prototype, \"near\", {\n        //@override\n        set: function (value) {\n            this._pNear = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FreeMatrixProjection.prototype, \"far\", {\n        //@override\n        set: function (value) {\n            this._pFar = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FreeMatrixProjection.prototype, \"iAspectRatio\", {\n        //@override\n        set: function (value) {\n            this._pAspectRatio = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    FreeMatrixProjection.prototype.clone = function () {\n        var clone = new FreeMatrixProjection();\n        clone._pMatrix.copyFrom(this._pMatrix);\n        clone._pNear = this._pNear;\n        clone._pFar = this._pFar;\n        clone._pAspectRatio = this._pAspectRatio;\n        clone.pInvalidateMatrix();\n        return clone;\n    };\n    //@override\n    FreeMatrixProjection.prototype.pUpdateMatrix = function () {\n        this._pMatrixInvalid = false;\n    };\n    return FreeMatrixProjection;\n}(ProjectionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FreeMatrixProjection;\n\n},{\"awayjs-core/lib/projections/PerspectiveProjection\":\"awayjs-core/lib/projections/PerspectiveProjection\",\"awayjs-core/lib/projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/IProjection\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/projections/ObliqueNearPlaneProjection\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ProjectionEvent_1 = require(\"awayjs-core/lib/events/ProjectionEvent\");\nvar ProjectionBase_1 = require(\"awayjs-core/lib/projections/ProjectionBase\");\nvar ObliqueNearPlaneProjection = (function (_super) {\n    __extends(ObliqueNearPlaneProjection, _super);\n    function ObliqueNearPlaneProjection(baseProjection, plane) {\n        var _this = this;\n        _super.call(this);\n        this.baseProjection = baseProjection;\n        this.plane = plane;\n        this._onProjectionMatrixChangedDelegate = function (event) { return _this.onProjectionMatrixChanged(event); };\n    }\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"frustumCorners\", {\n        //@override\n        get: function () {\n            return this._baseProjection.frustumCorners;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"near\", {\n        //@override\n        get: function () {\n            return this._baseProjection.near;\n        },\n        //@override\n        set: function (value) {\n            this._baseProjection.near = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"far\", {\n        //@override\n        get: function () {\n            return this._baseProjection.far;\n        },\n        //@override\n        set: function (value) {\n            this._baseProjection.far = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"iAspectRatio\", {\n        //@override\n        get: function () {\n            return this._baseProjection._iAspectRatio;\n        },\n        //@override\n        set: function (value) {\n            this._baseProjection._iAspectRatio = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"plane\", {\n        get: function () {\n            return this._plane;\n        },\n        set: function (value) {\n            this._plane = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObliqueNearPlaneProjection.prototype, \"baseProjection\", {\n        set: function (value) {\n            if (this._baseProjection) {\n                this._baseProjection.removeEventListener(ProjectionEvent_1.default.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n            }\n            this._baseProjection = value;\n            if (this._baseProjection) {\n                this._baseProjection.addEventListener(ProjectionEvent_1.default.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n            }\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ObliqueNearPlaneProjection.prototype.onProjectionMatrixChanged = function (event) {\n        this.pInvalidateMatrix();\n    };\n    //@override\n    ObliqueNearPlaneProjection.prototype.pUpdateMatrix = function () {\n        this._pMatrix.copyFrom(this._baseProjection.matrix);\n        var cx = this._plane.a;\n        var cy = this._plane.b;\n        var cz = this._plane.c;\n        var cw = -this._plane.d + .05;\n        var signX = cx >= 0 ? 1 : -1;\n        var signY = cy >= 0 ? 1 : -1;\n        var p = new Vector3D_1.default(signX, signY, 1, 1);\n        var inverse = this._pMatrix.clone();\n        inverse.invert();\n        var q = inverse.transformVector(p);\n        this._pMatrix.copyRowTo(3, p);\n        var a = (q.x * p.x + q.y * p.y + q.z * p.z + q.w * p.w) / (cx * q.x + cy * q.y + cz * q.z + cw * q.w);\n        this._pMatrix.copyRowFrom(2, new Vector3D_1.default(cx * a, cy * a, cz * a, cw * a));\n    };\n    return ObliqueNearPlaneProjection;\n}(ProjectionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ObliqueNearPlaneProjection;\n\n},{\"awayjs-core/lib/events/ProjectionEvent\":\"awayjs-core/lib/events/ProjectionEvent\",\"awayjs-core/lib/geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\",\"awayjs-core/lib/projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/OrthographicOffCenterProjection\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ProjectionBase_1 = require(\"awayjs-core/lib/projections/ProjectionBase\");\nvar OrthographicOffCenterProjection = (function (_super) {\n    __extends(OrthographicOffCenterProjection, _super);\n    function OrthographicOffCenterProjection(minX, maxX, minY, maxY) {\n        _super.call(this);\n        this._minX = minX;\n        this._maxX = maxX;\n        this._minY = minY;\n        this._maxY = maxY;\n    }\n    Object.defineProperty(OrthographicOffCenterProjection.prototype, \"minX\", {\n        get: function () {\n            return this._minX;\n        },\n        set: function (value) {\n            this._minX = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OrthographicOffCenterProjection.prototype, \"maxX\", {\n        get: function () {\n            return this._maxX;\n        },\n        set: function (value) {\n            this._maxX = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OrthographicOffCenterProjection.prototype, \"minY\", {\n        get: function () {\n            return this._minY;\n        },\n        set: function (value) {\n            this._minY = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OrthographicOffCenterProjection.prototype, \"maxY\", {\n        get: function () {\n            return this._maxY;\n        },\n        set: function (value) {\n            this._maxY = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    OrthographicOffCenterProjection.prototype.unproject = function (nX, nY, sZ) {\n        var v = new Vector3D_1.default(nX, -nY, sZ, 1.0);\n        v = this.unprojectionMatrix.transformVector(v);\n        //z is unaffected by transform\n        v.z = sZ;\n        return v;\n    };\n    //@override\n    OrthographicOffCenterProjection.prototype.clone = function () {\n        var clone = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\n        clone._pNear = this._pNear;\n        clone._pFar = this._pFar;\n        clone._pAspectRatio = this._pAspectRatio;\n        return clone;\n    };\n    //@override\n    OrthographicOffCenterProjection.prototype.pUpdateMatrix = function () {\n        var raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n        var w = 1 / (this._maxX - this._minX);\n        var h = 1 / (this._maxY - this._minY);\n        var d = 1 / (this._pFar - this._pNear);\n        raw[0] = 2 * w;\n        raw[5] = 2 * h;\n        raw[10] = d;\n        raw[12] = -(this._maxX + this._minX) * w;\n        raw[13] = -(this._maxY + this._minY) * h;\n        raw[14] = -this._pNear * d;\n        raw[15] = 1;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n        this._pMatrix.copyRawDataFrom(raw);\n        this._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\n        this._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\n        this._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\n        this._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\n        this._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n        this._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n        this._pMatrixInvalid = false;\n    };\n    return OrthographicOffCenterProjection;\n}(ProjectionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = OrthographicOffCenterProjection;\n\n},{\"awayjs-core/lib/geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"awayjs-core/lib/geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\",\"awayjs-core/lib/projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/OrthographicProjection\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ProjectionBase_1 = require(\"awayjs-core/lib/projections/ProjectionBase\");\nvar OrthographicProjection = (function (_super) {\n    __extends(OrthographicProjection, _super);\n    function OrthographicProjection(projectionHeight) {\n        if (projectionHeight === void 0) { projectionHeight = 500; }\n        _super.call(this);\n        this._projectionHeight = projectionHeight;\n    }\n    Object.defineProperty(OrthographicProjection.prototype, \"projectionHeight\", {\n        get: function () {\n            return this._projectionHeight;\n        },\n        set: function (value) {\n            if (value == this._projectionHeight) {\n                return;\n            }\n            this._projectionHeight = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    OrthographicProjection.prototype.unproject = function (nX, nY, sZ) {\n        var v = new Vector3D_1.default(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\n        v = this.unprojectionMatrix.transformVector(v);\n        //z is unaffected by transform\n        v.z = sZ;\n        return v;\n    };\n    //@override\n    OrthographicProjection.prototype.clone = function () {\n        var clone = new OrthographicProjection();\n        clone._pNear = this._pNear;\n        clone._pFar = this._pFar;\n        clone._pAspectRatio = this._pAspectRatio;\n        clone.projectionHeight = this._projectionHeight;\n        return clone;\n    };\n    //@override\n    OrthographicProjection.prototype.pUpdateMatrix = function () {\n        var raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n        this._yMax = this._projectionHeight * .5;\n        this._xMax = this._yMax * this._pAspectRatio;\n        var left;\n        var right;\n        var top;\n        var bottom;\n        if (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\n            // assume symmetric frustum\n            left = -this._xMax;\n            right = this._xMax;\n            top = -this._yMax;\n            bottom = this._yMax;\n            raw[0] = 2 / (this._projectionHeight * this._pAspectRatio);\n            raw[5] = 2 / this._projectionHeight;\n            raw[10] = 1 / (this._pFar - this._pNear);\n            raw[14] = this._pNear / (this._pNear - this._pFar);\n            raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\n            raw[15] = 1;\n        }\n        else {\n            var xWidth = this._xMax * (this._pViewPort.width / this._pScissorRect.width);\n            var yHgt = this._yMax * (this._pViewPort.height / this._pScissorRect.height);\n            var center = this._xMax * (this._pScissorRect.x * 2 - this._pViewPort.width) / this._pScissorRect.width + this._xMax;\n            var middle = -this._yMax * (this._pScissorRect.y * 2 - this._pViewPort.height) / this._pScissorRect.height - this._yMax;\n            left = center - xWidth;\n            right = center + xWidth;\n            top = middle - yHgt;\n            bottom = middle + yHgt;\n            raw[0] = 2 * 1 / (right - left);\n            raw[5] = -2 * 1 / (top - bottom);\n            raw[10] = 1 / (this._pFar - this._pNear);\n            raw[12] = (right + left) / (right - left);\n            raw[13] = (bottom + top) / (bottom - top);\n            raw[14] = this._pNear / (this.near - this.far);\n            raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n            raw[15] = 1;\n        }\n        this._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\n        this._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\n        this._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\n        this._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\n        this._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n        this._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n        this._pMatrix.copyRawDataFrom(raw);\n        this._pMatrixInvalid = false;\n    };\n    return OrthographicProjection;\n}(ProjectionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = OrthographicProjection;\n\n},{\"awayjs-core/lib/geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"awayjs-core/lib/geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\",\"awayjs-core/lib/projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/PerspectiveProjection\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar CoordinateSystem_1 = require(\"awayjs-core/lib/projections/CoordinateSystem\");\nvar ProjectionBase_1 = require(\"awayjs-core/lib/projections/ProjectionBase\");\nvar PerspectiveProjection = (function (_super) {\n    __extends(PerspectiveProjection, _super);\n    function PerspectiveProjection(fieldOfView, coordinateSystem) {\n        if (fieldOfView === void 0) { fieldOfView = 60; }\n        if (coordinateSystem === void 0) { coordinateSystem = \"leftHanded\"; }\n        _super.call(this, coordinateSystem);\n        this._fieldOfView = 60;\n        this._focalLength = 1000;\n        this._hFieldOfView = 60;\n        this._hFocalLength = 1000;\n        this._preserveAspectRatio = true;\n        this._preserveFocalLength = false;\n        this.fieldOfView = fieldOfView;\n    }\n    Object.defineProperty(PerspectiveProjection.prototype, \"preserveAspectRatio\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._preserveAspectRatio;\n        },\n        set: function (value) {\n            if (this._preserveAspectRatio == value)\n                return;\n            this._preserveAspectRatio = value;\n            if (this._preserveAspectRatio)\n                this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PerspectiveProjection.prototype, \"preserveFocalLength\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._preserveFocalLength;\n        },\n        set: function (value) {\n            if (this._preserveFocalLength == value)\n                return;\n            this._preserveFocalLength = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PerspectiveProjection.prototype, \"fieldOfView\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._fieldOfView;\n        },\n        set: function (value) {\n            if (this._fieldOfView == value)\n                return;\n            this._fieldOfView = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PerspectiveProjection.prototype, \"focalLength\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._focalLength;\n        },\n        set: function (value) {\n            if (this._focalLength == value)\n                return;\n            this._focalLength = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PerspectiveProjection.prototype, \"hFieldOfView\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._hFieldOfView;\n        },\n        set: function (value) {\n            if (this._hFieldOfView == value)\n                return;\n            this._hFieldOfView = value;\n            this._hFocalLength = 1 / Math.tan(this._hFieldOfView * Math.PI / 360);\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PerspectiveProjection.prototype, \"hFocalLength\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._hFocalLength;\n        },\n        set: function (value) {\n            if (this._hFocalLength == value)\n                return;\n            this._hFocalLength = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    PerspectiveProjection.prototype.unproject = function (nX, nY, sZ) {\n        var v = new Vector3D_1.default(nX, -nY, sZ, 1.0);\n        v.x *= sZ;\n        v.y *= sZ;\n        v = this.unprojectionMatrix.transformVector(v);\n        //z is unaffected by transform\n        v.z = sZ;\n        return v;\n    };\n    //@override\n    PerspectiveProjection.prototype.clone = function () {\n        var clone = new PerspectiveProjection(this._fieldOfView);\n        clone._pNear = this._pNear;\n        clone._pFar = this._pFar;\n        clone._pAspectRatio = this._pAspectRatio;\n        clone._pCoordinateSystem = this._pCoordinateSystem;\n        return clone;\n    };\n    //@override\n    PerspectiveProjection.prototype.pUpdateMatrix = function () {\n        var raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n        if (this._preserveFocalLength) {\n            if (this._preserveAspectRatio)\n                this._hFocalLength = this._focalLength;\n            this._fieldOfView = Math.atan(0.5 * this._pScissorRect.height / this._focalLength) * 360 / Math.PI;\n            this._hFieldOfView = Math.atan(0.5 * this._pScissorRect.width / this._hFocalLength) * 360 / Math.PI;\n        }\n        else {\n            this._focalLength = 0.5 * this._pScissorRect.height / Math.tan(this._fieldOfView * Math.PI / 360);\n            if (this._preserveAspectRatio)\n                this._hFocalLength = this._focalLength;\n            else\n                this._hFocalLength = 0.5 * this._pScissorRect.width / Math.tan(this._hFieldOfView * Math.PI / 360);\n        }\n        var tanMinX = -this._pOriginX / this._hFocalLength;\n        var tanMaxX = (1 - this._pOriginX) / this._hFocalLength;\n        var tanMinY = -this._pOriginY / this._focalLength;\n        var tanMaxY = (1 - this._pOriginY) / this._focalLength;\n        var left;\n        var right;\n        var top;\n        var bottom;\n        // assume scissored frustum\n        var center = -((tanMinX - tanMaxX) * this._pScissorRect.x + tanMinX * this._pScissorRect.width);\n        var middle = ((tanMinY - tanMaxY) * this._pScissorRect.y + tanMinY * this._pScissorRect.height);\n        left = center - (tanMaxX - tanMinX) * this._pViewPort.width;\n        right = center;\n        top = middle;\n        bottom = middle + (tanMaxY - tanMinY) * this._pViewPort.height;\n        raw[0] = 2 / (right - left);\n        raw[5] = 2 / (bottom - top);\n        raw[8] = (right + left) / (right - left);\n        raw[9] = (bottom + top) / (bottom - top);\n        raw[10] = (this._pFar + this._pNear) / (this._pFar - this._pNear);\n        raw[11] = 1;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\n        raw[14] = -2 * this._pFar * this._pNear / (this._pFar - this._pNear);\n        if (this._pCoordinateSystem == CoordinateSystem_1.default.RIGHT_HANDED)\n            raw[5] = -raw[5];\n        this._pMatrix.copyRawDataFrom(raw);\n        this._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear * left;\n        this._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear * right;\n        this._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear * top;\n        this._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear * bottom;\n        this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar * left;\n        this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar * right;\n        this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar * top;\n        this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar * bottom;\n        this._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n        this._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n        this._pMatrixInvalid = false;\n    };\n    return PerspectiveProjection;\n}(ProjectionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PerspectiveProjection;\n\n},{\"awayjs-core/lib/geom/Matrix3DUtils\":\"awayjs-core/lib/geom/Matrix3DUtils\",\"awayjs-core/lib/geom/Vector3D\":\"awayjs-core/lib/geom/Vector3D\",\"awayjs-core/lib/projections/CoordinateSystem\":\"awayjs-core/lib/projections/CoordinateSystem\",\"awayjs-core/lib/projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/projections/ProjectionBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar ProjectionEvent_1 = require(\"awayjs-core/lib/events/ProjectionEvent\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar ProjectionBase = (function (_super) {\n    __extends(ProjectionBase, _super);\n    function ProjectionBase(coordinateSystem) {\n        if (coordinateSystem === void 0) { coordinateSystem = \"leftHanded\"; }\n        _super.call(this);\n        this._pMatrix = new Matrix3D_1.default();\n        this._pScissorRect = new Rectangle_1.default();\n        this._pViewPort = new Rectangle_1.default();\n        this._pNear = 20;\n        this._pFar = 3000;\n        this._pAspectRatio = 1;\n        this._pMatrixInvalid = true;\n        this._pFrustumCorners = [];\n        this._pOriginX = 0.5;\n        this._pOriginY = 0.5;\n        this._unprojectionInvalid = true;\n        this.coordinateSystem = coordinateSystem;\n    }\n    Object.defineProperty(ProjectionBase.prototype, \"coordinateSystem\", {\n        /**\n         * The handedness of the coordinate system projection. The default is LEFT_HANDED.\n         */\n        get: function () {\n            return this._pCoordinateSystem;\n        },\n        set: function (value) {\n            if (this._pCoordinateSystem == value)\n                return;\n            this._pCoordinateSystem = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProjectionBase.prototype, \"frustumCorners\", {\n        get: function () {\n            return this._pFrustumCorners;\n        },\n        set: function (frustumCorners) {\n            this._pFrustumCorners = frustumCorners;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProjectionBase.prototype, \"matrix\", {\n        get: function () {\n            if (this._pMatrixInvalid) {\n                this.pUpdateMatrix();\n                this._pMatrixInvalid = false;\n            }\n            return this._pMatrix;\n        },\n        set: function (value) {\n            this._pMatrix = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProjectionBase.prototype, \"near\", {\n        get: function () {\n            return this._pNear;\n        },\n        set: function (value) {\n            if (value == this._pNear) {\n                return;\n            }\n            this._pNear = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProjectionBase.prototype, \"originX\", {\n        get: function () {\n            return this._pOriginX;\n        },\n        set: function (value) {\n            if (this._pOriginX == value)\n                return;\n            this._pOriginX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProjectionBase.prototype, \"originY\", {\n        get: function () {\n            return this._pOriginY;\n        },\n        set: function (value) {\n            if (this._pOriginY == value)\n                return;\n            this._pOriginY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProjectionBase.prototype, \"far\", {\n        get: function () {\n            return this._pFar;\n        },\n        set: function (value) {\n            if (value == this._pFar) {\n                return;\n            }\n            this._pFar = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProjectionBase.prototype.project = function (point3d) {\n        var v = this.matrix.transformVector(point3d);\n        v.x = v.x / v.w;\n        v.y = -v.y / v.w;\n        //z is unaffected by transform\n        v.z = point3d.z;\n        return v;\n    };\n    Object.defineProperty(ProjectionBase.prototype, \"unprojectionMatrix\", {\n        get: function () {\n            if (this._unprojectionInvalid) {\n                if (!this._unprojection)\n                    this._unprojection = new Matrix3D_1.default();\n                this._unprojection.copyFrom(this.matrix);\n                this._unprojection.invert();\n                this._unprojectionInvalid = false;\n            }\n            return this._unprojection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProjectionBase.prototype.unproject = function (nX, nY, sZ) {\n        throw new AbstractMethodError_1.default();\n    };\n    ProjectionBase.prototype.clone = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    Object.defineProperty(ProjectionBase.prototype, \"_iAspectRatio\", {\n        get: function () {\n            return this._pAspectRatio;\n        },\n        set: function (value) {\n            if (this._pAspectRatio == value)\n                return;\n            this._pAspectRatio = value;\n            this.pInvalidateMatrix();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProjectionBase.prototype.pInvalidateMatrix = function () {\n        this._pMatrixInvalid = true;\n        this._unprojectionInvalid = true;\n        this.dispatchEvent(new ProjectionEvent_1.default(ProjectionEvent_1.default.MATRIX_CHANGED, this));\n    };\n    ProjectionBase.prototype.pUpdateMatrix = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    ProjectionBase.prototype._iUpdateScissorRect = function (x, y, width, height) {\n        this._pScissorRect.x = x;\n        this._pScissorRect.y = y;\n        this._pScissorRect.width = width;\n        this._pScissorRect.height = height;\n        this.pInvalidateMatrix();\n    };\n    ProjectionBase.prototype._iUpdateViewport = function (x, y, width, height) {\n        this._pViewPort.x = x;\n        this._pViewPort.y = y;\n        this._pViewPort.width = width;\n        this._pViewPort.height = height;\n        this.pInvalidateMatrix();\n    };\n    return ProjectionBase;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ProjectionBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\",\"awayjs-core/lib/events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"awayjs-core/lib/events/ProjectionEvent\":\"awayjs-core/lib/events/ProjectionEvent\",\"awayjs-core/lib/geom/Matrix3D\":\"awayjs-core/lib/geom/Matrix3D\",\"awayjs-core/lib/geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\"}],\"awayjs-core/lib/projections\":[function(require,module,exports){\n\"use strict\";\nvar CoordinateSystem_1 = require(\"awayjs-core/lib/projections/CoordinateSystem\");\nexports.CoordinateSystem = CoordinateSystem_1.default;\nvar FreeMatrixProjection_1 = require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nexports.FreeMatrixProjection = FreeMatrixProjection_1.default;\nvar ObliqueNearPlaneProjection_1 = require(\"awayjs-core/lib/projections/ObliqueNearPlaneProjection\");\nexports.ObliqueNearPlaneProjection = ObliqueNearPlaneProjection_1.default;\nvar OrthographicOffCenterProjection_1 = require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\nexports.OrthographicOffCenterProjection = OrthographicOffCenterProjection_1.default;\nvar OrthographicProjection_1 = require(\"awayjs-core/lib/projections/OrthographicProjection\");\nexports.OrthographicProjection = OrthographicProjection_1.default;\nvar PerspectiveProjection_1 = require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nexports.PerspectiveProjection = PerspectiveProjection_1.default;\nvar ProjectionBase_1 = require(\"awayjs-core/lib/projections/ProjectionBase\");\nexports.ProjectionBase = ProjectionBase_1.default;\n\n},{\"awayjs-core/lib/projections/CoordinateSystem\":\"awayjs-core/lib/projections/CoordinateSystem\",\"awayjs-core/lib/projections/FreeMatrixProjection\":\"awayjs-core/lib/projections/FreeMatrixProjection\",\"awayjs-core/lib/projections/ObliqueNearPlaneProjection\":\"awayjs-core/lib/projections/ObliqueNearPlaneProjection\",\"awayjs-core/lib/projections/OrthographicOffCenterProjection\":\"awayjs-core/lib/projections/OrthographicOffCenterProjection\",\"awayjs-core/lib/projections/OrthographicProjection\":\"awayjs-core/lib/projections/OrthographicProjection\",\"awayjs-core/lib/projections/PerspectiveProjection\":\"awayjs-core/lib/projections/PerspectiveProjection\",\"awayjs-core/lib/projections/ProjectionBase\":\"awayjs-core/lib/projections/ProjectionBase\"}],\"awayjs-core/lib/ui/Keyboard\":[function(require,module,exports){\n\"use strict\";\nvar Keyboard = (function () {\n    function Keyboard() {\n    }\n    /**\n     * Constant associated with the key code value for the A key (65).\n     */\n    Keyboard.A = 65;\n    /**\n     * Constant associated with the key code value for the Alternate (Option) key  (18).\n     */\n    Keyboard.ALTERNATE = 18;\n    /**\n     * Select the audio mode\n     */\n    Keyboard.AUDIO = 0x01000017;\n    /**\n     * Constant associated with the key code value for the B key (66).\n     */\n    Keyboard.B = 66;\n    /**\n     * Return to previous page in application\n     */\n    Keyboard.BACK = 0x01000016;\n    /**\n     * Constant associated with the key code value for the ` key (192).\n     */\n    Keyboard.BACKQUOTE = 192;\n    /**\n     * Constant associated with the key code value for the \\ key (220).\n     */\n    Keyboard.BACKSLASH = 220;\n    /**\n     * Constant associated with the key code value for the Backspace key (8).\n     */\n    Keyboard.BACKSPACE = 8;\n    /**\n     * Blue function key button\n     */\n    Keyboard.BLUE = 0x01000003;\n    /**\n     * Constant associated with the key code value for the C key (67).\n     */\n    Keyboard.C = 67;\n    /**\n     * Constant associated with the key code value for the Caps Lock key (20).\n     */\n    Keyboard.CAPS_LOCK = 20;\n    /**\n     * Channel down\n     */\n    Keyboard.CHANNEL_DOWN = 0x01000005;\n    /**\n     * Channel up\n     */\n    Keyboard.CHANNEL_UP = 0x01000005;\n    /**\n     * Constant associated with the key code value for the , key (188).\n     */\n    Keyboard.COMMA = 188;\n    /**\n     * Constant associated with the Mac command key (15). This constant is\n     * currently only used for setting menu key equivalents.\n     */\n    Keyboard.COMMAND = 15;\n    /**\n     * Constant associated with the key code value for the Control key (17).\n     */\n    Keyboard.CONTROL = 17;\n    /**\n     * Constant associated with the key code value for the D key (68).\n     */\n    Keyboard.D = 68;\n    /**\n     * Constant associated with the key code value for the Delete key (46).\n     */\n    Keyboard.DELETE = 46;\n    /**\n     * Constant associated with the key code value for the Down Arrow key (40).\n     */\n    Keyboard.DOWN = 40;\n    /**\n     * Engage DVR application mode\n     */\n    Keyboard.DVR = 0x01000019;\n    /**\n     * Constant associated with the key code value for the E key (69).\n     */\n    Keyboard.E = 69;\n    /**\n     * Constant associated with the key code value for the End key (35).\n     */\n    Keyboard.END = 35;\n    /**\n     * Constant associated with the key code value for the Enter key (13).\n     */\n    Keyboard.ENTER = 13;\n    /**\n     * Constant associated with the key code value for the = key (187).\n     */\n    Keyboard.EQUAL = 187;\n    /**\n     * Constant associated with the key code value for the Escape key (27).\n     */\n    Keyboard.ESCAPE = 27;\n    /**\n     * Exits current application mode\n     */\n    Keyboard.EXIT = 0x01000015;\n    /**\n     * Constant associated with the key code value for the F key (70).\n     */\n    Keyboard.F = 70;\n    /**\n     * Constant associated with the key code value for the F1 key (112).\n     */\n    Keyboard.F1 = 112;\n    /**\n     * Constant associated with the key code value for the F10 key (121).\n     */\n    Keyboard.F10 = 121;\n    /**\n     * Constant associated with the key code value for the F11 key (122).\n     */\n    Keyboard.F11 = 122;\n    /**\n     * Constant associated with the key code value for the F12 key (123).\n     */\n    Keyboard.F12 = 123;\n    /**\n     * Constant associated with the key code value for the F13 key (124).\n     */\n    Keyboard.F13 = 124;\n    /**\n     * Constant associated with the key code value for the F14 key (125).\n     */\n    Keyboard.F14 = 125;\n    /**\n     * Constant associated with the key code value for the F15 key (126).\n     */\n    Keyboard.F15 = 126;\n    /**\n     * Constant associated with the key code value for the F2 key (113).\n     */\n    Keyboard.F2 = 113;\n    /**\n     * Constant associated with the key code value for the F3 key (114).\n     */\n    Keyboard.F3 = 114;\n    /**\n     * Constant associated with the key code value for the F4 key (115).\n     */\n    Keyboard.F4 = 115;\n    /**\n     * Constant associated with the key code value for the F5 key (116).\n     */\n    Keyboard.F5 = 116;\n    /**\n     * Constant associated with the key code value for the F6 key (117).\n     */\n    Keyboard.F6 = 117;\n    /**\n     * Constant associated with the key code value for the F7 key (118).\n     */\n    Keyboard.F7 = 118;\n    /**\n     * Constant associated with the key code value for the F8 key (119).\n     */\n    Keyboard.F8 = 119;\n    /**\n     * Constant associated with the key code value for the F9 key (120).\n     */\n    Keyboard.F9 = 120;\n    /**\n     * Engage fast-forward transport mode\n     */\n    Keyboard.FAST_FORWARD = 0x0100000A;\n    /**\n     * Constant associated with the key code value for the G key (71).\n     */\n    Keyboard.G = 71;\n    /**\n     * Green function key button\n     */\n    Keyboard.GREEN = 0x01000001;\n    /**\n     * Engage program guide\n     */\n    Keyboard.GUIDE = 0x01000014;\n    /**\n     * Constant associated with the key code value for the H key (72).\n     */\n    Keyboard.H = 72;\n    /**\n     * Engage help application or context-sensitive help\n     */\n    Keyboard.HELP = 0x0100001D;\n    /**\n     * Constant associated with the key code value for the Home key (36).\n     */\n    Keyboard.HOME = 36;\n    /**\n     * Constant associated with the key code value for the I key (73).\n     */\n    Keyboard.I = 73;\n    /**\n     * Info button\n     */\n    Keyboard.INFO = 0x01000013;\n    /**\n     * Cycle input\n     */\n    Keyboard.INPUT = 0x0100001B;\n    /**\n     * Constant associated with the key code value for the Insert key (45).\n     */\n    Keyboard.INSERT = 45;\n    /**\n     * Constant associated with the key code value for the J key (74).\n     */\n    Keyboard.J = 74;\n    /**\n     * Constant associated with the key code value for the K key (75).\n     */\n    Keyboard.K = 75;\n    /**\n     * The Begin key\n     */\n    Keyboard.KEYNAME_BEGIN = \"Begin\";\n    /**\n     * The Break key\n     */\n    Keyboard.KEYNAME_BREAK = \"Break\";\n    /**\n     * The Clear Display key\n     */\n    Keyboard.KEYNAME_CLEARDISPLAY = \"ClrDsp\";\n    /**\n     * The Clear Line key\n     */\n    Keyboard.KEYNAME_CLEARLINE = \"ClrLn\";\n    /**\n     * The Delete key\n     */\n    Keyboard.KEYNAME_DELETE = \"Delete\";\n    /**\n     * The Delete Character key\n     */\n    Keyboard.KEYNAME_DELETECHAR = \"DelChr\";\n    /**\n     * The Delete Line key\n     */\n    Keyboard.KEYNAME_DELETELINE = \"DelLn\";\n    /**\n     * The down arrow\n     */\n    Keyboard.KEYNAME_DOWNARROW = \"Down\";\n    /**\n     * The End key\n     */\n    Keyboard.KEYNAME_END = \"End\";\n    /**\n     * The Execute key\n     */\n    Keyboard.KEYNAME_EXECUTE = \"Exec\";\n    /**\n     * The F1 key\n     */\n    Keyboard.KEYNAME_F1 = \"F1\";\n    /**\n     * The F10 key\n     */\n    Keyboard.KEYNAME_F10 = \"F10\";\n    /**\n     * The F11 key\n     */\n    Keyboard.KEYNAME_F11 = \"F11\";\n    /**\n     * The F12 key\n     */\n    Keyboard.KEYNAME_F12 = \"F12\";\n    /**\n     * The F13 key\n     */\n    Keyboard.KEYNAME_F13 = \"F13\";\n    /**\n     * The F14 key\n     */\n    Keyboard.KEYNAME_F14 = \"F14\";\n    /**\n     * The F15 key\n     */\n    Keyboard.KEYNAME_F15 = \"F15\";\n    /**\n     * The F16 key\n     */\n    Keyboard.KEYNAME_F16 = \"F16\";\n    /**\n     * The F17 key\n     */\n    Keyboard.KEYNAME_F17 = \"F17\";\n    /**\n     * The F18 key\n     */\n    Keyboard.KEYNAME_F18 = \"F18\";\n    /**\n     * The F19 key\n     */\n    Keyboard.KEYNAME_F19 = \"F19\";\n    /**\n     * The F2 key\n     */\n    Keyboard.KEYNAME_F2 = \"F2\";\n    /**\n     * The F20 key\n     */\n    Keyboard.KEYNAME_F20 = \"F20\";\n    /**\n     * The F21 key\n     */\n    Keyboard.KEYNAME_F21 = \"F21\";\n    /**\n     * The F22 key\n     */\n    Keyboard.KEYNAME_F22 = \"F22\";\n    /**\n     * The F23 key\n     */\n    Keyboard.KEYNAME_F23 = \"F23\";\n    /**\n     * The F24 key\n     */\n    Keyboard.KEYNAME_F24 = \"F24\";\n    /**\n     * The F25 key\n     */\n    Keyboard.KEYNAME_F25 = \"F25\";\n    /**\n     * The F26 key\n     */\n    Keyboard.KEYNAME_F26 = \"F26\";\n    /**\n     * The F27 key\n     */\n    Keyboard.KEYNAME_F27 = \"F27\";\n    /**\n     * The F28 key\n     */\n    Keyboard.KEYNAME_F28 = \"F28\";\n    /**\n     * The F29 key\n     */\n    Keyboard.KEYNAME_F29 = \"F29\";\n    /**\n     * The F3 key\n     */\n    Keyboard.KEYNAME_F3 = \"F3\";\n    /**\n     * The F30 key\n     */\n    Keyboard.KEYNAME_F30 = \"F30\";\n    /**\n     * The F31 key\n     */\n    Keyboard.KEYNAME_F31 = \"F31\";\n    /**\n     * The F32 key\n     */\n    Keyboard.KEYNAME_F32 = \"F32\";\n    /**\n     * The F33 key\n     */\n    Keyboard.KEYNAME_F33 = \"F33\";\n    /**\n     * The F34 key\n     */\n    Keyboard.KEYNAME_F34 = \"F34\";\n    /**\n     * The F35 key\n     */\n    Keyboard.KEYNAME_F35 = \"F35\";\n    /**\n     * The F4 key\n     */\n    Keyboard.KEYNAME_F4 = \"F4\";\n    /**\n     * The F5 key\n     */\n    Keyboard.KEYNAME_F5 = \"F5\";\n    /**\n     * The F6 key\n     */\n    Keyboard.KEYNAME_F6 = \"F6\";\n    /**\n     * The F7 key\n     */\n    Keyboard.KEYNAME_F7 = \"F7\";\n    /**\n     * The F8 key\n     */\n    Keyboard.KEYNAME_F8 = \"F8\";\n    /**\n     * The F9 key\n     */\n    Keyboard.KEYNAME_F9 = \"F9\";\n    /**\n     * The Find key\n     */\n    Keyboard.KEYNAME_FIND = \"Find\";\n    /**\n     * The Help key\n     */\n    Keyboard.KEYNAME_HELP = \"Help\";\n    /**\n     * The Home key\n     */\n    Keyboard.KEYNAME_HOME = \"Home\";\n    /**\n     * The Insert key\n     */\n    Keyboard.KEYNAME_INSERT = \"Insert\";\n    /**\n     * The Insert Character key\n     */\n    Keyboard.KEYNAME_INSERTCHAR = \"InsChr\";\n    /**\n     * The Insert Line key\n     */\n    Keyboard.KEYNAME_INSERTLINE = \"LnsLn\";\n    /**\n     * The left arrow\n     */\n    Keyboard.KEYNAME_LEFTARROW = \"Left\";\n    /**\n     * The Menu key\n     */\n    Keyboard.KEYNAME_MENU = \"Menu\";\n    /**\n     * The Mode Switch key\n     */\n    Keyboard.KEYNAME_MODESWITCH = \"ModeSw\";\n    /**\n     * The Next key\n     */\n    Keyboard.KEYNAME_NEXT = \"Next\";\n    /**\n     * The Page Down key\n     */\n    Keyboard.KEYNAME_PAGEDOWN = \"PgDn\";\n    /**\n     * The Page Up key\n     */\n    Keyboard.KEYNAME_PAGEUP = \"PgUp\";\n    /**\n     * The Pause key\n     */\n    Keyboard.KEYNAME_PAUSE = \"Pause\";\n    /**\n     * The Previous key\n     */\n    Keyboard.KEYNAME_PREV = \"Prev\";\n    /**\n     * The PRINT key\n     */\n    Keyboard.KEYNAME_PRINT = \"Print\";\n    /**\n     * The PRINT Screen\n     */\n    Keyboard.KEYNAME_PRINTSCREEN = \"PrntScrn\";\n    /**\n     * The Redo key\n     */\n    Keyboard.KEYNAME_REDO = \"Redo\";\n    /**\n     * The Reset key\n     */\n    Keyboard.KEYNAME_RESET = \"Reset\";\n    /**\n     * The right arrow\n     */\n    Keyboard.KEYNAME_RIGHTARROW = \"Right\";\n    /**\n     * The Scroll Lock key\n     */\n    Keyboard.KEYNAME_SCROLLLOCK = \"ScrlLck\";\n    /**\n     * The Select key\n     */\n    Keyboard.KEYNAME_SELECT = \"Select\";\n    /**\n     * The Stop key\n     */\n    Keyboard.KEYNAME_STOP = \"Stop\";\n    /**\n     * The System Request key\n     */\n    Keyboard.KEYNAME_SYSREQ = \"SysReq\";\n    /**\n     * The System key\n     */\n    Keyboard.KEYNAME_SYSTEM = \"Sys\";\n    /**\n     * The Undo key\n     */\n    Keyboard.KEYNAME_UNDO = \"Undo\";\n    /**\n     * The up arrow\n     */\n    Keyboard.KEYNAME_UPARROW = \"Up\";\n    /**\n     * The User key\n     */\n    Keyboard.KEYNAME_USER = \"User\";\n    /**\n     * Constant associated with the key code value for the L key (76).\n     */\n    Keyboard.L = 76;\n    /**\n     * Watch last channel or show watched\n     */\n    Keyboard.LAST = 0x01000011;\n    /**\n     * Constant associated with the key code value for the Left Arrow key (37).\n     */\n    Keyboard.LEFT = 37;\n    /**\n     * Constant associated with the key code value for the [ key (219).\n     */\n    Keyboard.LEFTBRACKET = 219;\n    /**\n     * Return to live [position in broadcast]\n     */\n    Keyboard.LIVE = 0x01000010;\n    /**\n     * Constant associated with the key code value for the M key (77).\n     */\n    Keyboard.M = 77;\n    /**\n     * Engage \"Master Shell\" e.g. TiVo or other vendor button\n     */\n    Keyboard.MASTER_SHELL = 0x0100001E;\n    /**\n     * Engage menu\n     */\n    Keyboard.MENU = 0x01000012;\n    /**\n     * Constant associated with the key code value for the - key (189).\n     */\n    Keyboard.MINUS = 189;\n    /**\n     * Constant associated with the key code value for the N key (78).\n     */\n    Keyboard.N = 78;\n    /**\n     * Skip to next track or chapter\n     */\n    Keyboard.NEXT = 0x0100000E;\n    /**\n     * Constant associated with the key code value for the 0 key (48).\n     */\n    Keyboard.NUMBER_0 = 48;\n    /**\n     * Constant associated with the key code value for the 1 key (49).\n     */\n    Keyboard.NUMBER_1 = 49;\n    /**\n     * Constant associated with the key code value for the 2 key (50).\n     */\n    Keyboard.NUMBER_2 = 50;\n    /**\n     * Constant associated with the key code value for the 3 key (51).\n     */\n    Keyboard.NUMBER_3 = 51;\n    /**\n     * Constant associated with the key code value for the 4 key (52).\n     */\n    Keyboard.NUMBER_4 = 52;\n    /**\n     * Constant associated with the key code value for the 5 key (53).\n     */\n    Keyboard.NUMBER_5 = 53;\n    /**\n     * Constant associated with the key code value for the 6 key (54).\n     */\n    Keyboard.NUMBER_6 = 54;\n    /**\n     * Constant associated with the key code value for the 7 key (55).\n     */\n    Keyboard.NUMBER_7 = 55;\n    /**\n     * Constant associated with the key code value for the 8 key (56).\n     */\n    Keyboard.NUMBER_8 = 56;\n    /**\n     * Constant associated with the key code value for the 9 key (57).\n     */\n    Keyboard.NUMBER_9 = 57;\n    /**\n     * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\n     */\n    Keyboard.NUMPAD = 21;\n    /**\n     * Constant associated with the key code value for the number 0 key on the number pad (96).\n     */\n    Keyboard.NUMPAD_0 = 96;\n    /**\n     * Constant associated with the key code value for the number 1 key on the number pad (97).\n     */\n    Keyboard.NUMPAD_1 = 97;\n    /**\n     * Constant associated with the key code value for the number 2 key on the number pad (98).\n     */\n    Keyboard.NUMPAD_2 = 98;\n    /**\n     * Constant associated with the key code value for the number 3 key on the number pad (99).\n     */\n    Keyboard.NUMPAD_3 = 99;\n    /**\n     * Constant associated with the key code value for the number 4 key on the number pad (100).\n     */\n    Keyboard.NUMPAD_4 = 100;\n    /**\n     * Constant associated with the key code value for the number 5 key on the number pad (101).\n     */\n    Keyboard.NUMPAD_5 = 101;\n    /**\n     * Constant associated with the key code value for the number 6 key on the number pad (102).\n     */\n    Keyboard.NUMPAD_6 = 102;\n    /**\n     * Constant associated with the key code value for the number 7 key on the number pad (103).\n     */\n    Keyboard.NUMPAD_7 = 103;\n    /**\n     * Constant associated with the key code value for the number 8 key on the number pad (104).\n     */\n    Keyboard.NUMPAD_8 = 104;\n    /**\n     * Constant associated with the key code value for the number 9 key on the number pad (105).\n     */\n    Keyboard.NUMPAD_9 = 105;\n    /**\n     * Constant associated with the key code value for the addition key on the number pad (107).\n     */\n    Keyboard.NUMPAD_ADD = 107;\n    /**\n     * Constant associated with the key code value for the decimal key on the number pad (110).\n     */\n    Keyboard.NUMPAD_DECIMAL = 110;\n    /**\n     * Constant associated with the key code value for the division key on the number pad (111).\n     */\n    Keyboard.NUMPAD_DIVIDE = 111;\n    /**\n     * Constant associated with the key code value for the Enter key on the number pad (108).\n     */\n    Keyboard.NUMPAD_ENTER = 108;\n    /**\n     * Constant associated with the key code value for the multiplication key on the number pad (106).\n     */\n    Keyboard.NUMPAD_MULTIPLY = 106;\n    /**\n     * Constant associated with the key code value for the subtraction key on the number pad (109).\n     */\n    Keyboard.NUMPAD_SUBTRACT = 109;\n    /**\n     * Constant associated with the key code value for the O key (79).\n     */\n    Keyboard.O = 79;\n    /**\n     * Constant associated with the key code value for the P key (80).\n     */\n    Keyboard.P = 80;\n    /**\n     * Constant associated with the key code value for the Page Down key (34).\n     */\n    Keyboard.PAGE_DOWN = 34;\n    /**\n     * Constant associated with the key code value for the Page Up key (33).\n     */\n    Keyboard.PAGE_UP = 33;\n    /**\n     * Engage pause transport mode\n     */\n    Keyboard.PAUSE = 0x01000008;\n    /**\n     * Constant associated with the key code value for the . key (190).\n     */\n    Keyboard.PERIOD = 190;\n    /**\n     * Engage play transport mode\n     */\n    Keyboard.PLAY = 0x01000007;\n    /**\n     * Skip to previous track or chapter\n     */\n    Keyboard.PREVIOUS = 0x0100000F;\n    /**\n     * Constant associated with the key code value for the Q key (81).\n     */\n    Keyboard.Q = 81;\n    /**\n     * Constant associated with the key code value for the ' key (222).\n     */\n    Keyboard.QUOTE = 222;\n    /**\n     * Constant associated with the key code value for the R key (82).\n     */\n    Keyboard.R = 82;\n    /**\n     * Record item or engage record transport mode\n     */\n    Keyboard.RECORD = 0x01000006;\n    /**\n     * Red function key button\n     */\n    Keyboard.RED = 0x01000000;\n    /**\n     * Engage rewind transport mode\n     */\n    Keyboard.REWIND = 0x0100000B;\n    /**\n     * Constant associated with the key code value for the Right Arrow key (39).\n     */\n    Keyboard.RIGHT = 39;\n    /**\n     * Constant associated with the key code value for the ] key (221).\n     */\n    Keyboard.RIGHTBRACKET = 221;\n    /**\n     * Constant associated with the key code value for the S key (83).\n     */\n    Keyboard.S = 83;\n    /**\n     * Search button\n     */\n    Keyboard.SEARCH = 0x0100001F;\n    /**\n     * Constant associated with the key code value for the ; key (186).\n     */\n    Keyboard.SEMICOLON = 186;\n    /**\n     * Engage setup application or menu\n     */\n    Keyboard.SETUP = 0x0100001C;\n    /**\n     * Constant associated with the key code value for the Shift key (16).\n     */\n    Keyboard.SHIFT = 16;\n    /**\n     * Quick skip backward (usually 7-10 seconds)\n     */\n    Keyboard.SKIP_BACKWARD = 0x0100000D;\n    /**\n     * Quick skip ahead (usually 30 seconds)\n     */\n    Keyboard.SKIP_FORWARD = 0x0100000C;\n    /**\n     * Constant associated with the key code value for the / key (191).\n     */\n    Keyboard.SLASH = 191;\n    /**\n     * Constant associated with the key code value for the Spacebar (32).\n     */\n    Keyboard.SPACE = 32;\n    /**\n     * Engage stop transport mode\n     */\n    Keyboard.STOP = 0x01000009;\n    /**\n     * Toggle subtitles\n     */\n    Keyboard.SUBTITLE = 0x01000018;\n    /**\n     * Constant associated with the key code value for the T key (84).\n     */\n    Keyboard.T = 84;\n    /**\n     * Constant associated with the key code value for the Tab key (9).\n     */\n    Keyboard.TAB = 9;\n    /**\n     * Constant associated with the key code value for the U key (85).\n     */\n    Keyboard.U = 85;\n    /**\n     * Constant associated with the key code value for the Up Arrow key (38).\n     */\n    Keyboard.UP = 38;\n    /**\n     * Constant associated with the key code value for the V key (86).\n     */\n    Keyboard.V = 86;\n    /**\n     * Engage video-on-demand\n     */\n    Keyboard.VOD = 0x0100001A;\n    /**\n     * Constant associated with the key code value for the W key (87).\n     */\n    Keyboard.W = 87;\n    /**\n     * Constant associated with the key code value for the X key (88).\n     */\n    Keyboard.X = 88;\n    /**\n     * Constant associated with the key code value for the Y key (89).\n     */\n    Keyboard.Y = 89;\n    /**\n     * Yellow function key button\n     */\n    Keyboard.YELLOW = 0x01000002;\n    /**\n     * Constant associated with the key code value for the Z key (90).\n     */\n    Keyboard.Z = 90;\n    return Keyboard;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Keyboard;\n\n},{}],\"awayjs-core/lib/ui\":[function(require,module,exports){\n\"use strict\";\nvar Keyboard_1 = require(\"awayjs-core/lib/ui/Keyboard\");\nexports.Keyboard = Keyboard_1.default;\n\n},{\"awayjs-core/lib/ui/Keyboard\":\"awayjs-core/lib/ui/Keyboard\"}],\"awayjs-core/lib/utils/BitmapImageUtils\":[function(require,module,exports){\n\"use strict\";\nvar ColorUtils_1 = require(\"awayjs-core/lib/utils/ColorUtils\");\nvar BitmapImageUtils = (function () {\n    function BitmapImageUtils() {\n    }\n    BitmapImageUtils._fillRect = function (context, rect, color, transparent) {\n        if (color == 0x0 && transparent) {\n            context.clearRect(rect.x, rect.y, rect.width, rect.height);\n        }\n        else {\n            var argb = ColorUtils_1.default.float32ColorToARGB(color);\n            if (transparent)\n                context.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0] / 255 + ')';\n            else\n                context.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\n            context.fillRect(rect.x, rect.y, rect.width, rect.height);\n        }\n    };\n    BitmapImageUtils._copyPixels = function (context, bmpd, sourceRect, destRect) {\n        context.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n    };\n    BitmapImageUtils._draw = function (context, source, matrix, colorTransform, blendMode, clipRect, smoothing) {\n        context.save();\n        if (matrix != null)\n            context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n        if (clipRect != null)\n            context.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\n        else\n            context.drawImage(source, 0, 0);\n        context.restore();\n    };\n    return BitmapImageUtils;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BitmapImageUtils;\n\n},{\"awayjs-core/lib/utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\"}],\"awayjs-core/lib/utils/ByteArrayBase\":[function(require,module,exports){\n\"use strict\";\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar ByteArrayBase = (function () {\n    function ByteArrayBase() {\n        this.position = 0;\n        this.length = 0;\n        this._mode = \"\";\n    }\n    ByteArrayBase.prototype.writeByte = function (b) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.readByte = function () {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.writeUnsignedByte = function (b) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.readUnsignedByte = function () {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.writeUnsignedShort = function (b) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.readUnsignedShort = function () {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.writeUnsignedInt = function (b) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.readUnsignedInt = function () {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.writeFloat = function (b) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.toFloatBits = function (x) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.readFloat = function (b) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.fromFloatBits = function (x) {\n        throw \"Virtual method\";\n    };\n    ByteArrayBase.prototype.getBytesAvailable = function () {\n        throw new AbstractMethodError_1.default('ByteArrayBase, getBytesAvailable() not implemented ');\n    };\n    ByteArrayBase.prototype.toString = function () {\n        return \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\n    };\n    ByteArrayBase.prototype.compareEqual = function (other, count) {\n        if (count == undefined || count > this.length - this.position)\n            count = this.length - this.position;\n        if (count > other.length - other.position)\n            count = other.length - other.position;\n        var co0 = count;\n        var r = true;\n        while (r && count >= 4) {\n            count -= 4;\n            if (this.readUnsignedInt() != other.readUnsignedInt())\n                r = false;\n        }\n        while (r && count >= 1) {\n            count--;\n            if (this.readUnsignedByte() != other.readUnsignedByte())\n                r = false;\n        }\n        var c0;\n        this.position -= (c0 - count);\n        other.position -= (c0 - count);\n        return r;\n    };\n    ByteArrayBase.prototype.writeBase64String = function (s) {\n        for (var i = 0; i < s.length; i++) {\n            var v = s.charAt(i);\n        }\n    };\n    ByteArrayBase.prototype.dumpToConsole = function () {\n        var oldpos = this.position;\n        this.position = 0;\n        var nstep = 8;\n        function asHexString(x, digits) {\n            var lut = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n            var sh = \"\";\n            for (var d = 0; d < digits; d++) {\n                sh = lut[(x >> (d << 2)) & 0xf] + sh;\n            }\n            return sh;\n        }\n        for (var i = 0; i < this.length; i += nstep) {\n            var s = asHexString(i, 4) + \":\";\n            for (var j = 0; j < nstep && i + j < this.length; j++) {\n                s += \" \" + asHexString(this.readUnsignedByte(), 2);\n            }\n            console.log(s);\n        }\n        this.position = oldpos;\n    };\n    ByteArrayBase.prototype.readBase64String = function (count) {\n        if (count == undefined || count > this.length - this.position)\n            count = this.length - this.position;\n        if (!(count > 0))\n            return \"\";\n        return ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\n    };\n    ByteArrayBase.internalGetBase64String = function (count, getUnsignedByteFunc, self) {\n        var r = \"\";\n        var b0, b1, b2, enc1, enc2, enc3, enc4;\n        var base64Key = ByteArrayBase.Base64Key;\n        while (count >= 3) {\n            b0 = getUnsignedByteFunc.apply(self);\n            b1 = getUnsignedByteFunc.apply(self);\n            b2 = getUnsignedByteFunc.apply(self);\n            enc1 = b0 >> 2;\n            enc2 = ((b0 & 3) << 4) | (b1 >> 4);\n            enc3 = ((b1 & 15) << 2) | (b2 >> 6);\n            enc4 = b2 & 63;\n            r += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\n            count -= 3;\n        }\n        // pad\n        if (count == 2) {\n            b0 = getUnsignedByteFunc.apply(self);\n            b1 = getUnsignedByteFunc.apply(self);\n            enc1 = b0 >> 2;\n            enc2 = ((b0 & 3) << 4) | (b1 >> 4);\n            enc3 = ((b1 & 15) << 2);\n            r += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\n        }\n        else if (count == 1) {\n            b0 = getUnsignedByteFunc.apply(self);\n            enc1 = b0 >> 2;\n            enc2 = ((b0 & 3) << 4);\n            r += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\n        }\n        return r;\n    };\n    ByteArrayBase.Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    return ByteArrayBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ByteArrayBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":\"awayjs-core/lib/errors/AbstractMethodError\"}],\"awayjs-core/lib/utils/ByteArrayBuffer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ByteArrayBase_1 = require(\"awayjs-core/lib/utils/ByteArrayBase\");\nvar ByteArrayBuffer = (function (_super) {\n    __extends(ByteArrayBuffer, _super);\n    function ByteArrayBuffer() {\n        _super.call(this);\n        this._bytes = [];\n        this._mode = \"Array\";\n    }\n    ByteArrayBuffer.prototype.writeByte = function (b) {\n        var bi = ~~b;\n        this._bytes[this.position++] = bi;\n        if (this.position > this.length) {\n            this.length = this.position;\n        }\n    };\n    ByteArrayBuffer.prototype.readByte = function () {\n        if (this.position >= this.length) {\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n        }\n        return this._bytes[this.position++];\n    };\n    ByteArrayBuffer.prototype.writeUnsignedByte = function (b) {\n        var bi = ~~b;\n        this._bytes[this.position++] = bi & 0xff;\n        if (this.position > this.length) {\n            this.length = this.position;\n        }\n    };\n    ByteArrayBuffer.prototype.readUnsignedByte = function () {\n        if (this.position >= this.length) {\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n        }\n        return this._bytes[this.position++];\n    };\n    ByteArrayBuffer.prototype.writeUnsignedShort = function (b) {\n        var bi = ~~b;\n        this._bytes[this.position++] = bi & 0xff;\n        this._bytes[this.position++] = (bi >> 8) & 0xff;\n        if (this.position > this.length) {\n            this.length = this.position;\n        }\n    };\n    ByteArrayBuffer.prototype.readUnsignedShort = function () {\n        if (this.position + 2 > this.length) {\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n        }\n        var r = this._bytes[this.position] | (this._bytes[this.position + 1] << 8);\n        this.position += 2;\n        return r;\n    };\n    ByteArrayBuffer.prototype.writeUnsignedInt = function (b) {\n        var bi = ~~b;\n        this._bytes[this.position++] = bi & 0xff;\n        this._bytes[this.position++] = (bi >>> 8) & 0xff;\n        this._bytes[this.position++] = (bi >>> 16) & 0xff;\n        this._bytes[this.position++] = (bi >>> 24) & 0xff;\n        if (this.position > this.length) {\n            this.length = this.position;\n        }\n    };\n    ByteArrayBuffer.prototype.readUnsignedInt = function () {\n        if (this.position + 4 > this.length) {\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n        }\n        var r = this._bytes[this.position] | (this._bytes[this.position + 1] << 8) | (this._bytes[this.position + 2] << 16) | (this._bytes[this.position + 3] << 24);\n        this.position += 4;\n        return r >>> 0;\n    };\n    ByteArrayBuffer.prototype.writeFloat = function (b) {\n        // this is crazy slow and silly, but as a fallback...\n        this.writeUnsignedInt(this.toFloatBits(Number(b)));\n    };\n    ByteArrayBuffer.prototype.toFloatBits = function (x) {\n        // don't handle inf/nan yet\n        // special case zero\n        if (x == 0) {\n            return 0;\n        }\n        // remove the sign, after this we only deal with positive numbers\n        var sign = 0;\n        if (x < 0) {\n            x = -x;\n            sign = 1;\n        }\n        else {\n            sign = 0;\n        }\n        // a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\n        var exponent = Math.log(x) / Math.log(2); // rough exponent\n        exponent = Math.floor(exponent);\n        x = x * Math.pow(2, 23 - exponent); // normalize to 24 bits\n        var mantissa = Math.floor(x) - 0x800000;\n        exponent = exponent + 127;\n        return ((sign << 31) >>> 0) | (exponent << 23) | mantissa;\n    };\n    ByteArrayBuffer.prototype.readFloat = function (b) {\n        return this.fromFloatBits(this.readUnsignedInt());\n    };\n    ByteArrayBuffer.prototype.fromFloatBits = function (x) {\n        if (x == 0) {\n            return 0;\n        }\n        var exponent = (x >>> 23) & 0xff;\n        var mantissa = (x & 0x7fffff) | 0x800000;\n        var y = Math.pow(2, (exponent - 127) - 23) * mantissa;\n        if (x >>> 31 != 0) {\n            y = -y;\n        }\n        return y;\n    };\n    return ByteArrayBuffer;\n}(ByteArrayBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ByteArrayBuffer;\n\n},{\"awayjs-core/lib/utils/ByteArrayBase\":\"awayjs-core/lib/utils/ByteArrayBase\"}],\"awayjs-core/lib/utils/ByteArray\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ByteArrayBase_1 = require(\"awayjs-core/lib/utils/ByteArrayBase\");\nvar ByteArray = (function (_super) {\n    __extends(ByteArray, _super);\n    function ByteArray(maxlength) {\n        if (maxlength === void 0) { maxlength = 4; }\n        _super.call(this);\n        this._mode = \"Typed array\";\n        this.maxlength = Math.max((maxlength + 255) & (~255), 4);\n        this.arraybytes = new ArrayBuffer(this.maxlength);\n        this.unalignedarraybytestemp = new ArrayBuffer(16);\n    }\n    ByteArray.prototype.ensureWriteableSpace = function (n) {\n        this.ensureSpace(n + this.position);\n    };\n    ByteArray.prototype.setArrayBuffer = function (aBuffer) {\n        this.ensureSpace(aBuffer.byteLength);\n        this.length = aBuffer.byteLength;\n        var inInt8AView = new Int8Array(aBuffer);\n        var localInt8View = new Int8Array(this.arraybytes, 0, this.length);\n        localInt8View.set(inInt8AView);\n        this.position = 0;\n    };\n    ByteArray.prototype.getBytesAvailable = function () {\n        return (this.length) - (this.position);\n    };\n    ByteArray.prototype.ensureSpace = function (n) {\n        if (n > this.maxlength) {\n            var newmaxlength = (n + 255) & (~255);\n            var newarraybuffer = new ArrayBuffer(newmaxlength);\n            var view = new Uint8Array(this.arraybytes, 0, this.length);\n            var newview = new Uint8Array(newarraybuffer, 0, this.length);\n            newview.set(view); // memcpy\n            this.arraybytes = newarraybuffer;\n            this.maxlength = newmaxlength;\n        }\n    };\n    ByteArray.prototype.writeByte = function (b) {\n        this.ensureWriteableSpace(1);\n        var view = new Int8Array(this.arraybytes);\n        view[this.position++] = (~~b); // ~~ is cast to int in js...\n        if (this.position > this.length) {\n            this.length = this.position;\n        }\n    };\n    ByteArray.prototype.readByte = function () {\n        if (this.position >= this.length)\n            throw \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n        var view = new Int8Array(this.arraybytes);\n        return view[this.position++];\n    };\n    ByteArray.prototype.readBytes = function (bytes, offset, length) {\n        if (offset === void 0) { offset = 0; }\n        if (length === void 0) { length = 0; }\n        if (length == null)\n            length = bytes.length;\n        bytes.ensureWriteableSpace(offset + length);\n        var byteView = new Int8Array(bytes.arraybytes);\n        var localByteView = new Int8Array(this.arraybytes);\n        byteView.set(localByteView.subarray(this.position, this.position + length), offset);\n        this.position += length;\n        if (length + offset > bytes.length)\n            bytes.length += (length + offset) - bytes.length;\n    };\n    ByteArray.prototype.writeUnsignedByte = function (b) {\n        this.ensureWriteableSpace(1);\n        var view = new Uint8Array(this.arraybytes);\n        view[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\n        if (this.position > this.length)\n            this.length = this.position;\n    };\n    ByteArray.prototype.readUnsignedByte = function () {\n        if (this.position >= this.length)\n            throw \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n        var view = new Uint8Array(this.arraybytes);\n        return view[this.position++];\n    };\n    ByteArray.prototype.writeUnsignedShort = function (b) {\n        this.ensureWriteableSpace(2);\n        if ((this.position & 1) == 0) {\n            var view = new Uint16Array(this.arraybytes);\n            view[this.position >> 1] = (~~b) & 0xffff; // ~~ is cast to int in js...\n        }\n        else {\n            var view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n            view[0] = (~~b) & 0xffff;\n            var view2 = new Uint8Array(this.arraybytes, this.position, 2);\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n            view2.set(view3);\n        }\n        this.position += 2;\n        if (this.position > this.length)\n            this.length = this.position;\n    };\n    ByteArray.prototype.readUTFBytes = function (len) {\n        var value = \"\";\n        var max = this.position + len;\n        var data = new DataView(this.arraybytes);\n        // utf8-encode\n        while (this.position < max) {\n            var c = data.getUint8(this.position++);\n            if (c < 0x80) {\n                if (c == 0)\n                    break;\n                value += String.fromCharCode(c);\n            }\n            else if (c < 0xE0) {\n                value += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\n            }\n            else if (c < 0xF0) {\n                var c2 = data.getUint8(this.position++);\n                value += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\n            }\n            else {\n                var c2 = data.getUint8(this.position++);\n                var c3 = data.getUint8(this.position++);\n                value += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\n            }\n        }\n        return value;\n    };\n    ByteArray.prototype.readInt = function () {\n        var data = new DataView(this.arraybytes);\n        var int = data.getInt32(this.position, true);\n        this.position += 4;\n        return int;\n    };\n    ByteArray.prototype.readShort = function () {\n        var data = new DataView(this.arraybytes);\n        var short = data.getInt16(this.position, true);\n        this.position += 2;\n        return short;\n    };\n    ByteArray.prototype.readDouble = function () {\n        var data = new DataView(this.arraybytes);\n        var double = data.getFloat64(this.position, true);\n        this.position += 8;\n        return double;\n    };\n    ByteArray.prototype.readUnsignedShort = function () {\n        if (this.position > this.length + 2)\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n        if ((this.position & 1) == 0) {\n            var view = new Uint16Array(this.arraybytes);\n            var pa = this.position >> 1;\n            this.position += 2;\n            return view[pa];\n        }\n        else {\n            var view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n            var view2 = new Uint8Array(this.arraybytes, this.position, 2);\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n            view3.set(view2);\n            this.position += 2;\n            return view[0];\n        }\n    };\n    ByteArray.prototype.writeUnsignedInt = function (b) {\n        this.ensureWriteableSpace(4);\n        if ((this.position & 3) == 0) {\n            var view = new Uint32Array(this.arraybytes);\n            view[this.position >> 2] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\n        }\n        else {\n            var view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n            view[0] = (~~b) & 0xffffffff;\n            var view2 = new Uint8Array(this.arraybytes, this.position, 4);\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n            view2.set(view3);\n        }\n        this.position += 4;\n        if (this.position > this.length)\n            this.length = this.position;\n    };\n    ByteArray.prototype.readUnsignedInt = function () {\n        if (this.position > this.length + 4)\n            throw \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n        if ((this.position & 3) == 0) {\n            var view = new Uint32Array(this.arraybytes);\n            var pa = this.position >> 2;\n            this.position += 4;\n            return view[pa];\n        }\n        else {\n            var view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n            var view2 = new Uint8Array(this.arraybytes, this.position, 4);\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n            view3.set(view2);\n            this.position += 4;\n            return view[0];\n        }\n    };\n    ByteArray.prototype.writeFloat = function (b) {\n        this.ensureWriteableSpace(4);\n        if ((this.position & 3) == 0) {\n            var view = new Float32Array(this.arraybytes);\n            view[this.position >> 2] = b;\n        }\n        else {\n            var view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n            view[0] = b;\n            var view2 = new Uint8Array(this.arraybytes, this.position, 4);\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n            view2.set(view3);\n        }\n        this.position += 4;\n        if (this.position > this.length)\n            this.length = this.position;\n    };\n    ByteArray.prototype.readFloat = function () {\n        if (this.position > this.length + 4)\n            throw \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n        if ((this.position & 3) == 0) {\n            var view = new Float32Array(this.arraybytes);\n            var pa = this.position >> 2;\n            this.position += 4;\n            return view[pa];\n        }\n        else {\n            var view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n            var view2 = new Uint8Array(this.arraybytes, this.position, 4);\n            var view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n            view3.set(view2);\n            this.position += 4;\n            return view[0];\n        }\n    };\n    return ByteArray;\n}(ByteArrayBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ByteArray;\n\n},{\"awayjs-core/lib/utils/ByteArrayBase\":\"awayjs-core/lib/utils/ByteArrayBase\"}],\"awayjs-core/lib/utils/CSS\":[function(require,module,exports){\n\"use strict\";\nvar CSS = (function () {\n    function CSS() {\n    }\n    CSS.setElementSize = function (element, width, height) {\n        if (!element)\n            return;\n        element.style.width = width + \"px\";\n        element.style.height = height + \"px\";\n        element[\"width\"] = width;\n        element[\"height\"] = height;\n    };\n    CSS.setElementWidth = function (element, width) {\n        if (!element)\n            return;\n        element.style.width = width + \"px\";\n        element[\"width\"] = width;\n    };\n    CSS.setElementHeight = function (element, height) {\n        if (!element)\n            return;\n        element.style.height = height + \"px\";\n        element[\"height\"] = height;\n    };\n    CSS.setElementX = function (element, x) {\n        if (!element)\n            return;\n        element.style.position = 'absolute';\n        element.style.left = x + \"px\";\n    };\n    CSS.setElementY = function (element, y) {\n        if (!element)\n            return;\n        element.style.position = 'absolute';\n        element.style.top = y + \"px\";\n    };\n    CSS.getElementVisibility = function (element) {\n        if (!element)\n            return false;\n        return element.style.visibility == 'visible';\n    };\n    CSS.setElementVisibility = function (element, visible) {\n        if (!element)\n            return;\n        if (visible) {\n            element.style.visibility = 'visible';\n        }\n        else {\n            element.style.visibility = 'hidden';\n        }\n    };\n    CSS.setElementAlpha = function (element, alpha) {\n        if (element instanceof HTMLCanvasElement) {\n            var context = element.getContext(\"2d\");\n            context.globalAlpha = alpha;\n        }\n    };\n    CSS.setElementPosition = function (element, x, y, absolute) {\n        if (absolute === void 0) { absolute = false; }\n        if (!element)\n            return;\n        if (absolute) {\n            element.style.position = \"absolute\";\n        }\n        else {\n            element.style.position = \"relative\";\n        }\n        element.style.left = x + \"px\";\n        element.style.top = y + \"px\";\n    };\n    return CSS;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CSS;\n\n},{}],\"awayjs-core/lib/utils/ColorUtils\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar ColorUtils = (function () {\n    function ColorUtils() {\n    }\n    ColorUtils.float32ColorToARGB = function (float32Color) {\n        var a = (float32Color & 0xff000000) >>> 24;\n        var r = (float32Color & 0xff0000) >>> 16;\n        var g = (float32Color & 0xff00) >>> 8;\n        var b = float32Color & 0xff;\n        var result = [a, r, g, b];\n        return result;\n    };\n    ColorUtils.ARGBtoFloat32 = function (a, r, g, b) {\n        return ((a << 24) | (r << 16) | (g << 8) | b);\n    };\n    ColorUtils.componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? \"0\" + hex : hex;\n    };\n    ColorUtils.RGBToHexString = function (argb) {\n        return \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n    };\n    ColorUtils.ARGBToHexString = function (argb) {\n        return \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n    };\n    return ColorUtils;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ColorUtils;\n\n},{}],\"awayjs-core/lib/utils/Debug\":[function(require,module,exports){\n\"use strict\";\nvar PartialImplementationError_1 = require(\"awayjs-core/lib/errors/PartialImplementationError\");\n/**\n *\n */\nvar Debug = (function () {\n    function Debug() {\n    }\n    Debug.breakpoint = function () {\n        Debug['break']();\n    };\n    Debug.throwPIROnKeyWordOnly = function (str, enable) {\n        if (enable === void 0) { enable = true; }\n        if (!enable)\n            Debug.keyword = null;\n        else\n            Debug.keyword = str;\n    };\n    Debug.throwPIR = function (clss, fnc, msg) {\n        Debug.logPIR('PartialImplementationError ' + clss, fnc, msg);\n        if (Debug.THROW_ERRORS) {\n            if (Debug.keyword) {\n                var e = clss + fnc + msg;\n                if (e.indexOf(Debug.keyword) == -1)\n                    return;\n            }\n            throw new PartialImplementationError_1.default(clss + '.' + fnc + ': ' + msg);\n        }\n    };\n    Debug.logPIR = function (clss, fnc, msg) {\n        if (msg === void 0) { msg = ''; }\n        if (Debug.LOG_PI_ERRORS)\n            console.log(clss + '.' + fnc + ': ' + msg);\n    };\n    Debug.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (Debug.ENABLE_LOG)\n            console.log(args);\n    };\n    Debug.THROW_ERRORS = true;\n    Debug.ENABLE_LOG = true;\n    Debug.LOG_PI_ERRORS = true;\n    Debug.keyword = null;\n    return Debug;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Debug;\n\n},{\"awayjs-core/lib/errors/PartialImplementationError\":\"awayjs-core/lib/errors/PartialImplementationError\"}],\"awayjs-core/lib/utils/Extensions\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar Extensions = (function () {\n    function Extensions() {\n    }\n    Extensions.SIMD = Boolean(typeof (SIMD) !== \"undefined\");\n    return Extensions;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Extensions;\n\n},{}],\"awayjs-core/lib/utils/IArrayBufferViewClass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-core/lib/utils/ImageUtils\":[function(require,module,exports){\n\"use strict\";\nvar ImageUtils = (function () {\n    function ImageUtils() {\n    }\n    ImageUtils.isImage2DValid = function (image2D) {\n        if (image2D == null)\n            return true;\n        return ImageUtils.isDimensionValid(image2D.width, image2D.powerOfTwo) && ImageUtils.isDimensionValid(image2D.height, image2D.powerOfTwo);\n    };\n    ImageUtils.isHTMLImageElementValid = function (image) {\n        if (image == null)\n            return true;\n        return ImageUtils.isDimensionValid(image.width) && ImageUtils.isDimensionValid(image.height);\n    };\n    ImageUtils.isDimensionValid = function (d, powerOfTwo) {\n        if (powerOfTwo === void 0) { powerOfTwo = true; }\n        return d >= 1 && d <= ImageUtils.MAX_SIZE && (!powerOfTwo || ImageUtils.isPowerOfTwo(d));\n    };\n    ImageUtils.isPowerOfTwo = function (value) {\n        return value ? ((value & -value) == value) : false;\n    };\n    ImageUtils.getBestPowerOf2 = function (value) {\n        var p = 1;\n        while (p < value)\n            p <<= 1;\n        if (p > ImageUtils.MAX_SIZE)\n            p = ImageUtils.MAX_SIZE;\n        return p;\n    };\n    ImageUtils.MAX_SIZE = 2048;\n    return ImageUtils;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ImageUtils;\n\n},{}],\"awayjs-core/lib/utils/MipmapGenerator\":[function(require,module,exports){\n\"use strict\";\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nvar Matrix_1 = require(\"awayjs-core/lib/geom/Matrix\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar MipmapGenerator = (function () {\n    function MipmapGenerator() {\n    }\n    MipmapGenerator._generateMipMaps = function (source, output, alpha) {\n        if (alpha === void 0) { alpha = false; }\n        var w = source.width;\n        var h = source.height;\n        var i = 0;\n        var mipmap;\n        MipmapGenerator._rect.width = w;\n        MipmapGenerator._rect.height = h;\n        //use (OR) to create non-square texture mipmaps\n        while (w >= 1 || h >= 1) {\n            mipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\n            if (alpha)\n                mipmap.fillRect(MipmapGenerator._rect, 0);\n            MipmapGenerator._matrix.a = MipmapGenerator._rect.width / source.width;\n            MipmapGenerator._matrix.d = MipmapGenerator._rect.height / source.height;\n            //todo: add support for NPOT textures\n            if (document) {\n                mipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\n            }\n            else {\n                if (source.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\n                    //for BitmapImage2D\n                    var bitmapImage = source;\n                    bitmapImage.lock();\n                    mipmap.lock();\n                    this.downsampleImage(bitmapImage.getImageData(), mipmap.getImageData());\n                    mipmap.unlock();\n                    bitmapImage.unlock();\n                }\n                else if (source.constructor.toString().indexOf(\"CPUCanvas\") > -1) {\n                    this.downsampleImage(source.getImageData(), mipmap.getImageData());\n                }\n                else {\n                    //for imageData\n                    this.downsampleImage(source, mipmap.getImageData());\n                }\n            }\n            w >>= 1;\n            h >>= 1;\n            MipmapGenerator._rect.width = w > 1 ? w : 1;\n            MipmapGenerator._rect.height = h > 1 ? h : 1;\n            i++;\n        }\n    };\n    MipmapGenerator._getMipmapHolder = function (mipMapHolder, newW, newH) {\n        if (mipMapHolder) {\n            if (mipMapHolder.width == newW && mipMapHolder.height == newH)\n                return mipMapHolder;\n            MipmapGenerator._freeMipMapHolder(mipMapHolder);\n        }\n        if (!MipmapGenerator._mipMaps[newW]) {\n            MipmapGenerator._mipMaps[newW] = [];\n            MipmapGenerator._mipMapUses[newW] = [];\n        }\n        if (!MipmapGenerator._mipMaps[newW][newH]) {\n            mipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapImage2D_1.default(newW, newH, true);\n            MipmapGenerator._mipMapUses[newW][newH] = 1;\n        }\n        else {\n            MipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\n            mipMapHolder = MipmapGenerator._mipMaps[newW][newH];\n        }\n        return mipMapHolder;\n    };\n    MipmapGenerator._freeMipMapHolder = function (mipMapHolder) {\n        var holderWidth = mipMapHolder.width;\n        var holderHeight = mipMapHolder.height;\n        if (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\n            MipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\n            MipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\n        }\n    };\n    MipmapGenerator.downsampleImage = function (bitmap, destBitmap) {\n        var box = new BoxFilter();\n        var xkernel = new PolyphaseKernel(box, bitmap.width, destBitmap.width, 4);\n        var ykernel = new PolyphaseKernel(box, bitmap.height, destBitmap.height, 4);\n        var tempBitmap = []; //destBitmap.width, bitmap.height\n        var scale = 0;\n        var iscale = 0;\n        var kernelLength = 0;\n        var kernelWidth = 0;\n        var kernelWindowSize = 0;\n        var sumR = 0;\n        var sumG = 0;\n        var sumB = 0;\n        var sumA = 0;\n        var center;\n        var left;\n        var i = 0;\n        var j = 0;\n        var index = 0;\n        for (var y = 0; y < bitmap.height; y++) {\n            kernelLength = xkernel.len;\n            scale = kernelLength / bitmap.width;\n            iscale = 1.0 / scale;\n            kernelWidth = xkernel.width;\n            kernelWindowSize = xkernel.windowSize;\n            for (i = 0; i < kernelLength; i++) {\n                center = (0.5 + i) * iscale;\n                left = Math.floor(center - kernelWidth);\n                sumR = 0;\n                sumG = 0;\n                sumB = 0;\n                sumA = 0;\n                for (var j = 0; j < kernelWindowSize; ++j) {\n                    index = (y * bitmap.width + (left + j)) * 4;\n                    var colorR = bitmap.data[index];\n                    var colorG = bitmap.data[index + 1];\n                    var colorB = bitmap.data[index + 2];\n                    var colorA = bitmap.data[index + 3];\n                    var value = xkernel.valueAt(i, j);\n                    sumR += value * colorR;\n                    sumG += value * colorG;\n                    sumB += value * colorB;\n                    sumA += value * colorA;\n                }\n                index = (y * destBitmap.width + i) * 4;\n                tempBitmap[index] = sumR;\n                tempBitmap[index + 1] = sumG;\n                tempBitmap[index + 2] = sumB;\n                tempBitmap[index + 3] = sumA;\n            }\n        }\n        for (var x = 0; x < destBitmap.width; x++) {\n            kernelLength = ykernel.len;\n            scale = kernelLength / bitmap.height;\n            iscale = 1.0 / scale;\n            kernelWidth = ykernel.width;\n            kernelWindowSize = ykernel.windowSize;\n            for (i = 0; i < kernelLength; i++) {\n                center = (0.5 + i) * iscale;\n                left = Math.floor(center - kernelWidth);\n                sumR = 0;\n                sumG = 0;\n                sumB = 0;\n                sumA = 0;\n                for (j = 0; j < kernelWindowSize; ++j) {\n                    index = ((j + left) * destBitmap.width + x) * 4;\n                    var colorR = tempBitmap[index];\n                    var colorG = tempBitmap[index + 1];\n                    var colorB = tempBitmap[index + 2];\n                    var colorA = tempBitmap[index + 3];\n                    var value = ykernel.valueAt(i, j);\n                    sumR += value * colorR;\n                    sumG += value * colorG;\n                    sumB += value * colorB;\n                    sumA += value * colorA;\n                }\n                index = (i * destBitmap.width + x) * 4;\n                destBitmap.data[index] = sumR;\n                destBitmap.data[index + 1] = sumG;\n                destBitmap.data[index + 2] = sumB;\n                destBitmap.data[index + 3] = sumA;\n            }\n        }\n        return destBitmap;\n    };\n    MipmapGenerator._mipMaps = [];\n    MipmapGenerator._mipMapUses = [];\n    MipmapGenerator._matrix = new Matrix_1.default();\n    MipmapGenerator._rect = new Rectangle_1.default();\n    return MipmapGenerator;\n}());\nvar PolyphaseKernel = (function () {\n    function PolyphaseKernel(f, srcLength, dstLength, samples) {\n        var scale = dstLength / srcLength;\n        var iscale = 1.0 / scale;\n        if (scale > 1) {\n            // Upsampling.\n            samples = 1;\n            scale = 1;\n        }\n        this.len = dstLength;\n        this.width = f.width * iscale;\n        this.windowSize = Math.ceil(this.width * 2);\n        this.data = [];\n        for (var i = 0; i < this.len; i++) {\n            var center = (0.5 + i) * iscale;\n            var left = Math.floor(center - this.width);\n            var total = 0.0;\n            for (var j = 0; j < this.windowSize; j++) {\n                var sample = f.sampleBox(left + j - center, scale, samples);\n                //printf(\"%f %X\\n\", sample, *(uint32 *)&sample);\n                this.data[i * this.windowSize + j] = sample;\n                total += sample;\n            }\n            // normalize weights.\n            for (var j = 0; j < this.windowSize; j++) {\n                this.data[i * this.windowSize + j] /= total;\n            }\n        }\n    }\n    PolyphaseKernel.prototype.valueAt = function (column, x) {\n        return this.data[column * this.windowSize + x];\n    };\n    return PolyphaseKernel;\n}());\nvar BoxFilter = (function () {\n    function BoxFilter() {\n    }\n    Object.defineProperty(BoxFilter.prototype, \"width\", {\n        get: function () {\n            return 0.5;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BoxFilter.prototype.sampleBox = function (x, scale, samples) {\n        var sum = 0;\n        var isamples = 1.0 / samples;\n        for (var s = 0; s < samples; s++) {\n            var p = (x + (s + 0.5) * isamples) * scale;\n            var value = this.evaluate(p);\n            sum += value;\n        }\n        return sum * isamples;\n    };\n    BoxFilter.prototype.evaluate = function (x) {\n        if (Math.abs(x) <= this.width)\n            return 1.0;\n        else\n            return 0.0;\n    };\n    return BoxFilter;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = MipmapGenerator;\n\n},{\"awayjs-core/lib/geom/Matrix\":\"awayjs-core/lib/geom/Matrix\",\"awayjs-core/lib/geom/Rectangle\":\"awayjs-core/lib/geom/Rectangle\",\"awayjs-core/lib/image/BitmapImage2D\":\"awayjs-core/lib/image/BitmapImage2D\"}],\"awayjs-core/lib/utils/RequestAnimationFrame\":[function(require,module,exports){\n\"use strict\";\nvar getTimer_1 = require(\"awayjs-core/lib/utils/getTimer\");\nvar RequestAnimationFrame = (function () {\n    function RequestAnimationFrame(callback, callbackContext) {\n        var _this = this;\n        this._active = false;\n        this._argsArray = new Array();\n        this._getTimer = getTimer_1.default;\n        this.setCallback(callback, callbackContext);\n        this._rafUpdateFunction = function () {\n            if (_this._active)\n                _this._tick();\n        };\n        this._argsArray.push(this._dt);\n    }\n    // Public\n    /**\n     *\n     * @param callback\n     * @param callbackContext\n     */\n    RequestAnimationFrame.prototype.setCallback = function (callback, callbackContext) {\n        this._callback = callback;\n        this._callbackContext = callbackContext;\n    };\n    /**\n     *\n     */\n    RequestAnimationFrame.prototype.start = function () {\n        this._prevTime = this._getTimer();\n        this._active = true;\n        if (window) {\n            if (window.requestAnimationFrame) {\n                window.requestAnimationFrame(this._rafUpdateFunction);\n            }\n            else {\n                if (window['mozRequestAnimationFrame'])\n                    window.requestAnimationFrame = window['mozRequestAnimationFrame'];\n                else if (window['webkitRequestAnimationFrame'])\n                    window.requestAnimationFrame = window['webkitRequestAnimationFrame'];\n                else if (window['oRequestAnimationFrame'])\n                    window.requestAnimationFrame = window['oRequestAnimationFrame'];\n            }\n        }\n    };\n    /**\n     *\n     */\n    RequestAnimationFrame.prototype.stop = function () {\n        this._active = false;\n    };\n    Object.defineProperty(RequestAnimationFrame.prototype, \"active\", {\n        // Get / Set\n        /**\n         *\n         * @returns {boolean}\n         */\n        get: function () {\n            return this._active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Private\n    /**\n     *\n     * @private\n     */\n    RequestAnimationFrame.prototype._tick = function () {\n        this._currentTime = this._getTimer();\n        this._dt = this._currentTime - this._prevTime;\n        this._argsArray[0] = this._dt;\n        this._callback.apply(this._callbackContext, this._argsArray);\n        window.requestAnimationFrame(this._rafUpdateFunction);\n        this._prevTime = this._currentTime;\n    };\n    return RequestAnimationFrame;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RequestAnimationFrame;\n\n},{\"awayjs-core/lib/utils/getTimer\":\"awayjs-core/lib/utils/getTimer\"}],\"awayjs-core/lib/utils/Timer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar TimerEvent_1 = require(\"awayjs-core/lib/events/TimerEvent\");\nvar Timer = (function (_super) {\n    __extends(Timer, _super);\n    function Timer(delay, repeatCount) {\n        if (repeatCount === void 0) { repeatCount = 0; }\n        _super.call(this);\n        this._repeatCount = 0;\n        this._currentCount = 0;\n        this._running = false;\n        this._delay = delay;\n        this._repeatCount = repeatCount;\n        if (isNaN(delay) || delay < 0)\n            throw new ErrorBase_1.default(\"Delay is negative or not a number\");\n    }\n    Object.defineProperty(Timer.prototype, \"currentCount\", {\n        get: function () {\n            return this._currentCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Timer.prototype, \"delay\", {\n        get: function () {\n            return this._delay;\n        },\n        set: function (value) {\n            this._delay = value;\n            if (this._running) {\n                this.stop();\n                this.start();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Timer.prototype, \"repeatCount\", {\n        get: function () {\n            return this._repeatCount;\n        },\n        set: function (value) {\n            this._repeatCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Timer.prototype.reset = function () {\n        if (this._running)\n            this.stop();\n        this._currentCount = 0;\n    };\n    Object.defineProperty(Timer.prototype, \"running\", {\n        get: function () {\n            return this._running;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Timer.prototype.start = function () {\n        var _this = this;\n        this._running = true;\n        clearInterval(this._iid);\n        this._iid = setInterval(function () { return _this.tick(); }, this._delay);\n    };\n    Timer.prototype.stop = function () {\n        this._running = false;\n        clearInterval(this._iid);\n    };\n    Timer.prototype.tick = function () {\n        this._currentCount++;\n        if ((this._repeatCount > 0) && this._currentCount >= this._repeatCount) {\n            this.stop();\n            this.dispatchEvent(new TimerEvent_1.default(TimerEvent_1.default.TIMER));\n            this.dispatchEvent(new TimerEvent_1.default(TimerEvent_1.default.TIMER_COMPLETE));\n        }\n        else {\n            this.dispatchEvent(new TimerEvent_1.default(TimerEvent_1.default.TIMER));\n        }\n    };\n    return Timer;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Timer;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":\"awayjs-core/lib/errors/ErrorBase\",\"awayjs-core/lib/events/EventDispatcher\":\"awayjs-core/lib/events/EventDispatcher\",\"awayjs-core/lib/events/TimerEvent\":\"awayjs-core/lib/events/TimerEvent\"}],\"awayjs-core/lib/utils/XmlUtils\":[function(require,module,exports){\n\"use strict\";\nvar XmlUtils = (function () {\n    function XmlUtils() {\n    }\n    XmlUtils.getChildrenWithTag = function (node, tag) {\n        var fragment = document.createDocumentFragment();\n        if (node) {\n            var num = node.childNodes.length;\n            for (var i = 0; i < num; i++) {\n                var child = node.childNodes[i];\n                if (child != null) {\n                    if (child.nodeName == tag) {\n                        fragment.appendChild(child);\n                    }\n                }\n            }\n        }\n        return fragment.childNodes;\n    };\n    XmlUtils.filterListByParam = function (nodes, paramName, paramValue) {\n        var fragment = document.createDocumentFragment();\n        if (nodes) {\n            var num = nodes.length;\n            for (var i = 0; i < num; i++) {\n                var child = nodes[i];\n                if (child != null) {\n                    if (child.attributes.getNamedItem(paramName).value == paramValue) {\n                        fragment.appendChild(child);\n                    }\n                }\n            }\n        }\n        return fragment.childNodes;\n    };\n    XmlUtils.strToXml = function (str) {\n        var parser = new DOMParser();\n        var node = parser.parseFromString(str, \"text/xml\");\n        return node;\n    };\n    XmlUtils.nodeToString = function (node) {\n        if (!node)\n            return \"\";\n        var str = (new XMLSerializer()).serializeToString(node);\n        return str;\n    };\n    XmlUtils.readAttributeValue = function (node, attrName) {\n        var attrs = node.attributes;\n        if (attrs == undefined) {\n            return \"\";\n        }\n        var attribute = attrs.getNamedItem(attrName);\n        if (!attribute) {\n            //console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", attribute does not exist.\";\n            return \"\";\n        }\n        //console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", value: \" + attribute.value);\n        return attribute.value;\n    };\n    XmlUtils.writeAttributeValue = function (node, attrName, attrValue) {\n        var attribute = new Attr();\n        attribute.name = attrName;\n        attribute.value = attrValue;\n        attribute = node.attributes.setNamedItem(attribute);\n        console.log(\"XmlUltils - writeAttributeValue() - name: \" + attribute.name + \", value: \" + attribute.value);\n    };\n    XmlUtils.hasAttribute = function (node, attrName) {\n        var attrs = node.attributes;\n        if (attrs == undefined) {\n            return false;\n        }\n        var attribute = attrs.getNamedItem(attrName);\n        return attribute != null;\n    };\n    return XmlUtils;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = XmlUtils;\n\n},{}],\"awayjs-core/lib/utils/getTimer\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n *\n * @returns {number}\n */\nfunction getTimer() {\n    // number milliseconds of 1970/01/01\n    // this different to AS3 implementation which gets the number of milliseconds\n    // since instance of Flash player was initialised\n    return Date.now();\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = getTimer;\n\n},{}],\"awayjs-core/lib/utils\":[function(require,module,exports){\n\"use strict\";\nvar BitmapImageUtils_1 = require(\"awayjs-core/lib/utils/BitmapImageUtils\");\nexports.BitmapImageUtils = BitmapImageUtils_1.default;\nvar ByteArray_1 = require(\"awayjs-core/lib/utils/ByteArray\");\nexports.ByteArray = ByteArray_1.default;\nvar ByteArrayBase_1 = require(\"awayjs-core/lib/utils/ByteArrayBase\");\nexports.ByteArrayBase = ByteArrayBase_1.default;\nvar ByteArrayBuffer_1 = require(\"awayjs-core/lib/utils/ByteArrayBuffer\");\nexports.ByteArrayBuffer = ByteArrayBuffer_1.default;\nvar ColorUtils_1 = require(\"awayjs-core/lib/utils/ColorUtils\");\nexports.ColorUtils = ColorUtils_1.default;\nvar CSS_1 = require(\"awayjs-core/lib/utils/CSS\");\nexports.CSS = CSS_1.default;\nvar Debug_1 = require(\"awayjs-core/lib/utils/Debug\");\nexports.Debug = Debug_1.default;\nvar Extensions_1 = require(\"awayjs-core/lib/utils/Extensions\");\nexports.Extensions = Extensions_1.default;\nvar getTimer_1 = require(\"awayjs-core/lib/utils/getTimer\");\nexports.getTimer = getTimer_1.default;\nvar ImageUtils_1 = require(\"awayjs-core/lib/utils/ImageUtils\");\nexports.ImageUtils = ImageUtils_1.default;\nvar MipmapGenerator_1 = require(\"awayjs-core/lib/utils/MipmapGenerator\");\nexports.MipmapGenerator = MipmapGenerator_1.default;\nvar RequestAnimationFrame_1 = require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nexports.RequestAnimationFrame = RequestAnimationFrame_1.default;\nvar Timer_1 = require(\"awayjs-core/lib/utils/Timer\");\nexports.Timer = Timer_1.default;\nvar XmlUtils_1 = require(\"awayjs-core/lib/utils/XmlUtils\");\nexports.XmlUtils = XmlUtils_1.default;\n\n},{\"awayjs-core/lib/utils/BitmapImageUtils\":\"awayjs-core/lib/utils/BitmapImageUtils\",\"awayjs-core/lib/utils/ByteArray\":\"awayjs-core/lib/utils/ByteArray\",\"awayjs-core/lib/utils/ByteArrayBase\":\"awayjs-core/lib/utils/ByteArrayBase\",\"awayjs-core/lib/utils/ByteArrayBuffer\":\"awayjs-core/lib/utils/ByteArrayBuffer\",\"awayjs-core/lib/utils/CSS\":\"awayjs-core/lib/utils/CSS\",\"awayjs-core/lib/utils/ColorUtils\":\"awayjs-core/lib/utils/ColorUtils\",\"awayjs-core/lib/utils/Debug\":\"awayjs-core/lib/utils/Debug\",\"awayjs-core/lib/utils/Extensions\":\"awayjs-core/lib/utils/Extensions\",\"awayjs-core/lib/utils/ImageUtils\":\"awayjs-core/lib/utils/ImageUtils\",\"awayjs-core/lib/utils/MipmapGenerator\":\"awayjs-core/lib/utils/MipmapGenerator\",\"awayjs-core/lib/utils/RequestAnimationFrame\":\"awayjs-core/lib/utils/RequestAnimationFrame\",\"awayjs-core/lib/utils/Timer\":\"awayjs-core/lib/utils/Timer\",\"awayjs-core/lib/utils/XmlUtils\":\"awayjs-core/lib/utils/XmlUtils\",\"awayjs-core/lib/utils/getTimer\":\"awayjs-core/lib/utils/getTimer\"}]},{},[1])\n\n",
    "import * as attributes\t\t\t\tfrom \"awayjs-core/lib/attributes\";\nimport * as audio\t\t\t\t\tfrom \"awayjs-core/lib/audio\";\nimport * as errors\t\t\t\t\tfrom \"awayjs-core/lib/errors\";\nimport * as events\t\t\t\t\tfrom \"awayjs-core/lib/events\";\nimport * as geom\t\t\t\t\tfrom \"awayjs-core/lib/geom\";\nimport * as image\t\t\t\t\tfrom \"awayjs-core/lib/image\";\nimport * as library\t\t\t\t\tfrom \"awayjs-core/lib/library\";\nimport * as managers\t\t\t\tfrom \"awayjs-core/lib/managers\";\nimport * as net\t\t\t\t\t\tfrom \"awayjs-core/lib/net\";\nimport * as parsers\t\t\t\t\tfrom \"awayjs-core/lib/parsers\";\nimport * as projections\t\t\t\tfrom \"awayjs-core/lib/projections\";\nimport * as ui\t\t\t\t\t\tfrom \"awayjs-core/lib/ui\";\nimport * as utils\t\t\t\t\tfrom \"awayjs-core/lib/utils\";\n\nlibrary.Loader.enableParser(parsers.Image2DParser);\nlibrary.Loader.enableParser(parsers.ImageCubeParser);\nlibrary.Loader.enableParser(parsers.TextureAtlasParser);\nlibrary.Loader.enableParser(parsers.WaveAudioParser);\n\nexport {\n\tattributes,\n\taudio,\n\terrors,\n\tevents,\n\tgeom,\n\timage,\n\tlibrary,\n\tmanagers,\n\tnet,\n\tparsers,\n\tprojections,\n\tui,\n\tutils\n}",
    "import AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport AssetBase\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nclass AttributesBuffer extends AssetBase\n{\n\tpublic static assetType:string = \"[assets AttributesBuffer]\";\n\t\n\tprivate _count:number = 0;\n\tprivate _stride:number = 0;\n\tprivate _newStride:number = 0;\n\n\tprivate _buffer:ArrayBuffer;\n\tprivate _bufferView:Uint8Array;\n\tprivate _contentDirty:boolean;\n\tprivate _lengthDirty:boolean;\n\tprivate _viewVOs:Array<ViewVO> = new Array<ViewVO>();\n\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesBuffer.assetType;\n\t}\n\n\tpublic get stride():number\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\treturn this._stride;\n\t}\n\n\tpublic set stride(value:number)\n\t{\n\t\tif (this._newStride == value)\n\t\t\treturn;\n\n\t\tthis._newStride = value;\n\n\t\tthis.resize();\n\t}\n\t\n\tpublic get count():number\n\t{\n\t\treturn this._count;\n\t}\n\t\n\tpublic set count(value:number)\n\t{\n\t\tif (this._count == value)\n\t\t\treturn;\n\t\t\n\t\tthis._count = value;\n\t\t\n\t\tthis.resize();\n\t}\n\n\n\tpublic get buffer():ArrayBuffer\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._buffer;\n\t}\n\n\n\tpublic get bufferView():Uint8Array\n\t{\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\tthis._contentDirty = false;\n\n\t\treturn this._bufferView;\n\t}\n\n\tpublic set bufferView(value:Uint8Array)\n\t{\n\t\tthis._bufferView = value;\n\t\tthis._buffer = this._bufferView.buffer;\n\t}\n\n\tpublic get length()\n\t{\n\t\treturn this._count*this.stride;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tconstructor(stride:number = 0, count:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._stride = this._newStride = stride;\n\t\tthis._count = count;\n\n\t\tthis._buffer = new ArrayBuffer(this._stride*this._count);\n\t\tthis._bufferView = new Uint8Array(this._buffer, 0, this._buffer.byteLength);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tif (this._contentDirty)\n\t\t\treturn;\n\n\t\tsuper.invalidate();\n\n\t\tthis._contentDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic resize():void\n\t{\n\t\tif (this._lengthDirty)\n\t\t\treturn;\n\n\t\tthis.clear();\n\n\t\tthis._lengthDirty = true;\n\n\t\t//dispose buffer if stride is 0\n\t\tif (!this._newStride) {\n\t\t\tthis._buffer = null;\n\t\t\tthis._bufferView = null;\n\t\t}\n\t}\n\n\tpublic clone():AttributesBuffer\n\t{\n\t\tvar attributesBuffer:AttributesBuffer = new AttributesBuffer(this._stride, this._count);\n\t\tattributesBuffer.bufferView.set(this.bufferView);\n\n\t\tvar len:number = this._viewVOs.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._viewVOs[i].view._internalClone(attributesBuffer);\n\n\t\treturn attributesBuffer;\n\t}\n\n\tpublic getView(index:number):AttributesView\n\t{\n\t\tif (index < this._viewVOs.length)\n\t\t\treturn this._viewVOs[index].view;\n\n\t\treturn null;\n\t}\n\n\tpublic _setAttributes(viewIndex:number, arrayBufferView:ArrayBufferView, offset:number = 0)\n\t{\n\t\tvar array:Uint8Array = (arrayBufferView instanceof Uint8Array)? <Uint8Array> arrayBufferView : new Uint8Array(arrayBufferView.buffer);\n\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\t\tvar vCount:number = array.length/vLength;\n\n\t\t//make sure there is enough space in the buffer\n\t\tif (this.count < vCount + offset)\n\t\t\tthis.count = vCount + offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1) {\n\t\t\tthis._bufferView.set(array);\n\t\t} else {\n\t\t\tfor (var i:number = 0; i < vCount; i++)\n\t\t\t\tthis._bufferView.set(array.subarray(i*vLength, (i+1)*vLength), (i+offset)*this._stride + vOffset);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic _getLocalArrayBuffer(viewIndex:number):ArrayBuffer\n\t{\n\t\tvar viewVO:ViewVO = this._viewVOs[viewIndex];\n\t\tvar vLength:number = viewVO.length;\n\t\tvar vOffset:number = viewVO.offset;\n\n\t\tif (this._lengthDirty)\n\t\t\tthis._updateLength();\n\n\t\t//fast path for separate buffers\n\t\tif (this._viewVOs.length == 1)\n\t\t\treturn this._buffer;\n\n\t\tvar localBuffer:ArrayBuffer = new ArrayBuffer(this._count*vLength);\n\t\tvar localBufferView:Uint8Array = new Uint8Array(localBuffer);\n\n\t\tfor (var i:number = 0; i < this._count; i++)\n\t\t\tlocalBufferView.set(this._bufferView.subarray(i*this._stride + vOffset, i*this._stride + vOffset + vLength), i*vLength);\n\n\t\treturn localBuffer;\n\t}\n\n\tpublic _addView(view:AttributesView)\n\t{\n\t\tvar viewVO:ViewVO = new ViewVO(view);\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.offset = len? this._viewVOs[len - 1].offset + this._viewVOs[len - 1].length : 0;\n\n\t\tthis._viewVOs.push(viewVO);\n\n\t\tif (this._newStride < viewVO.offset + viewVO.length) {\n\t\t\tthis._newStride = viewVO.offset + viewVO.length;\n\t\t\tthis.resize();\n\t\t}\n\n\t\tview._index = len;\n\t}\n\n\tpublic _removeView(view:AttributesView)\n\t{\n\t\tvar viewIndex:number = view._index;\n\t\tvar viewVO:ViewVO = this._viewVOs.splice(viewIndex, 1)[0];\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tviewVO.dispose();\n\n\t\tfor (var i:number = viewIndex; i < len; i++) {\n\t\t\tviewVO = this._viewVOs[i];\n\t\t\tviewVO.offset = i? this._viewVOs[i - 1].offset + this._viewVOs[i - 1].length : 0;\n\t\t\tviewVO.view._index = i;\n\t\t}\n\n\t\tthis._newStride = viewVO.offset + viewVO.length;\n\n\t\tthis.resize();\n\t}\n\n\tpublic _getOffset(viewIndex:number):number\n\t{\n\t\treturn this._viewVOs[viewIndex].offset;\n\t}\n\n\tpublic _updateLength()\n\t{\n\t\tthis._lengthDirty = false;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar len:number = this._viewVOs.length;\n\n\t\tvar newLength:number = this._newStride*this._count;\n\n\t\tif (!this._buffer || this._buffer.byteLength != newLength) {\n\t\t\tvar newBuffer:ArrayBuffer = new ArrayBuffer(newLength);\n\t\t\tvar newView:Uint8Array = new Uint8Array(newBuffer, 0, newBuffer.byteLength);\n\t\t\tvar viewVO:ViewVO;\n\t\t\tvar vLength:number;\n\t\t\tvar vOffset:number;\n\t\t\tvar vOldOffset:number;\n\n\t\t\tif (this._stride != this._newStride) {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tviewVO = this._viewVOs[i];\n\t\t\t\t\tvLength = viewVO.length;\n\t\t\t\t\tvOffset = viewVO.offset;\n\t\t\t\t\tvOldOffset = viewVO.oldOffset;\n\t\t\t\t\tfor (j = 0; j < this._count; j++)\n\t\t\t\t\t\tif (vOldOffset != null)\n\t\t\t\t\t\t\tnewView.set(new Uint8Array(this._buffer, j*this._stride + vOldOffset, vLength), j*this._newStride + vOffset);\n\n\t\t\t\t\tviewVO.oldOffset = viewVO.offset;\n\t\t\t\t}\n\n\t\t\t\tthis._stride = this._newStride;\n\t\t\t} else {\n\t\t\t\tnewView.set(new Uint8Array(this._buffer, 0, Math.min(newLength, this._buffer.byteLength))); //TODO: bypass quantisation of bytearray on instantiation\n\t\t\t}\n\n\t\t\tthis._buffer = newBuffer;\n\t\t\tthis._bufferView = newView;\n\t\t}\n\t}\n}\n\nclass ViewVO\n{\n\tpublic view:AttributesView;\n\n\tpublic length;\n\n\tpublic offset;\n\n\tpublic oldOffset;\n\n\tconstructor(view:AttributesView)\n\t{\n\t\tthis.view = view;\n\t\tthis.length = view.size*view.dimensions;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.view = null;\n\t}\n\n\tpublic clone():ViewVO\n\t{\n\t\treturn new ViewVO(this.view);\n\t}\n}\n\nexport default AttributesBuffer;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AssetBase\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport IArrayBufferViewClass\tfrom \"awayjs-core/lib/utils/IArrayBufferViewClass\";\n\nclass AttributesView extends AssetBase\n{\n\tpublic static assetType:string = \"[attributes AttributesView]\";\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AttributesView.assetType;\n\t}\n\n\tpublic _cloneCache:AttributesView;\n\tpublic _attributesBuffer:AttributesBuffer;\n\tpublic _bufferDirty:boolean;\n\tprivate _size:number;\n\tprivate _dimensions:number;\n\tprivate _unsigned:boolean;\n\n\tpublic _index:number;\n\tpublic _arrayClass:IArrayBufferViewClass;\n\n\tpublic _localArrayBuffer:ArrayBuffer;\n\n\tpublic normalized:boolean;\n\n\tpublic get buffer():AttributesBuffer\n\t{\n\t\treturn this._attributesBuffer;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._size = value;\n\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get dimensions():number\n\t{\n\t\treturn this._dimensions;\n\t}\n\n\tpublic set dimensions(value:number)\n\t{\n\t\tif (this._dimensions == value)\n\t\t\treturn;\n\n\t\tthis._dimensions = value;\n\n\t\t//reset view\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer._addView(this);\n\t}\n\n\tpublic get unsigned():boolean\n\t{\n\t\treturn this._unsigned;\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this._attributesBuffer.count;\n\t}\n\n\tpublic set count(value:number)\n\t{\n\t\tthis._attributesBuffer.count = value;\n\t}\n\n\tpublic get offset():number\n\t{\n\t\treturn this._attributesBuffer._getOffset(this._index);\n\t}\n\n\tpublic get length():number\n\t{\n\t\treturn this._attributesBuffer.count*this._dimensions;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, count?:number, unsigned?:boolean);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(arrayClass:IArrayBufferViewClass, dimensions:number, attributesBufferCount:any = 0, unsigned:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._arrayClass = arrayClass;\n\t\tthis._size = arrayClass.BYTES_PER_ELEMENT;\n\t\tthis._dimensions = dimensions;\n\t\tthis._attributesBuffer = (attributesBufferCount instanceof AttributesBuffer)? <AttributesBuffer> attributesBufferCount : new AttributesBuffer(this._dimensions*this._size, attributesBufferCount);\n\n\t\tthis._attributesBuffer._addView(this);\n\n\t\tthis._unsigned = unsigned;\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tthis._attributesBuffer._setAttributes(this._index, (values instanceof Array)? new (this._arrayClass)(values) : <ArrayBufferView> values, offset);\n\n\t\tthis._localArrayBuffer = null;\n\t}\n\n\tpublic get(count:number, offset:number = 0):ArrayBufferView\n\t{\n\t\tif (!this._localArrayBuffer)\n\t\t\tthis._localArrayBuffer = this._attributesBuffer._getLocalArrayBuffer(this._index);\n\n\t\tvar len:number = this._dimensions*this._size;\n\t\treturn new (this._arrayClass)(this._localArrayBuffer, offset*len, count*this._dimensions);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):AttributesView\n\t{\n\t\treturn (this._cloneCache = new AttributesView(this._arrayClass, this._dimensions, attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):AttributesView\n\t{\n\t\tif (attributesBuffer)\n\t\t\tthis._internalClone(attributesBuffer);\n\n\t\tif (!this._cloneCache)\n\t\t\tthis._attributesBuffer.clone();\n\n\t\tvar cloneCache:AttributesView = this._cloneCache;\n\t\tthis._cloneCache = null;\n\n\t\treturn cloneCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tif (!this._attributesBuffer)\n\t\t\treturn;\n\n\t\tthis._attributesBuffer._removeView(this);\n\t\tthis._attributesBuffer = null;\n\t\tthis._localArrayBuffer = null;\n\t}\n}\n\nexport default AttributesView;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\n\nclass Byte1Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Byte1Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Byte1Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint8Array : Int8Array, 1, attributesBufferLength, unsigned);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint8Array, offset?:number);\n\tpublic set(typedArray:Int8Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint8Array;\n\tpublic get(count:number, offset?:number):Int8Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte1Attributes\n\t{\n\t\treturn (this._cloneCache = new Byte1Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte1Attributes\n\t{\n\t\treturn <Byte1Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport default Byte1Attributes;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\n\nclass Byte2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Byte2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Byte2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint8Array : Int8Array, 2, attributesBufferLength, unsigned);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint8Array, offset?:number);\n\tpublic set(typedArray:Int8Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint8Array;\n\tpublic get(count:number, offset?:number):Int8Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte2Attributes\n\t{\n\t\treturn (this._cloneCache = new Byte2Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte2Attributes\n\t{\n\t\treturn <Byte2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport default Byte2Attributes;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\n\nclass Byte3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Byte3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Byte3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint8Array : Int8Array, 3, attributesBufferLength, unsigned);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint8Array, offset?:number);\n\tpublic set(typedArray:Int8Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint8Array;\n\tpublic get(count:number, offset?:number):Int8Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte3Attributes\n\t{\n\t\treturn (this._cloneCache = new Byte3Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte3Attributes\n\t{\n\t\treturn <Byte3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport default Byte3Attributes;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\n\nclass Byte4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Byte4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Byte4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint8Array : Int8Array, 4, attributesBufferLength, unsigned);\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(typedArray:Uint8Array, offset?:number);\n\tpublic set(typedArray:Int8Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint8Array;\n\tpublic get(count:number, offset?:number):Int8Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Byte4Attributes\n\t{\n\t\treturn (this._cloneCache = new Byte4Attributes(attributesBuffer, this._arrayClass == Uint8Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Byte4Attributes\n\t{\n\t\treturn <Byte4Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport default Byte4Attributes;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\n\nclass Float1Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float1Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float1Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 1, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float1Attributes\n\t{\n\t\treturn (this._cloneCache = new Float1Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float1Attributes\n\t{\n\t\treturn <Float1Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport default Float1Attributes;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\n\nclass Float2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 2, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float2Attributes\n\t{\n\t\treturn (this._cloneCache = new Float2Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float2Attributes\n\t{\n\t\treturn <Float2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport default Float2Attributes;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\n\nclass Float3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 3, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\treturn (this._cloneCache = new Float3Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float3Attributes\n\t{\n\t\treturn <Float3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport default Float3Attributes;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\n\nclass Float4Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Float4Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Float4Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number);\n\tconstructor(attributesBuffer?:AttributesBuffer);\n\tconstructor(attributesBufferLength?:any)\n\t{\n\t\tsuper(Float32Array, 4, attributesBufferLength)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Float32Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset:number = 0):Float32Array\n\t{\n\t\treturn <Float32Array> super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Float4Attributes\n\t{\n\t\treturn (this._cloneCache = new Float4Attributes(attributesBuffer));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Float4Attributes\n\t{\n\t\treturn <Float4Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport default Float4Attributes;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\n\nclass Short2Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short2Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short2Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 2, attributesBufferLength, unsigned)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short2Attributes\n\t{\n\t\treturn (this._cloneCache = new Short2Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short2Attributes\n\t{\n\t\treturn <Short2Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport default Short2Attributes;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\n\nclass Short3Attributes extends AttributesView\n{\n\tpublic static assetType:string = \"[attributes Short3Attributes]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Short3Attributes.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(length?:number, unsigned?:boolean);\n\tconstructor(attributesBuffer?:AttributesBuffer, unsigned?:boolean);\n\tconstructor(attributesBufferLength?:any, unsigned:boolean = true)\n\t{\n\t\tsuper(unsigned? Uint16Array : Int16Array, 3, attributesBufferLength, unsigned)\n\t}\n\n\tpublic set(array:Array<number>, offset?:number);\n\tpublic set(typedArray:Uint16Array, offset?:number);\n\tpublic set(typedArray:Int16Array, offset?:number);\n\tpublic set(values:any, offset:number = 0)\n\t{\n\t\tsuper.set(values, offset);\n\t}\n\n\tpublic get(count:number, offset?:number):Uint16Array;\n\tpublic get(count:number, offset?:number):Int16Array;\n\tpublic get(count:number, offset:number = 0):any\n\t{\n\t\treturn super.get(count, offset);\n\t}\n\n\tpublic _internalClone(attributesBuffer:AttributesBuffer):Short3Attributes\n\t{\n\t\treturn (this._cloneCache = new Short3Attributes(attributesBuffer, this._arrayClass == Uint16Array));\n\t}\n\n\tpublic clone(attributesBuffer:AttributesBuffer = null):Short3Attributes\n\t{\n\t\treturn <Short3Attributes> super.clone(attributesBuffer);\n\t}\n}\n\nexport default Short3Attributes;",
    "export {default as AttributesView}\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nexport {default as AttributesBuffer}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nexport {default as Byte1Attributes}\t\t\t\t\tfrom \"awayjs-core/lib/attributes/Byte1Attributes\";\nexport {default as Byte2Attributes}\t\t\t\t\tfrom \"awayjs-core/lib/attributes/Byte2Attributes\";\nexport {default as Byte3Attributes}\t\t\t\t\tfrom \"awayjs-core/lib/attributes/Byte3Attributes\";\nexport {default as Byte4Attributes}\t\t\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\nexport {default as Float1Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float1Attributes\";\nexport {default as Float2Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\nexport {default as Float3Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nexport {default as Float4Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float4Attributes\";\nexport {default as Short2Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Short2Attributes\";\nexport {default as Short3Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";",
    "import IAudioChannel\t\t\t\tfrom \"awayjs-core/lib/managers/IAudioChannel\";\nimport AudioManager\t\t\t\tfrom \"awayjs-core/lib/managers/AudioManager\";\nimport ColorTransform\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Matrix\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Rectangle\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport ParserUtils\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserUtils\";\nimport ColorUtils\t\t\t\tfrom \"awayjs-core/lib/utils/ColorUtils\";\n\n// TODO: Audio should probably be an interface containing play/stop/seek functionality\nclass WaveAudio extends AssetBase\n{\n\tpublic static assetType:string = \"[asset WaveAudio]\";\n\n\tprivate _audioChannel:IAudioChannel;\n\tprivate _volume:number = 1;\n\tprivate _buffer:ArrayBuffer;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn WaveAudio.assetType;\n\t}\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tif (this._audioChannel)\n\t\t\tthis._audioChannel.volume = this._volume;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\tif (this._audioChannel)\n\t\t\treturn this._audioChannel.currentTime;\n\n\t\treturn 0;\n\t}\n\n\tpublic get duration():number\n\t{\n\t\tif (this._audioChannel)\n\t\t\treturn this._audioChannel.duration;\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(buffer:ArrayBuffer)\n\t{\n\t\tsuper();\n\n\t\tthis._buffer = buffer;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.stop();\n\t}\n\n\tpublic play(offset:number, loop:boolean = false)\n\t{\n\t\tthis._audioChannel = AudioManager.getChannel(this._buffer.byteLength);\n\n\t\tif (this._audioChannel) {\n\t\t\tthis._audioChannel.volume = this._volume;\n\t\t\tthis._audioChannel.play(this._buffer, offset, loop, this.id);\n\t\t}\n\t}\n\n\tpublic stop()\n\t{\n\t\tif (this._audioChannel)\n\t\t\tthis._audioChannel.stop();\n\n\t\tdelete this._audioChannel;\n\t\tthis._audioChannel = null;\n\t}\n\n\tpublic clone()\n\t{\n\t\tvar newInstance:WaveAudio = new WaveAudio(this._buffer);\n\n\t\tnewInstance.name = this.name;\n\n\t\treturn newInstance;\n\t}\n}\n\nexport default WaveAudio;",
    "export {default as WaveAudio}\t\t\t\t\t\tfrom \"awayjs-core/lib/audio/WaveAudio\";",
    "import ErrorBase\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass AbstractMethodError extends ErrorBase\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"An abstract method was called! Either an instance of an abstract class was created, or an abstract method was not overridden by the subclass.\", id);\n\t}\n}\n\nexport default AbstractMethodError;",
    "import ErrorBase\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass ArgumentError extends ErrorBase\n{\n\t/**\n\t * Create a new ArgumentError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"ArgumentError\", id);\n\t}\n}\n\nexport default ArgumentError;",
    "import ErrorBase\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\nclass DocumentError extends ErrorBase\n{\n\tpublic static DOCUMENT_DOES_NOT_EXIST:string = \"documentDoesNotExist\";\n\n\tconstructor(message:string = \"DocumentError\", id:number = 0)\n\t{\n\t\tsuper(message, id);\n\t}\n}\n\nexport default DocumentError;",
    "class ErrorBase\n{\n\n\tprivate _errorID:number = 0;   //Contains the reference number associated with the specific error message.\n\tprivate _messsage:string = '';  //Contains the message associated with the Error object.\n\tprivate _name:string = '';  // Contains the name of the Error object.\n\n\tconstructor(message:string = '', id:number = 0, _name:string = '')\n\t{\n\n\t\tthis._messsage = message;\n\t\tthis._name = name;\n\t\tthis._errorID = id;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get message():string\n\t{\n\t\treturn this._messsage;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set message(value:string)\n\t{\n\t\tthis._messsage = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get name():string\n\t{\n\n\t\treturn this._name;\n\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set name(value:string)\n\t{\n\n\t\tthis._name = value;\n\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get errorID():number\n\t{\n\n\t\treturn this._errorID;\n\n\t}\n\n}\n\nexport default ErrorBase;",
    "import ErrorBase\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\n/**\n * AbstractMethodError is thrown when an abstract method is called. The method in question should be overridden\n * by a concrete subclass.\n */\nclass PartialImplementationError extends ErrorBase\n{\n\t/**\n\t * Create a new AbstractMethodError.\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(dependency:string = '', id:number = 0)\n\t{\n\t\tsuper(\"PartialImplementationError - this function is in development. Required Dependency: \" + dependency, id);\n\t}\n}\n\nexport default PartialImplementationError;",
    "import ErrorBase\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\n/**\n * RangeError is thrown when an index is accessed out of range of the number of\n * available indices on an Array.\n */\nclass RangeError extends ErrorBase\n{\n\t/**\n\t * Create a new RangeError.\n\t *\n\t * @param message An optional message to override the default error message.\n\t * @param id The id of the error.\n\t */\n\tconstructor(message:string = null, id:number = 0)\n\t{\n\t\tsuper(message || \"RangeError\", id);\n\t}\n}\n\nexport default RangeError;",
    "export {default as AbstractMethodError}\t\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nexport {default as ArgumentError}\t\t\t\t\tfrom \"awayjs-core/lib/errors/ArgumentError\";\nexport {default as DocumentError}\t\t\t\t\tfrom \"awayjs-core/lib/errors/DocumentError\";\nexport {default as ErrorBase}\t\t\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\nexport {default as PartialImplementationError}\t\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\nexport {default as RangeError}\t\t\t\t\t\tfrom \"awayjs-core/lib/errors/RangeError\";",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\n/**\n * @class away.events.AssetEvent\n */\nclass AssetEvent extends EventBase\n{\n\t/**\n\t * Dispatched when the content of an asset is invalidated\n\t */\n\tpublic static INVALIDATE:string = \"invalidate\";\n\n\t/**\n\t * Dispatched when an asset is diposed\n\t */\n\tpublic static DISPOSE:string = \"dispose\";\n\n\t/**\n\t * Dispatched when an asset is cleared\n\t */\n\tpublic static CLEAR:string = \"clear\";\n\n\t/**\n\t *\n\t */\n\tpublic static RENAME:string = 'rename';\n\n\t/**\n\t *\n\t */\n\tpublic static ENTER_FRAME:string = 'enterFrame';\n\n\t/**\n\t *\n\t */\n\tpublic static EXIT_FRAME:string = 'exitFrame';\n\n\t/**\n\t *\n\t */\n\tpublic static ASSET_CONFLICT_RESOLVED:string = 'assetConflictResolved';\n\n\t/**\n\t * Dispatched when the loading of an asset and all of its dependencies is complete.\n\t */\n\tpublic static ASSET_COMPLETE:string = \"assetComplete\";\n\n\t/**\n\t *\n\t */\n\tpublic static TEXTURE_SIZE_ERROR:string = 'textureSizeError';\n\n\tprivate _asset:IAsset;\n\tprivate _prevName:string;\n\n\t/**\n\t *\n\t */\n\tconstructor(type:string, asset:IAsset, prevName:string = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._asset = asset;\n\t\tthis._prevName = prevName || this._asset.name;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get asset():IAsset\n\t{\n\t\treturn this._asset;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get prevName():string\n\t{\n\t\treturn this._prevName;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():AssetEvent\n\t{\n\t\treturn new AssetEvent(this.type, this._asset, this._prevName);\n\t}\n}\n\nexport default AssetEvent;",
    "class EventBase\n{\n\t/**\n\t * Type of event\n\t * @property type\n\t * @type String\n\t */\n\tpublic type:string = undefined;\n\n\t/**\n\t * Reference to target object\n\t * @property target\n\t * @type Object\n\t */\n\tpublic target:any = undefined;\n\n\tconstructor(type:string)\n\t{\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():EventBase\n\t{\n\t\treturn new EventBase(this.type);\n\t}\n}\n\nexport default EventBase;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\n/**\n * Base class for dispatching events\n*\n* @class away.events.EventDispatcher\n*\n*/\nclass EventDispatcher\n{\n\tprivate listenerObjects:Array<ListenerObject> = new Array<ListenerObject>();\n\tprivate target:any;\n\n\tconstructor(target:any = null)\n\t{\n\t\tthis.target = target || this;\n\t}\n\n\t/**\n\t * Add an event listener\n\t * @method addEventListener\n\t * @param {String} Name of event to add a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tvar l:ListenerObject = this.listenerObjects[type];\n\n\t\tif (l === undefined)\n\t\t\tl = this.listenerObjects[type] = new ListenerObject();\n\n\t\tl.addEventListener(listener);\n\t}\n\n\t/**\n\t * Remove an event listener\n\t * @method removeEventListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tvar l:ListenerObject = this.listenerObjects[type];\n\n\t\tif (l) {\n\t\t\tl.removeEventListener(listener);\n\n\t\t\tif (l.numListeners == 0)\n\t\t\t\tdelete this.listenerObjects[type];\n\t\t}\n\t}\n\n\t/**\n\t * Dispatch an event\n\t * @method dispatchEvent\n\t * @param {Event} Event to dispatch\n\t */\n\tpublic dispatchEvent(event:EventBase)\n\t{\n\t\tvar l:ListenerObject = this.listenerObjects[event.type];\n\n\t\tif (l) {\n\t\t\tevent.target = this.target;\n\t\t\tl.dispatchEvent(event);\n\t\t}\n\t}\n\n\t/**\n\t * check if an object has an event listener assigned to it\n\t * @method hasListener\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic hasEventListener(type:string, listener?:(event:EventBase) => void):boolean\n\t{\n\t\tif (this.listenerObjects[type] === undefined)\n\t\t\treturn false;\n\n\t\tif (listener != null)\n\t\t\treturn this.listenerObjects[type].getEventListenerIndex(listener) !== -1;\n\n\t\treturn this.listenerObjects[type].numListeners > 0;\n\t}\n}\n\nclass ListenerObject\n{\n\tpublic index:number = 0;\n\n\tpublic listeners:Array<(event:EventBase) => void> = new Array<(event:EventBase) => void>();\n\n\tpublic numListeners:number = 0;\n\n\tpublic addEventListener(listener:(event:EventBase) => void)\n\t{\n\t\t//check if listener already added\n\t\tif (this.getEventListenerIndex(listener) !== -1)\n\t\t\treturn;\n\n\t\tthis.listeners.push(listener);\n\t\tthis.numListeners++;\n\t}\n\n\tpublic removeEventListener(listener:(event:EventBase) => void)\n\t{\n\t\t//check if listener exists\n\t\tvar index:number = this.getEventListenerIndex(listener);\n\n\t\tif (index === -1)\n\t\t\treturn;\n\n\t\tthis.listeners.splice(index, 1);\n\t\tif (index <= this.index)\n\t\t\tthis.index--;\n\n\t\tthis.numListeners--;\n\t}\n\n\tpublic dispatchEvent(event:EventBase)\n\t{\n\t\tvar len:number = this.numListeners;\n\t\tfor (this.index = 0; this.index < len && this.index < this.numListeners; this.index++)\n\t\t\tthis.listeners[this.index](event);\n\t}\n\n\t/**\n\t * get Event Listener Index in array. Returns -1 if no listener is added\n\t * @method getEventListenerIndex\n\t * @param {String} Name of event to remove a listener for\n\t * @param {Function} Callback function\n\t */\n\tpublic getEventListenerIndex(listener:(event:EventBase) => void):number\n\t{\n\t\tfor (var index:number = 0; index < this.numListeners; index++)\n\t\t\tif (listener == this.listeners[index])\n\t\t\t\treturn index;\n\n\t\treturn -1;\n\t}\n}\nexport default EventDispatcher;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass LoaderEvent extends EventBase\n{\n\t/**\n\t * Dispatched when the loading of a session and all of its dependencies is complete.\n\t */\n\tpublic static LOAD_COMPLETE:string = \"loadComplete\";\n\n\tprivate _url:string;\n\tprivate _content:IAsset;\n\tprivate _assets:IAsset[];\n\n\t/**\n\t * Create a new LoaderEvent object.\n\t *\n\t * @param type The event type.\n\t * @param url The url of the loaded resource.\n\t * @param assets The assets of the loaded resource.\n\t */\n\tconstructor(type:string, url:string = null, content:IAsset = null, assets:Array<IAsset> = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._url = url;\n\t\tthis._content = content;\n\t\tthis._assets = assets;\n\t}\n\n\t/**\n\t * The content returned if the resource has been loaded inside a <code>Loader</code> object.\n\t */\n\tpublic get content():IAsset\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The url of the loaded resource.\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t * The error string on loadError.\n\t */\n\tpublic get assets():IAsset[]\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t * Clones the current event.\n\t * @return An exact duplicate of the current event.\n\t */\n\tpublic clone():LoaderEvent\n\t{\n\t\treturn new LoaderEvent(this.type, this._url, this._content, this._assets);\n\t}\n}\n\nexport default LoaderEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass ParserEvent extends EventBase\n{\n\tprivate _message:string;\n\n\t/**\n\t * Dispatched when parsing of an asset completed.\n\t */\n\tpublic static PARSE_COMPLETE:string = 'parseComplete';\n\n\t/**\n\t * Dispatched when an error occurs while parsing the data (e.g. because it's\n\t * incorrectly formatted.)\n\t */\n\tpublic static PARSE_ERROR:string = 'parseError';\n\n\n\t/**\n\t * Dispatched when a parser is ready to have dependencies retrieved and resolved.\n\t * This is an internal event that should rarely (if ever) be listened for by\n\t * external classes.\n\t */\n\tpublic static READY_FOR_DEPENDENCIES:string = 'readyForDependencies';\n\n\n\tconstructor(type:string, message:string = '')\n\t{\n\t\tsuper(type);\n\n\t\tthis._message = message;\n\t}\n\n\n\t/**\n\t * Additional human-readable message. Usually supplied for ParserEvent.PARSE_ERROR events.\n\t */\n\tpublic get message():string\n\t{\n\t\treturn this._message;\n\t}\n\n\n\tpublic clone():ParserEvent\n\t{\n\t\treturn new ParserEvent(this.type, this._message);\n\t}\n}\n\nexport default ParserEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\nimport IProjection\t\t\t\tfrom \"awayjs-core/lib/projections/IProjection\";\n\nclass ProjectionEvent extends EventBase\n{\n\tpublic static MATRIX_CHANGED:string = \"matrixChanged\";\n\n\tprivate _projection:IProjection;\n\n\tconstructor(type:string, projection:IProjection)\n\t{\n\t\tsuper(type);\n\t\tthis._projection = projection;\n\t}\n\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n}\n\nexport default ProjectionEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass TimerEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static TIMER:string = \"timer\";\n\n\t/**\n\t *\n\t */\n\tpublic static TIMER_COMPLETE:string = \"timerComplete\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\n\t}\n}\n\nexport default TimerEvent",
    "import URLLoader\t\t\t\tfrom \"awayjs-core/lib/net/URLLoader\";\nimport EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass URLLoaderEvent extends EventBase\n{\n\tpublic static HTTP_STATUS:string = \"httpStatus\";\n\n\tpublic static LOAD_ERROR:string = \"loadError\";\n\n\tpublic static LOAD_PROGRESS:string = \"loadProgress\";\n\n\tpublic static LOAD_START:string = \"loadStart\";\n\n\tpublic static LOAD_COMPLETE:string = \"loadComplete\";\n\n\tprivate _urlLoader:URLLoader;\n\n\tconstructor(type:string, urlLoader:URLLoader)\n\t{\n\t\tsuper(type);\n\n\t\tthis._urlLoader = urlLoader;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get urlLoader():URLLoader\n\t{\n\t\treturn this._urlLoader;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic clone():URLLoaderEvent\n\t{\n\t\treturn new URLLoaderEvent(this.type, this._urlLoader);\n\t}\n}\n\nexport default URLLoaderEvent;",
    "export {default as AssetEvent}\t\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nexport {default as EventBase}\t\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\nexport {default as EventDispatcher}\t\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nexport {default as IEventDispatcher}\t\t\t\tfrom \"awayjs-core/lib/events/IEventDispatcher\";\nexport {default as LoaderEvent}\t\t\t\t\t\tfrom \"awayjs-core/lib/events/LoaderEvent\";\nexport {default as ParserEvent}\t\t\t\t\t\tfrom \"awayjs-core/lib/events/ParserEvent\";\nexport {default as ProjectionEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/ProjectionEvent\";\nexport {default as TimerEvent}\t\t\t\t\t\tfrom \"awayjs-core/lib/events/TimerEvent\";\nexport {default as URLLoaderEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/URLLoaderEvent\";",
    "import Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\n/**\n * A Box object is an area defined by its position, as indicated by its\n * top-left-front corner point(<i>x</i>, <i>y</i>, <i>z</i>) and by its width,\n * height and depth.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n * <code>height</code> <code>depth</code> properties of the Box class are\n * independent of each other; changing the value of one property has no effect\n * on the others. However, the <code>right</code>, <code>bottom</code> and\n * <code>back</code> properties are integrally related to those six\n * properties. For example, if you change the value of the <code>right</code>\n * property, the value of the <code>width</code> property changes; if you\n * change the <code>bottom</code> property, the value of the\n * <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Box objects:</p>\n *\n * <ul>\n *   <li>The <code>bounds</code> property of the DisplayObject class</li>\n * </ul>\n *\n * <p>You can use the <code>new Box()</code> constructor to create a\n * Box object.</p>\n *\n * <p><b>Note:</b> The Box class does not define a cubic Shape\n * display object.\n */\nclass Box\n{\n\tprivate _size:Vector3D;\n\tprivate _bottomRightBack:Vector3D;\n\tprivate _topLeftFront:Vector3D;\n\n\t/**\n\t * The height of the box, in pixels. Changing the <code>height</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the box, in pixels. Changing the <code>width</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>depth</code> and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The deoth of the box, in pixels. Changing the <code>depth</code> value\n\t * of a Box object has no effect on the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic depth:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>x</code> property of a Box object has no\n\t * effect on the <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>y</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box.\n\t * Changing the value of the <code>z</code> property of a Box object has no\n\t * effect on the <code>x</code>, <code>y</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties.\n\t *\n\t * <p>The value of the <code>z</code> property is equal to the value of the\n\t * <code>front</code> property.</p>\n\t */\n\tpublic z:number\n\n\t/**\n\t * The sum of the <code>z</code> and <code>height</code> properties.\n\t */\n\tpublic get back():number\n\t{\n\t\treturn this.z + this.depth;\n\t}\n\n\tpublic set back(val:number)\n\t{\n\t\tthis.depth = val - this.z;\n\t}\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\tpublic set bottom(val:number)\n\t{\n\t\tthis.height = val - this.y;\n\t}\n\n\t/**\n\t * The location of the Box object's bottom-right corner, determined by the\n\t * values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRightBack():Vector3D\n\t{\n\t\tif (this._bottomRightBack == null)\n\t\t\tthis._bottomRightBack = new Vector3D();\n\n\t\tthis._bottomRightBack.x = this.x + this.width;\n\t\tthis._bottomRightBack.y = this.y + this.height;\n\t\tthis._bottomRightBack.z = this.z + this.depth;\n\n\t\treturn this._bottomRightBack;\n\t}\n\n\t/**\n\t * The <i>z</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>front</code> property of a Box object has no effect on the\n\t * <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>\n\t * properties. However it does affect the <code>depth</code> property,\n\t * whereas changing the <code>z</code> value does <i>not</i> affect the\n\t * <code>depth</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get front():number\n\t{\n\t\treturn this.z;\n\t}\n\n\tpublic set front(val:number)\n\t{\n\t\tthis.depth += this.z - val;\n\t\tthis.z = val;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the box. Changing the\n\t * <code>left</code> property of a Box object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\tpublic set left(val:number)\n\t{\n\t\tthis.width += this.x - val;\n\t\tthis.x = val;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\tpublic set right(val:number)\n\t{\n\t\tthis.width = val - this.x;\n\t}\n\n\t/**\n\t * The size of the Box object, expressed as a Vector3D object with the\n\t * values of the <code>width</code>, <code>height</code> and\n\t * <code>depth</code> properties.\n\t */\n\tpublic get size():Vector3D\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Vector3D();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\t\tthis._size.z = this.depth;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left-front corner of the box. Changing\n\t * the <code>top</code> property of a Box object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\tpublic set top(val:number)\n\t{\n\t\tthis.height += (this.y - val);\n\t\tthis.y = val;\n\t}\n\n\t/**\n\t * The location of the Box object's top-left-front corner, determined by the\n\t * <i>x</i>, <i>y</i> and <i>z</i> coordinates of the point.\n\t */\n\tpublic get topLeftFront():Vector3D\n\t{\n\t\tif (this._topLeftFront == null)\n\t\t\tthis._topLeftFront = new Vector3D();\n\n\t\tthis._topLeftFront.x = this.x;\n\t\tthis._topLeftFront.y = this.y;\n\t\tthis._topLeftFront.z = this.z;\n\n\t\treturn this._topLeftFront;\n\t}\n\n\t/**\n\t * Creates a new Box object with the top-left-front corner specified by the\n\t * <code>x</code>, <code>y</code> and <code>z</code> parameters and with the\n\t * specified <code>width</code>, <code>height</code> and <code>depth</code>\n\t * parameters. If you call this public without parameters, a box with\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties set to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param y      The <i>y</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param z      The <i>z</i> coordinate of the top-left-front corner of the\n\t *               box.\n\t * @param width  The width of the box, in pixels.\n\t * @param height The height of the box, in pixels.\n\t * @param depth The depth of the box, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, width:number = 0, height:number = 0, depth:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = depth;\n\t}\n\n\t/**\n\t * Returns a new Box object with the same values for the <code>x</code>,\n\t * <code>y</code>, <code>z</code>, <code>width</code>, <code>height</code>\n\t * and <code>depth</code> properties as the original Box object.\n\t *\n\t * @return A new Box object with the same values for the <code>x</code>,\n\t *         <code>y</code>, <code>z</code>, <code>width</code>,\n\t *         <code>height</code> and <code>depth</code> properties as the\n\t *         original Box object.\n\t */\n\tpublic clone():Box\n\t{\n\t\treturn new Box(this.x, this.y, this.z, this.width, this.height, this.depth);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal component) of the position.\n\t * @param y The <i>y</i> coordinate(vertical component) of the position.\n\t * @param z The <i>z</i> coordinate(longitudinal component) of the position.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number, z:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y && this.z <= z && this.z + this.depth >= z);\n\t}\n\n\t/**\n\t * Determines whether the specified position is contained within the cubic\n\t * region defined by this Box object. This method is similar to the\n\t * <code>Box.contains()</code> method, except that it takes a Vector3D\n\t * object as a parameter.\n\t *\n\t * @param position The position, as represented by its <i>x</i>, <i>y</i> and\n\t *                 <i>z</i> coordinates.\n\t * @return A value of <code>true</code> if the Box object contains the\n\t *         specified position; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\treturn (this.x <= position.x && this.x + this.width >= position.x && this.y <= position.y && this.y + this.height >= position.y && this.z <= position.z && this.z + this.depth >= position.z);\n\t}\n\n\t/**\n\t * Determines whether the Box object specified by the <code>box</code>\n\t * parameter is contained within this Box object. A Box object is said to\n\t * contain another if the second Box object falls entirely within the\n\t * boundaries of the first.\n\t *\n\t * @param box The Box object being checked.\n\t * @return A value of <code>true</code> if the Box object that you specify\n\t *         is contained by this Box object; otherwise <code>false</code>.\n\t */\n\tpublic containsBox(box:Box):boolean\n\t{\n\t\treturn (this.x <= box.x && this.x + this.width >= box.x + box.width && this.y <= box.y && this.y + this.height >= box.y + box.height && this.z <= box.z && this.z + this.depth >= box.z + box.depth)\n\t}\n\n\t/**\n\t * Copies all of box data from the source Box object into the calling\n\t * Box object.\n\t *\n\t * @param sourceBox The Box object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceBox:Box)\n\t{\n\t\tthis.x = sourceBox.x;\n\t\tthis.y = sourceBox.y;\n\t\tthis.z = sourceBox.z;\n\t\tthis.width = sourceBox.width;\n\t\tthis.height = sourceBox.height;\n\t\tthis.depth = sourceBox.depth;\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Box object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code> and <code>depth</code> properties of an object against\n\t * the same properties of this Box object.\n\t *\n\t * @param toCompare The box to compare to this Box object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code> and <code>depth</code>\n\t *         properties as this Box object; otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Box):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && this.width == toCompare.width && this.height == toCompare.height && this.depth == toCompare.depth)\n\t}\n\n\t/**\n\t * Increases the size of the Box object by the specified amounts, in\n\t * pixels. The center point of the Box object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, to\n\t * the top and the bottom by the <code>dy</code> value, and to\n\t * the front and the back by the <code>dz</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the box:\n\t * @param dy The value to be added to the top and the bottom of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           height and position of the box:\n\t * @param dz The value to be added to the front and the back of the Box\n\t *           object. The following equation is used to calculate the new\n\t *           depth and position of the box:\n\t */\n\tpublic inflate(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.z -= dz/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t\tthis.depth += dz/2;\n\t}\n\n\t/**\n\t * Increases the size of the Box object. This method is similar to the\n\t * <code>Box.inflate()</code> method except it takes a Vector3D object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param delta The <code>x</code> property of this Vector3D object is used to\n\t *              increase the horizontal dimension of the Box object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Box object.\n\t *              The <code>z</code> property is used to increase the\n\t *              longitudinal dimension of the Box object.\n\t */\n\tpublic inflatePoint(delta:Vector3D)\n\t{\n\t\tthis.x -= delta.x/2;\n\t\tthis.y -= delta.y/2;\n\t\tthis.z -= delta.z/2;\n\t\tthis.width += delta.x/2;\n\t\tthis.height += delta.y/2;\n\t\tthis.depth += delta.z/2;\n\t}\n\n\t/**\n\t * If the Box object specified in the <code>toIntersect</code> parameter\n\t * intersects with this Box object, returns the area of intersection\n\t * as a Box object. If the boxes do not intersect, this method returns an\n\t * empty Box object with its properties set to 0.\n\t *\n\t * @param toIntersect The Box object to compare against to see if it\n\t *                    intersects with this Box object.\n\t * @return A Box object that equals the area of intersection. If the\n\t *         boxes do not intersect, this method returns an empty Box\n\t *         object; that is, a box with its <code>x</code>, <code>y</code>,\n\t *         <code>z</code>, <code>width</code>,  <code>height</code>, and\n\t *         <code>depth</code> properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Box):Box\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Box = new Box();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\n\t\t\tif (this.z > toIntersect.z) {\n\t\t\t\ti.z = this.z;\n\t\t\t\ti.depth = toIntersect.z - this.z + toIntersect.depth;\n\n\t\t\t\tif (i.depth > this.depth)\n\t\t\t\t\ti.depth = this.depth;\n\t\t\t} else {\n\t\t\t\ti.z = toIntersect.z;\n\t\t\t\ti.depth = this.z - toIntersect.z + this.depth;\n\n\t\t\t\tif (i.depth > toIntersect.depth)\n\t\t\t\t\ti.depth = toIntersect.depth;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Box();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Box object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>z</code>, <code>width</code>,\n\t * <code>height</code>, and <code>depth</code> properties of the specified\n\t * Box object to see if it intersects with this Box object.\n\t *\n\t * @param toIntersect The Box object to compare against this Box object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Box object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Box):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height && this.z + this.depth > toIntersect.z && this.z < toIntersect.z + toIntersect.depth);\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar halfExtentsX:number = this.width/2;\n\t\tvar halfExtentsY:number = this.height/2;\n\t\tvar halfExtentsZ:number = this.depth/2;\n\n\t\tvar centerX:number = this.x + halfExtentsX;\n\t\tvar centerY:number = this.y + halfExtentsY;\n\t\tvar centerZ:number = this.z + halfExtentsZ;\n\n\t\tvar px:number = position.x - centerX;\n\t\tvar py:number = position.y - centerY;\n\t\tvar pz:number = position.z - centerZ;\n\n\t\tvar vx:number = direction.x;\n\t\tvar vy:number = direction.y;\n\t\tvar vz:number = direction.z;\n\n\t\tvar ix:number;\n\t\tvar iy:number;\n\t\tvar iz:number;\n\t\tvar rayEntryDistance:number;\n\n\t\t// ray-plane tests\n\t\tvar intersects:boolean;\n\t\tif (vx < 0) {\n\t\t\trayEntryDistance = ( halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vx > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsX - px )/vx;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = -1;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy < 0) {\n\t\t\trayEntryDistance = ( halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vy > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsY - py )/vy;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiz = pz + rayEntryDistance*vz;\n\t\t\t\tif (ix > -halfExtentsX && ix < halfExtentsX && iz > -halfExtentsZ && iz < halfExtentsZ) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = -1;\n\t\t\t\t\ttargetNormal.z = 0;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz < 0) {\n\t\t\trayEntryDistance = ( halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = 1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!intersects && vz > 0) {\n\t\t\trayEntryDistance = ( -halfExtentsZ - pz )/vz;\n\t\t\tif (rayEntryDistance > 0) {\n\t\t\t\tix = px + rayEntryDistance*vx;\n\t\t\t\tiy = py + rayEntryDistance*vy;\n\t\t\t\tif (iy > -halfExtentsY && iy < halfExtentsY && ix > -halfExtentsX && ix < halfExtentsX) {\n\t\t\t\t\ttargetNormal.x = 0;\n\t\t\t\t\ttargetNormal.y = 0;\n\t\t\t\t\ttargetNormal.z = -1;\n\t\t\t\t\tintersects = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn intersects? rayEntryDistance : -1;\n\t}\n\n\t/**\n\t * Finds the closest point on the Box to another given point. This can be used for maximum error calculations for content within a given Box.\n\t *\n\t * @param point The point for which to find the closest point on the Box\n\t * @param target An optional Vector3D to store the result to prevent creating a new object.\n\t * @return\n\t */\n\tpublic closestPointToPoint(point:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar p:number;\n\n\t\tif (target == null)\n\t\t\ttarget = new Vector3D();\n\n\t\tp = point.x;\n\t\tif (p < this.x)\n\t\t\tp = this.x;\n\t\tif (p > this.x + this.width)\n\t\t\tp = this.x + this.width;\n\t\ttarget.x = p;\n\n\t\tp = point.y;\n\t\tif (p < this.y + this.height)\n\t\t\tp = this.y + this.height;\n\t\tif (p > this.y)\n\t\t\tp = this.y;\n\t\ttarget.y = p;\n\n\t\tp = point.z;\n\t\tif (p < this.z)\n\t\t\tp = this.z;\n\t\tif (p > this.z + this.depth)\n\t\t\tp = this.z + this.depth;\n\t\ttarget.z = p;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Determines whether or not this Box object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Box object's width, height or\n\t *         depth is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.z == 0 && this.width == 0 && this.height == 0 && this.depth == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object, as determined by its\n\t * top-left-front corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Box object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Box object by this amount.\n\t * @param dz Moves the <i>z</i> value of the Box object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number, dz:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\t}\n\n\t/**\n\t * Adjusts the location of the Box object using a Vector3D object as a\n\t * parameter. This method is similar to the <code>Box.offset()</code>\n\t * method, except that it takes a Vector3D object as a parameter.\n\t *\n\t * @param position A Vector3D object to use to offset this Box object.\n\t */\n\tpublic offsetPosition(position:Vector3D)\n\t{\n\t\tthis.x += position.x;\n\t\tthis.y += position.y;\n\t\tthis.z += position.z;\n\t}\n\n\t/**\n\t * Sets all of the Box object's properties to 0. A Box object is empty if its\n\t * width, height or depth is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>z</code>, <code>width</code>, <code>height</code>, and\n\t * <code>depth</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.depth = 0;\n\t}\n\n\tpublic setBoundIdentity()\n\t{\n\t\tthis.x = Number.MAX_VALUE/2;\n\t\tthis.y = Number.MAX_VALUE/2;\n\t\tthis.z = Number.MAX_VALUE/2;\n\t\tthis.width = -Number.MAX_VALUE;\n\t\tthis.height = -Number.MAX_VALUE;\n\t\tthis.depth = -Number.MAX_VALUE;\n\t}\n\n\t/**\n\t * Sets the members of Box to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param ya      The <i>y</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param yz      The <i>z</i> coordinate of the top-left-front corner of the\n\t *                box.\n\t * @param widtha  The width of the box, in pixels.\n\t * @param heighta The height of the box, in pixels.\n\t * @param deptha  The depth of the box, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number, widtha:number, heighta:number, deptha:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t\tthis.depth = deptha;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal, vertical and\n\t * longitudinal positions and the width, height and depth of the Box object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Box object: <code>x</code>, <code>y</code>, <code>z</code>,\n\t *         <code>width</code>, <code>height</code>, and <code>depth</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Box] (x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \", width=\" + this.width + \", height=\" + this.height + \", depth=\" + this.depth + \")\";\n\t}\n\n\t/**\n\t * Adds two boxes together to create a new Box object, by filling\n\t * in the horizontal, vertical and longitudinal space between the two boxes.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores boxes with\n\t * <code>0</code> as the height, width or depth value, such as: <code>var\n\t * box2:Box = new Box(300,300,300,50,50,0);</code></p>\n\t *\n\t * @param toUnion A Box object to add to this Box object.\n\t * @return A new Box object that is the union of the two boxes.\n\t */\n\tpublic union(toUnion:Box, target:Box = null):Box\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Box();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\ttarget.x = this.x;\n\t\t\ttarget.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (target.width < this.width)\n\t\t\t\ttarget.width = this.width;\n\t\t} else {\n\t\t\ttarget.x = toUnion.x;\n\t\t\ttarget.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (target.width < toUnion.width)\n\t\t\t\ttarget.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\ttarget.y = this.y;\n\t\t\ttarget.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (target.height < this.height)\n\t\t\t\ttarget.height = this.height;\n\t\t} else {\n\t\t\ttarget.y = toUnion.y;\n\t\t\ttarget.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (target.height < toUnion.height)\n\t\t\t\ttarget.height = toUnion.height;\n\t\t}\n\n\t\tif (this.z < toUnion.z) {\n\t\t\ttarget.z = this.z;\n\t\t\ttarget.depth = toUnion.z - this.z + toUnion.depth;\n\n\t\t\tif (target.depth < this.depth)\n\t\t\t\ttarget.depth = this.depth;\n\t\t} else {\n\t\t\ttarget.z = toUnion.z;\n\t\t\ttarget.depth = this.z - toUnion.z + this.depth;\n\n\t\t\tif (target.depth < toUnion.depth)\n\t\t\t\ttarget.depth = toUnion.depth;\n\t\t}\n\n\t\treturn target;\n\t}\n}\n\nexport default Box;",
    "import ColorUtils\t\t\tfrom \"awayjs-core/lib/utils/ColorUtils\";\n\n/**\n * The ColorTransform class lets you adjust the color values in a display\n * object. The color adjustment or <i>color transformation</i> can be applied\n * to all four channels: red, green, blue, and alpha transparency.\n *\n * <p>When a ColorTransform object is applied to a display object, a new value\n * for each color channel is calculated like this:</p>\n *\n * <ul>\n *   <li>New red value = (old red value * <code>redMultiplier</code>) +\n * <code>redOffset</code></li>\n *   <li>New green value = (old green value * <code>greenMultiplier</code>) +\n * <code>greenOffset</code></li>\n *   <li>New blue value = (old blue value * <code>blueMultiplier</code>) +\n * <code>blueOffset</code></li>\n *   <li>New alpha value = (old alpha value * <code>alphaMultiplier</code>) +\n * <code>alphaOffset</code></li>\n * </ul>\n *\n * <p>If any of the color channel values is greater than 255 after the\n * calculation, it is set to 255. If it is less than 0, it is set to 0.</p>\n *\n * <p>You can use ColorTransform objects in the following ways:</p>\n *\n * <ul>\n *   <li>In the <code>colorTransform</code> parameter of the\n * <code>colorTransform()</code> method of the BitmapData class</li>\n *   <li>As the <code>colorTransform</code> property of a Transform object\n * (which can be used as the <code>transform</code> property of a display\n * object)</li>\n * </ul>\n *\n * <p>You must use the <code>new ColorTransform()</code> constructor to create\n * a ColorTransform object before you can call the methods of the\n * ColorTransform object.</p>\n *\n * <p>Color transformations do not apply to the background color of a movie\n * clip(such as a loaded SWF object). They apply only to graphics and symbols\n * that are attached to the movie clip.</p>\n */\nclass ColorTransform\n{\n\t/**\n\t * A decimal value that is multiplied with the alpha transparency channel\n\t * value.\n\t *\n\t * <p>If you set the alpha transparency value of a display object directly by\n\t * using the <code>alpha</code> property of the DisplayObject instance, it\n\t * affects the value of the <code>alphaMultiplier</code> property of that\n\t * display object's <code>transform.colorTransform</code> property.</p>\n\t */\n\tpublic alphaMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the alpha transparency channel\n\t * value after it has been multiplied by the <code>alphaMultiplier</code>\n\t * value.\n\t */\n    public alphaOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the blue channel value.\n\t */\n    public blueMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the blue channel value after it\n\t * has been multiplied by the <code>blueMultiplier</code> value.\n\t */\n    public blueOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the green channel value.\n\t */\n    public greenMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the green channel value after\n\t * it has been multiplied by the <code>greenMultiplier</code> value.\n\t */\n    public greenOffset:number;\n\n\t/**\n\t * A decimal value that is multiplied with the red channel value.\n\t */\n    public redMultiplier:number;\n\n\t/**\n\t * A number from -255 to 255 that is added to the red channel value after it\n\t * has been multiplied by the <code>redMultiplier</code> value.\n\t */\n    public redOffset:number;\n\n\t/**\n\t * The RGB color value for a ColorTransform object.\n\t *\n\t * <p>When you set this property, it changes the three color offset values\n\t * (<code>redOffset</code>, <code>greenOffset</code>, and\n\t * <code>blueOffset</code>) accordingly, and it sets the three color\n\t * multiplier values(<code>redMultiplier</code>,\n\t * <code>greenMultiplier</code>, and <code>blueMultiplier</code>) to 0. The\n\t * alpha transparency multiplier and offset values do not change.</p>\n\t *\n\t * <p>When you pass a value for this property, use the format\n\t * 0x<i>RRGGBB</i>. <i>RR</i>, <i>GG</i>, and <i>BB</i> each consist of two\n\t * hexadecimal digits that specify the offset of each color component. The 0x\n\t * tells the ActionScript compiler that the number is a hexadecimal\n\t * value.</p>\n\t */\n\tpublic get color():number\n\t{\n\t\treturn((this.redOffset << 16) | ( this.greenOffset << 8) | this.blueOffset);\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(value);\n\n\t\tthis.redOffset = argb[1];  //(value >> 16) & 0xFF;\n\t\tthis.greenOffset = argb[2];  //(value >> 8) & 0xFF;\n\t\tthis.blueOffset = argb[3];  //value & 0xFF;\n\n\t\tthis.redMultiplier = 0;\n\t\tthis.greenMultiplier = 0;\n\t\tthis.blueMultiplier = 0;\n\t}\n\n\t/**\n\t * Creates a ColorTransform object for a display object with the specified\n\t * color channel values and alpha values.\n\t *\n\t * @param redMultiplier   The value for the red multiplier, in the range from\n\t *                        0 to 1.\n\t * @param greenMultiplier The value for the green multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param blueMultiplier  The value for the blue multiplier, in the range\n\t *                        from 0 to 1.\n\t * @param alphaMultiplier The value for the alpha transparency multiplier, in\n\t *                        the range from 0 to 1.\n\t * @param redOffset       The offset value for the red color channel, in the\n\t *                        range from -255 to 255.\n\t * @param greenOffset     The offset value for the green color channel, in\n\t *                        the range from -255 to 255.\n\t * @param blueOffset      The offset for the blue color channel value, in the\n\t *                        range from -255 to 255.\n\t * @param alphaOffset     The offset for alpha transparency channel value, in\n\t *                        the range from -255 to 255.\n\t */\n\tconstructor(redMultiplier:number = 1, greenMultiplier:number = 1, blueMultiplier:number = 1, alphaMultiplier:number = 1, redOffset:number = 0, greenOffset:number = 0, blueOffset:number = 0, alphaOffset:number = 0)\n\t{\n\t\tthis.redMultiplier = redMultiplier;\n\t\tthis.greenMultiplier = greenMultiplier;\n\t\tthis.blueMultiplier = blueMultiplier;\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\t\tthis.redOffset = redOffset;\n\t\tthis.greenOffset = greenOffset;\n\t\tthis.blueOffset = blueOffset;\n\t\tthis.alphaOffset = alphaOffset;\n\t}\n\n    public clear()\n    {\n        this.redMultiplier = 1;\n        this.greenMultiplier = 1;\n        this.blueMultiplier = 1;\n        this.alphaMultiplier = 1;\n        this.redOffset = 0;\n        this.greenOffset = 0;\n        this.blueOffset = 0;\n        this.alphaOffset = 0;\n    }\n\n    public clone():ColorTransform\n    {\n        return new ColorTransform(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n    }\n\n    public copyFrom(source:ColorTransform)\n    {\n        this.redMultiplier = source.redMultiplier;\n        this.greenMultiplier = source.greenMultiplier;\n        this.blueMultiplier = source.blueMultiplier;\n        this.alphaMultiplier = source.alphaMultiplier;\n        this.redOffset = source.redOffset;\n        this.greenOffset = source.greenOffset;\n        this.blueOffset = source.blueOffset;\n        this.alphaOffset = source.alphaOffset;\n    }\n\n    public copyTo(destination:ColorTransform)\n    {\n        destination.copyFrom(this);\n    }\n\n    public prepend(ct:ColorTransform)\n    {\n        this.redOffset += ct.redOffset * this.redMultiplier;\n        this.greenOffset += ct.greenOffset * this.greenMultiplier;\n        this.blueOffset += ct.blueOffset * this.blueMultiplier;\n        this.alphaOffset += ct.alphaOffset * this.alphaMultiplier;\n\n        this.redMultiplier *= ct.redMultiplier;\n        this.greenMultiplier *= ct.greenMultiplier;\n        this.blueMultiplier *= ct.blueMultiplier;\n        this.alphaMultiplier *= ct.alphaMultiplier;\n    }\n}\n\nexport default ColorTransform;",
    "/**\n* MathConsts provides some commonly used mathematical constants\n*/\nclass MathConsts\n{\n\t/**\n\t * The amount to multiply with when converting radians to degrees.\n\t */\n\tpublic static RADIANS_TO_DEGREES:number = 180/Math.PI;\n\n\t/**\n\t * The amount to multiply with when converting degrees to radians.\n\t */\n\tpublic static DEGREES_TO_RADIANS:number = Math.PI/180;\n}\n\nexport default MathConsts;",
    "import Quaternion\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Matrix3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Plane3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\n\n/**\n * away.geom.Matrix3DUtils provides additional Matrix3D functions.\n */\nclass Matrix3DUtils\n{\n\t/**\n\t * A reference to a Vector to be used as a temporary raw data container, to prevent object creation.\n\t */\n\tpublic static RAW_DATA_CONTAINER:Float32Array = new Float32Array(16);\n\t//public static RAW_DATA_CONTAINER:number[] = new Array<number>(16);\n\n\tpublic static CALCULATION_MATRIX:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Fills the 3d matrix object with values representing the transformation made by the given quaternion.\n\t *\n\t * @param    quarternion    The quarterion object to convert.\n\t */\n\tpublic static quaternion2matrix(quarternion:Quaternion, m:Matrix3D = null):Matrix3D\n\t{\n\t\tvar x:number = quarternion.x;\n\t\tvar y:number = quarternion.y;\n\t\tvar z:number = quarternion.z;\n\t\tvar w:number = quarternion.w;\n\n\t\tvar xx:number = x*x;\n\t\tvar xy:number = x*y;\n\t\tvar xz:number = x*z;\n\t\tvar xw:number = x*w;\n\n\t\tvar yy:number = y*y;\n\t\tvar yz:number = y*z;\n\t\tvar yw:number = y*w;\n\n\t\tvar zz:number = z*z;\n\t\tvar zw:number = z*w;\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\traw[0] = 1 - 2*(yy + zz);\n\t\traw[1] = 2*(xy + zw);\n\t\traw[2] = 2*(xz - yw);\n\t\traw[4] = 2*(xy - zw);\n\t\traw[5] = 1 - 2*(xx + zz);\n\t\traw[6] = 2*(yz + xw);\n\t\traw[8] = 2*(xz + yw);\n\t\traw[9] = 2*(yz - xw);\n\t\traw[10] = 1 - 2*(xx + yy);\n\t\traw[3] = raw[7] = raw[11] = raw[12] = raw[13] = raw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tif (m) {\n\t\t\tm.copyRawDataFrom(raw);\n\t\t\treturn m;\n\t\t} else\n\t\t\treturn new Matrix3D(raw);\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the forward vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the forward vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The forward vector\n\t */\n\tpublic static getForward(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\tif (v === null)\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\tm.copyColumnTo(2, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the up vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the up vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The up vector\n\t */\n\tpublic static getUp(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\tif (v === null)\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\tm.copyColumnTo(1, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a normalised <code>Vector3D</code> object representing the right vector of the given matrix.\n\t * @param    m        The Matrix3D object to use to get the right vector\n\t * @param    v        [optional] A vector holder to prevent make new Vector3D instance if already exists. Default is null.\n\t * @return            The right vector\n\t */\n\tpublic static getRight(m:Matrix3D, v:Vector3D = null):Vector3D\n\t{\n\t\t//v ||= new Vector3D(0.0, 0.0, 0.0);\n\t\tif (v === null) {\n\n\t\t\tv = new Vector3D(0.0, 0.0, 0.0);\n\n\t\t}\n\n\t\tm.copyColumnTo(0, v);\n\t\tv.normalize();\n\n\t\treturn v;\n\t}\n\n\t/**\n\t * Returns a boolean value representing whether there is any significant difference between the two given 3d matrices.\n\t */\n\tpublic static compare(m1:Matrix3D, m2:Matrix3D):boolean\n\t{\n\t\tvar r1:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar r2:Float32Array = m2.rawData;\n\t\tm1.copyRawDataTo(r1);\n\n\t\tfor (var i:number = 0; i < 16; ++i) {\n\t\t\tif (r1[i] != r2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static lookAt(matrix:Matrix3D, pos:Vector3D, dir:Vector3D, up:Vector3D)\n\t{\n\t\tvar dirN:Vector3D;\n\t\tvar upN:Vector3D;\n\t\tvar lftN:Vector3D;\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tlftN = dir.crossProduct(up);\n\t\tlftN.normalize();\n\n\t\tupN = lftN.crossProduct(dir);\n\t\tupN.normalize();\n\t\tdirN = dir.clone();\n\t\tdirN.normalize();\n\n\t\traw[0] = lftN.x;\n\t\traw[1] = upN.x;\n\t\traw[2] = -dirN.x;\n\t\traw[3] = 0.0;\n\n\t\traw[4] = lftN.y;\n\t\traw[5] = upN.y;\n\t\traw[6] = -dirN.y;\n\t\traw[7] = 0.0;\n\n\t\traw[8] = lftN.z;\n\t\traw[9] = upN.z;\n\t\traw[10] = -dirN.z;\n\t\traw[11] = 0.0;\n\n\t\traw[12] = -lftN.dotProduct(pos);\n\t\traw[13] = -upN.dotProduct(pos);\n\t\traw[14] = dirN.dotProduct(pos);\n\t\traw[15] = 1.0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n\n\tpublic static reflection(plane:Plane3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target === null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tvar a:number = plane.a, b:number = plane.b, c:number = plane.c, d:number = plane.d;\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar ab2:number = -2*a*b;\n\t\tvar ac2:number = -2*a*c;\n\t\tvar bc2:number = -2*b*c;\n\t\t// reflection matrix\n\t\trawData[0] = 1 - 2*a*a;\n\t\trawData[4] = ab2;\n\t\trawData[8] = ac2;\n\t\trawData[12] = -2*a*d;\n\t\trawData[1] = ab2;\n\t\trawData[5] = 1 - 2*b*b;\n\t\trawData[9] = bc2;\n\t\trawData[13] = -2*b*d;\n\t\trawData[2] = ac2;\n\t\trawData[6] = bc2;\n\t\trawData[10] = 1 - 2*c*c;\n\t\trawData[14] = -2*c*d;\n\t\trawData[3] = 0;\n\t\trawData[7] = 0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\n\tpublic static transformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar d:number = raw[12];\n\t\tvar h:number = raw[13];\n\t\tvar l:number = raw[14];\n\t\tvar p:number = raw[15];\n\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z + d;\n\t\tresult.y = e * x + f * y + g * z + h;\n\t\tresult.z = i * x + j * y + k * z + l;\n\t\tresult.w = m * x + n * y + o * z + p;\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVector(matrix:Matrix3D, vector:Vector3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif (!result)\n\t\t\tresult = new Vector3D();\n\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar x:number = vector.x;\n\t\tvar y:number = vector.y;\n\t\tvar z:number = vector.z;\n\t\tresult.x = a * x + b * y + c * z;\n\t\tresult.y = e * x + f * y + g * z;\n\t\tresult.z = i * x + j * y + k * z;\n\t\tresult.w = m * x + n * y + o * z;\n\t\treturn result;\n\t}\n\n\tpublic static getTranslation(transform:Matrix3D, result:Vector3D = null):Vector3D\n\t{\n\t\tif(!result)\n\t\t\tresult = new Vector3D();\n\n\t\ttransform.copyColumnTo(3, result);\n\t\treturn result;\n\t}\n\n\tpublic static deltaTransformVectors(matrix:Matrix3D, vin:Array<number>, vout:Array<number>)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tmatrix.copyRawDataTo(raw);\n\t\tvar a:number = raw[0];\n\t\tvar e:number = raw[1];\n\t\tvar i:number = raw[2];\n\t\tvar m:number = raw[3];\n\t\tvar b:number = raw[4];\n\t\tvar f:number = raw[5];\n\t\tvar j:number = raw[6];\n\t\tvar n:number = raw[7];\n\t\tvar c:number = raw[8];\n\t\tvar g:number = raw[9];\n\t\tvar k:number = raw[10];\n\t\tvar o:number = raw[11];\n\t\tvar outIndex:number = 0;\n\t\tvar length:number = vin.length;\n\t\tfor(var index:number = 0; index<length; index+=3) {\n\t\t\tvar x:number = vin[index];\n\t\t\tvar y:number = vin[index+1];\n\t\t\tvar z:number = vin[index+2];\n\t\t\tvout[outIndex++] = a * x + b * y + c * z;\n\t\t\tvout[outIndex++] = e * x + f * y + g * z;\n\t\t\tvout[outIndex++] = i * x + j * y + k * z;\n\t\t}\n\t}\n}\n\nexport default Matrix3DUtils;",
    "import Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport MathConsts\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Orientation3D\t\t\t\tfrom \"awayjs-core/lib/geom/Orientation3D\";\nimport Quaternion\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport ArgumentError\t\t\t\tfrom \"awayjs-core/lib/errors/ArgumentError\";\n\nclass Matrix3D\n{\n\t/**\n\t * A Vector of 16 Numbers, where every four elements is a column of a 4x4 matrix.\n\t *\n\t * <p>An exception is thrown if the rawData property is set to a matrix that is not invertible. The Matrix3D\n\t * object must be invertible. If a non-invertible matrix is needed, create a subclass of the Matrix3D object.</p>\n\t */\n\tpublic rawData:Float32Array = new Float32Array(16);\n\n\tprivate static tempMatrix:Matrix3D = new Matrix3D();\n\tprivate static tempRawData:Float32Array = Matrix3D.tempMatrix.rawData;\n\n\tprivate _position:Vector3D = new Vector3D();\n\tprivate _positionDirty:boolean = true;\n\n\tprivate _components:Array<Vector3D>;\n\n\t/**\n\t * Creates a Matrix3D object.\n\t */\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tif (v != null && v.length == 16) {\n\t\t\tthis.copyRawDataFrom(v);\n\t\t} else {\n\t\t\tthis.identity();\n\t\t}\n\t}\n\n\t/**\n\t * Appends the matrix by multiplying another Matrix3D object by the current Matrix3D object.\n\t */\n\tpublic append(lhs:Matrix3D)\n\t{\n\t\tvar lrd:Float32Array = lhs.rawData;\n\n\t\tvar m111:number = this.rawData[0];\n\t\tvar m112:number = this.rawData[1];\n\t\tvar m113:number = this.rawData[2];\n\t\tvar m114:number = this.rawData[3];\n\t\tvar m121:number = this.rawData[4];\n\t\tvar m122:number = this.rawData[5];\n\t\tvar m123:number = this.rawData[6];\n\t\tvar m124:number = this.rawData[7];\n\t\tvar m131:number = this.rawData[8];\n\t\tvar m132:number = this.rawData[9];\n\t\tvar m133:number = this.rawData[10];\n\t\tvar m134:number = this.rawData[11];\n\t\tvar m141:number = this.rawData[12];\n\t\tvar m142:number = this.rawData[13];\n\t\tvar m143:number = this.rawData[14];\n\t\tvar m144:number = this.rawData[15];\n\t\tvar m211:number = lrd[0];\n\t\tvar m212:number = lrd[1];\n\t\tvar m213:number = lrd[2];\n\t\tvar m214:number = lrd[3];\n\t\tvar m221:number = lrd[4];\n\t\tvar m222:number = lrd[5];\n\t\tvar m223:number = lrd[6];\n\t\tvar m224:number = lrd[7];\n\t\tvar m231:number = lrd[8];\n\t\tvar m232:number = lrd[9];\n\t\tvar m233:number = lrd[10];\n\t\tvar m234:number = lrd[11];\n\t\tvar m241:number = lrd[12];\n\t\tvar m242:number = lrd[13];\n\t\tvar m243:number = lrd[14];\n\t\tvar m244:number = lrd[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\n\t\tthis._positionDirty = true;\n\t}\n\n\t/**\n\t * Appends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic appendRotation(degrees:number, axis:Vector3D):void //, pivot:Vector3D = null )\n\t{\n\t\tthis.append(Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees));\n\t}\n\n\t/**\n\t * Appends an incremental skew change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendSkew(xSkew:number, ySkew:number, zSkew:number)\n\t{\n\t\tif(xSkew == 0 && ySkew == 0 && zSkew == 0) return;\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\traw[0] = 1;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = xSkew;\n\t\traw[5] = 1;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = ySkew;\n\t\traw[9] = zSkew;\n\t\traw[10] = 1;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.append(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Appends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic appendScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\n\t\t\treturn;\n\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = xScale;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = yScale;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = zScale;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.append(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Appends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic appendTranslation(x:number, y:number, z:number)\n\t{\n\t\tthis.rawData[12] += x;\n\t\tthis.rawData[13] += y;\n\t\tthis.rawData[14] += z;\n\n\t\tthis._positionDirty = true;\n\t}\n\n\t/**\n\t * Returns a new Matrix3D object that is an exact copy of the current Matrix3D object.\n\t */\n\tpublic clone():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.rawData);\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D object.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 1 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 2 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 3 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 4 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 8 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 12 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D)\n\t{\n\t\tswitch (column) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 1 ];\n\t\t\t\tvector3D.z = this.rawData[ 2 ];\n\t\t\t\tvector3D.w = this.rawData[ 3 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 4 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 6 ];\n\t\t\t\tvector3D.w = this.rawData[ 7 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 8 ];\n\t\t\t\tvector3D.y = this.rawData[ 9 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 11 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 12 ];\n\t\t\t\tvector3D.y = this.rawData[ 13 ];\n\t\t\t\tvector3D.z = this.rawData[ 14 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Matrix3D object into the calling Matrix3D object.\n\t */\n\tpublic copyFrom(source:Matrix3D)\n\t{\n\t\tvar sourceRaw:Float32Array = source.rawData;\n\t\tvar len:number = sourceRaw.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = sourceRaw[c];\n\t}\n\n\t/**\n\t * Copies this Matrix3D object into a destination Matrix3D object.\n\t */\n\tpublic copyTo(target:Matrix3D)\n\t{\n\t\tvar targetRaw:Float32Array = target.rawData;\n\t\tvar len:number = this.rawData.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\ttargetRaw[c] = this.rawData[c];\n\t}\n\n\tpublic copyRawDataFrom(vector:Float32Array, index:number = 0, transpose:boolean = false):void\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = vector.length - index;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tthis.rawData[c] = vector[c + index];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\tpublic copyRawDataTo(vector:Float32Array, index:number = 0, transpose:boolean = false)\n\t{\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\n\t\tvar len:number = this.rawData.length;\n\t\tfor (var c:number = 0; c < len; c++)\n\t\t\tvector[c + index ] = this.rawData[c];\n\n\t\tif (transpose)\n\t\t\tthis.transpose();\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix3D object.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tthis.rawData[ 0 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 4 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 8 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 12 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.rawData[ 1 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 5 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 9 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 13 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.rawData[ 2 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 6 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 10 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 14 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.rawData[ 3 ] = vector3D.x;\n\t\t\t\tthis.rawData[ 7 ] = vector3D.y;\n\t\t\t\tthis.rawData[ 11 ] = vector3D.z;\n\t\t\t\tthis.rawData[ 15 ] = vector3D.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix3D object into the Vector3D object.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D)\n\t{\n\t\tswitch (row) {\n\t\t\tcase 0:\n\t\t\t\tvector3D.x = this.rawData[ 0 ];\n\t\t\t\tvector3D.y = this.rawData[ 4 ];\n\t\t\t\tvector3D.z = this.rawData[ 8 ];\n\t\t\t\tvector3D.w = this.rawData[ 12 ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvector3D.x = this.rawData[ 1 ];\n\t\t\t\tvector3D.y = this.rawData[ 5 ];\n\t\t\t\tvector3D.z = this.rawData[ 9 ];\n\t\t\t\tvector3D.w = this.rawData[ 13 ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvector3D.x = this.rawData[ 2 ];\n\t\t\t\tvector3D.y = this.rawData[ 6 ];\n\t\t\t\tvector3D.z = this.rawData[ 10 ];\n\t\t\t\tvector3D.w = this.rawData[ 14 ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvector3D.x = this.rawData[ 3 ];\n\t\t\t\tvector3D.y = this.rawData[ 7 ];\n\t\t\t\tvector3D.z = this.rawData[ 11 ];\n\t\t\t\tvector3D.w = this.rawData[ 15 ]\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t}\n\n\t/**\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector3D objects.\n\t */\n\tpublic decompose(orientationStyle:string = \"eulerAngles\"):Vector3D[]\n\t{\n\t\tvar q:Quaternion;\n\n\t\tif (this._components == null)\n\t\t\tthis._components = [null, new Vector3D(), new Vector3D(), new Vector3D()];\n\n\t\tvar colX:Vector3D = new Vector3D(this.rawData[0], this.rawData[1], this.rawData[2]);\n\t\tvar colY:Vector3D = new Vector3D(this.rawData[4], this.rawData[5], this.rawData[6]);\n\t\tvar colZ:Vector3D = new Vector3D(this.rawData[8], this.rawData[9], this.rawData[10]);\n\n\t\tvar scale:Vector3D = this._components[3];\n\t\tvar skew:Vector3D = this._components[2];\n\n\t\t//compute X scale factor and normalise colX\n\t\tscale.x = colX.length;\n\t\tcolX.scaleBy(1/scale.x);\n\n\t\t//compute XY shear factor and make colY orthogonal to colX\n\t\tskew.x = colX.dotProduct(colY);\n\t\tcolY = Vector3D.combine(colY, colX, 1, -skew.x);\n\n\t\t//compute Y scale factor and normalise colY\n\t\tscale.y = colY.length;\n\t\tcolY.scaleBy(1/scale.y);\n\t\tskew.x /= scale.y;\n\n\t\t//compute XZ and YZ shears and make colZ orthogonal to colX and colY\n\t\tskew.y = colX.dotProduct(colZ);\n\t\tcolZ = Vector3D.combine(colZ, colX, 1, -skew.y);\n\t\tskew.z = colY.dotProduct(colZ);\n\t\tcolZ = Vector3D.combine(colZ, colY, 1, -skew.z);\n\n\t\t//compute Z scale and normalise colZ\n\t\tscale.z = colZ.length;\n\t\tcolZ.scaleBy(1/scale.z);\n\t\tskew.y /= scale.z;\n\t\tskew.z /= scale.z;\n\n\t\t//at this point, the matrix (in cols) is orthonormal\n\t\t//check for a coordinate system flip. If the determinant is -1, negate the z scaling factor\n\t\tif (colX.dotProduct(colY.crossProduct(colZ)) < 0) {\n\t\t\tscale.z = -scale.z;\n\t\t\tcolZ.x = -colZ.x;\n\t\t\tcolZ.y = -colZ.y;\n\t\t\tcolZ.z = -colZ.z;\n\t\t}\n\n\t\tvar rot = this._components[1];\n\n\t\tswitch (orientationStyle) {\n\t\t\tcase Orientation3D.AXIS_ANGLE:\n\n\t\t\t\trot.w = Math.acos((colX.x + colY.y + colZ.z - 1)/2);\n\n\t\t\t\tvar len:number = Math.sqrt((colY.z - colZ.y)*(colY.z - colZ.y) + (colZ.x - colX.z)*(colZ.x - colX.z) + (colX.y - colY.x)*(colX.y - colY.x));\n\t\t\t\trot.x = (colY.z - colZ.y)/len;\n\t\t\t\trot.y = (colZ.x - colX.z)/len;\n\t\t\t\trot.z = (colX.y - colY.x)/len;\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.QUATERNION:\n\n\t\t\t\tvar tr = colX.x + colY.y + colZ.z;\n\n\t\t\t\tif (tr > 0) {\n\t\t\t\t\trot.w = Math.sqrt(1 + tr)/2;\n\n\t\t\t\t\trot.x = (colY.z - colZ.y)/(4*rot.w);\n\t\t\t\t\trot.y = (colZ.x - colX.z)/(4*rot.w);\n\t\t\t\t\trot.z = (colX.y - colY.x)/(4*rot.w);\n\t\t\t\t} else if ((colX.x > colY.y) && (colX.x > colZ.z)) {\n\t\t\t\t\trot.x = Math.sqrt(1 + colX.x - colY.y - colZ.z)/2;\n\n\t\t\t\t\trot.w = (colY.z - colZ.y)/(4*rot.x);\n\t\t\t\t\trot.y = (colX.y + colY.x)/(4*rot.x);\n\t\t\t\t\trot.z = (colZ.x + colX.z)/(4*rot.x);\n\t\t\t\t} else if (colY.y > colZ.z) {\n\t\t\t\t\trot.y = Math.sqrt(1 + colY.y - colX.x - colZ.z)/2;\n\n\t\t\t\t\trot.x = (colX.y + colY.x)/(4*rot.y);\n\t\t\t\t\trot.w = (colZ.x - colX.z)/(4*rot.y);\n\t\t\t\t\trot.z = (colY.z + colZ.y)/(4*rot.y);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = Math.sqrt(1 + colZ.z - colX.x - colY.y)/2;\n\n\t\t\t\t\trot.x = (colZ.x + colX.z)/(4*rot.z);\n\t\t\t\t\trot.y = (colY.z + colZ.y)/(4*rot.z);\n\t\t\t\t\trot.w = (colX.y - colY.x)/(4*rot.z);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\n\t\t\t\trot.y = Math.asin(-colX.z);\n\n\t\t\t\t//var cos:number = Math.cos(rot.y);\n\n\t\t\t\tif (colX.z != 1 && colX.z != -1) {\n\t\t\t\t\trot.x = Math.atan2(colY.z, colZ.z);\n\t\t\t\t\trot.z = Math.atan2(colX.y, colX.x);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = 0;\n\t\t\t\t\trot.x = Math.atan2(colY.x, colY.y);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._components[0] = this.position;\n\n\t\treturn this._components;\n\t}\n\n\t/**\n\t * Uses the transformation matrix without its translation elements to transform a Vector3D object from one space\n\t * coordinate to another.\n\t */\n\tpublic deltaTransformVector(v:Vector3D, t:Vector3D = null):Vector3D\n\t{\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\tif (!t)\n\t\t\tt = new Vector3D();\n\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8];\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9];\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10];\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11];\n\n\t\treturn t;\n\t}\n\n\t/**\n\t * Converts the current matrix to an identity or unit matrix.\n\t */\n\tpublic identity()\n\t{\n\t\tthis.rawData[0] = 1;\n\t\tthis.rawData[1] = 0;\n\t\tthis.rawData[2] = 0;\n\t\tthis.rawData[3] = 0;\n\t\tthis.rawData[4] = 0;\n\t\tthis.rawData[5] = 1;\n\t\tthis.rawData[6] = 0;\n\t\tthis.rawData[7] = 0;\n\t\tthis.rawData[8] = 0;\n\t\tthis.rawData[9] = 0;\n\t\tthis.rawData[10] = 1;\n\t\tthis.rawData[11] = 0;\n\t\tthis.rawData[12] = 0;\n\t\tthis.rawData[13] = 0;\n\t\tthis.rawData[14] = 0;\n\t\tthis.rawData[15] = 1;\n\n\t\tthis._positionDirty = true;\n\t}\n\n\t/**\n\t * [static] Interpolates the translation, rotation, and scale transformation of one matrix toward those of the target matrix.\n\t */\n\tstatic interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i])*percent;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * Interpolates this matrix towards the translation, rotation, and scale transformations of the target matrix.\n\t */\n\tpublic interpolateTo(toMat:Matrix3D, percent:number)\n\t{\n\t\tfor (var i:number = 0; i < 16; ++i)\n\t\t\tthis.rawData[i] = this.rawData[i] + (toMat.rawData[i] - this.rawData[i])*percent;\n\t}\n\n\t/**\n\t * Inverts the current matrix.\n\t */\n\tpublic invert():boolean\n\t{\n\t\tvar d = this.determinant;\n\t\tvar invertable:boolean = Math.abs(d) > 0.00000000001;\n\n\t\tif (invertable) {\n\t\t\td = 1/d;\n\t\t\tvar m11:number = this.rawData[0];\n\t\t\tvar m12:number = this.rawData[1];\n\t\t\tvar m13:number = this.rawData[2];\n\t\t\tvar m14:number = this.rawData[3];\n\t\t\tvar m21:number = this.rawData[4];\n\t\t\tvar m22:number = this.rawData[5];\n\t\t\tvar m23:number = this.rawData[6];\n\t\t\tvar m24:number = this.rawData[7];\n\t\t\tvar m31:number = this.rawData[8];\n\t\t\tvar m32:number = this.rawData[9];\n\t\t\tvar m33:number = this.rawData[10];\n\t\t\tvar m34:number = this.rawData[11];\n\t\t\tvar m41:number = this.rawData[12];\n\t\t\tvar m42:number = this.rawData[13];\n\t\t\tvar m43:number = this.rawData[14];\n\t\t\tvar m44:number = this.rawData[15];\n\n\t\t\tthis.rawData[0] = d*(m22*(m33*m44 - m43*m34) - m32*(m23*m44 - m43*m24) + m42*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[1] = -d*(m12*(m33*m44 - m43*m34) - m32*(m13*m44 - m43*m14) + m42*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[2] = d*(m12*(m23*m44 - m43*m24) - m22*(m13*m44 - m43*m14) + m42*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[3] = -d*(m12*(m23*m34 - m33*m24) - m22*(m13*m34 - m33*m14) + m32*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[4] = -d*(m21*(m33*m44 - m43*m34) - m31*(m23*m44 - m43*m24) + m41*(m23*m34 - m33*m24));\n\t\t\tthis.rawData[5] = d*(m11*(m33*m44 - m43*m34) - m31*(m13*m44 - m43*m14) + m41*(m13*m34 - m33*m14));\n\t\t\tthis.rawData[6] = -d*(m11*(m23*m44 - m43*m24) - m21*(m13*m44 - m43*m14) + m41*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[7] = d*(m11*(m23*m34 - m33*m24) - m21*(m13*m34 - m33*m14) + m31*(m13*m24 - m23*m14));\n\t\t\tthis.rawData[8] = d*(m21*(m32*m44 - m42*m34) - m31*(m22*m44 - m42*m24) + m41*(m22*m34 - m32*m24));\n\t\t\tthis.rawData[9] = -d*(m11*(m32*m44 - m42*m34) - m31*(m12*m44 - m42*m14) + m41*(m12*m34 - m32*m14));\n\t\t\tthis.rawData[10] = d*(m11*(m22*m44 - m42*m24) - m21*(m12*m44 - m42*m14) + m41*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[11] = -d*(m11*(m22*m34 - m32*m24) - m21*(m12*m34 - m32*m14) + m31*(m12*m24 - m22*m14));\n\t\t\tthis.rawData[12] = -d*(m21*(m32*m43 - m42*m33) - m31*(m22*m43 - m42*m23) + m41*(m22*m33 - m32*m23));\n\t\t\tthis.rawData[13] = d*(m11*(m32*m43 - m42*m33) - m31*(m12*m43 - m42*m13) + m41*(m12*m33 - m32*m13));\n\t\t\tthis.rawData[14] = -d*(m11*(m22*m43 - m42*m23) - m21*(m12*m43 - m42*m13) + m41*(m12*m23 - m22*m13));\n\t\t\tthis.rawData[15] = d*(m11*(m22*m33 - m32*m23) - m21*(m12*m33 - m32*m13) + m31*(m12*m23 - m22*m13));\n\t\t}\n\n\t\tthis._positionDirty = true;\n\n\t\treturn invertable;\n\t}\n\n\t/* TODO implement pointAt\n\t public pointAt( pos:Vector3D, at:Vector3D = null, up:Vector3D = null )\n\t {\n\t }\n\t */\n\n\t/**\n\t * Prepends a matrix by multiplying the current Matrix3D object by another Matrix3D object.\n\t */\n\tpublic prepend(rhs:Matrix3D)\n\t{\n\t\tvar m111:number = rhs.rawData[0];\n\t\tvar m112:number = rhs.rawData[1];\n\t\tvar m113:number = rhs.rawData[2];\n\t\tvar m114:number = rhs.rawData[3];\n\t\tvar m121:number = rhs.rawData[4];\n\t\tvar m122:number = rhs.rawData[5];\n\t\tvar m123:number = rhs.rawData[6];\n\t\tvar m124:number = rhs.rawData[7];\n\t\tvar m131:number = rhs.rawData[8];\n\t\tvar m132:number = rhs.rawData[9];\n\t\tvar m133:number = rhs.rawData[10];\n\t\tvar m134:number = rhs.rawData[11];\n\t\tvar m141:number = rhs.rawData[12];\n\t\tvar m142:number = rhs.rawData[13];\n\t\tvar m143:number = rhs.rawData[14];\n\t\tvar m144:number = rhs.rawData[15];\n\n\t\tvar m211:number = this.rawData[0];\n\t\tvar m212:number = this.rawData[1];\n\t\tvar m213:number = this.rawData[2];\n\t\tvar m214:number = this.rawData[3];\n\t\tvar m221:number = this.rawData[4];\n\t\tvar m222:number = this.rawData[5];\n\t\tvar m223:number = this.rawData[6];\n\t\tvar m224:number = this.rawData[7];\n\t\tvar m231:number = this.rawData[8];\n\t\tvar m232:number = this.rawData[9];\n\t\tvar m233:number = this.rawData[10];\n\t\tvar m234:number = this.rawData[11];\n\t\tvar m241:number = this.rawData[12];\n\t\tvar m242:number = this.rawData[13];\n\t\tvar m243:number = this.rawData[14];\n\t\tvar m244:number = this.rawData[15];\n\n\t\tthis.rawData[0] = m111*m211 + m112*m221 + m113*m231 + m114*m241;\n\t\tthis.rawData[1] = m111*m212 + m112*m222 + m113*m232 + m114*m242;\n\t\tthis.rawData[2] = m111*m213 + m112*m223 + m113*m233 + m114*m243;\n\t\tthis.rawData[3] = m111*m214 + m112*m224 + m113*m234 + m114*m244;\n\n\t\tthis.rawData[4] = m121*m211 + m122*m221 + m123*m231 + m124*m241;\n\t\tthis.rawData[5] = m121*m212 + m122*m222 + m123*m232 + m124*m242;\n\t\tthis.rawData[6] = m121*m213 + m122*m223 + m123*m233 + m124*m243;\n\t\tthis.rawData[7] = m121*m214 + m122*m224 + m123*m234 + m124*m244;\n\n\t\tthis.rawData[8] = m131*m211 + m132*m221 + m133*m231 + m134*m241;\n\t\tthis.rawData[9] = m131*m212 + m132*m222 + m133*m232 + m134*m242;\n\t\tthis.rawData[10] = m131*m213 + m132*m223 + m133*m233 + m134*m243;\n\t\tthis.rawData[11] = m131*m214 + m132*m224 + m133*m234 + m134*m244;\n\n\t\tthis.rawData[12] = m141*m211 + m142*m221 + m143*m231 + m144*m241;\n\t\tthis.rawData[13] = m141*m212 + m142*m222 + m143*m232 + m144*m242;\n\t\tthis.rawData[14] = m141*m213 + m142*m223 + m143*m233 + m144*m243;\n\t\tthis.rawData[15] = m141*m214 + m142*m224 + m143*m234 + m144*m244;\n\n\t\tthis._positionDirty = true;\n\t}\n\n\t/**\n\t * Prepends an incremental rotation to a Matrix3D object.\n\t */\n\tpublic prependRotation(degrees:number, axis:Vector3D) //, pivot:Vector3D = null )\n\t{\n\t\tvar m:Matrix3D = Matrix3D.getAxisRotation(axis.x, axis.y, axis.z, degrees);\n\n\t\t/*\n\t\t if ( pivot != null )\n\t\t {\n\t\t var p:Vector3D = pivot;\n\t\t m.appendTranslation( p.x, p.y, p.z );\n\t\t }\n\t\t */\n\t\tthis.prepend(m);\n\t}\n\n\t/**\n\t * Prepends an incremental scale change along the x, y, and z axes to a Matrix3D object.\n\t */\n\tpublic prependScale(xScale:number, yScale:number, zScale:number)\n\t{\n\t\tif(xScale == 1 && yScale == 1 && zScale == 1)\n\t\t\treturn;\n\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = xScale;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = yScale;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = zScale;\n\t\traw[11] = 0;\n\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 1;\n\n\t\tthis.prepend(Matrix3D.tempMatrix);\n\t}\n\n\t/**\n\t * Prepends an incremental translation, a repositioning along the x, y, and z axes, to a Matrix3D object.\n\t */\n\tpublic prependTranslation(x:number, y:number, z:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\n\t\traw[0] = 1;\n\t\traw[1] = 0;\n\t\traw[2] = 0;\n\t\traw[3] = 0;\n\n\t\traw[4] = 0;\n\t\traw[5] = 1;\n\t\traw[6] = 0;\n\t\traw[7] = 0;\n\n\t\traw[8] = 0;\n\t\traw[9] = 0;\n\t\traw[10] = 1;\n\t\traw[11] = 0;\n\n\t\traw[12] = x;\n\t\traw[13] = y;\n\t\traw[14] = z;\n\t\traw[15] = 1;\n\n\t\tthis.prepend(Matrix3D.tempMatrix);\n\t}\n\n\t// TODO orientationStyle\n\t/**\n\t * Sets the transformation matrix's translation, rotation, and scale settings.\n\t */\n\tpublic recompose(components:Vector3D[]):boolean\n\t{\n\t\tvar pos:Vector3D = components[0] || this.position;\n\n\t\tthis.identity();\n\t\tvar scale:Vector3D = components[3];\n\t\tif(scale && (scale.x != 1 || scale.y != 1 || scale.z != 1))\n\t\t\tthis.appendScale(scale.x, scale.y, scale.z);\n\n\t\tvar skew:Vector3D = components[2];\n\t\tif(skew && (skew.x !=0 || skew.y != 0 || skew.z != 0))\n\t\t\tthis.appendSkew(skew.x, skew.y, skew.z);\n\n\t\tvar sin:number;\n\t\tvar cos:number;\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\traw[12] = 0;\n\t\traw[13] = 0;\n\t\traw[14] = 0;\n\t\traw[15] = 0;\n\n\t\tvar rotation:Vector3D = components[1];\n\t\tif (rotation) {\n\t\t\tvar angle:number = -rotation.x;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = 1;\n\t\t\t\traw[1] = 0;\n\t\t\t\traw[2] = 0;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = 0;\n\t\t\t\traw[5] = cos;\n\t\t\t\traw[6] = -sin;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = 0;\n\t\t\t\traw[9] = sin;\n\t\t\t\traw[10] = cos;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t\tangle = -rotation.y;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = cos;\n\t\t\t\traw[1] = 0;\n\t\t\t\traw[2] = sin;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = 0;\n\t\t\t\traw[5] = 1;\n\t\t\t\traw[6] = 0;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = -sin;\n\t\t\t\traw[9] = 0;\n\t\t\t\traw[10] = cos;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t\tangle = -rotation.z;\n\t\t\tif(angle != 0){\n\t\t\t\tsin = Math.sin(angle);\n\t\t\t\tcos = Math.cos(angle);\n\n\t\t\t\traw[0] = cos;\n\t\t\t\traw[1] = -sin;\n\t\t\t\traw[2] = 0;\n\t\t\t\traw[3] = 0;\n\n\t\t\t\traw[4] = sin;\n\t\t\t\traw[5] = cos;\n\t\t\t\traw[6] = 0;\n\t\t\t\traw[7] = 0;\n\n\t\t\t\traw[8] = 0;\n\t\t\t\traw[9] = 0;\n\t\t\t\traw[10] = 1;\n\t\t\t\traw[11] = 0;\n\n\t\t\t\tthis.append(Matrix3D.tempMatrix);\n\t\t\t}\n\t\t}\n\n\t\tthis.rawData[12] = pos.x;\n\t\tthis.rawData[13] = pos.y;\n\t\tthis.rawData[14] = pos.z;\n\n\t\tif (components[0])\n\t\t\tthis._positionDirty = true;\n\n\t\tthis.rawData[15] = 1;\n\n\t\treturn true;\n\t}\n\n\tpublic transformVector(v:Vector3D, t:Vector3D = null):Vector3D\n\t{\n\t\tif (v == null)\n\t\t\treturn t || new Vector3D();\n\n\t\tvar x:number = v.x;\n\t\tvar y:number = v.y;\n\t\tvar z:number = v.z;\n\n\t\tif (!t)\n\t\t\tt = new Vector3D();\n\n\t\tt.x = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\tt.y = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\tt.z = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\tt.w = x*this.rawData[3] + y*this.rawData[7] + z*this.rawData[11] + this.rawData[15];\n\n\t\treturn t;\n\t}\n\n\tpublic transformBox(b:Box, t:Box = null):Box\n\t{\n\t\tif (b == null)\n\t\t\treturn t || new Box();\n\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tmaxX = b.width + (minX = b.x);\n\t\tmaxY = b.height + (minY = b.y);\n\t\tmaxZ = b.depth + (minZ = b.z);\n\n\t\tif (!t)\n\t\t\tt = new Box();\n\n\t\t//TODO: take account of shear\n\t\tt.width = maxX*this.rawData[0] + maxY*this.rawData[4] + maxZ*this.rawData[8] + this.rawData[12] - (t.x = minX*this.rawData[0] + minY*this.rawData[4] + minZ*this.rawData[8] + this.rawData[12]);\n\t\tt.height = maxX*this.rawData[1] + maxY*this.rawData[5] + maxZ*this.rawData[9] + this.rawData[13] - (t.y = minX*this.rawData[1] + minY*this.rawData[5] + minZ*this.rawData[9] + this.rawData[13]);\n\t\tt.depth = maxX*this.rawData[2] + maxY*this.rawData[6] + maxZ*this.rawData[10] + this.rawData[14] - (t.z = minX*this.rawData[2] + minY*this.rawData[6] + minZ*this.rawData[10] + this.rawData[14]);\n\n\t\treturn t;\n\t}\n\n\t/**\n\t * Uses the transformation matrix to transform a Vector of Numbers from one coordinate space to another.\n\t */\n\tpublic transformVectors(vin:number[], vout:number[])\n\t{\n\t\tvar i:number = 0;\n\t\tvar x:number = 0, y:number = 0, z:number = 0;\n\n\t\twhile (i + 3 <= vin.length) {\n\t\t\tx = vin[i];\n\t\t\ty = vin[i + 1];\n\t\t\tz = vin[i + 2];\n\t\t\tvout[i] = x*this.rawData[0] + y*this.rawData[4] + z*this.rawData[8] + this.rawData[12];\n\t\t\tvout[i + 1] = x*this.rawData[1] + y*this.rawData[5] + z*this.rawData[9] + this.rawData[13];\n\t\t\tvout[i + 2] = x*this.rawData[2] + y*this.rawData[6] + z*this.rawData[10] + this.rawData[14];\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Converts the current Matrix3D object to a matrix where the rows and columns are swapped.\n\t */\n\tpublic transpose()\n\t{\n\t\tvar raw:Float32Array = Matrix3D.tempRawData;\n\t\tthis.copyRawDataTo(raw);\n\n\t\tthis.rawData[1] = raw[4];\n\t\tthis.rawData[2] = raw[8];\n\t\tthis.rawData[3] = raw[12];\n\t\tthis.rawData[4] = raw[1];\n\t\tthis.rawData[6] = raw[9];\n\t\tthis.rawData[7] = raw[13];\n\t\tthis.rawData[8] = raw[2];\n\t\tthis.rawData[9] = raw[6];\n\t\tthis.rawData[11] = raw[14];\n\t\tthis.rawData[12] = raw[3];\n\t\tthis.rawData[13] = raw[7];\n\t\tthis.rawData[14] = raw[11];\n\n\t\tthis._positionDirty = true;\n\t}\n\n\tstatic getAxisRotation(x:number, y:number, z:number, degrees:number):Matrix3D\n\t{\n\n\t\t// internal class use by rotations which have been tested\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tvar rad = degrees*MathConsts.DEGREES_TO_RADIANS;\n\t\tvar c:number = Math.cos(rad);\n\t\tvar s:number = Math.sin(rad);\n\t\tvar t:number = 1 - c;\n\t\tvar tmp1:number, tmp2:number;\n\n\t\tm.rawData[0] = c + x*x*t;\n\t\tm.rawData[5] = c + y*y*t;\n\t\tm.rawData[10] = c + z*z*t;\n\n\t\ttmp1 = x*y*t;\n\t\ttmp2 = z*s;\n\t\tm.rawData[1] = tmp1 + tmp2;\n\t\tm.rawData[4] = tmp1 - tmp2;\n\t\ttmp1 = x*z*t;\n\t\ttmp2 = y*s;\n\t\tm.rawData[8] = tmp1 + tmp2;\n\t\tm.rawData[2] = tmp1 - tmp2;\n\t\ttmp1 = y*z*t;\n\t\ttmp2 = x*s;\n\t\tm.rawData[9] = tmp1 - tmp2;\n\t\tm.rawData[6] = tmp1 + tmp2;\n\n\t\treturn m;\n\t}\n\n\t/**\n\t * [read-only] A Number that determines whether a matrix is invertible.\n\t */\n\tpublic get determinant():number\n\t{\n\t\treturn ((this.rawData[0]*this.rawData[5] - this.rawData[4]*this.rawData[1])*(this.rawData[10]*this.rawData[15] - this.rawData[14]*this.rawData[11]) - (this.rawData[0]*this.rawData[9] - this.rawData[8]*this.rawData[1])*(this.rawData[6]*this.rawData[15] - this.rawData[14]*this.rawData[7]) + (this.rawData[0]*this.rawData[13] - this.rawData[12]*this.rawData[1])*(this.rawData[6]*this.rawData[11] - this.rawData[10]*this.rawData[7]) + (this.rawData[4]*this.rawData[9] - this.rawData[8]*this.rawData[5])*(this.rawData[2]*this.rawData[15] - this.rawData[14]*this.rawData[3]) - (this.rawData[4]*this.rawData[13] - this.rawData[12]*this.rawData[5])*(this.rawData[2]*this.rawData[11] - this.rawData[10]*this.rawData[3]) + (this.rawData[8]*this.rawData[13] - this.rawData[12]*this.rawData[9])*(this.rawData[2]*this.rawData[7] - this.rawData[6]*this.rawData[3]));\n\t}\n\n\t/**\n\t * A Vector3D object that holds the position, the 3D coordinate (x,y,z) of a display object within the\n\t * transformation's frame of reference.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\tif (this._positionDirty) {\n\t\t\tthis._positionDirty = false;\n\t\t\tthis._position.x = this.rawData[12];\n\t\t\tthis._position.y = this.rawData[13];\n\t\t\tthis._position.z = this.rawData[14];\n\t\t}\n\n\t\treturn this._position;\n\t}\n\n\tpublic invalidatePosition()\n\t{\n\t\tthis._positionDirty = true;\n\t}\n\n\tpublic toFixed(decimalPlace:number):string\n\t{\n\t\tvar magnitude:number = Math.pow(10, decimalPlace);\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*magnitude)/magnitude + \",\" + Math.round(this.rawData[1]*magnitude)/magnitude + \",\" + Math.round(this.rawData[2]*magnitude)/magnitude + \",\" + Math.round(this.rawData[3]*magnitude)/magnitude + \",\" + Math.round(this.rawData[4]*magnitude)/magnitude + \",\" + Math.round(this.rawData[5]*magnitude)/magnitude + \",\" + Math.round(this.rawData[6]*magnitude)/magnitude + \",\" + Math.round(this.rawData[7]*magnitude)/magnitude + \",\" + Math.round(this.rawData[8]*magnitude)/magnitude + \",\" + Math.round(this.rawData[9]*magnitude)/magnitude + \",\" + Math.round(this.rawData[10]*magnitude)/magnitude + \",\" + Math.round(this.rawData[11]*magnitude)/magnitude + \",\" + Math.round(this.rawData[12]*magnitude)/magnitude + \",\" + Math.round(this.rawData[13]*magnitude)/magnitude + \",\" + Math.round(this.rawData[14]*magnitude)/magnitude + \",\" + Math.round(this.rawData[15]*magnitude)/magnitude + \")\";\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"matrix3d(\" + Math.round(this.rawData[0]*1000)/1000 + \",\" + Math.round(this.rawData[1]*1000)/1000 + \",\" + Math.round(this.rawData[2]*1000)/1000 + \",\" + Math.round(this.rawData[3]*1000)/1000 + \",\" + Math.round(this.rawData[4]*1000)/1000 + \",\" + Math.round(this.rawData[5]*1000)/1000 + \",\" + Math.round(this.rawData[6]*1000)/1000 + \",\" + Math.round(this.rawData[7]*1000)/1000 + \",\" + Math.round(this.rawData[8]*1000)/1000 + \",\" + Math.round(this.rawData[9]*1000)/1000 + \",\" + Math.round(this.rawData[10]*1000)/1000 + \",\" + Math.round(this.rawData[11]*1000)/1000 + \",\" + Math.round(this.rawData[12]*1000)/1000 + \",\" + Math.round(this.rawData[13]*1000)/1000 + \",\" + Math.round(this.rawData[14]*1000)/1000 + \",\" + Math.round(this.rawData[15]*1000)/1000 + \")\";\n\t}\n}\n\nexport default Matrix3D;",
    "import Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport ArgumentError\t\t\tfrom \"awayjs-core/lib/errors/ArgumentError\";\n\n/**\n * The Matrix class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n *\n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n *\n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n *\n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n *\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n *\n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n *\n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n *\n * <p>The Matrix class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n *\n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n *\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nclass Matrix\n{\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic d:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>x</i> axis.\n\t */\n\tpublic tx:number;\n\n\t/**\n\t * The distance by which to translate each point along the <i>y</i> axis.\n\t */\n\tpublic ty:number;\n\n\t/**\n\t * Creates a new Matrix object with the specified parameters. In matrix\n\t * notation, the properties are organized like this:\n\t *\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n\t * constructor, it creates an <i>identity matrix</i> with the following\n\t * values:</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @return A Matrix object.\n\t */\n\tpublic clone():Matrix\n\t{\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Concatenates a matrix with the current matrix, effectively combining the\n\t * geometric effects of the two. In mathematical terms, concatenating two\n\t * matrixes is the same as combining them using matrix multiplication.\n\t *\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n\t *\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\n\t * you want to concatenate two matrixes without altering either of the two\n\t * source matrixes, first copy the source matrix by using the\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\n\t *\n\t * @param matrix The matrix to be concatenated to the source matrix.\n\t */\n\tpublic concat(matrix:Matrix):void\n\t{\n\t\tvar a1 = this.a*matrix.a + this.b*matrix.c;\n\t\tthis.b = this.a*matrix.b + this.b*matrix.d;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*matrix.a + this.d*matrix.c;\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific column of the calling Matrix3D\n\t * object.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnFrom(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t} else if (column == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (column == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific column of the calling Matrix object into the Vector3D\n\t * object. The w element of the Vector3D object will not be changed.\n\t *\n\t * @param column   The column from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyColumnTo(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Column \" + column + \" out of bounds [0, ..., 2]\");\n\t\t} else if (column == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.c;\n\t\t\tvector3D.z = 0;\n\t\t} else if (column == 1) {\n\t\t\tvector3D.x = this.b;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = 0;\n\t\t} else {\n\t\t\tvector3D.x = this.tx;\n\t\t\tvector3D.y = this.ty;\n\t\t\tvector3D.z = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Copies all of the matrix data from the source Point object into the\n\t * calling Matrix object.\n\t *\n\t * @param sourceMatrix The Matrix object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceMatrix:Matrix):void\n\t{\n\t\tthis.a = sourceMatrix.a;\n\t\tthis.b = sourceMatrix.b;\n\t\tthis.c = sourceMatrix.c;\n\t\tthis.d = sourceMatrix.d;\n\t\tthis.tx = sourceMatrix.tx;\n\t\tthis.ty = sourceMatrix.ty;\n\t}\n\n\t/**\n\t * Copies a Vector3D object into specific row of the calling Matrix object.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowFrom(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (row == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n\n\t/**\n\t * Copies specific row of the calling Matrix object into the Vector3D object.\n\t * The w element of the Vector3D object will not be changed.\n\t *\n\t * @param row      The row from which to copy the data from.\n\t * @param vector3D The Vector3D object from which to copy the data.\n\t */\n\tpublic copyRowTo(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new ArgumentError(\"ArgumentError, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.b;\n\t\t\tvector3D.z = this.tx;\n\t\t} else if (row == 1) {\n\t\t\tvector3D.x = this.c;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = this.ty;\n\t\t} else {\n\t\t\tvector3D.setTo(0, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Includes parameters for scaling, rotation, and translation. When applied\n\t * to a matrix it sets the matrix's values based on those parameters.\n\t *\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\n\t * matrix as you would if you applied the <code>identity()</code>,\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n\t * 100, 100)</code> has the same effect as the following:</p>\n\t *\n\t * @param scaleX   The factor by which to scale horizontally.\n\t * @param scaleY   The factor by which scale vertically.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The number of pixels to translate(move) to the right\n\t *                 along the <i>x</i> axis.\n\t * @param ty       The number of pixels to translate(move) down along the\n\t *                 <i>y</i> axis.\n\t */\n\tpublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = scaleX;\n\t\tthis.d = scaleY;\n\t\tthis.b = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Creates the specific style of matrix expected by the\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n\t * methods of the Graphics class. Width and height are scaled to a\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\n\t * height.\n\t *\n\t * <p>For example, consider a gradient with the following\n\t * characteristics:</p>\n\t *\n\t * <ul>\n\t *   <li><code>GradientType.LINEAR</code></li>\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n\t * 255]</code></li>\n\t *   <li><code>SpreadMethod.PAD</code></li>\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n\t * </ul>\n\t *\n\t * <p>The following illustrations show gradients in which the matrix was\n\t * defined using the <code>createGradientBox()</code> method with different\n\t * parameter settings:</p>\n\t *\n\t * @param width    The width of the gradient box.\n\t * @param height   The height of the gradient box.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The distance, in pixels, to translate to the right along\n\t *                 the <i>x</i> axis. This value is offset by half of the\n\t *                 <code>width</code> parameter.\n\t * @param ty       The distance, in pixels, to translate down along the\n\t *                 <i>y</i> axis. This value is offset by half of the\n\t *                 <code>height</code> parameter.\n\t */\n\tpublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = width/1638.4;\n\t\tthis.d = height/1638.4;\n\n\t\tif (rotation != 0.0) {\n\t\t\tvar cos = Math.cos(rotation);\n\t\t\tvar sin = Math.sin(rotation);\n\n\t\t\tthis.b = sin*this.d;\n\t\t\tthis.c = -sin*this.a;\n\t\t\tthis.a *= cos;\n\t\t\tthis.d *= cos;\n\t\t} else {\n\t\t\tthis.b = this.c = 0;\n\t\t}\n\n\t\tthis.tx = tx + width/2;\n\t\tthis.ty = ty + height/2;\n\t}\n\n\t/**\n\t * Given a point in the pretransform coordinate space, returns the\n\t * coordinates of that point after the transformation occurs. Unlike the\n\t * standard transformation applied using the <code>transformPoint()</code>\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\n\t * does not consider the translation parameters <code>tx</code> and\n\t * <code>ty</code>.\n\t *\n\t * @param point The point for which you want to get the result of the matrix\n\t *              transformation.\n\t * @return The point resulting from applying the matrix transformation.\n\t */\n\tpublic deltaTransformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\n\t}\n\n\t/**\n\t * Sets each matrix property to a value that causes a null transformation. An\n\t * object transformed by applying an identity matrix will be identical to the\n\t * original.\n\t *\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n\t * <code>ty</code>=0.</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t *\n\t */\n\tpublic identity():void\n\t{\n\t\tthis.a = 1;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 1;\n\t\tthis.tx = 0;\n\t\tthis.ty = 0;\n\t}\n\n\t/**\n\t * Performs the opposite transformation of the original matrix. You can apply\n\t * an inverted matrix to an object to undo the transformation performed when\n\t * applying the original matrix.\n\t */\n\tpublic invert():void\n\t{\n\t\tvar norm = this.a*this.d - this.b*this.c;\n\n\t\tif (norm == 0) {\n\t\t\tthis.a = this.b = this.c = this.d = 0;\n\t\t\tthis.tx = -this.tx;\n\t\t\tthis.ty = -this.ty;\n\t\t} else {\n\t\t\tnorm = 1.0/norm;\n\t\t\tvar a1 = this.d*norm;\n\t\t\tthis.d = this.a*norm;\n\t\t\tthis.a = a1;\n\t\t\tthis.b *= -norm;\n\t\t\tthis.c *= -norm;\n\n\t\t\tvar tx1 = -this.a*this.tx - this.c*this.ty;\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\n\t\t\tthis.tx = tx1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t *\n\t * @param matrix The matrix for which you want to get the result of the matrix\n\t *               transformation.\n\t * @return A Matrix object.\n\t */\n\tpublic multiply(matrix:Matrix):Matrix\n\t{\n\t\tvar result = new Matrix();\n\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Applies a rotation transformation to the Matrix object.\n\t *\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n\t * Matrix object. In matrix notation, this is the same as concatenating the\n\t * current matrix with the following:</p>\n\t *\n\t * @param angle The rotation angle in radians.\n\t */\n\tpublic rotate(angle:number):void\n\t{\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\n\t\tvar a1 = this.a*cos - this.b*sin;\n\t\tthis.b = this.a*sin + this.b*cos;\n\t\tthis.a = a1;\n\n\t\tvar c1 = this.c*cos - this.d*sin;\n\t\tthis.d = this.c*sin + this.d*cos;\n\t\tthis.c = c1;\n\n\t\tvar tx1 = this.tx*cos - this.ty*sin;\n\t\tthis.ty = this.tx*sin + this.ty*cos;\n\t\tthis.tx = tx1;\n\t}\n\n\t/**\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n\t * <code>sy</code>.\n\t *\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\n\t * is the same as concatenating the current matrix with the following\n\t * matrix:</p>\n\t *\n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\n\t */\n\tpublic scale(sx:number, sy:number):void\n\t{\n\t\tthis.a *= sx;\n\t\tthis.b *= sy;\n\n\t\tthis.c *= sx;\n\t\tthis.d *= sy;\n\n\t\tthis.tx *= sx;\n\t\tthis.ty *= sy;\n\t}\n\n\t/**\n\t * Sets the members of Matrix to the specified values.\n\t *\n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tpublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Returns a text value listing the properties of the Matrix object.\n\t *\n\t * @return A string containing the values of the properties of the Matrix\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n\t}\n\n\t/**\n\t * Returns the result of applying the geometric transformation represented by\n\t * the Matrix object to the specified point.\n\t *\n\t * @param point The point for which you want to get the result of the Matrix\n\t *              transformation.\n\t * @return The point resulting from applying the Matrix transformation.\n\t */\n\tpublic transformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\n\t}\n\n\t/**\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n\t * by the <code>dx</code> and <code>dy</code> parameters.\n\t *\n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\n\t *           pixels.\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\n\t */\n\tpublic translate(dx:number, dy:number):void\n\t{\n\t\tthis.tx += dx;\n\t\tthis.ty += dy;\n\t}\n}\n\nexport default Matrix;",
    "/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Orientation3D\n{\n\t/**\n\t * The axis angle orientation uses a combination of an axis and an angle to determine the orientation.\n\t * @type {string}\n\t */\n\tpublic static AXIS_ANGLE:string = \"axisAngle\";\n\n\t/**\n\t * The default orientation for decompose() and recompose() methods, defines the orientation with three separate angles of rotation for each axis.\n\t * @type {string}\n\t */\n\tpublic static EULER_ANGLES:string = \"eulerAngles\";\n\n\t/**\n\t * The quaternion orientation uses complex numbers.\n\t * @type {string}\n\t */\n\tpublic static QUATERNION:string = \"quaternion\";\n}\n\nexport default Orientation3D;",
    "import PlaneClassification\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\nimport Vector3D\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nclass Plane3D\n{\n\t/**\n\t * The A coefficient of this plane. (Also the x dimension of the plane normal)\n\t */\n\tpublic a:number;\n\n\t/**\n\t * The B coefficient of this plane. (Also the y dimension of the plane normal)\n\t */\n\tpublic b:number;\n\n\t/**\n\t * The C coefficient of this plane. (Also the z dimension of the plane normal)\n\t */\n\tpublic c:number;\n\n\t/**\n\t * The D coefficient of this plane. (Also the inverse dot product between normal and point)\n\t */\n\tpublic d:number;\n\n\tpublic _iAlignment:number;\n\n\t// indicates the alignment of the plane\n\tpublic static ALIGN_ANY:number = 0;\n\tpublic static ALIGN_XY_AXIS:number = 1;\n\tpublic static ALIGN_YZ_AXIS:number = 2;\n\tpublic static ALIGN_XZ_AXIS:number = 3;\n\n\t/**\n\t * Create a Plane3D with ABCD coefficients\n\t */\n\tconstructor(a:number = 0, b:number = 0, c:number = 0, d:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\n\t\tif (a == 0 && b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (b == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (a == 0 && c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from 3 points in 3d space.\n\t * @param p0 Vector3D\n\t * @param p1 Vector3D\n\t * @param p2 Vector3D\n\t */\n\tpublic fromPoints(p0:Vector3D, p1:Vector3D, p2:Vector3D)\n\t{\n\t\tvar d1x:number = p1.x - p0.x;\n\t\tvar d1y:number = p1.y - p0.y;\n\t\tvar d1z:number = p1.z - p0.z;\n\n\t\tvar d2x:number = p2.x - p0.x;\n\t\tvar d2y:number = p2.y - p0.y;\n\t\tvar d2z:number = p2.z - p0.z;\n\n\t\tthis.a = d1y*d2z - d1z*d2y;\n\t\tthis.b = d1z*d2x - d1x*d2z;\n\t\tthis.c = d1x*d2y - d1y*d2x;\n\t\tthis.d = this.a*p0.x + this.b*p0.y + this.c*p0.z;\n\n\t\t// not using epsilon, since a plane is infinite and a small incorrection can grow very large\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fills this Plane3D with the coefficients from the plane's normal and a point in 3d space.\n\t * @param normal Vector3D\n\t * @param point  Vector3D\n\t */\n\tpublic fromNormalAndPoint(normal:Vector3D, point:Vector3D)\n\t{\n\t\tthis.a = normal.x;\n\t\tthis.b = normal.y;\n\t\tthis.c = normal.z;\n\t\tthis.d = this.a*point.x + this.b*point.y + this.c*point.z;\n\t\tif (this.a == 0 && this.b == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XY_AXIS;\n\n\t\t} else if (this.b == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_YZ_AXIS;\n\n\t\t} else if (this.a == 0 && this.c == 0) {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_XZ_AXIS;\n\n\t\t} else {\n\n\t\t\tthis._iAlignment = Plane3D.ALIGN_ANY;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Normalize this Plane3D\n\t * @return Plane3D This Plane3D.\n\t */\n\tpublic normalize():Plane3D\n\t{\n\t\tvar len:number = 1/Math.sqrt(this.a*this.a + this.b*this.b + this.c*this.c);\n\t\tthis.a *= len;\n\t\tthis.b *= len;\n\t\tthis.c *= len;\n\t\tthis.d *= len;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the signed distance between this Plane3D and the point p.\n\t * @param p Vector3D\n\t * @returns Number\n\t */\n\tpublic distance(p:Vector3D):number\n\t{\n\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS) {\n\n\t\t\treturn this.a*p.x - this.d;\n\n\t\t} else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS) {\n\t\t\treturn this.b*p.y - this.d;\n\t\t}\n\n\t\telse if (this._iAlignment == Plane3D.ALIGN_XY_AXIS) {\n\n\t\t\treturn this.c*p.z - this.d;\n\n\t\t} else {\n\n\t\t\treturn this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Classify a point against this Plane3D. (in front, back or intersecting)\n\t * @param p Vector3D\n\t * @return int Plane3.FRONT or Plane3D.BACK or Plane3D.INTERSECT\n\t */\n\tpublic classifyPoint(p:Vector3D, epsilon:number = 0.01):number\n\t{\n\t\t// check NaN\n\t\tif (this.d != this.d)\n\t\t\treturn PlaneClassification.FRONT;\n\n\t\tvar len:number;\n\t\tif (this._iAlignment == Plane3D.ALIGN_YZ_AXIS)\n\t\t\tlen = this.a*p.x - this.d; else if (this._iAlignment == Plane3D.ALIGN_XZ_AXIS)\n\t\t\tlen = this.b*p.y - this.d; else if (this._iAlignment == Plane3D.ALIGN_XY_AXIS)\n\t\t\tlen = this.c*p.z - this.d; else\n\t\t\tlen = this.a*p.x + this.b*p.y + this.c*p.z - this.d;\n\n\t\tif (len < -epsilon)\n\t\t\treturn PlaneClassification.BACK; else if (len > epsilon)\n\t\t\treturn PlaneClassification.FRONT; else\n\t\t\treturn PlaneClassification.INTERSECT;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Plane3D [a:\" + this.a + \", b:\" + this.b + \", c:\" + this.c + \", d:\" + this.d + \"]\";\n\t}\n}\n\nexport default Plane3D;",
    "class PlaneClassification\n{\n\t// \"back\" is synonymous with \"in\", but used for planes (back of plane is \"inside\" a solid volume walled by a plane)\n\tpublic static BACK:number = 0;\n\tpublic static FRONT:number = 1;\n\n\tpublic static IN:number = 0;\n\tpublic static OUT:number = 1;\n\tpublic static INTERSECT:number = 2;\n\n}\n\nexport default PlaneClassification;",
    "/**\n * The Point object represents a location in a two-dimensional coordinate\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\n * represents the vertical axis.\n *\n * <p>The following code creates a point at(0,0):</p>\n *\n * <p>Methods and properties of the following classes use Point objects:</p>\n *\n * <ul>\n *   <li>BitmapData</li>\n *   <li>DisplayObject</li>\n *   <li>DisplayObjectContainer</li>\n *   <li>DisplacementMapFilter</li>\n *   <li>NativeWindow</li>\n *   <li>Matrix</li>\n *   <li>Rectangle</li>\n * </ul>\n *\n * <p>You can use the <code>new Point()</code> constructor to create a Point\n * object.</p>\n */\nclass Point\n{\n\t/**\n\t * The horizontal coordinate of the point. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The vertical coordinate of the point. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The length of the line segment from(0,0) to this point.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y);\n\t}\n\n\t/**\n\t * Creates a new point. If you pass no parameters to this method, a point is\n\t * created at(0,0).\n\t *\n\t * @param x The horizontal coordinate.\n\t * @param y The vertical coordinate.\n\t */\n\tconstructor(x:number = 0, y:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t/**\n\t * Adds the coordinates of another point to the coordinates of this point to\n\t * create a new point.\n\t *\n\t * @param v The point to be added.\n\t * @return The new point.\n\t */\n\tpublic add(v:Point):Point\n\t{\n\t\treturn new Point(this.x + v.x, this.y + v.y);\n\t}\n\n\t/**\n\t * Creates a copy of this Point object.\n\t *\n\t * @return The new Point object.\n\t */\n\tpublic clone():Point\n\t{\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\tpublic copyFrom(sourcePoint:Point)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether two points are equal. Two points are equal if they have\n\t * the same <i>x</i> and <i>y</i> values.\n\t *\n\t * @param toCompare The point to be compared.\n\t * @return A value of <code>true</code> if the object is equal to this Point\n\t *         object; <code>false</code> if it is not equal.\n\t */\n\tpublic equals(toCompare:Point):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y);\n\t}\n\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current point is\n\t *                 (0,5), and you normalize it to 1, the point returned is\n\t *                  at(0,1).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\treturn;\n\t\t}\n\t\tthrow \"Cannot divide by zero length.\";\n\t}\n\n\t/**\n\t * Offsets the Point object by the specified amount. The value of\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\n\t * value of <i>y</i> to create the new <i>y</i> value.\n\t *\n\t * @param dx The amount by which to offset the horizontal coordinate,\n\t *           <i>x</i>.\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\tpublic setTo(xa:number, ya:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t}\n\n\t/**\n\t * Subtracts the coordinates of another point from the coordinates of this\n\t * point to create a new point.\n\t *\n\t * @param v The point to be subtracted.\n\t * @return The new point.\n\t */\n\tpublic subtract(v:Point):Point\n\t{\n\t\treturn new Point(this.x - v.x, this.y - v.y);\n\t}\n\n\t/**\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\n\t *\n\t * @return The string representation of the coordinates.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Point] (x=\" + this.x + \", y=\" + this.y + \")\";\n\t}\n\n\t/**\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @return The distance between the first and second points.\n\t */\n\tpublic static distance(pt1:Point, pt2:Point):number\n\t{\n\t\tvar dx:number = pt2.x - pt1.x;\n\t\tvar dy:number = pt2.y - pt1.y;\n\n\t\treturn Math.sqrt(dx*dx + dy*dy);\n\t}\n\n\t/**\n\t * Determines a point between two specified points. The parameter\n\t * <code>f</code> determines where the new interpolated point is located\n\t * relative to the two end points specified by parameters <code>pt1</code>\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\n\t * point(parameter <code>pt2</code>).\n\t *\n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @param f   The level of interpolation between the two points. Indicates\n\t *            where the new point will be, along the line between\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\n\t *            <code>pt2</code> is returned.\n\t * @return The new, interpolated point.\n\t */\n\tpublic static interpolate(pt1:Point, pt2:Point, f:number):Point\n\t{\n\t\treturn new Point(pt2.x + (pt1.x - pt2.x)*f, pt2.y + (pt1.y - pt2.y)*f);\n\t}\n\n\t/**\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\n\t *\n\t * @param len   The length coordinate of the polar pair.\n\t * @param angle The angle, in radians, of the polar pair.\n\t * @return The Cartesian point.\n\t */\n\tpublic static polar(len:number, angle:number):Point\n\t{\n\t\treturn new Point(len*Math.cos(angle), len*Math.sin(angle));\n\t}\n}\n\nexport default Point;\n",
    "class PoissonLookup\n{\n\tpublic static _distributions:Array<Array<number>>;\n\n\tpublic static initDistributions():void\n\t{\n\t\t// precalculated for best control\n\t\tthis._distributions = new Array<Array<number>>();\n\t\tthis._distributions[0] = new Array<number>(0.3082841, 0.4320919);\n\t\tthis._distributions[1] = new Array<number>(0.3082841, 0.4320919, -0.2274942, -0.6640266);\n\t\tthis._distributions[2] = new Array<number>(0.8742689, 0.0009265686, -0.6864116, -0.5536607, -0.2325206, 0.7678371);\n\t\tthis._distributions[3] = new Array<number>(0.3913446, -0.7084417, -0.7511101, -0.5935929, -0.2323436, 0.5320091, 0.8435315, 0.5035911);\n\t\tthis._distributions[4] = new Array<number>(0.2122471, -0.5771395, -0.8543506, -0.1763534, 0.5189021, 0.8323698, -0.3616908, 0.5865368, 0.9523004, -0.04948437);\n\t\tthis._distributions[5] = new Array<number>(0.5791035, 0.3496495, 0.2959551, -0.6006749, -0.2419119, -0.06879545, -0.7403072, 0.6110353, -0.04555973, 0.8059174, -0.5275017, -0.737129);\n\t\tthis._distributions[6] = new Array<number>(0.06941478, 0.8519508, -0.7441907, 0.2426432, 0.6439992, -0.2405252, -0.1007523, -0.2327587, -0.6427067, -0.7248485, 0.8050759, 0.5492936, 0.3573822, -0.8824506);\n\t\tthis._distributions[7] = new Array<number>(0.8509863, 0.4452587, -0.09507271, 0.2073005, 0.1706571, -0.6434793, 0.8029777, -0.2718274, -0.4401725, 0.8196304, 0.2715359, 0.8598521, -0.8121575, -0.006447683, -0.6486837, -0.7237598);\n\t\tthis._distributions[8] = new Array<number>(0.6951686, -0.2680728, -0.04933243, 0.3710589, 0.6592212, 0.3661054, -0.01579228, -0.6909603, -0.3275101, -0.1756866, 0.3811549, 0.9218544, -0.216032, 0.9755028, -0.7065172, 0.3355389, -0.6579109, -0.6798355);\n\t\tthis._distributions[9] = new Array<number>(0.6181276, -0.09790418, -0.2537868, -0.5570995, -0.1964931, 0.3459414, 0.3474613, -0.8885581, 0.5135743, 0.5753114, -0.9549091, 0.1480672, -0.8711916, -0.4293123, -0.6928071, 0.6190156, -0.13369, 0.8892705, 0.0548224, -0.1246777);\n\t\tthis._distributions[10] = new Array<number>(0.4853027, -0.5080479, -0.1331675, -0.506597, 0.139575, 0.01316885, 0.803486, -0.07568797, 0.5240274, 0.4883182, -0.4334005, 0.1207938, -0.7794577, -0.3985141, 0.1576432, -0.9861221, -0.3712867, 0.6959021, 0.1517378, 0.9847429, -0.9762396, 0.1661073);\n\t\tthis._distributions[11] = new Array<number>(-0.2790166, -0.01252619, 0.3389016, 0.3921154, 0.2408341, -0.313211, -0.8151779, -0.3898362, -0.6347761, 0.3486495, 0.09471484, -0.7722448, -0.1385674, 0.6364574, 0.2456331, 0.9295807, -0.3864306, -0.8247881, 0.6111673, -0.7164014, 0.8287669, 0.05466961, 0.837706, 0.5415626);\n\t\tthis._distributions[12] = new Array<number>(0.056417, 0.3185693, -0.8245888, 0.1882799, 0.8575996, 0.1136829, 0.1070375, 0.875332, 0.4076743, -0.06000621, -0.4311306, 0.7239349, 0.2677574, -0.538472, -0.08486642, -0.2083647, -0.888989, -0.3906443, -0.4768958, -0.6664082, 0.09334993, -0.9861541, 0.808736, -0.455949, 0.5889823, 0.7660807);\n\t\tthis._distributions[13] = new Array<number>(-0.2681346, -0.3955857, -0.1315102, -0.8852947, -0.5143692, 0.09551838, 0.4344836, -0.546945, -0.8620899, -0.3813288, 0.1650431, 0.02034803, -0.1543657, 0.3842218, -0.828457, 0.5376903, -0.6145, -0.7818927, -0.2639062, 0.8784655, 0.1912684, 0.9720125, 0.3135219, 0.5224229, 0.7850655, 0.4592297, 0.7465045, -0.1368916);\n\t\tthis._distributions[14] = new Array<number>(0.4241029, 0.695281, 0.150511, -0.02304107, -0.2482675, 0.9120338, 0.8057325, 0.2622084, -0.2445909, 0.2765962, 0.8588713, -0.1772072, 0.3117845, -0.4385471, -0.3923851, -0.3298936, -0.1751254, -0.7405846, 0.6926506, -0.684163, -0.9304563, -0.3254691, -0.8533293, 0.1523024, 0.2510415, -0.917345, -0.6239773, -0.7105472, -0.6104624, 0.6041355);\n\t\tthis._distributions[15] = new Array<number>(0.5844554, 0.06651045, 0.1343258, 0.6756578, 0.3799674, -0.6301104, 0.5590436, 0.7940555, 0.09574714, 0.02262517, 0.8697868, 0.393301, 0.003945862, -0.421735, 0.9043913, -0.2432393, -0.4844007, 0.7190998, -0.3201078, 0.2972371, -0.3852352, -0.6341155, -0.5413069, -0.09223081, -0.8468984, -0.5126905, 0.004156174, -0.8633173, -0.9681889, -0.03305046, -0.846509, 0.4414353);\n\t\tthis._distributions[16] = new Array<number>(0.4506488, 0.657668, 0.4621297, 0.07441051, -0.2782125, 0.6201044, 0.9750003, 0.09110117, 0.1019436, 0.2986514, 0.03457398, 0.9631706, 0.542098, -0.5505635, 0.8675668, 0.4938077, -0.5414361, 0.2655292, -0.7941836, 0.6003053, -0.09847672, -0.1001604, -0.9316511, -0.08572888, 0.07286467, -0.611899, -0.5232627, -0.4082253, -0.5481608, -0.827938, -0.1551939, -0.9621193, 0.9220031, -0.3315949);\n\t\tthis._distributions[17] = new Array<number>(0.197908, -0.4697656, -0.4474689, -0.3428435, 0.8529873, -0.2228634, 0.6022478, -0.5469642, 0.2545276, -0.931133, -0.1507547, -0.7855865, -0.07606658, 0.1011628, 0.3046715, 0.2785755, 0.4698432, -0.1064076, 0.6831254, 0.4152522, 0.1374381, 0.8363233, -0.2166121, 0.6682042, 0.5511393, 0.7996449, -0.4278994, 0.28836, -0.8875198, 0.2181732, -0.8772842, -0.2818254, -0.7000262, 0.5762185, -0.6062385, -0.7439126);\n\t\tthis._distributions[18] = new Array<number>(0.6645703, -0.05678739, 0.5720971, 0.4533803, -0.07660709, 0.08802763, 0.5163431, -0.4426552, 0.1163455, -0.3404382, -0.4004807, -0.5046007, 0.2932099, -0.8201418, -0.5322125, 0.03834766, -0.1490209, -0.8817304, -0.8000439, -0.3509448, 0.5260983, 0.8421043, 0.1197811, 0.6963812, 0.9498612, 0.3122156, -0.9285746, 0.02120355, -0.6670724, 0.7217396, 0.9155889, -0.3510147, -0.271941, 0.4727852, 0.318879, 0.1634057, -0.2686755, 0.9253026);\n\t\tthis._distributions[19] = new Array<number>(0.5064292, 0.422527, 0.8935515, -0.06610427, 0.1199719, 0.175568, 0.403388, -0.2003276, 0.1657927, 0.8154403, 0.9301245, 0.2929218, -0.1644068, 0.6201534, 0.7113559, -0.6589743, -0.3364046, -0.1799502, 0.02109996, -0.392765, -0.382213, 0.3219992, -0.9201946, 0.1207967, -0.726185, 0.4291916, -0.7443482, -0.2480059, -0.5147594, 0.7418784, 0.1935272, -0.7406143, -0.3643523, -0.5559214, -0.7147766, -0.6326278, -0.2524151, -0.9096627, 0.5161405, 0.7908453);\n\t\tthis._distributions[20] = new Array<number>(0.7921003, -0.3032096, 0.5992879, -0.009052323, 0.2538549, -0.1872749, 0.7053444, 0.3677175, 0.5417761, -0.8170255, 0.9749611, 0.1210478, 0.1969143, -0.6117041, -0.1824499, -0.4634196, -0.1181338, -0.8668742, -0.3050112, -0.1352596, -0.4409327, -0.7082354, -0.03225285, 0.1171548, 0.3113096, 0.3250439, -0.8166144, -0.463995, -0.01014475, 0.4715334, -0.6868284, 0.05091889, -0.4011163, 0.2717285, -0.06756835, 0.8307694, -0.7938535, 0.4352129, -0.4663842, 0.7165329, 0.559729, 0.8093995);\n\t\tthis._distributions[21] = new Array<number>(0.07832243, 0.426151, -0.3856795, 0.5799953, 0.01970797, 0.06706189, 0.4822682, 0.3014512, -0.1532982, 0.87485, -0.4959527, 0.07888043, 0.260601, -0.2304784, 0.4996209, 0.7167382, 0.585986, -0.04265174, -0.7679967, 0.5509416, -0.9041753, 0.1802134, -0.8407655, -0.4442826, -0.2058258, -0.2636995, -0.4984115, -0.5928579, 0.2926032, -0.7886473, -0.06933882, -0.621177, 0.578115, -0.4813387, 0.8981777, -0.3291056, 0.1942733, 0.9255584, 0.8084362, 0.5066984, 0.9920095, 0.03103104, -0.2403206, -0.9389018);\n\t\tthis._distributions[22] = new Array<number>(-0.5691095, 0.1014316, -0.7788262, 0.384012, -0.8253665, -0.1645582, -0.1830993, 0.002997211, -0.2555013, -0.4177977, -0.6640869, -0.4794711, -0.2351242, 0.5850121, 0.02436554, 0.2825883, 0.006061143, -0.8200245, 0.1618791, -0.3063331, -0.3765897, -0.7249815, 0.6092919, -0.6769328, -0.5956934, 0.6957655, 0.5383642, 0.4522677, -0.1489165, 0.9125596, 0.4167473, 0.1335986, 0.1898309, 0.5874342, 0.2288171, 0.9624356, 0.7540846, -0.07672304, 0.8986252, 0.2788797, 0.3555991, -0.9262139, 0.8454325, -0.4027667, 0.4945236, -0.2935512);\n\t\tthis._distributions[23] = new Array<number>(-0.4481403, -0.3758374, -0.8877251, 0.08739938, 0.05015831, -0.1339983, -0.4070427, -0.8534173, 0.1019274, -0.5503222, -0.445998, 0.1997541, -0.8686263, -0.2788867, -0.7695944, -0.6033704, -0.05515742, -0.885711, -0.7714347, 0.5790485, 0.3466263, -0.8799297, 0.4487582, -0.5321087, -0.2461368, 0.6053771, -0.05568117, 0.2457351, -0.4668669, 0.8523816, 0.8103387, -0.4255538, 0.4054182, -0.175663, -0.2802011, -0.08920153, 0.2665959, 0.382935, 0.555679, 0.1621837, 0.105246, 0.8420411, 0.6921161, 0.6902903, 0.880946, 0.2483067, 0.9699264, -0.1021767);\n\t\tthis._distributions[24] = new Array<number>(-0.1703323, -0.3119385, 0.2916039, -0.2988263, -0.008472982, -0.9277695, -0.7730271, -0.3277904, 0.3440474, -0.6815342, -0.2910278, 0.03461745, -0.6764899, -0.657078, -0.3505501, -0.7311988, -0.03478927, 0.3258755, -0.6048835, 0.159423, 0.2035525, 0.02212214, 0.5116573, 0.2226856, 0.6664805, -0.2500189, 0.7147882, -0.6609634, 0.03030632, -0.5763278, -0.2516585, 0.6116219, -0.9434413, -0.0116792, 0.9061816, 0.2491155, 0.182867, 0.6076167, 0.286593, 0.9485695, -0.5992439, 0.6970096, -0.2082874, 0.9416641, 0.9880044, -0.1541709, -0.9122881, 0.331555, 0.7324886, 0.6725098);\n\t\tthis._distributions[25] = new Array<number>(0.3869598, -0.04974834, 0.7168844, -0.0693711, -0.07166742, 0.1725325, 0.4599592, 0.3232779, 0.5872094, -0.4198674, 0.2442266, -0.625667, 0.1254557, 0.4500048, -0.2290154, -0.1803567, 0.890583, 0.3373493, 0.1256081, 0.7853789, -0.2676466, 0.5305805, -0.7063224, 0.252168, -0.3989835, 0.1189921, 0.09617215, -0.2451447, 0.6302541, 0.6085876, 0.9380925, -0.3234899, 0.5086241, -0.8573482, 0.03576187, -0.9876697, -0.0876712, -0.6365195, -0.5276513, 0.823456, -0.6935764, -0.2240411, -0.5212318, -0.5383121, -0.2116208, 0.9639363, -0.9840096, 0.02743555, -0.3991577, -0.8994547, -0.7830126, 0.614068);\n\t\tthis._distributions[26] = new Array<number>(-0.8366601, 0.4464895, -0.5917366, -0.02073906, -0.9845258, 0.1635625, -0.3097973, 0.4379579, -0.5478154, 0.7173221, -0.1685888, 0.9261969, 0.01503595, 0.6046097, 0.4452421, 0.5449086, 0.0315687, 0.1944619, 0.3753404, 0.8688548, 0.4143643, 0.1396648, 0.8711032, 0.4304703, 0.7328773, 0.1461501, 0.6374492, -0.3521495, 0.145613, -0.1341466, 0.9040975, -0.135123, -0.7839059, -0.5450199, -0.516019, -0.3320859, -0.206158, -0.4431106, -0.9703014, -0.2368356, -0.2473119, -0.0864351, 0.2130725, -0.4604077, -0.003726701, -0.7122303, -0.4072131, -0.6833169, 0.1632999, -0.9776646, 0.4686888, -0.680495, -0.2293511, -0.9509777);\n\t\tthis._distributions[27] = new Array<number>(0.107311, -0.1311369, -0.4194764, -0.3148777, 0.6171439, -0.2745973, 0.2796618, 0.1937153, -0.09106886, 0.4180236, 0.6044006, 0.05577846, 0.02927299, -0.6738263, -0.2580845, 0.1179939, -0.09023564, -0.3830024, 0.3570953, -0.5000587, 0.81591, -0.5518309, 0.9300217, -0.1257987, 0.4904627, -0.8381903, -0.3163182, -0.8632009, 0.1137595, -0.9875998, 0.8390043, 0.3538185, 0.2149114, 0.4993694, 0.5191584, 0.3833552, 0.5002763, 0.7061465, -0.2567276, 0.9068756, -0.5197366, 0.3467845, 0.03668867, 0.9734009, -0.5347553, 0.66747, -0.9028882, 0.1023768, -0.8967977, 0.412834, -0.5821944, 0.0426479, -0.8032165, -0.2397038, -0.5597343, -0.6358021);\n\t\tthis._distributions[28] = new Array<number>(-0.6562496, -0.1781036, -0.9301494, 0.1185208, -0.3861143, -0.4153562, -0.1560799, -0.1099607, -0.5587025, 0.395218, -0.5322112, -0.699701, -0.5008639, 0.08726846, -0.970524, -0.1963461, -0.813577, -0.5185111, -0.1644458, 0.298, -0.3216791, 0.639982, 0.3315373, 0.3339162, 0.2383235, -0.00105722, 0.1137828, 0.5450742, -0.01899921, 0.8798413, 0.2849685, 0.8255596, 0.6974412, 0.2123175, 0.7588523, 0.5470437, 0.5102502, -0.1687844, 0.5853448, 0.8033476, 0.2590716, -0.5262504, 0.5607718, -0.6342825, 0.8666443, -0.1491841, 0.8341052, -0.4935003, -0.1568441, -0.6634066, 0.2512113, -0.8769391, -0.2559827, -0.9572457, -0.01928852, -0.3966542, -0.750667, 0.6409678);\n\t\tthis._distributions[29] = new Array<number>(0.3454786, -0.04837726, 0.2649553, 0.2406852, 0.5599093, -0.3839145, -0.1111814, -0.05502108, 0.7586042, -0.05818377, 0.2519488, -0.4665135, -0.1264972, 0.2602723, -0.08766216, -0.3671907, 0.6428129, 0.3999204, -0.6105871, -0.1246869, -0.4589451, -0.7646643, -0.03021116, -0.7899352, -0.6036922, -0.4293956, -0.2481938, 0.6534185, 0.102798, 0.6784465, -0.6392644, 0.4821358, -0.6789002, 0.1779133, -0.9140783, -0.1989647, -0.9262617, 0.3381507, 0.4794891, -0.8093274, 0.3959447, 0.668478, 0.9602883, 0.2272305, -0.123672, 0.9210883, 0.2375148, 0.9523395, -0.52898, 0.7973378, -0.382433, 0.1228794, 0.695015, 0.6948439, 0.7530277, -0.6458191, 0.8777987, -0.3272956, 0.2318525, -0.962768);\n\t\tthis._distributions[30] = new Array<number>(0.4518921, -0.1146195, 0.4720805, -0.4238748, 0.3655423, 0.1806341, 0.1589939, -0.23568, 0.7673324, -0.5149941, 0.01163658, 0.09045836, 0.7010971, 0.1245747, 0.7518286, -0.1855433, 0.4960719, 0.4601022, 0.2566979, -0.6308268, -0.0654714, -0.5126389, -0.1823319, -0.1343282, -0.1464312, 0.4883236, -0.3858738, 0.203523, 0.1484799, 0.4432284, -0.477109, -0.116241, 0.2719092, 0.7208626, 0.9104174, 0.3578536, -0.5956199, 0.7662588, -0.6996251, 0.3678654, -0.2514512, 0.9251933, 0.1275825, -0.9478135, -0.204608, -0.8611552, 0.4264838, -0.877443, 0.9854161, 0.05521112, 0.5912951, 0.7997434, 0.1140349, 0.982093, -0.9324368, -0.2094094, -0.42436, -0.6441524, -0.6722705, -0.3554261, -0.7844236, 0.08587621);\n\t\tthis._distributions[31] = new Array<number>(-0.4206714, -0.5613642, -0.8733016, -0.3373051, -0.1046226, -0.2902999, -0.1318562, -0.8434365, 0.1145093, -0.5962623, -0.4965627, -0.1873259, -0.5011808, -0.8546229, -0.7165636, -0.5743566, 0.1090901, 0.2017643, 0.3404809, -0.220455, -0.1989015, 0.2372122, -0.4538706, 0.0979171, 0.4514146, -0.572846, 0.2314168, -0.8514503, -0.4247236, 0.5650803, -0.943347, 0.04514639, -0.1309718, 0.5221877, -0.7004157, 0.4561877, 0.6306441, 0.04448673, 0.4301621, 0.5766876, 0.1078042, 0.7245752, 0.3875354, 0.2794483, 0.702876, -0.2924213, 0.7360667, -0.6210318, 0.7486517, 0.6531103, 0.4898235, 0.8591025, 0.6549174, 0.3854057, -0.2596106, 0.7916998, 0.9251194, -0.05296265, -0.5620695, 0.820877, -0.01228026, 0.9937211, 0.9612103, 0.2628758);\n\t}\n\n\tpublic static getDistribution(n:number /*int*/):Array<number>\n\t{\n\t\tif (!this._distributions)\n\t\t\tthis.initDistributions();\n\n\t\tif (n < 2 || n > 32)\n\t\t\treturn null;\n\n\t\treturn this._distributions[n - 1];\n\t}\n}\n\nexport default PoissonLookup;",
    "import Matrix3DUtils\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Orientation3D\t\tfrom \"awayjs-core/lib/geom/Orientation3D\";\nimport Matrix3D\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\n/**\n * A Quaternion object which can be used to represent rotations.\n */\nclass Quaternion\n{\n\t/**\n\t * The x value of the quaternion.\n\t */\n\tpublic x:number = 0;\n\n\t/**\n\t * The y value of the quaternion.\n\t */\n\tpublic y:number = 0;\n\n\t/**\n\t * The z value of the quaternion.\n\t */\n\tpublic z:number = 0;\n\n\t/**\n\t * The w value of the quaternion.\n\t */\n\tpublic w:number = 1;\n\n\t/**\n\t * Creates a new Quaternion object.\n\t * @param x The x value of the quaternion.\n\t * @param y The y value of the quaternion.\n\t * @param z The z value of the quaternion.\n\t * @param w The w value of the quaternion.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 1)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Returns the magnitude of the quaternion object.\n\t */\n\tpublic get magnitude():number\n\t{\n\t\treturn Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t}\n\n\t/**\n\t * Fills the quaternion object with the result from a multiplication of two quaternion objects.\n\t *\n\t * @param    qa    The first quaternion in the multiplication.\n\t * @param    qb    The second quaternion in the multiplication.\n\t */\n\tpublic multiply(qa:Quaternion, qb:Quaternion)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\n\t\tthis.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\tthis.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\tthis.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\tthis.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t}\n\n\tpublic multiplyVector(vector:Vector3D, target:Quaternion = null):Quaternion\n\t{\n\t\t//target ||= new Quaternion();\n\t\tif (target === null) {\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\n\t\tvar x2:number = vector.x;\n\t\tvar y2:number = vector.y;\n\t\tvar z2:number = vector.z;\n\n\t\ttarget.w = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\ttarget.x = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ttarget.y = this.w*y2 - this.x*z2 + this.z*x2;\n\t\ttarget.z = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given rotation around a vector.\n\t *\n\t * @param    axis    The axis around which to rotate\n\t * @param    angle    The angle in radians of the rotation.\n\t */\n\tpublic fromAxisAngle(axis:Vector3D, angle:number)\n\t{\n\t\tvar sin_a:number = Math.sin(angle/2);\n\t\tvar cos_a:number = Math.cos(angle/2);\n\n\t\tthis.x = axis.x*sin_a;\n\t\tthis.y = axis.y*sin_a;\n\t\tthis.z = axis.z*sin_a;\n\t\tthis.w = cos_a;\n\n\t\tthis.normalize();\n\t}\n\n\t/**\n\t * Spherically interpolates between two quaternions, providing an interpolation between rotations with constant angle change rate.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic slerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar dot:number = w1*w2 + x1*x2 + y1*y2 + z1*z2;\n\n\t\t// shortest direction\n\t\tif (dot < 0) {\n\t\t\tdot = -dot;\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tif (dot < 0.95) {\n\t\t\t// interpolate angle linearly\n\t\t\tvar angle:number = Math.acos(dot);\n\t\t\tvar s:number = 1/Math.sin(angle);\n\t\t\tvar s1:number = Math.sin(angle*(1 - t))*s;\n\t\t\tvar s2:number = Math.sin(angle*t)*s;\n\t\t\tthis.w = w1*s1 + w2*s2;\n\t\t\tthis.x = x1*s1 + x2*s2;\n\t\t\tthis.y = y1*s1 + y2*s2;\n\t\t\tthis.z = z1*s1 + z2*s2;\n\t\t} else {\n\t\t\t// nearly identical angle, interpolate linearly\n\t\t\tthis.w = w1 + t*(w2 - w1);\n\t\t\tthis.x = x1 + t*(x2 - x1);\n\t\t\tthis.y = y1 + t*(y2 - y1);\n\t\t\tthis.z = z1 + t*(z2 - z1);\n\t\t\tvar len:number = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\t\tthis.w *= len;\n\t\t\tthis.x *= len;\n\t\t\tthis.y *= len;\n\t\t\tthis.z *= len;\n\t\t}\n\t}\n\n\t/**\n\t * Linearly interpolates between two quaternions.\n\t * @param qa The first quaternion to interpolate.\n\t * @param qb The second quaternion to interpolate.\n\t * @param t The interpolation weight, a value between 0 and 1.\n\t */\n\tpublic lerp(qa:Quaternion, qb:Quaternion, t:number)\n\t{\n\t\tvar w1:number = qa.w, x1:number = qa.x, y1:number = qa.y, z1:number = qa.z;\n\t\tvar w2:number = qb.w, x2:number = qb.x, y2:number = qb.y, z2:number = qb.z;\n\t\tvar len:number;\n\n\t\t// shortest direction\n\t\tif (w1*w2 + x1*x2 + y1*y2 + z1*z2 < 0) {\n\t\t\tw2 = -w2;\n\t\t\tx2 = -x2;\n\t\t\ty2 = -y2;\n\t\t\tz2 = -z2;\n\t\t}\n\n\t\tthis.w = w1 + t*(w2 - w1);\n\t\tthis.x = x1 + t*(x2 - x1);\n\t\tthis.y = y1 + t*(y2 - y1);\n\t\tthis.z = z1 + t*(z2 - z1);\n\n\t\tlen = 1.0/Math.sqrt(this.w*this.w + this.x*this.x + this.y*this.y + this.z*this.z);\n\t\tthis.w *= len;\n\t\tthis.x *= len;\n\t\tthis.y *= len;\n\t\tthis.z *= len;\n\t}\n\n\t/**\n\t * Fills the quaternion object with values representing the given euler rotation.\n\t *\n\t * @param    ax        The angle in radians of the rotation around the ax axis.\n\t * @param    ay        The angle in radians of the rotation around the ay axis.\n\t * @param    az        The angle in radians of the rotation around the az axis.\n\t */\n\tpublic fromEulerAngles(ax:number, ay:number, az:number)\n\t{\n\t\tvar halfX:number = ax*.5, halfY:number = ay*.5, halfZ:number = az*.5;\n\t\tvar cosX:number = Math.cos(halfX), sinX:number = Math.sin(halfX);\n\t\tvar cosY:number = Math.cos(halfY), sinY:number = Math.sin(halfY);\n\t\tvar cosZ:number = Math.cos(halfZ), sinZ:number = Math.sin(halfZ);\n\n\t\tthis.w = cosX*cosY*cosZ + sinX*sinY*sinZ;\n\t\tthis.x = sinX*cosY*cosZ - cosX*sinY*sinZ;\n\t\tthis.y = cosX*sinY*cosZ + sinX*cosY*sinZ;\n\t\tthis.z = cosX*cosY*sinZ - sinX*sinY*cosZ;\n\t}\n\n\t/**\n\t * Fills a target Vector3D object with the Euler angles that form the rotation represented by this quaternion.\n\t * @param target An optional Vector3D object to contain the Euler angles. If not provided, a new object is created.\n\t * @return The Vector3D containing the Euler angles.\n\t */\n\tpublic toEulerAngles(target:Vector3D = null):Vector3D\n\t{\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\ttarget.x = Math.atan2(2*(this.w*this.x + this.y*this.z), 1 - 2*(this.x*this.x + this.y*this.y));\n\t\ttarget.y = Math.asin(2*(this.w*this.y - this.z*this.x));\n\t\ttarget.z = Math.atan2(2*(this.w*this.z + this.x*this.y), 1 - 2*(this.y*this.y + this.z*this.z));\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Normalises the quaternion object.\n\t */\n\tpublic normalize(val:number = 1)\n\t{\n\t\tvar mag:number = val/Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\n\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t\tthis.z *= mag;\n\t\tthis.w *= mag;\n\t}\n\n\t/**\n\t * Used to trace the values of a quaternion.\n\t *\n\t * @return A string representation of the quaternion object.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"{x:\" + this.x + \" y:\" + this.y + \" z:\" + this.z + \" w:\" + this.w + \"}\";\n\t}\n\n\t/**\n\t * Converts the quaternion to a Matrix3D object representing an equivalent rotation.\n\t * @param target An optional Matrix3D container to store the transformation in. If not provided, a new object is created.\n\t * @return A Matrix3D object representing an equivalent rotation.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar rawData:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\trawData[0] = xx - yy - zz + ww;\n\t\trawData[4] = xy2 - zw2;\n\t\trawData[8] = xz2 + yw2;\n\t\trawData[12] = 0;\n\t\trawData[1] = xy2 + zw2;\n\t\trawData[5] = -xx + yy - zz + ww;\n\t\trawData[9] = yz2 - xw2;\n\t\trawData[13] = 0;\n\t\trawData[2] = xz2 - yw2;\n\t\trawData[6] = yz2 + xw2;\n\t\trawData[10] = -xx - yy + zz + ww;\n\t\trawData[14] = 0;\n\t\trawData[3] = 0.0;\n\t\trawData[7] = 0.0;\n\t\trawData[11] = 0;\n\t\trawData[15] = 1;\n\n\t\tif (!target)\n\t\t\treturn new Matrix3D(rawData);\n\t\telse\n\t\t\ttarget.copyRawDataFrom(rawData);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Extracts a quaternion rotation matrix out of a given Matrix3D object.\n\t * @param matrix The Matrix3D out of which the rotation will be extracted.\n\t */\n\tpublic fromMatrix(matrix:Matrix3D)\n\t{\n\t\tvar v:Vector3D = matrix.decompose(Orientation3D.QUATERNION)[1];\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t}\n\n\t/**\n\t * Converts the quaternion to a Vector.&lt;Number&gt; matrix representation of a rotation equivalent to this quaternion.\n\t * @param target The Vector.&lt;Number&gt; to contain the raw matrix data.\n\t * @param exclude4thRow If true, the last row will be omitted, and a 4x3 matrix will be generated instead of a 4x4.\n\t */\n\tpublic toRawData(target:number[], exclude4thRow:boolean = false)\n\t{\n\t\tvar xy2:number = 2.0*this.x*this.y, xz2:number = 2.0*this.x*this.z, xw2:number = 2.0*this.x*this.w;\n\t\tvar yz2:number = 2.0*this.y*this.z, yw2:number = 2.0*this.y*this.w, zw2:number = 2.0*this.z*this.w;\n\t\tvar xx:number = this.x*this.x, yy:number = this.y*this.y, zz:number = this.z*this.z, ww:number = this.w*this.w;\n\n\t\ttarget[0] = xx - yy - zz + ww;\n\t\ttarget[1] = xy2 - zw2;\n\t\ttarget[2] = xz2 + yw2;\n\t\ttarget[4] = xy2 + zw2;\n\t\ttarget[5] = -xx + yy - zz + ww;\n\t\ttarget[6] = yz2 - xw2;\n\t\ttarget[8] = xz2 - yw2;\n\t\ttarget[9] = yz2 + xw2;\n\t\ttarget[10] = -xx - yy + zz + ww;\n\t\ttarget[3] = target[7] = target[11] = 0;\n\n\t\tif (!exclude4thRow) {\n\t\t\ttarget[12] = target[13] = target[14] = 0;\n\t\t\ttarget[15] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Clones the quaternion.\n\t * @return An exact duplicate of the current Quaternion.\n\t */\n\tpublic clone():Quaternion\n\t{\n\t\treturn new Quaternion(this.x, this.y, this.z, this.w);\n\t}\n\n\t/**\n\t * Rotates a point.\n\t * @param vector The Vector3D object to be rotated.\n\t * @param target An optional Vector3D object that will contain the rotated coordinates. If not provided, a new object will be created.\n\t * @return A Vector3D object containing the rotated point.\n\t */\n\tpublic rotatePoint(vector:Vector3D, target:Vector3D = null):Vector3D\n\t{\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number = vector.x, y2:number = vector.y, z2:number = vector.z;\n\n\t\t//target ||= new Vector3D();\n\t\tif (target === null) {\n\n\t\t\ttarget = new Vector3D();\n\n\t\t}\n\n\t\t// p*q'\n\t\tw1 = -this.x*x2 - this.y*y2 - this.z*z2;\n\t\tx1 = this.w*x2 + this.y*z2 - this.z*y2;\n\t\ty1 = this.w*y2 - this.x*z2 + this.z*x2;\n\t\tz1 = this.w*z2 + this.x*y2 - this.y*x2;\n\n\t\ttarget.x = -w1*this.x + x1*this.w - y1*this.z + z1*this.y;\n\t\ttarget.y = -w1*this.y + x1*this.z + y1*this.w - z1*this.x;\n\t\ttarget.z = -w1*this.z - x1*this.y + y1*this.x + z1*this.w;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the data from a quaternion into this instance.\n\t * @param q The quaternion to copy from.\n\t */\n\tpublic copyFrom(q:Quaternion)\n\t{\n\t\tthis.x = q.x;\n\t\tthis.y = q.y;\n\t\tthis.z = q.z;\n\t\tthis.w = q.w;\n\t}\n}\n\nexport default Quaternion;",
    "import Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\n\n/**\n * A Rectangle object is an area defined by its position, as indicated by its\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the Rectangle class are independent of\n * each other; changing the value of one property has no effect on the others.\n * However, the <code>right</code> and <code>bottom</code> properties are\n * integrally related to those four properties. For example, if you change the\n * value of the <code>right</code> property, the value of the\n * <code>width</code> property changes; if you change the <code>bottom</code>\n * property, the value of the <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Rectangle objects:</p>\n *\n * <ul>\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\n * <code>merge()</code>, <code>paletteMap()</code>,\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\n * BitmapData class</li>\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\n * DisplayObject class</li>\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\n * class</li>\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\n * method of the Sprite class</li>\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\n * method of the PrintJob class</li>\n * </ul>\n *\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\n * Rectangle object.</p>\n *\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\n * display object. To draw a rectangular Shape object onscreen, use the\n * <code>drawRect()</code> method of the Graphics class.</p>\n */\nclass Rectangle\n{\n\tprivate _size:Point;\n\tprivate _bottomRight:Point;\n\tprivate _topLeft:Point;\n\n\t/**\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>width</code> properties.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>height</code> properties.\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>x</code> property of a Rectangle object has no\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic x:number;\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>y</code> property of a Rectangle object has no\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic get bottom():number\n\t{\n\t\treturn this.y + this.height;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's bottom-right corner, determined by\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic get bottomRight():Point\n\t{\n\t\tif (this._bottomRight == null)\n\t\t\tthis._bottomRight = new Point();\n\n\t\tthis._bottomRight.x = this.x + this.width;\n\t\tthis._bottomRight.y = this.y + this.height;\n\n\t\treturn this._bottomRight;\n\t}\n\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>left</code> property of a Rectangle object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic get left():number\n\t{\n\t\treturn this.x;\n\t}\n\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic get right():number\n\t{\n\t\treturn this.x + this.width;\n\t}\n\n\t/**\n\t * The size of the Rectangle object, expressed as a Point object with the\n\t * values of the <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic get size():Point\n\t{\n\t\tif (this._size == null)\n\t\t\tthis._size = new Point();\n\n\t\tthis._size.x = this.width;\n\t\tthis._size.y = this.height;\n\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>top</code> property of a Rectangle object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic get top():number\n\t{\n\t\treturn this.y;\n\t}\n\n\t/**\n\t * The location of the Rectangle object's top-left corner, determined by the\n\t * <i>x</i> and <i>y</i> coordinates of the point.\n\t */\n\tpublic get topLeft():Point\n\t{\n\t\tif (this._topLeft == null)\n\t\t\tthis._topLeft = new Point();\n\n\t\tthis._topLeft.x = this.x;\n\t\tthis._topLeft.y = this.y;\n\n\t\treturn this._topLeft;\n\t}\n\n\t/**\n\t * Creates a new Rectangle object with the top-left corner specified by the\n\t * <code>x</code> and <code>y</code> parameters and with the specified\n\t * <code>width</code> and <code>height</code> parameters. If you call this\n\t * public without parameters, a rectangle with <code>x</code>,\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\n\t * to 0 is created.\n\t *\n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param width  The width of the rectangle, in pixels.\n\t * @param height The height of the rectangle, in pixels.\n\t */\n\tconstructor(x:number = 0, y:number = 0, width:number = 0, height:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\t/**\n\t * Returns a new Rectangle object with the same values for the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties as the original Rectangle object.\n\t *\n\t * @return A new Rectangle object with the same values for the\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\n\t *         <code>height</code> properties as the original Rectangle object.\n\t */\n\tpublic clone():Rectangle\n\t{\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object.\n\t *\n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\treturn (this.x <= x && this.x + this.width >= x && this.y <= y && this.y + this.height >= y);\n\t}\n\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object. This method is similar to the\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\n\t * object as a parameter.\n\t *\n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\n\t *              coordinates.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic containsPoint(point:Point):boolean\n\t{\n\t\treturn (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n\t}\n\n\t/**\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\n\t * parameter is contained within this Rectangle object. A Rectangle object is\n\t * said to contain another if the second Rectangle object falls entirely\n\t * within the boundaries of the first.\n\t *\n\t * @param rect The Rectangle object being checked.\n\t * @return A value of <code>true</code> if the Rectangle object that you\n\t *         specify is contained by this Rectangle object; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic containsRect(rect:Rectangle):boolean\n\t{\n\t\treturn (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\n\t}\n\n\t/**\n\t * Copies all of rectangle data from the source Rectangle object into the\n\t * calling Rectangle object.\n\t *\n\t * @param sourceRect The Rectangle object from which to copy the data.\n\t */\n\tpublic copyFrom(sourceRect:Rectangle)\n\t{\n\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Rectangle object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of an object against the same properties of\n\t * this Rectangle object.\n\t *\n\t * @param toCompare The rectangle to compare to this Rectangle object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\n\t *         and <code>height</code> properties as this Rectangle object;\n\t *         otherwise <code>false</code>.\n\t */\n\tpublic equals(toCompare:Rectangle):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height)\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object by the specified amounts, in\n\t * pixels. The center point of the Rectangle object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, and to\n\t * the top and the bottom by the <code>dy</code> value.\n\t *\n\t * @param dx The value to be added to the left and the right of the Rectangle\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the rectangle:\n\t * @param dy The value to be added to the top and the bottom of the\n\t *           Rectangle. The following equation is used to calculate the new\n\t *           height and position of the rectangle:\n\t */\n\tpublic inflate(dx:number, dy:number)\n\t{\n\t\tthis.x -= dx/2;\n\t\tthis.y -= dy/2;\n\t\tthis.width += dx/2;\n\t\tthis.height += dy/2;\n\t}\n\n\t/**\n\t * Increases the size of the Rectangle object. This method is similar to the\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t *\n\t * @param point The <code>x</code> property of this Point object is used to\n\t *              increase the horizontal dimension of the Rectangle object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Rectangle object.\n\t */\n\tpublic inflatePoint(point:Point)\n\t{\n\t\tthis.x -= point.x/2;\n\t\tthis.y -= point.y/2;\n\t\tthis.width += point.x/2;\n\t\tthis.height += point.y/2;\n\t}\n\n\t/**\n\t * If the Rectangle object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object, returns the area of\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\n\t * this method returns an empty Rectangle object with its properties set to\n\t * 0.\n\t *\n\t * @param toIntersect The Rectangle object to compare against to see if it\n\t *                    intersects with this Rectangle object.\n\t * @return A Rectangle object that equals the area of intersection. If the\n\t *         rectangles do not intersect, this method returns an empty\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\n\t *         properties set to 0.\n\t */\n\tpublic intersection(toIntersect:Rectangle):Rectangle\n\t{\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar i:Rectangle = new Rectangle();\n\n\t\t\tif (this.x > toIntersect.x) {\n\t\t\t\ti.x = this.x;\n\t\t\t\ti.width = toIntersect.x - this.x + toIntersect.width;\n\n\t\t\t\tif (i.width > this.width)\n\t\t\t\t\ti.width = this.width;\n\t\t\t} else {\n\t\t\t\ti.x = toIntersect.x;\n\t\t\t\ti.width = this.x - toIntersect.x + this.width;\n\n\t\t\t\tif (i.width > toIntersect.width)\n\t\t\t\t\ti.width = toIntersect.width;\n\t\t\t}\n\n\t\t\tif (this.y > toIntersect.y) {\n\t\t\t\ti.y = this.y;\n\t\t\t\ti.height = toIntersect.y - this.y + toIntersect.height;\n\n\t\t\t\tif (i.height > this.height)\n\t\t\t\t\ti.height = this.height;\n\t\t\t} else {\n\t\t\t\ti.y = toIntersect.y;\n\t\t\t\ti.height = this.y - toIntersect.y + this.height;\n\n\t\t\t\tif (i.height > toIntersect.height)\n\t\t\t\t\ti.height = toIntersect.height;\n\t\t\t}\n\n\t\t\treturn i;\n\t\t}\n\n\t\treturn new Rectangle();\n\t}\n\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of the specified Rectangle object to see if\n\t * it intersects with this Rectangle object.\n\t *\n\t * @param toIntersect The Rectangle object to compare against this Rectangle\n\t *                    object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Rectangle object; otherwise <code>false</code>.\n\t */\n\tpublic intersects(toIntersect:Rectangle):boolean\n\t{\n\t\treturn (this.x + this.width > toIntersect.x && this.x < toIntersect.x + toIntersect.width && this.y + this.height > toIntersect.y && this.y < toIntersect.y + toIntersect.height);\n\t}\n\n\t/**\n\t * Determines whether or not this Rectangle object is empty.\n\t *\n\t * @return A value of <code>true</code> if the Rectangle object's width or\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic isEmpty():boolean\n\t{\n\t\treturn (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object, as determined by its\n\t * top-left corner, by the specified amounts.\n\t *\n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\n\t */\n\tpublic offset(dx:number, dy:number)\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\t/**\n\t * Adjusts the location of the Rectangle object using a Point object as a\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\n\t * method, except that it takes a Point object as a parameter.\n\t *\n\t * @param point A Point object to use to offset this Rectangle object.\n\t */\n\tpublic offsetPoint(point:Point)\n\t{\n\t\tthis.x += point.x;\n\t\tthis.y += point.y;\n\t}\n\n\t/**\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n\t * empty if its width or height is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\n\t *\n\t */\n\tpublic setEmpty()\n\t{\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t}\n\n\t/**\n\t * Sets the members of Rectangle to the specified values\n\t *\n\t * @param xa      The <i>x</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param ya      The <i>y</i> coordinate of the top-left corner of the\n\t *                rectangle.\n\t * @param widtha  The width of the rectangle, in pixels.\n\t * @param heighta The height of the rectangle, in pixels.\n\t */\n\tpublic setTo(xa:number, ya:number, widtha:number, heighta:number)\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.width = widtha;\n\t\tthis.height = heighta;\n\t}\n\n\t/**\n\t * Builds and returns a string that lists the horizontal and vertical\n\t * positions and the width and height of the Rectangle object.\n\t *\n\t * @return A string listing the value of each of the following properties of\n\t *         the Rectangle object: <code>x</code>, <code>y</code>,\n\t *         <code>width</code>, and <code>height</code>.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Rectangle] (x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n\t}\n\n\t/**\n\t * Adds two rectangles together to create a new Rectangle object, by filling\n\t * in the horizontal and vertical space between the two rectangles.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\n\t * <code>0</code> as the height or width value, such as: <code>var\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\n\t *\n\t * @param toUnion A Rectangle object to add to this Rectangle object.\n\t * @return A new Rectangle object that is the union of the two rectangles.\n\t */\n\tpublic union(toUnion:Rectangle):Rectangle\n\t{\n\t\tvar u:Rectangle = new Rectangle();\n\n\t\tif (this.x < toUnion.x) {\n\t\t\tu.x = this.x;\n\t\t\tu.width = toUnion.x - this.x + toUnion.width;\n\n\t\t\tif (u.width < this.width)\n\t\t\t\tu.width = this.width;\n\t\t} else {\n\t\t\tu.x = toUnion.x;\n\t\t\tu.width = this.x - toUnion.x + this.width;\n\n\t\t\tif (u.width < toUnion.width)\n\t\t\t\tu.width = toUnion.width;\n\t\t}\n\n\t\tif (this.y < toUnion.y) {\n\t\t\tu.y = this.y;\n\t\t\tu.height = toUnion.y - this.y + toUnion.height;\n\n\t\t\tif (u.height < this.height)\n\t\t\t\tu.height = this.height;\n\t\t} else {\n\t\t\tu.y = toUnion.y;\n\t\t\tu.height = this.y - toUnion.y + this.height;\n\n\t\t\tif (u.height < toUnion.height)\n\t\t\t\tu.height = toUnion.height;\n\t\t}\n\n\t\treturn u;\n\t}\n}\n\nexport default Rectangle;",
    "import PlaneClassification\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\nimport Vector3D\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nclass Sphere\n{\n\t/**\n\t *\n\t */\n\tpublic x:number;\n\n\t/**\n\t *\n\t */\n\tpublic y:number;\n\n\t/**\n\t *\n\t */\n\tpublic z:number;\n\n\t/**\n\t *\n\t */\n\tpublic radius:number;\n\n\t/**\n\t * Create a Sphere with ABCD coefficients\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, radius:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.radius = radius;\n\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif (this.containsPoint(position))\n\t\t\treturn 0;\n\n\t\tvar px:number = position.x - this.x, py:number = position.y - this.y, pz:number = position.z - this.z;\n\t\tvar vx:number = direction.x, vy:number = direction.y, vz:number = direction.z;\n\t\tvar rayEntryDistance:number;\n\n\t\tvar a:number = vx*vx + vy*vy + vz*vz;\n\t\tvar b:number = 2*( px*vx + py*vy + pz*vz );\n\t\tvar c:number = px*px + py*py + pz*pz - this.radius*this.radius;\n\t\tvar det:number = b*b - 4*a*c;\n\n\t\tif (det >= 0) { // ray goes through sphere\n\t\t\tvar sqrtDet:number = Math.sqrt(det);\n\t\t\trayEntryDistance = ( -b - sqrtDet )/( 2*a );\n\t\t\tif (rayEntryDistance >= 0) {\n\t\t\t\ttargetNormal.x = px + rayEntryDistance*vx;\n\t\t\t\ttargetNormal.y = py + rayEntryDistance*vy;\n\t\t\t\ttargetNormal.z = pz + rayEntryDistance*vz;\n\t\t\t\ttargetNormal.normalize();\n\n\t\t\t\treturn rayEntryDistance;\n\t\t\t}\n\t\t}\n\n\t\t// ray misses sphere\n\t\treturn -1;\n\t}\n\n\tpublic containsPoint(position:Vector3D):boolean\n\t{\n\t\tvar px:number = position.x - this.x;\n\t\tvar py:number = position.y - this.y;\n\t\tvar pz:number = position.z - this.z;\n\t\tvar distance:number = Math.sqrt(px*px + py*py + pz*pz);\n\t\treturn distance <= this.radius;\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"Sphere [x:\" + this.x + \", y:\" + this.y + \", z:\" + this.z + \", radius:\" + this.radius + \"]\";\n\t}\n}\n\nexport default Sphere;",
    "/**\n * The Vector3D class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n *\n * <p>The Vector3D class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n *\n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nclass Vector3D\n{\n\t/**\n\t * The x axis defined as a Vector3D object with coordinates (1,0,0).\n\t */\n\tpublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\n\n\t/**\n\t * The y axis defined as a Vector3D object with coordinates (0,1,0).\n\t */\n\tpublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\n\n\t/**\n\t * The z axis defined as a Vector3D object with coordinates (0,0,1).\n\t */\n\tpublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\n\n\t/**\n\t * The first element of a Vector3D object, such as the x coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic x:number;\n\n\t/*\n\t *The second element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic y:number;\n\n\t/**\n\t * The third element of a Vector3D object, such as the y coordinate of\n\t * a point in the three-dimensional space. The default value is 0.\n\t */\n\tpublic z:number;\n\n\t/**\n\t * TThe fourth element of a Vector3D object (in addition to the x, y,\n\t * and z properties) can hold data such as the angle of rotation. The\n\t * default value is 0.\n\t *\n\t * <p>Quaternion notation employs an angle as the fourth element in\n\t * its calculation of three-dimensional rotation. The w property can\n\t * be used to define the angle of rotation about the Vector3D object.\n\t * The combination of the rotation angle and the coordinates (x,y,z)\n\t * determines the display object's orientation.</p>\n\t *\n\t * <p>In addition, the w property can be used as a perspective warp\n\t * factor for a projected three-dimensional position or as a projection\n\t * transform value in representing a three-dimensional coordinate\n\t * projected into the two-dimensional space. For example, you can\n\t * create a projection matrix using the <code>Matrix3D.rawData</code>\n\t * property, that, when applied to a Vector3D object, produces a\n\t * transform value in the Vector3D object's fourth element (the w\n\t * property). Dividing the Vector3D object's other elements by the\n\t * transform value then produces a projected Vector3D object. You can\n\t * use the <code>Vector3D.project()</code> method to divide the first\n\t * three elements of a Vector3D object by its fourth element.</p>\n\t */\n\tpublic w:number;\n\n\t/**\n\t * The length, magnitude, of the current Vector3D object from the\n\t * origin (0,0,0) to the object's x, y, and z coordinates. The w\n\t * property is ignored. A unit vector has a length or magnitude of\n\t * one.\n\t */\n\tpublic get length():number\n\t{\n\t\treturn Math.sqrt(this.lengthSquared);\n\t}\n\n\t/**\n\t * The square of the length of the current Vector3D object, calculated\n\t * using the x, y, and z properties. The w property is ignored. Use the\n\t * <code>lengthSquared()</code> method whenever possible instead of the\n\t * slower <code>Math.sqrt()</code> method call of the\n\t * <code>Vector3D.length()</code> method.\n\t */\n\tpublic get lengthSquared():number\n\t{\n\t\treturn this.x*this.x + this.y*this.y + this.z*this.z;\n\t}\n\n\t/**\n\t * Creates an instance of a Vector3D object. If you do not specify a\n\t * parameter for the constructor, a Vector3D object is created with\n\t * the elements (0,0,0,0).\n\t *\n\t * @param x The first element, such as the x coordinate.\n\t * @param y The second element, such as the y coordinate.\n\t * @param z The third element, such as the z coordinate.\n\t * @param w An optional element for additional data such as the angle\n\t *          of rotation.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\n\t/**\n\t * Adds the value of the x, y, and z elements of the current Vector3D\n\t * object to the values of the x, y, and z elements of another Vector3D\n\t * object. The <code>add()</code> method does not change the current\n\t * Vector3D object. Instead, it returns a new Vector3D object with\n\t * the new values.\n\t *\n\t * <p>The result of adding two vectors together is a resultant vector.\n\t * One way to visualize the result is by drawing a vector from the\n\t * origin or tail of the first vector to the end or head of the second\n\t * vector. The resultant vector is the distance between the origin\n\t * point of the first vector and the end point of the second vector.\n\t * </p>\n\t */\n\tpublic add(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\n\t}\n\n\t/**\n\t * Returns the angle in radians between two vectors. The returned angle\n\t * is the smallest radian the first Vector3D object rotates until it\n\t * aligns with the second Vector3D object.\n\t *\n\t * <p>The <code>angleBetween()</code> method is a static method. You\n\t * can use it directly as a method of the Vector3D class.</p>\n\t *\n\t * <p>To convert a degree to a radian, you can use the following\n\t * formula:</p>\n\t *\n\t * <p><code>radian = Math.PI/180 * degree</code></p>\n\t *\n\t * @param a The first Vector3D object.\n\t * @param b The second Vector3D object.\n\t * @returns The angle between two Vector3D objects.\n\t */\n\tpublic static angleBetween(a:Vector3D, b:Vector3D):number\n\t{\n\t\treturn Math.acos(a.dotProduct(b)/(a.length*b.length));\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is an exact copy of the current\n\t * Vector3D object.\n\t *\n\t * @returns A new Vector3D object that is a copy of the current\n\t * Vector3D object.\n\t */\n\tpublic clone():Vector3D\n\t{\n\t\treturn new Vector3D(this.x, this.y, this.z, this.w);\n\t}\n\n\tpublic static combine(a:Vector3D, b:Vector3D, ascl:number, bscl:number):Vector3D\n\t{\n\t\treturn new Vector3D(a.x*ascl + b.x*bscl, a.y*ascl + b.y*bscl, a.z*ascl + b.z*bscl);\n\t}\n\n\t/**\n\t * Copies all of vector data from the source Vector3D object into the\n\t * calling Vector3D object.\n\t *\n\t * @param src The Vector3D object from which to copy the data.\n\t */\n\tpublic copyFrom(src:Vector3D):void\n\t{\n\t\tthis.x = src.x;\n\t\tthis.y = src.y;\n\t\tthis.z = src.z;\n\t\tthis.w = src.w;\n\t}\n\n\t/**\n\t * Returns a new Vector3D object that is perpendicular (at a right\n\t * angle) to the current Vector3D and another Vector3D object. If the\n\t * returned Vector3D object's coordinates are (0,0,0), then the two\n\t * Vector3D objects are parallel to each other.\n\t *\n\t * <p>You can use the normalized cross product of two vertices of a\n\t * polygon surface with the normalized vector of the camera or eye\n\t * viewpoint to get a dot product. The value of the dot product can\n\t * identify whether a surface of a three-dimensional object is hidden\n\t * from the viewpoint.</p>\n\t *\n\t * @param a A second Vector3D object.\n\t * @returns A new Vector3D object that is perpendicular to the current\n\t *          Vector3D object and the Vector3D object specified as the\n\t *          parameter.\n\t */\n\tpublic crossProduct(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\n\t}\n\n\t/**\n\t * Decrements the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of\n\t * specified Vector3D object. Unlike the\n\t * <code>Vector3D.subtract()</code> method, the\n\t * <code>decrementBy()</code> method changes the current Vector3D\n\t * object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object containing the values to subtract from\n\t *          the current Vector3D object.\n\t */\n\tpublic decrementBy(a:Vector3D)\n\t{\n\t\tthis.x -= a.x;\n\t\tthis.y -= a.y;\n\t\tthis.z -= a.z;\n\t}\n\n\t/**\n\t * Returns the distance between two Vector3D objects. The\n\t * <code>distance()</code> method is a static method. You can use it\n\t * directly as a method of the Vector3D class to get the Euclidean\n\t * distance between two three-dimensional points.\n\t *\n\t * @param pt1 A Vector3D object as the first three-dimensional point.\n\t * @param pt2 A Vector3D object as the second three-dimensional point.\n\t * @returns The distance between two Vector3D objects.\n\t */\n\tstatic distance(pt1:Vector3D, pt2:Vector3D):number\n\t{\n\t\tvar x:number = (pt1.x - pt2.x);\n\t\tvar y:number = (pt1.y - pt2.y);\n\t\tvar z:number = (pt1.z - pt2.z);\n\t\treturn Math.sqrt(x*x + y*y + z*z);\n\t}\n\n\t/**\n\t * If the current Vector3D object and the one specified as the\n\t * parameter are unit vertices, this method returns the cosine of the\n\t * angle between the two vertices. Unit vertices are vertices that\n\t * point to the same direction but their length is one. They remove the\n\t * length of the vector as a factor in the result. You can use the\n\t * <code>normalize()</code> method to convert a vector to a unit\n\t * vector.\n\t *\n\t * <p>The <code>dotProduct()</code> method finds the angle between two\n\t * vertices. It is also used in backface culling or lighting\n\t * calculations. Backface culling is a procedure for determining which\n\t * surfaces are hidden from the viewpoint. You can use the normalized\n\t * vertices from the camera, or eye, viewpoint and the cross product of\n\t * the vertices of a polygon surface to get the dot product. If the dot\n\t * product is less than zero, then the surface is facing the camera or\n\t * the viewer. If the two unit vertices are perpendicular to each\n\t * other, they are orthogonal and the dot product is zero. If the two\n\t * vertices are parallel to each other, the dot product is one.</p>\n\t *\n\t * @param a The second Vector3D object.\n\t * @returns A scalar which is the dot product of the current Vector3D\n\t *          object and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#crossProduct()\n\t * @see away.geom.Vector3D#normalize()\n\t */\n\tpublic dotProduct(a:Vector3D):number\n\t{\n\t\treturn this.x*a.x + this.y*a.y + this.z*a.z;\n\t}\n\n\t/**\n\t * Determines whether two Vector3D objects are equal by comparing the\n\t * x, y, and z elements of the current Vector3D object with a\n\t * specified Vector3D object. If the values of these elements are the\n\t * same, the two Vector3D objects are equal. If the second optional\n\t * parameter is set to true, all four elements of the Vector3D objects,\n\t * including the w property, are compared.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is equal\n\t *          to the current Vector3D object; false if it is not equal.\n\t */\n\tpublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\n\t{\n\t\treturn (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\n\t}\n\n\t/**\n\t * Increments the value of the x, y, and z elements of the current\n\t * Vector3D object by the values of the x, y, and z elements of a\n\t * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n\t * method, the <code>incrementBy()</code> method changes the current\n\t * Vector3D object and does not return a new Vector3D object.\n\t *\n\t * @param a The Vector3D object to be added to the current Vector3D\n\t *          object.\n\t */\n\tpublic incrementBy(a:Vector3D)\n\t{\n\t\tthis.x += a.x;\n\t\tthis.y += a.y;\n\t\tthis.z += a.z;\n\t}\n\n\t/**\n\t * Compares the elements of the current Vector3D object with the\n\t * elements of a specified Vector3D object to determine whether they\n\t * are nearly equal. The two Vector3D objects are nearly equal if the\n\t * value of all the elements of the two vertices are equal, or the\n\t * result of the comparison is within the tolerance range. The\n\t * difference between two elements must be less than the number\n\t * specified as the tolerance parameter. If the third optional\n\t * parameter is set to <code>true</code>, all four elements of the\n\t * Vector3D objects, including the <code>w</code> property, are\n\t * compared. Otherwise, only the x, y, and z elements are included in\n\t * the comparison.\n\t */\n\n\t/**\n\t *\n\t * @param toCompare The Vector3D object to be compared with the current\n\t *                  Vector3D object.\n\t * @param tolerance A number determining the tolerance factor. If the\n\t *                  difference between the values of the Vector3D\n\t *                  element specified in the toCompare parameter and\n\t *                  the current Vector3D element is less than the\n\t *                  tolerance number, the two values are considered\n\t *                  nearly equal.\n\t * @param allFour   An optional parameter that specifies whether the w\n\t *                  property of the Vector3D objects is used in the\n\t *                  comparison.\n\t * @returns A value of true if the specified Vector3D object is nearly\n\t *          equal to the current Vector3D object; false if it is not\n\t *          equal.\n\t *\n\t * @see away.geom.Vector3D#equals()\n\t */\n\tpublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\n\t{\n\t\treturn ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n\t}\n\n\t/**\n\t * Sets the current Vector3D object to its inverse. The inverse object\n\t * is also considered the opposite of the original object. The value of\n\t * the x, y, and z properties of the current Vector3D object is changed\n\t * to -x, -y, and -z.\n\t */\n\tpublic negate():void\n\t{\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t\tthis.z = -this.z;\n\t}\n\n\t/**\n\t * Converts a Vector3D object to a unit vector by dividing the first\n\t * three elements (x, y, z) by the length of the vector. Unit vertices\n\t * are vertices that have a direction but their length is one. They\n\t * simplify vector calculations by removing length as a factor.\n\t */\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t *\n\t * @param thickness The scaling value. For example, if the current\n\t *                  Vector3D object is (0,3,4), and you normalize it to\n\t *                  1, the point returned is at(0,0.6,0.8).\n\t */\n\tpublic normalize(thickness:number = 1)\n\t{\n\t\tif (this.length != 0) {\n\t\t\tvar invLength = thickness/this.length;\n\t\t\tthis.x *= invLength;\n\t\t\tthis.y *= invLength;\n\t\t\tthis.z *= invLength;\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Divides the value of the <code>x</code>, <code>y</code>, and\n\t * <code>z</code> properties of the current Vector3D object by the\n\t * value of its <code>w</code> property.\n\t *\n\t * <p>If the current Vector3D object is the result of multiplying a\n\t * Vector3D object by a projection Matrix3D object, the w property can\n\t * hold the transform value. The <code>project()</code> method then can\n\t * complete the projection by dividing the elements by the\n\t * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n\t * property to create a projection Matrix3D object.</p>\n\t */\n\tpublic project():void\n\t{\n\t\tthis.x /= this.w;\n\t\tthis.y /= this.w;\n\t\tthis.z /= this.w;\n\t}\n\n\t/**\n\t * Scales the current Vector3D object by a scalar, a magnitude. The\n\t * Vector3D object's x, y, and z elements are multiplied by the scalar\n\t * number specified in the parameter. For example, if the vector is\n\t * scaled by ten, the result is a vector that is ten times longer. The\n\t * scalar can also change the direction of the vector. Multiplying the\n\t * vector by a negative number reverses its direction.\n\t *\n\t * @param s A multiplier (scalar) used to scale a Vector3D object.\n\n\t */\n\tpublic scaleBy(s:number):void\n\t{\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\t\tthis.z *= s;\n\t}\n\n\t/**\n\t * Sets the members of Vector3D to the specified values\n\t *\n\t * @param xa The first element, such as the x coordinate.\n\t * @param ya The second element, such as the y coordinate.\n\t * @param za The third element, such as the z coordinate.\n\t */\n\tpublic setTo(xa:number, ya:number, za:number):void\n\t{\n\t\tthis.x = xa;\n\t\tthis.y = ya;\n\t\tthis.z = za;\n\t}\n\n\t/**\n\t * Subtracts the value of the x, y, and z elements of the current\n\t * Vector3D object from the values of the x, y, and z elements of\n\t * another Vector3D object. The <code>subtract()</code> method does not\n\t * change the current Vector3D object. Instead, this method returns a\n\t * new Vector3D object with the new values.\n\t *\n\t * @param a The Vector3D object to be subtracted from the current\n\t *          Vector3D object.\n\t * @returns A new Vector3D object that is the difference between the\n\t *          current Vector3D and the specified Vector3D object.\n\t *\n\t * @see away.geom.Vector3D#decrementBy()\n\t */\n\tpublic subtract(a:Vector3D):Vector3D\n\t{\n\t\treturn new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n\t}\n\n\t/**\n\t * Returns a string representation of the current Vector3D object. The\n\t * string contains the values of the x, y, and z properties.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n\t}\n}\n\nexport default Vector3D;",
    "export {default as Box}\t\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nexport {default as ColorTransform}\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nexport {default as MathConsts}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nexport {default as Matrix}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nexport {default as Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nexport {default as Matrix3DUtils}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nexport {default as Orientation3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Orientation3D\";\nexport {default as Plane3D}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nexport {default as PlaneClassification}\t\t\t\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\nexport {default as Point}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nexport {default as PoissonLookup}\t\t\t\t\tfrom \"awayjs-core/lib/geom/PoissonLookup\";\nexport {default as Quaternion}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nexport {default as Rectangle}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nexport {default as Sphere}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nexport {default as Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";",
    "import Image2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport BlendMode\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport ColorTransform\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Matrix\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Rectangle\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport ByteArray\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\nimport ColorUtils\t\t\t\tfrom \"awayjs-core/lib/utils/ColorUtils\";\nimport BitmapImageUtils\t\t\tfrom \"awayjs-core/lib/utils/BitmapImageUtils\";\nimport IImageCanvas\t\t\t\tfrom \"awayjs-core/lib/image/IImageCanvas\";\nimport CPUCanvas\t\t\t\tfrom \"awayjs-core/lib/image/CPUCanvas\";\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[image BitmapImage2D]\";\n\n\tprivate _imageCanvas:IImageCanvas;\n\tprivate _context:CanvasRenderingContext2D;\n\tprivate _imageData:ImageData;\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImage2D.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(width:number, height:number, transparent:boolean = true, fillColor:number = null, powerOfTwo:boolean = true)\n\t{\n\t\tsuper(width, height, powerOfTwo);\n\n\t\tthis._transparent = transparent;\n\t\tif(document) {\n\t\t\tthis._imageCanvas = <IImageCanvas> document.createElement(\"canvas\");\n\t\t}else {\n\t\t\tthis._imageCanvas = new CPUCanvas();\n\t\t}\n\t\tthis._imageCanvas.width = width;\n\t\tthis._imageCanvas.height = height;\n\t\tthis._context = this._imageCanvas.getContext(\"2d\");\n\n\t\tif (fillColor != null)\n\t\t\tthis.fillRect(this._rect, fillColor);\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImage2D\n\t{\n\t\tvar t:BitmapImage2D = new BitmapImage2D(this.width, this.height, this.transparent, null, this.powerOfTwo);\n\t\tt.draw(this);\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar data:Uint8ClampedArray = this._imageData.data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this.width)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar sourceData:Uint8ClampedArray = sourceBitmap.getImageData().data;\n\t\tvar destData:Uint8ClampedArray = this._imageData.data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this.width)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:HTMLElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(source:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context, source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._context = null;\n\t\tthis._imageCanvas = null;\n\t\tthis._imageData = null;\n\t\tthis._rect = null;\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (source instanceof BitmapImage2D && source.getCanvas()){\n\t\t\tsource = source.getCanvas();\n\t\t}\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context, source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\n\t\t\tif (this._imageData)\n\t\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context, rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context.getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\t\tr = this._imageData.data[index + 0];\n\t\t\tg = this._imageData.data[index + 1];\n\t\t\tb = this._imageData.data[index + 2];\n\t\t\ta = this._imageData.data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageData.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = argb[1];\n\t\t\t\tthis._imageData.data[index + 1] = argb[2];\n\t\t\t\tthis._imageData.data[index + 2] = argb[3];\n\t\t\t\tthis._imageData.data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tvar index:number = (x + y*this._imageData.width)*4;\n\n\t\tthis._imageData.data[index + 0] = argb[1];\n\t\tthis._imageData.data[index + 1] = argb[2];\n\t\tthis._imageData.data[index + 2] = argb[3];\n\t\tthis._imageData.data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._imageData.width)*4;\n\n\t\t\t\tthis._imageData.data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData.data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tthis._context.putImageData(this._imageData, 0, 0); // at coords 0,0\n\t\tthis._imageData = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\n\t\treturn this._imageData;\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn <HTMLCanvasElement> this._imageCanvas;\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tif (this._locked)\n\t\t\tthis._context.putImageData(this._imageData, 0, 0);\n\n\t\tif(this._imageCanvas) {\n\t\t\tthis._imageCanvas.width = width;\n\t\t\tthis._imageCanvas.height = height;\n\t\t}\n\t\t\n\t\tsuper._setSize(width, height);\n\n\t\tif (this._locked)\n\t\t\tthis._imageData = this._context.getImageData(0, 0, this._rect.width, this._rect.height);\n\t}\n}\n\nexport default BitmapImage2D;",
    "class BitmapImageChannel\n{\n\tpublic static ALPHA:number /*uint*/ = 8;\n\tpublic static BLUE:number /*uint*/ = 4;\n\tpublic static GREEN:number /*uint*/ = 2;\n\tpublic static RED:number /*uint*/ = 1;\n}\n\nexport default BitmapImageChannel;",
    "import BitmapImage2D\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport ImageCube\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\nimport BlendMode\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport ColorTransform\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Matrix\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Rectangle\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport ByteArray\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\nimport ColorUtils\t\t\t\tfrom \"awayjs-core/lib/utils/ColorUtils\";\nimport BitmapImageUtils\t\t\tfrom \"awayjs-core/lib/utils/BitmapImageUtils\";\n\n/**\n * The BitmapImage2D class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapImage2D class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapImage2D for a bitmap\n * image that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of flash. By manipulating a\n * BitmapImage2D object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapImage2D class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapImage2D object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapImage2D object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapImage2D.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapImage2DChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n *   <li><code>BitmapImage2DChannel.RED</code></li>\n *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapImage2D objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapImage2D object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n *\n * <p>You can also use a BitmapImage2D object to perform batch tile rendering\n * using the <code>flash.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapImage2D object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapImage2D object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation\n * is 2,880 pixels in height and 2,880 in width.</p>\n */\nclass BitmapImageCube extends ImageCube\n{\n\tpublic static assetType:string = \"[image BitmapImageCube]\";\n\n\tpublic static posX:number = 0;\n\tpublic static negX:number = 1;\n\tpublic static posY:number = 2;\n\tpublic static negY:number = 3;\n\tpublic static posZ:number = 4;\n\tpublic static negZ:number = 5;\n\n\tprivate _imageCanvas:Array<HTMLCanvasElement> = new Array<HTMLCanvasElement>(6);\n\tprivate _context:Array<CanvasRenderingContext2D> = new Array<CanvasRenderingContext2D>(6);\n\tprivate _imageData:Array<ImageData> = new Array<ImageData>(6);\n\tprivate _transparent:boolean;\n\tprivate _locked:boolean = false;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BitmapImageCube.assetType;\n\t}\n\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapImage2D object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapImage2D object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic get transparent():boolean\n\t{\n\t\treturn this._transparent;\n\t}\n\n\tpublic set transparent(value:boolean)\n\t{\n\t\tthis._transparent = value;\n\t}\n\n\t/**\n\t * Creates a BitmapImage2D object with a specified width and height. If you\n\t * specify a value for the <code>fillColor</code> parameter, every pixel in\n\t * the bitmap is set to that color.\n\t *\n\t * <p>By default, the bitmap is created as transparent, unless you pass\n\t * the value <code>false</code> for the transparent parameter. After you\n\t * create an opaque bitmap, you cannot change it to a transparent bitmap.\n\t * Every pixel in an opaque bitmap uses only 24 bits of color channel\n\t * information. If you define the bitmap as transparent, every pixel uses 32\n\t * bits of color channel information, including an alpha transparency\n\t * channel.</p>\n\t *\n\t * @param width       The width of the bitmap image in pixels.\n\t * @param height      The height of the bitmap image in pixels.\n\t * @param transparent Specifies whether the bitmap image supports per-pixel\n\t *                    transparency. The default value is <code>true</code>\n\t *                    (transparent). To create a fully transparent bitmap,\n\t *                    set the value of the <code>transparent</code>\n\t *                    parameter to <code>true</code> and the value of the\n\t *                    <code>fillColor</code> parameter to 0x00000000(or to\n\t *                    0). Setting the <code>transparent</code> property to\n\t *                    <code>false</code> can result in minor improvements\n\t *                    in rendering performance.\n\t * @param fillColor   A 32-bit ARGB color value that you use to fill the\n\t *                    bitmap image area. The default value is\n\t *                    0xFFFFFFFF(solid white).\n\t */\n\tconstructor(size:number, transparent:boolean = true, fillColor:number = null)\n\t{\n\t\tsuper(size);\n\n\t\tthis._transparent = transparent;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._imageCanvas[i] = <HTMLCanvasElement> document.createElement(\"canvas\");\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\t\t\tthis._context[i] = this._imageCanvas[i].getContext(\"2d\");\n\n\t\t\tif (fillColor != null)\n\t\t\t\tthis.fillRect(i, new Rectangle(0, 0, size, size), fillColor);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new BitmapImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new BitmapImage2D object that is identical to the original.\n\t */\n\tpublic clone():BitmapImageCube\n\t{\n\t\tvar t:BitmapImageCube = new BitmapImageCube(this._size, this.transparent);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tt.draw(i, this.getCanvas(i));\n\t\t}\n\t\treturn t;\n\t}\n\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a\n\t * <code>ColorTransform</code> object. If the rectangle matches the\n\t * boundaries of the bitmap image, this method transforms the color values of\n\t * the entire image.\n\t *\n\t * @param rect           A Rectangle object that defines the area of the\n\t *                       image in which the ColorTransform object is applied.\n\t * @param colorTransform A ColorTransform object that describes the color\n\t *                       transformation values to apply.\n\t */\n\tpublic colorTransform(side:number, rect:Rectangle, colorTransform:ColorTransform)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar data:Uint8ClampedArray = this._imageData[side].data;\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tdata[index] = data[index]*colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[index + 1] = data[index + 1]*colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[index + 2] = data[index + 2]*colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[index + 3] = data[index + 3]*colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Transfers data from one channel of another BitmapImage2D object or the\n\t * current BitmapImage2D object into a channel of the current BitmapImage2D object.\n\t * All of the data in the other channels in the destination BitmapImage2D object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapImage2DChannel.RED</code></li>\n\t *   <li><code>BitmapImage2DChannel.GREEN</code></li>\n\t *   <li><code>BitmapImage2DChannel.BLUE</code></li>\n\t *   <li><code>BitmapImage2DChannel.ALPHA</code></li>\n\t * </ul>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image to use. The source image\n\t *                         can be a different BitmapImage2D object or it can\n\t *                         refer to the current BitmapImage2D object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapImage2D object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapImage2DChannel class\n\t *                        (<code>BitmapImage2DChannel.RED</code>,\n\t *                         <code>BitmapImage2DChannel.BLUE</code>,\n\t *                         <code>BitmapImage2DChannel.GREEN</code>,\n\t *                         <code>BitmapImage2DChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect or destPoint are null.\n\t */\n\tpublic copyChannel(side:number, sourceBitmap:BitmapImage2D, sourceRect:Rectangle, destPoint:Point, sourceChannel:number, destChannel:number)\n\t{\n\t\tvar imageData:ImageData = sourceBitmap.getImageData();\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar sourceData:Uint8ClampedArray = sourceBitmap.getImageData().data;\n\t\tvar destData:Uint8ClampedArray = this._imageData[side].data;\n\n\t\tvar sourceOffset:number = Math.round(Math.log(sourceChannel)/Math.log(2));\n\t\tvar destOffset:number = Math.round(Math.log(destChannel)/Math.log(2));\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, sourceIndex:number /*uint*/, destIndex:number /*uint*/;\n\t\tfor (i = 0; i < sourceRect.width; ++i) {\n\t\t\tfor (j = 0; j < sourceRect.height; ++j) {\n\t\t\t\tsourceIndex = (i + sourceRect.x + (j + sourceRect.y)*sourceBitmap.width)*4;\n\t\t\t\tdestIndex = (i + destPoint.x + (j + destPoint.y)*this._size)*4;\n\n\t\t\t\tdestData[destIndex + destOffset] = sourceData[sourceIndex + sourceOffset];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapImage2D object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t *\n\t * @param sourceBitmapImage2D The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapImage2D\n\t *                         instance, or it can refer to the current\n\t *                         BitmapImage2D instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapImage2D  A secondary, alpha BitmapImage2D object source.\n\t * @param alphaPoint       The point in the alpha BitmapImage2D object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapImage2D, sourceRect, destPoint are null.\n\t */\n\tpublic copyPixels(side:number, source:BitmapImage2D, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:HTMLImageElement, sourceRect:Rectangle, destRect:Rectangle);\n\tpublic copyPixels(side:number, source:any, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\t} else {\n\t\t\tBitmapImageUtils._copyPixels(this._context[side], source, sourceRect, destRect);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Frees memory that is used to store the BitmapImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapImage2D.dispose()</code>, the BitmapImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapImage2D object. However,\n\t * <code>BitmapImage2D.dispose()</code> does not garbage collect the BitmapImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapImage2D object is released at the time the BitmapImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i] = null;\n\t\t\tthis._imageCanvas[i] = null;\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\n\t\tthis._transparent = null;\n\t\tthis._locked = null;\n\t}\n\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapImage2D object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapImage2D object.</p>\n\t *\n\t * @param source         The display object or BitmapImage2D object to draw to\n\t *                       the BitmapImage2D object.(The DisplayObject and\n\t *                       BitmapImage2D classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the flash.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapImage2D\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapImage2D object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapImage2D image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapImage2D object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapImage2D or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic draw(side:number, source:BitmapImage2D, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:HTMLElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean);\n\tpublic draw(side:number, source:any, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean)\n\t{\n\t\tif (source instanceof BitmapImage2D)\n\t\t\tsource = source.getCanvas();\n\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) draw object\n\t\t\t//      3) read _imageData back out\n\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._draw(this._context[side], source, matrix, colorTransform, blendMode, clipRect, smoothing);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t *\n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic fillRect(side:number, rect:Rectangle, color:number)\n\t{\n\t\tif (this._locked) {\n\n\t\t\t// If canvas is locked:\n\t\t\t//\n\t\t\t//      1) copy image data back to canvas\n\t\t\t//      2) apply fill\n\t\t\t//      3) read _imageData back out\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0); // at coords 0,0\n\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\n\t\t\tif (this._imageData[side])\n\t\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\t\t} else {\n\t\t\tBitmapImageUtils._fillRect(this._context[side], rect, color, this._transparent);\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapImage2D\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic getPixel(side:number, x:number, y:number):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\t//returns black if fully transparent\n\t\tif (!a)\n\t\t\treturn 0x0;\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic getPixel32(side:number, x, y):number\n\t{\n\t\tvar r:number;\n\t\tvar g:number;\n\t\tvar b:number;\n\t\tvar a:number;\n\n\t\tif (!this._locked) {\n\t\t\tvar pixelData:ImageData = this._context[side].getImageData(x, y, 1, 1);\n\n\t\t\tr = pixelData.data[0];\n\t\t\tg = pixelData.data[1];\n\t\t\tb = pixelData.data[2];\n\t\t\ta = pixelData.data[3];\n\n\t\t} else {\n\t\t\tvar index:number = (x + y*this._size)*4;\n\n\t\t\tr = this._imageData[side].data[index + 0];\n\t\t\tg = this._imageData[side].data[index + 1];\n\t\t\tb = this._imageData[side].data[index + 2];\n\t\t\ta = this._imageData[side].data[index + 3];\n\t\t}\n\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * Locks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are not updated when this BitmapImage2D object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t *\n\t */\n\tpublic lock()\n\t{\n\t\tif (this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = true;\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t}\n\n\t/**\n\t * Converts an Array into a rectangular region of pixel data. For each pixel,\n\t * an Array element is read and written into the BitmapImage2D pixel. The data\n\t * in the Array is expected to be 32-bit ARGB pixel values.\n\t *\n\t * @param rect        Specifies the rectangular region of the BitmapImage2D\n\t *                    object.\n\t * @param inputArray  An Array that consists of 32-bit unmultiplied pixel\n\t *                    values to be used in the rectangular region.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic setArray(side:number, rect:Rectangle, inputArray:Array<number>)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/, argb:number[] /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\targb = ColorUtils.float32ColorToARGB(inputArray[i + j*rect.width]);\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\t\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\t\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\t\t\tthis._imageData[side].data[index + 3] = argb[0];\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Sets a single pixel of a BitmapImage2D object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic setPixel(side:number, x:number, y:number, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = 255;\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapImage2D object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapImage2D object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapImage2D methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapImage2D instance from\n\t * updating until you finish making the pixel changes.</p>\n\t *\n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic setPixel32(side:number, x, y, color:number)\n\t{\n\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tvar index:number = (x + y*this._size)*4;\n\n\t\tthis._imageData[side].data[index + 0] = argb[1];\n\t\tthis._imageData[side].data[index + 1] = argb[2];\n\t\tthis._imageData[side].data[index + 2] = argb[3];\n\t\tthis._imageData[side].data[index + 3] = argb[0];\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t *\n\t * @param rect           Specifies the rectangular region of the BitmapImage2D\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic setPixels(side:number, rect:Rectangle, inputByteArray:ByteArray)\n\t{\n\t\tif (!this._locked)\n\t\t\tthis._imageData[side] = this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\tinputByteArray.position = 0;\n\t\tvar i:number /*uint*/, j:number /*uint*/, index:number /*uint*/;\n\t\tfor (i = 0; i < rect.width; ++i) {\n\t\t\tfor (j = 0; j < rect.height; ++j) {\n\t\t\t\tindex = (i + rect.x + (j + rect.y)*this._size)*4;\n\n\t\t\t\tthis._imageData[side].data[index + 0] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 1] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 2] = inputByteArray.readUnsignedInt();\n\t\t\t\tthis._imageData[side].data[index + 3] = inputByteArray.readUnsignedInt();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._locked) {\n\t\t\tthis._context[side].putImageData(this._imageData[side], 0, 0);\n\t\t\tthis._imageData[side] = null;\n\t\t}\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapImage2D object,\n\t * such as Bitmap objects, are updated when this BitmapImage2D object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t *\n\t * @param changeRect The area of the BitmapImage2D object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapImage2D object is considered\n\t *                   changed.\n\t */\n\tpublic unlock()\n\t{\n\t\tif (!this._locked)\n\t\t\treturn;\n\n\t\tthis._locked = false;\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0); // at coords 0,0\n\t\t\tthis._imageData[i] = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData(side:number):ImageData\n\t{\n\t\tif (!this._locked)\n\t\t\treturn this._context[side].getImageData(0, 0, this._size, this._size);\n\n\t\treturn this._imageData[side];\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas(side:number):HTMLCanvasElement\n\t{\n\t\treturn this._imageCanvas[side];\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number)\n\t{\n\t\tsuper._setSize(size);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tif (this._locked)\n\t\t\t\tthis._context[i].putImageData(this._imageData[i], 0, 0);\n\n\t\t\tthis._imageCanvas[i].width = size;\n\t\t\tthis._imageCanvas[i].height = size;\n\n\t\t\tif (this._locked)\n\t\t\t\tthis._imageData[i] = this._context[i].getImageData(0, 0, this._size, this._size);\n\t\t}\n\t}\n}\n\nexport default BitmapImageCube;",
    "/**\n * A class that provides constant values for visual blend mode effects. These\n * constants are used in the following:\n * <ul>\n *   <li> The <code>blendMode</code> property of the\n * flash.display.DisplayObject class.</li>\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\n * method of the flash.display.BitmapData class</li>\n * </ul>\n */\nclass BlendMode\n{\n\t/**\n\t * Adds the values of the constituent colors of the display object to the\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\n\t * commonly used for animating a lightening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\n\t */\n\tpublic static ADD:string = \"add\";\n\n\t/**\n\t * Applies the alpha value of each pixel of the display object to the\n\t * background. This requires the <code>blendMode</code> property of the\n\t * parent display object be set to\n\t * <code>away.base.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ALPHA:string = \"alpha\";\n\n\t/**\n\t * Selects the darker of the constituent colors of the display object and the\n\t * colors of the background(the colors with the smaller values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static DARKEN:string = \"darken\";\n\n\t/**\n\t * Compares the constituent colors of the display object with the colors of\n\t * its background, and subtracts the darker of the values of the two\n\t * constituent colors from the lighter value. This setting is commonly used\n\t * for more vibrant colors.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\n\t */\n\tpublic static DIFFERENCE:string = \"difference\";\n\n\t/**\n\t * Erases the background based on the alpha value of the display object. This\n\t * process requires that the <code>blendMode</code> property of the parent\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ERASE:string = \"erase\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the display\n\t * object. If the display object is lighter than 50% gray, the display object\n\t * and background colors are screened, which results in a lighter color. If\n\t * the display object is darker than 50% gray, the colors are multiplied,\n\t * which results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static HARDLIGHT:string = \"hardlight\";\n\n\t/**\n\t * Inverts the background.\n\t */\n\tpublic static INVERT:string = \"invert\";\n\n\t/**\n\t * Forces the creation of a transparency group for the display object. This\n\t * means that the display object is precomposed in a temporary buffer before\n\t * it is processed further. The precomposition is done automatically if the\n\t * display object is precached by means of bitmap caching or if the display\n\t * object is a display object container that has at least one child object\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LAYER:string = \"layer\";\n\n\t/**\n\t * Selects the lighter of the constituent colors of the display object and\n\t * the colors of the background(the colors with the larger values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LIGHTEN:string = \"lighten\";\n\n\t/**\n\t * Multiplies the values of the display object constituent colors by the\n\t * constituent colors of the background color, and normalizes by dividing by\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\n\t * shadows and depth effects.\n\t *\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\n\t * display object and the corresponding color of the pixel in the background\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\n\t * shade than the color of the display object or the color of the\n\t * background.</p>\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * The display object appears in front of the background. Pixel values of the\n\t * display object override the pixel values of the background. Where the\n\t * display object is transparent, the background is visible.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the background.\n\t * If the background is lighter than 50% gray, the display object and\n\t * background colors are screened, which results in a lighter color. If the\n\t * background is darker than 50% gray, the colors are multiplied, which\n\t * results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static OVERLAY:string = \"overlay\";\n\n\t/**\n\t * Multiplies the complement(inverse) of the display object color by the\n\t * complement of the background color, resulting in a bleaching effect. This\n\t * setting is commonly used for highlights or to remove black areas of the\n\t * display object.\n\t */\n\tpublic static SCREEN:string = \"screen\";\n\n\t/**\n\t * Uses a shader to define the blend between objects.\n\t *\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\n\t * automatically sets the display object's <code>blendMode</code> property to\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\n\t * set to <code>BlendMode.SHADER</code> without first setting the\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\n\t * <code>blendShader</code> property is set(which sets the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\n\t * later the value of the <code>blendMode</code> property is changed, the\n\t * blend mode can be reset to use the blend shader simply by setting the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\n\t * <code>blendShader</code> property does not need to be set again except to\n\t * change the shader that's used to define the blend mode.</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static SHADER:string = \"shader\";\n\n\t/**\n\t * Subtracts the values of the constituent colors in the display object from\n\t * the values of the background color, applying a floor of 0. This setting is\n\t * commonly used for animating a darkening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\n\t */\n\tpublic static SUBTRACT:string = \"subtract\";\n}\n\nexport default BlendMode;",
    "import IImageCanvas                 from \"awayjs-core/lib/image/IImageCanvas\";\nimport CPURenderingContext2D        from \"awayjs-core/lib/image/CPURenderingContext2D\";\nimport ImageData                    from \"awayjs-core/lib/image/ImageData\";\n\nclass CPUCanvas implements IImageCanvas {\n\tpublic width:number = 1;\n\tpublic height:number = 1;\n\n\tprivate imageData:ImageData;\n\n\tgetContext(contextId: \"2d\"): CanvasRenderingContext2D;\n\tgetContext(contextId: \"experimental-webgl\"): WebGLRenderingContext;\n\tgetContext(contextId: string, ...args: any[]): CanvasRenderingContext2D | WebGLRenderingContext;\n\tgetContext(contextId: string, ...args: any[]): CanvasRenderingContext2D | WebGLRenderingContext\n\t{\n\t\treturn new CPURenderingContext2D(this);\n\t}\n\n\tconstructor() {\n\t\tthis.reset();\n\t}\n\n\tpublic reset() {\n\t\tif (!this.imageData) {\n\t\t\tthis.imageData = new ImageData(this.width, this.height);\n\t\t}else{\n\t\t\tthis.imageData.width = this.width;\n\t\t\tthis.imageData.height = this.height;\n\n\t\t\tif(this.imageData.data) {\n\t\t\t\tthis.imageData.data.length = 0;\n\t\t\t\tthis.imageData.data = null;\n\t\t\t}\n\t\t\tthis.imageData.data = new Uint8Array(this.width*this.height*4);\n\t\t}\n\n\t\tfor (var i:number = 0; i < this.width * this.height * 4; i += 4) {\n\t\t\tthis.imageData.data[i] = 255;\n\t\t\tthis.imageData.data[i + 1] = 255;\n\t\t\tthis.imageData.data[i + 2] = 255;\n\t\t\tthis.imageData.data[i + 3] = 255;\n\t\t}\n\t}\n\n\tpublic getImageData():ImageData {\n\t\tif (this.imageData.width != this.width || this.imageData.height != this.height) {\n\t\t\tthis.reset();\n\t\t}\n\t\treturn this.imageData;\n\t}\n\n\n}\nexport default CPUCanvas;",
    "import ImageData from \"awayjs-core/lib/image/ImageData\";\nimport CPUCanvas from \"awayjs-core/lib/image/CPUCanvas\";\nimport BitmapImage2D from \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix from \"awayjs-core/lib/geom/Matrix\";\nimport Point from \"awayjs-core/lib/geom/Point\";\n\n//TODO: implement all methods\nclass CPURenderingContext2D implements CanvasRenderingContext2D {\n    public miterLimit:number;\n    public font:string;\n    public globalCompositeOperation:string;\n    public msFillRule:string;\n    public lineCap:string;\n    public msImageSmoothingEnabled:boolean;\n    public lineDashOffset:number;\n    public shadowColor:string;\n    public lineJoin:string;\n    public shadowOffsetX:number;\n    public lineWidth:number;\n    public canvas:HTMLCanvasElement;\n    public strokeStyle:any;\n    public globalAlpha:number;\n    public shadowOffsetY:number;\n    public fillStyle:any;\n    public shadowBlur:number;\n    public textAlign:string;\n    public textBaseline:string;\n\n    public cpuCanvas:CPUCanvas;\n\n    private matrix:Matrix;\n\n    constructor(cpuCanvas:CPUCanvas) {\n        this.cpuCanvas = cpuCanvas;\n    }\n\n    public restore():void {\n        this.matrix = null;\n    }\n\n    public setTransform(m11:number, m12:number, m21:number, m22:number, dx:number, dy:number):void {\n        this.matrix = new Matrix(m11, m12, m21, m22, dx, dy);\n    }\n\n    public save():void {\n    }\n\n    public arc(x:number, y:number, radius:number, startAngle:number, endAngle:number, anticlockwise:boolean):void {\n    }\n\n    public measureText(text:string):TextMetrics {\n        return undefined;\n    }\n\n    public isPointInPath(x:number, y:number, fillRule:string):boolean {\n        return undefined;\n    }\n\n    public quadraticCurveTo(cpx:number, cpy:number, x:number, y:number):void {\n    }\n\n    public putImageData(imagedata:ImageData, dx:number, dy:number, dirtyX:number, dirtyY:number, dirtyWidth:number, dirtyHeight:number):void {\n    }\n\n    public rotate(angle:number):void {\n    }\n\n    public fillText(text:string, x:number, y:number, maxWidth:number):void {\n    }\n\n    public translate(x:number, y:number):void {\n    }\n\n    public scale(x:number, y:number):void {\n    }\n\n    public createRadialGradient(x0:number, y0:number, r0:number, x1:number, y1:number, r1:number):CanvasGradient {\n        return undefined;\n    }\n\n    public lineTo(x:number, y:number):void {\n    }\n\n    public getLineDash():number[] {\n        return undefined;\n    }\n\n    public fill(fillRule:string):void {\n    }\n\n    public createImageData(imageDataOrSw:any, sh:number):ImageData {\n        return undefined;\n    }\n\n    public createPattern(image:HTMLElement, repetition:string):CanvasPattern {\n        return undefined;\n    }\n\n    public closePath():void {\n    }\n\n    public rect(x:number, y:number, w:number, h:number):void {\n    }\n\n    public clip(fillRule:string):void {\n    }\n\n    public clearRect(x:number, y:number, w:number, h:number):void {\n        var imageData:ImageData = this.cpuCanvas.getImageData();\n        for (var i:number = x; i < x + w; i++) {\n            for (var j:number = y; j < y + h; j++) {\n\n                var index:number = (i + j * imageData.width) * 4;\n                imageData.data[index] = 0;\n                imageData.data[index + 1] = 0;\n                imageData.data[index + 2] = 0;\n                imageData.data[index + 3] = 0;\n            }\n        }\n    }\n\n    public moveTo(x:number, y:number):void {\n    }\n\n    public getImageData(sx:number, sy:number, sw:number, sh:number):ImageData {\n        //var result:ImageData = new ImageData(sw, sh);\n        //var i:number = 0;\n        //\n        //for (i = 0; i < sw * sh * 4; i += 4) {\n        //    result.data[i] = 255;\n        //    result.data[i + 1] = 255;\n        //    result.data[i + 2] = 255;\n        //    result.data[i + 3] = 255;\n        //}\n        //\n        //var imageData:ImageData = this.cpuCanvas.getImageData();\n        //for (i = sx; i < sx + sw; i++) {\n        //    for (var j:number = sy; j < sy + sh; j++) {\n        //        this.copyPixel32(result, i - sx, i - sy, imageData, i, j);\n        //    }\n        //}\n        return this.cpuCanvas.getImageData();\n    }\n\n    private point:Point = new Point();\n    private point2:Point = new Point();\n\n    private applyPixel32(target:ImageData, x:number, y:number, color:number[]) {\n        //todo: blending support\n\n        x = Math.floor(x);\n        y = Math.floor(y);\n\n        if (x < 0 || x >= target.width || y >= target.height || y < 0) return;\n        var index:number = (x + y * target.width) * 4;\n        //var alpha:number = color[3] / 255;\n        target.data[index] += color[0];\n        target.data[index + 1] += color[1];\n        target.data[index + 2] += color[2];\n        target.data[index + 3] += color[3];\n\n        //target.data[index] = color[0];\n        //target.data[index + 1] = color[1];\n        //target.data[index + 2] = color[2];\n        //target.data[index + 3] = color[3];\n\n        target.data[index] = target.data[index] & 0xFF;\n        target.data[index + 1] = target.data[index + 1] & 0xFF;\n        target.data[index + 2] = target.data[index + 2] & 0xFF;\n        target.data[index + 3] = target.data[index + 3] & 0xFF;\n    }\n\n    private copyPixel32(target:ImageData, x:number, y:number, source:ImageData, fromX:number, fromY:number) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n        fromX = Math.floor(fromX);\n        fromY = Math.floor(fromY);\n\n        if (x < 0 || x >= target.width || y >= target.height || y < 0) return;\n        if (fromX < 0 || fromX >= source.width || fromY >= source.height || fromY < 0) return;\n        var index:number = (x + y * target.width) * 4;\n        var fromIndex:number = (fromX + fromY * source.width) * 4;\n        target.data[index] = source.data[fromIndex];\n        target.data[index + 1] = source.data[fromIndex + 1];\n        target.data[index + 2] = source.data[fromIndex + 2];\n        target.data[index + 3] = source.data[fromIndex + 3];\n    }\n\n    private parsedFillStyle:string;\n    private parsedA:number;\n    private parsedR:number;\n    private parsedG:number;\n    private parsedB:number;\n\n    public fillRect(x:number, y:number, w:number, h:number):void {\n        if (this.fillStyle) {\n            if (this.parsedFillStyle != this.fillStyle) {\n                var colorStrings:string[] = this.fillStyle.substring(5, this.fillStyle.lastIndexOf(\")\")).split(\",\");\n                this.parsedA = parseFloat(colorStrings[3]) * 255;\n                this.parsedR = parseInt(colorStrings[0]);\n                this.parsedG = parseInt(colorStrings[1]);\n                this.parsedB = parseInt(colorStrings[2]);\n                this.parsedFillStyle = this.fillStyle;\n            }\n\n            var imageData:ImageData = this.cpuCanvas.getImageData();\n            for (var i:number = x; i < x + w; i++) {\n                for (var j:number = y; j < y + h; j++) {\n\n                    var index:number = (i + j * imageData.width) * 4;\n                    imageData.data[index] = this.parsedR;\n                    imageData.data[index + 1] = this.parsedG;\n                    imageData.data[index + 2] = this.parsedB;\n                    imageData.data[index + 3] = this.parsedA;\n                }\n            }\n        }\n    }\n\n    public bezierCurveTo(cp1x:number, cp1y:number, cp2x:number, cp2y:number, x:number, y:number):void {\n    }\n\n    public drawImage(image:HTMLElement, offsetX:number, offsetY:number, width:number, height:number, canvasOffsetX:number, canvasOffsetY:number, canvasImageWidth:number, canvasImageHeight:number):void {\n        var b:any = image;\n        if (image.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\n            var bitmap:BitmapImage2D = <BitmapImage2D> b;\n            bitmap.lock();\n\n            this.drawBitmap(bitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n\n            bitmap.unlock();\n        } else if (image.constructor.toString().indexOf(\"HTMLImage\") > -1) {\n            var htmlImage:HTMLImageElement = <HTMLImageElement> image;\n            var htmlCanvas:HTMLCanvasElement = <HTMLCanvasElement> document.createElement(\"canvas\");\n            htmlCanvas.width = htmlImage.width;\n            htmlCanvas.height = htmlImage.height;\n            var htmlContext:CanvasRenderingContext2D = htmlCanvas.getContext(\"2d\");\n            htmlContext.drawImage(htmlImage, 0, 0);\n            var htmlImageData:ImageData = htmlContext.getImageData(0, 0, htmlImage.width, htmlImage.height);\n\n            var resultBitmap:BitmapImage2D = new BitmapImage2D(htmlImage.width, htmlImage.height, true, 0, false);\n            resultBitmap.getImageData().data = htmlImageData.data;\n            var passBitmap:any = resultBitmap;\n            this.drawImage(passBitmap, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n        } else if (image.constructor.toString().indexOf(\"CPUCanvas\") > -1) {\n            //\n            var canvas:CPUCanvas = <CPUCanvas> b;\n            this.drawBitmap(canvas, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n            //\n            //if (!width || width == 0) {\n            //    width = canvas.width;\n            //    height = canvas.height;\n            //}\n            //\n            //var sourceData:ImageData = canvas.getImageData();\n            //var scaleX:number = width / sourceData.width;\n            //var scaleY:number = height / sourceData.height;\n            //\n            //var imageData:ImageData = this.cpuCanvas.getImageData();\n            //for (var i:number = offsetX; i < offsetX + width; i++) {\n            //    for (var j:number = offsetY; j < offsetY + height; j++) {\n            //        this.copyPixel32(imageData, i, j, sourceData, (i - offsetX) * scaleX, (j - offsetY) * scaleY);\n            //    }\n            //}\n        }\n    }\n\n    private drawBitmap(bitmap:any, offsetX:number, offsetY:number, width:number, height:number, canvasOffsetX:number, canvasOffsetY:number, canvasImageWidth:number, canvasImageHeight:number) {\n        if (!width || width == 0) {\n            width = bitmap.width;\n            height = bitmap.height;\n        }\n\n        if (!canvasOffsetX || canvasOffsetX == 0) {\n            canvasOffsetX = 0;\n            canvasOffsetY = 0;\n        }\n\n        if (!canvasImageWidth || canvasImageWidth == 0 || this.matrix) { //todo: if matrix? should we reset canvasImageWidth\n            canvasImageWidth = width;\n            canvasImageHeight = height;\n        }\n\n        //console.log(\"CPURenderingContext2D:drawBitmap(width: \" + width + \" height: \" + height + \" canvasImageWidth: \" + canvasImageWidth + \" canvasImageHeight: \" + canvasImageHeight);\n\n        var sourceData:ImageData = bitmap.getImageData();\n        var canvasImageData:ImageData = this.cpuCanvas.getImageData();\n\n        if (this.matrix || (canvasImageWidth != width || canvasImageHeight != height)) {\n            var matrix:Matrix = this.matrix;\n            if (!matrix) {\n                matrix = new Matrix();\n                matrix.scale(canvasImageWidth / width, canvasImageHeight / height);\n            }\n\n            var scaleX:number = Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b);\n            var scaleY:number = Math.sqrt(matrix.c * matrix.c + matrix.d * matrix.d);\n\n            canvasImageWidth = width * scaleX;\n            canvasImageHeight = height * scaleY;\n\n            matrix.tx += canvasOffsetX;\n            matrix.ty += canvasOffsetY;\n\n            canvasOffsetX = Math.floor(matrix.tx);\n            canvasOffsetY = Math.floor(matrix.ty);\n\n            matrix.invert();\n\n            if (scaleX >= 1 || scaleY >= 1) {\n                var p:Point = new Point();\n                for (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                    for (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                        p.x = i;\n                        p.y = j;\n                        p = matrix.transformPoint(p);\n\n                        var color:number[] = CPURenderingContext2D.sampleBilinear(p.x, p.y, sourceData);\n                        this.applyPixel32(canvasImageData, i, j, color);\n                    }\n                }\n            } else {\n                //decimate\n                var p1:Point = this.point;\n                var p2:Point = this.point2;\n                for (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                    for (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                        p1.x = i;\n                        p1.y = j;\n                        p1 = matrix.transformPoint(p1);\n\n                        p2.x = i + 1;\n                        p2.y = j + 1;\n                        p2 = matrix.transformPoint(p2);\n\n                        var color:number[] = CPURenderingContext2D.sampleBox(p1.x + offsetX, p1.y + offsetY, p2.x + offsetX, p2.y + offsetY, sourceData);\n                        this.applyPixel32(canvasImageData, i, j, color);\n                    }\n                }\n            }\n\n            matrix.invert();\n        } else {\n            for (var i:number = canvasOffsetX; i < canvasOffsetX + canvasImageWidth; i++) {\n                for (var j:number = canvasOffsetY; j < canvasOffsetY + canvasImageHeight; j++) {\n                    var color:number[] = CPURenderingContext2D.sample(i - canvasOffsetX + offsetX, j - canvasOffsetY + offsetY, sourceData);\n                    this.applyPixel32(canvasImageData, i, j, color);\n                }\n            }\n        }\n    }\n\n    public transform(m11:number, m12:number, m21:number, m22:number, dx:number, dy:number):void {\n    }\n\n    public stroke():void {\n    }\n\n    public strokeRect(x:number, y:number, w:number, h:number):void {\n    }\n\n    public setLineDash(segments:number[]):void {\n    }\n\n    public strokeText(text:string, x:number, y:number, maxWidth:number):void {\n    }\n\n    public beginPath():void {\n    }\n\n    public arcTo(x1:number, y1:number, x2:number, y2:number, radius:number):void {\n    }\n\n    public createLinearGradient(x0:number, y0:number, x1:number, y1:number):CanvasGradient {\n        return undefined;\n    }\n\n    private static sampleBilinear(u:number, v:number, texture:ImageData, texelSizeX:number = 1, texelSizeY:number = 1):number[] {\n        var color00:number[] = CPURenderingContext2D.sample(u, v, texture);\n        var color10:number[] = CPURenderingContext2D.sample(u + texelSizeX, v, texture);\n        var color01:number[] = CPURenderingContext2D.sample(u, v + texelSizeY, texture);\n        var color11:number[] = CPURenderingContext2D.sample(u + texelSizeX, v + texelSizeY, texture);\n\n        var a:number = u;\n        a = a - Math.floor(a);\n\n        var interColor0:number[] = CPURenderingContext2D.interpolateColor(color00, color10, a);\n        var interColor1:number[] = CPURenderingContext2D.interpolateColor(color01, color11, a);\n\n        var b:number = v;\n        b = b - Math.floor(b);\n        return CPURenderingContext2D.interpolateColor(interColor0, interColor1, b);\n    }\n\n    private static sample(u:number, v:number, imageData:ImageData):number[] {\n        u = Math.floor(u);\n        v = Math.floor(v);\n\n        var result:number[] = [0, 0, 0, 0];\n\n        if (u < 0 || u >= imageData.width || v < 0 || v >= imageData.height) {\n            return result;\n        }\n\n        var index:number = (u + v * imageData.width) * 4;\n        result[0] = imageData.data[index];\n        result[1] = imageData.data[index + 1];\n        result[2] = imageData.data[index + 2];\n        result[3] = imageData.data[index + 3];\n        return result;\n    }\n\n    private static sampleBox(x0:number, y0:number, x1:number, y1:number, texture:ImageData):number[] {\n        var area:number = 0;// -- total area accumulated in pixels\n        var result:number[] = [0, 0, 0, 0];\n        var x:number;\n        var y:number;\n        var xsize:number;\n        var ysize:number;\n\n        var fromY:number = Math.floor(y0);\n        var toY:number = Math.ceil(y1);\n\n        fromY = Math.max(Math.min(fromY, texture.height - 1), 0);\n        toY = Math.max(Math.min(toY, texture.height - 1), 0);\n\n        for (y = fromY; y < toY; y++) {\n            ysize = 1;\n\n            if (y < y0) {\n                ysize = ysize * (1.0 - (y0 - y))\n            }\n\n            if (y > y1) {\n                ysize = ysize * (1.0 - (y - y1))\n            }\n\n            var fromX:number = Math.floor(x0);\n            var toX:number = Math.ceil(x1);\n\n            fromX = Math.max(Math.min(fromX, texture.width - 1), 0);\n            toX = Math.max(Math.min(toX, texture.width - 1), 0);\n\n\n            for (x = fromX; x < toX; x++) {\n                xsize = ysize;\n\n                var color:number[] = CPURenderingContext2D.sample(x, y, texture);\n\n                if (x < x0) {\n                    xsize = xsize * (1.0 - (x0 - x))\n                }\n                if (x > x1) {\n                    xsize = xsize * (1.0 - (x - x1))\n                }\n                result[0] += color[0] * xsize;\n                result[1] += color[1] * xsize;\n                result[2] += color[2] * xsize;\n                result[3] += color[3] * xsize;\n                area = area + xsize\n            }\n        }\n\n        result[0] /= area;\n        result[1] /= area;\n        result[2] /= area;\n        result[3] /= area;\n\n        result[0] = result[0] & 0xFF;\n        result[1] = result[1] & 0xFF;\n        result[2] = result[2] & 0xFF;\n        result[3] = result[3] & 0xFF;\n        return result;\n    }\n\n    private static interpolateColor(source:number[], target:number[], a:number):number[] {\n        var result:number[] = [];\n        result[0] = source[0] + (target[0] - source[0]) * a;\n        result[1] = source[1] + (target[1] - source[1]) * a;\n        result[2] = source[2] + (target[2] - source[2]) * a;\n        result[3] = source[3] + (target[3] - source[3]) * a;\n        return result;\n    }\n\n}\nexport default CPURenderingContext2D;",
    "import ImageBase\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport Sampler2D\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\nimport Rectangle\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport ImageUtils\t\t\t\tfrom \"awayjs-core/lib/utils/ImageUtils\";\n\nclass Image2D extends ImageBase\n{\n\tpublic static assetType:string = \"[image Image2D]\";\n\n\tpublic _rect:Rectangle;\n\n\tprivate _powerOfTwo:boolean = true;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Image2D.assetType;\n\t}\n\n\t/**\n\t * The height of the image in pixels.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._rect.height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._rect.height == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._rect.width, value);\n\t}\n\n\t/**\n\t * The rectangle that defines the size and location of the bitmap image. The\n\t * top and left of the rectangle are 0; the width and height are equal to the\n\t * width and height in pixels of the BitmapData object.\n\t */\n\tpublic get rect():Rectangle\n\t{\n\t\treturn this._rect;\n\t}\n\n\t/**\n\t * The width of the bitmap image in pixels.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._rect.width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._rect.width == value)\n\t\t\treturn;\n\n\t\tthis._setSize(value, this._rect.height);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(width:number, height:number, powerOfTwo:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._rect = new Rectangle(0, 0, width, height);\n\t\tthis._powerOfTwo = powerOfTwo;\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tif (this._rect.width != width || this._rect.height != height)\n\t\t\tthis.clear();\n\n\t\tthis._rect.width = width;\n\t\tthis._rect.height = height;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions()\n\t{\n\t\tif (this._powerOfTwo && (!ImageUtils.isDimensionValid(this._rect.width) || !ImageUtils.isDimensionValid(this._rect.height)))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n\n\t/**\n\t * Enable POT texture size validation\n\t * @returns {boolean}\n\t */\n\tpublic get powerOfTwo():boolean {\n\t\treturn this._powerOfTwo;\n\t}\n\n\tpublic set powerOfTwo(value:boolean) {\n\t\tif(this._powerOfTwo == value) return;\n\t\tthis._powerOfTwo = value;\n\t\tthis._testDimensions();\n\t}\n}\n\nexport default Image2D;",
    "import SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport IAsset\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nclass ImageBase extends AssetBase\n{\n\tpublic _pFormat:string = \"bgra\";\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get format():string\n\t{\n\t\treturn this._pFormat;\n\t}\n}\n\nexport default ImageBase;",
    "import ImageBase\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerCube\t\t\t\tfrom \"awayjs-core/lib/image/SamplerCube\";\nimport ImageUtils\t\t\t\tfrom \"awayjs-core/lib/utils/ImageUtils\";\n\nclass ImageCube extends ImageBase\n{\n\tpublic static assetType:string = \"[image ImageCube]\";\n\n\tpublic _size:number;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn ImageCube.assetType;\n\t}\n\n\t/**\n\t * The size of the cube bitmap in pixels.\n\t */\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic set size(value:number)\n\t{\n\t\tif (this._size == value)\n\t\t\treturn;\n\n\t\tthis._setSize(this._size);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(size:number)\n\t{\n\t\tsuper();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(size:number)\n\t{\n\t\tif (this._size != size)\n\t\t\tthis.clear();\n\n\t\tthis._size = size;\n\n\t\tthis._testDimensions();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _testDimensions()\n\t{\n\t\tif (!ImageUtils.isDimensionValid(this._size))\n\t\t\tthrow new Error(\"Invalid dimension: Width and height must be power of 2 and cannot exceed 2048\");\n\t}\n}\n\nexport default ImageCube;",
    "class ImageData {\n    public width: number;\n    public data: any;\n    public height: number;\n\n    constructor(width:number, height:number) {\n        this.width = width;\n        this.height = height;\n        this.data = new Uint8Array(width*height*4);\n    }\n}\nexport default ImageData;",
    "import SamplerBase\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport Image2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport Rectangle\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\n/**\n * The Sampler2D class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Sampler2D()</code> constructor.\n *\n * <p>The <code>Sampler2D()</code> constructor allows you to create a Sampler2D\n * object that contains a reference to a Image2D object. After you create a\n * Sampler2D object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Sampler2D object can share its Image2D reference among several Sampler2D\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Sampler2D objects that reference the same Image2D object,\n * multiple texture objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each texture\n * object instance.</p>\n\n */\nclass Sampler2D extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset Sampler2D]\";\n\n\tprivate _imageRect:Rectangle;\n\tprivate _frameRect:Rectangle;\n\tprivate _repeat:boolean;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Sampler2D.assetType;\n\t}\n\n\t/**\n\t * Controls whether or not the Sampler2D object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\t//var pixelSnapping:PixelSnapping;\n\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\n\t/**\n\t *\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get imageRect():Rectangle\n\t{\n\t\treturn this._imageRect;\n\t}\n\tpublic set imageRect(value:Rectangle)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\tpublic set frameRect(value:Rectangle)\n\t{\n\t\tif (this._frameRect == value)\n\t\t\treturn;\n\n\t\tthis._frameRect = value;\n\n\t\tthis._updateRect();\n\t}\n\n\t/**\n\t *\n\t * @param image2D\n\t * @param smoothing\n\t */\n\tconstructor(repeat:boolean = false, smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper(smooth, mipmap);\n\n\t\tthis._repeat = repeat;\n\n\t\tthis._updateRect();\n\t}\n\n\tprivate _updateRect()\n\t{\n\t}\n}\n\nexport default Sampler2D;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\n/**\n *\n */\nclass SamplerBase extends AssetBase\n{\n\tprivate _smooth:boolean;\n\tprivate _mipmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\t//TODO: update dependencies\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._smooth = smooth;\n\t\tthis._mipmap = mipmap;\n\t}\n}\n\nexport default SamplerBase;",
    "import SamplerBase\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport ImageCube\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\n\n/**\n * The Bitmap class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Bitmap()</code> constructor.\n *\n * <p>The <code>Bitmap()</code> constructor allows you to create a Bitmap\n * object that contains a reference to a BitmapData object. After you create a\n * Bitmap object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Bitmap object can share its BitmapData reference among several Bitmap\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Bitmap objects that reference the same BitmapData object,\n * multiple texture objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each texture\n * object instance.</p>\n\n */\nclass SamplerCube extends SamplerBase\n{\n\tpublic static assetType:string = \"[asset SamplerCube]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SamplerCube.assetType;\n\t}\n\n\t/**\n\t *\n\t * @param bitmapData\n\t * @param smoothing\n\t */\n\tconstructor(smooth:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper(smooth, mipmap);\n\t}\n}\n\nexport default SamplerCube;",
    "import BitmapImage2D\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport BitmapImageChannel\t\tfrom \"awayjs-core/lib/image/BitmapImageChannel\";\nimport Image2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\n\n/**\n *\n */\nclass SpecularImage2D extends Image2D\n{\n\tpublic static assetType:string = \"[asset SpecularImage2D]\";\n\n\tprivate _specularSource:BitmapImage2D;\n\tprivate _glossSource:BitmapImage2D;\n\tprivate _output:BitmapImage2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SpecularImage2D.assetType;\n\t}\n\n\tpublic get specularSource():BitmapImage2D\n\t{\n\t\treturn this._specularSource;\n\t}\n\n\tpublic set specularSource(value:BitmapImage2D)\n\t{\n\t\tif (this._specularSource == value)\n\t\t\treturn;\n\n\t\tthis._specularSource = value;\n\n\t\tthis.invalidate();\n\n\t\tthis._testSize();\n\t}\n\n\n\tpublic get glossSource():BitmapImage2D\n\t{\n\t\treturn this._glossSource;\n\t}\n\n\tpublic set glossSource(value:BitmapImage2D)\n\t{\n\t\tif (this._glossSource == value)\n\t\t\treturn;\n\n\t\tthis._glossSource = value;\n\n\t\tthis.invalidate();\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(specularSource:BitmapImage2D = null, glossSource:BitmapImage2D = null)\n\t{\n\t\tsuper(1, 1);\n\n\t\tthis._specularSource = specularSource;\n\t\tthis._glossSource = glossSource;\n\n\t\tthis._output = new BitmapImage2D(1, 1, false, 0xffffff);\n\n\t\tthis._testSize();\n\t}\n\n\t/**\n\t * Returns a new SpecularImage2D object that is a clone of the original instance\n\t * with an exact copy of the contained bitmap.\n\t *\n\t * @return A new SpecularImage2D object that is identical to the original.\n\t */\n\tpublic clone():SpecularImage2D\n\t{\n\t\treturn new SpecularImage2D(this._specularSource, this._glossSource);\n\t}\n\n\t/**\n\t * Frees memory that is used to store the SpecularImage2D object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this SpecularImage2D instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>SpecularImage2D.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>SpecularImage2D.dispose()</code>, the SpecularImage2D\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the SpecularImage2D object. However,\n\t * <code>SpecularImage2D.dispose()</code> does not garbage collect the SpecularImage2D\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * SpecularImage2D object is released at the time the SpecularImage2D object is\n\t * collected by the garbage collector.</p>\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._rect = null;\n\n\t\tthis._output.dispose();\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageData}\n\t */\n\tpublic getImageData():ImageData\n\t{\n\t\tvar origin:Point = new Point();\n\n\t\tthis._output.fillRect(this._rect, 0xffffff);\n\n\t\tif (this._glossSource)\n\t\t\tthis._output.copyChannel(this._glossSource, this._rect, origin, BitmapImageChannel.GREEN, BitmapImageChannel.GREEN);\n\n\t\tif (this._specularSource)\n\t\t\tthis._output.copyChannel(this._specularSource, this._rect, origin, BitmapImageChannel.RED, BitmapImageChannel.RED);\n\n\t\treturn this._output.getImageData();\n\t}\n\n\t/**\n\t *\n\t * @returns {HTMLCanvasElement}\n\t */\n\tpublic getCanvas():HTMLCanvasElement\n\t{\n\t\treturn this._output.getCanvas();\n\t}\n\n\t/**\n\t *\n\t * @param width\n\t * @param height\n\t * @private\n\t */\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tsuper._setSize(width, height);\n\n\t\tthis._output._setSize(width, height);\n\t}\n\n\tprivate _testSize()\n\t{\n\t\tvar w:number, h:number;\n\n\t\tif (this._specularSource) {\n\t\t\tw = this._specularSource.width;\n\t\t\th = this._specularSource.height;\n\t\t} else if (this._glossSource) {\n\t\t\tw = this._glossSource.width;\n\t\t\th = this._glossSource.height;\n\t\t} else {\n\t\t\tw = 1;\n\t\t\th = 1;\n\t\t}\n\n\t\tif (w != this._output.width && h != this._output.height) {\n\t\t\tthis._output.dispose();\n\t\t\tthis._output = new BitmapImage2D(w, h, false, 0xffffff);\n\t\t}\n\n\t\tthis._setSize(w, h);\n\t}\n}\n\nexport default SpecularImage2D;",
    "export {default as BitmapImage2D}\t\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nexport {default as BitmapImageChannel}\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImageChannel\";\nexport {default as BitmapImageCube}\t\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImageCube\";\nexport {default as BlendMode}\t\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nexport {default as CPUCanvas}\t\t\t\t\t\tfrom \"awayjs-core/lib/image/CPUCanvas\";\nexport {default as CPURenderingContext2D}\t\t\tfrom \"awayjs-core/lib/image/CPURenderingContext2D\";\nexport {default as IImageCanvas}\t\t\t\t\tfrom \"awayjs-core/lib/image/IImageCanvas\";\nexport {default as Image2D}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nexport {default as ImageBase}\t\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nexport {default as ImageCube}\t\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\nexport {default as ImageData}\t\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageData\";\nexport {default as Sampler2D}\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\nexport {default as SamplerBase}\t\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nexport {default as SamplerCube}\t\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerCube\";\nexport {default as SpecularImage2D}\t\t\t\t\tfrom \"awayjs-core/lib/image/SpecularImage2D\";",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport IAsset\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\n/**\n *\n * @class away.pool.AbstractionBase\n */\nclass AbstractionBase extends EventDispatcher\n{\n\tprivate _onClearDelegate:(event:AssetEvent) => void;\n\tprivate _onInvalidateDelegate:(event:AssetEvent) => void;\n\n\tpublic _pool:IAbstractionPool;\n\n\tpublic _asset:IAsset;\n\n\tpublic _invalid:boolean = true;\n\n\tconstructor(asset:IAsset, pool:IAbstractionPool)\n\t{\n\t\tsuper();\n\n\t\tthis._asset = asset;\n\t\tthis._pool = pool;\n\n\t\tthis._onClearDelegate = (event:AssetEvent) => this.onClear(event);\n\t\tthis._onInvalidateDelegate = (event:AssetEvent) => this.onInvalidate(event);\n\n\t\tthis._asset.addEventListener(AssetEvent.CLEAR, this._onClearDelegate);\n\t\tthis._asset.addEventListener(AssetEvent.INVALIDATE, this._onInvalidateDelegate);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tthis._asset.removeEventListener(AssetEvent.CLEAR, this._onClearDelegate);\n\t\tthis._asset.removeEventListener(AssetEvent.INVALIDATE, this._onInvalidateDelegate);\n\n\t\tthis._pool.clearAbstraction(this._asset);\n\t\tthis._pool = null;\n\t\tthis._asset = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tthis._invalid = true;\n\t}\n}\n\nexport default AbstractionBase;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport IAssetClass\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport AbstractMethodError\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport EventDispatcher\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\n\nclass AssetBase extends EventDispatcher implements IAsset\n{\n\tpublic static ID_COUNT:number = 0;\n\n\tprivate _originalName:string;\n\tprivate _namespace:string;\n\tprivate _name:string;\n\tprivate _id:number;\n\tprivate _full_path:Array<string>;\n\n\tpublic static DEFAULT_NAMESPACE:string = 'default';\n\n\tconstructor(name:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._id = AssetBase.ID_COUNT++;\n\n\t\tif (name == null)\n\t\t\tname = 'null';\n\n\t\tthis._name = name;\n\t\tthis._originalName = name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * The original name used for this asset in the resource (e.g. file) in which\n\t * it was found. This may not be the same as <code>name</code>, which may\n\t * have changed due to of a name conflict.\n\t */\n\tpublic get originalName():string\n\t{\n\t\treturn this._originalName;\n\t}\n\n\t/**\n\t * A unique id for the asset, used to identify assets in an associative array\n\t */\n\tpublic get id():number\n\t{\n\t\treturn this._id;\n\t}\n\n\tpublic get name():string\n\t{\n\t\treturn this._name;\n\t}\n\n\tpublic set name(val:string)\n\t{\n\t\tvar prev:string;\n\n\t\tprev = this._name;\n\t\tthis._name = val;\n\n\t\tif (this._name == null)\n\t\t\tthis._name = 'null';\n\n\t\tthis.updateFullPath();\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.RENAME, this, prev));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.DISPOSE, this));\n\t}\n\n\tpublic clear()\n\t{\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.CLEAR, this));\n\t}\n\n\tpublic get assetNamespace():string\n\t{\n\t\treturn this._namespace;\n\t}\n\n\tpublic get assetFullPath():Array<string>\n\t{\n\t\treturn this._full_path;\n\t}\n\n\tpublic assetPathEquals(name:string, ns:string):boolean\n\t{\n\t\treturn (this._name == name && (!ns || this._namespace == ns));\n\t}\n\n\n\tpublic isAsset(assetClass:IAssetClass):boolean\n\t{\n\t\treturn this.assetType == assetClass.assetType;\n\t}\n\n\tpublic resetAssetPath(name:string, ns:string = null, overrideOriginal:boolean = true):void\n\t{\n\n\t\tthis._name = name? name : 'null';\n\t\tthis._namespace = ns? ns : AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (overrideOriginal)\n\t\t\tthis._originalName = this._name;\n\n\t\tthis.updateFullPath();\n\t}\n\n\tprivate updateFullPath():void\n\t{\n\t\tthis._full_path = [ this._namespace, this._name ];\n\t}\n}\n\nexport default AssetBase;",
    "import URLRequest\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\nimport AssetLibrary\t\t\t\tfrom \"awayjs-core/lib/library/AssetLibrary\";\nimport AssetLibraryIterator\t\tfrom \"awayjs-core/lib/library/AssetLibraryIterator\";\nimport Loader\t\t\t\t\tfrom \"awayjs-core/lib/library/Loader\";\nimport LoaderContext\t\t\tfrom \"awayjs-core/lib/library/LoaderContext\";\nimport ConflictPrecedence\t\tfrom \"awayjs-core/lib/library/ConflictPrecedence\";\nimport ConflictStrategy\t\t\tfrom \"awayjs-core/lib/library/ConflictStrategy\";\nimport ConflictStrategyBase\t\tfrom \"awayjs-core/lib/library/ConflictStrategyBase\";\nimport AssetBase\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport ErrorBase\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\nimport AssetEvent\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport URLLoaderEvent\t\t\tfrom \"awayjs-core/lib/events/URLLoaderEvent\";\nimport LoaderEvent\t\t\t\tfrom \"awayjs-core/lib/events/LoaderEvent\";\nimport EventDispatcher\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport ParserEvent\t\t\t\tfrom \"awayjs-core/lib/events/ParserEvent\";\nimport ParserBase\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\n\n/**\n * AssetLibraryBundle enforces a multiton pattern and is not intended to be instanced directly.\n * Its purpose is to create a container for 3D data management, both before and after parsing.\n * If you are interested in creating multiple library bundles, please use the <code>getInstance()</code> method.\n */\nclass AssetLibraryBundle extends EventDispatcher\n{\n\tpublic static _iInstances:Object = new Object();\n\n\tprivate _loaderSessions:Array<Loader>;\n\tprivate _strategy:ConflictStrategyBase;\n\tprivate _strategyPreference:string;\n\tprivate _assets:Array<IAsset>;\n\tprivate _assetDictionary:Object;\n\tprivate _assetDictDirty:boolean;\n\tprivate _loaderSessionsGarbage:Array<Loader> = new Array<Loader>();\n\tprivate _gcTimeoutIID:number;\n\n\tprivate _onAssetRenameDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetConflictResolvedDelegate:(event:AssetEvent) => void;\n\tprivate _onResourceCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:LoaderEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\t/**\n\t * Creates a new <code>AssetLibraryBundle</code> object.\n\t *\n\t * @param me A multiton enforcer for the AssetLibraryBundle ensuring it cannnot be instanced.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._assets = new Array<IAsset>();//new Vector.<IAsset>;\n\t\tthis._assetDictionary = new Object();\n\t\tthis._loaderSessions = new Array<Loader>();\n\n\t\tthis.conflictStrategy = ConflictStrategy.IGNORE.create();\n\t\tthis.conflictPrecedence = ConflictPrecedence.FAVOR_NEW;\n\n\t\tthis._onAssetRenameDelegate = (event:AssetEvent) => this.onAssetRename(event);\n\t\tthis._onAssetConflictResolvedDelegate = (event:AssetEvent) => this.onAssetConflictResolved(event);\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:LoaderEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Returns an AssetLibraryBundle instance. If no key is given, returns the default bundle instance (which is\n\t * similar to using the AssetLibraryBundle as a singleton.) To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibrary as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getInstance(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\tif (!key)\n\t\t\tkey = 'default';\n\n\t\tif (!AssetLibraryBundle._iInstances.hasOwnProperty(key))\n\t\t\tAssetLibraryBundle._iInstances[key] = new AssetLibraryBundle();\n\n\t\treturn AssetLibraryBundle._iInstances[key];\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParser(parserClass:Object)\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enableParsers(parserClasses:Object[])\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Defines which strategy should be used for resolving naming conflicts, when two library\n\t * assets are given the same name. By default, <code>ConflictStrategy.APPEND_NUM_SUFFIX</code>\n\t * is used which means that a numeric suffix is appended to one of the assets. The\n\t * <code>conflictPrecedence</code> property defines which of the two conflicting assets will\n\t * be renamed.\n\t *\n\t * @see naming.ConflictStrategy\n\t * @see AssetLibrary.conflictPrecedence\n\t */\n\tpublic get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn this._strategy;\n\t}\n\n\tpublic set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\n\t\tif (!val)\n\t\t\tthrow new ErrorBase('namingStrategy must not be null. To ignore naming, use AssetLibrary.IGNORE');\n\n\t\tthis._strategy = val.create();\n\n\t}\n\n\t/**\n\t * Defines which asset should have precedence when resolving a naming conflict between\n\t * two assets of which one has just been renamed by the user or by a parser. By default\n\t * <code>ConflictPrecedence.FAVOR_NEW</code> is used, meaning that the newly renamed\n\t * asset will keep it's new name while the older asset gets renamed to not conflict.\n\t *\n\t * This property is ignored for conflict strategies that do not actually rename an\n\t * asset automatically, such as ConflictStrategy.IGNORE and ConflictStrategy.THROW_ERROR.\n\t *\n\t * @see away.library.ConflictPrecedence\n\t * @see away.library.ConflictStrategy\n\t */\n\tpublic get conflictPrecedence():string\n\t{\n\t\treturn this._strategyPreference;\n\t}\n\n\tpublic set conflictPrecedence(val:string)\n\t{\n\t\tthis._strategyPreference = val;\n\t}\n\n\t/**\n\t * Create an AssetLibraryIterator instance that can be used to iterate over the assets\n\t * in this asset library instance. The iterator can filter assets on asset type and/or\n\t * namespace. A \"null\" filter value means no filter of that type is used.\n\t *\n\t * @param assetTypeFilter Asset type to filter on (from the AssetType enum class.) Use\n\t * null to not filter on asset type.\n\t * @param namespaceFilter Namespace to filter on. Use null to not filter on namespace.\n\t * @param filterFunc Callback function to use when deciding whether an asset should be\n\t * included in the iteration or not. This needs to be a function that takes a single\n\t * parameter of type IAsset and returns a boolean where true means it should be included.\n\t *\n\t * @see away.library.AssetType\n\t */\n\tpublic createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn new AssetLibraryIterator(this._assets, assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis.getLoader().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads a resource from existing data in memory.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n\t * @return A handle to the retrieved resource.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis.getLoader().loadData(data, '', context, ns, parser);\n\t}\n\n\tpublic getLoader():Loader\n\t{\n\t\tvar loader:Loader = new Loader();\n\n\t\tthis._loaderSessions.push(loader);\n\n\t\tloader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tloader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tloader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn loader;\n\t}\n\t\n\tpublic disposeLoader(loader:Loader)\n\t{\n\t\tvar index:number = this._loaderSessions.indexOf(loader);\n\t\tthis._loaderSessions.splice(index, 1);\n\n\t\t// Add loader to a garbage array - for a collection sweep and kill\n\t\tthis._loaderSessionsGarbage.push(loader);\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\treturn null;\n\n\t\treturn this._assetDictionary[ns][name];\n\n\t}\n\tpublic getAllAssets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\t/**\n\t * Adds an asset to the asset library, first making sure that it's name is unique\n\t * using the method defined by the <code>conflictStrategy</code> and\n\t * <code>conflictPrecedence</code> properties.\n\t */\n\tpublic addAsset(asset:IAsset)\n\t{\n\t\tvar ns:string;\n\t\tvar old:IAsset;\n\n\t\t// Bail if asset has already been added.\n\t\tif (this._assets.indexOf(asset) >= 0)\n\t\t\treturn;\n\n\t\told = this.getAsset(asset.name, asset.assetNamespace);\n\t\tns = asset.assetNamespace || AssetBase.DEFAULT_NAMESPACE;\n\n\t\tif (old != null)\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[ns], this._strategyPreference);\n\n\t\t//create unique-id (for now this is used in AwayBuilder only\n\t\t//asset.id = IDUtil.createUID();\n\n\t\t// Add it\n\t\tthis._assets.push(asset);\n\n\t\tif (!this._assetDictionary.hasOwnProperty(ns))\n\t\t\tthis._assetDictionary[ns] = new Object();\n\n\t\tthis._assetDictionary[ns][asset.name] = asset;\n\n\t\tasset.addEventListener(AssetEvent.RENAME, this._onAssetRenameDelegate);\n\t\tasset.addEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\t}\n\n\t/**\n\t * Removes an asset from the library, and optionally disposes that asset by calling\n\t * it's disposeAsset() method (which for most assets is implemented as a default\n\t * version of that type's dispose() method.\n\t *\n\t * @param asset The asset which should be removed from this library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tvar idx:number;\n\n\t\tthis.removeAssetFromDict(asset);\n\n\t\tasset.removeEventListener(AssetEvent.RENAME, this._onAssetRenameDelegate);\n\t\tasset.removeEventListener(AssetEvent.ASSET_CONFLICT_RESOLVED, this._onAssetConflictResolvedDelegate);\n\n\t\tidx = this._assets.indexOf(asset);\n\n\t\tif (idx >= 0)\n\t\t\tthis._assets.splice(idx, 1);\n\n\t\tif (dispose)\n\t\t\tasset.dispose();\n\t}\n\n\t/**\n\t * Removes an asset which is specified using name and namespace.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\tvar asset:IAsset = this.getAsset(name, ns);\n\n\t\tif (asset)\n\t\t\tthis.removeAsset(asset, dispose);\n\n\t\treturn asset;\n\t}\n\n\t/**\n\t * Removes all assets from the asset library, optionally disposing them as they\n\t * are removed.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t */\n\tpublic removeAllAssets(dispose:boolean = true)\n\t{\n\t\tif (dispose) {\n\t\t\tvar asset:IAsset;\n\t\t\tvar len:number = this._assets.length;\n\t\t\tfor (var c:number = 0; c < len; c++) {\n\t\t\t\tasset = this._assets[c];\n\t\t\t\tasset.dispose();\n\t\t\t}\n\t\t}\n\n\t\tthis._assets.length = 0;\n\t\tthis.rehashAssetDict();\n\t}\n\n\t/**\n\t * Removes all assets belonging to a particular namespace (null for default)\n\t * from the asset library, and optionall disposes them by calling their\n\t * disposeAsset() method.\n\t *\n\t * @param ns The namespace from which all assets should be removed.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see away.library.AssetLibrary.removeAsset()\n\t */\n\tpublic removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tvar idx:number = 0;\n\t\tvar asset:IAsset;\n\t\tvar old_assets:IAsset[];\n\n\t\t// Empty the assets vector after having stored a copy of it.\n\t\t// The copy will be filled with all assets which weren't removed.\n\t\told_assets = this._assets.concat();\n\t\tthis._assets.length = 0;\n\n\t\tif (ns == null)\n\t\t\tns = AssetBase.DEFAULT_NAMESPACE;\n\n\t\tvar len:number = old_assets.length;\n\t\tfor (var d:number = 0; d < len; d++) {\n\t\t\tasset = old_assets[d];\n\n\t\t\t// Remove from dict if in the supplied namespace. If not,\n\t\t\t// transfer over to the new vector.\n\t\t\tif (asset.assetNamespace == ns) {\n\t\t\t\tif (dispose)\n\t\t\t\t\tasset.dispose();\n\n\t\t\t\t// Remove asset from dictionary, but don't try to auto-remove\n\t\t\t\t// the namespace, which will trigger an unnecessarily expensive\n\t\t\t\t// test that is not needed since we know that the namespace\n\t\t\t\t// will be empty when loop finishes.\n\t\t\t\tthis.removeAssetFromDict(asset, false);\n\t\t\t} else {\n\t\t\t\tthis._assets[idx++] = asset;\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t for each (asset in old_assets) {\n\t\t // Remove from dict if in the supplied namespace. If not,\n\t\t // transfer over to the new vector.\n\t\t if (asset.assetNamespace == ns) {\n\t\t if (dispose)\n\t\t asset.dispose();\n\n\t\t // Remove asset from dictionary, but don't try to auto-remove\n\t\t // the namespace, which will trigger an unnecessarily expensive\n\t\t // test that is not needed since we know that the namespace\n\t\t // will be empty when loop finishes.\n\t\t removeAssetFromDict(asset, false);\n\t\t } else\n\t\t _assets[idx++] = asset;\n\n\t\t }\n\t\t */\n\n\t\t// Remove empty namespace\n\t\tif (this._assetDictionary.hasOwnProperty(ns))\n\t\t\tdelete this._assetDictionary[ns];\n\t}\n\n\tprivate removeAssetFromDict(asset:IAsset, autoRemoveEmptyNamespace:boolean = true)\n\t{\n\t\tif (this._assetDictDirty)\n\t\t\tthis.rehashAssetDict();\n\n\t\tif (this._assetDictionary.hasOwnProperty(asset.assetNamespace)) {\n\t\t\tif (this._assetDictionary[asset.assetNamespace].hasOwnProperty(asset.name))\n\t\t\t\tdelete this._assetDictionary[asset.assetNamespace][asset.name];\n\n\t\t\tif (autoRemoveEmptyNamespace) {\n\n\t\t\t\tvar key:string;\n\t\t\t\tvar empty:boolean = true;\n\n\t\t\t\tfor (key in this._assetDictionary[asset.assetNamespace]) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (empty)\n\t\t\t\t\tdelete this._assetDictionary[asset.assetNamespace];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic stopAllLoaders()\n\t{\n\t\tvar len:number = this._loaderSessions.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis.killloaderSession(this._loaderSessions[i]);\n\n\t\tthis._loaderSessions = new Array<Loader>();\n\t}\n\n\tprivate rehashAssetDict()\n\t{\n\t\tvar asset:IAsset;\n\n\t\tthis._assetDictionary = {};\n\n\t\tvar len:number = this._assets.length;\n\t\tfor (var c:number = 0; c < len; c++) {\n\t\t\tasset = this._assets[c];\n\n\t\t\tif (!this._assetDictionary.hasOwnProperty(asset.assetNamespace))\n\t\t\t\tthis._assetDictionary[asset.assetNamespace] = {};\n\n\t\t\tthis._assetDictionary[asset.assetNamespace][asset.name] = asset;\n\n\t\t}\n\n\t\tthis._assetDictDirty = false;\n\n\t}\n\n\t/**\n\t * Called when a an error occurs during loading.\n\t */\n\tprivate onLoadError(event:URLLoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing.\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Only add asset to library the first time.\n\t\tif (event.type == AssetEvent.ASSET_COMPLETE)\n\t\t\tthis.addAsset(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\n\t}\n\n\tprivate onTextureSizeError(event:LoaderEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tvar loader:Loader = <Loader> event.target;\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis.disposeLoader(loader);\n\t}\n\n\tprivate loaderSessionGC():void\n\t{\n\t\tvar loader:Loader;\n\n\t\twhile (this._loaderSessionsGarbage.length > 0) {\n\t\t\tloader = this._loaderSessionsGarbage.pop();\n\t\t\tthis.killloaderSession(loader);\n\t\t}\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate killloaderSession(loader:Loader)\n\t{\n\t\tloader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onResourceCompleteDelegate);\n\t\tloader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tloader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t\tloader.stop();\n\t}\n\n\n\tprivate onAssetRename(event:AssetEvent)\n\t{\n\t\tvar asset:IAsset = <IAsset > event.target;// TODO: was ev.currentTarget - watch this var\n\t\tvar old:IAsset = this.getAsset(asset.assetNamespace, asset.name);\n\n\t\tif (old != null) {\n\t\t\tthis._strategy.resolveConflict(asset, old, this._assetDictionary[asset.assetNamespace], this._strategyPreference);\n\t\t} else {\n\t\t\tvar dict:Object = this._assetDictionary[event.asset.assetNamespace];\n\n\t\t\tif (dict == null)\n\t\t\t\treturn;\n\n\t\t\tdict[event.prevName] = null;\n\t\t\tdict[event.asset.name] = event.asset;\n\t\t}\n\t}\n\n\tprivate onAssetConflictResolved(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event.clone());\n\t}\n}\n\nexport default AssetLibraryBundle;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nclass AssetLibraryIterator\n{\n\n\tprivate  _assets:Array<IAsset>;\n\tprivate _filtered:Array<IAsset>;\n\n\tprivate _idx:number;\n\n\tconstructor(assets:Array<IAsset>, assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tthis._assets = assets;\n\t\tthis.filter(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\tpublic get currentAsset():IAsset\n\t{\n\t\t// Return current, or null if no current\n\t\treturn ( this._idx < this._filtered.length )? this._filtered[ this._idx ] : null;\n\t}\n\n\tpublic get numAssets():number\n\t{\n\t\treturn this._filtered.length;\n\t}\n\n\tpublic next():IAsset\n\t{\n\t\tvar next:IAsset = null;\n\n\t\tif (this._idx < this._filtered.length)\n\t\t\tnext = this._filtered[this._idx];\n\n\t\tthis._idx++;\n\n\t\treturn next;\n\t}\n\n\tpublic reset()\n\t{\n\t\tthis._idx = 0;\n\t}\n\n\tpublic setIndex(index:number)\n\t{\n\t\tthis._idx = index;\n\t}\n\n\tprivate filter(assetTypeFilter:string, namespaceFilter:string, filterFunc)\n\t{\n\t\tif (assetTypeFilter || namespaceFilter) {\n\n\t\t\tvar idx:number;\n\t\t\tvar asset:IAsset;\n\n\n\t\t\tidx = 0;\n\t\t\tthis._filtered = new Array<IAsset>();//new Vector.<IAsset>;\n\n\t\t\tvar l:number = this._assets.length;\n\n\t\t\tfor (var c:number = 0; c < l; c++) {\n\n\t\t\t\tasset = <IAsset> this._assets[c];\n\n\t\t\t\t// Skip this assets if filtering on type and this is wrong type\n\t\t\t\tif (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t\tif (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Skip this asset if a filter func has been provided and it returns false\n\t\t\t\tif (filterFunc != null && !filterFunc(asset))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._filtered[idx++] = asset;\n\n\t\t\t}\n\n\t\t\t/*\n\t\t\t for each (asset in _assets) {\n\t\t\t // Skip this assets if filtering on type and this is wrong type\n\t\t\t if (assetTypeFilter && asset.assetType != assetTypeFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if filtering on namespace and this is wrong namespace\n\t\t\t if (namespaceFilter && asset.assetNamespace != namespaceFilter)\n\t\t\t continue;\n\n\t\t\t // Skip this asset if a filter func has been provided and it returns false\n\t\t\t if (filterFunc != null && !filterFunc(asset))\n\t\t\t continue;\n\n\t\t\t _filtered[idx++] = asset;\n\t\t\t }\n\t\t\t */\n\n\t\t} else {\n\t\t\tthis._filtered = this._assets;\n\t\t}\n\t}\n}\n\nexport default AssetLibraryIterator;",
    "import URLRequest\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\nimport EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\nimport AssetLibraryBundle\t\tfrom \"awayjs-core/lib/library/AssetLibraryBundle\";\nimport AssetLibraryIterator\t\tfrom \"awayjs-core/lib/library/AssetLibraryIterator\";\nimport Loader\t\t\t\t\tfrom \"awayjs-core/lib/library/Loader\";\nimport LoaderContext\t\t\tfrom \"awayjs-core/lib/library/LoaderContext\";\nimport ConflictStrategyBase\t\tfrom \"awayjs-core/lib/library/ConflictStrategyBase\";\nimport IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport ParserBase\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\n\n/**\n * AssetLibrary enforces a singleton pattern and is not intended to be instanced.\n * It's purpose is to allow access to the default library bundle through a set of static shortcut methods.\n * If you are interested in creating multiple library bundles, please use the <code>getBundle()</code> method.\n */\nclass AssetLibrary\n{\n\t/**\n\t * Creates a new <code>AssetLibrary</code> object.\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t//*/\n\t/**\n\t * Returns an AssetLibrary bundle instance. If no key is given, returns the default bundle (which is\n\t * similar to using the AssetLibraryBundle as a singleton). To keep several separated library bundles,\n\t * pass a string key to this method to define which bundle should be returned. This is\n\t * referred to as using the AssetLibraryBundle as a multiton.\n\t *\n\t * @param key Defines which multiton instance should be returned.\n\t * @return An instance of the asset library\n\t */\n\tpublic static getBundle(key:string = 'default'):AssetLibraryBundle\n\t{\n\t\treturn AssetLibraryBundle.getInstance(key);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParser(parserClass)\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\t/**\n\t * Short-hand for conflictStrategy property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictStrategy\n\t */\n\tpublic static get conflictStrategy():ConflictStrategyBase\n\t{\n\t\treturn AssetLibrary.getBundle().conflictStrategy;\n\t}\n\n\tpublic static set conflictStrategy(val:ConflictStrategyBase)\n\t{\n\t\tAssetLibrary.getBundle().conflictStrategy = val;\n\t}\n\n\t/**\n\t * Short-hand for conflictPrecedence property on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.conflictPrecedence\n\t */\n\tpublic static get conflictPrecedence():string\n\t{\n\t\treturn AssetLibrary.getBundle().conflictPrecedence;\n\t}\n\n\tpublic static set conflictPrecedence(val:string)\n\t{\n\t\tAssetLibrary.getBundle().conflictPrecedence = val;\n\t}\n\n\t/**\n\t * Short-hand for createIterator() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.createIterator()\n\t */\n\tpublic static createIterator(assetTypeFilter:string = null, namespaceFilter:string = null, filterFunc = null):AssetLibraryIterator\n\t{\n\t\treturn AssetLibrary.getBundle().createIterator(assetTypeFilter, namespaceFilter, filterFunc);\n\t}\n\n\t/**\n\t * Short-hand for load() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.load()\n\t */\n\tpublic static load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tAssetLibrary.getBundle().load(req, context, ns, parser);\n\t}\n\n\t/**\n\t * Short-hand for loadData() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.loadData()\n\t */\n\tpublic static loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tAssetLibrary.getBundle().loadData(data, context, ns, parser);\n\t}\n\n\tpublic static stopLoad()\n\t{\n\t\tAssetLibrary.getBundle().stopAllLoaders();\n\t}\n\n\tpublic static getLoader():Loader\n\t{\n\t\treturn AssetLibrary.getBundle().getLoader();\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAsset(name:string, ns:string = null):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().getAsset(name, ns);\n\t}\n\n\t/**\n\t * Short-hand for getAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.getAsset()\n\t */\n\tpublic static getAllAssets():Array<IAsset>\n\t{\n\t\treturn AssetLibrary.getBundle().getAllAssets();\n\t}\n\n\t/**\n\t * Short-hand for addEventListener() method on default asset library bundle.\n\t */\n\tpublic static addEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tAssetLibrary.getBundle().addEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for removeEventListener() method on default asset library bundle.\n\t */\n\tpublic static removeEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tAssetLibrary.getBundle().removeEventListener(type, listener);\n\t}\n\n\t/**\n\t * Short-hand for hasEventListener() method on default asset library bundle.\n\n\t public static hasEventListener(type:string):boolean\n\t {\n\t\treturn AssetLibrary.getBundle().hasEventListener(type);\n\t}\n\n\t public static willTrigger(type:string):boolean\n\t {\n\t\treturn getBundle().willTrigger(type);\n\t}\n\t */\n\n\t/**\n\t * Short-hand for addAsset() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.addAsset()\n\t */\n\tpublic static addAsset(asset:IAsset)\n\t{\n\t\tAssetLibrary.getBundle().addAsset(asset);\n\t}\n\n\t/**\n\t * Short-hand for removeAsset() method on default asset library bundle.\n\t *\n\t * @param asset The asset which should be removed from the library.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAsset()\n\t */\n\tpublic static removeAsset(asset:IAsset, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAsset(asset, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAssetByName() method on default asset library bundle.\n\t *\n\t * @param name The name of the asset to be removed.\n\t * @param ns The namespace to which the desired asset belongs.\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAssetByName()\n\t */\n\tpublic static removeAssetByName(name:string, ns:string = null, dispose:boolean = true):IAsset\n\t{\n\t\treturn AssetLibrary.getBundle().removeAssetByName(name, ns, dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeAllAssets() method on default asset library bundle.\n\t *\n\t * @param dispose Defines whether the assets should also be disposed.\n\t *\n\t * @see AssetLibraryBundle.removeAllAssets()\n\t */\n\tpublic static removeAllAssets(dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeAllAssets(dispose);\n\t}\n\n\t/**\n\t * Short-hand for removeNamespaceAssets() method on default asset library bundle.\n\t *\n\t * @see AssetLibraryBundle.removeNamespaceAssets()\n\t */\n\tpublic static removeNamespaceAssets(ns:string = null, dispose:boolean = true)\n\t{\n\t\tAssetLibrary.getBundle().removeNamespaceAssets(ns, dispose);\n\t}\n}\n\nexport default AssetLibrary;",
    "/**\n * Enumaration class for precedence when resolving naming conflicts in the library.\n *\n * @see away.library.AssetLibrary.conflictPrecedence\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategy\n */\nclass ConflictPrecedence\n{\n\t/**\n\t * Signals that in a conflict, the previous owner of the conflicting name\n\t * should be favored (and keep it's name) and that the newly renamed asset\n\t * is reverted to a non-conflicting name.\n\t */\n\tpublic static FAVOR_OLD:string = 'favorOld';\n\n\t/**\n\t * Signales that in a conflict, the newly renamed asset is favored (and keeps\n\t * it's newly defined name) and that the previous owner of that name gets\n\t * renamed to a non-conflicting name.\n\t */\n\tpublic static FAVOR_NEW:string = 'favorNew';\n}\n\nexport default ConflictPrecedence;",
    "import ConflictPrecedence\t\tfrom \"awayjs-core/lib/library/ConflictPrecedence\";\nimport IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AbstractMethodError\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\n/**\n * Abstract base class for naming conflict resolution classes. Extend this to create a\n * strategy class which the asset library can use to resolve asset naming conflicts, or\n * use one of the bundled concrete strategy classes:\n *\n * <ul>\n *   <li>IgnoreConflictStrategy (ConflictStrategy.IGNORE)</li>\n *   <li>ErrorConflictStrategy (ConflictStrategy.THROW_ERROR)</li>\n *   <li>NumSuffixConflictStrategy (ConflictStrategy.APPEND_NUM_SUFFIX)</li>\n * </ul>\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.ConflictStrategy\n * @see away.library.IgnoreConflictStrategy\n * @see away.library.ErrorConflictStrategy\n * @see away.library.NumSuffixConflictStrategy\n */\nclass ConflictStrategyBase\n{\n\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Resolve a naming conflict between two assets. Must be implemented by concrete strategy\n\t * classes.\n\t */\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Create instance of this conflict strategy. Used internally by the AssetLibrary to\n\t * make sure the same strategy instance is not used in all AssetLibrary instances, which\n\t * would break any state caching that happens inside the strategy class.\n\t */\n\tpublic create():ConflictStrategyBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Provided as a convenience method for all conflict strategy classes, as a way to finalize\n\t * the conflict resolution by applying the new names and dispatching the correct events.\n\t */\n\tpublic _pUpdateNames(ns:string, nonConflictingName:string, oldAsset:IAsset, newAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar loser_prev_name:string;\n\t\tvar winner:IAsset;\n\t\tvar loser:IAsset;\n\n\t\twinner = (precedence === ConflictPrecedence.FAVOR_NEW)? newAsset : oldAsset;\n\t\tloser = (precedence === ConflictPrecedence.FAVOR_NEW)? oldAsset : newAsset;\n\n\t\tloser_prev_name = loser.name;\n\n\t\tassetsDictionary[winner.name] = winner;\n\t\tassetsDictionary[nonConflictingName] = loser;\n\t\tloser.resetAssetPath(nonConflictingName, ns, false);\n\n\t\tloser.dispatchEvent(new AssetEvent(AssetEvent.ASSET_CONFLICT_RESOLVED, loser, loser_prev_name));\n\t}\n}\n\nexport default ConflictStrategyBase;",
    "import ConflictStrategyBase\t\t\tfrom \"awayjs-core/lib/library/ConflictStrategyBase\";\nimport ErrorConflictStrategy\t\tfrom \"awayjs-core/lib/library/ErrorConflictStrategy\";\nimport IgnoreConflictStrategy\t\tfrom \"awayjs-core/lib/library/IgnoreConflictStrategy\";\nimport NumSuffixConflictStrategy\tfrom \"awayjs-core/lib/library/NumSuffixConflictStrategy\";\n\n/**\n * Enumeration class for bundled conflict strategies. Set one of these values (or an\n * instance of a self-defined sub-class of ConflictStrategyBase) to the conflictStrategy\n * property on an AssetLibrary to define how that library resolves naming conflicts.\n *\n * The value of the <code>AssetLibrary.conflictPrecedence</code> property defines which\n * of the conflicting assets will get to keep it's name, and which is renamed (if any.)\n *\n * @see away.library.AssetLibrary.conflictStrategy\n * @see away.library.naming.ConflictStrategyBase\n */\nclass ConflictStrategy\n{\n\t/**\n\t * Specifies that in case of a naming conflict, one of the assets will be renamed and\n\t * a numeric suffix appended to the base name.\n\t */\n\tpublic static APPEND_NUM_SUFFIX:ConflictStrategyBase = new NumSuffixConflictStrategy();\n\n\t/**\n\t * Specifies that naming conflicts should be ignored. This is not recommended in most\n\t * cases, unless it can be 100% guaranteed that the application does not cause naming\n\t * conflicts in the library (i.e. when an app-level system is in place to prevent this.)\n\t */\n\tpublic static IGNORE:ConflictStrategyBase = new IgnoreConflictStrategy();\n\n\t/**\n\t * Specifies that an error should be thrown if a naming conflict is discovered. Use this\n\t * to be 100% sure that naming conflicts never occur unnoticed, and when it's undesirable\n\t * to have the library automatically rename assets to avoid such conflicts.\n\t */\n\tpublic static THROW_ERROR:ConflictStrategyBase = new ErrorConflictStrategy();\n\n\tconstructor(include?:ConflictStrategyBase)\n\t{\n\t\t//TODO: find out why typescript d.ts files do not include this class\n\t}\n}\n\nexport default ConflictStrategy;",
    "import ConflictStrategyBase\t\tfrom \"awayjs-core/lib/library/ConflictStrategyBase\";\nimport IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport ErrorBase\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\nclass ErrorConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tthrow new ErrorBase('Asset name collision while AssetLibrary.namingStrategy set to AssetLibrary.THROW_ERROR. Asset path: ' + changedAsset.assetFullPath);\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new ErrorConflictStrategy();\n\t}\n}\n\nexport default ErrorConflictStrategy;",
    "class IDUtil\n{\n\t/**\n\t *  @private\n\t *  Char codes for 0123456789ABCDEF\n\t */\n\tprivate static ALPHA_CHAR_CODES = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];\n\n\t/**\n\t *  Generates a UID (unique identifier) based on ActionScript's\n\t *  pseudo-random number generator and the current time.\n\t *\n\t *  <p>The UID has the form\n\t *  <code>\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"</code>\n\t *  where X is a hexadecimal digit (0-9, A-F).</p>\n\t *\n\t *  <p>This UID will not be truly globally unique; but it is the best\n\t *  we can do without player support for UID generation.</p>\n\t *\n\t *  @return The newly-generated UID.\n\t *\n\t *  @langversion 3.0\n\t *  @playerversion Flash 9\n\t *  @playerversion AIR 1.1\n\t *  @productversion Flex 3\n\t */\n\tpublic static createUID():string\n\t{\n\t\tvar uid = new Array(36);\n\t\tvar index:number = 0;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\t\tfor (j = 0; j < 4; j++)\n\t\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\t\t}\n\n\t\tuid[index++] = 45; // charCode for \"-\"\n\n\t\tvar time:number = new Date().getTime();\n\t\t// Note: time is the number of milliseconds since 1970,\n\t\t// which is currently more than one trillion.\n\t\t// We use the low 8 hex digits of this number in the UID.\n\t\t// Just in case the system clock has been reset to\n\t\t// Jan 1-4, 1970 (in which case this number could have only\n\t\t// 1-7 hex digits), we pad on the left with 7 zeros\n\t\t// before taking the low digits.\n\t\tvar timeString:string = (\"0000000\" + time.toString(16).toUpperCase()).substr(-8);\n\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tuid[index++] = timeString.charCodeAt(i);\n\n\t\tfor (i = 0; i < 4; i++)\n\t\t\tuid[index++] = IDUtil.ALPHA_CHAR_CODES[Math.floor(Math.random()*16)];\n\n\t\treturn String.fromCharCode.apply(null, uid);\n\t}\n\n\t/**\n\t * Returns the decimal representation of a hex digit.\n\t * @private\n\n\t private static getDigit(hex:string):number\n\t {\n\t\tswitch (hex) {\n\t\t\tcase \"A\":\n\t\t\tcase \"a\":\n\t\t\t\treturn 10;\n\t\t\tcase \"B\":\n\t\t\tcase \"b\":\n\t\t\t\treturn 11;\n\t\t\tcase \"C\":\n\t\t\tcase \"c\":\n\t\t\t\treturn 12;\n\t\t\tcase \"D\":\n\t\t\tcase \"d\":\n\t\t\t\treturn 13;\n\t\t\tcase \"E\":\n\t\t\tcase \"e\":\n\t\t\t\treturn 14;\n\t\t\tcase \"F\":\n\t\t\tcase \"f\":\n\t\t\t\treturn 15;\n\t\t\tdefault:\n\t\t\t\treturn new uint(hex);\n\t\t}\n\t}\n\t */\n\n}\n\nexport default IDUtil;",
    "import ConflictStrategyBase\t\tfrom \"awayjs-core/lib/library/ConflictStrategyBase\";\nimport IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nclass IgnoreConflictStrategy extends ConflictStrategyBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\t// Do nothing, ignore the fact that there is a conflict.\n\t\treturn;\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new IgnoreConflictStrategy();\n\t}\n}\n\nexport default IgnoreConflictStrategy;",
    "class LoaderContext\n{\n\tpublic static UNDEFINED:number = 0;\n\tpublic static SINGLEPASS_MATERIALS:number = 1;\n\tpublic static MULTIPASS_MATERIALS:number = 2;\n\n\tprivate _includeDependencies:boolean;\n\tprivate _dependencyBaseUrl:string;\n\tprivate _embeddedDataByUrl:Object;\n\tprivate _remappedUrls:Object;\n\tprivate _materialMode:number;\n\n\tprivate _overrideAbsPath:boolean;\n\tprivate _overrideFullUrls:boolean;\n\n\t/**\n\t * LoaderContext provides configuration for the Loader load() and parse() operations.\n\t * Use it to configure how (and if) dependencies are loaded, or to map dependency URLs to\n\t * embedded data.\n\t *\n\t * @see away.loading.Loader\n\t */\n\tconstructor(includeDependencies:boolean = true, dependencyBaseUrl:string = null)\n\t{\n\t\tthis._includeDependencies = includeDependencies;\n\t\tthis._dependencyBaseUrl = dependencyBaseUrl || '';\n\t\tthis._embeddedDataByUrl = {};\n\t\tthis._remappedUrls = {};\n\t\tthis._materialMode = LoaderContext.UNDEFINED;\n\t}\n\n\t/**\n\t * Defines whether dependencies (all files except the one at the URL given to the load() or\n\t * parseData() operations) should be automatically loaded. Defaults to true.\n\t */\n\tpublic get includeDependencies():boolean\n\t{\n\t\treturn this._includeDependencies;\n\t}\n\n\tpublic set includeDependencies(val:boolean)\n\t{\n\t\tthis._includeDependencies = val;\n\t}\n\n\t/**\n\t * MaterialMode defines, if the Parser should create SinglePass or MultiPass Materials\n\t * Options:\n\t * 0 (Default / undefined) - All Parsers will create SinglePassMaterials, but the AWD2.1parser will create Materials as they are defined in the file\n\t * 1 (Force SinglePass) - All Parsers create SinglePassMaterials\n\t * 2 (Force MultiPass) - All Parsers will create MultiPassMaterials\n\t *\n\t */\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic set materialMode(materialMode:number)\n\t{\n\t\tthis._materialMode = materialMode;\n\t}\n\n\t/**\n\t * A base URL that will be prepended to all relative dependency URLs found in a loaded resource.\n\t * Absolute paths will not be affected by the value of this property.\n\t */\n\tpublic get dependencyBaseUrl():string\n\t{\n\t\treturn this._dependencyBaseUrl;\n\t}\n\n\tpublic set dependencyBaseUrl(val:string)\n\t{\n\t\tthis._dependencyBaseUrl = val;\n\t}\n\n\t/**\n\t * Defines whether absolute paths (defined as paths that begin with a \"/\") should be overridden\n\t * with the dependencyBaseUrl defined in this context. If this is true, and the base path is\n\t * \"base\", /path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideAbsolutePaths():boolean\n\t{\n\t\treturn this._overrideAbsPath;\n\t}\n\n\tpublic set overrideAbsolutePaths(val:boolean)\n\t{\n\t\tthis._overrideAbsPath = val;\n\t}\n\n\t/**\n\t * Defines whether \"full\" URLs (defined as a URL that includes a scheme, e.g. http://) should be\n\t * overridden with the dependencyBaseUrl defined in this context. If this is true, and the base\n\t * path is \"base\", http://example.com/path/to/asset.jpg will be resolved as base/path/to/asset.jpg.\n\t */\n\tpublic get overrideFullURLs():boolean\n\t{\n\t\treturn this._overrideFullUrls;\n\t}\n\n\tpublic set overrideFullURLs(val:boolean)\n\t{\n\t\tthis._overrideFullUrls = val;\n\t}\n\n\t/**\n\t * Map a URL to another URL, so that files that are referred to by the original URL will instead\n\t * be loaded from the new URL. Use this when your file structure does not match the one that is\n\t * expected by the loaded file.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param newUrl The URL from which away.should load the resource instead.\n\t *\n\t * @see mapUrlToData()\n\t */\n\tpublic mapUrl(originalUrl:string, newUrl:string)\n\t{\n\t\tthis._remappedUrls[originalUrl] = newUrl;\n\t}\n\n\t/**\n\t * Map a URL to embedded data, so that instead of trying to load a dependency from the URL at\n\t * which it's referenced, the dependency data will be retrieved straight from the memory instead.\n\t *\n\t * @param originalUrl The original URL which is referenced in the loaded resource.\n\t * @param data The embedded data. Can be ByteArray or a class which can be used to create a bytearray.\n\t */\n\tpublic mapUrlToData(originalUrl:string, data:any)\n\t{\n\t\tthis._embeddedDataByUrl[originalUrl] = data;\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether embedded data has been mapped to a particular URL.\n\t */\n\tpublic _iHasDataForUrl(url:string):boolean\n\t{\n\t\treturn this._embeddedDataByUrl.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns embedded data for a particular URL.\n\t */\n\tpublic _iGetDataForUrl(url:string):any\n\t{\n\t\treturn this._embeddedDataByUrl[url];\n\t}\n\n\t/**\n\t * @private\n\t * Defines whether a replacement URL has been mapped to a particular URL.\n\t */\n\tpublic _iHasMappingForUrl(url:string):boolean\n\t{\n\t\treturn this._remappedUrls.hasOwnProperty(url);\n\t}\n\n\t/**\n\t * @private\n\t * Returns new (replacement) URL for a particular original URL.\n\t */\n\tpublic _iGetRemappedUrl(originalUrl:string):string\n\t{\n\t\treturn this._remappedUrls[originalUrl];\n\t}\n}\n\nexport default LoaderContext;",
    "import EventDispatcher\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport Loader\t\t\t\t\tfrom \"awayjs-core/lib/library/Loader\";\nimport AssetBase\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport ByteArray\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:AssetBase;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():AssetBase\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport default LoaderInfo;",
    "import LoaderContext\t\t\tfrom \"awayjs-core/lib/library/LoaderContext\";\nimport LoaderInfo\t\t\t\tfrom \"awayjs-core/lib/library/LoaderInfo\";\nimport URLLoader\t\t\t\tfrom \"awayjs-core/lib/net/URLLoader\";\nimport URLLoaderDataFormat\t\tfrom \"awayjs-core/lib/net/URLLoaderDataFormat\";\nimport URLRequest\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\nimport AssetEvent\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport EventDispatcher\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport URLLoaderEvent\t\t\tfrom \"awayjs-core/lib/events/URLLoaderEvent\";\nimport LoaderEvent\t\t\t\tfrom \"awayjs-core/lib/events/LoaderEvent\";\nimport ParserEvent\t\t\t\tfrom \"awayjs-core/lib/events/ParserEvent\";\nimport ParserBase\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\nimport ResourceDependency\t\tfrom \"awayjs-core/lib/parsers/ResourceDependency\";\n\n\n\n/**\n * Dispatched when any asset finishes parsing. Also see specific events for each\n * individual asset type (meshes, materials et c.)\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"assetComplete\", type=\"away3d.events.AssetEvent\")]\n\n\n/**\n * Dispatched when a full resource (including dependencies) finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"resourceComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when a single dependency (which may be the main file of a resource)\n * finishes loading.\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"dependencyComplete\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during loading. I\n *\n * @eventType away.events.LoaderEvent\n */\n//[Event(name=\"loadError\", type=\"away3d.events.LoaderEvent\")]\n\n\n/**\n * Dispatched when an error occurs during parsing.\n *\n * @eventType away.events.ParserEvent\n */\n//[Event(name=\"parseError\", type=\"away3d.events.ParserEvent\")]\n\n/**\n * Dispatched when an image asset dimensions are not a power of 2\n *\n * @eventType away.events.AssetEvent\n */\n//[Event(name=\"textureSizeError\", type=\"away3d.events.AssetEvent\")]\n\n/**\n * Loader can load any file format that away.supports (or for which a third-party parser\n * has been plugged in) and it's dependencies. Events are dispatched when assets are encountered\n * and for when the resource (or it's dependencies) have been loaded.\n *\n * The Loader will not make assets available in any other way than through the dispatched\n * events. To store assets and make them available at any point from any module in an application,\n * use the AssetLibrary to load and manage assets.\n *\n * @see away.library.AssetLibrary\n */\nclass Loader extends EventDispatcher\n{\n\tprivate _context:LoaderContext;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _uri:string;\n\tprivate _materialMode:number;\n\n\tprivate _errorHandlers:Array<(event:URLLoaderEvent) => boolean>;\n\tprivate _parseErrorHandlers:Array<(event:ParserEvent) => boolean>;\n\n\tprivate _stack:Array<ResourceDependency>;\n\tprivate _baseDependency:ResourceDependency;\n\tprivate _currentDependency:ResourceDependency;\n\tprivate _namespace:string;\n\n\tprivate _onReadyForDependenciesDelegate:(event:ParserEvent) => void;\n\tprivate _onParseCompleteDelegate:(event:ParserEvent) => void;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => void;\n\tprivate _onLoadCompleteDelegate:(event:URLLoaderEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\n\t// Image parser only parser that is added by default, to save file size.\n\tprivate static _parsers:Array<any> = new Array<any>();\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parser The parser class to enable.\n\t *\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parser)\n\t{\n\t\tif (Loader._parsers.indexOf(parser) < 0)\n\t\t\tLoader._parsers.push(parser);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * Loader can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parsers A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parsers:Array<Object>)\n\t{\n\t\tfor (var c:number = 0; c < parsers.length; c++)\n\t\t\tLoader.enableParser(parsers[ c ]);\n\t}\n\n\t/**\n\t * Returns the base dependency of the loader\n\t */\n\tpublic get baseDependency():ResourceDependency\n\t{\n\t\treturn this._baseDependency;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * Create a new ResourceLoadSession object.\n\t */\n\tconstructor(materialMode:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = materialMode;\n\n\t\tthis._stack = new Array<ResourceDependency>();\n\t\tthis._errorHandlers = new Array<(event:URLLoaderEvent) => boolean>();\n\t\tthis._parseErrorHandlers = new Array<(event:ParserEvent) => boolean>();\n\n\t\tthis._onReadyForDependenciesDelegate = (event:ParserEvent) => this.onReadyForDependencies(event);\n\t\tthis._onParseCompleteDelegate = (event:ParserEvent) => this.onParseComplete(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t\tthis._onLoadCompleteDelegate = (event:URLLoaderEvent) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Loads a file and (optionally) all of its dependencies.\n\t *\n\t * @param req The URLRequest object containing the URL of the file to be loaded.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n\t */\n\tpublic load(req:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._uri = req.url = req.url.replace(/\\\\/g, \"/\");\n\t\tthis._context = context;\n\t\tthis._namespace = ns;\n\n\t\tthis._baseDependency = new ResourceDependency('', req, null, parser, null);\n\t\tthis.retrieveDependency(this._baseDependency);\n\t}\n\n\t/**\n\t * Loads a resource from already loaded data.\n\t *\n\t * @param data The data object containing all resource information.\n\t * @param context An optional context object providing additional parameters for loading\n\t * @param ns An optional namespace string under which the file is to be loaded, allowing the differentiation of two resources with identical assets\n\t * @param parser An optional parser object for translating the loaded data into a usable resource. If not provided, Loader will attempt to auto-detect the file type.\n\t */\n\tpublic loadData(data:any, id:string, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._uri = id;\n\t\tthis._context = context;\n\t\tthis._namespace = ns;\n\n\t\tthis._baseDependency = new ResourceDependency(id, null, data, parser, null);\n\t\tthis.retrieveDependency(this._baseDependency);\n\t}\n\n\t/**\n\t * Recursively retrieves the next to-be-loaded and parsed dependency on the stack, or pops the list off the\n\t * stack when complete and continues on the top set.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveNext(parser:ParserBase = null)\n\t{\n\t\tif (this._currentDependency.dependencies.length) {\n\n\t\t\tvar next:ResourceDependency = this._currentDependency.dependencies.pop();\n\n\t\t\tthis._stack.push(this._currentDependency);\n\t\t\tthis.retrieveDependency(next);\n\n\t\t} else if (this._currentDependency.parser && this._currentDependency.parser.parsingPaused) {\n\n\t\t\tthis._currentDependency.parser._iResumeParsing();\n\t\t\tthis._stack.pop();\n\n\t\t} else if (this._stack.length) {\n\n\t\t\tvar prev:ResourceDependency = this._currentDependency;\n\n\t\t\tthis._currentDependency = this._stack.pop();\n\n\t\t\tif (prev._iSuccess)\n\t\t\t\tprev.resolve();\n\n\t\t\tthis.retrieveNext(parser);\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new LoaderEvent(LoaderEvent.LOAD_COMPLETE, this._uri, this._baseDependency.parser.content, this._baseDependency.assets));\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a single dependency.\n\t * @param parser The parser that will translate the data into a usable resource.\n\t */\n\tprivate retrieveDependency(dependency:ResourceDependency)\n\t{\n\t\tvar data:any;\n\n\t\tif (this._context && this._context.materialMode != 0)\n\t\t\tthis._materialMode = this._context.materialMode;\n\n\t\tthis._currentDependency = dependency;\n\n\t\tdependency._iLoader = new URLLoader();\n\n\t\tthis.addEventListeners(dependency._iLoader);\n\n\t\t// Get already loaded (or mapped) data if available\n\t\tdata = dependency.data;\n\n\t\tif (this._context && dependency.request && this._context._iHasDataForUrl(dependency.request.url))\n\t\t\tdata = this._context._iGetDataForUrl(dependency.request.url);\n\n\t\tif (data) {\n\t\t\tif (data.constructor === Function)\n\t\t\t\tdata = new data();\n\n\t\t\tdependency._iSetData(data);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// No need to parse. The parent parser is expecting this\n\t\t\t\t// to be raw data so it can be passed directly.\n\t\t\t\tdependency.resolve();\n\n\t\t\t\t// Move on to next dependency\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\tthis.parseDependency(dependency);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// Resolve URL and start loading\n\t\t\tdependency.request.url = this.resolveDependencyUrl(dependency);\n\n\t\t\tif (dependency.retrieveAsRawData) {\n\t\t\t\t// Always use binary for raw data loading\n\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t} else {\n\n\t\t\t\tif (!dependency.parser)\n\t\t\t\t\tdependency._iSetParser(this.getParserFromSuffix(dependency.request.url));\n\n\t\t\t\tif (dependency.parser) {\n\t\t\t\t\tdependency._iLoader.dataFormat = dependency.parser.dataFormat;\n\t\t\t\t} else {\n\t\t\t\t\t// Always use BINARY for unknown file formats. The thorough\n\t\t\t\t\t// file type check will determine format after load, and if\n\t\t\t\t\t// binary, a text load will have broken the file data.\n\t\t\t\t\tdependency._iLoader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdependency._iLoader.load(dependency.request);\n\t\t}\n\t}\n\n\tprivate joinUrl(base:string, end:string):string\n\t{\n\t\tif (end.charAt(0) == '/' || end.charAt(0) == '\\\\')\n\t\t\tend = end.substr(1);\n\n\t\tif (end.charAt(0) == '.')\n\t\t\tend = end.substr(2);\n\n\t\tif (base.length == 0)\n\t\t\treturn end;\n\n\t\tif (base.charAt(base.length - 1) == '/' || base.charAt(base.length - 1) == '\\\\')\n\t\t\tbase = base.substr(0, base.length - 1);\n\n\t\treturn base.concat('/', end);\n\n\t}\n\n\tprivate resolveDependencyUrl(dependency:ResourceDependency):string\n\t{\n\t\tvar scheme_re:RegExp;\n\t\tvar base:string;\n\t\tvar url:string = dependency.request.url;\n\n\t\t// Has the user re-mapped this URL?\n\t\tif (this._context && this._context._iHasMappingForUrl(url))\n\t\t\treturn this._context._iGetRemappedUrl(url);\n\n\t\t// This is the \"base\" dependency, i.e. the actual requested asset.\n\t\t// We will not try to resolve this since the user can probably be\n\t\t// thrusted to know this URL better than our automatic resolver. :)\n\t\tif (url == this._uri)\n\t\t\treturn url;\n\n\n\t\t// Absolute URL? Check if starts with slash or a URL\n\t\t// scheme definition (e.g. ftp://, http://, file://)\n\t\tscheme_re = new RegExp('/^[a-zA-Z]{3,4}:\\/\\//');\n\n\t\tif (url.charAt(0) == '/') {\n\t\t\tif (this._context && this._context.overrideAbsolutePaths)\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, url); else\n\t\t\t\treturn url;\n\t\t} else if (scheme_re.test(url)) {\n\t\t\t// If overriding full URLs, get rid of scheme (e.g. \"http://\")\n\t\t\t// and replace with the dependencyBaseUrl defined by user.\n\t\t\tif (this._context && this._context.overrideFullURLs) {\n\n\t\t\t\tvar noscheme_url : string  = url.replace( scheme_re , '' );//url['replace'](scheme_re);\n\t\t\t\treturn this.joinUrl(this._context.dependencyBaseUrl, <string> noscheme_url);\n\t\t\t}\n\t\t}\n\n\t\t// Since not absolute, just get rid of base file name to find it's\n\t\t// folder and then concatenate dynamic URL\n\t\tif (this._context && this._context.dependencyBaseUrl) {\n\t\t\tbase = this._context.dependencyBaseUrl;\n\t\t\treturn this.joinUrl(base, url);\n\t\t} else {\n\t\t\tbase = this._uri.substring(0, this._uri.lastIndexOf('/') + 1);\n\t\t\treturn this.joinUrl(base, url);\n\t\t}\n\t}\n\n\tprivate retrieveParserDependencies()\n\t{\n\t\tif (!this._currentDependency)\n\t\t\treturn;\n\n\t\tvar parserDependancies = this._currentDependency.parser.dependencies;\n\t\tvar i:number, len:number = parserDependancies.length;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._currentDependency.dependencies[i] = parserDependancies[i];\n\n\t\t// Since more dependencies might be added eventually, empty this\n\t\t// list so that the same dependency isn't retrieved more than once.\n\t\tparserDependancies.length = 0;\n\n\t\tthis._stack.push(this._currentDependency);\n\n\t\tthis.retrieveNext();\n\t}\n\n\tprivate resolveParserDependencies()\n\t{\n\t\tthis._currentDependency._iSuccess = true;\n\n\t\t// Retrieve any last dependencies remaining on this parser, or\n\t\t// if none exists, just move on.\n\t\tif (this._currentDependency.parser && this._currentDependency.parser.dependencies.length && (!this._context || this._context.includeDependencies))//context may be null\n\t\t\tthis.retrieveParserDependencies();\n\t\telse\n\t\t\tthis.retrieveNext();\n\t}\n\n\t/**\n\t * Called when a single dependency loading failed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadError(event:URLLoaderEvent)\n\t{\n\t\tvar handled:boolean;\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\t\tvar loader:URLLoader = event.urlLoader;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when Loader does have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._errorHandlers.length;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = this._errorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\n\t\t\t//if (isDependency && ! event.isDefaultPrevented()) {\n\t\t\tif (isDependency) { // TODO: JS / AS3 Change - we don't have isDefaultPrevented - so will this work\n\n\t\t\t\tthis._currentDependency.resolveFailure();\n\t\t\t\tthis.retrieveNext();\n\n\t\t\t} else {\n\t\t\t\t// Either this was the base file (last left in the stack) or\n\t\t\t\t// default behavior was prevented by the handlers, and hence\n\t\t\t\t// there is nothing more to do than clean up and bail.\n\t\t\t\tthis.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Error event was not handled by listeners directly on Loader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error();\n\t\t}\n\t}\n\n\t/**\n\t * Called when a dependency parsing failed, and dispatches a <code>ParserEvent.PARSE_ERROR</code>\n\t * @param event\n\t */\n\tprivate onParseError(event:ParserEvent)\n\t{\n\t\tvar handled:boolean;\n\n\t\tvar isDependency:boolean = (this._currentDependency != this._baseDependency);\n\n\t\tvar loader:URLLoader = <URLLoader>event.target;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\thandled = true;\n\t\t} else {\n\t\t\t// TODO: Consider not doing this even when Loader does\n\t\t\t// have it's own LOAD_ERROR listener\n\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!handled)\n\t\t\t\t\thandled = this._parseErrorHandlers[i](event);\n\t\t}\n\n\t\tif (handled) {\n\t\t\tthis.retrieveNext();\n\t\t} else {\n\t\t\t// Error event was not handled by listeners directly on Loader or\n\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\tthrow new Error(event.message);\n\t\t}\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\t// Add loaded asset to list of assets retrieved as part\n\t\t// of the current dependency. This list will be inspected\n\t\t// by the parent parser when dependency is resolved\n\t\tif (this._currentDependency)\n\t\t\tthis._currentDependency.assets.push(event.asset);\n\n\t\tevent.asset.resetAssetPath(event.asset.name, this._namespace);\n\n\t\tif (!this._currentDependency.suppresAssetEvents)\n\t\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate onReadyForDependencies(event:ParserEvent)\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tif (this._context && !this._context.includeDependencies)\n\t\t\tparser._iResumeParsing();\n\t\telse\n\t\t\tthis.retrieveParserDependencies();\n\t}\n\n\t/**\n\t * Called when a single dependency was parsed, and pushes further dependencies onto the stack.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:URLLoaderEvent)\n\t{\n\t\tvar loader:URLLoader = event.urlLoader;\n\n\t\tthis.removeEventListeners(loader);\n\n\t\t// Resolve this dependency\n\t\tthis._currentDependency._iSetData(loader.data);\n\n\t\tif (this._currentDependency.retrieveAsRawData) {\n\t\t\t// No need to parse this data, which should be returned as is\n\t\t\tthis.resolveParserDependencies();\n\t\t} else {\n\t\t\tthis.parseDependency(this._currentDependency);\n\t\t}\n\t}\n\n\t/**\n\t * Called when parsing is complete.\n\t */\n\tprivate onParseComplete(event:ParserEvent):void\n\t{\n\t\tvar parser:ParserBase = <ParserBase> event.target;\n\n\t\tthis.resolveParserDependencies();//resolve in front of removing listeners to allow any remaining asset events to propagate\n\n\t\tparser.removeEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\tparser.removeEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tparser.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\t/**\n\t * Called when an image is too large or it's dimensions are not a power of 2\n\t * @param event\n\t */\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tevent.asset.name = this._currentDependency.resolveName(event.asset);\n\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tprivate addEventListeners(loader:URLLoader)\n\t{\n\t\tloader.addEventListener(URLLoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.addEventListener(URLLoaderEvent.LOAD_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tprivate removeEventListeners(loader:URLLoader)\n\t{\n\t\tloader.removeEventListener(URLLoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tloader.removeEventListener(URLLoaderEvent.LOAD_ERROR, this._onLoadErrorDelegate);\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis.dispose();\n\t}\n\n\tprivate dispose()\n\t{\n\t\tthis._errorHandlers = null;\n\t\tthis._parseErrorHandlers = null;\n\t\tthis._context = null;\n\t\tthis._stack = null;\n\n\t\tif (this._currentDependency && this._currentDependency._iLoader)\n\t\t\tthis.removeEventListeners(this._currentDependency._iLoader);\n\n\t\tthis._currentDependency = null;\n\n\t}\n\n\t/**\n\t * @private\n\t * This method is used by other loader classes (e.g. Loader3D and AssetLibraryBundle) to\n\t * add error event listeners to the Loader instance. This system is used instead of\n\t * the regular EventDispatcher system so that the AssetLibrary error handler can be sure\n\t * that if hasEventListener() returns true, it's client code that's listening for the\n\t * event. Secondly, functions added as error handler through this custom method are\n\t * expected to return a boolean value indicating whether the event was handled (i.e.\n\t * whether they in turn had any client code listening for the event.) If no handlers\n\t * return true, the Loader knows that the event wasn't handled and will throw an RTE.\n\t */\n\n\tpublic _iAddParseErrorHandler(handler)\n\t{\n\t\tif (this._parseErrorHandlers.indexOf(handler) < 0)\n\t\t\tthis._parseErrorHandlers.push(handler);\n\t}\n\n\tpublic _iAddErrorHandler(handler)\n\t{\n\t\tif (this._errorHandlers.indexOf(handler) < 0)\n\t\t\tthis._errorHandlers.push(handler);\n\t}\n\n\n\t/**\n\t * Guesses the parser to be used based on the file contents.\n\t * @param data The data to be parsed.\n\t * @param uri The url or id of the object to be parsed.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromData(data:any):ParserBase\n\t{\n\t\tvar len:number = Loader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--)\n\t\t\tif (Loader._parsers[i].supportsData(data))\n\t\t\t\treturn new Loader._parsers[i]();\n\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Initiates parsing of the loaded dependency.\n\t *\n\t * @param The dependency to be parsed.\n\t */\n\tprivate parseDependency(dependency:ResourceDependency):void\n\t{\n\t\tvar parser:ParserBase = dependency.parser;\n\n\t\t// If no parser has been defined, try to find one by letting\n\t\t// all plugged in parsers inspect the actual data.\n\t\tif (!parser)\n\t\t\tdependency._iSetParser(parser = this.getParserFromData(dependency.data));\n\n\t\tif (parser) {\n\t\t\tparser.addEventListener(ParserEvent.READY_FOR_DEPENDENCIES, this._onReadyForDependenciesDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_COMPLETE, this._onParseCompleteDelegate);\n\t\t\tparser.addEventListener(ParserEvent.PARSE_ERROR, this._onParseErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\t\tparser.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t\tif (dependency.request && dependency.request.url)\n\t\t\t\tparser._iFileName = dependency.request.url;\n\n\t\t\tparser.materialMode = this._materialMode;\n\n\t\t\tparser.parseAsync(dependency.data);\n\n\t\t} else {\n\t\t\tvar handled:boolean;\n\t\t\tvar message:string = \"No parser defined. To enable all parsers for auto-detection, use Parsers.enableAllBundled()\";\n\t\t\tvar event:ParserEvent = new ParserEvent(ParserEvent.PARSE_ERROR, message);\n\t\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\t\tthis.dispatchEvent(event);\n\t\t\t\thandled = true;\n\t\t\t} else {\n\t\t\t\t// TODO: Consider not doing this even when Loader does\n\t\t\t\t// have it's own LOAD_ERROR listener\n\t\t\t\tvar i:number, len:number = this._parseErrorHandlers.length;\n\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tif (!handled)\n\t\t\t\t\t\thandled = <boolean> this._parseErrorHandlers[i](event);\n\t\t\t}\n\n\t\t\tif (handled) {\n\t\t\t\tthis.retrieveNext();\n\t\t\t} else {\n\t\t\t\t// Error event was not handled by listeners directly on Loader or\n\t\t\t\t// on any of the subscribed loaders (in the list of error handlers.)\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Guesses the parser to be used based on the file extension.\n\t * @return An instance of the guessed parser.\n\t */\n\tprivate getParserFromSuffix(url:string):ParserBase\n\t{\n\t\t// Get rid of query string if any and extract extension\n\t\tvar base:string = (url.indexOf('?') > 0)? url.split('?')[0] : url;\n\t\tvar fileExtension:string = base.substr(base.lastIndexOf('.') + 1).toLowerCase();\n\n\t\tvar len:number = Loader._parsers.length;\n\n\t\t// go in reverse order to allow application override of default parser added in away.proper\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\n\t\t\tvar parserClass:any = Loader._parsers[i];\n\t\t\tif (parserClass.supportsType(fileExtension))\n\t\t\t\treturn new parserClass();\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport default Loader;",
    "import ConflictStrategyBase\t\tfrom \"awayjs-core/lib/library/ConflictStrategyBase\";\nimport IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nclass NumSuffixConflictStrategy extends ConflictStrategyBase\n{\n\tprivate _separator:string;\n\tprivate _next_suffix:Object;\n\n\tconstructor(separator:string = '.')\n\t{\n\t\tsuper();\n\n\t\tthis._separator = separator;\n\t\tthis._next_suffix = {};\n\t}\n\n\tpublic resolveConflict(changedAsset:IAsset, oldAsset:IAsset, assetsDictionary:Object, precedence:string)\n\t{\n\t\tvar orig:string;\n\t\tvar new_name:string;\n\t\tvar base:string;\n\t\tvar suffix:number;\n\n\t\torig = changedAsset.name;\n\n\t\tif (orig.indexOf(this._separator) >= 0) {\n\t\t\t// Name has an ocurrence of the separator, so get base name and suffix,\n\t\t\t// unless suffix is non-numerical, in which case revert to zero and\n\t\t\t// use entire name as base\n\t\t\tbase = orig.substring(0, orig.lastIndexOf(this._separator));\n\t\t\tsuffix = parseInt(orig.substring(base.length - 1));\n\n\t\t\tif (isNaN(suffix)) {\n\t\t\t\tbase = orig;\n\t\t\t\tsuffix = 0;\n\t\t\t}\n\n\t\t} else {\n\t\t\tbase = orig;\n\t\t\tsuffix = 0;\n\t\t}\n\n\t\tif (suffix == 0 && this._next_suffix.hasOwnProperty(base)) {\n\n\t\t\tsuffix = this._next_suffix[base];\n\n\t\t}\n\n\t\t// Find the first suffixed name that does\n\t\t// not collide with other names.\n\t\tdo {\n\n\t\t\tsuffix++;\n\n\t\t\tnew_name = base.concat(this._separator, suffix.toString());\n\n\t\t} while (assetsDictionary.hasOwnProperty(new_name));\n\n\t\tthis._next_suffix[ base ] = suffix;\n\t\tthis._pUpdateNames(oldAsset.assetNamespace, new_name, oldAsset, changedAsset, assetsDictionary, precedence);\n\n\t}\n\n\tpublic create():ConflictStrategyBase\n\t{\n\t\treturn new NumSuffixConflictStrategy(this._separator);\n\t}\n}\n\nexport default NumSuffixConflictStrategy;",
    "export {default as AbstractionBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\nexport {default as AssetBase}\t\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nexport {default as AssetLibrary}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetLibrary\";\nexport {default as AssetLibraryBundle}\t\t\t\tfrom \"awayjs-core/lib/library/AssetLibraryBundle\";\nexport {default as AssetLibraryIterator}\t\t\tfrom \"awayjs-core/lib/library/AssetLibraryIterator\";\nexport {default as ConflictPrecedence}\t\t\t\tfrom \"awayjs-core/lib/library/ConflictPrecedence\";\nexport {default as ConflictStrategy}\t\t\t\tfrom \"awayjs-core/lib/library/ConflictStrategy\";\nexport {default as ConflictStrategyBase}\t\t\tfrom \"awayjs-core/lib/library/ConflictStrategyBase\";\nexport {default as ErrorConflictStrategy}\t\t\tfrom \"awayjs-core/lib/library/ErrorConflictStrategy\";\nexport {default as IAbstractionPool}\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nexport {default as IAsset}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nexport {default as IAssetClass}\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nexport {default as IDUtil}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IDUtil\";\nexport {default as IgnoreConflictStrategy}\t\t\tfrom \"awayjs-core/lib/library/IgnoreConflictStrategy\";\nexport {default as Loader}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/Loader\";\nexport {default as LoaderContext}\t\t\t\t\tfrom \"awayjs-core/lib/library/LoaderContext\";\nexport {default as LoaderInfo}\t\t\t\t\t\tfrom \"awayjs-core/lib/library/LoaderInfo\";\nexport {default as NumSuffixConflictStrategy}\t\tfrom \"awayjs-core/lib/library/NumSuffixConflictStrategy\";",
    "\nclass AudioChannel\n{\n\tpublic static maxChannels:number = 16;\n\n\tpublic static _channels:Array<AudioChannel> = new Array<AudioChannel>();\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\n\tprivate static _audioCtx;\n\tprivate _audioCtx;\n\n\tprivate _gainNode;\n\n\tprivate _audio:HTMLAudioElement;\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._gainNode.gain.value;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tthis._gainNode.gain.value = value;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audioCtx = AudioChannel._audioCtx || (AudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode.connect(this._audioCtx.destination);\n\n\t\tthis._audio = new Audio();\n\t\tthis._audio.onended = (event) => this._onEnded(event);\n\t\tthis._audio[\"crossOrigin\"] = \"anonymous\";\n\n\t\tvar source = this._audioCtx.createMediaElementSource(this._audio);\n\t\tsource.connect(this._gainNode);\n\t}\n\t\n\tpublic play(url:string, offset:number = 0, loop:boolean = false)\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._audio.src = url;\n\t\tthis._audio.loop = loop;\n\t\tthis._audio.currentTime = offset;\n\t\tthis._audio.play();\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\n\tprivate _onEnded(event)\n\t{\n\t\tthis.stop();\n\t}\n}\n\nexport default AudioChannel;",
    "import StreamingAudioChannel\tfrom \"awayjs-core/lib/managers/StreamingAudioChannel\";\nimport WebAudioChannel\t\t\tfrom \"awayjs-core/lib/managers/WebAudioChannel\";\nimport IAudioChannel\t\t\tfrom \"awayjs-core/lib/managers/IAudioChannel\";\nimport IAudioChannelClass\t\tfrom \"awayjs-core/lib/managers/IAudioChannelClass\";\n\nclass AudioManager\n{\n\tpublic static getChannel(byteLength:number):IAudioChannel\n\t{\n\t\t//choose best audio channel by bytelength\n\t\tvar channelClass:IAudioChannelClass = (byteLength > 50000)? StreamingAudioChannel : WebAudioChannel;\n\n\t\tvar i:number = 0;\n\t\twhile(channelClass._channels[i] && channelClass._channels[i].isPlaying())\n\t\t\ti++;\n\n\t\tif (i == channelClass.maxChannels) {\n\t\t\t//pick the oldest channel to reuse, ignoring looping channels\n\t\t\tvar channel:IAudioChannel;\n\t\t\tvar len:number = channelClass._channels.length;\n\t\t\tfor (var j:number = 0; j < len; j++) {\n\t\t\t\tchannel = channelClass._channels[j];\n\t\t\t\tif (!channel.isLooping() && !channel.isDecoding()) {\n\t\t\t\t\tchannelClass._channels.push(channelClass._channels.splice(j, 1)[0]);\n\t\t\t\t\tchannel.stop();\n\t\t\t\t\treturn channel;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//do not return channel until one is freed up\n\t\t\treturn null;\n\t\t}\n\n\t\treturn channelClass._channels[i] || (channelClass._channels[i] = new channelClass());\n\t}\n\n\n}\n\nexport default AudioManager;",
    "import ParserUtils\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserUtils\";\n\nclass EventAudioChannel\n{\n\tpublic static maxChannels:number = 4;\n\n\tpublic static _channels:Array<EventAudioChannel> = new Array<EventAudioChannel>();\n\n\tpublic static _base64Cache:Object = new Object();\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _volume:number;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\t\n\tprivate _audio:HTMLAudioElement;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime - this._startTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._audio.volume = this._volume;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audio = new Audio();\n\t\tthis._audio.ontimeupdate = (event) => this._onTimeUpdate(event);\n\t}\n\t\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false, id:number = 0)\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._audio.src = EventAudioChannel._base64Cache[id] || (EventAudioChannel._base64Cache[id] = ParserUtils.arrayBufferToBase64(buffer, \"audio/mp3\"));\n\t\tthis._audio.loop = this._isLooping;\n\n\t\tthis._audio.currentTime = offset;\n\t\tthis._audio.play();\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\n\tprivate _onTimeUpdate(event)\n\t{\n\t\t//TODO: more accurate end detection\n\t\tif (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\n\t\t\tthis.stop();\n\t}\n}\n\nexport default EventAudioChannel;",
    "\nclass StreamingAudioChannel\n{\n\tpublic static maxChannels:number = 4;\n\n\tpublic static _channels:Array<StreamingAudioChannel> = new Array<StreamingAudioChannel>();\n\n\tprivate _sourceOpenDelegate:(event) => void;\n\tprivate _updateEndDelegate:(event) => void;\n\tprivate _sourceBuffer:SourceBuffer;\n\tprivate _sourceDirty:boolean;\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _isQueuing:boolean;\n\tprivate _isOpening:boolean;\n\tprivate _buffer:ArrayBuffer;\n\tprivate _offset:number;\n\tprivate _volume:number;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\t\n\tprivate _audio:HTMLAudioElement;\n\t\n\tprivate _mediaSource:MediaSource;\n\tprivate _urlString:string;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audio.currentTime - this._startTime;\n\t}\n\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._audio.volume = this._volume;\n\t}\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._sourceOpenDelegate = (event) => this._sourceOpen(event);\n\t\tthis._updateEndDelegate = (event) => this._updateEnd(event);\n\n\t\tthis._audio = new Audio();\n\t\tthis._audio.ontimeupdate = (event) => this._onTimeUpdate(event);\n\n\t\tthis._updateSource();\n\n\t}\n\t\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false)\n\t{\n\t\tthis._isPlaying = true;\n\n\t\tif (this._isLooping || this._isLooping != loop) {\n\t\t\tthis._isLooping = loop;\n\t\t\tthis._sourceDirty = true;\n\t\t}\n\n\t\tif (this._sourceDirty)\n\t\t\tthis._updateSource();\n\n\t\tthis._buffer = buffer;\n\t\tthis._offset = offset;\n\n\t\tif (!this._isQueuing && !this._isOpening)\n\t\t\tthis._queueBuffer();\n\t}\n\n\tpublic stop()\n\t{\n\t\tthis._audio.pause();\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t}\n\t\n\tprivate _sourceOpen(event)\n\t{\n\t\tthis._isOpening = false;\n\n\t\t//TODO: find out how in the name of all that is holy how this can be executed more than once on a MediaSource object\n\t\tif (this._mediaSource.activeSourceBuffers.length) {\n\t\t\tconsole.log(\"ERR: double sourceopen event called\")\n\t\t\treturn;\n\t\t}\n\n\t\tthis._sourceBuffer = this._mediaSource.addSourceBuffer('audio/mpeg');\n\t\tthis._sourceBuffer.addEventListener(\"updateend\", this._updateEndDelegate);\n\n\t\tif (this._isPlaying)\n\t\t\tthis._queueBuffer();\n\t}\n\n\tprivate _queueBuffer()\n\t{\n\t\tthis._isQueuing = true;\n\n\t\tthis._startTime = this._sourceBuffer.timestampOffset;\n\t\tthis._sourceBuffer.appendBuffer(this._buffer);\n\t}\n\n\tprivate _updateEnd(event)\n\t{\n\t\tthis._isQueuing = false;\n\n\t\tif (this._isLooping)\n\t\t\tthis._mediaSource.endOfStream();\n\n\t\tthis._duration = this._sourceBuffer.timestampOffset - this._startTime;\n\n\t\tthis._audio.currentTime = this._startTime + this._offset;\n\t\tthis._audio.play();\n\t}\n\n\tprivate _onTimeUpdate(event)\n\t{\n\t\t//TODO: more accurate end detection\n\t\tif (!this._isLooping && this._duration < this._audio.currentTime - this._startTime + 0.1)\n\t\t\tthis.stop();\n\t}\n\n\tprivate _updateSource()\n\t{\n\t\tif(this._mediaSource)\n\t\t\tthis._disposeSource();\n\n\t\tthis._isQueuing = false;\n\t\tthis._isOpening = true;\n\n\t\tthis._mediaSource = new MediaSource();\n\t\tthis._mediaSource.addEventListener(\"sourceopen\", this._sourceOpenDelegate);\n\t\tthis._urlString = URL.createObjectURL(this._mediaSource);\n\t\tthis._audio.src = this._urlString;\n\t\tthis._audio.loop = this._isLooping;\n\n\t\tthis._sourceDirty = false;\n\t}\n\n\tprivate _disposeSource()\n\t{\n\t\tif (!this._isOpening) {\n\t\t\tif (this._sourceBuffer.timestampOffset)\n\t\t\t\tthis._sourceBuffer.remove(0, this._sourceBuffer.timestampOffset);\n\n\t\t\tthis._sourceBuffer.removeEventListener(\"updateend\", this._updateEndDelegate);\n\t\t\tthis._mediaSource.removeSourceBuffer(this._sourceBuffer);\n\t\t\tdelete this._sourceBuffer;\n\t\t\tthis._sourceBuffer = null;\n\t\t}\n\n\t\tthis._mediaSource.removeEventListener(\"sourceopen\", this._sourceOpenDelegate);\n\t\tURL.revokeObjectURL(this._urlString);\n\t\tdelete this._mediaSource;\n\t\tthis._mediaSource = null;\n\t}\n}\n\nexport default StreamingAudioChannel;",
    "\nclass WebAudioChannel\n{\n\tpublic static maxChannels:number = 64;\n\n\tpublic static _channels:Array<WebAudioChannel> = new Array<WebAudioChannel>();\n\n\tpublic static _decodeCache:Object = new Object();\n\tpublic static _errorCache:Object = new Object();\n\n\tprivate static _audioCtx;\n\tprivate _audioCtx;\n\n\tprivate _gainNode;\n\tprivate _source;\n\n\tprivate _isPlaying:boolean = false;\n\tprivate _isLooping:boolean = false;\n\tprivate _isDecoding:boolean = false;\n\tprivate _currentTime:number;\n\tprivate _id:number;\n\tprivate _volume:number = 1;\n\tprivate _startTime:number = 0;\n\tprivate _duration:number;\n\n\tprivate _onEndedDelegate : (event:any) => void;\n\n\tpublic get duration():number\n\t{\n\t\treturn this._duration;\n\t}\n\n\tpublic get currentTime():number\n\t{\n\t\treturn this._audioCtx.currentTime - this._startTime;\n\t}\n\n\tpublic get volume():number\n\t{\n\t\treturn this._volume;\n\t}\n\n\tpublic set volume(value:number)\n\t{\n\t\tif (this._volume == value)\n\t\t\treturn;\n\n\t\tthis._volume = value;\n\n\t\tthis._gainNode.gain.value = this._volume;\n\t}\n\n\n\tpublic isPlaying():boolean\n\t{\n\t\treturn this._isPlaying;\n\t}\n\n\tpublic isLooping():boolean\n\t{\n\t\treturn this._isLooping;\n\t}\n\n\tpublic isDecoding():boolean\n\t{\n\t\treturn this._isDecoding;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis._audioCtx = WebAudioChannel._audioCtx || (WebAudioChannel._audioCtx = new (window[\"AudioContext\"] || window[\"webkitAudioContext\"])());\n\n\t\tthis._gainNode = this._audioCtx.createGain();\n\t\tthis._gainNode.gain.value = this._volume;\n\n\t\tthis._gainNode.connect(this._audioCtx.destination);\n\n\t\tthis._onEndedDelegate = (event) => this._onEnded(event);\n\t}\n\n\tpublic play(buffer:ArrayBuffer, offset:number = 0, loop:boolean = false, id:number = 0)\n\t{\n\t\tthis._isPlaying = true;\n\t\tthis._isLooping = loop;\n\n\t\tthis._currentTime = offset;\n\n\t\tthis._id = id;\n\n\t\tthis._isDecoding = true;\n\n\t\t//fast path for short sounds\n\t\tif (WebAudioChannel._decodeCache[id])\n\t\t\tthis._onDecodeComplete(WebAudioChannel._decodeCache[id]);\n\t\telse if (!WebAudioChannel._errorCache[id])\n\t\t\tthis._audioCtx.decodeAudioData(buffer, (buffer) => this._onDecodeComplete(buffer), (event) => this._onError(event));\n\t\telse\n\t\t\tthis.stop();\n\t}\n\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\t\tthis._isLooping = false;\n\t\tthis._isDecoding = false;\n\n\t\tif (this._source)\n\t\t\tthis._disposeSource();\n\t}\n\n\tpublic _onDecodeComplete(buffer)\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isDecoding = false;\n\n\t\t//if (buffer.duration < 2) //cache all buffers?\n\t\tWebAudioChannel._decodeCache[this._id] = buffer;\n\n\t\tif (this._source)\n\t\t\tthis._disposeSource();\n\n\t\tthis._source = this._audioCtx.createBufferSource();\n\n\t\tthis._source.loop = this._isLooping;\n\t\tthis._source.connect(this._gainNode);\n\n\t\tthis._source.buffer = buffer;\n\t\tthis._duration = buffer.duration;\n\n\t\tthis._startTime = this._audioCtx.currentTime - this._currentTime;\n\t\tthis._source.onended = this._onEndedDelegate;\n\t\ttry {\n\t\t\tthis._source.start(this._audioCtx.currentTime, this._currentTime);\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error starting audio: \" + error);\n\t\t\tthis._disposeSource();\n\t\t}\n\t}\n\n\tpublic _onError(event)\n\t{\n\t\tconsole.log(\"Error with decoding audio data\");\n\t\tWebAudioChannel._errorCache[this._id] = true;\n\t\tthis.stop();\n\t}\n\n\tprivate _onEnded(event):void\n\t{\n\t\tthis.stop();\n\t}\n\n\tprivate _disposeSource()\n\t{\n\t\t//clean up\n\t\tthis._source.stop(this._audioCtx.currentTime);\n\t\tthis._source.onended = null;\n\t\tthis._source.disconnect();\n\t\tdelete this._source.buffer;\n\t\tdelete this._source;\n\t\tthis._source = null;\n\t}\n}\n\nexport default WebAudioChannel;",
    "export {default as AudioManager}\t\t\t\t\tfrom \"awayjs-core/lib/managers/AudioManager\";\nexport {default as IAudioChannel}\t\t\t\t\tfrom \"awayjs-core/lib/managers/IAudioChannel\";\nexport {default as IAudioChannelClass}\t\t\t\tfrom \"awayjs-core/lib/managers/IAudioChannelClass\";\nexport {default as StreamingAudioChannel}\t\t\tfrom \"awayjs-core/lib/managers/StreamingAudioChannel\";\nexport {default as WebAudioChannel}\t\t\t\t\tfrom \"awayjs-core/lib/managers/WebAudioChannel\";",
    "class CrossDomainPolicy\n{\n\tpublic static ANONYMOUS:string = 'anonymous';\n\n\tpublic static USE_CREDENTIALS:string = 'use-credentials';\n}\n\nexport default CrossDomainPolicy;\n",
    "class URLLoaderDataFormat\n{\n\t/**\n\t * TEXT\n\t * @type {string}\n\t */\n\tpublic static TEXT:string = \"text\";\n\n\t/**\n\t * Variables / Value Pairs\n\t * @type {string}\n\t */\n\tpublic static VARIABLES:string = \"variables\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BLOB:string = \"blob\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static ARRAY_BUFFER:string = \"arraybuffer\";\n\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static BINARY:string = \"binary\";\n}\n\nexport default URLLoaderDataFormat;",
    "import URLLoaderDataFormat\t\t\tfrom \"awayjs-core/lib/net/URLLoaderDataFormat\";\nimport URLRequest\t\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\nimport URLRequestMethod\t\t\t\tfrom \"awayjs-core/lib/net/URLRequestMethod\";\nimport URLVariables\t\t\t\t\tfrom \"awayjs-core/lib/net/URLVariables\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport URLLoaderEvent\t\t\t\tfrom \"awayjs-core/lib/events/URLLoaderEvent\";\n\n/**\n * The URLLoader is used to load a single file, as part of a resource.\n *\n * While URLLoader can be used directly, e.g. to create a third-party asset\n * management system, it's recommended to use any of the classes Loader3D, Loader\n * and AssetLibrary instead in most cases.\n *\n * @see Loader\n * @see away.library.AssetLibrary\n */\nclass URLLoader extends EventDispatcher\n{\n\tprivate _XHR:XMLHttpRequest;\n\tprivate _status:number;\n\tprivate _bytesLoaded:number = 0;\n\tprivate _bytesTotal:number = 0;\n\tprivate _dataFormat:string = URLLoaderDataFormat.TEXT;\n\tprivate _loadError:boolean = false;\n\n\tprivate _request:URLRequest;\n\tprivate _data:any;\n\n\tprivate _loadStartEvent:URLLoaderEvent;\n\tprivate _loadErrorEvent:URLLoaderEvent;\n\tprivate _loadCompleteEvent:URLLoaderEvent;\n\tprivate _progressEvent:URLLoaderEvent;\n\tprivate _statusEvent:URLLoaderEvent;\n\n\t/**\n\t * Creates a new URLLoader object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get url():string\n\t{\n\n\t\treturn this._request? this._request.url : '';\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\n\t/**\n\t *\n\t * URLLoaderDataFormat.BINARY\n\t * URLLoaderDataFormat.TEXT\n\t * URLLoaderDataFormat.VARIABLES\n\t *\n\t * @param format\n\t */\n\tpublic set dataFormat(format:string)\n\t{\n\t\tthis._dataFormat = format;\n\t}\n\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesLoaded():number\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get bytesTotal():number\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * Load a resource from a file.\n\t *\n\t * @param request The URLRequest object containing the URL of the object to be loaded.\n\t */\n\tpublic load(request:URLRequest):void\n\t{\n\t\tthis._request = request;\n\n\t\tthis.initXHR();\n\n\t\tif (request.method === URLRequestMethod.POST)\n\t\t\tthis.postRequest(request);\n\t\telse\n\t\t\tthis.getRequest(request);\n\t}\n\n\tpublic isSupported():boolean {\n\t\treturn window != null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic close():void\n\t{\n\t\tthis._XHR.abort();\n\n\t\tthis.disposeXHR();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tif (this._XHR)\n\t\t\tthis._XHR.abort();\n\n\t\tthis.disposeXHR();\n\t}\n\n\t/**\n\t *\n\t * @param xhr\n\t * @param responseType\n\t */\n\tprivate setResponseType(xhr:XMLHttpRequest, responseType:string):void\n\t{\n\t\tswitch (responseType) {\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\txhr.responseType = responseType;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\txhr.responseType = URLLoaderDataFormat.TEXT;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\txhr.responseType = '';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate getRequest(request:URLRequest):void\n\t{\n\t\ttry {\n\t\t\tthis._XHR.open(request.method, request.url, request.async);\n\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\t\t\tthis._XHR.send(); // No data to send\n\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param request {URLRequest}\n\t */\n\tprivate postRequest(request:URLRequest):void\n\t{\n\t\tthis._loadError = false;\n\n\t\tthis._XHR.open(request.method, request.url, request.async);\n\n\t\tif (request.data != null) {\n\t\t\tif (request.data instanceof URLVariables) {\n\t\t\t\tvar urlVars:URLVariables = <URLVariables> request.data;\n\n\t\t\t\ttry {\n\t\t\t\t\tthis._XHR.responseType = 'text';\n\t\t\t\t\tthis._XHR.send(urlVars.formData);\n\t\t\t\t} catch (e /* <XMLHttpRequestException> */) {\n\t\t\t\t\tthis.handleXmlHttpRequestException(e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setResponseType(this._XHR, this._dataFormat);\n\n\t\t\t\tif (request.data)\n\t\t\t\t\tthis._XHR.send(request.data); // TODO: Test\n\t\t\t\telse\n\t\t\t\t\tthis._XHR.send(); // no data to send\n\t\t\t}\n\t\t} else {\n\t\t\tthis._XHR.send(); // No data to send\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * @param error {XMLHttpRequestException}\n\t */\n\tprivate handleXmlHttpRequestException(error:any /* <XMLHttpRequestException> */):void\n\t{\n\t\tswitch (error.code) {\n\n\t\t/******************************************************************************************************************************************************************************************************\n\t\t *\n\t\t *  XMLHttpRequestException { message: \"NETWORK_ERR: XMLHttpRequest Exception 101\", name: \"NETWORK_ERR\", code: 101, stack: \"Error: A network error occurred in synchronous req…\",NETWORK_ERR: 101… }\n\t\t *  code: 101 , message: \"NETWORK_ERR: XMLHttpRequest Exception 101\" ,  name: \"NETWORK_ERR\"\n\t\t *\n\t\t ******************************************************************************************************************************************************************************************************/\n\n\t\t\tcase 101:\n\t\t\t\t// Note: onLoadError event throws IO_ERROR event - this case is already Covered\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initXHR()\n\t{\n\t\tif (!this._XHR) {\n\t\t\tthis._XHR = new XMLHttpRequest();\n\n\t\t\tthis._XHR.onloadstart = (event:ProgressEvent) => this.onLoadStart(event);                 // loadstart\t        - When the request starts.\n\t\t\tthis._XHR.onprogress = (event:ProgressEvent) => this.onProgress(event);\t                // progress\t            - While loading and sending data.\n\t\t\tthis._XHR.onabort = (event:UIEvent) => this.onAbort(event);\t                        // abort\t            - When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t\t\tthis._XHR.onerror = (event:ErrorEvent) => this.onLoadError(event);                     // error\t            - When the request has failed.\n\t\t\tthis._XHR.onload = (event:Event) => this.onLoadComplete(event);                   // load\t                - When the request has successfully completed.\n\t\t\tthis._XHR.ontimeout = (event:Event) => this.onTimeOut(event);                     // timeout\t            - When the author specified timeout has passed before the request could complete.\n\t\t\tthis._XHR.onloadend = (event:ProgressEvent) => this.onLoadEnd(event);                     // loadend\t            - When the request has completed, regardless of whether or not it was successful.\n\t\t\tthis._XHR.onreadystatechange = (event:Event) => this.onReadyStateChange(event);   // onreadystatechange   - When XHR state changes\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate disposeXHR()\n\t{\n\t\tif (this._XHR !== null) {\n\t\t\tthis._XHR.onloadstart = null;\n\t\t\tthis._XHR.onprogress = null;\n\t\t\tthis._XHR.onabort = null;\n\t\t\tthis._XHR.onerror = null;\n\t\t\tthis._XHR.onload = null;\n\t\t\tthis._XHR.ontimeout = null;\n\t\t\tthis._XHR.onloadend = null;\n\t\t\tthis._XHR = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decodeURLVariables(source:string):Object\n\t{\n\t\tvar result:Object = new Object();\n\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tresult[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\n\t\treturn result;\n\t}\n\n\t// XMLHttpRequest - Event Handlers\n\n\t/**\n\t * When XHR state changes\n\t * @param event\n\t */\n\tprivate onReadyStateChange(event:Event)\n\t{\n\t\tif (this._XHR.readyState == 4) {\n\t\t\tthis._status = this._XHR.status;\n\t\t\tif (this._status == 404) {\n\t\t\t\tthis._loadError = true;\n\n\t\t\t\tthis.dispatchEvent(this._loadErrorEvent || (this._loadErrorEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_ERROR, this)));\n\t\t\t}\n\n\t\t\tthis.dispatchEvent(this._statusEvent || (this._statusEvent = new URLLoaderEvent(URLLoaderEvent.HTTP_STATUS, this)));\n\t\t}\n\t}\n\n\t/**\n\t * When the request has completed, regardless of whether or not it was successful.\n\t * @param event\n\t */\n\tprivate onLoadEnd(event:ProgressEvent)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\t}\n\n\t/**\n\t * When the author specified timeout has passed before the request could complete.\n\t * @param event\n\t */\n\tprivate onTimeOut(event:Event)\n\t{\n\t\t//TODO: Timeout not currently implemented ( also not part of AS3 API )\n\t}\n\n\t/**\n\t * When the request has been aborted, either by invoking the abort() method or navigating away from the page.\n\t * @param event\n\t */\n\tprivate onAbort(event:UIEvent)\n\t{\n\t\t// TODO: investigate whether this needs to be an IOError\n\t}\n\n\t/**\n\t * While loading and sending data.\n\t * @param event\n\t */\n\tprivate onProgress(event:ProgressEvent)\n\t{\n\t\tthis._bytesTotal = event.total;\n\t\tthis._bytesLoaded = event.loaded;\n\n\t\tthis.dispatchEvent(this._progressEvent || (this._progressEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_PROGRESS, this)));\n\t}\n\n\t/**\n\t * When the request starts.\n\t * @param event\n\t */\n\tprivate onLoadStart(event:ProgressEvent)\n\t{\n\t\tthis.dispatchEvent(this._loadStartEvent || (this._loadStartEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_START, this)));\n\t}\n\n\t/**\n\t * When the request has successfully completed.\n\t * @param event\n\t */\n\tprivate onLoadComplete(event:Event)\n\t{\n\t\tif (this._loadError === true)\n\t\t\treturn;\n\n\t\tswitch (this._dataFormat) {\n\t\t\tcase URLLoaderDataFormat.TEXT:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.VARIABLES:\n\t\t\t\tthis._data = this.decodeURLVariables(this._XHR.responseText);\n\t\t\t\tbreak;\n\n\t\t\tcase URLLoaderDataFormat.BLOB:\n\t\t\tcase URLLoaderDataFormat.ARRAY_BUFFER:\n\t\t\tcase URLLoaderDataFormat.BINARY:\n\t\t\t\tthis._data = this._XHR.response;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._data = this._XHR.responseText;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.dispatchEvent(this._loadCompleteEvent || (this._loadCompleteEvent = new URLLoaderEvent(URLLoaderEvent.LOAD_COMPLETE, this)));\n\t}\n\n\t/**\n\t * When the request has failed. ( due to network issues ).\n\t * @param event\n\t */\n\tprivate onLoadError(event:Event)\n\t{\n\t\tthis._loadError = true;\n\n\t\tthis.dispatchEvent(this._loadErrorEvent || (this._loadErrorEvent  = new URLLoaderEvent(URLLoaderEvent.LOAD_ERROR, this)));\n\t}\n}\n\nexport default URLLoader;",
    "class URLRequestMethod\n{\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static POST:string = 'POST';\n\t/**\n\t *\n\t * @type {string}\n\t */\n\tpublic static GET:string = 'GET';\n}\n\nexport default URLRequestMethod;",
    "import URLRequestMethod\t\t\t\tfrom \"awayjs-core/lib/net/URLRequestMethod\";\n\nclass URLRequest\n{\n\t/*\n\t * The MIME content type of the content in the the data property.\n\t * @type {string}\n\t */\n\t//public contentType      : string = 'application/x-www-form-urlencoded'; //Note: Not used for now.\n\n\t/**\n\t * Object containing data to be transmited with URL Request ( URL Variables / binary / string )\n\t *\n\t */\n\tpublic data:any;\n\n\t/**\n\t *\n\t * away.net.URLRequestMethod.GET\n\t * away.net.URLRequestMethod.POST\n\t *\n\t * @type {string}\n\t */\n\tpublic method:string = URLRequestMethod.GET;\n\n\t/**\n\t * Use asynchronous XMLHttpRequest\n\t * @type {boolean}\n\t */\n\tpublic async:boolean = true;\n\n\t/**\n\t *\n\t */\n\tprivate _url:string;\n\n\t/**\n\n\t * @param url\n\t */\n\tconstructor(url:string = null)\n\t{\n\t\tthis._url = url;\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set url(value:string)\n\t{\n\t\tthis._url = value;\n\t}\n\n\t/**\n\t * dispose\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.data = null;\n\t\tthis._url = null;\n\t}\n}\n\nexport default URLRequest;",
    "class URLVariables\n{\n\tprivate _variables:Object = new Object();\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tconstructor(source:string = null)\n\t{\n\t\tif (source !== null)\n\t\t\tthis.decode(source);\n\t}\n\n\t/**\n\t *\n\t * @param source\n\t */\n\tpublic decode(source:string):void\n\t{\n\t\tsource = source.split(\"+\").join(\" \");\n\n\t\tvar tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\twhile (tokens = re.exec(source))\n\t\t\tthis._variables[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic toString():string\n\t{\n\t\treturn '';\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get variables():Object\n\t{\n\t\treturn this._variables;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic get formData():FormData\n\t{\n\t\tvar fd:FormData = new FormData();\n\n\t\tfor (var s in this._variables)\n\t\t\tfd.append(s, this._variables[s]);\n\n\t\treturn fd;\n\t}\n\n\t/**\n\t *\n\t * @returns {Object}\n\t */\n\tpublic set variables(obj:Object)\n\t{\n\t\tthis._variables = obj;\n\t}\n}\n\nexport default URLVariables;",
    "export {default as CrossDomainPolicy}\t\t\t\tfrom \"awayjs-core/lib/net/CrossDomainPolicy\";\nexport {default as URLLoader}\t\t\t\t\t\tfrom \"awayjs-core/lib/net/URLLoader\";\nexport {default as URLLoaderDataFormat}\t\t\t\tfrom \"awayjs-core/lib/net/URLLoaderDataFormat\";\nexport {default as URLRequest}\t\t\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\nexport {default as URLRequestMethod}\t\t\t\tfrom \"awayjs-core/lib/net/URLRequestMethod\";\nexport {default as URLVariables}\t\t\t\t\tfrom \"awayjs-core/lib/net/URLVariables\";",
    "import BitmapImage2D\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport URLLoaderDataFormat\t\tfrom \"awayjs-core/lib/net/URLLoaderDataFormat\";\nimport ParserBase\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\nimport ParserUtils\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserUtils\";\nimport ByteArray\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\n/**\n * Image2DParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapDataResource so resource management can happen consistently without\n * exception cases.\n */\nclass Image2DParser extends ParserBase\n{\n\tprivate _startedParsing:boolean;\n\tprivate _doneParsing:boolean;\n\tprivate _loadingImage:boolean;\n\tprivate _htmlImageElement:HTMLImageElement;\n\n\t/**\n\t * Creates a new Image2DParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"jpg\" || extension == \"jpeg\" || extension == \"png\" || extension == \"gif\";//|| extension == \"bmp\";//|| extension == \"atf\";\n\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\n\t\tif (data  instanceof HTMLImageElement)\n\t\t\treturn true;\n\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tba.position = 0;\n\n\t\tif (ba.readUnsignedShort() == 0xd8ff)\n\t\t\treturn true; // JPEG, maybe check for \"JFIF\" as well?\n\n\t\tba.position = 0;\n\t\tif (ba.readShort() == 0x424D)\n\t\t\treturn true; // BMP\n\n\t\tba.position = 1;\n\t\tif (ba.readUTFBytes(3) == 'PNG')\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'GIF' && ba.readShort() == 0x3839 && ba.readByte() == 0x61)\n\t\t\treturn true;\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(3) == 'ATF')\n\t\t\treturn true;\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tvar asset:BitmapImage2D;\n\t\tvar sizeError:boolean = false;\n\n\t\tif (this._loadingImage) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else if (this._htmlImageElement) {\n\t\t\t//if (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t//}\n\t\t} else if (this.data instanceof HTMLImageElement) {// Parse HTMLImageElement\n\t\t\tvar htmlImageElement:HTMLImageElement = <HTMLImageElement> this.data;\n\t\t\t//if (ImageUtils.isHTMLImageElementValid(htmlImageElement)) {\n\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(htmlImageElement, false);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t//} else {\n\t\t\t//\tsizeError = true;\n\t\t\t//}\n\n\t\t} else if (this.data instanceof ByteArray) { // Parse a ByteArray\n\n\t\t\tvar ba:ByteArray = this.data;\n\t\t\tba.position = 0;\n\t\t\tthis._htmlImageElement = ParserUtils.byteArrayToImage(this.data);\n\n\t\t\tif (!this._htmlImageElement.complete) {\n\t\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\t\tthis._loadingImage = true;\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t\t//if (ImageUtils.isHTMLImageElementValid(this._htmlImageElement)) {\n\t\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\n\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\t\t\t//} else {\n\t\t\t//\tsizeError = true;\n\t\t\t//\n\t\t\t//}\n\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\n\t\t\tthis._htmlImageElement = ParserUtils.arrayBufferToImage(this.data);\n\n\t\t\tasset = ParserUtils.imageToBitmapImage2D(this._htmlImageElement, false);\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t} else if (this.data instanceof Blob) { // Parse a Blob\n\n\t\t\tthis._htmlImageElement = ParserUtils.blobToImage(this.data);\n\n\t\t\tthis._htmlImageElement.onload = (event) => this.onLoadComplete(event);\n\t\t\tthis._loadingImage = true;\n\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t}\n\n\t\tif (sizeError == true) // Generate new Checkerboard texture material\n\t\t{\n//\t\t\t\tasset = new BitmapTexture(DefaultMaterialManager.createCheckeredBitmapData(), false);\n//\t\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n//\t\t\t\tthis.dispatchEvent(new away.events.AssetEvent(away.events.AssetEvent.TEXTURE_SIZE_ERROR, <IAsset> asset));\n\t\t}\n\n\t\tthis._pContent = asset;\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tpublic onLoadComplete(event)\n\t{\n\t\tthis._loadingImage = false;\n\t}\n}\n\nexport default Image2DParser;",
    "import BitmapImage2D\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport BitmapImageCube\t\t\tfrom \"awayjs-core/lib/image/BitmapImageCube\";\nimport IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport URLLoaderDataFormat\t\tfrom \"awayjs-core/lib/net/URLLoaderDataFormat\";\nimport URLRequest\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\nimport ParserBase\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\nimport ResourceDependency\t\tfrom \"awayjs-core/lib/parsers/ResourceDependency\";\n\n/**\n * ImageCubeParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nclass ImageCubeParser extends ParserBase\n{\n\tprivate static posX:string = 'posX';\n\tprivate static negX:string = 'negX';\n\tprivate static posY:string = 'posY';\n\tprivate static negY:string = 'negY';\n\tprivate static posZ:string = 'posZ';\n\tprivate static negZ:string = 'negZ';\n\n\tprivate _imgDependencyDictionary:Object;\n\n\t/**\n\t * Creates a new ImageCubeParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"cube\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar obj = JSON.parse(data);\n\n\t\t\tif (obj)\n\t\t\t\treturn true;\n\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this._imgDependencyDictionary != null) { //all images loaded\n\t\t\tvar asset:BitmapImageCube = new BitmapImageCube(this._getBitmapImage2D(ImageCubeParser.posX).width);\n\n\t\t\tasset.draw(BitmapImageCube.posX, this._getBitmapImage2D(ImageCubeParser.posX));\n\t\t\tasset.draw(BitmapImageCube.negX, this._getBitmapImage2D(ImageCubeParser.negX));\n\t\t\tasset.draw(BitmapImageCube.posY, this._getBitmapImage2D(ImageCubeParser.posY));\n\t\t\tasset.draw(BitmapImageCube.negY, this._getBitmapImage2D(ImageCubeParser.negY));\n\t\t\tasset.draw(BitmapImageCube.posZ, this._getBitmapImage2D(ImageCubeParser.posZ));\n\t\t\tasset.draw(BitmapImageCube.negZ, this._getBitmapImage2D(ImageCubeParser.negZ));\n\n\t\t\t//clear dictionary\n\t\t\tthis._imgDependencyDictionary = null;\n\n\t\t\tasset.name = this._iFileName;\n\n\t\t\tthis._pFinalizeAsset(<IAsset> asset, this._iFileName);\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\ttry {\n\t\t\tvar json:any = JSON.parse(this.data);\n\t\t\tvar data:Array<Object> = <Array<Object>> json.data;\n\t\t\tvar rec:any;\n\n\t\t\tif (data.length != 6)\n\t\t\t\tthis._pDieWithError('ImageCubeParser: Error - cube texture should have exactly 6 images');\n\n\t\t\tif (json) {\n\t\t\t\tthis._imgDependencyDictionary = new Object();\n\n\t\t\t\tfor (var c:number = 0; c < data.length; c++) {\n\t\t\t\t\trec = data[c];\n\t\t\t\t\tthis._imgDependencyDictionary[rec.id] = this._pAddDependency(rec.id, new URLRequest(rec.image.toString()));\n\t\t\t\t}\n\n\t\t\t\tif (!this._validateCubeData()) {\n\n\t\t\t\t\tthis._pDieWithError(\"ImageCubeParser: JSON data error - cubes require id of:   \\n\" + ImageCubeParser.posX + ', ' + ImageCubeParser.negX + ',  \\n' + ImageCubeParser.posY + ', ' + ImageCubeParser.negY + ',  \\n' + ImageCubeParser.posZ + ', ' + ImageCubeParser.negZ);\n\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._pDieWithError('CubeTexturePaser Error parsing JSON');\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate _validateCubeData():boolean\n\t{\n\t\treturn  ( this._imgDependencyDictionary[ ImageCubeParser.posX ] != null && this._imgDependencyDictionary[ ImageCubeParser.negX ] != null && this._imgDependencyDictionary[ ImageCubeParser.posY ] != null && this._imgDependencyDictionary[ ImageCubeParser.negY ] != null && this._imgDependencyDictionary[ ImageCubeParser.posZ ] != null && this._imgDependencyDictionary[ ImageCubeParser.negZ ] != null );\n\t}\n\n\tprivate _getBitmapImage2D(name:string):BitmapImage2D\n\t{\n\t\tvar dependency:ResourceDependency = <ResourceDependency> this._imgDependencyDictionary[ name ];\n\n\t\tif (dependency)\n\t\t\treturn <BitmapImage2D> dependency.assets[0];\n\n\t\treturn null;\n\t}\n\n}\n\nexport default ImageCubeParser;",
    "import BitmapImage2D\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport URLRequest\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\nimport AbstractMethodError\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport EventDispatcher\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport ParserEvent\t\t\t\tfrom \"awayjs-core/lib/events/ParserEvent\";\nimport TimerEvent\t\t\t\tfrom \"awayjs-core/lib/events/TimerEvent\";\nimport ParserUtils\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserUtils\";\nimport ResourceDependency\t\tfrom \"awayjs-core/lib/parsers/ResourceDependency\";\nimport ByteArray\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\nimport ImageUtils\t\t\t\tfrom \"awayjs-core/lib/utils/ImageUtils\";\nimport Timer\t\t\t\t\tfrom \"awayjs-core/lib/utils/Timer\";\nimport getTimer\t\t\t\t\tfrom \"awayjs-core/lib/utils/getTimer\";\n\n/**\n * <code>ParserBase</code> provides an abstract base class for objects that convert blocks of data to data structures\n * supported by away.\n *\n * If used by <code>Loader</code> to automatically determine the parser type, two public static methods should\n * be implemented, with the following signatures:\n *\n * <code>public static supportsType(extension : string) : boolean</code>\n * Indicates whether or not a given file extension is supported by the parser.\n *\n * <code>public static supportsData(data : *) : boolean</code>\n * Tests whether a data block can be parsed by the parser.\n *\n * Furthermore, for any concrete subtype, the method <code>initHandle</code> should be overridden to immediately\n * create the object that will contain the parsed data. This allows <code>ResourceManager</code> to return an object\n * handle regardless of whether the object was loaded or not.\n *\n * @see Loader\n */\nclass ParserBase extends EventDispatcher\n{\n\tpublic _isParsing:boolean;\n\tpublic _iFileName:string;\n\tprivate _dataFormat:string;\n\tprivate _data:any;\n\tprivate _frameLimit:number;\n\tprivate _lastFrameTime:number;\n\tprivate _pOnIntervalDelegate:(event:TimerEvent) => void;\n\tpublic _pContent:IAsset;\n\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// TODO: add error checking for the following ( could cause a problem if this function is not implemented )\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t// Needs to be implemented in all Parsers (\n\t//<code>public static supportsType(extension : string) : boolean</code>\n\t//* Indicates whether or not a given file extension is supported by the parser.\n\t//----------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate _dependencies:Array<ResourceDependency>;\n\tprivate _parsingPaused:boolean;\n\tprivate _parsingComplete:boolean;\n\tprivate _parsingFailure:boolean;\n\tprivate _timer:Timer;\n\tprivate _materialMode:number;\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate no more parsing is needed.\n\t */\n\tpublic static PARSING_DONE:boolean = true;\n\t/* Protected */\n\n\t/**\n\t * Returned by <code>proceedParsing</code> to indicate more parsing is needed, allowing asynchronous parsing.\n\t */\n\tpublic static MORE_TO_PARSE:boolean = false;\n\t/* Protected */\n\n\n\tpublic get content():IAsset\n\t{\n\t\treturn this._pContent;\n\t}\n\n\t/**\n\t * Creates a new ParserBase object\n\t * @param format The data format of the file data to be parsed. Can be either <code>ParserDataFormat.BINARY</code> or <code>ParserDataFormat.PLAIN_TEXT</code>, and should be provided by the concrete subtype.\n\t *\n\t * @see away.loading.parsers.ParserDataFormat\n\t */\n\tconstructor(format:string)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = 0;\n\t\tthis._dataFormat = format;\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\n\t\tthis._pOnIntervalDelegate = (event:TimerEvent) => this._pOnInterval(event);\n\t}\n\n\t/**\n\t * Validates a bitmapData loaded before assigning to a default BitmapMaterial\n\t */\n\n\tpublic isBitmapImage2DValid(bitmapImage2D:BitmapImage2D):boolean\n\t{\n\t\tvar isValid:boolean = ImageUtils.isImage2DValid(bitmapImage2D);\n\n\t\tif (!isValid) {\n\n\t\t\tconsole.log(\">> Bitmap loaded is not having power of 2 dimensions or is higher than 2048\");\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tpublic set parsingFailure(b:boolean)\n\t{\n\t\tthis._parsingFailure = b;\n\t}\n\n\tpublic get parsingFailure():boolean\n\t{\n\t\treturn this._parsingFailure;\n\t}\n\n\tpublic get parsingPaused():boolean\n\t{\n\t\treturn this._parsingPaused;\n\t}\n\n\tpublic get parsingComplete():boolean\n\t{\n\t\treturn this._parsingComplete;\n\t}\n\n\tpublic set materialMode(newMaterialMode:number)\n\t{\n\t\tthis._materialMode = newMaterialMode;\n\t}\n\n\tpublic get materialMode():number\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * The data format of the file data to be parsed. Options are <code>URLLoaderDataFormat.BINARY</code>, <code>URLLoaderDataFormat.ARRAY_BUFFER</code>, <code>URLLoaderDataFormat.BLOB</code>, <code>URLLoaderDataFormat.VARIABLES</code> or <code>URLLoaderDataFormat.TEXT</code>.\n\t */\n\tpublic get dataFormat():string\n\t{\n\t\treturn this._dataFormat;\n\t}\n\n\t/**\n\t * Parse data (possibly containing bytearry, plain text or BitmapAsset) asynchronously, meaning that\n\t * the parser will periodically stop parsing so that the AVM may proceed to the\n\t * next frame.\n\t *\n\t * @param data The untyped data object in which the loaded data resides.\n\t * @param frameLimit number of milliseconds of parsing allowed per frame. The\n\t * actual time spent on a frame can exceed this number since time-checks can\n\t * only be performed between logical sections of the parsing procedure.\n\t */\n\tpublic parseAsync(data:any, frameLimit:number = 30)\n\t{\n\t\tthis._data = data;\n\t\tthis._pStartParsing(frameLimit);\n\t}\n\n\t/**\n\t * A list of dependencies that need to be loaded and resolved for the object being parsed.\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * Resolve a dependency when it's loaded. For example, a dependency containing an ImageResource would be assigned\n\t * to a Mesh instance as a BitmapMaterial, a scene graph object would be added to its intended parent. The\n\t * dependency should be a member of the dependencies property.\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency loading failure. Used by parser to eventually provide a default map\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\treturn asset.name;\n\t}\n\n\tpublic _iResumeParsing()\n\t{\n\t\tthis._parsingPaused = false;\n\n\t\tif (this._timer)\n\t\t\tthis._timer.start();\n\n\t\t//get started!\n\t\tif (!this._isParsing)\n\t\t\tthis._pOnInterval();\n\t}\n\n\tpublic _pFinalizeAsset(asset:IAsset, name:string = null)\n\t{\n\t\tvar type_event:string;\n\t\tvar type_name:string;\n\n\t\tif (name != null)\n\t\t\tasset.name = name;\n\n\t\t// If the asset has no name, give it\n\t\t// a per-type default name.\n\t\tif (!asset.name)\n\t\t\tasset.name = asset.assetType;\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.ASSET_COMPLETE, asset));\n\t}\n\n\t/**\n\t * Parse the next block of data.\n\t * @return Whether or not more data needs to be parsed. Can be <code>ParserBase.ParserBase.PARSING_DONE</code> or\n\t * <code>ParserBase.ParserBase.MORE_TO_PARSE</code>.\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pDieWithError(message:string = 'Unknown parsing error')\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t\tthis._timer = null;\n\t\t}\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_ERROR, message));\n\t}\n\n\tpublic _pAddDependency(id:string, req:URLRequest, retrieveAsRawData:boolean = false, data:any = null, suppressErrorEvents:boolean = false, sub_id:number=0):ResourceDependency\n\t{\n\t\tvar dependency:ResourceDependency = new ResourceDependency(id, req, data, null, this, retrieveAsRawData, suppressErrorEvents, sub_id);\n\t\tthis._dependencies.push(dependency);\n\n\t\treturn dependency;\n\t}\n\n\tpublic _pPauseAndRetrieveDependencies()\n\t{\n\t\tthis._pPauseParsing();\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.READY_FOR_DEPENDENCIES));\n\t}\n\n\tpublic _pPauseParsing()\n\t{\n\t\tif (this._timer)\n\t\t\tthis._timer.stop();\n\n\t\tthis._parsingPaused = true;\n\t}\n\n\t/**\n\t * Tests whether or not there is still time left for parsing within the maximum allowed time frame per session.\n\t * @return True if there is still time left, false if the maximum allotted time was exceeded and parsing should be interrupted.\n\t */\n\tpublic _pHasTime():boolean\n\t{\n\t\treturn ((getTimer() - this._lastFrameTime) < this._frameLimit);\n\t}\n\n\t/**\n\t * Called when the parsing pause interval has passed and parsing can proceed.\n\t */\n\tpublic _pOnInterval(event:TimerEvent = null)\n\t{\n\t\tthis._lastFrameTime = getTimer();\n\t\tthis._isParsing = true;\n\n\t\tif (this._pProceedParsing() && !this._parsingFailure)\n\t\t\tthis._pFinishParsing();\n\n\t\tthis._isParsing = false;\n\t}\n\n\t/**\n\t * Initializes the parsing of data.\n\t * @param frameLimit The maximum duration of a parsing session.\n\t */\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tthis._frameLimit = frameLimit;\n\t\tthis._timer = new Timer(this._frameLimit, 0);\n\t\tthis._timer.addEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\tthis._timer.start();\n\n\t\t//get started!\n\t\tthis._pOnInterval();\n\t}\n\n\t/**\n\t * Finish parsing the data.\n\t */\n\tpublic _pFinishParsing()\n\t{\n\t\tif (this._timer) {\n\t\t\tthis._timer.removeEventListener(TimerEvent.TIMER, this._pOnIntervalDelegate);\n\t\t\tthis._timer.stop();\n\t\t}\n\n\t\tthis._timer = null;\n\t\tthis._parsingComplete = true;\n\t\tthis._isParsing = false;\n\n\t\tthis.dispatchEvent(new ParserEvent(ParserEvent.PARSE_COMPLETE));\n\t}\n\n\t/**\n\t *\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _pGetTextData():string\n\t{\n\t\treturn ParserUtils.toString(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {ByteArray}\n\t * @private\n\t */\n\tpublic _pGetByteData():ByteArray\n\t{\n\t\treturn ParserUtils.toByteArray(this._data);\n\t}\n\n\t/**\n\t *\n\t * @returns {any}\n\t * @private\n\t */\n\tpublic _pGetData():any\n\t{\n\t\treturn this._data;\n\t}\n\n}\n\nexport default ParserBase;",
    "/**\n * An enumeration providing values to describe the data format of parsed data.\n */\nclass ParserDataFormat\n{\n\t/**\n\t * Describes the format of a binary file.\n\t */\n\tpublic static BINARY:string = \"binary\";\n\n\t/**\n\t * Describes the format of a plain text file.\n\t */\n\tpublic static PLAIN_TEXT:string = \"plainText\";\n\n\t/**\n\t * Describes the format of an image file\n\t */\n\tpublic static IMAGE:string = \"image\";\n\n}\n\nexport default ParserDataFormat;",
    "import BitmapImage2D\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport WaveAudio\t\t\t\tfrom \"awayjs-core/lib/audio/WaveAudio\";\nimport ByteArray\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nclass ParserUtils\n{\n\tpublic static arrayBufferToBase64(data:ArrayBuffer, mimeType:string)\n\t{\n\t\tvar byteStr:string = '';\n\t\tvar bytes:Uint8Array = new Uint8Array(data);\n\t\tvar len:number = bytes.byteLength;\n\n\t\tfor (var i = 0; i < len; i++)\n\t\t\tbyteStr += String.fromCharCode(bytes[ i ])\n\n\t\tvar base64Image:string = window.btoa(byteStr);\n\t\treturn 'data:' + mimeType + ';base64,' + base64Image;\n\t}\n\n\tpublic static arrayBufferToAudio(data:ArrayBuffer, fileType:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'audio/' + fileType);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an ArrayBuffer to a base64 string\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static arrayBufferToImage(data:ArrayBuffer):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an ByteArray to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a ByteArray\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static byteArrayToImage(data:ByteArray):HTMLImageElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'image/png');\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = str;\n\t\treturn img;\n\t}\n\n\tpublic static byteArrayToAudio(data:ByteArray, filetype:string):HTMLAudioElement\n\t{\n\t\tvar str:string = ParserUtils.arrayBufferToBase64(data.arraybytes, 'audio/' + filetype);\n\t\tvar audio:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\taudio.src = str;\n\t\treturn audio;\n\t}\n\n\t/**\n\t * Converts an Blob to an Image - returns an HTMLImageElement\n\t *\n\t * @param image data as a Blob\n\t *\n\t * @return HTMLImageElement\n\t *\n\t */\n\tpublic static blobToImage(data:Blob):HTMLImageElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLImageElement = <HTMLImageElement> new Image();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t * Converts an Blob to audio - returns an HTMLAudioElement\n\t *\n\t * @param audio data as a Blob\n\t *\n\t * @return HTMLAudioElement\n\t *\n\t */\n\tpublic static blobToAudio(data:Blob):HTMLAudioElement\n\t{\n\t\tvar URLObj:URL = window['URL'] || window['webkitURL'];\n\t\tvar src = URLObj.createObjectURL(data);\n\t\tvar img:HTMLAudioElement = <HTMLAudioElement> new Audio();\n\t\timg.src = src;\n\t\treturn img;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic static imageToBitmapImage2D(img:HTMLImageElement, powerOfTwo:boolean = true):BitmapImage2D\n\t{\n\t\tvar bitmapData:BitmapImage2D = new BitmapImage2D(img.width, img.height, true, null, powerOfTwo);\n\t\tbitmapData.draw(img);\n\n\t\treturn bitmapData;\n\t}\n\n\t/**\n\t * Returns a object as ByteArray, if possible.\n\t *\n\t * @param data The object to return as ByteArray\n\t *\n\t * @return The ByteArray or null\n\t *\n\t */\n\tpublic static toByteArray(data:any):ByteArray\n\t{\n\t\tvar b:ByteArray = new ByteArray();\n\t\tb.setArrayBuffer(data);\n\t\treturn b;\n\t}\n\n\t/**\n\t * Returns a object as String, if possible.\n\t *\n\t * @param data The object to return as String\n\t * @param length The length of the returned String\n\t *\n\t * @return The String or null\n\t *\n\t */\n\tpublic static toString(data:any, length:number = 0):string\n\t{\n\n\t\tif (typeof data === 'string') {\n\t\t\tvar s:string = <string> data;\n\n\t\t\tif (s['substr'] != null)\n\t\t\t\treturn s.substr(0, s.length);\n\t\t}\n\n\t\tif (data instanceof ByteArray) {\n\t\t\tvar ba:ByteArray = <ByteArray> data;\n\t\t\tba.position = 0;\n\t\t\treturn ba.readUTFBytes(Math.min(ba.getBytesAvailable(), length));\n\t\t}\n\n\t\treturn null;\n\n\t\t/*\n\t\t var ba:ByteArray;\n\n\t\t length ||= uint.MAX_VALUE;\n\n\t\t if (data is String)\n\t\t return String(data).substr(0, length);\n\n\t\t ba = toByteArray(data);\n\t\t if (ba) {\n\t\t ba.position = 0;\n\t\t return ba.readUTFBytes(Math.min(ba.bytesAvailable, length));\n\t\t }\n\n\t\t return null;\n\n\t\t */\n\n\t}\n}\n\nexport default ParserUtils;",
    "﻿import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport URLLoader\t\t\t\tfrom \"awayjs-core/lib/net/URLLoader\";\nimport URLRequest\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\nimport ParserBase\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\n\n/**\n * ResourceDependency represents the data required to load, parse and resolve additional files (\"dependencies\")\n * required by a parser, used by ResourceLoadSession.\n *\n */\nclass ResourceDependency\n{\n\tprivate _id:string;\n\tprivate _sub_id:number;\n\n\tprivate _request:URLRequest;\n\tprivate _assets:Array<IAsset>;\n\tprivate _parser:ParserBase;\n\tprivate _parentParser:ParserBase;\n\tprivate _data:any;\n\tprivate _retrieveAsRawData:boolean;\n\tprivate _suppressAssetEvents:boolean;\n\tprivate _dependencies:Array<ResourceDependency>;\n\n\tpublic _iLoader:URLLoader;\n\tpublic _iSuccess:boolean;\n\n\n\tconstructor(id:string, request:URLRequest, data:any, parser:ParserBase, parentParser:ParserBase, retrieveAsRawData:boolean = false, suppressAssetEvents:boolean = false, sub_id:number=0)\n\t{\n\t\tthis._id = id;\n\t\tthis._sub_id = sub_id;\n\t\tthis._request = request;\n\t\tthis._data = data;\n\t\tthis._parser = parser;\n\t\tthis._parentParser = parentParser;\n\t\tthis._retrieveAsRawData = retrieveAsRawData;\n\t\tthis._suppressAssetEvents = suppressAssetEvents;\n\t\tthis._assets = new Array<IAsset>();\n\t\tthis._dependencies = new Array<ResourceDependency>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get id():string\n\t{\n\t\treturn this._id;\n\t}\n\tpublic get sub_id():number\n\t{\n\t\treturn this._sub_id;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get request():URLRequest\n\t{\n\t\treturn this._request;\n\t}\n\n\t/**\n\t * The data containing the dependency to be parsed, if the resource was already loaded.\n\t */\n\tpublic get data():any\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parser():ParserBase\n\t{\n\t\treturn this._parser;\n\t}\n\n\t/**\n\t * The parser which is dependent on this ResourceDependency object.\n\t */\n\tpublic get parentParser():ParserBase\n\t{\n\t\treturn this._parentParser;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get retrieveAsRawData():boolean\n\t{\n\t\treturn this._retrieveAsRawData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get suppresAssetEvents():boolean\n\t{\n\t\treturn this._suppressAssetEvents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assets():Array<IAsset>\n\t{\n\t\treturn this._assets;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get dependencies():Array<ResourceDependency>\n\t{\n\t\treturn this._dependencies;\n\t}\n\n\t/**\n\t * @private\n\t * Method to set data after having already created the dependency object, e.g. after load.\n\t */\n\tpublic _iSetData(data:any):void\n\t{\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t */\n\tpublic _iSetParser(parser:ParserBase):void\n\t{\n\t\tthis._parser = parser;\n\t}\n\n\t/**\n\t * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an\n\t * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added\n\t * to its intended parent. The dependency should be a member of the dependencies property.\n\t */\n\tpublic resolve():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependency(this);\n\t}\n\n\t/**\n\t * Resolve a dependency failure. For example, map loading failure from a 3d file\n\t */\n\tpublic resolveFailure():void\n\t{\n\t\tif (this._parentParser)\n\t\t\tthis._parentParser._iResolveDependencyFailure(this);\n\t}\n\n\t/**\n\t * Resolve the dependencies name\n\t */\n\tpublic resolveName(asset:IAsset):string\n\t{\n\t\tif (this._parentParser)\n\t\t\treturn this._parentParser._iResolveDependencyName(this, asset);\n\n\t\treturn asset.name;\n\t}\n}\n\nexport default ResourceDependency;",
    "import Sampler2D\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\nimport BitmapImage2D\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Rectangle\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport URLLoaderDataFormat\t\tfrom \"awayjs-core/lib/net/URLLoaderDataFormat\";\nimport URLRequest\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\nimport ParserBase\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\nimport ParserUtils\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserUtils\";\nimport ResourceDependency\t\tfrom \"awayjs-core/lib/parsers/ResourceDependency\";\nimport XmlUtils\t\t\t\t\tfrom \"awayjs-core/lib/utils/XmlUtils\";\n\n/**\n * TextureAtlasParser provides a \"parser\" for natively supported image types (jpg, png). While it simply loads bytes into\n * a loader object, it wraps it in a BitmapImage2DResource so resource management can happen consistently without\n * exception cases.\n */\nclass TextureAtlasParser extends ParserBase\n{\n\tprivate _doc:Node;\n\tprivate _imagePath:string;\n\tprivate _imageData:BitmapImage2D;\n\tprivate _subTextureNodes:NodeList;\n\tprivate _parseState:number = 0;\n\n\t/**\n\t * Creates a new TextureAtlasParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"xml\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\ttry {\n\t\t\tvar content:string = ParserUtils.toString(data);\n\t\t\tif(content.indexOf(\"TextureAtlas\") != -1 || content.indexOf(\"textureatlas\") != -1)\n\t\t\t\treturn true;\n\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif(resourceDependency.assets.length) {\n\t\t\tthis._imageData = <BitmapImage2D> resourceDependency.assets[0];\n\t\t\tthis._pFinalizeAsset(this._imageData);\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_SUBTEXTURES;\n\t\t} else {\n\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar nodes:NodeList;\n\n\t\tswitch(this._parseState) {\n\t\t\tcase TextureAtlasParserState.PARSE_XML:\n\t\t\t\ttry {\n\t\t\t\t\tthis._doc = XmlUtils.getChildrenWithTag(XmlUtils.strToXml(this._pGetTextData()), \"TextureAtlas\")[0];\n\n\t\t\t\t\tthis._imagePath = XmlUtils.readAttributeValue(this._doc, \"imagePath\");\n\n\t\t\t\t\tthis._subTextureNodes = XmlUtils.getChildrenWithTag(this._doc, \"SubTexture\");\n\n\t\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_IMAGE;\n\n\t\t\t\t} catch(Error) {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_IMAGE:\n\t\t\t\tif (this._imagePath){\n\t\t\t\t\tthis._pAddDependency(this._imagePath, new URLRequest(this._imagePath));\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t\t} else {\n\t\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_SUBTEXTURES:\n\t\t\t\tvar sampler:Sampler2D;\n\t\t\t\tvar element:Node;\n\t\t\t\tvar x:string;\n\t\t\t\tvar y:string;\n\t\t\t\tvar width:string;\n\t\t\t\tvar height:string;\n\t\t\t\tvar len:number = this._subTextureNodes.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\telement = this._subTextureNodes[i];\n\t\t\t\t\tsampler = new Sampler2D();\n\n\t\t\t\t\t//setup subtexture rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"x\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"y\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"width\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"height\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tsampler.imageRect = new Rectangle(parseInt(x)/this._imageData.width, parseInt(y)/this._imageData.height, parseInt(width)/this._imageData.width, parseInt(height)/this._imageData.height);\n\n\t\t\t\t\t//setup frame rect\n\t\t\t\t\tx = XmlUtils.readAttributeValue(element, \"frameX\");\n\t\t\t\t\ty = XmlUtils.readAttributeValue(element, \"frameY\");\n\t\t\t\t\twidth = XmlUtils.readAttributeValue(element, \"frameWidth\");\n\t\t\t\t\theight = XmlUtils.readAttributeValue(element, \"frameHeight\");\n\t\t\t\t\tif (x || y || width || height)\n\t\t\t\t\t\tsampler.frameRect = new Rectangle(parseInt(x), parseInt(y), parseInt(width), parseInt(height));\n\n\t\t\t\t\tthis._pFinalizeAsset(sampler, XmlUtils.readAttributeValue(element, \"name\"));\n\t\t\t\t}\n\n\t\t\t\tthis._parseState = TextureAtlasParserState.PARSE_COMPLETE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase TextureAtlasParserState.PARSE_COMPLETE:\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n}\n\nexport default TextureAtlasParser;\n\nclass TextureAtlasParserState {\n\tpublic static PARSE_XML:number = 0;\n\tpublic static PARSE_IMAGE:number = 1;\n\tpublic static PARSE_SUBTEXTURES:number = 2;\n\tpublic static PARSE_COMPLETE:number = 3;\n}",
    "import WaveAudio\t\t\t\tfrom \"awayjs-core/lib/audio/WaveAudio\";\nimport IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport URLLoaderDataFormat\t\tfrom \"awayjs-core/lib/net/URLLoaderDataFormat\";\nimport ParserBase\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\nimport ParserUtils\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserUtils\";\nimport ByteArray\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nclass WaveAudioParser extends ParserBase\n{\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.BLOB);\n\t}\n\n\tpublic static supportsType(extension:string):boolean\n\t{\n\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"wav\" || extension == \"mp3\" || extension == \"ogg\";\n\n\t}\n\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tif (!(data instanceof ByteArray))\n\t\t\treturn false;\n\n\t\tvar ba:ByteArray = <ByteArray> data;\n\t\tvar filetype : string = WaveAudioParser.parseFileType(ba);\n\t\treturn filetype? true : false;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\t//clear content\n\t\tdelete this._pContent;\n\t\tthis._pContent = null;\n\n\t\tsuper._pStartParsing(frameLimit);\n\t}\n\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (this.data instanceof ByteArray) { // Parse a ByteArray\n\t\t\tthis._pContent = new WaveAudio(this.data.arraybytes);\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\n\t\t} else if (this.data instanceof ArrayBuffer) {// Parse an ArrayBuffer\n\t\t\tthis._pContent = new WaveAudio(this.data);\n\t\t\tthis._pFinalizeAsset(this._pContent, this._iFileName);\n\t\t}\n\n\t\treturn ParserBase.PARSING_DONE;\n\n\t}\n\n\tprivate static parseFileType(ba:ByteArray):string\n\t{\n\t\tba.position = 0;\n\n\t\tba.position = 0;\n\t\tif ((ba.readUnsignedShort() & 0xFFE0) == 0xFFE0) {\n\t\t\treturn 'mp3'; // test for MP3 syncword\n\t\t}\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'RIFF')\n\t\t\treturn 'wav';\n\n\t\tba.position = 0;\n\t\tif (ba.readUTFBytes(4) == 'OggS')\n\t\t\treturn 'ogg';\n\n\t\tba.position = 0;\n\n\t\treturn null;\n\t}\n}\n\nexport default WaveAudioParser;",
    "export {default as Image2DParser}\t\t\t\t\tfrom \"awayjs-core/lib/parsers/Image2DParser\";\nexport {default as ImageCubeParser}\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ImageCubeParser\";\nexport {default as ParserBase}\t\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\nexport {default as ParserDataFormat}\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserDataFormat\";\nexport {default as ParserUtils}\t\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserUtils\";\nexport {default as ResourceDependency}\t\t\t\tfrom \"awayjs-core/lib/parsers/ResourceDependency\";\nexport {default as TextureAtlasParser}\t\t\t\tfrom \"awayjs-core/lib/parsers/TextureAtlasParser\";\nexport {default as WaveAudioParser}\t\t\t\t\tfrom \"awayjs-core/lib/parsers/WaveAudioParser\";",
    "/**\n * Provides constant values for camera lens projection options use the the <code>coordinateSystem</code> property\n *\n * @see away.projections.PerspectiveLens#coordinateSystem\n */\nclass CoordinateSystem\n{\n\t/**\n\t * Default option, projects to a left-handed coordinate system\n\t */\n\tpublic static LEFT_HANDED:string = \"leftHanded\";\n\n\t/**\n\t * Projects to a right-handed coordinate system\n\t */\n\tpublic static RIGHT_HANDED:string = \"rightHanded\";\n}\n\nexport default CoordinateSystem;",
    "import PerspectiveProjection\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\nimport ProjectionBase\t\t\tfrom \"awayjs-core/lib/projections/ProjectionBase\";\n\nclass FreeMatrixProjection extends ProjectionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pMatrix.copyFrom(new PerspectiveProjection().matrix);\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._pNear = value;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._pFar = value;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._pAspectRatio = value;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:FreeMatrixProjection = new FreeMatrixProjection();\n\t\tclone._pMatrix.copyFrom(this._pMatrix);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.pInvalidateMatrix();\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport default FreeMatrixProjection;",
    "import Matrix3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Plane3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport ProjectionEvent\t\t\tfrom \"awayjs-core/lib/events/ProjectionEvent\";\nimport IProjection\t\t\t\tfrom \"awayjs-core/lib/projections/IProjection\";\nimport ProjectionBase\t\t\tfrom \"awayjs-core/lib/projections/ProjectionBase\";\n\nclass ObliqueNearPlaneProjection extends ProjectionBase\n{\n\n\tprivate _baseProjection:IProjection;\n\tprivate _plane:Plane3D;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(baseProjection:IProjection, plane:Plane3D)\n\t{\n\t\tsuper();\n\t\tthis.baseProjection = baseProjection;\n\t\tthis.plane = plane;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\t}\n\n\t//@override\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._baseProjection.frustumCorners;\n\t}\n\n\t//@override\n\tpublic get near():number\n\t{\n\t\treturn this._baseProjection.near;\n\t}\n\n\t//@override\n\tpublic set near(value:number)\n\t{\n\t\tthis._baseProjection.near = value;\n\t}\n\n\t//@override\n\tpublic get far():number\n\t{\n\t\treturn this._baseProjection.far;\n\t}\n\n\t//@override\n\tpublic set far(value:number)\n\t{\n\t\tthis._baseProjection.far = value;\n\t}\n\n\t//@override\n\tpublic get iAspectRatio():number\n\t{\n\t\treturn this._baseProjection._iAspectRatio;\n\t}\n\n\t//@override\n\tpublic set iAspectRatio(value:number)\n\t{\n\t\tthis._baseProjection._iAspectRatio = value;\n\t}\n\n\tpublic get plane():Plane3D\n\t{\n\t\treturn this._plane;\n\t}\n\n\tpublic set plane(value:Plane3D)\n\t{\n\t\tthis._plane = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic set baseProjection(value:IProjection)\n\t{\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis._baseProjection = value;\n\n\t\tif (this._baseProjection) {\n\t\t\tthis._baseProjection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\t}\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tthis._pMatrix.copyFrom(this._baseProjection.matrix);\n\n\t\tvar cx:number = this._plane.a;\n\t\tvar cy:number = this._plane.b;\n\t\tvar cz:number = this._plane.c;\n\t\tvar cw:number = -this._plane.d + .05;\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\t\tvar inverse:Matrix3D = this._pMatrix.clone();\n\t\tinverse.invert();\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\t\tthis._pMatrix.copyRowTo(3, p);\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\t\tthis._pMatrix.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n}\n\nexport default ObliqueNearPlaneProjection;",
    "import Matrix3DUtils\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport ProjectionBase\t\t\tfrom \"awayjs-core/lib/projections/ProjectionBase\";\n\nclass OrthographicOffCenterProjection extends ProjectionBase\n{\n\n\tprivate _minX:number;\n\tprivate _maxX:number;\n\tprivate _minY:number;\n\tprivate _maxY:number;\n\n\tconstructor(minX:number, maxX:number, minY:number, maxY:number)\n\t{\n\t\tsuper();\n\t\tthis._minX = minX;\n\t\tthis._maxX = maxX;\n\t\tthis._minY = minY;\n\t\tthis._maxY = maxY;\n\t}\n\n\tpublic get minX():number\n\t{\n\t\treturn this._minX;\n\t}\n\n\tpublic set minX(value:number)\n\t{\n\t\tthis._minX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxX():number\n\t{\n\t\treturn this._maxX;\n\t}\n\n\tpublic set maxX(value:number)\n\t{\n\t\tthis._maxX = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get minY():number\n\t{\n\t\treturn this._minY;\n\t}\n\n\tpublic set minY(value:number)\n\t{\n\t\tthis._minY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get maxY():number\n\t{\n\t\treturn this._maxY;\n\t}\n\n\tpublic set maxY(value:number)\n\t{\n\t\tthis._maxY = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicOffCenterProjection = new OrthographicOffCenterProjection(this._minX, this._maxX, this._minY, this._maxY);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar w:number = 1/(this._maxX - this._minX);\n\t\tvar h:number = 1/(this._maxY - this._minY);\n\t\tvar d:number = 1/(this._pFar - this._pNear);\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(this._maxX + this._minX)*w;\n\t\traw[13] = -(this._maxY + this._minY)*h;\n\t\traw[14] = -this._pNear*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = this._minX;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = this._maxX;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = this._minY;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = this._maxY;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport default OrthographicOffCenterProjection;",
    "import Matrix3DUtils\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport ProjectionBase\t\t\tfrom \"awayjs-core/lib/projections/ProjectionBase\";\n\nclass OrthographicProjection extends ProjectionBase\n{\n\n\tprivate _projectionHeight:number;\n\tprivate _xMax:number;\n\tprivate _yMax:number;\n\n\tconstructor(projectionHeight:number = 500)\n\t{\n\t\tsuper();\n\t\tthis._projectionHeight = projectionHeight;\n\t}\n\n\tpublic get projectionHeight():number\n\t{\n\t\treturn this._projectionHeight;\n\t}\n\n\tpublic set projectionHeight(value:number)\n\t{\n\t\tif (value == this._projectionHeight) {\n\t\t\treturn;\n\t\t}\n\t\tthis._projectionHeight = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX + this.matrix.rawData[12], -nY + this.matrix.rawData[13], sZ, 1.0);\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:OrthographicProjection = new OrthographicProjection();\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone.projectionHeight = this._projectionHeight;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tthis._yMax = this._projectionHeight*.5;\n\t\tthis._xMax = this._yMax*this._pAspectRatio;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\tif (this._pScissorRect.x == 0 && this._pScissorRect.y == 0 && this._pScissorRect.width == this._pViewPort.width && this._pScissorRect.height == this._pViewPort.height) {\n\t\t\t// assume symmetric frustum\n\n\t\t\tleft = -this._xMax;\n\t\t\tright = this._xMax;\n\t\t\ttop = -this._yMax;\n\t\t\tbottom = this._yMax;\n\n\t\t\traw[0] = 2/(this._projectionHeight*this._pAspectRatio);\n\t\t\traw[5] = 2/this._projectionHeight;\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\t\t\traw[14] = this._pNear/(this._pNear - this._pFar);\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = raw[12] = raw[13] = 0;\n\t\t\traw[15] = 1;\n\n\t\t} else {\n\n\t\t\tvar xWidth:number = this._xMax*(this._pViewPort.width/this._pScissorRect.width);\n\t\t\tvar yHgt:number = this._yMax*(this._pViewPort.height/this._pScissorRect.height);\n\t\t\tvar center:number = this._xMax*(this._pScissorRect.x*2 - this._pViewPort.width)/this._pScissorRect.width + this._xMax;\n\t\t\tvar middle:number = -this._yMax*(this._pScissorRect.y*2 - this._pViewPort.height)/this._pScissorRect.height - this._yMax;\n\n\t\t\tleft = center - xWidth;\n\t\t\tright = center + xWidth;\n\t\t\ttop = middle - yHgt;\n\t\t\tbottom = middle + yHgt;\n\n\t\t\traw[0] = 2*1/(right - left);\n\t\t\traw[5] = -2*1/(top - bottom);\n\t\t\traw[10] = 1/(this._pFar - this._pNear);\n\n\t\t\traw[12] = (right + left)/(right - left);\n\t\t\traw[13] = (bottom + top)/(bottom - top);\n\t\t\traw[14] = this._pNear/(this.near - this.far);\n\n\t\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\t\traw[15] = 1;\n\t\t}\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pFrustumCorners[12] = this._pFrustumCorners[21] = left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pFrustumCorners[15] = this._pFrustumCorners[18] = right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pFrustumCorners[13] = this._pFrustumCorners[16] = top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pFrustumCorners[19] = this._pFrustumCorners[22] = bottom;\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pMatrixInvalid = false;\n\t}\n}\n\nexport default OrthographicProjection;",
    "import Matrix3DUtils\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport CoordinateSystem\t\t\tfrom \"awayjs-core/lib/projections/CoordinateSystem\";\nimport ProjectionBase\t\t\tfrom \"awayjs-core/lib/projections/ProjectionBase\";\n\nclass PerspectiveProjection extends ProjectionBase\n{\n\tprivate _fieldOfView:number = 60;\n\tprivate _focalLength:number = 1000;\n\tprivate _hFieldOfView:number = 60;\n\tprivate _hFocalLength:number = 1000;\n\tprivate _preserveAspectRatio:boolean = true;\n\tprivate _preserveFocalLength:boolean = false;\n\n\tconstructor(fieldOfView:number = 60, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper(coordinateSystem);\n\t\tthis.fieldOfView = fieldOfView;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveAspectRatio():boolean\n\t{\n\t\treturn this._preserveAspectRatio;\n\t}\n\n\tpublic set preserveAspectRatio(value:boolean)\n\t{\n\t\tif (this._preserveAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._preserveAspectRatio = value;\n\n\t\tif (this._preserveAspectRatio)\n\t\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get preserveFocalLength():boolean\n\t{\n\t\treturn this._preserveFocalLength;\n\t}\n\n\tpublic set preserveFocalLength(value:boolean)\n\t{\n\t\tif (this._preserveFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._preserveFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get fieldOfView():number\n\t{\n\t\treturn this._fieldOfView;\n\t}\n\n\tpublic set fieldOfView(value:number)\n\t{\n\t\tif (this._fieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._fieldOfView = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get focalLength():number\n\t{\n\t\treturn this._focalLength;\n\t}\n\n\tpublic set focalLength(value:number)\n\t{\n\t\tif (this._focalLength == value)\n\t\t\treturn;\n\n\t\tthis._focalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFieldOfView():number\n\t{\n\t\treturn this._hFieldOfView;\n\t}\n\n\tpublic set hFieldOfView(value:number)\n\t{\n\t\tif (this._hFieldOfView == value)\n\t\t\treturn;\n\n\t\tthis._hFieldOfView = value;\n\n\t\tthis._hFocalLength = 1/Math.tan(this._hFieldOfView*Math.PI/360);\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get hFocalLength():number\n\t{\n\t\treturn this._hFocalLength;\n\t}\n\n\tpublic set hFocalLength(value:number)\n\t{\n\t\tif (this._hFocalLength == value)\n\t\t\treturn;\n\n\t\tthis._hFocalLength = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\n\t//@override\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tvar v:Vector3D = new Vector3D(nX, -nY, sZ, 1.0);\n\n\t\tv.x *= sZ;\n\t\tv.y *= sZ;\n\n\t\tv = this.unprojectionMatrix.transformVector(v);\n\n\t\t//z is unaffected by transform\n\t\tv.z = sZ;\n\n\t\treturn v;\n\t}\n\n\t//@override\n\tpublic clone():ProjectionBase\n\t{\n\t\tvar clone:PerspectiveProjection = new PerspectiveProjection(this._fieldOfView);\n\t\tclone._pNear = this._pNear;\n\t\tclone._pFar = this._pFar;\n\t\tclone._pAspectRatio = this._pAspectRatio;\n\t\tclone._pCoordinateSystem = this._pCoordinateSystem;\n\t\treturn clone;\n\t}\n\n\t//@override\n\tpublic pUpdateMatrix()\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tif (this._preserveFocalLength) {\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\n\t\t\tthis._fieldOfView = Math.atan(0.5*this._pScissorRect.height/this._focalLength)*360/Math.PI;\n\t\t\tthis._hFieldOfView = Math.atan(0.5*this._pScissorRect.width/this._hFocalLength)*360/Math.PI;\n\t\t} else {\n\t\t\tthis._focalLength = 0.5*this._pScissorRect.height/Math.tan(this._fieldOfView*Math.PI/360);\n\n\t\t\tif (this._preserveAspectRatio)\n\t\t\t\tthis._hFocalLength = this._focalLength;\n\t\t\telse\n\t\t\t\tthis._hFocalLength = 0.5*this._pScissorRect.width/Math.tan(this._hFieldOfView*Math.PI/360);\n\t\t}\n\n\t\tvar tanMinX = -this._pOriginX/this._hFocalLength;\n\t\tvar tanMaxX = (1 - this._pOriginX)/this._hFocalLength;\n\t\tvar tanMinY = -this._pOriginY/this._focalLength;\n\t\tvar tanMaxY = (1 - this._pOriginY)/this._focalLength;\n\n\t\tvar left:number;\n\t\tvar right:number;\n\t\tvar top:number;\n\t\tvar bottom:number;\n\n\t\t// assume scissored frustum\n\t\tvar center:number = -((tanMinX - tanMaxX)*this._pScissorRect.x + tanMinX*this._pScissorRect.width);\n\t\tvar middle:number = ((tanMinY - tanMaxY)*this._pScissorRect.y + tanMinY*this._pScissorRect.height);\n\n\t\tleft = center - (tanMaxX - tanMinX)*this._pViewPort.width;\n\t\tright = center;\n\t\ttop = middle;\n\t\tbottom = middle + (tanMaxY - tanMinY)*this._pViewPort.height;\n\n\t\traw[0] = 2/(right - left);\n\t\traw[5] = 2/(bottom - top);\n\t\traw[8] = (right + left)/(right - left);\n\t\traw[9] = (bottom + top)/(bottom - top);\n\t\traw[10] = (this._pFar + this._pNear)/(this._pFar - this._pNear);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -2*this._pFar*this._pNear/(this._pFar - this._pNear);\n\n\t\tif (this._pCoordinateSystem == CoordinateSystem.RIGHT_HANDED)\n\t\t\traw[5] = -raw[5];\n\n\t\tthis._pMatrix.copyRawDataFrom(raw);\n\n\t\tthis._pFrustumCorners[0] = this._pFrustumCorners[9] = this._pNear*left;\n\t\tthis._pFrustumCorners[3] = this._pFrustumCorners[6] = this._pNear*right;\n\t\tthis._pFrustumCorners[1] = this._pFrustumCorners[4] = this._pNear*top;\n\t\tthis._pFrustumCorners[7] = this._pFrustumCorners[10] = this._pNear*bottom;\n\n\t\tthis._pFrustumCorners[12] = this._pFrustumCorners[21] = this._pFar*left;\n\t\tthis._pFrustumCorners[15] = this._pFrustumCorners[18] = this._pFar*right;\n\t\tthis._pFrustumCorners[13] = this._pFrustumCorners[16] = this._pFar*top;\n\t\tthis._pFrustumCorners[19] = this._pFrustumCorners[22] = this._pFar*bottom;\n\n\t\tthis._pFrustumCorners[2] = this._pFrustumCorners[5] = this._pFrustumCorners[8] = this._pFrustumCorners[11] = this._pNear;\n\t\tthis._pFrustumCorners[14] = this._pFrustumCorners[17] = this._pFrustumCorners[20] = this._pFrustumCorners[23] = this._pFar;\n\n\t\tthis._pMatrixInvalid = false;\n\n\n\t}\n}\n\nexport default PerspectiveProjection;",
    "import Matrix3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Rectangle\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport EventDispatcher\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport ProjectionEvent\t\t\tfrom \"awayjs-core/lib/events/ProjectionEvent\";\nimport AbstractMethodError\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport IProjection\t\t\t\tfrom \"awayjs-core/lib/projections/IProjection\";\n\nclass ProjectionBase extends EventDispatcher implements IProjection\n{\n\tpublic _pMatrix:Matrix3D = new Matrix3D();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\tpublic _pViewPort:Rectangle = new Rectangle();\n\tpublic _pNear:number = 20;\n\tpublic _pFar:number = 3000;\n\tpublic _pAspectRatio:number = 1;\n\n\tpublic _pMatrixInvalid:boolean = true;\n\tpublic _pFrustumCorners:number[] = [];\n\tpublic _pCoordinateSystem:string;\n\tpublic _pOriginX:number = 0.5;\n\tpublic _pOriginY:number = 0.5;\n\n\tprivate _unprojection:Matrix3D;\n\tprivate _unprojectionInvalid:boolean = true;\n\n\tconstructor(coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tsuper();\n\n\t\tthis.coordinateSystem = coordinateSystem;\n\t}\n\n\t/**\n\t * The handedness of the coordinate system projection. The default is LEFT_HANDED.\n\t */\n\tpublic get coordinateSystem():string\n\t{\n\t\treturn this._pCoordinateSystem;\n\t}\n\n\tpublic set coordinateSystem(value:string)\n\t{\n\t\tif (this._pCoordinateSystem == value)\n\t\t\treturn;\n\n\t\tthis._pCoordinateSystem = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get frustumCorners():number[]\n\t{\n\t\treturn this._pFrustumCorners;\n\t}\n\n\tpublic set frustumCorners(frustumCorners:number[])\n\t{\n\t\tthis._pFrustumCorners = frustumCorners;\n\t}\n\n\tpublic get matrix():Matrix3D\n\t{\n\t\tif (this._pMatrixInvalid) {\n\t\t\tthis.pUpdateMatrix();\n\t\t\tthis._pMatrixInvalid = false;\n\t\t}\n\t\treturn this._pMatrix;\n\t}\n\n\tpublic set matrix(value:Matrix3D)\n\t{\n\t\tthis._pMatrix = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get near():number\n\t{\n\t\treturn this._pNear;\n\t}\n\n\tpublic set near(value:number)\n\t{\n\t\tif (value == this._pNear) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pNear = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic get originX():number\n\t{\n\t\treturn this._pOriginX;\n\t}\n\n\tpublic set originX(value:number)\n\t{\n\t\tif (this._pOriginX == value)\n\t\t\treturn;\n\n\t\tthis._pOriginX = value;\n\t}\n\n\tpublic get originY():number\n\t{\n\t\treturn this._pOriginY;\n\t}\n\n\tpublic set originY(value:number)\n\t{\n\t\tif (this._pOriginY == value)\n\t\t\treturn;\n\n\t\tthis._pOriginY = value;\n\t}\n\n\tpublic get far():number\n\t{\n\t\treturn this._pFar;\n\t}\n\n\tpublic set far(value:number)\n\t{\n\t\tif (value == this._pFar) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pFar = value;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this.matrix.transformVector(point3d);\n\t\tv.x = v.x/v.w;\n\t\tv.y = -v.y/v.w;\n\n\t\t//z is unaffected by transform\n\t\tv.z = point3d.z;\n\n\t\treturn v;\n\t}\n\n\tpublic get unprojectionMatrix():Matrix3D\n\t{\n\t\tif (this._unprojectionInvalid) {\n\t\t\tif (!this._unprojection)\n\t\t\t\tthis._unprojection = new Matrix3D();\n\n\t\t\tthis._unprojection.copyFrom(this.matrix);\n\t\t\tthis._unprojection.invert();\n\t\t\tthis._unprojectionInvalid = false;\n\t\t}\n\t\treturn this._unprojection;\n\t}\n\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():ProjectionBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iAspectRatio():number\n\t{\n\t\treturn this._pAspectRatio;\n\t}\n\n\tpublic set _iAspectRatio(value:number)\n\t{\n\t\tif (this._pAspectRatio == value)\n\t\t\treturn;\n\n\t\tthis._pAspectRatio = value;\n\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic pInvalidateMatrix()\n\t{\n\t\tthis._pMatrixInvalid = true;\n\t\tthis._unprojectionInvalid = true;\n\t\tthis.dispatchEvent(new ProjectionEvent(ProjectionEvent.MATRIX_CHANGED, this));\n\t}\n\n\tpublic pUpdateMatrix()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iUpdateScissorRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pScissorRect.x = x;\n\t\tthis._pScissorRect.y = y;\n\t\tthis._pScissorRect.width = width;\n\t\tthis._pScissorRect.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n\n\tpublic _iUpdateViewport(x:number, y:number, width:number, height:number)\n\t{\n\t\tthis._pViewPort.x = x;\n\t\tthis._pViewPort.y = y;\n\t\tthis._pViewPort.width = width;\n\t\tthis._pViewPort.height = height;\n\t\tthis.pInvalidateMatrix();\n\t}\n}\n\nexport default ProjectionBase;",
    "export {default as CoordinateSystem}\t\t\t\tfrom \"awayjs-core/lib/projections/CoordinateSystem\";\nexport {default as FreeMatrixProjection}\t\t\tfrom \"awayjs-core/lib/projections/FreeMatrixProjection\";\nexport {default as IProjection}\t\t\t\t\t\tfrom \"awayjs-core/lib/projections/IProjection\";\nexport {default as ObliqueNearPlaneProjection}\t\tfrom \"awayjs-core/lib/projections/ObliqueNearPlaneProjection\";\nexport {default as OrthographicOffCenterProjection}\tfrom \"awayjs-core/lib/projections/OrthographicOffCenterProjection\";\nexport {default as OrthographicProjection}\t\t\tfrom \"awayjs-core/lib/projections/OrthographicProjection\";\nexport {default as PerspectiveProjection}\t\t\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\nexport {default as ProjectionBase}\t\t\t\t\tfrom \"awayjs-core/lib/projections/ProjectionBase\";",
    "class Keyboard\n{\n\t/**\n\t * Constant associated with the key code value for the A key (65).\n\t */\n\tpublic static A:number /*uint*/ = 65;\n\n\t/**\n\t * Constant associated with the key code value for the Alternate (Option) key  (18).\n\t */\n\tpublic static ALTERNATE:number /*uint*/ = 18;\n\n\t/**\n\t * Select the audio mode\n\t */\n\tpublic static AUDIO:number /*uint*/ = 0x01000017;\n\n\t/**\n\t * Constant associated with the key code value for the B key (66).\n\t */\n\tpublic static B:number /*uint*/ = 66;\n\n\t/**\n\t * Return to previous page in application\n\t */\n\tpublic static BACK:number /*uint*/ = 0x01000016;\n\n\t/**\n\t * Constant associated with the key code value for the ` key (192).\n\t */\n\tpublic static BACKQUOTE:number /*uint*/ = 192;\n\n\t/**\n\t * Constant associated with the key code value for the \\ key (220).\n\t */\n\tpublic static BACKSLASH:number /*uint*/ = 220;\n\n\t/**\n\t * Constant associated with the key code value for the Backspace key (8).\n\t */\n\tpublic static BACKSPACE:number /*uint*/ = 8;\n\n\t/**\n\t * Blue function key button\n\t */\n\tpublic static BLUE:number /*uint*/ = 0x01000003;\n\n\t/**\n\t * Constant associated with the key code value for the C key (67).\n\t */\n\tpublic static C:number /*uint*/ = 67;\n\n\t/**\n\t * Constant associated with the key code value for the Caps Lock key (20).\n\t */\n\tpublic static CAPS_LOCK:number /*uint*/ = 20;\n\n\t/**\n\t * Channel down\n\t */\n\tpublic static CHANNEL_DOWN:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Channel up\n\t */\n\tpublic static CHANNEL_UP:number /*uint*/ = 0x01000005;\n\n\t/**\n\t * Constant associated with the key code value for the , key (188).\n\t */\n\tpublic static COMMA:number /*uint*/ = 188;\n\n\t/**\n\t * Constant associated with the Mac command key (15). This constant is\n\t * currently only used for setting menu key equivalents.\n\t */\n\tpublic static COMMAND:number /*uint*/ = 15;\n\n\t/**\n\t * Constant associated with the key code value for the Control key (17).\n\t */\n\tpublic static CONTROL:number /*uint*/ = 17;\n\n\t/**\n\t * An array containing all the defined key name constants.\n\t */\n\tpublic static CharCodeStrings:Array<any>;\n\n\t/**\n\t * Constant associated with the key code value for the D key (68).\n\t */\n\tpublic static D:number /*uint*/ = 68;\n\n\t/**\n\t * Constant associated with the key code value for the Delete key (46).\n\t */\n\tpublic static DELETE:number /*uint*/ = 46;\n\n\t/**\n\t * Constant associated with the key code value for the Down Arrow key (40).\n\t */\n\tpublic static DOWN:number /*uint*/ = 40;\n\n\t/**\n\t * Engage DVR application mode\n\t */\n\tpublic static DVR:number /*uint*/ = 0x01000019;\n\n\t/**\n\t * Constant associated with the key code value for the E key (69).\n\t */\n\tpublic static E:number /*uint*/ = 69;\n\n\t/**\n\t * Constant associated with the key code value for the End key (35).\n\t */\n\tpublic static END:number /*uint*/ = 35;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key (13).\n\t */\n\tpublic static ENTER:number /*uint*/ = 13;\n\n\t/**\n\t * Constant associated with the key code value for the = key (187).\n\t */\n\tpublic static EQUAL:number /*uint*/ = 187;\n\n\t/**\n\t * Constant associated with the key code value for the Escape key (27).\n\t */\n\tpublic static ESCAPE:number /*uint*/ = 27;\n\n\t/**\n\t * Exits current application mode\n\t */\n\tpublic static EXIT:number /*uint*/ = 0x01000015;\n\n\t/**\n\t * Constant associated with the key code value for the F key (70).\n\t */\n\tpublic static F:number /*uint*/ = 70;\n\n\t/**\n\t * Constant associated with the key code value for the F1 key (112).\n\t */\n\tpublic static F1:number /*uint*/ = 112;\n\n\t/**\n\t * Constant associated with the key code value for the F10 key (121).\n\t */\n\tpublic static F10:number /*uint*/ = 121;\n\n\t/**\n\t * Constant associated with the key code value for the F11 key (122).\n\t */\n\tpublic static F11:number /*uint*/ = 122;\n\n\t/**\n\t * Constant associated with the key code value for the F12 key (123).\n\t */\n\tpublic static F12:number /*uint*/ = 123;\n\n\t/**\n\t * Constant associated with the key code value for the F13 key (124).\n\t */\n\tpublic static F13:number /*uint*/ = 124;\n\n\t/**\n\t * Constant associated with the key code value for the F14 key (125).\n\t */\n\tpublic static F14:number /*uint*/ = 125;\n\n\t/**\n\t * Constant associated with the key code value for the F15 key (126).\n\t */\n\tpublic static F15:number /*uint*/ = 126;\n\n\t/**\n\t * Constant associated with the key code value for the F2 key (113).\n\t */\n\tpublic static F2:number /*uint*/ = 113;\n\n\t/**\n\t * Constant associated with the key code value for the F3 key (114).\n\t */\n\tpublic static F3:number /*uint*/ = 114;\n\n\t/**\n\t * Constant associated with the key code value for the F4 key (115).\n\t */\n\tpublic static F4:number /*uint*/ = 115;\n\n\t/**\n\t * Constant associated with the key code value for the F5 key (116).\n\t */\n\tpublic static F5:number /*uint*/ = 116;\n\n\t/**\n\t * Constant associated with the key code value for the F6 key (117).\n\t */\n\tpublic static F6:number /*uint*/ = 117;\n\n\t/**\n\t * Constant associated with the key code value for the F7 key (118).\n\t */\n\tpublic static F7:number /*uint*/ = 118;\n\n\t/**\n\t * Constant associated with the key code value for the F8 key (119).\n\t */\n\tpublic static F8:number /*uint*/ = 119;\n\n\t/**\n\t * Constant associated with the key code value for the F9 key (120).\n\t */\n\tpublic static F9:number /*uint*/ = 120;\n\n\t/**\n\t * Engage fast-forward transport mode\n\t */\n\tpublic static FAST_FORWARD:number /*uint*/ = 0x0100000A;\n\n\t/**\n\t * Constant associated with the key code value for the G key (71).\n\t */\n\tpublic static G:number /*uint*/ = 71;\n\n\t/**\n\t * Green function key button\n\t */\n\tpublic static GREEN:number /*uint*/ = 0x01000001;\n\n\t/**\n\t * Engage program guide\n\t */\n\tpublic static GUIDE:number /*uint*/ = 0x01000014;\n\n\t/**\n\t * Constant associated with the key code value for the H key (72).\n\t */\n\tpublic static H:number /*uint*/ = 72;\n\n\t/**\n\t * Engage help application or context-sensitive help\n\t */\n\tpublic static HELP:number /*uint*/ = 0x0100001D;\n\n\t/**\n\t * Constant associated with the key code value for the Home key (36).\n\t */\n\tpublic static HOME:number /*uint*/ = 36;\n\n\t/**\n\t * Constant associated with the key code value for the I key (73).\n\t */\n\tpublic static I:number /*uint*/ = 73;\n\n\t/**\n\t * Info button\n\t */\n\tpublic static INFO:number /*uint*/ = 0x01000013;\n\n\t/**\n\t * Cycle input\n\t */\n\tpublic static INPUT:number /*uint*/ = 0x0100001B;\n\n\t/**\n\t * Constant associated with the key code value for the Insert key (45).\n\t */\n\tpublic static INSERT:number /*uint*/ = 45;\n\n\t/**\n\t * Constant associated with the key code value for the J key (74).\n\t */\n\tpublic static J:number /*uint*/ = 74;\n\n\t/**\n\t * Constant associated with the key code value for the K key (75).\n\t */\n\tpublic static K:number /*uint*/ = 75;\n\n\t/**\n\t * The Begin key\n\t */\n\tpublic static KEYNAME_BEGIN:string = \"Begin\";\n\n\t/**\n\t * The Break key\n\t */\n\tpublic static KEYNAME_BREAK:string = \"Break\";\n\n\t/**\n\t * The Clear Display key\n\t */\n\tpublic static KEYNAME_CLEARDISPLAY:string = \"ClrDsp\";\n\n\t/**\n\t * The Clear Line key\n\t */\n\tpublic static KEYNAME_CLEARLINE:string = \"ClrLn\";\n\n\t/**\n\t * The Delete key\n\t */\n\tpublic static KEYNAME_DELETE:string = \"Delete\";\n\n\t/**\n\t * The Delete Character key\n\t */\n\tpublic static KEYNAME_DELETECHAR:string = \"DelChr\";\n\n\t/**\n\t * The Delete Line key\n\t */\n\tpublic static KEYNAME_DELETELINE:string = \"DelLn\";\n\n\t/**\n\t * The down arrow\n\t */\n\tpublic static KEYNAME_DOWNARROW:string = \"Down\";\n\n\t/**\n\t * The End key\n\t */\n\tpublic static KEYNAME_END:string = \"End\";\n\n\t/**\n\t * The Execute key\n\t */\n\tpublic static KEYNAME_EXECUTE:string = \"Exec\";\n\n\t/**\n\t * The F1 key\n\t */\n\tpublic static KEYNAME_F1:string = \"F1\";\n\n\t/**\n\t * The F10 key\n\t */\n\tpublic static KEYNAME_F10:string = \"F10\";\n\n\t/**\n\t * The F11 key\n\t */\n\tpublic static KEYNAME_F11:string = \"F11\";\n\n\t/**\n\t * The F12 key\n\t */\n\tpublic static KEYNAME_F12:string = \"F12\";\n\n\t/**\n\t * The F13 key\n\t */\n\tpublic static KEYNAME_F13:string = \"F13\";\n\n\t/**\n\t * The F14 key\n\t */\n\tpublic static KEYNAME_F14:string = \"F14\";\n\n\t/**\n\t * The F15 key\n\t */\n\tpublic static KEYNAME_F15:string = \"F15\";\n\n\t/**\n\t * The F16 key\n\t */\n\tpublic static KEYNAME_F16:string = \"F16\";\n\n\t/**\n\t * The F17 key\n\t */\n\tpublic static KEYNAME_F17:string = \"F17\";\n\n\t/**\n\t * The F18 key\n\t */\n\tpublic static KEYNAME_F18:string = \"F18\";\n\n\t/**\n\t * The F19 key\n\t */\n\tpublic static KEYNAME_F19:string = \"F19\";\n\n\t/**\n\t * The F2 key\n\t */\n\tpublic static KEYNAME_F2:string = \"F2\";\n\n\t/**\n\t * The F20 key\n\t */\n\tpublic static KEYNAME_F20:string = \"F20\";\n\n\t/**\n\t * The F21 key\n\t */\n\tpublic static KEYNAME_F21:string = \"F21\";\n\n\t/**\n\t * The F22 key\n\t */\n\tpublic static KEYNAME_F22:string = \"F22\";\n\n\t/**\n\t * The F23 key\n\t */\n\tpublic static KEYNAME_F23:string = \"F23\";\n\n\t/**\n\t * The F24 key\n\t */\n\tpublic static KEYNAME_F24:string = \"F24\";\n\n\t/**\n\t * The F25 key\n\t */\n\tpublic static KEYNAME_F25:string = \"F25\";\n\n\t/**\n\t * The F26 key\n\t */\n\tpublic static KEYNAME_F26:string = \"F26\";\n\n\t/**\n\t * The F27 key\n\t */\n\tpublic static KEYNAME_F27:string = \"F27\";\n\n\t/**\n\t * The F28 key\n\t */\n\tpublic static KEYNAME_F28:string = \"F28\";\n\n\t/**\n\t * The F29 key\n\t */\n\tpublic static KEYNAME_F29:string = \"F29\";\n\n\t/**\n\t * The F3 key\n\t */\n\tpublic static KEYNAME_F3:string = \"F3\";\n\n\t/**\n\t * The F30 key\n\t */\n\tpublic static KEYNAME_F30:string = \"F30\";\n\n\t/**\n\t * The F31 key\n\t */\n\tpublic static KEYNAME_F31:string = \"F31\";\n\n\t/**\n\t * The F32 key\n\t */\n\tpublic static KEYNAME_F32:string = \"F32\";\n\n\t/**\n\t * The F33 key\n\t */\n\tpublic static KEYNAME_F33:string = \"F33\";\n\n\t/**\n\t * The F34 key\n\t */\n\tpublic static KEYNAME_F34:string = \"F34\";\n\n\t/**\n\t * The F35 key\n\t */\n\tpublic static KEYNAME_F35:string = \"F35\";\n\n\t/**\n\t * The F4 key\n\t */\n\tpublic static KEYNAME_F4:string = \"F4\";\n\n\t/**\n\t * The F5 key\n\t */\n\tpublic static KEYNAME_F5:string = \"F5\";\n\n\t/**\n\t * The F6 key\n\t */\n\tpublic static KEYNAME_F6:string = \"F6\";\n\n\t/**\n\t * The F7 key\n\t */\n\tpublic static KEYNAME_F7:string = \"F7\";\n\n\t/**\n\t * The F8 key\n\t */\n\tpublic static KEYNAME_F8:string = \"F8\";\n\n\t/**\n\t * The F9 key\n\t */\n\tpublic static KEYNAME_F9:string = \"F9\";\n\n\t/**\n\t * The Find key\n\t */\n\tpublic static KEYNAME_FIND:string = \"Find\";\n\n\t/**\n\t * The Help key\n\t */\n\tpublic static KEYNAME_HELP:string = \"Help\";\n\n\t/**\n\t * The Home key\n\t */\n\tpublic static KEYNAME_HOME:string = \"Home\";\n\n\t/**\n\t * The Insert key\n\t */\n\tpublic static KEYNAME_INSERT:string = \"Insert\";\n\n\t/**\n\t * The Insert Character key\n\t */\n\tpublic static KEYNAME_INSERTCHAR:string = \"InsChr\";\n\n\t/**\n\t * The Insert Line key\n\t */\n\tpublic static KEYNAME_INSERTLINE:string = \"LnsLn\";\n\n\t/**\n\t * The left arrow\n\t */\n\tpublic static KEYNAME_LEFTARROW:string = \"Left\";\n\n\t/**\n\t * The Menu key\n\t */\n\tpublic static KEYNAME_MENU:string = \"Menu\";\n\n\t/**\n\t * The Mode Switch key\n\t */\n\tpublic static KEYNAME_MODESWITCH:string = \"ModeSw\";\n\n\t/**\n\t * The Next key\n\t */\n\tpublic static KEYNAME_NEXT:string = \"Next\";\n\n\t/**\n\t * The Page Down key\n\t */\n\tpublic static KEYNAME_PAGEDOWN:string = \"PgDn\";\n\n\t/**\n\t * The Page Up key\n\t */\n\tpublic static KEYNAME_PAGEUP:string = \"PgUp\";\n\n\t/**\n\t * The Pause key\n\t */\n\tpublic static KEYNAME_PAUSE:string = \"Pause\";\n\n\t/**\n\t * The Previous key\n\t */\n\tpublic static KEYNAME_PREV:string = \"Prev\";\n\n\t/**\n\t * The PRINT key\n\t */\n\tpublic static KEYNAME_PRINT:string = \"Print\";\n\n\t/**\n\t * The PRINT Screen\n\t */\n\tpublic static KEYNAME_PRINTSCREEN:string = \"PrntScrn\";\n\n\t/**\n\t * The Redo key\n\t */\n\tpublic static KEYNAME_REDO:string = \"Redo\";\n\n\t/**\n\t * The Reset key\n\t */\n\tpublic static KEYNAME_RESET:string = \"Reset\";\n\n\t/**\n\t * The right arrow\n\t */\n\tpublic static KEYNAME_RIGHTARROW:string = \"Right\";\n\n\t/**\n\t * The Scroll Lock key\n\t */\n\tpublic static KEYNAME_SCROLLLOCK:string = \"ScrlLck\";\n\n\t/**\n\t * The Select key\n\t */\n\tpublic static KEYNAME_SELECT:string = \"Select\";\n\n\t/**\n\t * The Stop key\n\t */\n\tpublic static KEYNAME_STOP:string = \"Stop\";\n\n\t/**\n\t * The System Request key\n\t */\n\tpublic static KEYNAME_SYSREQ:string = \"SysReq\";\n\n\t/**\n\t * The System key\n\t */\n\tpublic static KEYNAME_SYSTEM:string = \"Sys\";\n\n\t/**\n\t * The Undo key\n\t */\n\tpublic static KEYNAME_UNDO:string = \"Undo\";\n\n\t/**\n\t * The up arrow\n\t */\n\tpublic static KEYNAME_UPARROW:string = \"Up\";\n\n\t/**\n\t * The User key\n\t */\n\tpublic static KEYNAME_USER:string = \"User\";\n\n\t/**\n\t * Constant associated with the key code value for the L key (76).\n\t */\n\tpublic static L:number /*uint*/ = 76;\n\n\t/**\n\t * Watch last channel or show watched\n\t */\n\tpublic static LAST:number /*uint*/ = 0x01000011;\n\n\t/**\n\t * Constant associated with the key code value for the Left Arrow key (37).\n\t */\n\tpublic static LEFT:number /*uint*/ = 37;\n\n\t/**\n\t * Constant associated with the key code value for the [ key (219).\n\t */\n\tpublic static LEFTBRACKET:number /*uint*/ = 219;\n\n\t/**\n\t * Return to live [position in broadcast]\n\t */\n\tpublic static LIVE:number /*uint*/ = 0x01000010;\n\n\t/**\n\t * Constant associated with the key code value for the M key (77).\n\t */\n\tpublic static M:number /*uint*/ = 77;\n\n\t/**\n\t * Engage \"Master Shell\" e.g. TiVo or other vendor button\n\t */\n\tpublic static MASTER_SHELL:number /*uint*/ = 0x0100001E;\n\n\t/**\n\t * Engage menu\n\t */\n\tpublic static MENU:number /*uint*/ = 0x01000012;\n\n\t/**\n\t * Constant associated with the key code value for the - key (189).\n\t */\n\tpublic static MINUS:number /*uint*/ = 189;\n\n\t/**\n\t * Constant associated with the key code value for the N key (78).\n\t */\n\tpublic static N:number /*uint*/ = 78;\n\n\t/**\n\t * Skip to next track or chapter\n\t */\n\tpublic static NEXT:number /*uint*/ = 0x0100000E;\n\n\t/**\n\t * Constant associated with the key code value for the 0 key (48).\n\t */\n\tpublic static NUMBER_0:number /*uint*/ = 48;\n\n\t/**\n\t * Constant associated with the key code value for the 1 key (49).\n\t */\n\tpublic static NUMBER_1:number /*uint*/ = 49;\n\n\t/**\n\t * Constant associated with the key code value for the 2 key (50).\n\t */\n\tpublic static NUMBER_2:number /*uint*/ = 50;\n\n\t/**\n\t * Constant associated with the key code value for the 3 key (51).\n\t */\n\tpublic static NUMBER_3:number /*uint*/ = 51;\n\n\t/**\n\t * Constant associated with the key code value for the 4 key (52).\n\t */\n\tpublic static NUMBER_4:number /*uint*/ = 52;\n\n\t/**\n\t * Constant associated with the key code value for the 5 key (53).\n\t */\n\tpublic static NUMBER_5:number /*uint*/ = 53;\n\n\t/**\n\t * Constant associated with the key code value for the 6 key (54).\n\t */\n\tpublic static NUMBER_6:number /*uint*/ = 54;\n\n\t/**\n\t * Constant associated with the key code value for the 7 key (55).\n\t */\n\tpublic static NUMBER_7:number /*uint*/ = 55;\n\n\t/**\n\t * Constant associated with the key code value for the 8 key (56).\n\t */\n\tpublic static NUMBER_8:number /*uint*/ = 56;\n\n\t/**\n\t * Constant associated with the key code value for the 9 key (57).\n\t */\n\tpublic static NUMBER_9:number /*uint*/ = 57;\n\n\t/**\n\t * Constant associated with the pseudo-key code for the the number pad (21). Use to set numpad modifier on key equivalents\n\t */\n\tpublic static NUMPAD:number /*uint*/ = 21;\n\n\t/**\n\t * Constant associated with the key code value for the number 0 key on the number pad (96).\n\t */\n\tpublic static NUMPAD_0:number /*uint*/ = 96;\n\n\t/**\n\t * Constant associated with the key code value for the number 1 key on the number pad (97).\n\t */\n\tpublic static NUMPAD_1:number /*uint*/ = 97;\n\n\t/**\n\t * Constant associated with the key code value for the number 2 key on the number pad (98).\n\t */\n\tpublic static NUMPAD_2:number /*uint*/ = 98;\n\n\t/**\n\t * Constant associated with the key code value for the number 3 key on the number pad (99).\n\t */\n\tpublic static NUMPAD_3:number /*uint*/ = 99;\n\n\t/**\n\t * Constant associated with the key code value for the number 4 key on the number pad (100).\n\t */\n\tpublic static NUMPAD_4:number /*uint*/ = 100;\n\n\t/**\n\t * Constant associated with the key code value for the number 5 key on the number pad (101).\n\t */\n\tpublic static NUMPAD_5:number /*uint*/ = 101;\n\n\t/**\n\t * Constant associated with the key code value for the number 6 key on the number pad (102).\n\t */\n\tpublic static NUMPAD_6:number /*uint*/ = 102;\n\n\t/**\n\t * Constant associated with the key code value for the number 7 key on the number pad (103).\n\t */\n\tpublic static NUMPAD_7:number /*uint*/ = 103;\n\n\t/**\n\t * Constant associated with the key code value for the number 8 key on the number pad (104).\n\t */\n\tpublic static NUMPAD_8:number /*uint*/ = 104;\n\n\t/**\n\t * Constant associated with the key code value for the number 9 key on the number pad (105).\n\t */\n\tpublic static NUMPAD_9:number /*uint*/ = 105;\n\n\t/**\n\t * Constant associated with the key code value for the addition key on the number pad (107).\n\t */\n\tpublic static NUMPAD_ADD:number /*uint*/ = 107;\n\n\t/**\n\t * Constant associated with the key code value for the decimal key on the number pad (110).\n\t */\n\tpublic static NUMPAD_DECIMAL:number /*uint*/ = 110;\n\n\t/**\n\t * Constant associated with the key code value for the division key on the number pad (111).\n\t */\n\tpublic static NUMPAD_DIVIDE:number /*uint*/ = 111;\n\n\t/**\n\t * Constant associated with the key code value for the Enter key on the number pad (108).\n\t */\n\tpublic static NUMPAD_ENTER:number /*uint*/ = 108;\n\n\t/**\n\t * Constant associated with the key code value for the multiplication key on the number pad (106).\n\t */\n\tpublic static NUMPAD_MULTIPLY:number /*uint*/ = 106;\n\n\t/**\n\t * Constant associated with the key code value for the subtraction key on the number pad (109).\n\t */\n\tpublic static NUMPAD_SUBTRACT:number /*uint*/ = 109;\n\n\t/**\n\t * Constant associated with the key code value for the O key (79).\n\t */\n\tpublic static O:number /*uint*/ = 79;\n\n\t/**\n\t * Constant associated with the key code value for the P key (80).\n\t */\n\tpublic static P:number /*uint*/ = 80;\n\n\t/**\n\t * Constant associated with the key code value for the Page Down key (34).\n\t */\n\tpublic static PAGE_DOWN:number /*uint*/ = 34;\n\n\t/**\n\t * Constant associated with the key code value for the Page Up key (33).\n\t */\n\tpublic static PAGE_UP:number /*uint*/ = 33;\n\n\t/**\n\t * Engage pause transport mode\n\t */\n\tpublic static PAUSE:number /*uint*/ = 0x01000008;\n\n\t/**\n\t * Constant associated with the key code value for the . key (190).\n\t */\n\tpublic static PERIOD:number /*uint*/ = 190;\n\n\t/**\n\t * Engage play transport mode\n\t */\n\tpublic static PLAY:number /*uint*/ = 0x01000007;\n\n\t/**\n\t * Skip to previous track or chapter\n\t */\n\tpublic static PREVIOUS:number /*uint*/ = 0x0100000F;\n\n\t/**\n\t * Constant associated with the key code value for the Q key (81).\n\t */\n\tpublic static Q:number /*uint*/ = 81;\n\n\t/**\n\t * Constant associated with the key code value for the ' key (222).\n\t */\n\tpublic static QUOTE:number /*uint*/ = 222;\n\n\t/**\n\t * Constant associated with the key code value for the R key (82).\n\t */\n\tpublic static R:number /*uint*/ = 82;\n\n\t/**\n\t * Record item or engage record transport mode\n\t */\n\tpublic static RECORD:number /*uint*/ = 0x01000006;\n\n\t/**\n\t * Red function key button\n\t */\n\tpublic static RED:number /*uint*/ = 0x01000000;\n\n\t/**\n\t * Engage rewind transport mode\n\t */\n\tpublic static REWIND:number /*uint*/ = 0x0100000B;\n\n\t/**\n\t * Constant associated with the key code value for the Right Arrow key (39).\n\t */\n\tpublic static RIGHT:number /*uint*/ = 39;\n\n\t/**\n\t * Constant associated with the key code value for the ] key (221).\n\t */\n\tpublic static RIGHTBRACKET:number /*uint*/ = 221;\n\n\t/**\n\t * Constant associated with the key code value for the S key (83).\n\t */\n\tpublic static S:number /*uint*/ = 83;\n\n\t/**\n\t * Search button\n\t */\n\tpublic static SEARCH:number /*uint*/ = 0x0100001F;\n\n\t/**\n\t * Constant associated with the key code value for the ; key (186).\n\t */\n\tpublic static SEMICOLON:number /*uint*/ = 186;\n\n\t/**\n\t * Engage setup application or menu\n\t */\n\tpublic static SETUP:number /*uint*/ = 0x0100001C;\n\n\t/**\n\t * Constant associated with the key code value for the Shift key (16).\n\t */\n\tpublic static SHIFT:number /*uint*/ = 16;\n\n\t/**\n\t * Quick skip backward (usually 7-10 seconds)\n\t */\n\tpublic static SKIP_BACKWARD:number /*uint*/ = 0x0100000D;\n\n\t/**\n\t * Quick skip ahead (usually 30 seconds)\n\t */\n\tpublic static SKIP_FORWARD:number /*uint*/ = 0x0100000C;\n\n\t/**\n\t * Constant associated with the key code value for the / key (191).\n\t */\n\tpublic static SLASH:number /*uint*/ = 191;\n\n\t/**\n\t * Constant associated with the key code value for the Spacebar (32).\n\t */\n\tpublic static SPACE:number /*uint*/ = 32;\n\n\t/**\n\t * Engage stop transport mode\n\t */\n\tpublic static STOP:number /*uint*/ = 0x01000009;\n\n\t/**\n\t * Toggle subtitles\n\t */\n\tpublic static SUBTITLE:number /*uint*/ = 0x01000018;\n\n\t/**\n\t * Constant associated with the key code value for the T key (84).\n\t */\n\tpublic static T:number /*uint*/ = 84;\n\n\t/**\n\t * Constant associated with the key code value for the Tab key (9).\n\t */\n\tpublic static TAB:number /*uint*/ = 9;\n\n\t/**\n\t * Constant associated with the key code value for the U key (85).\n\t */\n\tpublic static U:number /*uint*/ = 85;\n\n\t/**\n\t * Constant associated with the key code value for the Up Arrow key (38).\n\t */\n\tpublic static UP:number /*uint*/ = 38;\n\n\t/**\n\t * Constant associated with the key code value for the V key (86).\n\t */\n\tpublic static V:number /*uint*/ = 86;\n\n\t/**\n\t * Engage video-on-demand\n\t */\n\tpublic static VOD:number /*uint*/ = 0x0100001A;\n\n\t/**\n\t * Constant associated with the key code value for the W key (87).\n\t */\n\tpublic static W:number /*uint*/ = 87;\n\n\t/**\n\t * Constant associated with the key code value for the X key (88).\n\t */\n\tpublic static X:number /*uint*/ = 88;\n\n\t/**\n\t * Constant associated with the key code value for the Y key (89).\n\t */\n\tpublic static Y:number /*uint*/ = 89;\n\n\t/**\n\t * Yellow function key button\n\t */\n\tpublic static YELLOW:number /*uint*/ = 0x01000002;\n\n\t/**\n\t * Constant associated with the key code value for the Z key (90).\n\t */\n\tpublic static Z:number /*uint*/ = 90;\n\n}\n\nexport default Keyboard;",
    "export {default as Keyboard}\t\t\t\t\t\tfrom \"awayjs-core/lib/ui/Keyboard\";",
    "import BlendMode\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport ColorTransform\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Matrix\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Rectangle\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport ColorUtils\t\t\t\tfrom \"awayjs-core/lib/utils/ColorUtils\";\n\nclass BitmapImageUtils\n{\n\tpublic static _fillRect(context:CanvasRenderingContext2D, rect:Rectangle, color:number, transparent:boolean)\n\t{\n\t\tif (color == 0x0 && transparent) {\n\t\t\tcontext.clearRect(rect.x, rect.y, rect.width, rect.height);\n\t\t} else {\n\t\t\tvar argb:number[] = ColorUtils.float32ColorToARGB(color);\n\n\t\t\tif (transparent)\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',' + argb[0]/255 + ')';\n\t\t\telse\n\t\t\t\tcontext.fillStyle = 'rgba(' + argb[1] + ',' + argb[2] + ',' + argb[3] + ',1)';\n\n\t\t\tcontext.fillRect(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\t}\n\n\tpublic static _copyPixels(context:CanvasRenderingContext2D, bmpd:HTMLImageElement | HTMLCanvasElement | HTMLVideoElement, sourceRect:Rectangle, destRect:Rectangle)\n\t{\n\t\tcontext.drawImage(bmpd, sourceRect.x, sourceRect.y, sourceRect.width, sourceRect.height, destRect.x, destRect.y, destRect.width, destRect.height);\n\t}\n\n\tpublic static _draw(context:CanvasRenderingContext2D, source:any, matrix:Matrix, colorTransform:ColorTransform, blendMode:BlendMode, clipRect:Rectangle, smoothing:boolean)\n\t{\n\t\tcontext.save();\n\n\t\tif (matrix != null)\n\t\t\tcontext.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\n\t\tif (clipRect != null)\n\t\t\tcontext.drawImage(source, clipRect.x, clipRect.y, clipRect.width, clipRect.height);\n\t\telse\n\t\t\tcontext.drawImage(source, 0, 0);\n\n\t\tcontext.restore();\n\t}\n}\n\nexport default BitmapImageUtils;",
    "import AbstractMethodError\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nclass ByteArrayBase\n{\n\tpublic position:number = 0;\n\tpublic length:number = 0;\n\tpublic _mode:string = \"\";\n\n\tpublic static Base64Key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tthrow \"Virtual method\";\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\tthrow new AbstractMethodError('ByteArrayBase, getBytesAvailable() not implemented ');\n\t}\n\n\tpublic toString():string\n\t{\n\t\treturn \"[ByteArray] ( \" + this._mode + \" ) position=\" + this.position + \" length=\" + this.length;\n\t}\n\n\tpublic compareEqual(other, count)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (count > other.length - other.position)\n\t\t\tcount = other.length - other.position;\n\t\tvar co0 = count;\n\t\tvar r = true;\n\t\twhile (r && count >= 4) {\n\t\t\tcount -= 4;\n\t\t\tif (this.readUnsignedInt() != other.readUnsignedInt()) r = false;\n\t\t}\n\t\twhile (r && count >= 1) {\n\t\t\tcount--;\n\t\t\tif (this.readUnsignedByte() != other.readUnsignedByte()) r = false;\n\t\t}\n\t\tvar c0;\n\t\tthis.position -= (c0 - count);\n\t\tother.position -= (c0 - count);\n\t\treturn r;\n\t}\n\n\tpublic writeBase64String(s:string)\n\t{\n\t\tfor (var i:number = 0; i < s.length; i++) {\n\t\t\tvar v = s.charAt(i);\n\t\t}\n\t}\n\n\tpublic dumpToConsole()\n\t{\n\t\tvar oldpos = this.position;\n\t\tthis.position = 0;\n\t\tvar nstep:number = 8;\n\n\t\tfunction asHexString(x, digits)\n\t\t{\n\t\t\tvar lut:Array<string> = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\n\t\t\tvar sh:string = \"\";\n\t\t\tfor (var d:number = 0; d < digits; d++) {\n\t\t\t\tsh = lut[(x >> (d << 2)) & 0xf] + sh;\n\t\t\t}\n\t\t\treturn sh;\n\t\t}\n\n\t\tfor (var i = 0; i < this.length; i += nstep) {\n\t\t\tvar s:string = asHexString(i, 4) + \":\";\n\t\t\tfor (var j:number = 0; j < nstep && i + j < this.length; j++) {\n\t\t\t\ts += \" \" + asHexString(this.readUnsignedByte(), 2);\n\t\t\t}\n\t\t\tconsole.log(s);\n\t\t}\n\t\tthis.position = oldpos;\n\t}\n\n\tpublic readBase64String(count:number)\n\t{\n\t\tif (count == undefined || count > this.length - this.position)\n\t\t\tcount = this.length - this.position;\n\t\tif (!(count > 0)) return \"\";\n\n\t\treturn ByteArrayBase.internalGetBase64String(count, this.readUnsignedByte, this);\n\t}\n\n\tpublic static internalGetBase64String(count, getUnsignedByteFunc, self)\n\t{ // return base64 string of the next count bytes\n\t\tvar r = \"\";\n\t\tvar b0, b1, b2, enc1, enc2, enc3, enc4;\n\t\tvar base64Key = ByteArrayBase.Base64Key;\n\t\twhile (count >= 3) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tb2 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2) | (b2 >> 6);\n\t\t\tenc4 = b2 & 63;\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + base64Key.charAt(enc4);\n\t\t\tcount -= 3;\n\t\t}\n\t\t// pad\n\t\tif (count == 2) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tb1 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4) | (b1 >> 4);\n\t\t\tenc3 = ((b1 & 15) << 2);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + base64Key.charAt(enc3) + \"=\";\n\t\t} else if (count == 1) {\n\t\t\tb0 = getUnsignedByteFunc.apply(self);\n\t\t\tenc1 = b0 >> 2;\n\t\t\tenc2 = ((b0 & 3) << 4);\n\t\t\tr += base64Key.charAt(enc1) + base64Key.charAt(enc2) + \"==\";\n\t\t}\n\t\treturn r;\n\t}\n}\n\nexport default ByteArrayBase;",
    "import ByteArrayBase\t\t\tfrom \"awayjs-core/lib/utils/ByteArrayBase\";\n\nclass ByteArrayBuffer extends ByteArrayBase\n{\n\n\t/*\n\t public maxlength:number = 0;\n\t public arraybytes; //ArrayBuffer\n\t public unalignedarraybytestemp; //ArrayBuffer\n\t */\n\n\tpublic _bytes:number[];\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._bytes = [];\n\t\tthis._mode = \"Array\";\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[this.position++] = bi & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedByte():number\n\t{\n\t\tif (this.position >= this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\treturn this._bytes[ this.position++ ];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >> 8) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedShort():number\n\t{\n\t\tif (this.position + 2 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[ this.position + 1 ] << 8 );\n\t\tthis.position += 2;\n\t\treturn r;\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tvar bi:number = ~~b;\n\t\tthis._bytes[ this.position++ ] = bi & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 8) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 16) & 0xff;\n\t\tthis._bytes[ this.position++ ] = (bi >>> 24) & 0xff;\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readUnsignedInt():number\n\t{\n\t\tif (this.position + 4 > this.length) {\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\t\t}\n\t\tvar r:number = this._bytes[ this.position ] | ( this._bytes[this.position + 1] << 8 ) | ( this._bytes[this.position + 2] << 16 ) | ( this._bytes[this.position + 3] << 24 );\n\t\tthis.position += 4;\n\t\treturn r >>> 0;\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\t// this is crazy slow and silly, but as a fallback...\n\n\t\tthis.writeUnsignedInt(this.toFloatBits(Number(b)));\n\t}\n\n\tpublic toFloatBits(x:number)\n\t{\n\t\t// don't handle inf/nan yet\n\t\t// special case zero\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\t// remove the sign, after this we only deal with positive numbers\n\t\tvar sign:number = 0;\n\t\tif (x < 0) {\n\t\t\tx = -x;\n\t\t\tsign = 1;\n\t\t} else {\n\t\t\tsign = 0;\n\t\t}\n\t\t// a float value is now defined as: x = (1+(mantissa*2^-23))*(2^(exponent-127))\n\t\tvar exponent:number = Math.log(x)/Math.log(2);  // rough exponent\n\t\texponent = Math.floor(exponent);\n\t\tx = x*Math.pow(2, 23 - exponent);             // normalize to 24 bits\n\t\tvar mantissa = Math.floor(x) - 0x800000;\n\t\texponent = exponent + 127;\n\t\treturn( ( sign << 31 ) >>> 0) | ( exponent << 23 ) | mantissa;\n\t}\n\n\tpublic readFloat(b:number)\n\t{\n\t\treturn this.fromFloatBits(this.readUnsignedInt());\n\t}\n\n\tpublic fromFloatBits(x:number)\n\t{\n\t\tif (x == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar exponent:number = ( x >>> 23 ) & 0xff;\n\t\tvar mantissa:number = ( x & 0x7fffff ) | 0x800000;\n\t\tvar y = Math.pow(2, ( exponent - 127 ) - 23)*mantissa;\n\t\tif (x >>> 31 != 0) {\n\t\t\ty = -y;\n\t\t}\n\t\treturn y;\n\t}\n\n\t/*\n\t public ensureWriteableSpace( n:number )\n\t {\n\t this.ensureSpace( n + this.position );\n\t }\n\n\t private ensureSpace( n:number )\n\t {\n\t if ( n > this.maxlength ) {\n\t var newmaxlength:number = (n+255)&(~255);\n\t var newarraybuffer = new ArrayBuffer(newmaxlength);\n\t var view = new Uint8Array(this.arraybytes, 0, this.length);\n\t var newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t newview.set(view);      // memcpy\n\t this.arraybytes = newarraybuffer;\n\t this.maxlength = newmaxlength;\n\t }\n\t }\n\t */\n}\n\nexport default ByteArrayBuffer;",
    "import ByteArrayBase\t\t\tfrom \"awayjs-core/lib/utils/ByteArrayBase\";\n\nclass ByteArray extends ByteArrayBase\n{\n\tpublic maxlength:number;\n\tpublic arraybytes; //ArrayBuffer\n\tpublic unalignedarraybytestemp; //ArrayBuffer\n\n\tconstructor(maxlength:number = 4)\n\t{\n\t\tsuper();\n\t\tthis._mode = \"Typed array\";\n\t\tthis.maxlength = Math.max((maxlength + 255) & (~255), 4);\n\t\tthis.arraybytes = new ArrayBuffer(this.maxlength);\n\t\tthis.unalignedarraybytestemp = new ArrayBuffer(16);\n\t}\n\n\tpublic ensureWriteableSpace(n:number)\n\t{\n\t\tthis.ensureSpace(n + this.position);\n\t}\n\n\tpublic setArrayBuffer(aBuffer:ArrayBuffer):void\n\t{\n\t\tthis.ensureSpace(aBuffer.byteLength);\n\n\t\tthis.length = aBuffer.byteLength;\n\n\t\tvar inInt8AView:Int8Array = new Int8Array(aBuffer);\n\t\tvar localInt8View:Int8Array = new Int8Array(this.arraybytes, 0, this.length);\n\n\t\tlocalInt8View.set(inInt8AView);\n\n\t\tthis.position = 0;\n\n\t}\n\n\tpublic getBytesAvailable():number\n\t{\n\t\treturn ( this.length ) - ( this.position );\n\t}\n\n\tpublic ensureSpace(n:number)\n\t{\n\t\tif (n > this.maxlength) {\n\t\t\tvar newmaxlength:number = (n + 255) & (~255);\n\t\t\tvar newarraybuffer = new ArrayBuffer(newmaxlength);\n\t\t\tvar view = new Uint8Array(this.arraybytes, 0, this.length);\n\t\t\tvar newview = new Uint8Array(newarraybuffer, 0, this.length);\n\t\t\tnewview.set(view);      // memcpy\n\t\t\tthis.arraybytes = newarraybuffer;\n\t\t\tthis.maxlength = newmaxlength;\n\t\t}\n\t}\n\n\tpublic writeByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\n\t\tvar view = new Int8Array(this.arraybytes);\n\t\tview[ this.position++ ] = (~~b); // ~~ is cast to int in js...\n\t\tif (this.position > this.length) {\n\t\t\tthis.length = this.position;\n\t\t}\n\t}\n\n\tpublic readByte()\n\t{\n\t\tif (this.position >= this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view = new Int8Array(this.arraybytes);\n\n\t\treturn view[ this.position++ ];\n\t}\n\n\tpublic readBytes(bytes:ByteArray, offset:number = 0, length:number = 0)\n\t{\n\t\tif (length == null)\n\t\t\tlength = bytes.length;\n\n\t\tbytes.ensureWriteableSpace(offset + length);\n\n\t\tvar byteView:Int8Array = new Int8Array(bytes.arraybytes);\n\t\tvar localByteView:Int8Array = new Int8Array(this.arraybytes);\n\n\t\tbyteView.set(localByteView.subarray(this.position, this.position + length), offset);\n\n\t\tthis.position += length;\n\n\t\tif (length + offset > bytes.length)\n\t\t\tbytes.length += ( length + offset ) - bytes.length;\n\t}\n\n\tpublic writeUnsignedByte(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(1);\n\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\tview[this.position++] = (~~b) & 0xff; // ~~ is cast to int in js...\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUnsignedByte()\n\t{\n\t\tif (this.position >= this.length)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tvar view = new Uint8Array(this.arraybytes);\n\t\treturn view[this.position++];\n\t}\n\n\tpublic writeUnsignedShort(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(2);\n\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tview[ this.position >> 1 ] = (~~b) & 0xffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview2.set(view3);\n\t\t}\n\n\t\tthis.position += 2;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUTFBytes(len:number):string\n\t{\n\t\tvar value:string = \"\";\n\t\tvar max:number = this.position + len;\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\n\t\t// utf8-encode\n\t\twhile (this.position < max) {\n\n\t\t\tvar c:number = data.getUint8(this.position++);\n\n\t\t\tif (c < 0x80) {\n\n\t\t\t\tif (c == 0) break;\n\t\t\t\tvalue += String.fromCharCode(c);\n\n\t\t\t} else if (c < 0xE0) {\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x3F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else if (c < 0xF0) {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvalue += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t} else {\n\n\t\t\t\tvar c2 = data.getUint8(this.position++);\n\t\t\t\tvar c3 = data.getUint8(this.position++);\n\n\t\t\t\tvalue += String.fromCharCode(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8(this.position++) & 0x7F));\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic readInt():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar int:number = data.getInt32(this.position, true);\n\n\t\tthis.position += 4;\n\n\t\treturn int;\n\t}\n\n\tpublic readShort():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar short:number = data.getInt16(this.position, true);\n\n\t\tthis.position += 2;\n\n\t\treturn short;\n\t}\n\n\tpublic readDouble():number\n\t{\n\t\tvar data:DataView = new DataView(this.arraybytes);\n\t\tvar double:number = data.getFloat64(this.position, true);\n\n\t\tthis.position += 8;\n\n\t\treturn double;\n\t}\n\n\tpublic readUnsignedShort()\n\t{\n\t\tif (this.position > this.length + 2)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tif (( this.position & 1 ) == 0) {\n\t\t\tvar view = new Uint16Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 1;\n\t\t\tthis.position += 2;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint16Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 2);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 2);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 2;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeUnsignedInt(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = (~~b) & 0xffffffff; // ~~ is cast to int in js...\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = (~~b) & 0xffffffff;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readUnsignedInt()\n\t{\n\t\tif (this.position > this.length + 4)\n\t\t\tthrow \"ByteArray out of bounds read. Position=\" + this.position + \", Length=\" + this.length;\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Uint32Array(this.arraybytes);\n\t\t\tvar pa:number = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[ pa ];\n\t\t} else {\n\t\t\tvar view = new Uint32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[0];\n\t\t}\n\t}\n\n\tpublic writeFloat(b:number)\n\t{\n\t\tthis.ensureWriteableSpace(4);\n\n\t\tif (( this.position & 3 ) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tview[ this.position >> 2 ] = b;\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tview[0] = b;\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview2.set(view3);\n\t\t}\n\t\tthis.position += 4;\n\n\t\tif (this.position > this.length)\n\t\t\tthis.length = this.position;\n\t}\n\n\tpublic readFloat()\n\t{\n\t\tif (this.position > this.length + 4)\n\t\t\tthrow \"ByteArray out of bounds read. Positon=\" + this.position + \", Length=\" + this.length;\n\n\t\tif ((this.position & 3) == 0) {\n\t\t\tvar view = new Float32Array(this.arraybytes);\n\t\t\tvar pa = this.position >> 2;\n\t\t\tthis.position += 4;\n\t\t\treturn view[pa];\n\t\t} else {\n\t\t\tvar view = new Float32Array(this.unalignedarraybytestemp, 0, 1);\n\t\t\tvar view2 = new Uint8Array(this.arraybytes, this.position, 4);\n\t\t\tvar view3 = new Uint8Array(this.unalignedarraybytestemp, 0, 4);\n\t\t\tview3.set(view2);\n\t\t\tthis.position += 4;\n\t\t\treturn view[ 0 ];\n\t\t}\n\t}\n}\n\nexport default ByteArray;",
    "class CSS\n{\n\tpublic static setElementSize(element:HTMLElement, width:number, height:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.width = width + \"px\";\n\t\telement.style.height = height + \"px\";\n\t\telement[\"width\"] = width;\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementWidth(element:HTMLElement, width:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.width = width + \"px\";\n\t\telement[\"width\"] = width;\n\t}\n\n\tpublic static setElementHeight(element:HTMLElement, height:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.height = height + \"px\";\n\t\telement[\"height\"] = height;\n\t}\n\n\tpublic static setElementX(element:HTMLElement, x:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.position = 'absolute';\n\t\telement.style.left = x + \"px\";\n\t}\n\n\tpublic static setElementY(element:HTMLElement, y:number)\n\t{\n\t\tif(!element) return;\n\t\telement.style.position = 'absolute';\n\t\telement.style.top = y + \"px\";\n\t}\n\n\tpublic static getElementVisibility(element:HTMLElement):boolean\n\t{\n\t\tif(!element) return false;\n\t\treturn element.style.visibility == 'visible';\n\t}\n\n\tpublic static setElementVisibility(element:HTMLElement, visible:boolean)\n\t{\n\t\tif(!element) return;\n\t\tif (visible) {\n\t\t\telement.style.visibility = 'visible';\n\t\t} else {\n\t\t\telement.style.visibility = 'hidden';\n\t\t}\n\t}\n\n\tpublic static setElementAlpha(element:HTMLElement, alpha:number)\n\t{\n\t\tif (element instanceof HTMLCanvasElement) {\n\t\t\tvar context = (<HTMLCanvasElement> element).getContext(\"2d\");\n\t\t\tcontext.globalAlpha = alpha;\n\t\t}\n\t}\n\n\tpublic static setElementPosition(element:HTMLElement, x:number, y:number, absolute:boolean = false)\n\t{\n\t\tif(!element) return;\n\t\tif (absolute) {\n\t\t\telement.style.position = \"absolute\";\n\t\t} else {\n\t\t\telement.style.position = \"relative\";\n\t\t}\n\n\t\telement.style.left = x + \"px\";\n\t\telement.style.top = y + \"px\";\n\t}\n}\n\nexport default CSS;",
    "/**\n *\n */\nclass ColorUtils\n{\n\tpublic static float32ColorToARGB(float32Color:number):number[]\n\t{\n\t\tvar a:number = ( float32Color & 0xff000000 ) >>> 24;\n\t\tvar r:number = ( float32Color & 0xff0000 ) >>> 16;\n\t\tvar g:number = ( float32Color & 0xff00 ) >>> 8;\n\t\tvar b:number = float32Color & 0xff;\n\t\tvar result:number[] = [ a, r , g , b ];\n\n\t\treturn result;\n\t}\n\n\tpublic static ARGBtoFloat32(a:number, r:number, g:number, b:number):number\n\t{\n\t\treturn ((a << 24) | (r << 16) | (g << 8) | b);\n\t}\n\n\tprivate static componentToHex(c:number):string\n\t{\n\t\tvar hex = c.toString(16);\n\t\treturn hex.length == 1? \"0\" + hex : hex;\n\t}\n\n\tpublic static RGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n\n\tpublic static ARGBToHexString(argb:number[]):string\n\t{\n\t\treturn \"#\" + ColorUtils.componentToHex(argb[0]) + ColorUtils.componentToHex(argb[1]) + ColorUtils.componentToHex(argb[2]) + ColorUtils.componentToHex(argb[3]);\n\t}\n}\n\nexport default ColorUtils;",
    "import PartialImplementationError\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\n\n/**\n *\n */\nclass Debug\n{\n\tpublic static THROW_ERRORS:boolean = true;\n\tpublic static ENABLE_LOG:boolean = true;\n\tpublic static LOG_PI_ERRORS:boolean = true;\n\n\tprivate static keyword:string = null;\n\n\tpublic static breakpoint():void\n\t{\n\t\tDebug['break']();\n\t}\n\n\tpublic static throwPIROnKeyWordOnly(str:string, enable:boolean = true)\n\t{\n\t\tif (!enable)\n\t\t\tDebug.keyword = null;\n\t\telse\n\t\t\tDebug.keyword = str;\n\t}\n\n\tpublic static throwPIR(clss:string, fnc:string, msg:string)\n\t{\n\t\tDebug.logPIR('PartialImplementationError ' + clss, fnc, msg);\n\n\t\tif (Debug.THROW_ERRORS) {\n\t\t\tif (Debug.keyword) {\n\t\t\t\tvar e:string = clss + fnc + msg;\n\n\t\t\t\tif (e.indexOf(Debug.keyword) == -1)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthrow new PartialImplementationError(clss + '.' + fnc + ': ' + msg);\n\t\t}\n\t}\n\n\tprivate static logPIR(clss:string, fnc:string, msg:string = '')\n\t{\n\t\tif (Debug.LOG_PI_ERRORS)\n\t\t\tconsole.log(clss + '.' + fnc + ': ' + msg);\n\t}\n\n\tpublic static log(...args:any[])\n\t{\n\t\tif (Debug.ENABLE_LOG)\n\t\t\tconsole.log(args);\n\t}\n}\n\nexport default Debug;",
    "declare var SIMD:any;\n\n/**\n *\n */\nclass Extensions\n{\n\tpublic static SIMD:boolean = Boolean(typeof(SIMD) !== \"undefined\");\n}\n\nexport default Extensions;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nclass ImageUtils\n{\n\tprivate static MAX_SIZE:number = 2048;\n\n\tpublic static isImage2DValid(image2D:Image2D):boolean\n\t{\n\t\tif (image2D == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image2D.width, image2D.powerOfTwo) && ImageUtils.isDimensionValid(image2D.height, image2D.powerOfTwo);\n\t}\n\n\tpublic static isHTMLImageElementValid(image:HTMLImageElement):boolean\n\t{\n\t\tif (image == null)\n\t\t\treturn true;\n\n\t\treturn ImageUtils.isDimensionValid(image.width) && ImageUtils.isDimensionValid(image.height);\n\t}\n\n\tpublic static isDimensionValid(d:number, powerOfTwo:boolean = true):boolean\n\t{\n\t\treturn d >= 1 && d <= ImageUtils.MAX_SIZE && (!powerOfTwo || ImageUtils.isPowerOfTwo(d));\n\t}\n\n\tpublic static isPowerOfTwo(value:number):boolean\n\t{\n\t\treturn value? ((value & -value) == value) : false;\n\t}\n\n\tpublic static getBestPowerOf2(value:number):number\n\t{\n\t\tvar p:number = 1;\n\n\t\twhile (p < value)\n\t\t\tp <<= 1;\n\n\t\tif (p > ImageUtils.MAX_SIZE)\n\t\t\tp = ImageUtils.MAX_SIZE;\n\n\t\treturn p;\n\t}\n}\n\nexport default ImageUtils",
    "import BitmapImage2D            from \"awayjs-core/lib/image/BitmapImage2D\";\nimport CPUCanvas            from \"awayjs-core/lib/image/CPUCanvas\";\nimport Matrix                    from \"awayjs-core/lib/geom/Matrix\";\nimport Rectangle                from \"awayjs-core/lib/geom/Rectangle\";\n\nclass MipmapGenerator {\n    private static _mipMaps = [];\n    private static _mipMapUses = [];\n\n    private static _matrix:Matrix = new Matrix();\n    private static _rect:Rectangle = new Rectangle();\n    private static _source:BitmapImage2D;\n\n    /**\n     * Uploads a BitmapImage2D with mip maps to a target Texture object.\n     * @param source The source to upload.\n     * @param target The target Texture to upload to.\n     * @param mipmap An optional mip map holder to avoids creating new instances for fe animated materials.\n     * @param alpha Indicate whether or not the uploaded bitmapData is transparent.\n     */\n    public static _generateMipMaps(source:HTMLElement, output?:Array<BitmapImage2D>, alpha?:boolean);\n    public static _generateMipMaps(source:BitmapImage2D, output?:Array<BitmapImage2D>, alpha?:boolean);\n    public static _generateMipMaps(source:any, output?:Array<BitmapImage2D>, alpha:boolean = false) {\n        var w:number = source.width;\n        var h:number = source.height;\n        var i:number = 0;\n\n        var mipmap:BitmapImage2D;\n\n        MipmapGenerator._rect.width = w;\n        MipmapGenerator._rect.height = h;\n\n        //use (OR) to create non-square texture mipmaps\n        while (w >= 1 || h >= 1) {\n\n            mipmap = output[i] = MipmapGenerator._getMipmapHolder(output[i], MipmapGenerator._rect.width, MipmapGenerator._rect.height);\n\n            if (alpha)\n                mipmap.fillRect(MipmapGenerator._rect, 0);\n\n\n            MipmapGenerator._matrix.a = MipmapGenerator._rect.width / source.width;\n            MipmapGenerator._matrix.d = MipmapGenerator._rect.height / source.height;\n            //todo: add support for NPOT textures\n            if (document) {\n                mipmap.draw(source, MipmapGenerator._matrix); //TODO: smoothing?\n            } else {\n                if (source.constructor.toString().indexOf(\"BitmapImage2D\") > -1) {\n                    //for BitmapImage2D\n                    var bitmapImage:BitmapImage2D = <BitmapImage2D> source;\n                    bitmapImage.lock();\n                    mipmap.lock();\n                    this.downsampleImage(bitmapImage.getImageData(), mipmap.getImageData());\n                    mipmap.unlock();\n                    bitmapImage.unlock();\n                }else if(source.constructor.toString().indexOf(\"CPUCanvas\") > -1){\n                    this.downsampleImage(source.getImageData(), mipmap.getImageData());\n                } else {\n                    //for imageData\n                    this.downsampleImage(source, mipmap.getImageData());\n                }\n            }\n\n            w >>= 1;\n            h >>= 1;\n\n            MipmapGenerator._rect.width = w > 1 ? w : 1;\n            MipmapGenerator._rect.height = h > 1 ? h : 1;\n\n            i++;\n        }\n    }\n\n    private static _getMipmapHolder(mipMapHolder:BitmapImage2D, newW:number, newH:number):BitmapImage2D {\n        if (mipMapHolder) {\n            if (mipMapHolder.width == newW && mipMapHolder.height == newH)\n                return mipMapHolder;\n\n            MipmapGenerator._freeMipMapHolder(mipMapHolder);\n        }\n\n        if (!MipmapGenerator._mipMaps[newW]) {\n            MipmapGenerator._mipMaps[newW] = [];\n            MipmapGenerator._mipMapUses[newW] = [];\n        }\n\n        if (!MipmapGenerator._mipMaps[newW][newH]) {\n            mipMapHolder = MipmapGenerator._mipMaps[newW][newH] = new BitmapImage2D(newW, newH, true);\n            MipmapGenerator._mipMapUses[newW][newH] = 1;\n        } else {\n            MipmapGenerator._mipMapUses[newW][newH] = MipmapGenerator._mipMapUses[newW][newH] + 1;\n            mipMapHolder = MipmapGenerator._mipMaps[newW][newH];\n        }\n\n        return mipMapHolder;\n    }\n\n    public static _freeMipMapHolder(mipMapHolder:BitmapImage2D) {\n        var holderWidth:number = mipMapHolder.width;\n        var holderHeight:number = mipMapHolder.height;\n\n        if (--MipmapGenerator._mipMapUses[holderWidth][holderHeight] == 0) {\n            MipmapGenerator._mipMaps[holderWidth][holderHeight].dispose();\n            MipmapGenerator._mipMaps[holderWidth][holderHeight] = null;\n        }\n    }\n\n    public static downsampleImage(bitmap:ImageData, destBitmap:ImageData):ImageData {\n        var box:BoxFilter = new BoxFilter();\n        var xkernel:PolyphaseKernel = new PolyphaseKernel(box, bitmap.width, destBitmap.width, 4);\n        var ykernel:PolyphaseKernel = new PolyphaseKernel(box, bitmap.height, destBitmap.height, 4);\n\n        var tempBitmap:number[] = [];//destBitmap.width, bitmap.height\n\n        var scale:number = 0;\n        var iscale:number = 0;\n        var kernelLength:number = 0;\n        var kernelWidth:number = 0;\n        var kernelWindowSize:number = 0;\n        var sumR:number = 0;\n        var sumG:number = 0;\n        var sumB:number = 0;\n        var sumA:number = 0;\n        var center:number;\n        var left:number;\n        var i:number = 0;\n        var j:number = 0;\n        var index:number = 0;\n\n        for (var y:number = 0; y < bitmap.height; y++) {\n            kernelLength = xkernel.len;\n            scale = kernelLength / bitmap.width;\n            iscale = 1.0 / scale;\n            kernelWidth = xkernel.width;\n            kernelWindowSize = xkernel.windowSize;\n\n            for (i = 0; i < kernelLength; i++) {\n                center = (0.5 + i) * iscale;\n                left = Math.floor(center - kernelWidth);\n                sumR = 0;\n                sumG = 0;\n                sumB = 0;\n                sumA = 0;\n                for (var j:number = 0; j < kernelWindowSize; ++j) {\n                    index = (y * bitmap.width + (left + j) ) * 4;\n                    var colorR:number = bitmap.data[index];\n                    var colorG:number = bitmap.data[index + 1];\n                    var colorB:number = bitmap.data[index + 2];\n                    var colorA:number = bitmap.data[index + 3];\n\n                    var value:number = xkernel.valueAt(i, j);\n                    sumR += value * colorR;\n                    sumG += value * colorG;\n                    sumB += value * colorB;\n                    sumA += value * colorA;\n                }\n\n                index = (y * destBitmap.width + i) * 4;\n                tempBitmap[index] = sumR;\n                tempBitmap[index + 1] = sumG;\n                tempBitmap[index + 2] = sumB;\n                tempBitmap[index + 3] = sumA;\n            }\n        }\n\n        for (var x:number = 0; x < destBitmap.width; x++) {\n            kernelLength = ykernel.len;\n            scale = kernelLength / bitmap.height;\n            iscale = 1.0 / scale;\n            kernelWidth = ykernel.width;\n            kernelWindowSize = ykernel.windowSize;\n\n            for (i = 0; i < kernelLength; i++) {\n                center = (0.5 + i) * iscale;\n\n                left = Math.floor(center - kernelWidth);\n\n                sumR = 0;\n                sumG = 0;\n                sumB = 0;\n                sumA = 0;\n                for (j = 0; j < kernelWindowSize; ++j) {\n                    index = ((j + left) * destBitmap.width + x) * 4;\n                    var colorR:number = tempBitmap[index];\n                    var colorG:number = tempBitmap[index + 1];\n                    var colorB:number = tempBitmap[index + 2];\n                    var colorA:number = tempBitmap[index + 3];\n\n                    var value:number = ykernel.valueAt(i, j);\n                    sumR += value * colorR;\n                    sumG += value * colorG;\n                    sumB += value * colorB;\n                    sumA += value * colorA;\n                }\n\n                index = (i * destBitmap.width + x) * 4;\n                destBitmap.data[index] = sumR;\n                destBitmap.data[index + 1] = sumG;\n                destBitmap.data[index + 2] = sumB;\n                destBitmap.data[index + 3] = sumA;\n            }\n        }\n\n        return destBitmap;\n    }\n}\nclass PolyphaseKernel {\n    public len:number;\n    public width:number;\n    public windowSize:number;\n    public data:number[];\n\n    constructor(f:BoxFilter, srcLength:number, dstLength:number, samples:number) {\n\n        var scale:number = dstLength / srcLength;\n        var iscale:number = 1.0 / scale;\n\n        if (scale > 1) {\n            // Upsampling.\n            samples = 1;\n            scale = 1;\n        }\n\n        this.len = dstLength;\n        this.width = f.width * iscale;\n        this.windowSize = Math.ceil(this.width * 2);\n\n        this.data = [];\n\n        for (var i:number = 0; i < this.len; i++) {\n            var center:number = (0.5 + i) * iscale;\n\n            var left:number = Math.floor(center - this.width);\n\n            var total:number = 0.0;\n            for (var j:number = 0; j < this.windowSize; j++) {\n                var sample:number = f.sampleBox(left + j - center, scale, samples);\n\n                //printf(\"%f %X\\n\", sample, *(uint32 *)&sample);\n\n                this.data[i * this.windowSize + j] = sample;\n                total += sample;\n            }\n\n            // normalize weights.\n            for (var j:number = 0; j < this.windowSize; j++) {\n                this.data[i * this.windowSize + j] /= total;\n            }\n        }\n    }\n\n    public valueAt(column:number, x:number):number {\n        return this.data[column * this.windowSize + x];\n    }\n}\n\nclass BoxFilter {\n    public get width():number {\n        return 0.5;\n    }\n\n    public sampleBox(x:number, scale:number, samples:number):number {\n        var sum:number = 0;\n        var isamples:number = 1.0 / samples;\n\n        for (var s:number = 0; s < samples; s++) {\n            var p:number = (x + (s + 0.5) * isamples) * scale;\n            var value:number = this.evaluate(p);\n            sum += value;\n        }\n\n        return sum * isamples;\n    }\n\n    public evaluate(x:number):number {\n        if (Math.abs(x) <= this.width) return 1.0;\n        else return 0.0;\n    }\n}\nexport default MipmapGenerator;",
    "import getTimer\t\t\t\t\tfrom \"awayjs-core/lib/utils/getTimer\";\n\nclass RequestAnimationFrame\n{\n\tprivate _callback:Function;\n\tprivate _callbackContext:Object;\n\tprivate _active:boolean = false;\n\tprivate _rafUpdateFunction:any;\n\tprivate _prevTime:number;\n\tprivate _dt:number;\n\tprivate _currentTime:number;\n\tprivate _argsArray:Array<any> = new Array();\n\tprivate _getTimer:Function;\n\n\tconstructor(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._getTimer = getTimer;\n\n\t\tthis.setCallback(callback, callbackContext);\n\n\t\tthis._rafUpdateFunction = () => {\n\t\t\tif (this._active)\n\t\t\t\tthis._tick();\n\t\t}\n\n\t\tthis._argsArray.push(this._dt);\n\t}\n\n\t// Public\n\n\t/**\n\t *\n\t * @param callback\n\t * @param callbackContext\n\t */\n\tpublic setCallback(callback:Function, callbackContext:Object)\n\t{\n\t\tthis._callback = callback;\n\t\tthis._callbackContext = callbackContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic start()\n\t{\n\t\tthis._prevTime = this._getTimer();\n\t\tthis._active = true;\n\n\t\tif(window) {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\t\t\t} else {\n\t\t\t\tif (window['mozRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['mozRequestAnimationFrame'];\n\t\t\t\telse if (window['webkitRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['webkitRequestAnimationFrame'];\n\t\t\t\telse if (window['oRequestAnimationFrame'])\n\t\t\t\t\twindow.requestAnimationFrame = window['oRequestAnimationFrame'];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic stop()\n\t{\n\t\tthis._active = false;\n\t}\n\n\t// Get / Set\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic get active():boolean\n\t{\n\t\treturn this._active;\n\t}\n\n\t// Private\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _tick():void\n\t{\n\t\tthis._currentTime = this._getTimer();\n\t\tthis._dt = this._currentTime - this._prevTime;\n\t\tthis._argsArray[0] = this._dt;\n\t\tthis._callback.apply(this._callbackContext, this._argsArray);\n\n\t\twindow.requestAnimationFrame(this._rafUpdateFunction);\n\n\t\tthis._prevTime = this._currentTime;\n\t}\n\n\n}\n\nexport default RequestAnimationFrame;",
    "import ErrorBase\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\nimport EventDispatcher\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport TimerEvent\t\t\t\tfrom \"awayjs-core/lib/events/TimerEvent\";\n\nclass Timer extends EventDispatcher\n{\n\tprivate _delay:number;\n\tprivate _repeatCount:number = 0;\n\tprivate _currentCount:number = 0;\n\tprivate _iid:number;\n\tprivate _running:boolean = false;\n\n\tconstructor(delay:number, repeatCount:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._delay = delay;\n\t\tthis._repeatCount = repeatCount;\n\n\t\tif (isNaN(delay) || delay < 0)\n\t\t\tthrow new ErrorBase(\"Delay is negative or not a number\");\n\t}\n\n\tpublic get currentCount():number\n\t{\n\t\treturn this._currentCount;\n\t}\n\n\tpublic get delay():number\n\t{\n\t\treturn this._delay;\n\t}\n\n\tpublic set delay(value:number)\n\t{\n\t\tthis._delay = value;\n\n\t\tif (this._running) {\n\t\t\tthis.stop();\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\tpublic get repeatCount():number\n\t{\n\t\treturn this._repeatCount;\n\t}\n\n\tpublic set repeatCount(value:number)\n\t{\n\t\tthis._repeatCount = value;\n\t}\n\n\tpublic reset():void\n\t{\n\t\tif (this._running)\n\t\t\tthis.stop();\n\n\t\tthis._currentCount = 0;\n\t}\n\n\tpublic get running():boolean\n\t{\n\t\treturn this._running;\n\t}\n\n\tpublic start():void\n\t{\n\t\tthis._running = true;\n\t\tclearInterval(this._iid);\n\t\tthis._iid = setInterval(() => this.tick(), this._delay);\n\t}\n\n\tpublic stop():void\n\t{\n\t\tthis._running = false;\n\t\tclearInterval(this._iid);\n\t}\n\n\tprivate tick():void\n\t{\n\t\tthis._currentCount++;\n\n\t\tif (( this._repeatCount > 0 ) && this._currentCount >= this._repeatCount) {\n\n\t\t\tthis.stop();\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER_COMPLETE));\n\n\t\t} else {\n\t\t\tthis.dispatchEvent(new TimerEvent(TimerEvent.TIMER));\n\t\t}\n\t}\n}\n\nexport default Timer;",
    "class XmlUtils {\n\n\tpublic static getChildrenWithTag(node:Node, tag:string):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(node) {\n\t\t\tvar num:number = node.childNodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = node.childNodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.nodeName == tag) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static filterListByParam(nodes:NodeList, paramName:string, paramValue):NodeList {\n\n\t\tvar fragment:DocumentFragment = document.createDocumentFragment();\n\n\t\tif(nodes) {\n\t\t\tvar num:number = nodes.length;\n\t\t\tfor(var i:number = 0; i < num; i++) {\n\t\t\t\tvar child:Node = nodes[i];\n\t\t\t\tif(child != null) {\n\t\t\t\t\tif(child.attributes.getNamedItem(paramName).value == paramValue) {\n\t\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment.childNodes;\n\t}\n\n\tpublic static strToXml(str:string):Node {\n\t\tvar parser:DOMParser = new DOMParser();\n\t\tvar node:Node = parser.parseFromString(str, \"text/xml\");\n\t\treturn node;\n\t}\n\n\tpublic static nodeToString(node:Node):string {\n\t\tif(!node) return \"\";\n\t\tvar str = (new XMLSerializer()).serializeToString(node);\n\t\treturn str;\n\t}\n\n\tpublic static readAttributeValue(node:Node, attrName:string):string {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn \"\";\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\tif(!attribute) {\n\t\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", attribute does not exist.\";\n\t\t\treturn \"\";\n\t\t}\n\t\t//console.log(\"XmlUltils - readAttributeValue() - name: \" + attrName + \", value: \" + attribute.value);\n\t\treturn attribute.value;\n\t}\n\n\tpublic static writeAttributeValue(node:Node, attrName:string, attrValue:string) {\n\t\tvar attribute:Attr = new Attr();\n\t\tattribute.name = attrName;\n\t\tattribute.value = attrValue;\n\t\tattribute = node.attributes.setNamedItem(attribute);\n\t\tconsole.log(\"XmlUltils - writeAttributeValue() - name: \" + attribute.name + \", value: \" + attribute.value);\n\t}\n\n\tpublic static hasAttribute(node:Node, attrName:string):boolean {\n\t\tvar attrs = node.attributes;\n\t\tif(attrs == undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tvar attribute:Attr = attrs.getNamedItem(attrName);\n\t\treturn attribute != null;\n\t}\n}\nexport default XmlUtils;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "/**\n *\n *\n * @returns {number}\n */\nfunction getTimer():number\n{\n\t// number milliseconds of 1970/01/01\n\t// this different to AS3 implementation which gets the number of milliseconds\n\t// since instance of Flash player was initialised\n\treturn Date.now();\n}\n\nexport default getTimer;",
    "export {default as BitmapImageUtils}\t\t\t\tfrom \"awayjs-core/lib/utils/BitmapImageUtils\";\nexport {default as ByteArray}\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\nexport {default as ByteArrayBase}\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArrayBase\";\nexport {default as ByteArrayBuffer}\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArrayBuffer\";\nexport {default as ColorUtils}\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/ColorUtils\";\nexport {default as CSS}\t\t\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/CSS\";\nexport {default as Debug}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/Debug\";\nexport {default as Extensions}\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/Extensions\";\nexport {default as getTimer}\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/getTimer\";\nexport {default as IArrayBufferViewClass}\t\t\tfrom \"awayjs-core/lib/utils/IArrayBufferViewClass\";\nexport {default as ImageUtils}\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/ImageUtils\";\nexport {default as MipmapGenerator}\t\t\t\t\tfrom \"awayjs-core/lib/utils/MipmapGenerator\";\nexport {default as RequestAnimationFrame}\t\t\tfrom \"awayjs-core/lib/utils/RequestAnimationFrame\";\nexport {default as Timer}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/Timer\";\nexport {default as XmlUtils}\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/XmlUtils\";"
  ],
  "sourceRoot": ""
}